// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/os/ps.proto

#include "frameworks/base/core/proto/android/os/ps.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PsProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto;
namespace android {
namespace os {
class PsProto_ProcessDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PsProto_Process> _instance;
} _PsProto_Process_default_instance_;
class PsProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PsProto> _instance;
} _PsProto_default_instance_;
}  // namespace os
}  // namespace android
static void InitDefaultsscc_info_PsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::_PsProto_default_instance_;
    new (ptr) ::android::os::PsProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::PsProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_PsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto}, {
      &scc_info_PsProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto.base,}};

static void InitDefaultsscc_info_PsProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::_PsProto_Process_default_instance_;
    new (ptr) ::android::os::PsProto_Process();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::PsProto_Process::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PsProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PsProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, label_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, user_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, pid_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, tid_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, ppid_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, vsz_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, rss_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, wchan_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, addr_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, s_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, pri_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, ni_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, rtprio_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, sch_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, pcy_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, time_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto_Process, cmd_),
  0,
  1,
  7,
  8,
  9,
  10,
  11,
  2,
  3,
  12,
  13,
  14,
  4,
  15,
  16,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::os::PsProto, processes_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 22, sizeof(::android::os::PsProto_Process)},
  { 39, 45, sizeof(::android::os::PsProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::os::_PsProto_Process_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::os::_PsProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n.frameworks/base/core/proto/android/os/"
  "ps.proto\022\nandroid.os\0320frameworks/base/co"
  "re/proto/android/privacy.proto\"\231\006\n\007PsPro"
  "to\022.\n\tprocesses\030\001 \003(\0132\033.android.os.PsPro"
  "to.Process\032\322\005\n\007Process\022\r\n\005label\030\001 \001(\t\022\014\n"
  "\004user\030\002 \001(\t\022\013\n\003pid\030\003 \001(\005\022\013\n\003tid\030\004 \001(\005\022\014\n"
  "\004ppid\030\005 \001(\005\022\013\n\003vsz\030\006 \001(\005\022\013\n\003rss\030\007 \001(\005\022\r\n"
  "\005wchan\030\010 \001(\t\022\026\n\004addr\030\t \001(\tB\010\232\237\325\207\003\002\010\000\0227\n\001"
  "s\030\n \001(\0162,.android.os.PsProto.Process.Pro"
  "cessStateCode\022\013\n\003pri\030\013 \001(\005\022\n\n\002ni\030\014 \001(\021\022\016"
  "\n\006rtprio\030\r \001(\t\0229\n\003sch\030\016 \001(\0162,.android.os"
  ".PsProto.Process.SchedulingPolicy\022/\n\003pcy"
  "\030\017 \001(\0162\".android.os.PsProto.Process.Poli"
  "cy\022\014\n\004time\030\020 \001(\t\022\013\n\003cmd\030\021 \001(\t\"\206\001\n\020Proces"
  "sStateCode\022\021\n\rSTATE_UNKNOWN\020\000\022\013\n\007STATE_D"
  "\020\001\022\013\n\007STATE_R\020\002\022\013\n\007STATE_S\020\003\022\013\n\007STATE_T\020"
  "\004\022\021\n\rSTATE_TRACING\020\005\022\013\n\007STATE_X\020\006\022\013\n\007STA"
  "TE_Z\020\007\"y\n\020SchedulingPolicy\022\r\n\tSCH_OTHER\020"
  "\000\022\016\n\nSCH_NORMAL\020\000\022\014\n\010SCH_FIFO\020\001\022\n\n\006SCH_R"
  "R\020\002\022\r\n\tSCH_BATCH\020\003\022\013\n\007SCH_ISO\020\004\022\014\n\010SCH_I"
  "DLE\020\005\032\002\020\001\"I\n\006Policy\022\022\n\016POLICY_UNKNOWN\020\000\022"
  "\r\n\tPOLICY_FG\020\001\022\r\n\tPOLICY_BG\020\002\022\r\n\tPOLICY_"
  "TA\020\003:\t\232\237\325\207\003\003\010\310\001:\t\232\237\325\207\003\003\010\310\001B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto_deps[1] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto_sccs[2] = {
  &scc_info_PsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto.base,
  &scc_info_PsProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto, "frameworks/base/core/proto/android/os/ps.proto", 910,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto, 2, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto), true);
namespace android {
namespace os {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PsProto_Process_ProcessStateCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto[0];
}
bool PsProto_Process_ProcessStateCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PsProto_Process_ProcessStateCode PsProto_Process::STATE_UNKNOWN;
constexpr PsProto_Process_ProcessStateCode PsProto_Process::STATE_D;
constexpr PsProto_Process_ProcessStateCode PsProto_Process::STATE_R;
constexpr PsProto_Process_ProcessStateCode PsProto_Process::STATE_S;
constexpr PsProto_Process_ProcessStateCode PsProto_Process::STATE_T;
constexpr PsProto_Process_ProcessStateCode PsProto_Process::STATE_TRACING;
constexpr PsProto_Process_ProcessStateCode PsProto_Process::STATE_X;
constexpr PsProto_Process_ProcessStateCode PsProto_Process::STATE_Z;
constexpr PsProto_Process_ProcessStateCode PsProto_Process::ProcessStateCode_MIN;
constexpr PsProto_Process_ProcessStateCode PsProto_Process::ProcessStateCode_MAX;
constexpr int PsProto_Process::ProcessStateCode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PsProto_Process_SchedulingPolicy_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto[1];
}
bool PsProto_Process_SchedulingPolicy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PsProto_Process_SchedulingPolicy PsProto_Process::SCH_OTHER;
constexpr PsProto_Process_SchedulingPolicy PsProto_Process::SCH_NORMAL;
constexpr PsProto_Process_SchedulingPolicy PsProto_Process::SCH_FIFO;
constexpr PsProto_Process_SchedulingPolicy PsProto_Process::SCH_RR;
constexpr PsProto_Process_SchedulingPolicy PsProto_Process::SCH_BATCH;
constexpr PsProto_Process_SchedulingPolicy PsProto_Process::SCH_ISO;
constexpr PsProto_Process_SchedulingPolicy PsProto_Process::SCH_IDLE;
constexpr PsProto_Process_SchedulingPolicy PsProto_Process::SchedulingPolicy_MIN;
constexpr PsProto_Process_SchedulingPolicy PsProto_Process::SchedulingPolicy_MAX;
constexpr int PsProto_Process::SchedulingPolicy_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PsProto_Process_Policy_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto[2];
}
bool PsProto_Process_Policy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PsProto_Process_Policy PsProto_Process::POLICY_UNKNOWN;
constexpr PsProto_Process_Policy PsProto_Process::POLICY_FG;
constexpr PsProto_Process_Policy PsProto_Process::POLICY_BG;
constexpr PsProto_Process_Policy PsProto_Process::POLICY_TA;
constexpr PsProto_Process_Policy PsProto_Process::Policy_MIN;
constexpr PsProto_Process_Policy PsProto_Process::Policy_MAX;
constexpr int PsProto_Process::Policy_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void PsProto_Process::InitAsDefaultInstance() {
}
class PsProto_Process::_Internal {
 public:
  using HasBits = decltype(std::declval<PsProto_Process>()._has_bits_);
  static void set_has_label(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_user(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_pid(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_tid(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_ppid(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_vsz(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_rss(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_wchan(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_addr(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_s(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_pri(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_ni(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_rtprio(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_sch(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_pcy(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_time(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_cmd(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

PsProto_Process::PsProto_Process()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.PsProto.Process)
}
PsProto_Process::PsProto_Process(const PsProto_Process& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_user()) {
    user_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  wchan_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_wchan()) {
    wchan_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.wchan_);
  }
  addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_addr()) {
    addr_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  rtprio_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_rtprio()) {
    rtprio_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rtprio_);
  }
  time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_time()) {
    time_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  cmd_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_cmd()) {
    cmd_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
  ::memcpy(&pid_, &from.pid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pcy_) -
    reinterpret_cast<char*>(&pid_)) + sizeof(pcy_));
  // @@protoc_insertion_point(copy_constructor:android.os.PsProto.Process)
}

void PsProto_Process::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PsProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto.base);
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wchan_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rtprio_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cmd_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&pid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pcy_) -
      reinterpret_cast<char*>(&pid_)) + sizeof(pcy_));
}

PsProto_Process::~PsProto_Process() {
  // @@protoc_insertion_point(destructor:android.os.PsProto.Process)
  SharedDtor();
}

void PsProto_Process::SharedDtor() {
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wchan_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rtprio_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cmd_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PsProto_Process::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PsProto_Process& PsProto_Process::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PsProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto.base);
  return *internal_default_instance();
}


void PsProto_Process::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.PsProto.Process)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      label_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      user_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      wchan_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      addr_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      rtprio_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      time_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      cmd_.ClearNonDefaultToEmptyNoArena();
    }
  }
  pid_ = 0;
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sch_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(sch_));
  }
  pcy_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PsProto_Process::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string label = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_label(), ptr, ctx, "android.os.PsProto.Process.label");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string user = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_user(), ptr, ctx, "android.os.PsProto.Process.user");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 pid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_pid(&has_bits);
          pid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 tid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_tid(&has_bits);
          tid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 ppid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_ppid(&has_bits);
          ppid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vsz = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_vsz(&has_bits);
          vsz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 rss = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_rss(&has_bits);
          rss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string wchan = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_wchan(), ptr, ctx, "android.os.PsProto.Process.wchan");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string addr = 9 [(.android.privacy) = {
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_addr(), ptr, ctx, "android.os.PsProto.Process.addr");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.os.PsProto.Process.ProcessStateCode s = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::os::PsProto_Process_ProcessStateCode_IsValid(val))) {
            set_s(static_cast<::android::os::PsProto_Process_ProcessStateCode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 pri = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_pri(&has_bits);
          pri_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional sint32 ni = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_ni(&has_bits);
          ni_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string rtprio = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_rtprio(), ptr, ctx, "android.os.PsProto.Process.rtprio");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.os.PsProto.Process.SchedulingPolicy sch = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::os::PsProto_Process_SchedulingPolicy_IsValid(val))) {
            set_sch(static_cast<::android::os::PsProto_Process_SchedulingPolicy>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(14, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.os.PsProto.Process.Policy pcy = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::os::PsProto_Process_Policy_IsValid(val))) {
            set_pcy(static_cast<::android::os::PsProto_Process_Policy>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(15, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional string time = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_time(), ptr, ctx, "android.os.PsProto.Process.time");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string cmd = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_cmd(), ptr, ctx, "android.os.PsProto.Process.cmd");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PsProto_Process::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.os.PsProto.Process)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string label = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.os.PsProto.Process.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user().data(), static_cast<int>(this->user().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.os.PsProto.Process.user");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pid = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_pid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tid = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_tid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ppid = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_ppid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &ppid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vsz = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_vsz(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &vsz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rss = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_rss(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &rss_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string wchan = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_wchan()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->wchan().data(), static_cast<int>(this->wchan().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.os.PsProto.Process.wchan");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string addr = 9 [(.android.privacy) = {
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->addr().data(), static_cast<int>(this->addr().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.os.PsProto.Process.addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.os.PsProto.Process.ProcessStateCode s = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::os::PsProto_Process_ProcessStateCode_IsValid(value)) {
            set_s(static_cast< ::android::os::PsProto_Process_ProcessStateCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pri = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          _Internal::set_has_pri(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &pri_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ni = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {
          _Internal::set_has_ni(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32>(
                 input, &ni_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string rtprio = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_rtprio()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rtprio().data(), static_cast<int>(this->rtprio().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.os.PsProto.Process.rtprio");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.os.PsProto.Process.SchedulingPolicy sch = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::os::PsProto_Process_SchedulingPolicy_IsValid(value)) {
            set_sch(static_cast< ::android::os::PsProto_Process_SchedulingPolicy >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                14, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.os.PsProto.Process.Policy pcy = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (120 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::os::PsProto_Process_Policy_IsValid(value)) {
            set_pcy(static_cast< ::android::os::PsProto_Process_Policy >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                15, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string time = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (130 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), static_cast<int>(this->time().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.os.PsProto.Process.time");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cmd = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (138 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cmd().data(), static_cast<int>(this->cmd().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.os.PsProto.Process.cmd");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.PsProto.Process)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.PsProto.Process)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PsProto_Process::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.PsProto.Process)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PsProto.Process.label");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // optional string user = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), static_cast<int>(this->user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PsProto.Process.user");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user(), output);
  }

  // optional int32 pid = 3;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->pid(), output);
  }

  // optional int32 tid = 4;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->tid(), output);
  }

  // optional int32 ppid = 5;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->ppid(), output);
  }

  // optional int32 vsz = 6;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->vsz(), output);
  }

  // optional int32 rss = 7;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->rss(), output);
  }

  // optional string wchan = 8;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wchan().data(), static_cast<int>(this->wchan().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PsProto.Process.wchan");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->wchan(), output);
  }

  // optional string addr = 9 [(.android.privacy) = {
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addr().data(), static_cast<int>(this->addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PsProto.Process.addr");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->addr(), output);
  }

  // optional .android.os.PsProto.Process.ProcessStateCode s = 10;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      10, this->s(), output);
  }

  // optional int32 pri = 11;
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(11, this->pri(), output);
  }

  // optional sint32 ni = 12;
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32(12, this->ni(), output);
  }

  // optional string rtprio = 13;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rtprio().data(), static_cast<int>(this->rtprio().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PsProto.Process.rtprio");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->rtprio(), output);
  }

  // optional .android.os.PsProto.Process.SchedulingPolicy sch = 14;
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      14, this->sch(), output);
  }

  // optional .android.os.PsProto.Process.Policy pcy = 15;
  if (cached_has_bits & 0x00010000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      15, this->pcy(), output);
  }

  // optional string time = 16;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PsProto.Process.time");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->time(), output);
  }

  // optional string cmd = 17;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PsProto.Process.cmd");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->cmd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.os.PsProto.Process)
}

::PROTOBUF_NAMESPACE_ID::uint8* PsProto_Process::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.os.PsProto.Process)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PsProto.Process.label");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // optional string user = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), static_cast<int>(this->user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PsProto.Process.user");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->user(), target);
  }

  // optional int32 pid = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->pid(), target);
  }

  // optional int32 tid = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->tid(), target);
  }

  // optional int32 ppid = 5;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->ppid(), target);
  }

  // optional int32 vsz = 6;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->vsz(), target);
  }

  // optional int32 rss = 7;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->rss(), target);
  }

  // optional string wchan = 8;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wchan().data(), static_cast<int>(this->wchan().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PsProto.Process.wchan");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        8, this->wchan(), target);
  }

  // optional string addr = 9 [(.android.privacy) = {
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addr().data(), static_cast<int>(this->addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PsProto.Process.addr");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        9, this->addr(), target);
  }

  // optional .android.os.PsProto.Process.ProcessStateCode s = 10;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->s(), target);
  }

  // optional int32 pri = 11;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->pri(), target);
  }

  // optional sint32 ni = 12;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(12, this->ni(), target);
  }

  // optional string rtprio = 13;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rtprio().data(), static_cast<int>(this->rtprio().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PsProto.Process.rtprio");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        13, this->rtprio(), target);
  }

  // optional .android.os.PsProto.Process.SchedulingPolicy sch = 14;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      14, this->sch(), target);
  }

  // optional .android.os.PsProto.Process.Policy pcy = 15;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      15, this->pcy(), target);
  }

  // optional string time = 16;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PsProto.Process.time");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        16, this->time(), target);
  }

  // optional string cmd = 17;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PsProto.Process.cmd");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        17, this->cmd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.os.PsProto.Process)
  return target;
}

size_t PsProto_Process::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.PsProto.Process)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string label = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional string user = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->user());
    }

    // optional string wchan = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->wchan());
    }

    // optional string addr = 9 [(.android.privacy) = {
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->addr());
    }

    // optional string rtprio = 13;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->rtprio());
    }

    // optional string time = 16;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->time());
    }

    // optional string cmd = 17;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->cmd());
    }

    // optional int32 pid = 3;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->pid());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int32 tid = 4;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->tid());
    }

    // optional int32 ppid = 5;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->ppid());
    }

    // optional int32 vsz = 6;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->vsz());
    }

    // optional int32 rss = 7;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->rss());
    }

    // optional .android.os.PsProto.Process.ProcessStateCode s = 10;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->s());
    }

    // optional int32 pri = 11;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->pri());
    }

    // optional sint32 ni = 12;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
          this->ni());
    }

    // optional .android.os.PsProto.Process.SchedulingPolicy sch = 14;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->sch());
    }

  }
  // optional .android.os.PsProto.Process.Policy pcy = 15;
  if (cached_has_bits & 0x00010000u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->pcy());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PsProto_Process::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.os.PsProto.Process)
  GOOGLE_DCHECK_NE(&from, this);
  const PsProto_Process* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PsProto_Process>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.os.PsProto.Process)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.os.PsProto.Process)
    MergeFrom(*source);
  }
}

void PsProto_Process::MergeFrom(const PsProto_Process& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.PsProto.Process)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      label_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      user_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.user_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      wchan_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.wchan_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      addr_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.addr_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      rtprio_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rtprio_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      time_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.time_);
    }
    if (cached_has_bits & 0x00000040u) {
      _has_bits_[0] |= 0x00000040u;
      cmd_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cmd_);
    }
    if (cached_has_bits & 0x00000080u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000200u) {
      ppid_ = from.ppid_;
    }
    if (cached_has_bits & 0x00000400u) {
      vsz_ = from.vsz_;
    }
    if (cached_has_bits & 0x00000800u) {
      rss_ = from.rss_;
    }
    if (cached_has_bits & 0x00001000u) {
      s_ = from.s_;
    }
    if (cached_has_bits & 0x00002000u) {
      pri_ = from.pri_;
    }
    if (cached_has_bits & 0x00004000u) {
      ni_ = from.ni_;
    }
    if (cached_has_bits & 0x00008000u) {
      sch_ = from.sch_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_pcy(from.pcy());
  }
}

void PsProto_Process::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.os.PsProto.Process)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PsProto_Process::CopyFrom(const PsProto_Process& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.PsProto.Process)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PsProto_Process::IsInitialized() const {
  return true;
}

void PsProto_Process::InternalSwap(PsProto_Process* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  label_.Swap(&other->label_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  wchan_.Swap(&other->wchan_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  addr_.Swap(&other->addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rtprio_.Swap(&other->rtprio_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  time_.Swap(&other->time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cmd_.Swap(&other->cmd_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pid_, other->pid_);
  swap(tid_, other->tid_);
  swap(ppid_, other->ppid_);
  swap(vsz_, other->vsz_);
  swap(rss_, other->rss_);
  swap(s_, other->s_);
  swap(pri_, other->pri_);
  swap(ni_, other->ni_);
  swap(sch_, other->sch_);
  swap(pcy_, other->pcy_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PsProto_Process::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PsProto::InitAsDefaultInstance() {
}
class PsProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PsProto>()._has_bits_);
};

PsProto::PsProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.PsProto)
}
PsProto::PsProto(const PsProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      processes_(from.processes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:android.os.PsProto)
}

void PsProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto.base);
}

PsProto::~PsProto() {
  // @@protoc_insertion_point(destructor:android.os.PsProto)
  SharedDtor();
}

void PsProto::SharedDtor() {
}

void PsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PsProto& PsProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fps_2eproto.base);
  return *internal_default_instance();
}


void PsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.PsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  processes_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PsProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.os.PsProto.Process processes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_processes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PsProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.os.PsProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.os.PsProto.Process processes = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_processes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.PsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.PsProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PsProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.PsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.os.PsProto.Process processes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->processes_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->processes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.os.PsProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PsProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.os.PsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.os.PsProto.Process processes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->processes_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->processes(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.os.PsProto)
  return target;
}

size_t PsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.PsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.os.PsProto.Process processes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->processes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->processes(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PsProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.os.PsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PsProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PsProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.os.PsProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.os.PsProto)
    MergeFrom(*source);
  }
}

void PsProto::MergeFrom(const PsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.PsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  processes_.MergeFrom(from.processes_);
}

void PsProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.os.PsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PsProto::CopyFrom(const PsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.PsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PsProto::IsInitialized() const {
  return true;
}

void PsProto::InternalSwap(PsProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&processes_)->InternalSwap(CastToBase(&other->processes_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PsProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::os::PsProto_Process* Arena::CreateMaybeMessage< ::android::os::PsProto_Process >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::PsProto_Process >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::PsProto* Arena::CreateMaybeMessage< ::android::os::PsProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::PsProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
