// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/internal/protolog.proto

#include "frameworks/base/core/proto/android/internal/protolog.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoLogMessage_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto;
namespace com {
namespace android {
namespace internal {
namespace protolog {
class ProtoLogMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoLogMessage> _instance;
} _ProtoLogMessage_default_instance_;
class ProtoLogFileProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoLogFileProto> _instance;
} _ProtoLogFileProto_default_instance_;
}  // namespace protolog
}  // namespace internal
}  // namespace android
}  // namespace com
static void InitDefaultsscc_info_ProtoLogFileProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::internal::protolog::_ProtoLogFileProto_default_instance_;
    new (ptr) ::com::android::internal::protolog::ProtoLogFileProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::internal::protolog::ProtoLogFileProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoLogFileProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ProtoLogFileProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto}, {
      &scc_info_ProtoLogMessage_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto.base,}};

static void InitDefaultsscc_info_ProtoLogMessage_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::internal::protolog::_ProtoLogMessage_default_instance_;
    new (ptr) ::com::android::internal::protolog::ProtoLogMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::internal::protolog::ProtoLogMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoLogMessage_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ProtoLogMessage_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::com::android::internal::protolog::ProtoLogMessage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::internal::protolog::ProtoLogMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::internal::protolog::ProtoLogMessage, message_hash_),
  PROTOBUF_FIELD_OFFSET(::com::android::internal::protolog::ProtoLogMessage, elapsed_realtime_nanos_),
  PROTOBUF_FIELD_OFFSET(::com::android::internal::protolog::ProtoLogMessage, str_params_),
  PROTOBUF_FIELD_OFFSET(::com::android::internal::protolog::ProtoLogMessage, sint64_params_),
  PROTOBUF_FIELD_OFFSET(::com::android::internal::protolog::ProtoLogMessage, double_params_),
  PROTOBUF_FIELD_OFFSET(::com::android::internal::protolog::ProtoLogMessage, boolean_params_),
  1,
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::android::internal::protolog::ProtoLogFileProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::internal::protolog::ProtoLogFileProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::internal::protolog::ProtoLogFileProto, magic_number_),
  PROTOBUF_FIELD_OFFSET(::com::android::internal::protolog::ProtoLogFileProto, version_),
  PROTOBUF_FIELD_OFFSET(::com::android::internal::protolog::ProtoLogFileProto, realtimetoelapsedtimeoffsetmillis_),
  PROTOBUF_FIELD_OFFSET(::com::android::internal::protolog::ProtoLogFileProto, log_),
  1,
  0,
  2,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::com::android::internal::protolog::ProtoLogMessage)},
  { 17, 26, sizeof(::com::android::internal::protolog::ProtoLogFileProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::internal::protolog::_ProtoLogMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::internal::protolog::_ProtoLogFileProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n:frameworks/base/core/proto/android/int"
  "ernal/protolog.proto\022\035com.android.intern"
  "al.protolog\0320frameworks/base/core/proto/"
  "android/privacy.proto\"\267\001\n\017ProtoLogMessag"
  "e\022\024\n\014message_hash\030\001 \001(\017\022\036\n\026elapsed_realt"
  "ime_nanos\030\002 \001(\006\022\022\n\nstr_params\030\003 \003(\t\022\031\n\rs"
  "int64_params\030\004 \003(\022B\002\020\001\022\031\n\rdouble_params\030"
  "\005 \003(\001B\002\020\001\022\032\n\016boolean_params\030\006 \003(\010B\002\020\001:\010\232"
  "\237\325\207\003\002\010\000\"\370\001\n\021ProtoLogFileProto\022\024\n\014magic_n"
  "umber\030\001 \001(\006\022\017\n\007version\030\002 \001(\t\022)\n!realTime"
  "ToElapsedTimeOffsetMillis\030\003 \001(\006\022;\n\003log\030\004"
  " \003(\0132..com.android.internal.protolog.Pro"
  "toLogMessage\"J\n\013MagicNumber\022\013\n\007INVALID\020\000"
  "\022\026\n\016MAGIC_NUMBER_L\020\320\244\275\242\005\022\026\n\016MAGIC_NUMBER"
  "_H\020\317\230\275\272\004:\010\232\237\325\207\003\002\010\000B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto_deps[1] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto_sccs[2] = {
  &scc_info_ProtoLogFileProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto.base,
  &scc_info_ProtoLogMessage_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto, "frameworks/base/core/proto/android/internal/protolog.proto", 582,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto, 2, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto), true);
namespace com {
namespace android {
namespace internal {
namespace protolog {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoLogFileProto_MagicNumber_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto[0];
}
bool ProtoLogFileProto_MagicNumber_IsValid(int value) {
  switch (value) {
    case 0:
    case 1196379215:
    case 1414484560:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ProtoLogFileProto_MagicNumber ProtoLogFileProto::INVALID;
constexpr ProtoLogFileProto_MagicNumber ProtoLogFileProto::MAGIC_NUMBER_L;
constexpr ProtoLogFileProto_MagicNumber ProtoLogFileProto::MAGIC_NUMBER_H;
constexpr ProtoLogFileProto_MagicNumber ProtoLogFileProto::MagicNumber_MIN;
constexpr ProtoLogFileProto_MagicNumber ProtoLogFileProto::MagicNumber_MAX;
constexpr int ProtoLogFileProto::MagicNumber_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void ProtoLogMessage::InitAsDefaultInstance() {
}
class ProtoLogMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoLogMessage>()._has_bits_);
  static void set_has_message_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_elapsed_realtime_nanos(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ProtoLogMessage::ProtoLogMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.internal.protolog.ProtoLogMessage)
}
ProtoLogMessage::ProtoLogMessage(const ProtoLogMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      str_params_(from.str_params_),
      sint64_params_(from.sint64_params_),
      double_params_(from.double_params_),
      boolean_params_(from.boolean_params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&elapsed_realtime_nanos_, &from.elapsed_realtime_nanos_,
    static_cast<size_t>(reinterpret_cast<char*>(&message_hash_) -
    reinterpret_cast<char*>(&elapsed_realtime_nanos_)) + sizeof(message_hash_));
  // @@protoc_insertion_point(copy_constructor:com.android.internal.protolog.ProtoLogMessage)
}

void ProtoLogMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoLogMessage_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto.base);
  ::memset(&elapsed_realtime_nanos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&message_hash_) -
      reinterpret_cast<char*>(&elapsed_realtime_nanos_)) + sizeof(message_hash_));
}

ProtoLogMessage::~ProtoLogMessage() {
  // @@protoc_insertion_point(destructor:com.android.internal.protolog.ProtoLogMessage)
  SharedDtor();
}

void ProtoLogMessage::SharedDtor() {
}

void ProtoLogMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoLogMessage& ProtoLogMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoLogMessage_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto.base);
  return *internal_default_instance();
}


void ProtoLogMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.internal.protolog.ProtoLogMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  str_params_.Clear();
  sint64_params_.Clear();
  double_params_.Clear();
  boolean_params_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&elapsed_realtime_nanos_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&message_hash_) -
        reinterpret_cast<char*>(&elapsed_realtime_nanos_)) + sizeof(message_hash_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProtoLogMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional sfixed32 message_hash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          _Internal::set_has_message_hash(&has_bits);
          message_hash_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::int32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::int32);
        } else goto handle_unusual;
        continue;
      // optional fixed64 elapsed_realtime_nanos = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_elapsed_realtime_nanos(&has_bits);
          elapsed_realtime_nanos_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // repeated string str_params = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_str_params(), ptr, ctx, "com.android.internal.protolog.ProtoLogMessage.str_params");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // repeated sint64 sint64_params = 4 [packed = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedSInt64Parser(mutable_sint64_params(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32) {
          add_sint64_params(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated double double_params = 5 [packed = true];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(mutable_double_params(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41) {
          add_double_params(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated bool boolean_params = 6 [packed = true];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(mutable_boolean_params(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48) {
          add_boolean_params(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProtoLogMessage::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.internal.protolog.ProtoLogMessage)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sfixed32 message_hash = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (13 & 0xFF)) {
          _Internal::set_has_message_hash(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &message_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 elapsed_realtime_nanos = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (17 & 0xFF)) {
          _Internal::set_has_elapsed_realtime_nanos(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &elapsed_realtime_nanos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string str_params = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_str_params()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str_params(this->str_params_size() - 1).data(),
            static_cast<int>(this->str_params(this->str_params_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.internal.protolog.ProtoLogMessage.str_params");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 sint64_params = 4 [packed = true];
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_sint64_params())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT64>(
                 1, 34u, input, this->mutable_sint64_params())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double double_params = 5 [packed = true];
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_double_params())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (41 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 42u, input, this->mutable_double_params())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool boolean_params = 6 [packed = true];
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_boolean_params())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 1, 50u, input, this->mutable_boolean_params())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.internal.protolog.ProtoLogMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.internal.protolog.ProtoLogMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProtoLogMessage::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.internal.protolog.ProtoLogMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sfixed32 message_hash = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSFixed32(1, this->message_hash(), output);
  }

  // optional fixed64 elapsed_realtime_nanos = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64(2, this->elapsed_realtime_nanos(), output);
  }

  // repeated string str_params = 3;
  for (int i = 0, n = this->str_params_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str_params(i).data(), static_cast<int>(this->str_params(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.internal.protolog.ProtoLogMessage.str_params");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      3, this->str_params(i), output);
  }

  // repeated sint64 sint64_params = 4 [packed = true];
  if (this->sint64_params_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(4, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_sint64_params_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->sint64_params_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt64NoTag(
      this->sint64_params(i), output);
  }

  // repeated double double_params = 5 [packed = true];
  if (this->double_params_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(5, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_double_params_cached_byte_size_.load(
        std::memory_order_relaxed));
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleArray(
      this->double_params().data(), this->double_params_size(), output);
  }

  // repeated bool boolean_params = 6 [packed = true];
  if (this->boolean_params_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(6, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_boolean_params_cached_byte_size_.load(
        std::memory_order_relaxed));
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolArray(
      this->boolean_params().data(), this->boolean_params_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.internal.protolog.ProtoLogMessage)
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoLogMessage::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.internal.protolog.ProtoLogMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sfixed32 message_hash = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSFixed32ToArray(1, this->message_hash(), target);
  }

  // optional fixed64 elapsed_realtime_nanos = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->elapsed_realtime_nanos(), target);
  }

  // repeated string str_params = 3;
  for (int i = 0, n = this->str_params_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str_params(i).data(), static_cast<int>(this->str_params(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.internal.protolog.ProtoLogMessage.str_params");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(3, this->str_params(i), target);
  }

  // repeated sint64 sint64_params = 4 [packed = true];
  if (this->sint64_params_size() > 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTagToArray(
      4,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream::WriteVarint32ToArray(
        _sint64_params_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->sint64_params_, target);
  }

  // repeated double double_params = 5 [packed = true];
  if (this->double_params_size() > 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTagToArray(
      5,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream::WriteVarint32ToArray(
        _double_params_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->double_params_, target);
  }

  // repeated bool boolean_params = 6 [packed = true];
  if (this->boolean_params_size() > 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTagToArray(
      6,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream::WriteVarint32ToArray(
        _boolean_params_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->boolean_params_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.internal.protolog.ProtoLogMessage)
  return target;
}

size_t ProtoLogMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.internal.protolog.ProtoLogMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string str_params = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->str_params_size());
  for (int i = 0, n = this->str_params_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->str_params(i));
  }

  // repeated sint64 sint64_params = 4 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      SInt64Size(this->sint64_params_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _sint64_params_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated double double_params = 5 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->double_params_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _double_params_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated bool boolean_params = 6 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->boolean_params_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _boolean_params_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 elapsed_realtime_nanos = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional sfixed32 message_hash = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoLogMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.internal.protolog.ProtoLogMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoLogMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoLogMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.internal.protolog.ProtoLogMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.internal.protolog.ProtoLogMessage)
    MergeFrom(*source);
  }
}

void ProtoLogMessage::MergeFrom(const ProtoLogMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.internal.protolog.ProtoLogMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  str_params_.MergeFrom(from.str_params_);
  sint64_params_.MergeFrom(from.sint64_params_);
  double_params_.MergeFrom(from.double_params_);
  boolean_params_.MergeFrom(from.boolean_params_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      elapsed_realtime_nanos_ = from.elapsed_realtime_nanos_;
    }
    if (cached_has_bits & 0x00000002u) {
      message_hash_ = from.message_hash_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoLogMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.internal.protolog.ProtoLogMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoLogMessage::CopyFrom(const ProtoLogMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.internal.protolog.ProtoLogMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoLogMessage::IsInitialized() const {
  return true;
}

void ProtoLogMessage::InternalSwap(ProtoLogMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  str_params_.InternalSwap(CastToBase(&other->str_params_));
  sint64_params_.InternalSwap(&other->sint64_params_);
  double_params_.InternalSwap(&other->double_params_);
  boolean_params_.InternalSwap(&other->boolean_params_);
  swap(elapsed_realtime_nanos_, other->elapsed_realtime_nanos_);
  swap(message_hash_, other->message_hash_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoLogMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProtoLogFileProto::InitAsDefaultInstance() {
}
class ProtoLogFileProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoLogFileProto>()._has_bits_);
  static void set_has_magic_number(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_realtimetoelapsedtimeoffsetmillis(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

ProtoLogFileProto::ProtoLogFileProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.internal.protolog.ProtoLogFileProto)
}
ProtoLogFileProto::ProtoLogFileProto(const ProtoLogFileProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      log_(from.log_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  ::memcpy(&magic_number_, &from.magic_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&realtimetoelapsedtimeoffsetmillis_) -
    reinterpret_cast<char*>(&magic_number_)) + sizeof(realtimetoelapsedtimeoffsetmillis_));
  // @@protoc_insertion_point(copy_constructor:com.android.internal.protolog.ProtoLogFileProto)
}

void ProtoLogFileProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoLogFileProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto.base);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&magic_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&realtimetoelapsedtimeoffsetmillis_) -
      reinterpret_cast<char*>(&magic_number_)) + sizeof(realtimetoelapsedtimeoffsetmillis_));
}

ProtoLogFileProto::~ProtoLogFileProto() {
  // @@protoc_insertion_point(destructor:com.android.internal.protolog.ProtoLogFileProto)
  SharedDtor();
}

void ProtoLogFileProto::SharedDtor() {
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoLogFileProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoLogFileProto& ProtoLogFileProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoLogFileProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fprotolog_2eproto.base);
  return *internal_default_instance();
}


void ProtoLogFileProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.internal.protolog.ProtoLogFileProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  log_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    version_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&magic_number_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&realtimetoelapsedtimeoffsetmillis_) -
        reinterpret_cast<char*>(&magic_number_)) + sizeof(realtimetoelapsedtimeoffsetmillis_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProtoLogFileProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 magic_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_magic_number(&has_bits);
          magic_number_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_version(), ptr, ctx, "com.android.internal.protolog.ProtoLogFileProto.version");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 realTimeToElapsedTimeOffsetMillis = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_realtimetoelapsedtimeoffsetmillis(&has_bits);
          realtimetoelapsedtimeoffsetmillis_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.internal.protolog.ProtoLogMessage log = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_log(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProtoLogFileProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.internal.protolog.ProtoLogFileProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 magic_number = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (9 & 0xFF)) {
          _Internal::set_has_magic_number(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &magic_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), static_cast<int>(this->version().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.internal.protolog.ProtoLogFileProto.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 realTimeToElapsedTimeOffsetMillis = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (25 & 0xFF)) {
          _Internal::set_has_realtimetoelapsedtimeoffsetmillis(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &realtimetoelapsedtimeoffsetmillis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.internal.protolog.ProtoLogMessage log = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_log()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.internal.protolog.ProtoLogFileProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.internal.protolog.ProtoLogFileProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProtoLogFileProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.internal.protolog.ProtoLogFileProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 magic_number = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64(1, this->magic_number(), output);
  }

  // optional string version = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.internal.protolog.ProtoLogFileProto.version");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // optional fixed64 realTimeToElapsedTimeOffsetMillis = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64(3, this->realtimetoelapsedtimeoffsetmillis(), output);
  }

  // repeated .com.android.internal.protolog.ProtoLogMessage log = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->log_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->log(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.internal.protolog.ProtoLogFileProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoLogFileProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.internal.protolog.ProtoLogFileProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 magic_number = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->magic_number(), target);
  }

  // optional string version = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.internal.protolog.ProtoLogFileProto.version");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // optional fixed64 realTimeToElapsedTimeOffsetMillis = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(3, this->realtimetoelapsedtimeoffsetmillis(), target);
  }

  // repeated .com.android.internal.protolog.ProtoLogMessage log = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->log_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->log(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.internal.protolog.ProtoLogFileProto)
  return target;
}

size_t ProtoLogFileProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.internal.protolog.ProtoLogFileProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.internal.protolog.ProtoLogMessage log = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->log_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->log(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string version = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional fixed64 magic_number = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional fixed64 realTimeToElapsedTimeOffsetMillis = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoLogFileProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.internal.protolog.ProtoLogFileProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoLogFileProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoLogFileProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.internal.protolog.ProtoLogFileProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.internal.protolog.ProtoLogFileProto)
    MergeFrom(*source);
  }
}

void ProtoLogFileProto::MergeFrom(const ProtoLogFileProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.internal.protolog.ProtoLogFileProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  log_.MergeFrom(from.log_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      version_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000002u) {
      magic_number_ = from.magic_number_;
    }
    if (cached_has_bits & 0x00000004u) {
      realtimetoelapsedtimeoffsetmillis_ = from.realtimetoelapsedtimeoffsetmillis_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoLogFileProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.internal.protolog.ProtoLogFileProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoLogFileProto::CopyFrom(const ProtoLogFileProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.internal.protolog.ProtoLogFileProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoLogFileProto::IsInitialized() const {
  return true;
}

void ProtoLogFileProto::InternalSwap(ProtoLogFileProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&log_)->InternalSwap(CastToBase(&other->log_));
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(magic_number_, other->magic_number_);
  swap(realtimetoelapsedtimeoffsetmillis_, other->realtimetoelapsedtimeoffsetmillis_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoLogFileProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protolog
}  // namespace internal
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::android::internal::protolog::ProtoLogMessage* Arena::CreateMaybeMessage< ::com::android::internal::protolog::ProtoLogMessage >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::internal::protolog::ProtoLogMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::internal::protolog::ProtoLogFileProto* Arena::CreateMaybeMessage< ::com::android::internal::protolog::ProtoLogFileProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::internal::protolog::ProtoLogFileProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
