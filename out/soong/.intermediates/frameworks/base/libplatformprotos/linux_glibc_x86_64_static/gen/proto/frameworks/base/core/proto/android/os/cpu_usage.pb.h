// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/os/cpu_usage.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto;
namespace android {
namespace os {
class CpuUsageProto;
class CpuUsageProtoDefaultTypeInternal;
extern CpuUsageProtoDefaultTypeInternal _CpuUsageProto_default_instance_;
class CpuUsageProto_Load;
class CpuUsageProto_LoadDefaultTypeInternal;
extern CpuUsageProto_LoadDefaultTypeInternal _CpuUsageProto_Load_default_instance_;
class CpuUsageProto_Stat;
class CpuUsageProto_StatDefaultTypeInternal;
extern CpuUsageProto_StatDefaultTypeInternal _CpuUsageProto_Stat_default_instance_;
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::os::CpuUsageProto* Arena::CreateMaybeMessage<::android::os::CpuUsageProto>(Arena*);
template<> ::android::os::CpuUsageProto_Load* Arena::CreateMaybeMessage<::android::os::CpuUsageProto_Load>(Arena*);
template<> ::android::os::CpuUsageProto_Stat* Arena::CreateMaybeMessage<::android::os::CpuUsageProto_Stat>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace os {

// ===================================================================

class CpuUsageProto_Load :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.os.CpuUsageProto.Load) */ {
 public:
  CpuUsageProto_Load();
  virtual ~CpuUsageProto_Load();

  CpuUsageProto_Load(const CpuUsageProto_Load& from);
  CpuUsageProto_Load(CpuUsageProto_Load&& from) noexcept
    : CpuUsageProto_Load() {
    *this = ::std::move(from);
  }

  inline CpuUsageProto_Load& operator=(const CpuUsageProto_Load& from) {
    CopyFrom(from);
    return *this;
  }
  inline CpuUsageProto_Load& operator=(CpuUsageProto_Load&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CpuUsageProto_Load& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CpuUsageProto_Load* internal_default_instance() {
    return reinterpret_cast<const CpuUsageProto_Load*>(
               &_CpuUsageProto_Load_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CpuUsageProto_Load& a, CpuUsageProto_Load& b) {
    a.Swap(&b);
  }
  inline void Swap(CpuUsageProto_Load* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CpuUsageProto_Load* New() const final {
    return CreateMaybeMessage<CpuUsageProto_Load>(nullptr);
  }

  CpuUsageProto_Load* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CpuUsageProto_Load>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CpuUsageProto_Load& from);
  void MergeFrom(const CpuUsageProto_Load& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CpuUsageProto_Load* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.CpuUsageProto.Load";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLoad1FieldNumber = 1,
    kLoad5FieldNumber = 2,
    kLoad15FieldNumber = 3,
  };
  // optional float load1 = 1;
  bool has_load1() const;
  void clear_load1();
  float load1() const;
  void set_load1(float value);

  // optional float load5 = 2;
  bool has_load5() const;
  void clear_load5();
  float load5() const;
  void set_load5(float value);

  // optional float load15 = 3;
  bool has_load15() const;
  void clear_load15();
  float load15() const;
  void set_load15(float value);

  // @@protoc_insertion_point(class_scope:android.os.CpuUsageProto.Load)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float load1_;
  float load5_;
  float load15_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto;
};
// -------------------------------------------------------------------

class CpuUsageProto_Stat :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.os.CpuUsageProto.Stat) */ {
 public:
  CpuUsageProto_Stat();
  virtual ~CpuUsageProto_Stat();

  CpuUsageProto_Stat(const CpuUsageProto_Stat& from);
  CpuUsageProto_Stat(CpuUsageProto_Stat&& from) noexcept
    : CpuUsageProto_Stat() {
    *this = ::std::move(from);
  }

  inline CpuUsageProto_Stat& operator=(const CpuUsageProto_Stat& from) {
    CopyFrom(from);
    return *this;
  }
  inline CpuUsageProto_Stat& operator=(CpuUsageProto_Stat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CpuUsageProto_Stat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CpuUsageProto_Stat* internal_default_instance() {
    return reinterpret_cast<const CpuUsageProto_Stat*>(
               &_CpuUsageProto_Stat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CpuUsageProto_Stat& a, CpuUsageProto_Stat& b) {
    a.Swap(&b);
  }
  inline void Swap(CpuUsageProto_Stat* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CpuUsageProto_Stat* New() const final {
    return CreateMaybeMessage<CpuUsageProto_Stat>(nullptr);
  }

  CpuUsageProto_Stat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CpuUsageProto_Stat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CpuUsageProto_Stat& from);
  void MergeFrom(const CpuUsageProto_Stat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CpuUsageProto_Stat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.CpuUsageProto.Stat";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kUidFieldNumber = 1,
    kPidFieldNumber = 2,
    kAddedFieldNumber = 4,
    kRemovedFieldNumber = 5,
    kUptimeFieldNumber = 6,
    kUserTimeFieldNumber = 7,
    kSystemTimeFieldNumber = 8,
    kMinorFaultsFieldNumber = 9,
    kMajorFaultsFieldNumber = 10,
    kParentPidFieldNumber = 11,
  };
  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 pid = 2;
  bool has_pid() const;
  void clear_pid();
  ::PROTOBUF_NAMESPACE_ID::int32 pid() const;
  void set_pid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool added = 4;
  bool has_added() const;
  void clear_added();
  bool added() const;
  void set_added(bool value);

  // optional bool removed = 5;
  bool has_removed() const;
  void clear_removed();
  bool removed() const;
  void set_removed(bool value);

  // optional int32 uptime = 6;
  bool has_uptime() const;
  void clear_uptime();
  ::PROTOBUF_NAMESPACE_ID::int32 uptime() const;
  void set_uptime(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 user_time = 7;
  bool has_user_time() const;
  void clear_user_time();
  ::PROTOBUF_NAMESPACE_ID::int32 user_time() const;
  void set_user_time(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 system_time = 8;
  bool has_system_time() const;
  void clear_system_time();
  ::PROTOBUF_NAMESPACE_ID::int32 system_time() const;
  void set_system_time(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 minor_faults = 9;
  bool has_minor_faults() const;
  void clear_minor_faults();
  ::PROTOBUF_NAMESPACE_ID::int32 minor_faults() const;
  void set_minor_faults(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 major_faults = 10;
  bool has_major_faults() const;
  void clear_major_faults();
  ::PROTOBUF_NAMESPACE_ID::int32 major_faults() const;
  void set_major_faults(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 parent_pid = 11;
  bool has_parent_pid() const;
  void clear_parent_pid();
  ::PROTOBUF_NAMESPACE_ID::int32 parent_pid() const;
  void set_parent_pid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.CpuUsageProto.Stat)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 pid_;
  bool added_;
  bool removed_;
  ::PROTOBUF_NAMESPACE_ID::int32 uptime_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 system_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 minor_faults_;
  ::PROTOBUF_NAMESPACE_ID::int32 major_faults_;
  ::PROTOBUF_NAMESPACE_ID::int32 parent_pid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto;
};
// -------------------------------------------------------------------

class CpuUsageProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.os.CpuUsageProto) */ {
 public:
  CpuUsageProto();
  virtual ~CpuUsageProto();

  CpuUsageProto(const CpuUsageProto& from);
  CpuUsageProto(CpuUsageProto&& from) noexcept
    : CpuUsageProto() {
    *this = ::std::move(from);
  }

  inline CpuUsageProto& operator=(const CpuUsageProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline CpuUsageProto& operator=(CpuUsageProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CpuUsageProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CpuUsageProto* internal_default_instance() {
    return reinterpret_cast<const CpuUsageProto*>(
               &_CpuUsageProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CpuUsageProto& a, CpuUsageProto& b) {
    a.Swap(&b);
  }
  inline void Swap(CpuUsageProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CpuUsageProto* New() const final {
    return CreateMaybeMessage<CpuUsageProto>(nullptr);
  }

  CpuUsageProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CpuUsageProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CpuUsageProto& from);
  void MergeFrom(const CpuUsageProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CpuUsageProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.CpuUsageProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef CpuUsageProto_Load Load;
  typedef CpuUsageProto_Stat Stat;

  // accessors -------------------------------------------------------

  enum : int {
    kProcessesFieldNumber = 16,
    kCurrentLoadFieldNumber = 1,
    kNowFieldNumber = 2,
    kLastSampleTimeFieldNumber = 3,
    kCurrentSampleTimeFieldNumber = 4,
    kLastSampleRealTimeFieldNumber = 5,
    kCurrentSampleRealTimeFieldNumber = 6,
    kLastSampleWallTimeFieldNumber = 7,
    kCurrentSampleWallTimeFieldNumber = 8,
    kTotalUserTimeFieldNumber = 9,
    kTotalSystemTimeFieldNumber = 10,
    kTotalIowaitTimeFieldNumber = 11,
    kTotalIrqTimeFieldNumber = 12,
    kTotalSoftIrqTimeFieldNumber = 13,
    kTotalIdleTimeFieldNumber = 14,
    kTotalTimeFieldNumber = 15,
  };
  // repeated .android.os.CpuUsageProto.Stat processes = 16;
  int processes_size() const;
  void clear_processes();
  ::android::os::CpuUsageProto_Stat* mutable_processes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::CpuUsageProto_Stat >*
      mutable_processes();
  const ::android::os::CpuUsageProto_Stat& processes(int index) const;
  ::android::os::CpuUsageProto_Stat* add_processes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::CpuUsageProto_Stat >&
      processes() const;

  // optional .android.os.CpuUsageProto.Load current_load = 1;
  bool has_current_load() const;
  void clear_current_load();
  const ::android::os::CpuUsageProto_Load& current_load() const;
  ::android::os::CpuUsageProto_Load* release_current_load();
  ::android::os::CpuUsageProto_Load* mutable_current_load();
  void set_allocated_current_load(::android::os::CpuUsageProto_Load* current_load);

  // optional int64 now = 2;
  bool has_now() const;
  void clear_now();
  ::PROTOBUF_NAMESPACE_ID::int64 now() const;
  void set_now(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 last_sample_time = 3;
  bool has_last_sample_time() const;
  void clear_last_sample_time();
  ::PROTOBUF_NAMESPACE_ID::int64 last_sample_time() const;
  void set_last_sample_time(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 current_sample_time = 4;
  bool has_current_sample_time() const;
  void clear_current_sample_time();
  ::PROTOBUF_NAMESPACE_ID::int64 current_sample_time() const;
  void set_current_sample_time(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 last_sample_real_time = 5;
  bool has_last_sample_real_time() const;
  void clear_last_sample_real_time();
  ::PROTOBUF_NAMESPACE_ID::int64 last_sample_real_time() const;
  void set_last_sample_real_time(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 current_sample_real_time = 6;
  bool has_current_sample_real_time() const;
  void clear_current_sample_real_time();
  ::PROTOBUF_NAMESPACE_ID::int64 current_sample_real_time() const;
  void set_current_sample_real_time(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 last_sample_wall_time = 7;
  bool has_last_sample_wall_time() const;
  void clear_last_sample_wall_time();
  ::PROTOBUF_NAMESPACE_ID::int64 last_sample_wall_time() const;
  void set_last_sample_wall_time(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 current_sample_wall_time = 8;
  bool has_current_sample_wall_time() const;
  void clear_current_sample_wall_time();
  ::PROTOBUF_NAMESPACE_ID::int64 current_sample_wall_time() const;
  void set_current_sample_wall_time(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 total_user_time = 9;
  bool has_total_user_time() const;
  void clear_total_user_time();
  ::PROTOBUF_NAMESPACE_ID::int32 total_user_time() const;
  void set_total_user_time(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 total_system_time = 10;
  bool has_total_system_time() const;
  void clear_total_system_time();
  ::PROTOBUF_NAMESPACE_ID::int32 total_system_time() const;
  void set_total_system_time(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 total_iowait_time = 11;
  bool has_total_iowait_time() const;
  void clear_total_iowait_time();
  ::PROTOBUF_NAMESPACE_ID::int32 total_iowait_time() const;
  void set_total_iowait_time(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 total_irq_time = 12;
  bool has_total_irq_time() const;
  void clear_total_irq_time();
  ::PROTOBUF_NAMESPACE_ID::int32 total_irq_time() const;
  void set_total_irq_time(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 total_soft_irq_time = 13;
  bool has_total_soft_irq_time() const;
  void clear_total_soft_irq_time();
  ::PROTOBUF_NAMESPACE_ID::int32 total_soft_irq_time() const;
  void set_total_soft_irq_time(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 total_idle_time = 14;
  bool has_total_idle_time() const;
  void clear_total_idle_time();
  ::PROTOBUF_NAMESPACE_ID::int32 total_idle_time() const;
  void set_total_idle_time(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 total_time = 15;
  bool has_total_time() const;
  void clear_total_time();
  ::PROTOBUF_NAMESPACE_ID::int32 total_time() const;
  void set_total_time(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.CpuUsageProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::CpuUsageProto_Stat > processes_;
  ::android::os::CpuUsageProto_Load* current_load_;
  ::PROTOBUF_NAMESPACE_ID::int64 now_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_sample_time_;
  ::PROTOBUF_NAMESPACE_ID::int64 current_sample_time_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_sample_real_time_;
  ::PROTOBUF_NAMESPACE_ID::int64 current_sample_real_time_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_sample_wall_time_;
  ::PROTOBUF_NAMESPACE_ID::int64 current_sample_wall_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_user_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_system_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_iowait_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_irq_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_soft_irq_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_idle_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_time_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CpuUsageProto_Load

// optional float load1 = 1;
inline bool CpuUsageProto_Load::has_load1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CpuUsageProto_Load::clear_load1() {
  load1_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CpuUsageProto_Load::load1() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.Load.load1)
  return load1_;
}
inline void CpuUsageProto_Load::set_load1(float value) {
  _has_bits_[0] |= 0x00000001u;
  load1_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.Load.load1)
}

// optional float load5 = 2;
inline bool CpuUsageProto_Load::has_load5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CpuUsageProto_Load::clear_load5() {
  load5_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CpuUsageProto_Load::load5() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.Load.load5)
  return load5_;
}
inline void CpuUsageProto_Load::set_load5(float value) {
  _has_bits_[0] |= 0x00000002u;
  load5_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.Load.load5)
}

// optional float load15 = 3;
inline bool CpuUsageProto_Load::has_load15() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CpuUsageProto_Load::clear_load15() {
  load15_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CpuUsageProto_Load::load15() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.Load.load15)
  return load15_;
}
inline void CpuUsageProto_Load::set_load15(float value) {
  _has_bits_[0] |= 0x00000004u;
  load15_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.Load.load15)
}

// -------------------------------------------------------------------

// CpuUsageProto_Stat

// optional int32 uid = 1;
inline bool CpuUsageProto_Stat::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CpuUsageProto_Stat::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto_Stat::uid() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.Stat.uid)
  return uid_;
}
inline void CpuUsageProto_Stat::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.Stat.uid)
}

// optional int32 pid = 2;
inline bool CpuUsageProto_Stat::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CpuUsageProto_Stat::clear_pid() {
  pid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto_Stat::pid() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.Stat.pid)
  return pid_;
}
inline void CpuUsageProto_Stat::set_pid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  pid_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.Stat.pid)
}

// optional string name = 3;
inline bool CpuUsageProto_Stat::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CpuUsageProto_Stat::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CpuUsageProto_Stat::name() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.Stat.name)
  return name_.GetNoArena();
}
inline void CpuUsageProto_Stat::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.Stat.name)
}
inline void CpuUsageProto_Stat::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.CpuUsageProto.Stat.name)
}
inline void CpuUsageProto_Stat::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.CpuUsageProto.Stat.name)
}
inline void CpuUsageProto_Stat::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.CpuUsageProto.Stat.name)
}
inline std::string* CpuUsageProto_Stat::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.CpuUsageProto.Stat.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CpuUsageProto_Stat::release_name() {
  // @@protoc_insertion_point(field_release:android.os.CpuUsageProto.Stat.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CpuUsageProto_Stat::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:android.os.CpuUsageProto.Stat.name)
}

// optional bool added = 4;
inline bool CpuUsageProto_Stat::has_added() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CpuUsageProto_Stat::clear_added() {
  added_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CpuUsageProto_Stat::added() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.Stat.added)
  return added_;
}
inline void CpuUsageProto_Stat::set_added(bool value) {
  _has_bits_[0] |= 0x00000008u;
  added_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.Stat.added)
}

// optional bool removed = 5;
inline bool CpuUsageProto_Stat::has_removed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CpuUsageProto_Stat::clear_removed() {
  removed_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CpuUsageProto_Stat::removed() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.Stat.removed)
  return removed_;
}
inline void CpuUsageProto_Stat::set_removed(bool value) {
  _has_bits_[0] |= 0x00000010u;
  removed_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.Stat.removed)
}

// optional int32 uptime = 6;
inline bool CpuUsageProto_Stat::has_uptime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CpuUsageProto_Stat::clear_uptime() {
  uptime_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto_Stat::uptime() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.Stat.uptime)
  return uptime_;
}
inline void CpuUsageProto_Stat::set_uptime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  uptime_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.Stat.uptime)
}

// optional int32 user_time = 7;
inline bool CpuUsageProto_Stat::has_user_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CpuUsageProto_Stat::clear_user_time() {
  user_time_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto_Stat::user_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.Stat.user_time)
  return user_time_;
}
inline void CpuUsageProto_Stat::set_user_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  user_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.Stat.user_time)
}

// optional int32 system_time = 8;
inline bool CpuUsageProto_Stat::has_system_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CpuUsageProto_Stat::clear_system_time() {
  system_time_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto_Stat::system_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.Stat.system_time)
  return system_time_;
}
inline void CpuUsageProto_Stat::set_system_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  system_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.Stat.system_time)
}

// optional int32 minor_faults = 9;
inline bool CpuUsageProto_Stat::has_minor_faults() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CpuUsageProto_Stat::clear_minor_faults() {
  minor_faults_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto_Stat::minor_faults() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.Stat.minor_faults)
  return minor_faults_;
}
inline void CpuUsageProto_Stat::set_minor_faults(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  minor_faults_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.Stat.minor_faults)
}

// optional int32 major_faults = 10;
inline bool CpuUsageProto_Stat::has_major_faults() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CpuUsageProto_Stat::clear_major_faults() {
  major_faults_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto_Stat::major_faults() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.Stat.major_faults)
  return major_faults_;
}
inline void CpuUsageProto_Stat::set_major_faults(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  major_faults_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.Stat.major_faults)
}

// optional int32 parent_pid = 11;
inline bool CpuUsageProto_Stat::has_parent_pid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CpuUsageProto_Stat::clear_parent_pid() {
  parent_pid_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto_Stat::parent_pid() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.Stat.parent_pid)
  return parent_pid_;
}
inline void CpuUsageProto_Stat::set_parent_pid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  parent_pid_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.Stat.parent_pid)
}

// -------------------------------------------------------------------

// CpuUsageProto

// optional .android.os.CpuUsageProto.Load current_load = 1;
inline bool CpuUsageProto::has_current_load() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CpuUsageProto::clear_current_load() {
  if (current_load_ != nullptr) current_load_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::os::CpuUsageProto_Load& CpuUsageProto::current_load() const {
  const ::android::os::CpuUsageProto_Load* p = current_load_;
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.current_load)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::CpuUsageProto_Load*>(
      &::android::os::_CpuUsageProto_Load_default_instance_);
}
inline ::android::os::CpuUsageProto_Load* CpuUsageProto::release_current_load() {
  // @@protoc_insertion_point(field_release:android.os.CpuUsageProto.current_load)
  _has_bits_[0] &= ~0x00000001u;
  ::android::os::CpuUsageProto_Load* temp = current_load_;
  current_load_ = nullptr;
  return temp;
}
inline ::android::os::CpuUsageProto_Load* CpuUsageProto::mutable_current_load() {
  _has_bits_[0] |= 0x00000001u;
  if (current_load_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::CpuUsageProto_Load>(GetArenaNoVirtual());
    current_load_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.CpuUsageProto.current_load)
  return current_load_;
}
inline void CpuUsageProto::set_allocated_current_load(::android::os::CpuUsageProto_Load* current_load) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete current_load_;
  }
  if (current_load) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      current_load = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, current_load, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  current_load_ = current_load;
  // @@protoc_insertion_point(field_set_allocated:android.os.CpuUsageProto.current_load)
}

// optional int64 now = 2;
inline bool CpuUsageProto::has_now() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CpuUsageProto::clear_now() {
  now_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CpuUsageProto::now() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.now)
  return now_;
}
inline void CpuUsageProto::set_now(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  now_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.now)
}

// optional int64 last_sample_time = 3;
inline bool CpuUsageProto::has_last_sample_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CpuUsageProto::clear_last_sample_time() {
  last_sample_time_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CpuUsageProto::last_sample_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.last_sample_time)
  return last_sample_time_;
}
inline void CpuUsageProto::set_last_sample_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  last_sample_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.last_sample_time)
}

// optional int64 current_sample_time = 4;
inline bool CpuUsageProto::has_current_sample_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CpuUsageProto::clear_current_sample_time() {
  current_sample_time_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CpuUsageProto::current_sample_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.current_sample_time)
  return current_sample_time_;
}
inline void CpuUsageProto::set_current_sample_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  current_sample_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.current_sample_time)
}

// optional int64 last_sample_real_time = 5;
inline bool CpuUsageProto::has_last_sample_real_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CpuUsageProto::clear_last_sample_real_time() {
  last_sample_real_time_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CpuUsageProto::last_sample_real_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.last_sample_real_time)
  return last_sample_real_time_;
}
inline void CpuUsageProto::set_last_sample_real_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  last_sample_real_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.last_sample_real_time)
}

// optional int64 current_sample_real_time = 6;
inline bool CpuUsageProto::has_current_sample_real_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CpuUsageProto::clear_current_sample_real_time() {
  current_sample_real_time_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CpuUsageProto::current_sample_real_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.current_sample_real_time)
  return current_sample_real_time_;
}
inline void CpuUsageProto::set_current_sample_real_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  current_sample_real_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.current_sample_real_time)
}

// optional int64 last_sample_wall_time = 7;
inline bool CpuUsageProto::has_last_sample_wall_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CpuUsageProto::clear_last_sample_wall_time() {
  last_sample_wall_time_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CpuUsageProto::last_sample_wall_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.last_sample_wall_time)
  return last_sample_wall_time_;
}
inline void CpuUsageProto::set_last_sample_wall_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  last_sample_wall_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.last_sample_wall_time)
}

// optional int64 current_sample_wall_time = 8;
inline bool CpuUsageProto::has_current_sample_wall_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CpuUsageProto::clear_current_sample_wall_time() {
  current_sample_wall_time_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CpuUsageProto::current_sample_wall_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.current_sample_wall_time)
  return current_sample_wall_time_;
}
inline void CpuUsageProto::set_current_sample_wall_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  current_sample_wall_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.current_sample_wall_time)
}

// optional int32 total_user_time = 9;
inline bool CpuUsageProto::has_total_user_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CpuUsageProto::clear_total_user_time() {
  total_user_time_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto::total_user_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.total_user_time)
  return total_user_time_;
}
inline void CpuUsageProto::set_total_user_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  total_user_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.total_user_time)
}

// optional int32 total_system_time = 10;
inline bool CpuUsageProto::has_total_system_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CpuUsageProto::clear_total_system_time() {
  total_system_time_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto::total_system_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.total_system_time)
  return total_system_time_;
}
inline void CpuUsageProto::set_total_system_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  total_system_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.total_system_time)
}

// optional int32 total_iowait_time = 11;
inline bool CpuUsageProto::has_total_iowait_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CpuUsageProto::clear_total_iowait_time() {
  total_iowait_time_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto::total_iowait_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.total_iowait_time)
  return total_iowait_time_;
}
inline void CpuUsageProto::set_total_iowait_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  total_iowait_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.total_iowait_time)
}

// optional int32 total_irq_time = 12;
inline bool CpuUsageProto::has_total_irq_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CpuUsageProto::clear_total_irq_time() {
  total_irq_time_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto::total_irq_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.total_irq_time)
  return total_irq_time_;
}
inline void CpuUsageProto::set_total_irq_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  total_irq_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.total_irq_time)
}

// optional int32 total_soft_irq_time = 13;
inline bool CpuUsageProto::has_total_soft_irq_time() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CpuUsageProto::clear_total_soft_irq_time() {
  total_soft_irq_time_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto::total_soft_irq_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.total_soft_irq_time)
  return total_soft_irq_time_;
}
inline void CpuUsageProto::set_total_soft_irq_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  total_soft_irq_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.total_soft_irq_time)
}

// optional int32 total_idle_time = 14;
inline bool CpuUsageProto::has_total_idle_time() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CpuUsageProto::clear_total_idle_time() {
  total_idle_time_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto::total_idle_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.total_idle_time)
  return total_idle_time_;
}
inline void CpuUsageProto::set_total_idle_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00002000u;
  total_idle_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.total_idle_time)
}

// optional int32 total_time = 15;
inline bool CpuUsageProto::has_total_time() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CpuUsageProto::clear_total_time() {
  total_time_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CpuUsageProto::total_time() const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.total_time)
  return total_time_;
}
inline void CpuUsageProto::set_total_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  total_time_ = value;
  // @@protoc_insertion_point(field_set:android.os.CpuUsageProto.total_time)
}

// repeated .android.os.CpuUsageProto.Stat processes = 16;
inline int CpuUsageProto::processes_size() const {
  return processes_.size();
}
inline void CpuUsageProto::clear_processes() {
  processes_.Clear();
}
inline ::android::os::CpuUsageProto_Stat* CpuUsageProto::mutable_processes(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.CpuUsageProto.processes)
  return processes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::CpuUsageProto_Stat >*
CpuUsageProto::mutable_processes() {
  // @@protoc_insertion_point(field_mutable_list:android.os.CpuUsageProto.processes)
  return &processes_;
}
inline const ::android::os::CpuUsageProto_Stat& CpuUsageProto::processes(int index) const {
  // @@protoc_insertion_point(field_get:android.os.CpuUsageProto.processes)
  return processes_.Get(index);
}
inline ::android::os::CpuUsageProto_Stat* CpuUsageProto::add_processes() {
  // @@protoc_insertion_point(field_add:android.os.CpuUsageProto.processes)
  return processes_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::CpuUsageProto_Stat >&
CpuUsageProto::processes() const {
  // @@protoc_insertion_point(field_list:android.os.CpuUsageProto.processes)
  return processes_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace os
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fcpu_5fusage_2eproto
