// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/insetscontroller.proto

#include "frameworks/base/core/proto/android/view/insetscontroller.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InsetsAnimationControlImplProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsstate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_InsetsStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsstate_2eproto;
namespace android {
namespace view {
class InsetsControllerProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InsetsControllerProto> _instance;
} _InsetsControllerProto_default_instance_;
}  // namespace view
}  // namespace android
static void InitDefaultsscc_info_InsetsControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::_InsetsControllerProto_default_instance_;
    new (ptr) ::android::view::InsetsControllerProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::InsetsControllerProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_InsetsControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_InsetsControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto}, {
      &scc_info_InsetsStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsstate_2eproto.base,
      &scc_info_InsetsAnimationControlImplProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::view::InsetsControllerProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::InsetsControllerProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::view::InsetsControllerProto, state_),
  PROTOBUF_FIELD_OFFSET(::android::view::InsetsControllerProto, control_),
  0,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::android::view::InsetsControllerProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::_InsetsControllerProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n>frameworks/base/core/proto/android/vie"
  "w/insetscontroller.proto\022\014android.view\0329"
  "frameworks/base/core/proto/android/view/"
  "insetsstate.proto\032Hframeworks/base/core/"
  "proto/android/view/insetsanimationcontro"
  "limpl.proto\"\206\001\n\025InsetsControllerProto\022-\n"
  "\005state\030\001 \001(\0132\036.android.view.InsetsStateP"
  "roto\022>\n\007control\030\002 \003(\0132-.android.view.Ins"
  "etsAnimationControlImplProtoB\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto_deps[2] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsstate_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto_sccs[1] = {
  &scc_info_InsetsControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto, "frameworks/base/core/proto/android/view/insetscontroller.proto", 352,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto, 1, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto), true);
namespace android {
namespace view {

// ===================================================================

void InsetsControllerProto::InitAsDefaultInstance() {
  ::android::view::_InsetsControllerProto_default_instance_._instance.get_mutable()->state_ = const_cast< ::android::view::InsetsStateProto*>(
      ::android::view::InsetsStateProto::internal_default_instance());
}
class InsetsControllerProto::_Internal {
 public:
  using HasBits = decltype(std::declval<InsetsControllerProto>()._has_bits_);
  static const ::android::view::InsetsStateProto& state(const InsetsControllerProto* msg);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::view::InsetsStateProto&
InsetsControllerProto::_Internal::state(const InsetsControllerProto* msg) {
  return *msg->state_;
}
void InsetsControllerProto::clear_state() {
  if (state_ != nullptr) state_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void InsetsControllerProto::clear_control() {
  control_.Clear();
}
InsetsControllerProto::InsetsControllerProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.InsetsControllerProto)
}
InsetsControllerProto::InsetsControllerProto(const InsetsControllerProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      control_(from.control_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::android::view::InsetsStateProto(*from.state_);
  } else {
    state_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:android.view.InsetsControllerProto)
}

void InsetsControllerProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InsetsControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto.base);
  state_ = nullptr;
}

InsetsControllerProto::~InsetsControllerProto() {
  // @@protoc_insertion_point(destructor:android.view.InsetsControllerProto)
  SharedDtor();
}

void InsetsControllerProto::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
}

void InsetsControllerProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InsetsControllerProto& InsetsControllerProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InsetsControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetscontroller_2eproto.base);
  return *internal_default_instance();
}


void InsetsControllerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.InsetsControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  control_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(state_ != nullptr);
    state_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InsetsControllerProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.view.InsetsStateProto state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.view.InsetsAnimationControlImplProto control = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_control(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InsetsControllerProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.InsetsControllerProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.view.InsetsStateProto state = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.view.InsetsAnimationControlImplProto control = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_control()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.InsetsControllerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.InsetsControllerProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InsetsControllerProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.InsetsControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.view.InsetsStateProto state = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::state(this), output);
  }

  // repeated .android.view.InsetsAnimationControlImplProto control = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->control_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->control(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.InsetsControllerProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* InsetsControllerProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.InsetsControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.view.InsetsStateProto state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::state(this), target);
  }

  // repeated .android.view.InsetsAnimationControlImplProto control = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->control_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->control(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.InsetsControllerProto)
  return target;
}

size_t InsetsControllerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.InsetsControllerProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.view.InsetsAnimationControlImplProto control = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->control_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->control(static_cast<int>(i)));
    }
  }

  // optional .android.view.InsetsStateProto state = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *state_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsetsControllerProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.InsetsControllerProto)
  GOOGLE_DCHECK_NE(&from, this);
  const InsetsControllerProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InsetsControllerProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.InsetsControllerProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.InsetsControllerProto)
    MergeFrom(*source);
  }
}

void InsetsControllerProto::MergeFrom(const InsetsControllerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.InsetsControllerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  control_.MergeFrom(from.control_);
  if (from.has_state()) {
    mutable_state()->::android::view::InsetsStateProto::MergeFrom(from.state());
  }
}

void InsetsControllerProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.InsetsControllerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsetsControllerProto::CopyFrom(const InsetsControllerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.InsetsControllerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsetsControllerProto::IsInitialized() const {
  return true;
}

void InsetsControllerProto::InternalSwap(InsetsControllerProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&control_)->InternalSwap(CastToBase(&other->control_));
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InsetsControllerProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::view::InsetsControllerProto* Arena::CreateMaybeMessage< ::android::view::InsetsControllerProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::InsetsControllerProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
