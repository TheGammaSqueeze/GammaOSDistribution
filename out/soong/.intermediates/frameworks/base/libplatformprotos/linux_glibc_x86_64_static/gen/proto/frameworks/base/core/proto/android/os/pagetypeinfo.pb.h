// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/os/pagetypeinfo.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto;
namespace android {
namespace os {
class PageTypeInfoProto;
class PageTypeInfoProtoDefaultTypeInternal;
extern PageTypeInfoProtoDefaultTypeInternal _PageTypeInfoProto_default_instance_;
class PageTypeInfoProto_Block;
class PageTypeInfoProto_BlockDefaultTypeInternal;
extern PageTypeInfoProto_BlockDefaultTypeInternal _PageTypeInfoProto_Block_default_instance_;
class PageTypeInfoProto_MigrateType;
class PageTypeInfoProto_MigrateTypeDefaultTypeInternal;
extern PageTypeInfoProto_MigrateTypeDefaultTypeInternal _PageTypeInfoProto_MigrateType_default_instance_;
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::os::PageTypeInfoProto* Arena::CreateMaybeMessage<::android::os::PageTypeInfoProto>(Arena*);
template<> ::android::os::PageTypeInfoProto_Block* Arena::CreateMaybeMessage<::android::os::PageTypeInfoProto_Block>(Arena*);
template<> ::android::os::PageTypeInfoProto_MigrateType* Arena::CreateMaybeMessage<::android::os::PageTypeInfoProto_MigrateType>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace os {

// ===================================================================

class PageTypeInfoProto_MigrateType :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.os.PageTypeInfoProto.MigrateType) */ {
 public:
  PageTypeInfoProto_MigrateType();
  virtual ~PageTypeInfoProto_MigrateType();

  PageTypeInfoProto_MigrateType(const PageTypeInfoProto_MigrateType& from);
  PageTypeInfoProto_MigrateType(PageTypeInfoProto_MigrateType&& from) noexcept
    : PageTypeInfoProto_MigrateType() {
    *this = ::std::move(from);
  }

  inline PageTypeInfoProto_MigrateType& operator=(const PageTypeInfoProto_MigrateType& from) {
    CopyFrom(from);
    return *this;
  }
  inline PageTypeInfoProto_MigrateType& operator=(PageTypeInfoProto_MigrateType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PageTypeInfoProto_MigrateType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PageTypeInfoProto_MigrateType* internal_default_instance() {
    return reinterpret_cast<const PageTypeInfoProto_MigrateType*>(
               &_PageTypeInfoProto_MigrateType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PageTypeInfoProto_MigrateType& a, PageTypeInfoProto_MigrateType& b) {
    a.Swap(&b);
  }
  inline void Swap(PageTypeInfoProto_MigrateType* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PageTypeInfoProto_MigrateType* New() const final {
    return CreateMaybeMessage<PageTypeInfoProto_MigrateType>(nullptr);
  }

  PageTypeInfoProto_MigrateType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PageTypeInfoProto_MigrateType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PageTypeInfoProto_MigrateType& from);
  void MergeFrom(const PageTypeInfoProto_MigrateType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PageTypeInfoProto_MigrateType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.PageTypeInfoProto.MigrateType";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFreePagesCountFieldNumber = 4,
    kZoneFieldNumber = 2,
    kTypeFieldNumber = 3,
    kNodeFieldNumber = 1,
  };
  // repeated int32 free_pages_count = 4;
  int free_pages_count_size() const;
  void clear_free_pages_count();
  ::PROTOBUF_NAMESPACE_ID::int32 free_pages_count(int index) const;
  void set_free_pages_count(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_free_pages_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      free_pages_count() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_free_pages_count();

  // optional string zone = 2;
  bool has_zone() const;
  void clear_zone();
  const std::string& zone() const;
  void set_zone(const std::string& value);
  void set_zone(std::string&& value);
  void set_zone(const char* value);
  void set_zone(const char* value, size_t size);
  std::string* mutable_zone();
  std::string* release_zone();
  void set_allocated_zone(std::string* zone);

  // optional string type = 3;
  bool has_type() const;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);

  // optional int32 node = 1;
  bool has_node() const;
  void clear_node();
  ::PROTOBUF_NAMESPACE_ID::int32 node() const;
  void set_node(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.PageTypeInfoProto.MigrateType)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > free_pages_count_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zone_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  ::PROTOBUF_NAMESPACE_ID::int32 node_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto;
};
// -------------------------------------------------------------------

class PageTypeInfoProto_Block :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.os.PageTypeInfoProto.Block) */ {
 public:
  PageTypeInfoProto_Block();
  virtual ~PageTypeInfoProto_Block();

  PageTypeInfoProto_Block(const PageTypeInfoProto_Block& from);
  PageTypeInfoProto_Block(PageTypeInfoProto_Block&& from) noexcept
    : PageTypeInfoProto_Block() {
    *this = ::std::move(from);
  }

  inline PageTypeInfoProto_Block& operator=(const PageTypeInfoProto_Block& from) {
    CopyFrom(from);
    return *this;
  }
  inline PageTypeInfoProto_Block& operator=(PageTypeInfoProto_Block&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PageTypeInfoProto_Block& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PageTypeInfoProto_Block* internal_default_instance() {
    return reinterpret_cast<const PageTypeInfoProto_Block*>(
               &_PageTypeInfoProto_Block_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PageTypeInfoProto_Block& a, PageTypeInfoProto_Block& b) {
    a.Swap(&b);
  }
  inline void Swap(PageTypeInfoProto_Block* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PageTypeInfoProto_Block* New() const final {
    return CreateMaybeMessage<PageTypeInfoProto_Block>(nullptr);
  }

  PageTypeInfoProto_Block* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PageTypeInfoProto_Block>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PageTypeInfoProto_Block& from);
  void MergeFrom(const PageTypeInfoProto_Block& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PageTypeInfoProto_Block* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.PageTypeInfoProto.Block";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kZoneFieldNumber = 2,
    kNodeFieldNumber = 1,
    kUnmovableFieldNumber = 3,
    kReclaimableFieldNumber = 4,
    kMovableFieldNumber = 5,
    kCmaFieldNumber = 6,
    kReserveFieldNumber = 7,
    kIsolateFieldNumber = 8,
    kHighatomicFieldNumber = 9,
  };
  // optional string zone = 2;
  bool has_zone() const;
  void clear_zone();
  const std::string& zone() const;
  void set_zone(const std::string& value);
  void set_zone(std::string&& value);
  void set_zone(const char* value);
  void set_zone(const char* value, size_t size);
  std::string* mutable_zone();
  std::string* release_zone();
  void set_allocated_zone(std::string* zone);

  // optional int32 node = 1;
  bool has_node() const;
  void clear_node();
  ::PROTOBUF_NAMESPACE_ID::int32 node() const;
  void set_node(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 unmovable = 3;
  bool has_unmovable() const;
  void clear_unmovable();
  ::PROTOBUF_NAMESPACE_ID::int32 unmovable() const;
  void set_unmovable(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 reclaimable = 4;
  bool has_reclaimable() const;
  void clear_reclaimable();
  ::PROTOBUF_NAMESPACE_ID::int32 reclaimable() const;
  void set_reclaimable(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 movable = 5;
  bool has_movable() const;
  void clear_movable();
  ::PROTOBUF_NAMESPACE_ID::int32 movable() const;
  void set_movable(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 cma = 6;
  bool has_cma() const;
  void clear_cma();
  ::PROTOBUF_NAMESPACE_ID::int32 cma() const;
  void set_cma(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 reserve = 7;
  bool has_reserve() const;
  void clear_reserve();
  ::PROTOBUF_NAMESPACE_ID::int32 reserve() const;
  void set_reserve(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 isolate = 8;
  bool has_isolate() const;
  void clear_isolate();
  ::PROTOBUF_NAMESPACE_ID::int32 isolate() const;
  void set_isolate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 highatomic = 9;
  bool has_highatomic() const;
  void clear_highatomic();
  ::PROTOBUF_NAMESPACE_ID::int32 highatomic() const;
  void set_highatomic(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.PageTypeInfoProto.Block)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr zone_;
  ::PROTOBUF_NAMESPACE_ID::int32 node_;
  ::PROTOBUF_NAMESPACE_ID::int32 unmovable_;
  ::PROTOBUF_NAMESPACE_ID::int32 reclaimable_;
  ::PROTOBUF_NAMESPACE_ID::int32 movable_;
  ::PROTOBUF_NAMESPACE_ID::int32 cma_;
  ::PROTOBUF_NAMESPACE_ID::int32 reserve_;
  ::PROTOBUF_NAMESPACE_ID::int32 isolate_;
  ::PROTOBUF_NAMESPACE_ID::int32 highatomic_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto;
};
// -------------------------------------------------------------------

class PageTypeInfoProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.os.PageTypeInfoProto) */ {
 public:
  PageTypeInfoProto();
  virtual ~PageTypeInfoProto();

  PageTypeInfoProto(const PageTypeInfoProto& from);
  PageTypeInfoProto(PageTypeInfoProto&& from) noexcept
    : PageTypeInfoProto() {
    *this = ::std::move(from);
  }

  inline PageTypeInfoProto& operator=(const PageTypeInfoProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline PageTypeInfoProto& operator=(PageTypeInfoProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PageTypeInfoProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PageTypeInfoProto* internal_default_instance() {
    return reinterpret_cast<const PageTypeInfoProto*>(
               &_PageTypeInfoProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PageTypeInfoProto& a, PageTypeInfoProto& b) {
    a.Swap(&b);
  }
  inline void Swap(PageTypeInfoProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PageTypeInfoProto* New() const final {
    return CreateMaybeMessage<PageTypeInfoProto>(nullptr);
  }

  PageTypeInfoProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PageTypeInfoProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PageTypeInfoProto& from);
  void MergeFrom(const PageTypeInfoProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PageTypeInfoProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.PageTypeInfoProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PageTypeInfoProto_MigrateType MigrateType;
  typedef PageTypeInfoProto_Block Block;

  // accessors -------------------------------------------------------

  enum : int {
    kMigrateTypesFieldNumber = 3,
    kBlocksFieldNumber = 4,
    kPageBlockOrderFieldNumber = 1,
    kPagesPerBlockFieldNumber = 2,
  };
  // repeated .android.os.PageTypeInfoProto.MigrateType migrate_types = 3;
  int migrate_types_size() const;
  void clear_migrate_types();
  ::android::os::PageTypeInfoProto_MigrateType* mutable_migrate_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::PageTypeInfoProto_MigrateType >*
      mutable_migrate_types();
  const ::android::os::PageTypeInfoProto_MigrateType& migrate_types(int index) const;
  ::android::os::PageTypeInfoProto_MigrateType* add_migrate_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::PageTypeInfoProto_MigrateType >&
      migrate_types() const;

  // repeated .android.os.PageTypeInfoProto.Block blocks = 4;
  int blocks_size() const;
  void clear_blocks();
  ::android::os::PageTypeInfoProto_Block* mutable_blocks(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::PageTypeInfoProto_Block >*
      mutable_blocks();
  const ::android::os::PageTypeInfoProto_Block& blocks(int index) const;
  ::android::os::PageTypeInfoProto_Block* add_blocks();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::PageTypeInfoProto_Block >&
      blocks() const;

  // optional int32 page_block_order = 1;
  bool has_page_block_order() const;
  void clear_page_block_order();
  ::PROTOBUF_NAMESPACE_ID::int32 page_block_order() const;
  void set_page_block_order(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 pages_per_block = 2;
  bool has_pages_per_block() const;
  void clear_pages_per_block();
  ::PROTOBUF_NAMESPACE_ID::int32 pages_per_block() const;
  void set_pages_per_block(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.PageTypeInfoProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::PageTypeInfoProto_MigrateType > migrate_types_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::PageTypeInfoProto_Block > blocks_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_block_order_;
  ::PROTOBUF_NAMESPACE_ID::int32 pages_per_block_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PageTypeInfoProto_MigrateType

// optional int32 node = 1;
inline bool PageTypeInfoProto_MigrateType::has_node() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PageTypeInfoProto_MigrateType::clear_node() {
  node_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageTypeInfoProto_MigrateType::node() const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.MigrateType.node)
  return node_;
}
inline void PageTypeInfoProto_MigrateType::set_node(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  node_ = value;
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.MigrateType.node)
}

// optional string zone = 2;
inline bool PageTypeInfoProto_MigrateType::has_zone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PageTypeInfoProto_MigrateType::clear_zone() {
  zone_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PageTypeInfoProto_MigrateType::zone() const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.MigrateType.zone)
  return zone_.GetNoArena();
}
inline void PageTypeInfoProto_MigrateType::set_zone(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  zone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.MigrateType.zone)
}
inline void PageTypeInfoProto_MigrateType::set_zone(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  zone_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.PageTypeInfoProto.MigrateType.zone)
}
inline void PageTypeInfoProto_MigrateType::set_zone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  zone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.PageTypeInfoProto.MigrateType.zone)
}
inline void PageTypeInfoProto_MigrateType::set_zone(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  zone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.PageTypeInfoProto.MigrateType.zone)
}
inline std::string* PageTypeInfoProto_MigrateType::mutable_zone() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.PageTypeInfoProto.MigrateType.zone)
  return zone_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PageTypeInfoProto_MigrateType::release_zone() {
  // @@protoc_insertion_point(field_release:android.os.PageTypeInfoProto.MigrateType.zone)
  if (!has_zone()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return zone_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PageTypeInfoProto_MigrateType::set_allocated_zone(std::string* zone) {
  if (zone != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  zone_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zone);
  // @@protoc_insertion_point(field_set_allocated:android.os.PageTypeInfoProto.MigrateType.zone)
}

// optional string type = 3;
inline bool PageTypeInfoProto_MigrateType::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PageTypeInfoProto_MigrateType::clear_type() {
  type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& PageTypeInfoProto_MigrateType::type() const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.MigrateType.type)
  return type_.GetNoArena();
}
inline void PageTypeInfoProto_MigrateType::set_type(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.MigrateType.type)
}
inline void PageTypeInfoProto_MigrateType::set_type(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.PageTypeInfoProto.MigrateType.type)
}
inline void PageTypeInfoProto_MigrateType::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.PageTypeInfoProto.MigrateType.type)
}
inline void PageTypeInfoProto_MigrateType::set_type(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.PageTypeInfoProto.MigrateType.type)
}
inline std::string* PageTypeInfoProto_MigrateType::mutable_type() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.PageTypeInfoProto.MigrateType.type)
  return type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PageTypeInfoProto_MigrateType::release_type() {
  // @@protoc_insertion_point(field_release:android.os.PageTypeInfoProto.MigrateType.type)
  if (!has_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return type_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PageTypeInfoProto_MigrateType::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:android.os.PageTypeInfoProto.MigrateType.type)
}

// repeated int32 free_pages_count = 4;
inline int PageTypeInfoProto_MigrateType::free_pages_count_size() const {
  return free_pages_count_.size();
}
inline void PageTypeInfoProto_MigrateType::clear_free_pages_count() {
  free_pages_count_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageTypeInfoProto_MigrateType::free_pages_count(int index) const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.MigrateType.free_pages_count)
  return free_pages_count_.Get(index);
}
inline void PageTypeInfoProto_MigrateType::set_free_pages_count(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  free_pages_count_.Set(index, value);
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.MigrateType.free_pages_count)
}
inline void PageTypeInfoProto_MigrateType::add_free_pages_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  free_pages_count_.Add(value);
  // @@protoc_insertion_point(field_add:android.os.PageTypeInfoProto.MigrateType.free_pages_count)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
PageTypeInfoProto_MigrateType::free_pages_count() const {
  // @@protoc_insertion_point(field_list:android.os.PageTypeInfoProto.MigrateType.free_pages_count)
  return free_pages_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
PageTypeInfoProto_MigrateType::mutable_free_pages_count() {
  // @@protoc_insertion_point(field_mutable_list:android.os.PageTypeInfoProto.MigrateType.free_pages_count)
  return &free_pages_count_;
}

// -------------------------------------------------------------------

// PageTypeInfoProto_Block

// optional int32 node = 1;
inline bool PageTypeInfoProto_Block::has_node() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PageTypeInfoProto_Block::clear_node() {
  node_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageTypeInfoProto_Block::node() const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.Block.node)
  return node_;
}
inline void PageTypeInfoProto_Block::set_node(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  node_ = value;
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.Block.node)
}

// optional string zone = 2;
inline bool PageTypeInfoProto_Block::has_zone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PageTypeInfoProto_Block::clear_zone() {
  zone_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PageTypeInfoProto_Block::zone() const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.Block.zone)
  return zone_.GetNoArena();
}
inline void PageTypeInfoProto_Block::set_zone(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  zone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.Block.zone)
}
inline void PageTypeInfoProto_Block::set_zone(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  zone_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.PageTypeInfoProto.Block.zone)
}
inline void PageTypeInfoProto_Block::set_zone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  zone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.PageTypeInfoProto.Block.zone)
}
inline void PageTypeInfoProto_Block::set_zone(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  zone_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.PageTypeInfoProto.Block.zone)
}
inline std::string* PageTypeInfoProto_Block::mutable_zone() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.PageTypeInfoProto.Block.zone)
  return zone_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PageTypeInfoProto_Block::release_zone() {
  // @@protoc_insertion_point(field_release:android.os.PageTypeInfoProto.Block.zone)
  if (!has_zone()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return zone_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PageTypeInfoProto_Block::set_allocated_zone(std::string* zone) {
  if (zone != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  zone_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), zone);
  // @@protoc_insertion_point(field_set_allocated:android.os.PageTypeInfoProto.Block.zone)
}

// optional int32 unmovable = 3;
inline bool PageTypeInfoProto_Block::has_unmovable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PageTypeInfoProto_Block::clear_unmovable() {
  unmovable_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageTypeInfoProto_Block::unmovable() const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.Block.unmovable)
  return unmovable_;
}
inline void PageTypeInfoProto_Block::set_unmovable(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  unmovable_ = value;
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.Block.unmovable)
}

// optional int32 reclaimable = 4;
inline bool PageTypeInfoProto_Block::has_reclaimable() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PageTypeInfoProto_Block::clear_reclaimable() {
  reclaimable_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageTypeInfoProto_Block::reclaimable() const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.Block.reclaimable)
  return reclaimable_;
}
inline void PageTypeInfoProto_Block::set_reclaimable(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  reclaimable_ = value;
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.Block.reclaimable)
}

// optional int32 movable = 5;
inline bool PageTypeInfoProto_Block::has_movable() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PageTypeInfoProto_Block::clear_movable() {
  movable_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageTypeInfoProto_Block::movable() const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.Block.movable)
  return movable_;
}
inline void PageTypeInfoProto_Block::set_movable(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  movable_ = value;
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.Block.movable)
}

// optional int32 cma = 6;
inline bool PageTypeInfoProto_Block::has_cma() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PageTypeInfoProto_Block::clear_cma() {
  cma_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageTypeInfoProto_Block::cma() const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.Block.cma)
  return cma_;
}
inline void PageTypeInfoProto_Block::set_cma(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  cma_ = value;
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.Block.cma)
}

// optional int32 reserve = 7;
inline bool PageTypeInfoProto_Block::has_reserve() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PageTypeInfoProto_Block::clear_reserve() {
  reserve_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageTypeInfoProto_Block::reserve() const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.Block.reserve)
  return reserve_;
}
inline void PageTypeInfoProto_Block::set_reserve(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  reserve_ = value;
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.Block.reserve)
}

// optional int32 isolate = 8;
inline bool PageTypeInfoProto_Block::has_isolate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PageTypeInfoProto_Block::clear_isolate() {
  isolate_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageTypeInfoProto_Block::isolate() const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.Block.isolate)
  return isolate_;
}
inline void PageTypeInfoProto_Block::set_isolate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  isolate_ = value;
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.Block.isolate)
}

// optional int32 highatomic = 9;
inline bool PageTypeInfoProto_Block::has_highatomic() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PageTypeInfoProto_Block::clear_highatomic() {
  highatomic_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageTypeInfoProto_Block::highatomic() const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.Block.highatomic)
  return highatomic_;
}
inline void PageTypeInfoProto_Block::set_highatomic(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  highatomic_ = value;
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.Block.highatomic)
}

// -------------------------------------------------------------------

// PageTypeInfoProto

// optional int32 page_block_order = 1;
inline bool PageTypeInfoProto::has_page_block_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PageTypeInfoProto::clear_page_block_order() {
  page_block_order_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageTypeInfoProto::page_block_order() const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.page_block_order)
  return page_block_order_;
}
inline void PageTypeInfoProto::set_page_block_order(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  page_block_order_ = value;
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.page_block_order)
}

// optional int32 pages_per_block = 2;
inline bool PageTypeInfoProto::has_pages_per_block() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PageTypeInfoProto::clear_pages_per_block() {
  pages_per_block_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageTypeInfoProto::pages_per_block() const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.pages_per_block)
  return pages_per_block_;
}
inline void PageTypeInfoProto::set_pages_per_block(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  pages_per_block_ = value;
  // @@protoc_insertion_point(field_set:android.os.PageTypeInfoProto.pages_per_block)
}

// repeated .android.os.PageTypeInfoProto.MigrateType migrate_types = 3;
inline int PageTypeInfoProto::migrate_types_size() const {
  return migrate_types_.size();
}
inline void PageTypeInfoProto::clear_migrate_types() {
  migrate_types_.Clear();
}
inline ::android::os::PageTypeInfoProto_MigrateType* PageTypeInfoProto::mutable_migrate_types(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.PageTypeInfoProto.migrate_types)
  return migrate_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::PageTypeInfoProto_MigrateType >*
PageTypeInfoProto::mutable_migrate_types() {
  // @@protoc_insertion_point(field_mutable_list:android.os.PageTypeInfoProto.migrate_types)
  return &migrate_types_;
}
inline const ::android::os::PageTypeInfoProto_MigrateType& PageTypeInfoProto::migrate_types(int index) const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.migrate_types)
  return migrate_types_.Get(index);
}
inline ::android::os::PageTypeInfoProto_MigrateType* PageTypeInfoProto::add_migrate_types() {
  // @@protoc_insertion_point(field_add:android.os.PageTypeInfoProto.migrate_types)
  return migrate_types_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::PageTypeInfoProto_MigrateType >&
PageTypeInfoProto::migrate_types() const {
  // @@protoc_insertion_point(field_list:android.os.PageTypeInfoProto.migrate_types)
  return migrate_types_;
}

// repeated .android.os.PageTypeInfoProto.Block blocks = 4;
inline int PageTypeInfoProto::blocks_size() const {
  return blocks_.size();
}
inline void PageTypeInfoProto::clear_blocks() {
  blocks_.Clear();
}
inline ::android::os::PageTypeInfoProto_Block* PageTypeInfoProto::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.PageTypeInfoProto.blocks)
  return blocks_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::PageTypeInfoProto_Block >*
PageTypeInfoProto::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:android.os.PageTypeInfoProto.blocks)
  return &blocks_;
}
inline const ::android::os::PageTypeInfoProto_Block& PageTypeInfoProto::blocks(int index) const {
  // @@protoc_insertion_point(field_get:android.os.PageTypeInfoProto.blocks)
  return blocks_.Get(index);
}
inline ::android::os::PageTypeInfoProto_Block* PageTypeInfoProto::add_blocks() {
  // @@protoc_insertion_point(field_add:android.os.PageTypeInfoProto.blocks)
  return blocks_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::PageTypeInfoProto_Block >&
PageTypeInfoProto::blocks() const {
  // @@protoc_insertion_point(field_list:android.os.PageTypeInfoProto.blocks)
  return blocks_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace os
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto
