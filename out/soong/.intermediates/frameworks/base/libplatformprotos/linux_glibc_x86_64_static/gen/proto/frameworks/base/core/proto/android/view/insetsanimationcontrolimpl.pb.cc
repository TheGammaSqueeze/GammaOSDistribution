// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/insetsanimationcontrolimpl.proto

#include "frameworks/base/core/proto/android/view/insetsanimationcontrolimpl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace android {
namespace view {
class InsetsAnimationControlImplProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InsetsAnimationControlImplProto> _instance;
} _InsetsAnimationControlImplProto_default_instance_;
}  // namespace view
}  // namespace android
static void InitDefaultsscc_info_InsetsAnimationControlImplProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::_InsetsAnimationControlImplProto_default_instance_;
    new (ptr) ::android::view::InsetsAnimationControlImplProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::InsetsAnimationControlImplProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InsetsAnimationControlImplProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_InsetsAnimationControlImplProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::view::InsetsAnimationControlImplProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::InsetsAnimationControlImplProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::view::InsetsAnimationControlImplProto, is_cancelled_),
  PROTOBUF_FIELD_OFFSET(::android::view::InsetsAnimationControlImplProto, is_finished_),
  PROTOBUF_FIELD_OFFSET(::android::view::InsetsAnimationControlImplProto, tmp_matrix_),
  PROTOBUF_FIELD_OFFSET(::android::view::InsetsAnimationControlImplProto, pending_insets_),
  PROTOBUF_FIELD_OFFSET(::android::view::InsetsAnimationControlImplProto, pending_fraction_),
  PROTOBUF_FIELD_OFFSET(::android::view::InsetsAnimationControlImplProto, shown_on_finish_),
  PROTOBUF_FIELD_OFFSET(::android::view::InsetsAnimationControlImplProto, current_alpha_),
  PROTOBUF_FIELD_OFFSET(::android::view::InsetsAnimationControlImplProto, pending_alpha_),
  2,
  3,
  0,
  1,
  5,
  4,
  6,
  7,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::android::view::InsetsAnimationControlImplProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::_InsetsAnimationControlImplProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nHframeworks/base/core/proto/android/vie"
  "w/insetsanimationcontrolimpl.proto\022\014andr"
  "oid.view\"\331\001\n\037InsetsAnimationControlImplP"
  "roto\022\024\n\014is_cancelled\030\001 \001(\010\022\023\n\013is_finishe"
  "d\030\002 \001(\010\022\022\n\ntmp_matrix\030\003 \001(\t\022\026\n\016pending_i"
  "nsets\030\004 \001(\t\022\030\n\020pending_fraction\030\005 \001(\002\022\027\n"
  "\017shown_on_finish\030\006 \001(\010\022\025\n\rcurrent_alpha\030"
  "\007 \001(\002\022\025\n\rpending_alpha\030\010 \001(\002B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto_sccs[1] = {
  &scc_info_InsetsAnimationControlImplProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto, "frameworks/base/core/proto/android/view/insetsanimationcontrolimpl.proto", 312,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto, 1, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto), true);
namespace android {
namespace view {

// ===================================================================

void InsetsAnimationControlImplProto::InitAsDefaultInstance() {
}
class InsetsAnimationControlImplProto::_Internal {
 public:
  using HasBits = decltype(std::declval<InsetsAnimationControlImplProto>()._has_bits_);
  static void set_has_is_cancelled(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_is_finished(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_tmp_matrix(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pending_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_pending_fraction(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_shown_on_finish(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_current_alpha(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_pending_alpha(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

InsetsAnimationControlImplProto::InsetsAnimationControlImplProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.InsetsAnimationControlImplProto)
}
InsetsAnimationControlImplProto::InsetsAnimationControlImplProto(const InsetsAnimationControlImplProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tmp_matrix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_tmp_matrix()) {
    tmp_matrix_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tmp_matrix_);
  }
  pending_insets_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_pending_insets()) {
    pending_insets_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pending_insets_);
  }
  ::memcpy(&is_cancelled_, &from.is_cancelled_,
    static_cast<size_t>(reinterpret_cast<char*>(&pending_alpha_) -
    reinterpret_cast<char*>(&is_cancelled_)) + sizeof(pending_alpha_));
  // @@protoc_insertion_point(copy_constructor:android.view.InsetsAnimationControlImplProto)
}

void InsetsAnimationControlImplProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InsetsAnimationControlImplProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto.base);
  tmp_matrix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pending_insets_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_cancelled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pending_alpha_) -
      reinterpret_cast<char*>(&is_cancelled_)) + sizeof(pending_alpha_));
}

InsetsAnimationControlImplProto::~InsetsAnimationControlImplProto() {
  // @@protoc_insertion_point(destructor:android.view.InsetsAnimationControlImplProto)
  SharedDtor();
}

void InsetsAnimationControlImplProto::SharedDtor() {
  tmp_matrix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pending_insets_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InsetsAnimationControlImplProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InsetsAnimationControlImplProto& InsetsAnimationControlImplProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InsetsAnimationControlImplProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsanimationcontrolimpl_2eproto.base);
  return *internal_default_instance();
}


void InsetsAnimationControlImplProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.InsetsAnimationControlImplProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      tmp_matrix_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pending_insets_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&is_cancelled_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pending_alpha_) -
        reinterpret_cast<char*>(&is_cancelled_)) + sizeof(pending_alpha_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InsetsAnimationControlImplProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool is_cancelled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_is_cancelled(&has_bits);
          is_cancelled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_finished = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_is_finished(&has_bits);
          is_finished_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string tmp_matrix = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_tmp_matrix(), ptr, ctx, "android.view.InsetsAnimationControlImplProto.tmp_matrix");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string pending_insets = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_pending_insets(), ptr, ctx, "android.view.InsetsAnimationControlImplProto.pending_insets");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float pending_fraction = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          _Internal::set_has_pending_fraction(&has_bits);
          pending_fraction_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional bool shown_on_finish = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_shown_on_finish(&has_bits);
          shown_on_finish_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float current_alpha = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          _Internal::set_has_current_alpha(&has_bits);
          current_alpha_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float pending_alpha = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          _Internal::set_has_pending_alpha(&has_bits);
          pending_alpha_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InsetsAnimationControlImplProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.InsetsAnimationControlImplProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_cancelled = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_is_cancelled(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_cancelled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_finished = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_is_finished(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tmp_matrix = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_tmp_matrix()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tmp_matrix().data(), static_cast<int>(this->tmp_matrix().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.view.InsetsAnimationControlImplProto.tmp_matrix");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pending_insets = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_pending_insets()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pending_insets().data(), static_cast<int>(this->pending_insets().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.view.InsetsAnimationControlImplProto.pending_insets");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pending_fraction = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (45 & 0xFF)) {
          _Internal::set_has_pending_fraction(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pending_fraction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool shown_on_finish = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_shown_on_finish(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &shown_on_finish_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float current_alpha = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (61 & 0xFF)) {
          _Internal::set_has_current_alpha(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &current_alpha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pending_alpha = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (69 & 0xFF)) {
          _Internal::set_has_pending_alpha(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pending_alpha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.InsetsAnimationControlImplProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.InsetsAnimationControlImplProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InsetsAnimationControlImplProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.InsetsAnimationControlImplProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_cancelled = 1;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->is_cancelled(), output);
  }

  // optional bool is_finished = 2;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->is_finished(), output);
  }

  // optional string tmp_matrix = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tmp_matrix().data(), static_cast<int>(this->tmp_matrix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.InsetsAnimationControlImplProto.tmp_matrix");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tmp_matrix(), output);
  }

  // optional string pending_insets = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pending_insets().data(), static_cast<int>(this->pending_insets().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.InsetsAnimationControlImplProto.pending_insets");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->pending_insets(), output);
  }

  // optional float pending_fraction = 5;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(5, this->pending_fraction(), output);
  }

  // optional bool shown_on_finish = 6;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->shown_on_finish(), output);
  }

  // optional float current_alpha = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(7, this->current_alpha(), output);
  }

  // optional float pending_alpha = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(8, this->pending_alpha(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.InsetsAnimationControlImplProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* InsetsAnimationControlImplProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.InsetsAnimationControlImplProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_cancelled = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->is_cancelled(), target);
  }

  // optional bool is_finished = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->is_finished(), target);
  }

  // optional string tmp_matrix = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tmp_matrix().data(), static_cast<int>(this->tmp_matrix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.InsetsAnimationControlImplProto.tmp_matrix");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->tmp_matrix(), target);
  }

  // optional string pending_insets = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pending_insets().data(), static_cast<int>(this->pending_insets().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.InsetsAnimationControlImplProto.pending_insets");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->pending_insets(), target);
  }

  // optional float pending_fraction = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->pending_fraction(), target);
  }

  // optional bool shown_on_finish = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->shown_on_finish(), target);
  }

  // optional float current_alpha = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->current_alpha(), target);
  }

  // optional float pending_alpha = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->pending_alpha(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.InsetsAnimationControlImplProto)
  return target;
}

size_t InsetsAnimationControlImplProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.InsetsAnimationControlImplProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string tmp_matrix = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->tmp_matrix());
    }

    // optional string pending_insets = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->pending_insets());
    }

    // optional bool is_cancelled = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool is_finished = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool shown_on_finish = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional float pending_fraction = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 4;
    }

    // optional float current_alpha = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 4;
    }

    // optional float pending_alpha = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsetsAnimationControlImplProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.InsetsAnimationControlImplProto)
  GOOGLE_DCHECK_NE(&from, this);
  const InsetsAnimationControlImplProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InsetsAnimationControlImplProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.InsetsAnimationControlImplProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.InsetsAnimationControlImplProto)
    MergeFrom(*source);
  }
}

void InsetsAnimationControlImplProto::MergeFrom(const InsetsAnimationControlImplProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.InsetsAnimationControlImplProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      tmp_matrix_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tmp_matrix_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pending_insets_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pending_insets_);
    }
    if (cached_has_bits & 0x00000004u) {
      is_cancelled_ = from.is_cancelled_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_finished_ = from.is_finished_;
    }
    if (cached_has_bits & 0x00000010u) {
      shown_on_finish_ = from.shown_on_finish_;
    }
    if (cached_has_bits & 0x00000020u) {
      pending_fraction_ = from.pending_fraction_;
    }
    if (cached_has_bits & 0x00000040u) {
      current_alpha_ = from.current_alpha_;
    }
    if (cached_has_bits & 0x00000080u) {
      pending_alpha_ = from.pending_alpha_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InsetsAnimationControlImplProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.InsetsAnimationControlImplProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsetsAnimationControlImplProto::CopyFrom(const InsetsAnimationControlImplProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.InsetsAnimationControlImplProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsetsAnimationControlImplProto::IsInitialized() const {
  return true;
}

void InsetsAnimationControlImplProto::InternalSwap(InsetsAnimationControlImplProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tmp_matrix_.Swap(&other->tmp_matrix_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pending_insets_.Swap(&other->pending_insets_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_cancelled_, other->is_cancelled_);
  swap(is_finished_, other->is_finished_);
  swap(shown_on_finish_, other->shown_on_finish_);
  swap(pending_fraction_, other->pending_fraction_);
  swap(current_alpha_, other->current_alpha_);
  swap(pending_alpha_, other->pending_alpha_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InsetsAnimationControlImplProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::view::InsetsAnimationControlImplProto* Arena::CreateMaybeMessage< ::android::view::InsetsAnimationControlImplProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::InsetsAnimationControlImplProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
