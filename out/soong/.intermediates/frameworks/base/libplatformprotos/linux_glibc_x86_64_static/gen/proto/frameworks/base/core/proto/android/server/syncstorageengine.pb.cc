// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/syncstorageengine.proto

#include "frameworks/base/core/proto/android/server/syncstorageengine.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SyncStatisticsProto_DayStats_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SyncStatusProto_StatusInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SyncStatusProto_StatusInfo_LastEventInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SyncStatusProto_StatusInfo_Stats_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto;
namespace com {
namespace android {
namespace server {
namespace content {
class SyncStatisticsProto_DayStatsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SyncStatisticsProto_DayStats> _instance;
} _SyncStatisticsProto_DayStats_default_instance_;
class SyncStatisticsProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SyncStatisticsProto> _instance;
} _SyncStatisticsProto_default_instance_;
class SyncStatusProto_StatusInfo_StatsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SyncStatusProto_StatusInfo_Stats> _instance;
} _SyncStatusProto_StatusInfo_Stats_default_instance_;
class SyncStatusProto_StatusInfo_LastEventInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SyncStatusProto_StatusInfo_LastEventInfo> _instance;
} _SyncStatusProto_StatusInfo_LastEventInfo_default_instance_;
class SyncStatusProto_StatusInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SyncStatusProto_StatusInfo> _instance;
} _SyncStatusProto_StatusInfo_default_instance_;
class SyncStatusProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SyncStatusProto> _instance;
} _SyncStatusProto_default_instance_;
}  // namespace content
}  // namespace server
}  // namespace android
}  // namespace com
static void InitDefaultsscc_info_SyncStatisticsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::content::_SyncStatisticsProto_default_instance_;
    new (ptr) ::com::android::server::content::SyncStatisticsProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::content::SyncStatisticsProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SyncStatisticsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SyncStatisticsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto}, {
      &scc_info_SyncStatisticsProto_DayStats_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base,}};

static void InitDefaultsscc_info_SyncStatisticsProto_DayStats_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::content::_SyncStatisticsProto_DayStats_default_instance_;
    new (ptr) ::com::android::server::content::SyncStatisticsProto_DayStats();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::content::SyncStatisticsProto_DayStats::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SyncStatisticsProto_DayStats_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SyncStatisticsProto_DayStats_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto}, {}};

static void InitDefaultsscc_info_SyncStatusProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::content::_SyncStatusProto_default_instance_;
    new (ptr) ::com::android::server::content::SyncStatusProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::content::SyncStatusProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SyncStatusProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SyncStatusProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto}, {
      &scc_info_SyncStatusProto_StatusInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base,}};

static void InitDefaultsscc_info_SyncStatusProto_StatusInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::content::_SyncStatusProto_StatusInfo_default_instance_;
    new (ptr) ::com::android::server::content::SyncStatusProto_StatusInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::content::SyncStatusProto_StatusInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SyncStatusProto_StatusInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_SyncStatusProto_StatusInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto}, {
      &scc_info_SyncStatusProto_StatusInfo_LastEventInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base,
      &scc_info_SyncStatusProto_StatusInfo_Stats_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base,}};

static void InitDefaultsscc_info_SyncStatusProto_StatusInfo_LastEventInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::content::_SyncStatusProto_StatusInfo_LastEventInfo_default_instance_;
    new (ptr) ::com::android::server::content::SyncStatusProto_StatusInfo_LastEventInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::content::SyncStatusProto_StatusInfo_LastEventInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SyncStatusProto_StatusInfo_LastEventInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SyncStatusProto_StatusInfo_LastEventInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto}, {}};

static void InitDefaultsscc_info_SyncStatusProto_StatusInfo_Stats_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::content::_SyncStatusProto_StatusInfo_Stats_default_instance_;
    new (ptr) ::com::android::server::content::SyncStatusProto_StatusInfo_Stats();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::content::SyncStatusProto_StatusInfo_Stats::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SyncStatusProto_StatusInfo_Stats_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SyncStatusProto_StatusInfo_Stats_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatisticsProto_DayStats, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatisticsProto_DayStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatisticsProto_DayStats, day_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatisticsProto_DayStats, success_count_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatisticsProto_DayStats, success_time_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatisticsProto_DayStats, failure_count_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatisticsProto_DayStats, failure_time_),
  0,
  1,
  2,
  4,
  3,
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatisticsProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatisticsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatisticsProto, stats_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_Stats, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_Stats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_Stats, total_elapsed_time_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_Stats, num_syncs_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_Stats, num_failures_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_Stats, num_cancels_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_Stats, num_source_other_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_Stats, num_source_local_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_Stats, num_source_poll_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_Stats, num_source_user_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_Stats, num_source_periodic_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_Stats, num_source_feed_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_LastEventInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_LastEventInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_LastEventInfo, last_event_time_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo_LastEventInfo, last_event_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, authority_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, last_success_time_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, last_success_source_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, last_failure_time_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, last_failure_source_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, last_failure_message_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, initial_failure_time_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, pending_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, initialize_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, periodic_sync_times_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, last_event_info_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, last_today_reset_time_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, total_stats_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, today_stats_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, yesterday_stats_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, per_source_last_success_times_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto_StatusInfo, per_source_last_failure_times_),
  5,
  4,
  6,
  7,
  9,
  0,
  8,
  10,
  11,
  ~0u,
  ~0u,
  12,
  1,
  2,
  3,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::content::SyncStatusProto, status_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::com::android::server::content::SyncStatisticsProto_DayStats)},
  { 15, 21, sizeof(::com::android::server::content::SyncStatisticsProto)},
  { 22, 37, sizeof(::com::android::server::content::SyncStatusProto_StatusInfo_Stats)},
  { 47, 54, sizeof(::com::android::server::content::SyncStatusProto_StatusInfo_LastEventInfo)},
  { 56, 78, sizeof(::com::android::server::content::SyncStatusProto_StatusInfo)},
  { 95, 101, sizeof(::com::android::server::content::SyncStatusProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::content::_SyncStatisticsProto_DayStats_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::content::_SyncStatisticsProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::content::_SyncStatusProto_StatusInfo_Stats_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::content::_SyncStatusProto_StatusInfo_LastEventInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::content::_SyncStatusProto_StatusInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::content::_SyncStatusProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nAframeworks/base/core/proto/android/ser"
  "ver/syncstorageengine.proto\022\032com.android"
  ".server.content\0320frameworks/base/core/pr"
  "oto/android/privacy.proto\"\321\001\n\023SyncStatis"
  "ticsProto\022G\n\005stats\030\001 \003(\01328.com.android.s"
  "erver.content.SyncStatisticsProto.DaySta"
  "ts\032q\n\010DayStats\022\013\n\003day\030\001 \001(\005\022\025\n\rsuccess_c"
  "ount\030\002 \001(\005\022\024\n\014success_time\030\003 \001(\003\022\025\n\rfail"
  "ure_count\030\004 \001(\005\022\024\n\014failure_time\030\005 \001(\003\"\207\t"
  "\n\017SyncStatusProto\022F\n\006status\030\001 \003(\01326.com."
  "android.server.content.SyncStatusProto.S"
  "tatusInfo\032\253\010\n\nStatusInfo\022\024\n\014authority_id"
  "\030\002 \001(\005\022\031\n\021last_success_time\030\003 \001(\003\022\033\n\023las"
  "t_success_source\030\004 \001(\005\022\031\n\021last_failure_t"
  "ime\030\005 \001(\003\022\033\n\023last_failure_source\030\006 \001(\005\022&"
  "\n\024last_failure_message\030\007 \001(\tB\010\232\237\325\207\003\002\010d\022\034"
  "\n\024initial_failure_time\030\010 \001(\003\022\017\n\007pending\030"
  "\t \001(\010\022\022\n\ninitialize\030\n \001(\010\022\033\n\023periodic_sy"
  "nc_times\030\013 \003(\003\022]\n\017last_event_info\030\014 \003(\0132"
  "D.com.android.server.content.SyncStatusP"
  "roto.StatusInfo.LastEventInfo\022\035\n\025last_to"
  "day_reset_time\030\r \001(\003\022Q\n\013total_stats\030\016 \001("
  "\0132<.com.android.server.content.SyncStatu"
  "sProto.StatusInfo.Stats\022Q\n\013today_stats\030\017"
  " \001(\0132<.com.android.server.content.SyncSt"
  "atusProto.StatusInfo.Stats\022U\n\017yesterday_"
  "stats\030\020 \001(\0132<.com.android.server.content"
  ".SyncStatusProto.StatusInfo.Stats\022%\n\035per"
  "_source_last_success_times\030\021 \003(\003\022%\n\035per_"
  "source_last_failure_times\030\022 \003(\003\032\375\001\n\005Stat"
  "s\022\032\n\022total_elapsed_time\030\001 \001(\003\022\021\n\tnum_syn"
  "cs\030\002 \001(\005\022\024\n\014num_failures\030\003 \001(\005\022\023\n\013num_ca"
  "ncels\030\004 \001(\005\022\030\n\020num_source_other\030\005 \001(\005\022\030\n"
  "\020num_source_local\030\006 \001(\005\022\027\n\017num_source_po"
  "ll\030\007 \001(\005\022\027\n\017num_source_user\030\010 \001(\005\022\033\n\023num"
  "_source_periodic\030\t \001(\005\022\027\n\017num_source_fee"
  "d\030\n \001(\005\032F\n\rLastEventInfo\022\027\n\017last_event_t"
  "ime\030\001 \001(\003\022\034\n\nlast_event\030\002 \001(\tB\010\232\237\325\207\003\002\010dB"
  "\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto_deps[1] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto_sccs[6] = {
  &scc_info_SyncStatisticsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base,
  &scc_info_SyncStatisticsProto_DayStats_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base,
  &scc_info_SyncStatusProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base,
  &scc_info_SyncStatusProto_StatusInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base,
  &scc_info_SyncStatusProto_StatusInfo_LastEventInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base,
  &scc_info_SyncStatusProto_StatusInfo_Stats_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto, "frameworks/base/core/proto/android/server/syncstorageengine.proto", 1523,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto_deps, 6, 1,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto, 6, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto), true);
namespace com {
namespace android {
namespace server {
namespace content {

// ===================================================================

void SyncStatisticsProto_DayStats::InitAsDefaultInstance() {
}
class SyncStatisticsProto_DayStats::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncStatisticsProto_DayStats>()._has_bits_);
  static void set_has_day(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_success_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_success_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_failure_count(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_failure_time(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

SyncStatisticsProto_DayStats::SyncStatisticsProto_DayStats()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.content.SyncStatisticsProto.DayStats)
}
SyncStatisticsProto_DayStats::SyncStatisticsProto_DayStats(const SyncStatisticsProto_DayStats& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&day_, &from.day_,
    static_cast<size_t>(reinterpret_cast<char*>(&failure_count_) -
    reinterpret_cast<char*>(&day_)) + sizeof(failure_count_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.content.SyncStatisticsProto.DayStats)
}

void SyncStatisticsProto_DayStats::SharedCtor() {
  ::memset(&day_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&failure_count_) -
      reinterpret_cast<char*>(&day_)) + sizeof(failure_count_));
}

SyncStatisticsProto_DayStats::~SyncStatisticsProto_DayStats() {
  // @@protoc_insertion_point(destructor:com.android.server.content.SyncStatisticsProto.DayStats)
  SharedDtor();
}

void SyncStatisticsProto_DayStats::SharedDtor() {
}

void SyncStatisticsProto_DayStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SyncStatisticsProto_DayStats& SyncStatisticsProto_DayStats::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SyncStatisticsProto_DayStats_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base);
  return *internal_default_instance();
}


void SyncStatisticsProto_DayStats::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.content.SyncStatisticsProto.DayStats)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&day_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&failure_count_) -
        reinterpret_cast<char*>(&day_)) + sizeof(failure_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SyncStatisticsProto_DayStats::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 day = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_day(&has_bits);
          day_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 success_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_success_count(&has_bits);
          success_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 success_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_success_time(&has_bits);
          success_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 failure_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_failure_count(&has_bits);
          failure_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 failure_time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_failure_time(&has_bits);
          failure_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SyncStatisticsProto_DayStats::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.content.SyncStatisticsProto.DayStats)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 day = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_day(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 success_count = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_success_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &success_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 success_time = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_success_time(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &success_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 failure_count = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_failure_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &failure_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 failure_time = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_failure_time(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &failure_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.content.SyncStatisticsProto.DayStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.content.SyncStatisticsProto.DayStats)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SyncStatisticsProto_DayStats::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.content.SyncStatisticsProto.DayStats)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 day = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->day(), output);
  }

  // optional int32 success_count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->success_count(), output);
  }

  // optional int64 success_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->success_time(), output);
  }

  // optional int32 failure_count = 4;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->failure_count(), output);
  }

  // optional int64 failure_time = 5;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(5, this->failure_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.content.SyncStatisticsProto.DayStats)
}

::PROTOBUF_NAMESPACE_ID::uint8* SyncStatisticsProto_DayStats::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.content.SyncStatisticsProto.DayStats)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 day = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->day(), target);
  }

  // optional int32 success_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->success_count(), target);
  }

  // optional int64 success_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->success_time(), target);
  }

  // optional int32 failure_count = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->failure_count(), target);
  }

  // optional int64 failure_time = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->failure_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.content.SyncStatisticsProto.DayStats)
  return target;
}

size_t SyncStatisticsProto_DayStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.content.SyncStatisticsProto.DayStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional int32 day = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->day());
    }

    // optional int32 success_count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->success_count());
    }

    // optional int64 success_time = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->success_time());
    }

    // optional int64 failure_time = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->failure_time());
    }

    // optional int32 failure_count = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->failure_count());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncStatisticsProto_DayStats::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.content.SyncStatisticsProto.DayStats)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncStatisticsProto_DayStats* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SyncStatisticsProto_DayStats>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.content.SyncStatisticsProto.DayStats)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.content.SyncStatisticsProto.DayStats)
    MergeFrom(*source);
  }
}

void SyncStatisticsProto_DayStats::MergeFrom(const SyncStatisticsProto_DayStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.content.SyncStatisticsProto.DayStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      day_ = from.day_;
    }
    if (cached_has_bits & 0x00000002u) {
      success_count_ = from.success_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      success_time_ = from.success_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      failure_time_ = from.failure_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      failure_count_ = from.failure_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SyncStatisticsProto_DayStats::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.content.SyncStatisticsProto.DayStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncStatisticsProto_DayStats::CopyFrom(const SyncStatisticsProto_DayStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.content.SyncStatisticsProto.DayStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncStatisticsProto_DayStats::IsInitialized() const {
  return true;
}

void SyncStatisticsProto_DayStats::InternalSwap(SyncStatisticsProto_DayStats* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(day_, other->day_);
  swap(success_count_, other->success_count_);
  swap(success_time_, other->success_time_);
  swap(failure_time_, other->failure_time_);
  swap(failure_count_, other->failure_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncStatisticsProto_DayStats::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SyncStatisticsProto::InitAsDefaultInstance() {
}
class SyncStatisticsProto::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncStatisticsProto>()._has_bits_);
};

SyncStatisticsProto::SyncStatisticsProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.content.SyncStatisticsProto)
}
SyncStatisticsProto::SyncStatisticsProto(const SyncStatisticsProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.android.server.content.SyncStatisticsProto)
}

void SyncStatisticsProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SyncStatisticsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base);
}

SyncStatisticsProto::~SyncStatisticsProto() {
  // @@protoc_insertion_point(destructor:com.android.server.content.SyncStatisticsProto)
  SharedDtor();
}

void SyncStatisticsProto::SharedDtor() {
}

void SyncStatisticsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SyncStatisticsProto& SyncStatisticsProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SyncStatisticsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base);
  return *internal_default_instance();
}


void SyncStatisticsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.content.SyncStatisticsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SyncStatisticsProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.android.server.content.SyncStatisticsProto.DayStats stats = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_stats(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SyncStatisticsProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.content.SyncStatisticsProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.android.server.content.SyncStatisticsProto.DayStats stats = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.content.SyncStatisticsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.content.SyncStatisticsProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SyncStatisticsProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.content.SyncStatisticsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.android.server.content.SyncStatisticsProto.DayStats stats = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->stats(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.content.SyncStatisticsProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* SyncStatisticsProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.content.SyncStatisticsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.android.server.content.SyncStatisticsProto.DayStats stats = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->stats(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.content.SyncStatisticsProto)
  return target;
}

size_t SyncStatisticsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.content.SyncStatisticsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.content.SyncStatisticsProto.DayStats stats = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->stats(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncStatisticsProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.content.SyncStatisticsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncStatisticsProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SyncStatisticsProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.content.SyncStatisticsProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.content.SyncStatisticsProto)
    MergeFrom(*source);
  }
}

void SyncStatisticsProto::MergeFrom(const SyncStatisticsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.content.SyncStatisticsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
}

void SyncStatisticsProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.content.SyncStatisticsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncStatisticsProto::CopyFrom(const SyncStatisticsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.content.SyncStatisticsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncStatisticsProto::IsInitialized() const {
  return true;
}

void SyncStatisticsProto::InternalSwap(SyncStatisticsProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&stats_)->InternalSwap(CastToBase(&other->stats_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncStatisticsProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SyncStatusProto_StatusInfo_Stats::InitAsDefaultInstance() {
}
class SyncStatusProto_StatusInfo_Stats::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncStatusProto_StatusInfo_Stats>()._has_bits_);
  static void set_has_total_elapsed_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_num_syncs(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_num_failures(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_num_cancels(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_num_source_other(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_num_source_local(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_num_source_poll(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_num_source_user(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_num_source_periodic(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_num_source_feed(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

SyncStatusProto_StatusInfo_Stats::SyncStatusProto_StatusInfo_Stats()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
}
SyncStatusProto_StatusInfo_Stats::SyncStatusProto_StatusInfo_Stats(const SyncStatusProto_StatusInfo_Stats& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_elapsed_time_, &from.total_elapsed_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_source_feed_) -
    reinterpret_cast<char*>(&total_elapsed_time_)) + sizeof(num_source_feed_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
}

void SyncStatusProto_StatusInfo_Stats::SharedCtor() {
  ::memset(&total_elapsed_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_source_feed_) -
      reinterpret_cast<char*>(&total_elapsed_time_)) + sizeof(num_source_feed_));
}

SyncStatusProto_StatusInfo_Stats::~SyncStatusProto_StatusInfo_Stats() {
  // @@protoc_insertion_point(destructor:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
  SharedDtor();
}

void SyncStatusProto_StatusInfo_Stats::SharedDtor() {
}

void SyncStatusProto_StatusInfo_Stats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SyncStatusProto_StatusInfo_Stats& SyncStatusProto_StatusInfo_Stats::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SyncStatusProto_StatusInfo_Stats_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base);
  return *internal_default_instance();
}


void SyncStatusProto_StatusInfo_Stats::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&total_elapsed_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_source_user_) -
        reinterpret_cast<char*>(&total_elapsed_time_)) + sizeof(num_source_user_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&num_source_periodic_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_source_feed_) -
        reinterpret_cast<char*>(&num_source_periodic_)) + sizeof(num_source_feed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SyncStatusProto_StatusInfo_Stats::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int64 total_elapsed_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_total_elapsed_time(&has_bits);
          total_elapsed_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 num_syncs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_num_syncs(&has_bits);
          num_syncs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 num_failures = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_num_failures(&has_bits);
          num_failures_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 num_cancels = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_num_cancels(&has_bits);
          num_cancels_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 num_source_other = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_num_source_other(&has_bits);
          num_source_other_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 num_source_local = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_num_source_local(&has_bits);
          num_source_local_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 num_source_poll = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_num_source_poll(&has_bits);
          num_source_poll_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 num_source_user = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_num_source_user(&has_bits);
          num_source_user_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 num_source_periodic = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_num_source_periodic(&has_bits);
          num_source_periodic_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 num_source_feed = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_num_source_feed(&has_bits);
          num_source_feed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SyncStatusProto_StatusInfo_Stats::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 total_elapsed_time = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_total_elapsed_time(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_elapsed_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_syncs = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_num_syncs(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_syncs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_failures = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_num_failures(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_failures_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_cancels = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_num_cancels(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_cancels_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_source_other = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_num_source_other(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_source_other_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_source_local = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_num_source_local(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_source_local_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_source_poll = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_num_source_poll(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_source_poll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_source_user = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_num_source_user(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_source_user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_source_periodic = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_num_source_periodic(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_source_periodic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_source_feed = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          _Internal::set_has_num_source_feed(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_source_feed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SyncStatusProto_StatusInfo_Stats::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 total_elapsed_time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(1, this->total_elapsed_time(), output);
  }

  // optional int32 num_syncs = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->num_syncs(), output);
  }

  // optional int32 num_failures = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->num_failures(), output);
  }

  // optional int32 num_cancels = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->num_cancels(), output);
  }

  // optional int32 num_source_other = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->num_source_other(), output);
  }

  // optional int32 num_source_local = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->num_source_local(), output);
  }

  // optional int32 num_source_poll = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->num_source_poll(), output);
  }

  // optional int32 num_source_user = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(8, this->num_source_user(), output);
  }

  // optional int32 num_source_periodic = 9;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(9, this->num_source_periodic(), output);
  }

  // optional int32 num_source_feed = 10;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(10, this->num_source_feed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
}

::PROTOBUF_NAMESPACE_ID::uint8* SyncStatusProto_StatusInfo_Stats::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 total_elapsed_time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->total_elapsed_time(), target);
  }

  // optional int32 num_syncs = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->num_syncs(), target);
  }

  // optional int32 num_failures = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->num_failures(), target);
  }

  // optional int32 num_cancels = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->num_cancels(), target);
  }

  // optional int32 num_source_other = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->num_source_other(), target);
  }

  // optional int32 num_source_local = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->num_source_local(), target);
  }

  // optional int32 num_source_poll = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->num_source_poll(), target);
  }

  // optional int32 num_source_user = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->num_source_user(), target);
  }

  // optional int32 num_source_periodic = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->num_source_periodic(), target);
  }

  // optional int32 num_source_feed = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->num_source_feed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
  return target;
}

size_t SyncStatusProto_StatusInfo_Stats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional int64 total_elapsed_time = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->total_elapsed_time());
    }

    // optional int32 num_syncs = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->num_syncs());
    }

    // optional int32 num_failures = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->num_failures());
    }

    // optional int32 num_cancels = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->num_cancels());
    }

    // optional int32 num_source_other = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->num_source_other());
    }

    // optional int32 num_source_local = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->num_source_local());
    }

    // optional int32 num_source_poll = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->num_source_poll());
    }

    // optional int32 num_source_user = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->num_source_user());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional int32 num_source_periodic = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->num_source_periodic());
    }

    // optional int32 num_source_feed = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->num_source_feed());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncStatusProto_StatusInfo_Stats::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncStatusProto_StatusInfo_Stats* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SyncStatusProto_StatusInfo_Stats>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
    MergeFrom(*source);
  }
}

void SyncStatusProto_StatusInfo_Stats::MergeFrom(const SyncStatusProto_StatusInfo_Stats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      total_elapsed_time_ = from.total_elapsed_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_syncs_ = from.num_syncs_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_failures_ = from.num_failures_;
    }
    if (cached_has_bits & 0x00000008u) {
      num_cancels_ = from.num_cancels_;
    }
    if (cached_has_bits & 0x00000010u) {
      num_source_other_ = from.num_source_other_;
    }
    if (cached_has_bits & 0x00000020u) {
      num_source_local_ = from.num_source_local_;
    }
    if (cached_has_bits & 0x00000040u) {
      num_source_poll_ = from.num_source_poll_;
    }
    if (cached_has_bits & 0x00000080u) {
      num_source_user_ = from.num_source_user_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      num_source_periodic_ = from.num_source_periodic_;
    }
    if (cached_has_bits & 0x00000200u) {
      num_source_feed_ = from.num_source_feed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SyncStatusProto_StatusInfo_Stats::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncStatusProto_StatusInfo_Stats::CopyFrom(const SyncStatusProto_StatusInfo_Stats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.content.SyncStatusProto.StatusInfo.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncStatusProto_StatusInfo_Stats::IsInitialized() const {
  return true;
}

void SyncStatusProto_StatusInfo_Stats::InternalSwap(SyncStatusProto_StatusInfo_Stats* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(total_elapsed_time_, other->total_elapsed_time_);
  swap(num_syncs_, other->num_syncs_);
  swap(num_failures_, other->num_failures_);
  swap(num_cancels_, other->num_cancels_);
  swap(num_source_other_, other->num_source_other_);
  swap(num_source_local_, other->num_source_local_);
  swap(num_source_poll_, other->num_source_poll_);
  swap(num_source_user_, other->num_source_user_);
  swap(num_source_periodic_, other->num_source_periodic_);
  swap(num_source_feed_, other->num_source_feed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncStatusProto_StatusInfo_Stats::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SyncStatusProto_StatusInfo_LastEventInfo::InitAsDefaultInstance() {
}
class SyncStatusProto_StatusInfo_LastEventInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncStatusProto_StatusInfo_LastEventInfo>()._has_bits_);
  static void set_has_last_event_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_last_event(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SyncStatusProto_StatusInfo_LastEventInfo::SyncStatusProto_StatusInfo_LastEventInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
}
SyncStatusProto_StatusInfo_LastEventInfo::SyncStatusProto_StatusInfo_LastEventInfo(const SyncStatusProto_StatusInfo_LastEventInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  last_event_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_last_event()) {
    last_event_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.last_event_);
  }
  last_event_time_ = from.last_event_time_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
}

void SyncStatusProto_StatusInfo_LastEventInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SyncStatusProto_StatusInfo_LastEventInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base);
  last_event_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_event_time_ = PROTOBUF_LONGLONG(0);
}

SyncStatusProto_StatusInfo_LastEventInfo::~SyncStatusProto_StatusInfo_LastEventInfo() {
  // @@protoc_insertion_point(destructor:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
  SharedDtor();
}

void SyncStatusProto_StatusInfo_LastEventInfo::SharedDtor() {
  last_event_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SyncStatusProto_StatusInfo_LastEventInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SyncStatusProto_StatusInfo_LastEventInfo& SyncStatusProto_StatusInfo_LastEventInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SyncStatusProto_StatusInfo_LastEventInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base);
  return *internal_default_instance();
}


void SyncStatusProto_StatusInfo_LastEventInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    last_event_.ClearNonDefaultToEmptyNoArena();
  }
  last_event_time_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SyncStatusProto_StatusInfo_LastEventInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int64 last_event_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_last_event_time(&has_bits);
          last_event_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string last_event = 2 [(.android.privacy) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_last_event(), ptr, ctx, "com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo.last_event");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SyncStatusProto_StatusInfo_LastEventInfo::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 last_event_time = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_last_event_time(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_event_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string last_event = 2 [(.android.privacy) = {
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_last_event()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->last_event().data(), static_cast<int>(this->last_event().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo.last_event");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SyncStatusProto_StatusInfo_LastEventInfo::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 last_event_time = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(1, this->last_event_time(), output);
  }

  // optional string last_event = 2 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->last_event().data(), static_cast<int>(this->last_event().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo.last_event");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->last_event(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
}

::PROTOBUF_NAMESPACE_ID::uint8* SyncStatusProto_StatusInfo_LastEventInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 last_event_time = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->last_event_time(), target);
  }

  // optional string last_event = 2 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->last_event().data(), static_cast<int>(this->last_event().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo.last_event");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->last_event(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
  return target;
}

size_t SyncStatusProto_StatusInfo_LastEventInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string last_event = 2 [(.android.privacy) = {
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->last_event());
    }

    // optional int64 last_event_time = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->last_event_time());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncStatusProto_StatusInfo_LastEventInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncStatusProto_StatusInfo_LastEventInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SyncStatusProto_StatusInfo_LastEventInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
    MergeFrom(*source);
  }
}

void SyncStatusProto_StatusInfo_LastEventInfo::MergeFrom(const SyncStatusProto_StatusInfo_LastEventInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      last_event_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.last_event_);
    }
    if (cached_has_bits & 0x00000002u) {
      last_event_time_ = from.last_event_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SyncStatusProto_StatusInfo_LastEventInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncStatusProto_StatusInfo_LastEventInfo::CopyFrom(const SyncStatusProto_StatusInfo_LastEventInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncStatusProto_StatusInfo_LastEventInfo::IsInitialized() const {
  return true;
}

void SyncStatusProto_StatusInfo_LastEventInfo::InternalSwap(SyncStatusProto_StatusInfo_LastEventInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  last_event_.Swap(&other->last_event_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(last_event_time_, other->last_event_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncStatusProto_StatusInfo_LastEventInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SyncStatusProto_StatusInfo::InitAsDefaultInstance() {
  ::com::android::server::content::_SyncStatusProto_StatusInfo_default_instance_._instance.get_mutable()->total_stats_ = const_cast< ::com::android::server::content::SyncStatusProto_StatusInfo_Stats*>(
      ::com::android::server::content::SyncStatusProto_StatusInfo_Stats::internal_default_instance());
  ::com::android::server::content::_SyncStatusProto_StatusInfo_default_instance_._instance.get_mutable()->today_stats_ = const_cast< ::com::android::server::content::SyncStatusProto_StatusInfo_Stats*>(
      ::com::android::server::content::SyncStatusProto_StatusInfo_Stats::internal_default_instance());
  ::com::android::server::content::_SyncStatusProto_StatusInfo_default_instance_._instance.get_mutable()->yesterday_stats_ = const_cast< ::com::android::server::content::SyncStatusProto_StatusInfo_Stats*>(
      ::com::android::server::content::SyncStatusProto_StatusInfo_Stats::internal_default_instance());
}
class SyncStatusProto_StatusInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncStatusProto_StatusInfo>()._has_bits_);
  static void set_has_authority_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_last_success_time(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_last_success_source(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_last_failure_time(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_last_failure_source(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_last_failure_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_initial_failure_time(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_pending(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_initialize(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_last_today_reset_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::com::android::server::content::SyncStatusProto_StatusInfo_Stats& total_stats(const SyncStatusProto_StatusInfo* msg);
  static void set_has_total_stats(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::com::android::server::content::SyncStatusProto_StatusInfo_Stats& today_stats(const SyncStatusProto_StatusInfo* msg);
  static void set_has_today_stats(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::com::android::server::content::SyncStatusProto_StatusInfo_Stats& yesterday_stats(const SyncStatusProto_StatusInfo* msg);
  static void set_has_yesterday_stats(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::com::android::server::content::SyncStatusProto_StatusInfo_Stats&
SyncStatusProto_StatusInfo::_Internal::total_stats(const SyncStatusProto_StatusInfo* msg) {
  return *msg->total_stats_;
}
const ::com::android::server::content::SyncStatusProto_StatusInfo_Stats&
SyncStatusProto_StatusInfo::_Internal::today_stats(const SyncStatusProto_StatusInfo* msg) {
  return *msg->today_stats_;
}
const ::com::android::server::content::SyncStatusProto_StatusInfo_Stats&
SyncStatusProto_StatusInfo::_Internal::yesterday_stats(const SyncStatusProto_StatusInfo* msg) {
  return *msg->yesterday_stats_;
}
SyncStatusProto_StatusInfo::SyncStatusProto_StatusInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.content.SyncStatusProto.StatusInfo)
}
SyncStatusProto_StatusInfo::SyncStatusProto_StatusInfo(const SyncStatusProto_StatusInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      periodic_sync_times_(from.periodic_sync_times_),
      last_event_info_(from.last_event_info_),
      per_source_last_success_times_(from.per_source_last_success_times_),
      per_source_last_failure_times_(from.per_source_last_failure_times_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  last_failure_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_last_failure_message()) {
    last_failure_message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.last_failure_message_);
  }
  if (from.has_total_stats()) {
    total_stats_ = new ::com::android::server::content::SyncStatusProto_StatusInfo_Stats(*from.total_stats_);
  } else {
    total_stats_ = nullptr;
  }
  if (from.has_today_stats()) {
    today_stats_ = new ::com::android::server::content::SyncStatusProto_StatusInfo_Stats(*from.today_stats_);
  } else {
    today_stats_ = nullptr;
  }
  if (from.has_yesterday_stats()) {
    yesterday_stats_ = new ::com::android::server::content::SyncStatusProto_StatusInfo_Stats(*from.yesterday_stats_);
  } else {
    yesterday_stats_ = nullptr;
  }
  ::memcpy(&last_success_time_, &from.last_success_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_today_reset_time_) -
    reinterpret_cast<char*>(&last_success_time_)) + sizeof(last_today_reset_time_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.content.SyncStatusProto.StatusInfo)
}

void SyncStatusProto_StatusInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SyncStatusProto_StatusInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base);
  last_failure_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_stats_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_today_reset_time_) -
      reinterpret_cast<char*>(&total_stats_)) + sizeof(last_today_reset_time_));
}

SyncStatusProto_StatusInfo::~SyncStatusProto_StatusInfo() {
  // @@protoc_insertion_point(destructor:com.android.server.content.SyncStatusProto.StatusInfo)
  SharedDtor();
}

void SyncStatusProto_StatusInfo::SharedDtor() {
  last_failure_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete total_stats_;
  if (this != internal_default_instance()) delete today_stats_;
  if (this != internal_default_instance()) delete yesterday_stats_;
}

void SyncStatusProto_StatusInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SyncStatusProto_StatusInfo& SyncStatusProto_StatusInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SyncStatusProto_StatusInfo_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base);
  return *internal_default_instance();
}


void SyncStatusProto_StatusInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.content.SyncStatusProto.StatusInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  periodic_sync_times_.Clear();
  last_event_info_.Clear();
  per_source_last_success_times_.Clear();
  per_source_last_failure_times_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      last_failure_message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(total_stats_ != nullptr);
      total_stats_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(today_stats_ != nullptr);
      today_stats_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(yesterday_stats_ != nullptr);
      yesterday_stats_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&last_success_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_failure_time_) -
        reinterpret_cast<char*>(&last_success_time_)) + sizeof(last_failure_time_));
  }
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&initial_failure_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_today_reset_time_) -
        reinterpret_cast<char*>(&initial_failure_time_)) + sizeof(last_today_reset_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SyncStatusProto_StatusInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 authority_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_authority_id(&has_bits);
          authority_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 last_success_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_last_success_time(&has_bits);
          last_success_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 last_success_source = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_last_success_source(&has_bits);
          last_success_source_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 last_failure_time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_last_failure_time(&has_bits);
          last_failure_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 last_failure_source = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_last_failure_source(&has_bits);
          last_failure_source_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string last_failure_message = 7 [(.android.privacy) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_last_failure_message(), ptr, ctx, "com.android.server.content.SyncStatusProto.StatusInfo.last_failure_message");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 initial_failure_time = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_initial_failure_time(&has_bits);
          initial_failure_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pending = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_pending(&has_bits);
          pending_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool initialize = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_initialize(&has_bits);
          initialize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 periodic_sync_times = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ptr -= 1;
          do {
            ptr += 1;
            add_periodic_sync_times(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 88);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(mutable_periodic_sync_times(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo last_event_info = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_last_event_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 98);
        } else goto handle_unusual;
        continue;
      // optional int64 last_today_reset_time = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_last_today_reset_time(&has_bits);
          last_today_reset_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats total_stats = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(mutable_total_stats(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats today_stats = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(mutable_today_stats(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats yesterday_stats = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(mutable_yesterday_stats(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 per_source_last_success_times = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          ptr -= 2;
          do {
            ptr += 2;
            add_per_source_last_success_times(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 392);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(mutable_per_source_last_success_times(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 per_source_last_failure_times = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          ptr -= 2;
          do {
            ptr += 2;
            add_per_source_last_failure_times(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 400);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(mutable_per_source_last_failure_times(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SyncStatusProto_StatusInfo::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.content.SyncStatusProto.StatusInfo)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 authority_id = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_authority_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &authority_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_success_time = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_last_success_time(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_success_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 last_success_source = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_last_success_source(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_success_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_failure_time = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_last_failure_time(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_failure_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 last_failure_source = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_last_failure_source(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_failure_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string last_failure_message = 7 [(.android.privacy) = {
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_last_failure_message()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->last_failure_message().data(), static_cast<int>(this->last_failure_message().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.content.SyncStatusProto.StatusInfo.last_failure_message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 initial_failure_time = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_initial_failure_time(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &initial_failure_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pending = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_pending(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pending_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool initialize = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          _Internal::set_has_initialize(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &initialize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 periodic_sync_times = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 1, 88u, input, this->mutable_periodic_sync_times())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_periodic_sync_times())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo last_event_info = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_last_event_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_today_reset_time = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (104 & 0xFF)) {
          _Internal::set_has_last_today_reset_time(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_today_reset_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats total_stats = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (114 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_total_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats today_stats = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (122 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_today_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats yesterday_stats = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (130 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_yesterday_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 per_source_last_success_times = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (136 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 2, 136u, input, this->mutable_per_source_last_success_times())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (138 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_per_source_last_success_times())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 per_source_last_failure_times = 18;
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (144 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 2, 144u, input, this->mutable_per_source_last_failure_times())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (146 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_per_source_last_failure_times())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.content.SyncStatusProto.StatusInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.content.SyncStatusProto.StatusInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SyncStatusProto_StatusInfo::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.content.SyncStatusProto.StatusInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 authority_id = 2;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->authority_id(), output);
  }

  // optional int64 last_success_time = 3;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->last_success_time(), output);
  }

  // optional int32 last_success_source = 4;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->last_success_source(), output);
  }

  // optional int64 last_failure_time = 5;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(5, this->last_failure_time(), output);
  }

  // optional int32 last_failure_source = 6;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->last_failure_source(), output);
  }

  // optional string last_failure_message = 7 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->last_failure_message().data(), static_cast<int>(this->last_failure_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.content.SyncStatusProto.StatusInfo.last_failure_message");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->last_failure_message(), output);
  }

  // optional int64 initial_failure_time = 8;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(8, this->initial_failure_time(), output);
  }

  // optional bool pending = 9;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(9, this->pending(), output);
  }

  // optional bool initialize = 10;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(10, this->initialize(), output);
  }

  // repeated int64 periodic_sync_times = 11;
  for (int i = 0, n = this->periodic_sync_times_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(
      11, this->periodic_sync_times(i), output);
  }

  // repeated .com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo last_event_info = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->last_event_info_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->last_event_info(static_cast<int>(i)),
      output);
  }

  // optional int64 last_today_reset_time = 13;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(13, this->last_today_reset_time(), output);
  }

  // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats total_stats = 14;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, _Internal::total_stats(this), output);
  }

  // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats today_stats = 15;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, _Internal::today_stats(this), output);
  }

  // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats yesterday_stats = 16;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, _Internal::yesterday_stats(this), output);
  }

  // repeated int64 per_source_last_success_times = 17;
  for (int i = 0, n = this->per_source_last_success_times_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(
      17, this->per_source_last_success_times(i), output);
  }

  // repeated int64 per_source_last_failure_times = 18;
  for (int i = 0, n = this->per_source_last_failure_times_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(
      18, this->per_source_last_failure_times(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.content.SyncStatusProto.StatusInfo)
}

::PROTOBUF_NAMESPACE_ID::uint8* SyncStatusProto_StatusInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.content.SyncStatusProto.StatusInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 authority_id = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->authority_id(), target);
  }

  // optional int64 last_success_time = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->last_success_time(), target);
  }

  // optional int32 last_success_source = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->last_success_source(), target);
  }

  // optional int64 last_failure_time = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->last_failure_time(), target);
  }

  // optional int32 last_failure_source = 6;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->last_failure_source(), target);
  }

  // optional string last_failure_message = 7 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->last_failure_message().data(), static_cast<int>(this->last_failure_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.content.SyncStatusProto.StatusInfo.last_failure_message");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        7, this->last_failure_message(), target);
  }

  // optional int64 initial_failure_time = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->initial_failure_time(), target);
  }

  // optional bool pending = 9;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->pending(), target);
  }

  // optional bool initialize = 10;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->initialize(), target);
  }

  // repeated int64 periodic_sync_times = 11;
  target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
    WriteInt64ToArray(11, this->periodic_sync_times_, target);

  // repeated .com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo last_event_info = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->last_event_info_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->last_event_info(static_cast<int>(i)), target);
  }

  // optional int64 last_today_reset_time = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(13, this->last_today_reset_time(), target);
  }

  // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats total_stats = 14;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, _Internal::total_stats(this), target);
  }

  // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats today_stats = 15;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, _Internal::today_stats(this), target);
  }

  // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats yesterday_stats = 16;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, _Internal::yesterday_stats(this), target);
  }

  // repeated int64 per_source_last_success_times = 17;
  target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
    WriteInt64ToArray(17, this->per_source_last_success_times_, target);

  // repeated int64 per_source_last_failure_times = 18;
  target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
    WriteInt64ToArray(18, this->per_source_last_failure_times_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.content.SyncStatusProto.StatusInfo)
  return target;
}

size_t SyncStatusProto_StatusInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.content.SyncStatusProto.StatusInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 periodic_sync_times = 11;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->periodic_sync_times_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->periodic_sync_times_size());
    total_size += data_size;
  }

  // repeated .com.android.server.content.SyncStatusProto.StatusInfo.LastEventInfo last_event_info = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->last_event_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->last_event_info(static_cast<int>(i)));
    }
  }

  // repeated int64 per_source_last_success_times = 17;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->per_source_last_success_times_);
    total_size += 2 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->per_source_last_success_times_size());
    total_size += data_size;
  }

  // repeated int64 per_source_last_failure_times = 18;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->per_source_last_failure_times_);
    total_size += 2 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->per_source_last_failure_times_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string last_failure_message = 7 [(.android.privacy) = {
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->last_failure_message());
    }

    // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats total_stats = 14;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *total_stats_);
    }

    // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats today_stats = 15;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *today_stats_);
    }

    // optional .com.android.server.content.SyncStatusProto.StatusInfo.Stats yesterday_stats = 16;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *yesterday_stats_);
    }

    // optional int64 last_success_time = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->last_success_time());
    }

    // optional int32 authority_id = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->authority_id());
    }

    // optional int32 last_success_source = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->last_success_source());
    }

    // optional int64 last_failure_time = 5;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->last_failure_time());
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional int64 initial_failure_time = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->initial_failure_time());
    }

    // optional int32 last_failure_source = 6;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->last_failure_source());
    }

    // optional bool pending = 9;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool initialize = 10;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional int64 last_today_reset_time = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->last_today_reset_time());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncStatusProto_StatusInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.content.SyncStatusProto.StatusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncStatusProto_StatusInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SyncStatusProto_StatusInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.content.SyncStatusProto.StatusInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.content.SyncStatusProto.StatusInfo)
    MergeFrom(*source);
  }
}

void SyncStatusProto_StatusInfo::MergeFrom(const SyncStatusProto_StatusInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.content.SyncStatusProto.StatusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  periodic_sync_times_.MergeFrom(from.periodic_sync_times_);
  last_event_info_.MergeFrom(from.last_event_info_);
  per_source_last_success_times_.MergeFrom(from.per_source_last_success_times_);
  per_source_last_failure_times_.MergeFrom(from.per_source_last_failure_times_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      last_failure_message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.last_failure_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_total_stats()->::com::android::server::content::SyncStatusProto_StatusInfo_Stats::MergeFrom(from.total_stats());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_today_stats()->::com::android::server::content::SyncStatusProto_StatusInfo_Stats::MergeFrom(from.today_stats());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_yesterday_stats()->::com::android::server::content::SyncStatusProto_StatusInfo_Stats::MergeFrom(from.yesterday_stats());
    }
    if (cached_has_bits & 0x00000010u) {
      last_success_time_ = from.last_success_time_;
    }
    if (cached_has_bits & 0x00000020u) {
      authority_id_ = from.authority_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      last_success_source_ = from.last_success_source_;
    }
    if (cached_has_bits & 0x00000080u) {
      last_failure_time_ = from.last_failure_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      initial_failure_time_ = from.initial_failure_time_;
    }
    if (cached_has_bits & 0x00000200u) {
      last_failure_source_ = from.last_failure_source_;
    }
    if (cached_has_bits & 0x00000400u) {
      pending_ = from.pending_;
    }
    if (cached_has_bits & 0x00000800u) {
      initialize_ = from.initialize_;
    }
    if (cached_has_bits & 0x00001000u) {
      last_today_reset_time_ = from.last_today_reset_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SyncStatusProto_StatusInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.content.SyncStatusProto.StatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncStatusProto_StatusInfo::CopyFrom(const SyncStatusProto_StatusInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.content.SyncStatusProto.StatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncStatusProto_StatusInfo::IsInitialized() const {
  return true;
}

void SyncStatusProto_StatusInfo::InternalSwap(SyncStatusProto_StatusInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  periodic_sync_times_.InternalSwap(&other->periodic_sync_times_);
  CastToBase(&last_event_info_)->InternalSwap(CastToBase(&other->last_event_info_));
  per_source_last_success_times_.InternalSwap(&other->per_source_last_success_times_);
  per_source_last_failure_times_.InternalSwap(&other->per_source_last_failure_times_);
  last_failure_message_.Swap(&other->last_failure_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(total_stats_, other->total_stats_);
  swap(today_stats_, other->today_stats_);
  swap(yesterday_stats_, other->yesterday_stats_);
  swap(last_success_time_, other->last_success_time_);
  swap(authority_id_, other->authority_id_);
  swap(last_success_source_, other->last_success_source_);
  swap(last_failure_time_, other->last_failure_time_);
  swap(initial_failure_time_, other->initial_failure_time_);
  swap(last_failure_source_, other->last_failure_source_);
  swap(pending_, other->pending_);
  swap(initialize_, other->initialize_);
  swap(last_today_reset_time_, other->last_today_reset_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncStatusProto_StatusInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SyncStatusProto::InitAsDefaultInstance() {
}
class SyncStatusProto::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncStatusProto>()._has_bits_);
};

SyncStatusProto::SyncStatusProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.content.SyncStatusProto)
}
SyncStatusProto::SyncStatusProto(const SyncStatusProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      status_(from.status_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.android.server.content.SyncStatusProto)
}

void SyncStatusProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SyncStatusProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base);
}

SyncStatusProto::~SyncStatusProto() {
  // @@protoc_insertion_point(destructor:com.android.server.content.SyncStatusProto)
  SharedDtor();
}

void SyncStatusProto::SharedDtor() {
}

void SyncStatusProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SyncStatusProto& SyncStatusProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SyncStatusProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsyncstorageengine_2eproto.base);
  return *internal_default_instance();
}


void SyncStatusProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.content.SyncStatusProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SyncStatusProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.android.server.content.SyncStatusProto.StatusInfo status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_status(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SyncStatusProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.content.SyncStatusProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.android.server.content.SyncStatusProto.StatusInfo status = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.content.SyncStatusProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.content.SyncStatusProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SyncStatusProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.content.SyncStatusProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.android.server.content.SyncStatusProto.StatusInfo status = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->status_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->status(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.content.SyncStatusProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* SyncStatusProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.content.SyncStatusProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.android.server.content.SyncStatusProto.StatusInfo status = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->status_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->status(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.content.SyncStatusProto)
  return target;
}

size_t SyncStatusProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.content.SyncStatusProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.content.SyncStatusProto.StatusInfo status = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->status_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->status(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncStatusProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.content.SyncStatusProto)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncStatusProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SyncStatusProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.content.SyncStatusProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.content.SyncStatusProto)
    MergeFrom(*source);
  }
}

void SyncStatusProto::MergeFrom(const SyncStatusProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.content.SyncStatusProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_.MergeFrom(from.status_);
}

void SyncStatusProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.content.SyncStatusProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncStatusProto::CopyFrom(const SyncStatusProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.content.SyncStatusProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncStatusProto::IsInitialized() const {
  return true;
}

void SyncStatusProto::InternalSwap(SyncStatusProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&status_)->InternalSwap(CastToBase(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncStatusProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace content
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::android::server::content::SyncStatisticsProto_DayStats* Arena::CreateMaybeMessage< ::com::android::server::content::SyncStatisticsProto_DayStats >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::content::SyncStatisticsProto_DayStats >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::content::SyncStatisticsProto* Arena::CreateMaybeMessage< ::com::android::server::content::SyncStatisticsProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::content::SyncStatisticsProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::content::SyncStatusProto_StatusInfo_Stats* Arena::CreateMaybeMessage< ::com::android::server::content::SyncStatusProto_StatusInfo_Stats >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::content::SyncStatusProto_StatusInfo_Stats >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::content::SyncStatusProto_StatusInfo_LastEventInfo* Arena::CreateMaybeMessage< ::com::android::server::content::SyncStatusProto_StatusInfo_LastEventInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::content::SyncStatusProto_StatusInfo_LastEventInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::content::SyncStatusProto_StatusInfo* Arena::CreateMaybeMessage< ::com::android::server::content::SyncStatusProto_StatusInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::content::SyncStatusProto_StatusInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::content::SyncStatusProto* Arena::CreateMaybeMessage< ::com::android::server::content::SyncStatusProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::content::SyncStatusProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
