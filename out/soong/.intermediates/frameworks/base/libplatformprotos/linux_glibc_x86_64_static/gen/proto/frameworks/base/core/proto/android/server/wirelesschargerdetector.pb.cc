// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/wirelesschargerdetector.proto

#include "frameworks/base/core/proto/android/server/wirelesschargerdetector.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WirelessChargerDetectorProto_VectorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto;
namespace com {
namespace android {
namespace server {
namespace power {
class WirelessChargerDetectorProto_VectorProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WirelessChargerDetectorProto_VectorProto> _instance;
} _WirelessChargerDetectorProto_VectorProto_default_instance_;
class WirelessChargerDetectorProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WirelessChargerDetectorProto> _instance;
} _WirelessChargerDetectorProto_default_instance_;
}  // namespace power
}  // namespace server
}  // namespace android
}  // namespace com
static void InitDefaultsscc_info_WirelessChargerDetectorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::power::_WirelessChargerDetectorProto_default_instance_;
    new (ptr) ::com::android::server::power::WirelessChargerDetectorProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::power::WirelessChargerDetectorProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WirelessChargerDetectorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_WirelessChargerDetectorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto}, {
      &scc_info_WirelessChargerDetectorProto_VectorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto.base,}};

static void InitDefaultsscc_info_WirelessChargerDetectorProto_VectorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::power::_WirelessChargerDetectorProto_VectorProto_default_instance_;
    new (ptr) ::com::android::server::power::WirelessChargerDetectorProto_VectorProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::power::WirelessChargerDetectorProto_VectorProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WirelessChargerDetectorProto_VectorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_WirelessChargerDetectorProto_VectorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto_VectorProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto_VectorProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto_VectorProto, x_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto_VectorProto, y_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto_VectorProto, z_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto, is_powered_wirelessly_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto, is_at_rest_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto, rest_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto, is_detection_in_progress_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto, detection_start_time_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto, is_must_update_rest_position_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto, total_samples_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto, moving_samples_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto, first_sample_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::power::WirelessChargerDetectorProto, last_sample_),
  3,
  4,
  0,
  5,
  8,
  6,
  7,
  9,
  1,
  2,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::com::android::server::power::WirelessChargerDetectorProto_VectorProto)},
  { 11, 26, sizeof(::com::android::server::power::WirelessChargerDetectorProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::power::_WirelessChargerDetectorProto_VectorProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::power::_WirelessChargerDetectorProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nGframeworks/base/core/proto/android/ser"
  "ver/wirelesschargerdetector.proto\022\030com.a"
  "ndroid.server.power\0320frameworks/base/cor"
  "e/proto/android/privacy.proto\"\264\004\n\034Wirele"
  "ssChargerDetectorProto\022\035\n\025is_powered_wir"
  "elessly\030\001 \001(\010\022\022\n\nis_at_rest\030\002 \001(\010\022P\n\004res"
  "t\030\003 \001(\0132B.com.android.server.power.Wirel"
  "essChargerDetectorProto.VectorProto\022 \n\030i"
  "s_detection_in_progress\030\004 \001(\010\022\037\n\027detecti"
  "on_start_time_ms\030\005 \001(\003\022$\n\034is_must_update"
  "_rest_position\030\006 \001(\010\022\025\n\rtotal_samples\030\007 "
  "\001(\005\022\026\n\016moving_samples\030\010 \001(\005\022X\n\014first_sam"
  "ple\030\t \001(\0132B.com.android.server.power.Wir"
  "elessChargerDetectorProto.VectorProto\022W\n"
  "\013last_sample\030\n \001(\0132B.com.android.server."
  "power.WirelessChargerDetectorProto.Vecto"
  "rProto\0329\n\013VectorProto\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 "
  "\001(\002\022\t\n\001z\030\003 \001(\002:\t\232\237\325\207\003\003\010\310\001:\t\232\237\325\207\003\003\010\310\001B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto_deps[1] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto_sccs[2] = {
  &scc_info_WirelessChargerDetectorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto.base,
  &scc_info_WirelessChargerDetectorProto_VectorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto, "frameworks/base/core/proto/android/server/wirelesschargerdetector.proto", 720,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto, 2, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto), true);
namespace com {
namespace android {
namespace server {
namespace power {

// ===================================================================

void WirelessChargerDetectorProto_VectorProto::InitAsDefaultInstance() {
}
class WirelessChargerDetectorProto_VectorProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WirelessChargerDetectorProto_VectorProto>()._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_z(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

WirelessChargerDetectorProto_VectorProto::WirelessChargerDetectorProto_VectorProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
}
WirelessChargerDetectorProto_VectorProto::WirelessChargerDetectorProto_VectorProto(const WirelessChargerDetectorProto_VectorProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
}

void WirelessChargerDetectorProto_VectorProto::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

WirelessChargerDetectorProto_VectorProto::~WirelessChargerDetectorProto_VectorProto() {
  // @@protoc_insertion_point(destructor:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
  SharedDtor();
}

void WirelessChargerDetectorProto_VectorProto::SharedDtor() {
}

void WirelessChargerDetectorProto_VectorProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WirelessChargerDetectorProto_VectorProto& WirelessChargerDetectorProto_VectorProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WirelessChargerDetectorProto_VectorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto.base);
  return *internal_default_instance();
}


void WirelessChargerDetectorProto_VectorProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&x_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WirelessChargerDetectorProto_VectorProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          _Internal::set_has_x(&has_bits);
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          _Internal::set_has_y(&has_bits);
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          _Internal::set_has_z(&has_bits);
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WirelessChargerDetectorProto_VectorProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (13 & 0xFF)) {
          _Internal::set_has_x(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float y = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (21 & 0xFF)) {
          _Internal::set_has_y(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float z = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (29 & 0xFF)) {
          _Internal::set_has_z(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WirelessChargerDetectorProto_VectorProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WirelessChargerDetectorProto_VectorProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
  return target;
}

size_t WirelessChargerDetectorProto_VectorProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional float x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional float z = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WirelessChargerDetectorProto_VectorProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WirelessChargerDetectorProto_VectorProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WirelessChargerDetectorProto_VectorProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
    MergeFrom(*source);
  }
}

void WirelessChargerDetectorProto_VectorProto::MergeFrom(const WirelessChargerDetectorProto_VectorProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WirelessChargerDetectorProto_VectorProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WirelessChargerDetectorProto_VectorProto::CopyFrom(const WirelessChargerDetectorProto_VectorProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WirelessChargerDetectorProto_VectorProto::IsInitialized() const {
  return true;
}

void WirelessChargerDetectorProto_VectorProto::InternalSwap(WirelessChargerDetectorProto_VectorProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WirelessChargerDetectorProto_VectorProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WirelessChargerDetectorProto::InitAsDefaultInstance() {
  ::com::android::server::power::_WirelessChargerDetectorProto_default_instance_._instance.get_mutable()->rest_ = const_cast< ::com::android::server::power::WirelessChargerDetectorProto_VectorProto*>(
      ::com::android::server::power::WirelessChargerDetectorProto_VectorProto::internal_default_instance());
  ::com::android::server::power::_WirelessChargerDetectorProto_default_instance_._instance.get_mutable()->first_sample_ = const_cast< ::com::android::server::power::WirelessChargerDetectorProto_VectorProto*>(
      ::com::android::server::power::WirelessChargerDetectorProto_VectorProto::internal_default_instance());
  ::com::android::server::power::_WirelessChargerDetectorProto_default_instance_._instance.get_mutable()->last_sample_ = const_cast< ::com::android::server::power::WirelessChargerDetectorProto_VectorProto*>(
      ::com::android::server::power::WirelessChargerDetectorProto_VectorProto::internal_default_instance());
}
class WirelessChargerDetectorProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WirelessChargerDetectorProto>()._has_bits_);
  static void set_has_is_powered_wirelessly(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_is_at_rest(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto& rest(const WirelessChargerDetectorProto* msg);
  static void set_has_rest(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_detection_in_progress(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_detection_start_time_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_is_must_update_rest_position(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_total_samples(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_moving_samples(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto& first_sample(const WirelessChargerDetectorProto* msg);
  static void set_has_first_sample(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto& last_sample(const WirelessChargerDetectorProto* msg);
  static void set_has_last_sample(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto&
WirelessChargerDetectorProto::_Internal::rest(const WirelessChargerDetectorProto* msg) {
  return *msg->rest_;
}
const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto&
WirelessChargerDetectorProto::_Internal::first_sample(const WirelessChargerDetectorProto* msg) {
  return *msg->first_sample_;
}
const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto&
WirelessChargerDetectorProto::_Internal::last_sample(const WirelessChargerDetectorProto* msg) {
  return *msg->last_sample_;
}
WirelessChargerDetectorProto::WirelessChargerDetectorProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.power.WirelessChargerDetectorProto)
}
WirelessChargerDetectorProto::WirelessChargerDetectorProto(const WirelessChargerDetectorProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rest()) {
    rest_ = new ::com::android::server::power::WirelessChargerDetectorProto_VectorProto(*from.rest_);
  } else {
    rest_ = nullptr;
  }
  if (from.has_first_sample()) {
    first_sample_ = new ::com::android::server::power::WirelessChargerDetectorProto_VectorProto(*from.first_sample_);
  } else {
    first_sample_ = nullptr;
  }
  if (from.has_last_sample()) {
    last_sample_ = new ::com::android::server::power::WirelessChargerDetectorProto_VectorProto(*from.last_sample_);
  } else {
    last_sample_ = nullptr;
  }
  ::memcpy(&is_powered_wirelessly_, &from.is_powered_wirelessly_,
    static_cast<size_t>(reinterpret_cast<char*>(&moving_samples_) -
    reinterpret_cast<char*>(&is_powered_wirelessly_)) + sizeof(moving_samples_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.power.WirelessChargerDetectorProto)
}

void WirelessChargerDetectorProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WirelessChargerDetectorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto.base);
  ::memset(&rest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&moving_samples_) -
      reinterpret_cast<char*>(&rest_)) + sizeof(moving_samples_));
}

WirelessChargerDetectorProto::~WirelessChargerDetectorProto() {
  // @@protoc_insertion_point(destructor:com.android.server.power.WirelessChargerDetectorProto)
  SharedDtor();
}

void WirelessChargerDetectorProto::SharedDtor() {
  if (this != internal_default_instance()) delete rest_;
  if (this != internal_default_instance()) delete first_sample_;
  if (this != internal_default_instance()) delete last_sample_;
}

void WirelessChargerDetectorProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WirelessChargerDetectorProto& WirelessChargerDetectorProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WirelessChargerDetectorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto.base);
  return *internal_default_instance();
}


void WirelessChargerDetectorProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.power.WirelessChargerDetectorProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(rest_ != nullptr);
      rest_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(first_sample_ != nullptr);
      first_sample_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(last_sample_ != nullptr);
      last_sample_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&is_powered_wirelessly_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&total_samples_) -
        reinterpret_cast<char*>(&is_powered_wirelessly_)) + sizeof(total_samples_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&detection_start_time_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&moving_samples_) -
        reinterpret_cast<char*>(&detection_start_time_ms_)) + sizeof(moving_samples_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WirelessChargerDetectorProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool is_powered_wirelessly = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_is_powered_wirelessly(&has_bits);
          is_powered_wirelessly_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_at_rest = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_is_at_rest(&has_bits);
          is_at_rest_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto rest = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_rest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_detection_in_progress = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_is_detection_in_progress(&has_bits);
          is_detection_in_progress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 detection_start_time_ms = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_detection_start_time_ms(&has_bits);
          detection_start_time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_must_update_rest_position = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_is_must_update_rest_position(&has_bits);
          is_must_update_rest_position_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 total_samples = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_total_samples(&has_bits);
          total_samples_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 moving_samples = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_moving_samples(&has_bits);
          moving_samples_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto first_sample = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_first_sample(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto last_sample = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_last_sample(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WirelessChargerDetectorProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.power.WirelessChargerDetectorProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_powered_wirelessly = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_is_powered_wirelessly(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_powered_wirelessly_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_at_rest = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_is_at_rest(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_at_rest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto rest = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_rest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_detection_in_progress = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_is_detection_in_progress(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_detection_in_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 detection_start_time_ms = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_detection_start_time_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &detection_start_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_must_update_rest_position = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_is_must_update_rest_position(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_must_update_rest_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 total_samples = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_total_samples(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_samples_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 moving_samples = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_moving_samples(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &moving_samples_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto first_sample = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_first_sample()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto last_sample = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_last_sample()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.power.WirelessChargerDetectorProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.power.WirelessChargerDetectorProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WirelessChargerDetectorProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.power.WirelessChargerDetectorProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_powered_wirelessly = 1;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->is_powered_wirelessly(), output);
  }

  // optional bool is_at_rest = 2;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->is_at_rest(), output);
  }

  // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto rest = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::rest(this), output);
  }

  // optional bool is_detection_in_progress = 4;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(4, this->is_detection_in_progress(), output);
  }

  // optional int64 detection_start_time_ms = 5;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(5, this->detection_start_time_ms(), output);
  }

  // optional bool is_must_update_rest_position = 6;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->is_must_update_rest_position(), output);
  }

  // optional int32 total_samples = 7;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->total_samples(), output);
  }

  // optional int32 moving_samples = 8;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(8, this->moving_samples(), output);
  }

  // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto first_sample = 9;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, _Internal::first_sample(this), output);
  }

  // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto last_sample = 10;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, _Internal::last_sample(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.power.WirelessChargerDetectorProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WirelessChargerDetectorProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.power.WirelessChargerDetectorProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_powered_wirelessly = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->is_powered_wirelessly(), target);
  }

  // optional bool is_at_rest = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->is_at_rest(), target);
  }

  // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto rest = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::rest(this), target);
  }

  // optional bool is_detection_in_progress = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->is_detection_in_progress(), target);
  }

  // optional int64 detection_start_time_ms = 5;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->detection_start_time_ms(), target);
  }

  // optional bool is_must_update_rest_position = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->is_must_update_rest_position(), target);
  }

  // optional int32 total_samples = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->total_samples(), target);
  }

  // optional int32 moving_samples = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->moving_samples(), target);
  }

  // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto first_sample = 9;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::first_sample(this), target);
  }

  // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto last_sample = 10;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, _Internal::last_sample(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.power.WirelessChargerDetectorProto)
  return target;
}

size_t WirelessChargerDetectorProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.power.WirelessChargerDetectorProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto rest = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *rest_);
    }

    // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto first_sample = 9;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *first_sample_);
    }

    // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto last_sample = 10;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *last_sample_);
    }

    // optional bool is_powered_wirelessly = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool is_at_rest = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool is_detection_in_progress = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool is_must_update_rest_position = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional int32 total_samples = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->total_samples());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional int64 detection_start_time_ms = 5;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->detection_start_time_ms());
    }

    // optional int32 moving_samples = 8;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->moving_samples());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WirelessChargerDetectorProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.power.WirelessChargerDetectorProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WirelessChargerDetectorProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WirelessChargerDetectorProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.power.WirelessChargerDetectorProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.power.WirelessChargerDetectorProto)
    MergeFrom(*source);
  }
}

void WirelessChargerDetectorProto::MergeFrom(const WirelessChargerDetectorProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.power.WirelessChargerDetectorProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_rest()->::com::android::server::power::WirelessChargerDetectorProto_VectorProto::MergeFrom(from.rest());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_first_sample()->::com::android::server::power::WirelessChargerDetectorProto_VectorProto::MergeFrom(from.first_sample());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_last_sample()->::com::android::server::power::WirelessChargerDetectorProto_VectorProto::MergeFrom(from.last_sample());
    }
    if (cached_has_bits & 0x00000008u) {
      is_powered_wirelessly_ = from.is_powered_wirelessly_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_at_rest_ = from.is_at_rest_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_detection_in_progress_ = from.is_detection_in_progress_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_must_update_rest_position_ = from.is_must_update_rest_position_;
    }
    if (cached_has_bits & 0x00000080u) {
      total_samples_ = from.total_samples_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      detection_start_time_ms_ = from.detection_start_time_ms_;
    }
    if (cached_has_bits & 0x00000200u) {
      moving_samples_ = from.moving_samples_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WirelessChargerDetectorProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.power.WirelessChargerDetectorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WirelessChargerDetectorProto::CopyFrom(const WirelessChargerDetectorProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.power.WirelessChargerDetectorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WirelessChargerDetectorProto::IsInitialized() const {
  return true;
}

void WirelessChargerDetectorProto::InternalSwap(WirelessChargerDetectorProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(rest_, other->rest_);
  swap(first_sample_, other->first_sample_);
  swap(last_sample_, other->last_sample_);
  swap(is_powered_wirelessly_, other->is_powered_wirelessly_);
  swap(is_at_rest_, other->is_at_rest_);
  swap(is_detection_in_progress_, other->is_detection_in_progress_);
  swap(is_must_update_rest_position_, other->is_must_update_rest_position_);
  swap(total_samples_, other->total_samples_);
  swap(detection_start_time_ms_, other->detection_start_time_ms_);
  swap(moving_samples_, other->moving_samples_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WirelessChargerDetectorProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace power
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* Arena::CreateMaybeMessage< ::com::android::server::power::WirelessChargerDetectorProto_VectorProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::power::WirelessChargerDetectorProto_VectorProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::power::WirelessChargerDetectorProto* Arena::CreateMaybeMessage< ::com::android::server::power::WirelessChargerDetectorProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::power::WirelessChargerDetectorProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
