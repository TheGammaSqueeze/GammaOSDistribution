// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/alarm/alarmmanagerservice.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/app/alarmmanager.pb.h"
#include "frameworks/base/core/proto/android/app/pendingintent.pb.h"
#include "frameworks/base/core/proto/android/internal/locallog.pb.h"
#include "frameworks/base/core/proto/android/os/worksource.pb.h"
#include "frameworks/base/core/proto/android/server/appstatetracker.pb.h"
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto;
namespace com {
namespace android {
namespace server {
namespace alarm {
class AlarmClockMetadataProto;
class AlarmClockMetadataProtoDefaultTypeInternal;
extern AlarmClockMetadataProtoDefaultTypeInternal _AlarmClockMetadataProto_default_instance_;
class AlarmManagerServiceDumpProto;
class AlarmManagerServiceDumpProtoDefaultTypeInternal;
extern AlarmManagerServiceDumpProtoDefaultTypeInternal _AlarmManagerServiceDumpProto_default_instance_;
class AlarmManagerServiceDumpProto_AlarmStat;
class AlarmManagerServiceDumpProto_AlarmStatDefaultTypeInternal;
extern AlarmManagerServiceDumpProto_AlarmStatDefaultTypeInternal _AlarmManagerServiceDumpProto_AlarmStat_default_instance_;
class AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch;
class AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatchDefaultTypeInternal;
extern AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatchDefaultTypeInternal _AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch_default_instance_;
class AlarmManagerServiceDumpProto_TopAlarm;
class AlarmManagerServiceDumpProto_TopAlarmDefaultTypeInternal;
extern AlarmManagerServiceDumpProto_TopAlarmDefaultTypeInternal _AlarmManagerServiceDumpProto_TopAlarm_default_instance_;
class AlarmProto;
class AlarmProtoDefaultTypeInternal;
extern AlarmProtoDefaultTypeInternal _AlarmProto_default_instance_;
class BatchProto;
class BatchProtoDefaultTypeInternal;
extern BatchProtoDefaultTypeInternal _BatchProto_default_instance_;
class BroadcastStatsProto;
class BroadcastStatsProtoDefaultTypeInternal;
extern BroadcastStatsProtoDefaultTypeInternal _BroadcastStatsProto_default_instance_;
class ConstantsProto;
class ConstantsProtoDefaultTypeInternal;
extern ConstantsProtoDefaultTypeInternal _ConstantsProto_default_instance_;
class FilterStatsProto;
class FilterStatsProtoDefaultTypeInternal;
extern FilterStatsProtoDefaultTypeInternal _FilterStatsProto_default_instance_;
class IdleDispatchEntryProto;
class IdleDispatchEntryProtoDefaultTypeInternal;
extern IdleDispatchEntryProtoDefaultTypeInternal _IdleDispatchEntryProto_default_instance_;
class InFlightProto;
class InFlightProtoDefaultTypeInternal;
extern InFlightProtoDefaultTypeInternal _InFlightProto_default_instance_;
class WakeupEventProto;
class WakeupEventProtoDefaultTypeInternal;
extern WakeupEventProtoDefaultTypeInternal _WakeupEventProto_default_instance_;
}  // namespace alarm
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::android::server::alarm::AlarmClockMetadataProto* Arena::CreateMaybeMessage<::com::android::server::alarm::AlarmClockMetadataProto>(Arena*);
template<> ::com::android::server::alarm::AlarmManagerServiceDumpProto* Arena::CreateMaybeMessage<::com::android::server::alarm::AlarmManagerServiceDumpProto>(Arena*);
template<> ::com::android::server::alarm::AlarmManagerServiceDumpProto_AlarmStat* Arena::CreateMaybeMessage<::com::android::server::alarm::AlarmManagerServiceDumpProto_AlarmStat>(Arena*);
template<> ::com::android::server::alarm::AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch* Arena::CreateMaybeMessage<::com::android::server::alarm::AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch>(Arena*);
template<> ::com::android::server::alarm::AlarmManagerServiceDumpProto_TopAlarm* Arena::CreateMaybeMessage<::com::android::server::alarm::AlarmManagerServiceDumpProto_TopAlarm>(Arena*);
template<> ::com::android::server::alarm::AlarmProto* Arena::CreateMaybeMessage<::com::android::server::alarm::AlarmProto>(Arena*);
template<> ::com::android::server::alarm::BatchProto* Arena::CreateMaybeMessage<::com::android::server::alarm::BatchProto>(Arena*);
template<> ::com::android::server::alarm::BroadcastStatsProto* Arena::CreateMaybeMessage<::com::android::server::alarm::BroadcastStatsProto>(Arena*);
template<> ::com::android::server::alarm::ConstantsProto* Arena::CreateMaybeMessage<::com::android::server::alarm::ConstantsProto>(Arena*);
template<> ::com::android::server::alarm::FilterStatsProto* Arena::CreateMaybeMessage<::com::android::server::alarm::FilterStatsProto>(Arena*);
template<> ::com::android::server::alarm::IdleDispatchEntryProto* Arena::CreateMaybeMessage<::com::android::server::alarm::IdleDispatchEntryProto>(Arena*);
template<> ::com::android::server::alarm::InFlightProto* Arena::CreateMaybeMessage<::com::android::server::alarm::InFlightProto>(Arena*);
template<> ::com::android::server::alarm::WakeupEventProto* Arena::CreateMaybeMessage<::com::android::server::alarm::WakeupEventProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace android {
namespace server {
namespace alarm {

// ===================================================================

class AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.alarm.AlarmManagerServiceDumpProto.LastAllowWhileIdleDispatch) */ {
 public:
  AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch();
  virtual ~AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch();

  AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch(const AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch& from);
  AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch(AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch&& from) noexcept
    : AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch() {
    *this = ::std::move(from);
  }

  inline AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch& operator=(const AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch& operator=(AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch* internal_default_instance() {
    return reinterpret_cast<const AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch*>(
               &_AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch& a, AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch& b) {
    a.Swap(&b);
  }
  inline void Swap(AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch* New() const final {
    return CreateMaybeMessage<AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch>(nullptr);
  }

  AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch& from);
  void MergeFrom(const AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.alarm.AlarmManagerServiceDumpProto.LastAllowWhileIdleDispatch";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeMsFieldNumber = 2,
    kNextAllowedMsFieldNumber = 3,
    kUidFieldNumber = 1,
  };
  // optional int64 time_ms = 2;
  bool has_time_ms() const;
  void clear_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_ms() const;
  void set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 next_allowed_ms = 3;
  bool has_next_allowed_ms() const;
  void clear_next_allowed_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 next_allowed_ms() const;
  void set_next_allowed_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.alarm.AlarmManagerServiceDumpProto.LastAllowWhileIdleDispatch)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 next_allowed_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto;
};
// -------------------------------------------------------------------

class AlarmManagerServiceDumpProto_TopAlarm :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm) */ {
 public:
  AlarmManagerServiceDumpProto_TopAlarm();
  virtual ~AlarmManagerServiceDumpProto_TopAlarm();

  AlarmManagerServiceDumpProto_TopAlarm(const AlarmManagerServiceDumpProto_TopAlarm& from);
  AlarmManagerServiceDumpProto_TopAlarm(AlarmManagerServiceDumpProto_TopAlarm&& from) noexcept
    : AlarmManagerServiceDumpProto_TopAlarm() {
    *this = ::std::move(from);
  }

  inline AlarmManagerServiceDumpProto_TopAlarm& operator=(const AlarmManagerServiceDumpProto_TopAlarm& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlarmManagerServiceDumpProto_TopAlarm& operator=(AlarmManagerServiceDumpProto_TopAlarm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AlarmManagerServiceDumpProto_TopAlarm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlarmManagerServiceDumpProto_TopAlarm* internal_default_instance() {
    return reinterpret_cast<const AlarmManagerServiceDumpProto_TopAlarm*>(
               &_AlarmManagerServiceDumpProto_TopAlarm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AlarmManagerServiceDumpProto_TopAlarm& a, AlarmManagerServiceDumpProto_TopAlarm& b) {
    a.Swap(&b);
  }
  inline void Swap(AlarmManagerServiceDumpProto_TopAlarm* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AlarmManagerServiceDumpProto_TopAlarm* New() const final {
    return CreateMaybeMessage<AlarmManagerServiceDumpProto_TopAlarm>(nullptr);
  }

  AlarmManagerServiceDumpProto_TopAlarm* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AlarmManagerServiceDumpProto_TopAlarm>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AlarmManagerServiceDumpProto_TopAlarm& from);
  void MergeFrom(const AlarmManagerServiceDumpProto_TopAlarm& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlarmManagerServiceDumpProto_TopAlarm* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPackageNameFieldNumber = 2,
    kFilterFieldNumber = 3,
    kUidFieldNumber = 1,
  };
  // optional string package_name = 2;
  bool has_package_name() const;
  void clear_package_name();
  const std::string& package_name() const;
  void set_package_name(const std::string& value);
  void set_package_name(std::string&& value);
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  std::string* mutable_package_name();
  std::string* release_package_name();
  void set_allocated_package_name(std::string* package_name);

  // optional .com.android.server.alarm.FilterStatsProto filter = 3;
  bool has_filter() const;
  void clear_filter();
  const ::com::android::server::alarm::FilterStatsProto& filter() const;
  ::com::android::server::alarm::FilterStatsProto* release_filter();
  ::com::android::server::alarm::FilterStatsProto* mutable_filter();
  void set_allocated_filter(::com::android::server::alarm::FilterStatsProto* filter);

  // optional int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr package_name_;
  ::com::android::server::alarm::FilterStatsProto* filter_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto;
};
// -------------------------------------------------------------------

class AlarmManagerServiceDumpProto_AlarmStat :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.alarm.AlarmManagerServiceDumpProto.AlarmStat) */ {
 public:
  AlarmManagerServiceDumpProto_AlarmStat();
  virtual ~AlarmManagerServiceDumpProto_AlarmStat();

  AlarmManagerServiceDumpProto_AlarmStat(const AlarmManagerServiceDumpProto_AlarmStat& from);
  AlarmManagerServiceDumpProto_AlarmStat(AlarmManagerServiceDumpProto_AlarmStat&& from) noexcept
    : AlarmManagerServiceDumpProto_AlarmStat() {
    *this = ::std::move(from);
  }

  inline AlarmManagerServiceDumpProto_AlarmStat& operator=(const AlarmManagerServiceDumpProto_AlarmStat& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlarmManagerServiceDumpProto_AlarmStat& operator=(AlarmManagerServiceDumpProto_AlarmStat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AlarmManagerServiceDumpProto_AlarmStat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlarmManagerServiceDumpProto_AlarmStat* internal_default_instance() {
    return reinterpret_cast<const AlarmManagerServiceDumpProto_AlarmStat*>(
               &_AlarmManagerServiceDumpProto_AlarmStat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AlarmManagerServiceDumpProto_AlarmStat& a, AlarmManagerServiceDumpProto_AlarmStat& b) {
    a.Swap(&b);
  }
  inline void Swap(AlarmManagerServiceDumpProto_AlarmStat* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AlarmManagerServiceDumpProto_AlarmStat* New() const final {
    return CreateMaybeMessage<AlarmManagerServiceDumpProto_AlarmStat>(nullptr);
  }

  AlarmManagerServiceDumpProto_AlarmStat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AlarmManagerServiceDumpProto_AlarmStat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AlarmManagerServiceDumpProto_AlarmStat& from);
  void MergeFrom(const AlarmManagerServiceDumpProto_AlarmStat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlarmManagerServiceDumpProto_AlarmStat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.alarm.AlarmManagerServiceDumpProto.AlarmStat";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFiltersFieldNumber = 2,
    kBroadcastFieldNumber = 1,
  };
  // repeated .com.android.server.alarm.FilterStatsProto filters = 2;
  int filters_size() const;
  void clear_filters();
  ::com::android::server::alarm::FilterStatsProto* mutable_filters(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::FilterStatsProto >*
      mutable_filters();
  const ::com::android::server::alarm::FilterStatsProto& filters(int index) const;
  ::com::android::server::alarm::FilterStatsProto* add_filters();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::FilterStatsProto >&
      filters() const;

  // optional .com.android.server.alarm.BroadcastStatsProto broadcast = 1;
  bool has_broadcast() const;
  void clear_broadcast();
  const ::com::android::server::alarm::BroadcastStatsProto& broadcast() const;
  ::com::android::server::alarm::BroadcastStatsProto* release_broadcast();
  ::com::android::server::alarm::BroadcastStatsProto* mutable_broadcast();
  void set_allocated_broadcast(::com::android::server::alarm::BroadcastStatsProto* broadcast);

  // @@protoc_insertion_point(class_scope:com.android.server.alarm.AlarmManagerServiceDumpProto.AlarmStat)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::FilterStatsProto > filters_;
  ::com::android::server::alarm::BroadcastStatsProto* broadcast_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto;
};
// -------------------------------------------------------------------

class AlarmManagerServiceDumpProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.alarm.AlarmManagerServiceDumpProto) */ {
 public:
  AlarmManagerServiceDumpProto();
  virtual ~AlarmManagerServiceDumpProto();

  AlarmManagerServiceDumpProto(const AlarmManagerServiceDumpProto& from);
  AlarmManagerServiceDumpProto(AlarmManagerServiceDumpProto&& from) noexcept
    : AlarmManagerServiceDumpProto() {
    *this = ::std::move(from);
  }

  inline AlarmManagerServiceDumpProto& operator=(const AlarmManagerServiceDumpProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlarmManagerServiceDumpProto& operator=(AlarmManagerServiceDumpProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AlarmManagerServiceDumpProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlarmManagerServiceDumpProto* internal_default_instance() {
    return reinterpret_cast<const AlarmManagerServiceDumpProto*>(
               &_AlarmManagerServiceDumpProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AlarmManagerServiceDumpProto& a, AlarmManagerServiceDumpProto& b) {
    a.Swap(&b);
  }
  inline void Swap(AlarmManagerServiceDumpProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AlarmManagerServiceDumpProto* New() const final {
    return CreateMaybeMessage<AlarmManagerServiceDumpProto>(nullptr);
  }

  AlarmManagerServiceDumpProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AlarmManagerServiceDumpProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AlarmManagerServiceDumpProto& from);
  void MergeFrom(const AlarmManagerServiceDumpProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlarmManagerServiceDumpProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.alarm.AlarmManagerServiceDumpProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch LastAllowWhileIdleDispatch;
  typedef AlarmManagerServiceDumpProto_TopAlarm TopAlarm;
  typedef AlarmManagerServiceDumpProto_AlarmStat AlarmStat;

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceIdleUserExemptAppIdsFieldNumber = 17,
    kNextAlarmClockMetadataFieldNumber = 18,
    kPendingAlarmBatchesFieldNumber = 19,
    kPendingUserBlockedBackgroundAlarmsFieldNumber = 20,
    kPendingWhileIdleAlarmsFieldNumber = 22,
    kPastDueNonWakeupAlarmsFieldNumber = 24,
    kOutstandingDeliveriesFieldNumber = 34,
    kUseAllowWhileIdleShortTimeFieldNumber = 35,
    kLastAllowWhileIdleDispatchTimesFieldNumber = 36,
    kTopAlarmsFieldNumber = 38,
    kAlarmStatsFieldNumber = 39,
    kAllowWhileIdleDispatchesFieldNumber = 40,
    kRecentWakeupHistoryFieldNumber = 41,
    kPendingAlarmsFieldNumber = 42,
    kSettingsFieldNumber = 5,
    kAppStateTrackerFieldNumber = 6,
    kPendingIdleUntilFieldNumber = 21,
    kNextWakeFromIdleFieldNumber = 23,
    kRecentProblemsFieldNumber = 37,
    kCurrentTimeFieldNumber = 1,
    kElapsedRealtimeFieldNumber = 2,
    kLastTimeChangeClockTimeFieldNumber = 3,
    kLastTimeChangeRealtimeFieldNumber = 4,
    kTimeSinceNonInteractiveMsFieldNumber = 8,
    kMaxWakeupDelayMsFieldNumber = 9,
    kTimeSinceLastDispatchMsFieldNumber = 10,
    kTimeUntilNextNonWakeupDeliveryMsFieldNumber = 11,
    kTimeUntilNextNonWakeupAlarmMsFieldNumber = 12,
    kTimeUntilNextWakeupMsFieldNumber = 13,
    kTimeSinceLastWakeupMsFieldNumber = 14,
    kTimeSinceLastWakeupSetMsFieldNumber = 15,
    kTimeChangeEventCountFieldNumber = 16,
    kIsInteractiveFieldNumber = 7,
    kDelayedAlarmCountFieldNumber = 25,
    kTotalDelayTimeMsFieldNumber = 26,
    kMaxDelayDurationMsFieldNumber = 27,
    kMaxNonInteractiveDurationMsFieldNumber = 28,
    kBroadcastRefCountFieldNumber = 29,
    kPendingIntentSendCountFieldNumber = 30,
    kPendingIntentFinishCountFieldNumber = 31,
    kListenerSendCountFieldNumber = 32,
    kListenerFinishCountFieldNumber = 33,
  };
  // repeated int32 device_idle_user_exempt_app_ids = 17;
  int device_idle_user_exempt_app_ids_size() const;
  void clear_device_idle_user_exempt_app_ids();
  ::PROTOBUF_NAMESPACE_ID::int32 device_idle_user_exempt_app_ids(int index) const;
  void set_device_idle_user_exempt_app_ids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_device_idle_user_exempt_app_ids(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      device_idle_user_exempt_app_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_device_idle_user_exempt_app_ids();

  // repeated .com.android.server.alarm.AlarmClockMetadataProto next_alarm_clock_metadata = 18;
  int next_alarm_clock_metadata_size() const;
  void clear_next_alarm_clock_metadata();
  ::com::android::server::alarm::AlarmClockMetadataProto* mutable_next_alarm_clock_metadata(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmClockMetadataProto >*
      mutable_next_alarm_clock_metadata();
  const ::com::android::server::alarm::AlarmClockMetadataProto& next_alarm_clock_metadata(int index) const;
  ::com::android::server::alarm::AlarmClockMetadataProto* add_next_alarm_clock_metadata();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmClockMetadataProto >&
      next_alarm_clock_metadata() const;

  // repeated .com.android.server.alarm.BatchProto pending_alarm_batches = 19;
  int pending_alarm_batches_size() const;
  void clear_pending_alarm_batches();
  ::com::android::server::alarm::BatchProto* mutable_pending_alarm_batches(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::BatchProto >*
      mutable_pending_alarm_batches();
  const ::com::android::server::alarm::BatchProto& pending_alarm_batches(int index) const;
  ::com::android::server::alarm::BatchProto* add_pending_alarm_batches();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::BatchProto >&
      pending_alarm_batches() const;

  // repeated .com.android.server.alarm.AlarmProto pending_user_blocked_background_alarms = 20;
  int pending_user_blocked_background_alarms_size() const;
  void clear_pending_user_blocked_background_alarms();
  ::com::android::server::alarm::AlarmProto* mutable_pending_user_blocked_background_alarms(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >*
      mutable_pending_user_blocked_background_alarms();
  const ::com::android::server::alarm::AlarmProto& pending_user_blocked_background_alarms(int index) const;
  ::com::android::server::alarm::AlarmProto* add_pending_user_blocked_background_alarms();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >&
      pending_user_blocked_background_alarms() const;

  // repeated .com.android.server.alarm.AlarmProto pending_while_idle_alarms = 22;
  int pending_while_idle_alarms_size() const;
  void clear_pending_while_idle_alarms();
  ::com::android::server::alarm::AlarmProto* mutable_pending_while_idle_alarms(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >*
      mutable_pending_while_idle_alarms();
  const ::com::android::server::alarm::AlarmProto& pending_while_idle_alarms(int index) const;
  ::com::android::server::alarm::AlarmProto* add_pending_while_idle_alarms();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >&
      pending_while_idle_alarms() const;

  // repeated .com.android.server.alarm.AlarmProto past_due_non_wakeup_alarms = 24;
  int past_due_non_wakeup_alarms_size() const;
  void clear_past_due_non_wakeup_alarms();
  ::com::android::server::alarm::AlarmProto* mutable_past_due_non_wakeup_alarms(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >*
      mutable_past_due_non_wakeup_alarms();
  const ::com::android::server::alarm::AlarmProto& past_due_non_wakeup_alarms(int index) const;
  ::com::android::server::alarm::AlarmProto* add_past_due_non_wakeup_alarms();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >&
      past_due_non_wakeup_alarms() const;

  // repeated .com.android.server.alarm.InFlightProto outstanding_deliveries = 34;
  int outstanding_deliveries_size() const;
  void clear_outstanding_deliveries();
  ::com::android::server::alarm::InFlightProto* mutable_outstanding_deliveries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::InFlightProto >*
      mutable_outstanding_deliveries();
  const ::com::android::server::alarm::InFlightProto& outstanding_deliveries(int index) const;
  ::com::android::server::alarm::InFlightProto* add_outstanding_deliveries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::InFlightProto >&
      outstanding_deliveries() const;

  // repeated int32 use_allow_while_idle_short_time = 35;
  int use_allow_while_idle_short_time_size() const;
  void clear_use_allow_while_idle_short_time();
  ::PROTOBUF_NAMESPACE_ID::int32 use_allow_while_idle_short_time(int index) const;
  void set_use_allow_while_idle_short_time(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_use_allow_while_idle_short_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      use_allow_while_idle_short_time() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_use_allow_while_idle_short_time();

  // repeated .com.android.server.alarm.AlarmManagerServiceDumpProto.LastAllowWhileIdleDispatch last_allow_while_idle_dispatch_times = 36;
  int last_allow_while_idle_dispatch_times_size() const;
  void clear_last_allow_while_idle_dispatch_times();
  ::com::android::server::alarm::AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch* mutable_last_allow_while_idle_dispatch_times(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch >*
      mutable_last_allow_while_idle_dispatch_times();
  const ::com::android::server::alarm::AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch& last_allow_while_idle_dispatch_times(int index) const;
  ::com::android::server::alarm::AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch* add_last_allow_while_idle_dispatch_times();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch >&
      last_allow_while_idle_dispatch_times() const;

  // repeated .com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm top_alarms = 38;
  int top_alarms_size() const;
  void clear_top_alarms();
  ::com::android::server::alarm::AlarmManagerServiceDumpProto_TopAlarm* mutable_top_alarms(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_TopAlarm >*
      mutable_top_alarms();
  const ::com::android::server::alarm::AlarmManagerServiceDumpProto_TopAlarm& top_alarms(int index) const;
  ::com::android::server::alarm::AlarmManagerServiceDumpProto_TopAlarm* add_top_alarms();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_TopAlarm >&
      top_alarms() const;

  // repeated .com.android.server.alarm.AlarmManagerServiceDumpProto.AlarmStat alarm_stats = 39;
  int alarm_stats_size() const;
  void clear_alarm_stats();
  ::com::android::server::alarm::AlarmManagerServiceDumpProto_AlarmStat* mutable_alarm_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_AlarmStat >*
      mutable_alarm_stats();
  const ::com::android::server::alarm::AlarmManagerServiceDumpProto_AlarmStat& alarm_stats(int index) const;
  ::com::android::server::alarm::AlarmManagerServiceDumpProto_AlarmStat* add_alarm_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_AlarmStat >&
      alarm_stats() const;

  // repeated .com.android.server.alarm.IdleDispatchEntryProto allow_while_idle_dispatches = 40;
  int allow_while_idle_dispatches_size() const;
  void clear_allow_while_idle_dispatches();
  ::com::android::server::alarm::IdleDispatchEntryProto* mutable_allow_while_idle_dispatches(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::IdleDispatchEntryProto >*
      mutable_allow_while_idle_dispatches();
  const ::com::android::server::alarm::IdleDispatchEntryProto& allow_while_idle_dispatches(int index) const;
  ::com::android::server::alarm::IdleDispatchEntryProto* add_allow_while_idle_dispatches();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::IdleDispatchEntryProto >&
      allow_while_idle_dispatches() const;

  // repeated .com.android.server.alarm.WakeupEventProto recent_wakeup_history = 41;
  int recent_wakeup_history_size() const;
  void clear_recent_wakeup_history();
  ::com::android::server::alarm::WakeupEventProto* mutable_recent_wakeup_history(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::WakeupEventProto >*
      mutable_recent_wakeup_history();
  const ::com::android::server::alarm::WakeupEventProto& recent_wakeup_history(int index) const;
  ::com::android::server::alarm::WakeupEventProto* add_recent_wakeup_history();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::WakeupEventProto >&
      recent_wakeup_history() const;

  // repeated .com.android.server.alarm.AlarmProto pending_alarms = 42;
  int pending_alarms_size() const;
  void clear_pending_alarms();
  ::com::android::server::alarm::AlarmProto* mutable_pending_alarms(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >*
      mutable_pending_alarms();
  const ::com::android::server::alarm::AlarmProto& pending_alarms(int index) const;
  ::com::android::server::alarm::AlarmProto* add_pending_alarms();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >&
      pending_alarms() const;

  // optional .com.android.server.alarm.ConstantsProto settings = 5;
  bool has_settings() const;
  void clear_settings();
  const ::com::android::server::alarm::ConstantsProto& settings() const;
  ::com::android::server::alarm::ConstantsProto* release_settings();
  ::com::android::server::alarm::ConstantsProto* mutable_settings();
  void set_allocated_settings(::com::android::server::alarm::ConstantsProto* settings);

  // optional .com.android.server.AppStateTrackerProto app_state_tracker = 6;
  bool has_app_state_tracker() const;
  void clear_app_state_tracker();
  const ::com::android::server::AppStateTrackerProto& app_state_tracker() const;
  ::com::android::server::AppStateTrackerProto* release_app_state_tracker();
  ::com::android::server::AppStateTrackerProto* mutable_app_state_tracker();
  void set_allocated_app_state_tracker(::com::android::server::AppStateTrackerProto* app_state_tracker);

  // optional .com.android.server.alarm.AlarmProto pending_idle_until = 21;
  bool has_pending_idle_until() const;
  void clear_pending_idle_until();
  const ::com::android::server::alarm::AlarmProto& pending_idle_until() const;
  ::com::android::server::alarm::AlarmProto* release_pending_idle_until();
  ::com::android::server::alarm::AlarmProto* mutable_pending_idle_until();
  void set_allocated_pending_idle_until(::com::android::server::alarm::AlarmProto* pending_idle_until);

  // optional .com.android.server.alarm.AlarmProto next_wake_from_idle = 23;
  bool has_next_wake_from_idle() const;
  void clear_next_wake_from_idle();
  const ::com::android::server::alarm::AlarmProto& next_wake_from_idle() const;
  ::com::android::server::alarm::AlarmProto* release_next_wake_from_idle();
  ::com::android::server::alarm::AlarmProto* mutable_next_wake_from_idle();
  void set_allocated_next_wake_from_idle(::com::android::server::alarm::AlarmProto* next_wake_from_idle);

  // optional .com.android.internal.util.LocalLogProto recent_problems = 37;
  bool has_recent_problems() const;
  void clear_recent_problems();
  const ::com::android::internal::util::LocalLogProto& recent_problems() const;
  ::com::android::internal::util::LocalLogProto* release_recent_problems();
  ::com::android::internal::util::LocalLogProto* mutable_recent_problems();
  void set_allocated_recent_problems(::com::android::internal::util::LocalLogProto* recent_problems);

  // optional int64 current_time = 1;
  bool has_current_time() const;
  void clear_current_time();
  ::PROTOBUF_NAMESPACE_ID::int64 current_time() const;
  void set_current_time(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 elapsed_realtime = 2;
  bool has_elapsed_realtime() const;
  void clear_elapsed_realtime();
  ::PROTOBUF_NAMESPACE_ID::int64 elapsed_realtime() const;
  void set_elapsed_realtime(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 last_time_change_clock_time = 3;
  bool has_last_time_change_clock_time() const;
  void clear_last_time_change_clock_time();
  ::PROTOBUF_NAMESPACE_ID::int64 last_time_change_clock_time() const;
  void set_last_time_change_clock_time(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 last_time_change_realtime = 4;
  bool has_last_time_change_realtime() const;
  void clear_last_time_change_realtime();
  ::PROTOBUF_NAMESPACE_ID::int64 last_time_change_realtime() const;
  void set_last_time_change_realtime(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_since_non_interactive_ms = 8;
  bool has_time_since_non_interactive_ms() const;
  void clear_time_since_non_interactive_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_non_interactive_ms() const;
  void set_time_since_non_interactive_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 max_wakeup_delay_ms = 9;
  bool has_max_wakeup_delay_ms() const;
  void clear_max_wakeup_delay_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 max_wakeup_delay_ms() const;
  void set_max_wakeup_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_since_last_dispatch_ms = 10;
  bool has_time_since_last_dispatch_ms() const;
  void clear_time_since_last_dispatch_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_last_dispatch_ms() const;
  void set_time_since_last_dispatch_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_until_next_non_wakeup_delivery_ms = 11;
  bool has_time_until_next_non_wakeup_delivery_ms() const;
  void clear_time_until_next_non_wakeup_delivery_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_next_non_wakeup_delivery_ms() const;
  void set_time_until_next_non_wakeup_delivery_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_until_next_non_wakeup_alarm_ms = 12;
  bool has_time_until_next_non_wakeup_alarm_ms() const;
  void clear_time_until_next_non_wakeup_alarm_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_next_non_wakeup_alarm_ms() const;
  void set_time_until_next_non_wakeup_alarm_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_until_next_wakeup_ms = 13;
  bool has_time_until_next_wakeup_ms() const;
  void clear_time_until_next_wakeup_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_next_wakeup_ms() const;
  void set_time_until_next_wakeup_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_since_last_wakeup_ms = 14;
  bool has_time_since_last_wakeup_ms() const;
  void clear_time_since_last_wakeup_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_last_wakeup_ms() const;
  void set_time_since_last_wakeup_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_since_last_wakeup_set_ms = 15;
  bool has_time_since_last_wakeup_set_ms() const;
  void clear_time_since_last_wakeup_set_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_last_wakeup_set_ms() const;
  void set_time_since_last_wakeup_set_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_change_event_count = 16;
  bool has_time_change_event_count() const;
  void clear_time_change_event_count();
  ::PROTOBUF_NAMESPACE_ID::int64 time_change_event_count() const;
  void set_time_change_event_count(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional bool is_interactive = 7;
  bool has_is_interactive() const;
  void clear_is_interactive();
  bool is_interactive() const;
  void set_is_interactive(bool value);

  // optional int32 delayed_alarm_count = 25;
  bool has_delayed_alarm_count() const;
  void clear_delayed_alarm_count();
  ::PROTOBUF_NAMESPACE_ID::int32 delayed_alarm_count() const;
  void set_delayed_alarm_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 total_delay_time_ms = 26;
  bool has_total_delay_time_ms() const;
  void clear_total_delay_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 total_delay_time_ms() const;
  void set_total_delay_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 max_delay_duration_ms = 27;
  bool has_max_delay_duration_ms() const;
  void clear_max_delay_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 max_delay_duration_ms() const;
  void set_max_delay_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 max_non_interactive_duration_ms = 28;
  bool has_max_non_interactive_duration_ms() const;
  void clear_max_non_interactive_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 max_non_interactive_duration_ms() const;
  void set_max_non_interactive_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 broadcast_ref_count = 29;
  bool has_broadcast_ref_count() const;
  void clear_broadcast_ref_count();
  ::PROTOBUF_NAMESPACE_ID::int32 broadcast_ref_count() const;
  void set_broadcast_ref_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 pending_intent_send_count = 30;
  bool has_pending_intent_send_count() const;
  void clear_pending_intent_send_count();
  ::PROTOBUF_NAMESPACE_ID::int32 pending_intent_send_count() const;
  void set_pending_intent_send_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 pending_intent_finish_count = 31;
  bool has_pending_intent_finish_count() const;
  void clear_pending_intent_finish_count();
  ::PROTOBUF_NAMESPACE_ID::int32 pending_intent_finish_count() const;
  void set_pending_intent_finish_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 listener_send_count = 32;
  bool has_listener_send_count() const;
  void clear_listener_send_count();
  ::PROTOBUF_NAMESPACE_ID::int32 listener_send_count() const;
  void set_listener_send_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 listener_finish_count = 33;
  bool has_listener_finish_count() const;
  void clear_listener_finish_count();
  ::PROTOBUF_NAMESPACE_ID::int32 listener_finish_count() const;
  void set_listener_finish_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.alarm.AlarmManagerServiceDumpProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > device_idle_user_exempt_app_ids_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmClockMetadataProto > next_alarm_clock_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::BatchProto > pending_alarm_batches_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto > pending_user_blocked_background_alarms_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto > pending_while_idle_alarms_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto > past_due_non_wakeup_alarms_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::InFlightProto > outstanding_deliveries_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > use_allow_while_idle_short_time_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch > last_allow_while_idle_dispatch_times_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_TopAlarm > top_alarms_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_AlarmStat > alarm_stats_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::IdleDispatchEntryProto > allow_while_idle_dispatches_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::WakeupEventProto > recent_wakeup_history_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto > pending_alarms_;
  ::com::android::server::alarm::ConstantsProto* settings_;
  ::com::android::server::AppStateTrackerProto* app_state_tracker_;
  ::com::android::server::alarm::AlarmProto* pending_idle_until_;
  ::com::android::server::alarm::AlarmProto* next_wake_from_idle_;
  ::com::android::internal::util::LocalLogProto* recent_problems_;
  ::PROTOBUF_NAMESPACE_ID::int64 current_time_;
  ::PROTOBUF_NAMESPACE_ID::int64 elapsed_realtime_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_time_change_clock_time_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_time_change_realtime_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_non_interactive_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_wakeup_delay_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_last_dispatch_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_next_non_wakeup_delivery_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_next_non_wakeup_alarm_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_next_wakeup_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_last_wakeup_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_last_wakeup_set_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_change_event_count_;
  bool is_interactive_;
  ::PROTOBUF_NAMESPACE_ID::int32 delayed_alarm_count_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_delay_time_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_delay_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_non_interactive_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 broadcast_ref_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 pending_intent_send_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 pending_intent_finish_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 listener_send_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 listener_finish_count_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto;
};
// -------------------------------------------------------------------

class AlarmClockMetadataProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.alarm.AlarmClockMetadataProto) */ {
 public:
  AlarmClockMetadataProto();
  virtual ~AlarmClockMetadataProto();

  AlarmClockMetadataProto(const AlarmClockMetadataProto& from);
  AlarmClockMetadataProto(AlarmClockMetadataProto&& from) noexcept
    : AlarmClockMetadataProto() {
    *this = ::std::move(from);
  }

  inline AlarmClockMetadataProto& operator=(const AlarmClockMetadataProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlarmClockMetadataProto& operator=(AlarmClockMetadataProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AlarmClockMetadataProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlarmClockMetadataProto* internal_default_instance() {
    return reinterpret_cast<const AlarmClockMetadataProto*>(
               &_AlarmClockMetadataProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AlarmClockMetadataProto& a, AlarmClockMetadataProto& b) {
    a.Swap(&b);
  }
  inline void Swap(AlarmClockMetadataProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AlarmClockMetadataProto* New() const final {
    return CreateMaybeMessage<AlarmClockMetadataProto>(nullptr);
  }

  AlarmClockMetadataProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AlarmClockMetadataProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AlarmClockMetadataProto& from);
  void MergeFrom(const AlarmClockMetadataProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlarmClockMetadataProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.alarm.AlarmClockMetadataProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserFieldNumber = 1,
    kIsPendingSendFieldNumber = 2,
    kTriggerTimeMsFieldNumber = 3,
  };
  // optional int32 user = 1;
  bool has_user() const;
  void clear_user();
  ::PROTOBUF_NAMESPACE_ID::int32 user() const;
  void set_user(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool is_pending_send = 2;
  bool has_is_pending_send() const;
  void clear_is_pending_send();
  bool is_pending_send() const;
  void set_is_pending_send(bool value);

  // optional int64 trigger_time_ms = 3;
  bool has_trigger_time_ms() const;
  void clear_trigger_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_time_ms() const;
  void set_trigger_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:com.android.server.alarm.AlarmClockMetadataProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_;
  bool is_pending_send_;
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_time_ms_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto;
};
// -------------------------------------------------------------------

class AlarmProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.alarm.AlarmProto) */ {
 public:
  AlarmProto();
  virtual ~AlarmProto();

  AlarmProto(const AlarmProto& from);
  AlarmProto(AlarmProto&& from) noexcept
    : AlarmProto() {
    *this = ::std::move(from);
  }

  inline AlarmProto& operator=(const AlarmProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlarmProto& operator=(AlarmProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AlarmProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlarmProto* internal_default_instance() {
    return reinterpret_cast<const AlarmProto*>(
               &_AlarmProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AlarmProto& a, AlarmProto& b) {
    a.Swap(&b);
  }
  inline void Swap(AlarmProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AlarmProto* New() const final {
    return CreateMaybeMessage<AlarmProto>(nullptr);
  }

  AlarmProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AlarmProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AlarmProto& from);
  void MergeFrom(const AlarmProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlarmProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.alarm.AlarmProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagFieldNumber = 1,
    kListenerFieldNumber = 10,
    kAlarmClockFieldNumber = 8,
    kOperationFieldNumber = 9,
    kTimeUntilWhenElapsedMsFieldNumber = 3,
    kWindowLengthMsFieldNumber = 4,
    kTypeFieldNumber = 2,
    kCountFieldNumber = 6,
    kRepeatIntervalMsFieldNumber = 5,
    kFlagsFieldNumber = 7,
  };
  // optional string tag = 1 [(.android.privacy) = {
  bool has_tag() const;
  void clear_tag();
  const std::string& tag() const;
  void set_tag(const std::string& value);
  void set_tag(std::string&& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  std::string* mutable_tag();
  std::string* release_tag();
  void set_allocated_tag(std::string* tag);

  // optional string listener = 10 [(.android.privacy) = {
  bool has_listener() const;
  void clear_listener();
  const std::string& listener() const;
  void set_listener(const std::string& value);
  void set_listener(std::string&& value);
  void set_listener(const char* value);
  void set_listener(const char* value, size_t size);
  std::string* mutable_listener();
  std::string* release_listener();
  void set_allocated_listener(std::string* listener);

  // optional .android.app.AlarmClockInfoProto alarm_clock = 8;
  bool has_alarm_clock() const;
  void clear_alarm_clock();
  const ::android::app::AlarmClockInfoProto& alarm_clock() const;
  ::android::app::AlarmClockInfoProto* release_alarm_clock();
  ::android::app::AlarmClockInfoProto* mutable_alarm_clock();
  void set_allocated_alarm_clock(::android::app::AlarmClockInfoProto* alarm_clock);

  // optional .android.app.PendingIntentProto operation = 9;
  bool has_operation() const;
  void clear_operation();
  const ::android::app::PendingIntentProto& operation() const;
  ::android::app::PendingIntentProto* release_operation();
  ::android::app::PendingIntentProto* mutable_operation();
  void set_allocated_operation(::android::app::PendingIntentProto* operation);

  // optional int64 time_until_when_elapsed_ms = 3;
  bool has_time_until_when_elapsed_ms() const;
  void clear_time_until_when_elapsed_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_when_elapsed_ms() const;
  void set_time_until_when_elapsed_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 window_length_ms = 4;
  bool has_window_length_ms() const;
  void clear_window_length_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 window_length_ms() const;
  void set_window_length_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional .android.app.AlarmManagerProto.AlarmType type = 2;
  bool has_type() const;
  void clear_type();
  ::android::app::AlarmManagerProto_AlarmType type() const;
  void set_type(::android::app::AlarmManagerProto_AlarmType value);

  // optional int32 count = 6;
  bool has_count() const;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 repeat_interval_ms = 5;
  bool has_repeat_interval_ms() const;
  void clear_repeat_interval_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 repeat_interval_ms() const;
  void set_repeat_interval_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 flags = 7;
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.alarm.AlarmProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr listener_;
  ::android::app::AlarmClockInfoProto* alarm_clock_;
  ::android::app::PendingIntentProto* operation_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_when_elapsed_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 window_length_ms_;
  int type_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  ::PROTOBUF_NAMESPACE_ID::int64 repeat_interval_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto;
};
// -------------------------------------------------------------------

class BatchProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.alarm.BatchProto) */ {
 public:
  BatchProto();
  virtual ~BatchProto();

  BatchProto(const BatchProto& from);
  BatchProto(BatchProto&& from) noexcept
    : BatchProto() {
    *this = ::std::move(from);
  }

  inline BatchProto& operator=(const BatchProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchProto& operator=(BatchProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BatchProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchProto* internal_default_instance() {
    return reinterpret_cast<const BatchProto*>(
               &_BatchProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(BatchProto& a, BatchProto& b) {
    a.Swap(&b);
  }
  inline void Swap(BatchProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BatchProto* New() const final {
    return CreateMaybeMessage<BatchProto>(nullptr);
  }

  BatchProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BatchProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BatchProto& from);
  void MergeFrom(const BatchProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.alarm.BatchProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAlarmsFieldNumber = 4,
    kStartRealtimeFieldNumber = 1,
    kEndRealtimeFieldNumber = 2,
    kFlagsFieldNumber = 3,
  };
  // repeated .com.android.server.alarm.AlarmProto alarms = 4;
  int alarms_size() const;
  void clear_alarms();
  ::com::android::server::alarm::AlarmProto* mutable_alarms(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >*
      mutable_alarms();
  const ::com::android::server::alarm::AlarmProto& alarms(int index) const;
  ::com::android::server::alarm::AlarmProto* add_alarms();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >&
      alarms() const;

  // optional int64 start_realtime = 1;
  bool has_start_realtime() const;
  void clear_start_realtime();
  ::PROTOBUF_NAMESPACE_ID::int64 start_realtime() const;
  void set_start_realtime(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 end_realtime = 2;
  bool has_end_realtime() const;
  void clear_end_realtime();
  ::PROTOBUF_NAMESPACE_ID::int64 end_realtime() const;
  void set_end_realtime(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 flags = 3;
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.alarm.BatchProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto > alarms_;
  ::PROTOBUF_NAMESPACE_ID::int64 start_realtime_;
  ::PROTOBUF_NAMESPACE_ID::int64 end_realtime_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto;
};
// -------------------------------------------------------------------

class BroadcastStatsProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.alarm.BroadcastStatsProto) */ {
 public:
  BroadcastStatsProto();
  virtual ~BroadcastStatsProto();

  BroadcastStatsProto(const BroadcastStatsProto& from);
  BroadcastStatsProto(BroadcastStatsProto&& from) noexcept
    : BroadcastStatsProto() {
    *this = ::std::move(from);
  }

  inline BroadcastStatsProto& operator=(const BroadcastStatsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline BroadcastStatsProto& operator=(BroadcastStatsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BroadcastStatsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BroadcastStatsProto* internal_default_instance() {
    return reinterpret_cast<const BroadcastStatsProto*>(
               &_BroadcastStatsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(BroadcastStatsProto& a, BroadcastStatsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(BroadcastStatsProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BroadcastStatsProto* New() const final {
    return CreateMaybeMessage<BroadcastStatsProto>(nullptr);
  }

  BroadcastStatsProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BroadcastStatsProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BroadcastStatsProto& from);
  void MergeFrom(const BroadcastStatsProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BroadcastStatsProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.alarm.BroadcastStatsProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPackageNameFieldNumber = 2,
    kUidFieldNumber = 1,
    kCountFieldNumber = 4,
    kTotalFlightDurationMsFieldNumber = 3,
    kStartTimeRealtimeFieldNumber = 6,
    kWakeupCountFieldNumber = 5,
    kNestingFieldNumber = 7,
  };
  // optional string package_name = 2;
  bool has_package_name() const;
  void clear_package_name();
  const std::string& package_name() const;
  void set_package_name(const std::string& value);
  void set_package_name(std::string&& value);
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  std::string* mutable_package_name();
  std::string* release_package_name();
  void set_allocated_package_name(std::string* package_name);

  // optional int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 count = 4;
  bool has_count() const;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 total_flight_duration_ms = 3;
  bool has_total_flight_duration_ms() const;
  void clear_total_flight_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 total_flight_duration_ms() const;
  void set_total_flight_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 start_time_realtime = 6;
  bool has_start_time_realtime() const;
  void clear_start_time_realtime();
  ::PROTOBUF_NAMESPACE_ID::int64 start_time_realtime() const;
  void set_start_time_realtime(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 wakeup_count = 5;
  bool has_wakeup_count() const;
  void clear_wakeup_count();
  ::PROTOBUF_NAMESPACE_ID::int32 wakeup_count() const;
  void set_wakeup_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 nesting = 7;
  bool has_nesting() const;
  void clear_nesting();
  ::PROTOBUF_NAMESPACE_ID::int32 nesting() const;
  void set_nesting(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.alarm.BroadcastStatsProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr package_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_flight_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 start_time_realtime_;
  ::PROTOBUF_NAMESPACE_ID::int32 wakeup_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 nesting_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto;
};
// -------------------------------------------------------------------

class ConstantsProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.alarm.ConstantsProto) */ {
 public:
  ConstantsProto();
  virtual ~ConstantsProto();

  ConstantsProto(const ConstantsProto& from);
  ConstantsProto(ConstantsProto&& from) noexcept
    : ConstantsProto() {
    *this = ::std::move(from);
  }

  inline ConstantsProto& operator=(const ConstantsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConstantsProto& operator=(ConstantsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConstantsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConstantsProto* internal_default_instance() {
    return reinterpret_cast<const ConstantsProto*>(
               &_ConstantsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ConstantsProto& a, ConstantsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ConstantsProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConstantsProto* New() const final {
    return CreateMaybeMessage<ConstantsProto>(nullptr);
  }

  ConstantsProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConstantsProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConstantsProto& from);
  void MergeFrom(const ConstantsProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConstantsProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.alarm.ConstantsProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinFuturityDurationMsFieldNumber = 1,
    kMinIntervalDurationMsFieldNumber = 2,
    kListenerTimeoutDurationMsFieldNumber = 3,
    kAllowWhileIdleShortDurationMsFieldNumber = 4,
    kAllowWhileIdleLongDurationMsFieldNumber = 5,
    kAllowWhileIdleWhitelistDurationMsFieldNumber = 6,
    kMaxIntervalDurationMsFieldNumber = 7,
  };
  // optional int64 min_futurity_duration_ms = 1;
  bool has_min_futurity_duration_ms() const;
  void clear_min_futurity_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 min_futurity_duration_ms() const;
  void set_min_futurity_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 min_interval_duration_ms = 2;
  bool has_min_interval_duration_ms() const;
  void clear_min_interval_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 min_interval_duration_ms() const;
  void set_min_interval_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 listener_timeout_duration_ms = 3;
  bool has_listener_timeout_duration_ms() const;
  void clear_listener_timeout_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 listener_timeout_duration_ms() const;
  void set_listener_timeout_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 allow_while_idle_short_duration_ms = 4;
  bool has_allow_while_idle_short_duration_ms() const;
  void clear_allow_while_idle_short_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 allow_while_idle_short_duration_ms() const;
  void set_allow_while_idle_short_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 allow_while_idle_long_duration_ms = 5;
  bool has_allow_while_idle_long_duration_ms() const;
  void clear_allow_while_idle_long_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 allow_while_idle_long_duration_ms() const;
  void set_allow_while_idle_long_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 allow_while_idle_whitelist_duration_ms = 6;
  bool has_allow_while_idle_whitelist_duration_ms() const;
  void clear_allow_while_idle_whitelist_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 allow_while_idle_whitelist_duration_ms() const;
  void set_allow_while_idle_whitelist_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 max_interval_duration_ms = 7;
  bool has_max_interval_duration_ms() const;
  void clear_max_interval_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 max_interval_duration_ms() const;
  void set_max_interval_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:com.android.server.alarm.ConstantsProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 min_futurity_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 min_interval_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 listener_timeout_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 allow_while_idle_short_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 allow_while_idle_long_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 allow_while_idle_whitelist_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_interval_duration_ms_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto;
};
// -------------------------------------------------------------------

class FilterStatsProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.alarm.FilterStatsProto) */ {
 public:
  FilterStatsProto();
  virtual ~FilterStatsProto();

  FilterStatsProto(const FilterStatsProto& from);
  FilterStatsProto(FilterStatsProto&& from) noexcept
    : FilterStatsProto() {
    *this = ::std::move(from);
  }

  inline FilterStatsProto& operator=(const FilterStatsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline FilterStatsProto& operator=(FilterStatsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FilterStatsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FilterStatsProto* internal_default_instance() {
    return reinterpret_cast<const FilterStatsProto*>(
               &_FilterStatsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(FilterStatsProto& a, FilterStatsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(FilterStatsProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FilterStatsProto* New() const final {
    return CreateMaybeMessage<FilterStatsProto>(nullptr);
  }

  FilterStatsProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FilterStatsProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FilterStatsProto& from);
  void MergeFrom(const FilterStatsProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FilterStatsProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.alarm.FilterStatsProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagFieldNumber = 1,
    kLastFlightTimeRealtimeFieldNumber = 2,
    kTotalFlightDurationMsFieldNumber = 3,
    kCountFieldNumber = 4,
    kWakeupCountFieldNumber = 5,
    kStartTimeRealtimeFieldNumber = 6,
    kNestingFieldNumber = 7,
  };
  // optional string tag = 1 [(.android.privacy) = {
  bool has_tag() const;
  void clear_tag();
  const std::string& tag() const;
  void set_tag(const std::string& value);
  void set_tag(std::string&& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  std::string* mutable_tag();
  std::string* release_tag();
  void set_allocated_tag(std::string* tag);

  // optional int64 last_flight_time_realtime = 2;
  bool has_last_flight_time_realtime() const;
  void clear_last_flight_time_realtime();
  ::PROTOBUF_NAMESPACE_ID::int64 last_flight_time_realtime() const;
  void set_last_flight_time_realtime(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 total_flight_duration_ms = 3;
  bool has_total_flight_duration_ms() const;
  void clear_total_flight_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 total_flight_duration_ms() const;
  void set_total_flight_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 count = 4;
  bool has_count() const;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 wakeup_count = 5;
  bool has_wakeup_count() const;
  void clear_wakeup_count();
  ::PROTOBUF_NAMESPACE_ID::int32 wakeup_count() const;
  void set_wakeup_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 start_time_realtime = 6;
  bool has_start_time_realtime() const;
  void clear_start_time_realtime();
  ::PROTOBUF_NAMESPACE_ID::int64 start_time_realtime() const;
  void set_start_time_realtime(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 nesting = 7;
  bool has_nesting() const;
  void clear_nesting();
  ::PROTOBUF_NAMESPACE_ID::int32 nesting() const;
  void set_nesting(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.alarm.FilterStatsProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_flight_time_realtime_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_flight_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  ::PROTOBUF_NAMESPACE_ID::int32 wakeup_count_;
  ::PROTOBUF_NAMESPACE_ID::int64 start_time_realtime_;
  ::PROTOBUF_NAMESPACE_ID::int32 nesting_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto;
};
// -------------------------------------------------------------------

class IdleDispatchEntryProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.alarm.IdleDispatchEntryProto) */ {
 public:
  IdleDispatchEntryProto();
  virtual ~IdleDispatchEntryProto();

  IdleDispatchEntryProto(const IdleDispatchEntryProto& from);
  IdleDispatchEntryProto(IdleDispatchEntryProto&& from) noexcept
    : IdleDispatchEntryProto() {
    *this = ::std::move(from);
  }

  inline IdleDispatchEntryProto& operator=(const IdleDispatchEntryProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdleDispatchEntryProto& operator=(IdleDispatchEntryProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IdleDispatchEntryProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IdleDispatchEntryProto* internal_default_instance() {
    return reinterpret_cast<const IdleDispatchEntryProto*>(
               &_IdleDispatchEntryProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(IdleDispatchEntryProto& a, IdleDispatchEntryProto& b) {
    a.Swap(&b);
  }
  inline void Swap(IdleDispatchEntryProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IdleDispatchEntryProto* New() const final {
    return CreateMaybeMessage<IdleDispatchEntryProto>(nullptr);
  }

  IdleDispatchEntryProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IdleDispatchEntryProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IdleDispatchEntryProto& from);
  void MergeFrom(const IdleDispatchEntryProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IdleDispatchEntryProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.alarm.IdleDispatchEntryProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPkgFieldNumber = 2,
    kTagFieldNumber = 3,
    kOpFieldNumber = 4,
    kEntryCreationRealtimeFieldNumber = 5,
    kArgRealtimeFieldNumber = 6,
    kUidFieldNumber = 1,
  };
  // optional string pkg = 2;
  bool has_pkg() const;
  void clear_pkg();
  const std::string& pkg() const;
  void set_pkg(const std::string& value);
  void set_pkg(std::string&& value);
  void set_pkg(const char* value);
  void set_pkg(const char* value, size_t size);
  std::string* mutable_pkg();
  std::string* release_pkg();
  void set_allocated_pkg(std::string* pkg);

  // optional string tag = 3 [(.android.privacy) = {
  bool has_tag() const;
  void clear_tag();
  const std::string& tag() const;
  void set_tag(const std::string& value);
  void set_tag(std::string&& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  std::string* mutable_tag();
  std::string* release_tag();
  void set_allocated_tag(std::string* tag);

  // optional string op = 4;
  bool has_op() const;
  void clear_op();
  const std::string& op() const;
  void set_op(const std::string& value);
  void set_op(std::string&& value);
  void set_op(const char* value);
  void set_op(const char* value, size_t size);
  std::string* mutable_op();
  std::string* release_op();
  void set_allocated_op(std::string* op);

  // optional int64 entry_creation_realtime = 5;
  bool has_entry_creation_realtime() const;
  void clear_entry_creation_realtime();
  ::PROTOBUF_NAMESPACE_ID::int64 entry_creation_realtime() const;
  void set_entry_creation_realtime(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 arg_realtime = 6;
  bool has_arg_realtime() const;
  void clear_arg_realtime();
  ::PROTOBUF_NAMESPACE_ID::int64 arg_realtime() const;
  void set_arg_realtime(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.alarm.IdleDispatchEntryProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pkg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr op_;
  ::PROTOBUF_NAMESPACE_ID::int64 entry_creation_realtime_;
  ::PROTOBUF_NAMESPACE_ID::int64 arg_realtime_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto;
};
// -------------------------------------------------------------------

class InFlightProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.alarm.InFlightProto) */ {
 public:
  InFlightProto();
  virtual ~InFlightProto();

  InFlightProto(const InFlightProto& from);
  InFlightProto(InFlightProto&& from) noexcept
    : InFlightProto() {
    *this = ::std::move(from);
  }

  inline InFlightProto& operator=(const InFlightProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline InFlightProto& operator=(InFlightProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InFlightProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InFlightProto* internal_default_instance() {
    return reinterpret_cast<const InFlightProto*>(
               &_InFlightProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(InFlightProto& a, InFlightProto& b) {
    a.Swap(&b);
  }
  inline void Swap(InFlightProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InFlightProto* New() const final {
    return CreateMaybeMessage<InFlightProto>(nullptr);
  }

  InFlightProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InFlightProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InFlightProto& from);
  void MergeFrom(const InFlightProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InFlightProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.alarm.InFlightProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagFieldNumber = 2,
    kPendingIntentFieldNumber = 5,
    kBroadcastStatsFieldNumber = 6,
    kFilterStatsFieldNumber = 7,
    kWorkSourceFieldNumber = 8,
    kUidFieldNumber = 1,
    kAlarmTypeFieldNumber = 4,
    kWhenElapsedMsFieldNumber = 3,
  };
  // optional string tag = 2 [(.android.privacy) = {
  bool has_tag() const;
  void clear_tag();
  const std::string& tag() const;
  void set_tag(const std::string& value);
  void set_tag(std::string&& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  std::string* mutable_tag();
  std::string* release_tag();
  void set_allocated_tag(std::string* tag);

  // optional .android.app.PendingIntentProto pending_intent = 5;
  bool has_pending_intent() const;
  void clear_pending_intent();
  const ::android::app::PendingIntentProto& pending_intent() const;
  ::android::app::PendingIntentProto* release_pending_intent();
  ::android::app::PendingIntentProto* mutable_pending_intent();
  void set_allocated_pending_intent(::android::app::PendingIntentProto* pending_intent);

  // optional .com.android.server.alarm.BroadcastStatsProto broadcast_stats = 6;
  bool has_broadcast_stats() const;
  void clear_broadcast_stats();
  const ::com::android::server::alarm::BroadcastStatsProto& broadcast_stats() const;
  ::com::android::server::alarm::BroadcastStatsProto* release_broadcast_stats();
  ::com::android::server::alarm::BroadcastStatsProto* mutable_broadcast_stats();
  void set_allocated_broadcast_stats(::com::android::server::alarm::BroadcastStatsProto* broadcast_stats);

  // optional .com.android.server.alarm.FilterStatsProto filter_stats = 7;
  bool has_filter_stats() const;
  void clear_filter_stats();
  const ::com::android::server::alarm::FilterStatsProto& filter_stats() const;
  ::com::android::server::alarm::FilterStatsProto* release_filter_stats();
  ::com::android::server::alarm::FilterStatsProto* mutable_filter_stats();
  void set_allocated_filter_stats(::com::android::server::alarm::FilterStatsProto* filter_stats);

  // optional .android.os.WorkSourceProto work_source = 8;
  bool has_work_source() const;
  void clear_work_source();
  const ::android::os::WorkSourceProto& work_source() const;
  ::android::os::WorkSourceProto* release_work_source();
  ::android::os::WorkSourceProto* mutable_work_source();
  void set_allocated_work_source(::android::os::WorkSourceProto* work_source);

  // optional int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional .android.app.AlarmManagerProto.AlarmType alarm_type = 4;
  bool has_alarm_type() const;
  void clear_alarm_type();
  ::android::app::AlarmManagerProto_AlarmType alarm_type() const;
  void set_alarm_type(::android::app::AlarmManagerProto_AlarmType value);

  // optional int64 when_elapsed_ms = 3;
  bool has_when_elapsed_ms() const;
  void clear_when_elapsed_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 when_elapsed_ms() const;
  void set_when_elapsed_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:com.android.server.alarm.InFlightProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
  ::android::app::PendingIntentProto* pending_intent_;
  ::com::android::server::alarm::BroadcastStatsProto* broadcast_stats_;
  ::com::android::server::alarm::FilterStatsProto* filter_stats_;
  ::android::os::WorkSourceProto* work_source_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  int alarm_type_;
  ::PROTOBUF_NAMESPACE_ID::int64 when_elapsed_ms_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto;
};
// -------------------------------------------------------------------

class WakeupEventProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.alarm.WakeupEventProto) */ {
 public:
  WakeupEventProto();
  virtual ~WakeupEventProto();

  WakeupEventProto(const WakeupEventProto& from);
  WakeupEventProto(WakeupEventProto&& from) noexcept
    : WakeupEventProto() {
    *this = ::std::move(from);
  }

  inline WakeupEventProto& operator=(const WakeupEventProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline WakeupEventProto& operator=(WakeupEventProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const WakeupEventProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WakeupEventProto* internal_default_instance() {
    return reinterpret_cast<const WakeupEventProto*>(
               &_WakeupEventProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(WakeupEventProto& a, WakeupEventProto& b) {
    a.Swap(&b);
  }
  inline void Swap(WakeupEventProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WakeupEventProto* New() const final {
    return CreateMaybeMessage<WakeupEventProto>(nullptr);
  }

  WakeupEventProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WakeupEventProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const WakeupEventProto& from);
  void MergeFrom(const WakeupEventProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WakeupEventProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.alarm.WakeupEventProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 2,
    kWhenFieldNumber = 3,
    kUidFieldNumber = 1,
  };
  // optional string action = 2;
  bool has_action() const;
  void clear_action();
  const std::string& action() const;
  void set_action(const std::string& value);
  void set_action(std::string&& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  std::string* mutable_action();
  std::string* release_action();
  void set_allocated_action(std::string* action);

  // optional int64 when = 3;
  bool has_when() const;
  void clear_when();
  ::PROTOBUF_NAMESPACE_ID::int64 when() const;
  void set_when(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.alarm.WakeupEventProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_;
  ::PROTOBUF_NAMESPACE_ID::int64 when_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch

// optional int32 uid = 1;
inline bool AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch::uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.LastAllowWhileIdleDispatch.uid)
  return uid_;
}
inline void AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.LastAllowWhileIdleDispatch.uid)
}

// optional int64 time_ms = 2;
inline bool AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch::has_time_ms() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch::clear_time_ms() {
  time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch::time_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.LastAllowWhileIdleDispatch.time_ms)
  return time_ms_;
}
inline void AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch::set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  time_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.LastAllowWhileIdleDispatch.time_ms)
}

// optional int64 next_allowed_ms = 3;
inline bool AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch::has_next_allowed_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch::clear_next_allowed_ms() {
  next_allowed_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch::next_allowed_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.LastAllowWhileIdleDispatch.next_allowed_ms)
  return next_allowed_ms_;
}
inline void AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch::set_next_allowed_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  next_allowed_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.LastAllowWhileIdleDispatch.next_allowed_ms)
}

// -------------------------------------------------------------------

// AlarmManagerServiceDumpProto_TopAlarm

// optional int32 uid = 1;
inline bool AlarmManagerServiceDumpProto_TopAlarm::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmManagerServiceDumpProto_TopAlarm::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AlarmManagerServiceDumpProto_TopAlarm::uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm.uid)
  return uid_;
}
inline void AlarmManagerServiceDumpProto_TopAlarm::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm.uid)
}

// optional string package_name = 2;
inline bool AlarmManagerServiceDumpProto_TopAlarm::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmManagerServiceDumpProto_TopAlarm::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AlarmManagerServiceDumpProto_TopAlarm::package_name() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm.package_name)
  return package_name_.GetNoArena();
}
inline void AlarmManagerServiceDumpProto_TopAlarm::set_package_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm.package_name)
}
inline void AlarmManagerServiceDumpProto_TopAlarm::set_package_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm.package_name)
}
inline void AlarmManagerServiceDumpProto_TopAlarm::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm.package_name)
}
inline void AlarmManagerServiceDumpProto_TopAlarm::set_package_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm.package_name)
}
inline std::string* AlarmManagerServiceDumpProto_TopAlarm::mutable_package_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm.package_name)
  return package_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AlarmManagerServiceDumpProto_TopAlarm::release_package_name() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm.package_name)
  if (!has_package_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return package_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmManagerServiceDumpProto_TopAlarm::set_allocated_package_name(std::string* package_name) {
  if (package_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  package_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm.package_name)
}

// optional .com.android.server.alarm.FilterStatsProto filter = 3;
inline bool AlarmManagerServiceDumpProto_TopAlarm::has_filter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmManagerServiceDumpProto_TopAlarm::clear_filter() {
  if (filter_ != nullptr) filter_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::alarm::FilterStatsProto& AlarmManagerServiceDumpProto_TopAlarm::filter() const {
  const ::com::android::server::alarm::FilterStatsProto* p = filter_;
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm.filter)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::alarm::FilterStatsProto*>(
      &::com::android::server::alarm::_FilterStatsProto_default_instance_);
}
inline ::com::android::server::alarm::FilterStatsProto* AlarmManagerServiceDumpProto_TopAlarm::release_filter() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm.filter)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::alarm::FilterStatsProto* temp = filter_;
  filter_ = nullptr;
  return temp;
}
inline ::com::android::server::alarm::FilterStatsProto* AlarmManagerServiceDumpProto_TopAlarm::mutable_filter() {
  _has_bits_[0] |= 0x00000002u;
  if (filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::alarm::FilterStatsProto>(GetArenaNoVirtual());
    filter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm.filter)
  return filter_;
}
inline void AlarmManagerServiceDumpProto_TopAlarm::set_allocated_filter(::com::android::server::alarm::FilterStatsProto* filter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete filter_;
  }
  if (filter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      filter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, filter, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  filter_ = filter;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm.filter)
}

// -------------------------------------------------------------------

// AlarmManagerServiceDumpProto_AlarmStat

// optional .com.android.server.alarm.BroadcastStatsProto broadcast = 1;
inline bool AlarmManagerServiceDumpProto_AlarmStat::has_broadcast() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmManagerServiceDumpProto_AlarmStat::clear_broadcast() {
  if (broadcast_ != nullptr) broadcast_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::alarm::BroadcastStatsProto& AlarmManagerServiceDumpProto_AlarmStat::broadcast() const {
  const ::com::android::server::alarm::BroadcastStatsProto* p = broadcast_;
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.AlarmStat.broadcast)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::alarm::BroadcastStatsProto*>(
      &::com::android::server::alarm::_BroadcastStatsProto_default_instance_);
}
inline ::com::android::server::alarm::BroadcastStatsProto* AlarmManagerServiceDumpProto_AlarmStat::release_broadcast() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.AlarmManagerServiceDumpProto.AlarmStat.broadcast)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::alarm::BroadcastStatsProto* temp = broadcast_;
  broadcast_ = nullptr;
  return temp;
}
inline ::com::android::server::alarm::BroadcastStatsProto* AlarmManagerServiceDumpProto_AlarmStat::mutable_broadcast() {
  _has_bits_[0] |= 0x00000001u;
  if (broadcast_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::alarm::BroadcastStatsProto>(GetArenaNoVirtual());
    broadcast_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.AlarmStat.broadcast)
  return broadcast_;
}
inline void AlarmManagerServiceDumpProto_AlarmStat::set_allocated_broadcast(::com::android::server::alarm::BroadcastStatsProto* broadcast) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete broadcast_;
  }
  if (broadcast) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      broadcast = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, broadcast, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  broadcast_ = broadcast;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.AlarmManagerServiceDumpProto.AlarmStat.broadcast)
}

// repeated .com.android.server.alarm.FilterStatsProto filters = 2;
inline int AlarmManagerServiceDumpProto_AlarmStat::filters_size() const {
  return filters_.size();
}
inline void AlarmManagerServiceDumpProto_AlarmStat::clear_filters() {
  filters_.Clear();
}
inline ::com::android::server::alarm::FilterStatsProto* AlarmManagerServiceDumpProto_AlarmStat::mutable_filters(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.AlarmStat.filters)
  return filters_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::FilterStatsProto >*
AlarmManagerServiceDumpProto_AlarmStat::mutable_filters() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.AlarmStat.filters)
  return &filters_;
}
inline const ::com::android::server::alarm::FilterStatsProto& AlarmManagerServiceDumpProto_AlarmStat::filters(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.AlarmStat.filters)
  return filters_.Get(index);
}
inline ::com::android::server::alarm::FilterStatsProto* AlarmManagerServiceDumpProto_AlarmStat::add_filters() {
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.AlarmStat.filters)
  return filters_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::FilterStatsProto >&
AlarmManagerServiceDumpProto_AlarmStat::filters() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.AlarmStat.filters)
  return filters_;
}

// -------------------------------------------------------------------

// AlarmManagerServiceDumpProto

// optional int64 current_time = 1;
inline bool AlarmManagerServiceDumpProto::has_current_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_current_time() {
  current_time_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::current_time() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.current_time)
  return current_time_;
}
inline void AlarmManagerServiceDumpProto::set_current_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  current_time_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.current_time)
}

// optional int64 elapsed_realtime = 2;
inline bool AlarmManagerServiceDumpProto::has_elapsed_realtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_elapsed_realtime() {
  elapsed_realtime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::elapsed_realtime() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.elapsed_realtime)
  return elapsed_realtime_;
}
inline void AlarmManagerServiceDumpProto::set_elapsed_realtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  elapsed_realtime_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.elapsed_realtime)
}

// optional int64 last_time_change_clock_time = 3;
inline bool AlarmManagerServiceDumpProto::has_last_time_change_clock_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_last_time_change_clock_time() {
  last_time_change_clock_time_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::last_time_change_clock_time() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.last_time_change_clock_time)
  return last_time_change_clock_time_;
}
inline void AlarmManagerServiceDumpProto::set_last_time_change_clock_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  last_time_change_clock_time_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.last_time_change_clock_time)
}

// optional int64 last_time_change_realtime = 4;
inline bool AlarmManagerServiceDumpProto::has_last_time_change_realtime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_last_time_change_realtime() {
  last_time_change_realtime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::last_time_change_realtime() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.last_time_change_realtime)
  return last_time_change_realtime_;
}
inline void AlarmManagerServiceDumpProto::set_last_time_change_realtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  last_time_change_realtime_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.last_time_change_realtime)
}

// optional .com.android.server.alarm.ConstantsProto settings = 5;
inline bool AlarmManagerServiceDumpProto::has_settings() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_settings() {
  if (settings_ != nullptr) settings_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::alarm::ConstantsProto& AlarmManagerServiceDumpProto::settings() const {
  const ::com::android::server::alarm::ConstantsProto* p = settings_;
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.settings)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::alarm::ConstantsProto*>(
      &::com::android::server::alarm::_ConstantsProto_default_instance_);
}
inline ::com::android::server::alarm::ConstantsProto* AlarmManagerServiceDumpProto::release_settings() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.AlarmManagerServiceDumpProto.settings)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::alarm::ConstantsProto* temp = settings_;
  settings_ = nullptr;
  return temp;
}
inline ::com::android::server::alarm::ConstantsProto* AlarmManagerServiceDumpProto::mutable_settings() {
  _has_bits_[0] |= 0x00000001u;
  if (settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::alarm::ConstantsProto>(GetArenaNoVirtual());
    settings_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.settings)
  return settings_;
}
inline void AlarmManagerServiceDumpProto::set_allocated_settings(::com::android::server::alarm::ConstantsProto* settings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete settings_;
  }
  if (settings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      settings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, settings, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  settings_ = settings;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.AlarmManagerServiceDumpProto.settings)
}

// optional .com.android.server.AppStateTrackerProto app_state_tracker = 6;
inline bool AlarmManagerServiceDumpProto::has_app_state_tracker() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::com::android::server::AppStateTrackerProto& AlarmManagerServiceDumpProto::app_state_tracker() const {
  const ::com::android::server::AppStateTrackerProto* p = app_state_tracker_;
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.app_state_tracker)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::AppStateTrackerProto*>(
      &::com::android::server::_AppStateTrackerProto_default_instance_);
}
inline ::com::android::server::AppStateTrackerProto* AlarmManagerServiceDumpProto::release_app_state_tracker() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.AlarmManagerServiceDumpProto.app_state_tracker)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::AppStateTrackerProto* temp = app_state_tracker_;
  app_state_tracker_ = nullptr;
  return temp;
}
inline ::com::android::server::AppStateTrackerProto* AlarmManagerServiceDumpProto::mutable_app_state_tracker() {
  _has_bits_[0] |= 0x00000002u;
  if (app_state_tracker_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::AppStateTrackerProto>(GetArenaNoVirtual());
    app_state_tracker_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.app_state_tracker)
  return app_state_tracker_;
}
inline void AlarmManagerServiceDumpProto::set_allocated_app_state_tracker(::com::android::server::AppStateTrackerProto* app_state_tracker) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(app_state_tracker_);
  }
  if (app_state_tracker) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      app_state_tracker = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, app_state_tracker, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  app_state_tracker_ = app_state_tracker;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.AlarmManagerServiceDumpProto.app_state_tracker)
}

// optional bool is_interactive = 7;
inline bool AlarmManagerServiceDumpProto::has_is_interactive() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_is_interactive() {
  is_interactive_ = false;
  _has_bits_[0] &= ~0x00040000u;
}
inline bool AlarmManagerServiceDumpProto::is_interactive() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.is_interactive)
  return is_interactive_;
}
inline void AlarmManagerServiceDumpProto::set_is_interactive(bool value) {
  _has_bits_[0] |= 0x00040000u;
  is_interactive_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.is_interactive)
}

// optional int64 time_since_non_interactive_ms = 8;
inline bool AlarmManagerServiceDumpProto::has_time_since_non_interactive_ms() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_time_since_non_interactive_ms() {
  time_since_non_interactive_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::time_since_non_interactive_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.time_since_non_interactive_ms)
  return time_since_non_interactive_ms_;
}
inline void AlarmManagerServiceDumpProto::set_time_since_non_interactive_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000200u;
  time_since_non_interactive_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.time_since_non_interactive_ms)
}

// optional int64 max_wakeup_delay_ms = 9;
inline bool AlarmManagerServiceDumpProto::has_max_wakeup_delay_ms() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_max_wakeup_delay_ms() {
  max_wakeup_delay_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::max_wakeup_delay_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.max_wakeup_delay_ms)
  return max_wakeup_delay_ms_;
}
inline void AlarmManagerServiceDumpProto::set_max_wakeup_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000400u;
  max_wakeup_delay_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.max_wakeup_delay_ms)
}

// optional int64 time_since_last_dispatch_ms = 10;
inline bool AlarmManagerServiceDumpProto::has_time_since_last_dispatch_ms() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_time_since_last_dispatch_ms() {
  time_since_last_dispatch_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::time_since_last_dispatch_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.time_since_last_dispatch_ms)
  return time_since_last_dispatch_ms_;
}
inline void AlarmManagerServiceDumpProto::set_time_since_last_dispatch_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000800u;
  time_since_last_dispatch_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.time_since_last_dispatch_ms)
}

// optional int64 time_until_next_non_wakeup_delivery_ms = 11;
inline bool AlarmManagerServiceDumpProto::has_time_until_next_non_wakeup_delivery_ms() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_time_until_next_non_wakeup_delivery_ms() {
  time_until_next_non_wakeup_delivery_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::time_until_next_non_wakeup_delivery_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.time_until_next_non_wakeup_delivery_ms)
  return time_until_next_non_wakeup_delivery_ms_;
}
inline void AlarmManagerServiceDumpProto::set_time_until_next_non_wakeup_delivery_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00001000u;
  time_until_next_non_wakeup_delivery_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.time_until_next_non_wakeup_delivery_ms)
}

// optional int64 time_until_next_non_wakeup_alarm_ms = 12;
inline bool AlarmManagerServiceDumpProto::has_time_until_next_non_wakeup_alarm_ms() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_time_until_next_non_wakeup_alarm_ms() {
  time_until_next_non_wakeup_alarm_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::time_until_next_non_wakeup_alarm_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.time_until_next_non_wakeup_alarm_ms)
  return time_until_next_non_wakeup_alarm_ms_;
}
inline void AlarmManagerServiceDumpProto::set_time_until_next_non_wakeup_alarm_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00002000u;
  time_until_next_non_wakeup_alarm_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.time_until_next_non_wakeup_alarm_ms)
}

// optional int64 time_until_next_wakeup_ms = 13;
inline bool AlarmManagerServiceDumpProto::has_time_until_next_wakeup_ms() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_time_until_next_wakeup_ms() {
  time_until_next_wakeup_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::time_until_next_wakeup_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.time_until_next_wakeup_ms)
  return time_until_next_wakeup_ms_;
}
inline void AlarmManagerServiceDumpProto::set_time_until_next_wakeup_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00004000u;
  time_until_next_wakeup_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.time_until_next_wakeup_ms)
}

// optional int64 time_since_last_wakeup_ms = 14;
inline bool AlarmManagerServiceDumpProto::has_time_since_last_wakeup_ms() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_time_since_last_wakeup_ms() {
  time_since_last_wakeup_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::time_since_last_wakeup_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.time_since_last_wakeup_ms)
  return time_since_last_wakeup_ms_;
}
inline void AlarmManagerServiceDumpProto::set_time_since_last_wakeup_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00008000u;
  time_since_last_wakeup_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.time_since_last_wakeup_ms)
}

// optional int64 time_since_last_wakeup_set_ms = 15;
inline bool AlarmManagerServiceDumpProto::has_time_since_last_wakeup_set_ms() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_time_since_last_wakeup_set_ms() {
  time_since_last_wakeup_set_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::time_since_last_wakeup_set_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.time_since_last_wakeup_set_ms)
  return time_since_last_wakeup_set_ms_;
}
inline void AlarmManagerServiceDumpProto::set_time_since_last_wakeup_set_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00010000u;
  time_since_last_wakeup_set_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.time_since_last_wakeup_set_ms)
}

// optional int64 time_change_event_count = 16;
inline bool AlarmManagerServiceDumpProto::has_time_change_event_count() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_time_change_event_count() {
  time_change_event_count_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::time_change_event_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.time_change_event_count)
  return time_change_event_count_;
}
inline void AlarmManagerServiceDumpProto::set_time_change_event_count(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00020000u;
  time_change_event_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.time_change_event_count)
}

// repeated int32 device_idle_user_exempt_app_ids = 17;
inline int AlarmManagerServiceDumpProto::device_idle_user_exempt_app_ids_size() const {
  return device_idle_user_exempt_app_ids_.size();
}
inline void AlarmManagerServiceDumpProto::clear_device_idle_user_exempt_app_ids() {
  device_idle_user_exempt_app_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AlarmManagerServiceDumpProto::device_idle_user_exempt_app_ids(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.device_idle_user_exempt_app_ids)
  return device_idle_user_exempt_app_ids_.Get(index);
}
inline void AlarmManagerServiceDumpProto::set_device_idle_user_exempt_app_ids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  device_idle_user_exempt_app_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.device_idle_user_exempt_app_ids)
}
inline void AlarmManagerServiceDumpProto::add_device_idle_user_exempt_app_ids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  device_idle_user_exempt_app_ids_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.device_idle_user_exempt_app_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AlarmManagerServiceDumpProto::device_idle_user_exempt_app_ids() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.device_idle_user_exempt_app_ids)
  return device_idle_user_exempt_app_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AlarmManagerServiceDumpProto::mutable_device_idle_user_exempt_app_ids() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.device_idle_user_exempt_app_ids)
  return &device_idle_user_exempt_app_ids_;
}

// repeated .com.android.server.alarm.AlarmClockMetadataProto next_alarm_clock_metadata = 18;
inline int AlarmManagerServiceDumpProto::next_alarm_clock_metadata_size() const {
  return next_alarm_clock_metadata_.size();
}
inline void AlarmManagerServiceDumpProto::clear_next_alarm_clock_metadata() {
  next_alarm_clock_metadata_.Clear();
}
inline ::com::android::server::alarm::AlarmClockMetadataProto* AlarmManagerServiceDumpProto::mutable_next_alarm_clock_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.next_alarm_clock_metadata)
  return next_alarm_clock_metadata_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmClockMetadataProto >*
AlarmManagerServiceDumpProto::mutable_next_alarm_clock_metadata() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.next_alarm_clock_metadata)
  return &next_alarm_clock_metadata_;
}
inline const ::com::android::server::alarm::AlarmClockMetadataProto& AlarmManagerServiceDumpProto::next_alarm_clock_metadata(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.next_alarm_clock_metadata)
  return next_alarm_clock_metadata_.Get(index);
}
inline ::com::android::server::alarm::AlarmClockMetadataProto* AlarmManagerServiceDumpProto::add_next_alarm_clock_metadata() {
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.next_alarm_clock_metadata)
  return next_alarm_clock_metadata_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmClockMetadataProto >&
AlarmManagerServiceDumpProto::next_alarm_clock_metadata() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.next_alarm_clock_metadata)
  return next_alarm_clock_metadata_;
}

// repeated .com.android.server.alarm.BatchProto pending_alarm_batches = 19;
inline int AlarmManagerServiceDumpProto::pending_alarm_batches_size() const {
  return pending_alarm_batches_.size();
}
inline void AlarmManagerServiceDumpProto::clear_pending_alarm_batches() {
  pending_alarm_batches_.Clear();
}
inline ::com::android::server::alarm::BatchProto* AlarmManagerServiceDumpProto::mutable_pending_alarm_batches(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_alarm_batches)
  return pending_alarm_batches_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::BatchProto >*
AlarmManagerServiceDumpProto::mutable_pending_alarm_batches() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_alarm_batches)
  return &pending_alarm_batches_;
}
inline const ::com::android::server::alarm::BatchProto& AlarmManagerServiceDumpProto::pending_alarm_batches(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_alarm_batches)
  return pending_alarm_batches_.Get(index);
}
inline ::com::android::server::alarm::BatchProto* AlarmManagerServiceDumpProto::add_pending_alarm_batches() {
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_alarm_batches)
  return pending_alarm_batches_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::BatchProto >&
AlarmManagerServiceDumpProto::pending_alarm_batches() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_alarm_batches)
  return pending_alarm_batches_;
}

// repeated .com.android.server.alarm.AlarmProto pending_user_blocked_background_alarms = 20;
inline int AlarmManagerServiceDumpProto::pending_user_blocked_background_alarms_size() const {
  return pending_user_blocked_background_alarms_.size();
}
inline void AlarmManagerServiceDumpProto::clear_pending_user_blocked_background_alarms() {
  pending_user_blocked_background_alarms_.Clear();
}
inline ::com::android::server::alarm::AlarmProto* AlarmManagerServiceDumpProto::mutable_pending_user_blocked_background_alarms(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_user_blocked_background_alarms)
  return pending_user_blocked_background_alarms_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >*
AlarmManagerServiceDumpProto::mutable_pending_user_blocked_background_alarms() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_user_blocked_background_alarms)
  return &pending_user_blocked_background_alarms_;
}
inline const ::com::android::server::alarm::AlarmProto& AlarmManagerServiceDumpProto::pending_user_blocked_background_alarms(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_user_blocked_background_alarms)
  return pending_user_blocked_background_alarms_.Get(index);
}
inline ::com::android::server::alarm::AlarmProto* AlarmManagerServiceDumpProto::add_pending_user_blocked_background_alarms() {
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_user_blocked_background_alarms)
  return pending_user_blocked_background_alarms_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >&
AlarmManagerServiceDumpProto::pending_user_blocked_background_alarms() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_user_blocked_background_alarms)
  return pending_user_blocked_background_alarms_;
}

// optional .com.android.server.alarm.AlarmProto pending_idle_until = 21;
inline bool AlarmManagerServiceDumpProto::has_pending_idle_until() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_pending_idle_until() {
  if (pending_idle_until_ != nullptr) pending_idle_until_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::com::android::server::alarm::AlarmProto& AlarmManagerServiceDumpProto::pending_idle_until() const {
  const ::com::android::server::alarm::AlarmProto* p = pending_idle_until_;
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_idle_until)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::alarm::AlarmProto*>(
      &::com::android::server::alarm::_AlarmProto_default_instance_);
}
inline ::com::android::server::alarm::AlarmProto* AlarmManagerServiceDumpProto::release_pending_idle_until() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_idle_until)
  _has_bits_[0] &= ~0x00000004u;
  ::com::android::server::alarm::AlarmProto* temp = pending_idle_until_;
  pending_idle_until_ = nullptr;
  return temp;
}
inline ::com::android::server::alarm::AlarmProto* AlarmManagerServiceDumpProto::mutable_pending_idle_until() {
  _has_bits_[0] |= 0x00000004u;
  if (pending_idle_until_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::alarm::AlarmProto>(GetArenaNoVirtual());
    pending_idle_until_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_idle_until)
  return pending_idle_until_;
}
inline void AlarmManagerServiceDumpProto::set_allocated_pending_idle_until(::com::android::server::alarm::AlarmProto* pending_idle_until) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pending_idle_until_;
  }
  if (pending_idle_until) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pending_idle_until = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pending_idle_until, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  pending_idle_until_ = pending_idle_until;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_idle_until)
}

// repeated .com.android.server.alarm.AlarmProto pending_while_idle_alarms = 22;
inline int AlarmManagerServiceDumpProto::pending_while_idle_alarms_size() const {
  return pending_while_idle_alarms_.size();
}
inline void AlarmManagerServiceDumpProto::clear_pending_while_idle_alarms() {
  pending_while_idle_alarms_.Clear();
}
inline ::com::android::server::alarm::AlarmProto* AlarmManagerServiceDumpProto::mutable_pending_while_idle_alarms(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_while_idle_alarms)
  return pending_while_idle_alarms_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >*
AlarmManagerServiceDumpProto::mutable_pending_while_idle_alarms() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_while_idle_alarms)
  return &pending_while_idle_alarms_;
}
inline const ::com::android::server::alarm::AlarmProto& AlarmManagerServiceDumpProto::pending_while_idle_alarms(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_while_idle_alarms)
  return pending_while_idle_alarms_.Get(index);
}
inline ::com::android::server::alarm::AlarmProto* AlarmManagerServiceDumpProto::add_pending_while_idle_alarms() {
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_while_idle_alarms)
  return pending_while_idle_alarms_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >&
AlarmManagerServiceDumpProto::pending_while_idle_alarms() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_while_idle_alarms)
  return pending_while_idle_alarms_;
}

// optional .com.android.server.alarm.AlarmProto next_wake_from_idle = 23;
inline bool AlarmManagerServiceDumpProto::has_next_wake_from_idle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_next_wake_from_idle() {
  if (next_wake_from_idle_ != nullptr) next_wake_from_idle_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::com::android::server::alarm::AlarmProto& AlarmManagerServiceDumpProto::next_wake_from_idle() const {
  const ::com::android::server::alarm::AlarmProto* p = next_wake_from_idle_;
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.next_wake_from_idle)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::alarm::AlarmProto*>(
      &::com::android::server::alarm::_AlarmProto_default_instance_);
}
inline ::com::android::server::alarm::AlarmProto* AlarmManagerServiceDumpProto::release_next_wake_from_idle() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.AlarmManagerServiceDumpProto.next_wake_from_idle)
  _has_bits_[0] &= ~0x00000008u;
  ::com::android::server::alarm::AlarmProto* temp = next_wake_from_idle_;
  next_wake_from_idle_ = nullptr;
  return temp;
}
inline ::com::android::server::alarm::AlarmProto* AlarmManagerServiceDumpProto::mutable_next_wake_from_idle() {
  _has_bits_[0] |= 0x00000008u;
  if (next_wake_from_idle_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::alarm::AlarmProto>(GetArenaNoVirtual());
    next_wake_from_idle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.next_wake_from_idle)
  return next_wake_from_idle_;
}
inline void AlarmManagerServiceDumpProto::set_allocated_next_wake_from_idle(::com::android::server::alarm::AlarmProto* next_wake_from_idle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete next_wake_from_idle_;
  }
  if (next_wake_from_idle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      next_wake_from_idle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, next_wake_from_idle, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  next_wake_from_idle_ = next_wake_from_idle;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.AlarmManagerServiceDumpProto.next_wake_from_idle)
}

// repeated .com.android.server.alarm.AlarmProto past_due_non_wakeup_alarms = 24;
inline int AlarmManagerServiceDumpProto::past_due_non_wakeup_alarms_size() const {
  return past_due_non_wakeup_alarms_.size();
}
inline void AlarmManagerServiceDumpProto::clear_past_due_non_wakeup_alarms() {
  past_due_non_wakeup_alarms_.Clear();
}
inline ::com::android::server::alarm::AlarmProto* AlarmManagerServiceDumpProto::mutable_past_due_non_wakeup_alarms(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.past_due_non_wakeup_alarms)
  return past_due_non_wakeup_alarms_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >*
AlarmManagerServiceDumpProto::mutable_past_due_non_wakeup_alarms() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.past_due_non_wakeup_alarms)
  return &past_due_non_wakeup_alarms_;
}
inline const ::com::android::server::alarm::AlarmProto& AlarmManagerServiceDumpProto::past_due_non_wakeup_alarms(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.past_due_non_wakeup_alarms)
  return past_due_non_wakeup_alarms_.Get(index);
}
inline ::com::android::server::alarm::AlarmProto* AlarmManagerServiceDumpProto::add_past_due_non_wakeup_alarms() {
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.past_due_non_wakeup_alarms)
  return past_due_non_wakeup_alarms_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >&
AlarmManagerServiceDumpProto::past_due_non_wakeup_alarms() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.past_due_non_wakeup_alarms)
  return past_due_non_wakeup_alarms_;
}

// optional int32 delayed_alarm_count = 25;
inline bool AlarmManagerServiceDumpProto::has_delayed_alarm_count() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_delayed_alarm_count() {
  delayed_alarm_count_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AlarmManagerServiceDumpProto::delayed_alarm_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.delayed_alarm_count)
  return delayed_alarm_count_;
}
inline void AlarmManagerServiceDumpProto::set_delayed_alarm_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00080000u;
  delayed_alarm_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.delayed_alarm_count)
}

// optional int64 total_delay_time_ms = 26;
inline bool AlarmManagerServiceDumpProto::has_total_delay_time_ms() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_total_delay_time_ms() {
  total_delay_time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::total_delay_time_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.total_delay_time_ms)
  return total_delay_time_ms_;
}
inline void AlarmManagerServiceDumpProto::set_total_delay_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00100000u;
  total_delay_time_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.total_delay_time_ms)
}

// optional int64 max_delay_duration_ms = 27;
inline bool AlarmManagerServiceDumpProto::has_max_delay_duration_ms() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_max_delay_duration_ms() {
  max_delay_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::max_delay_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.max_delay_duration_ms)
  return max_delay_duration_ms_;
}
inline void AlarmManagerServiceDumpProto::set_max_delay_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00200000u;
  max_delay_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.max_delay_duration_ms)
}

// optional int64 max_non_interactive_duration_ms = 28;
inline bool AlarmManagerServiceDumpProto::has_max_non_interactive_duration_ms() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_max_non_interactive_duration_ms() {
  max_non_interactive_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmManagerServiceDumpProto::max_non_interactive_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.max_non_interactive_duration_ms)
  return max_non_interactive_duration_ms_;
}
inline void AlarmManagerServiceDumpProto::set_max_non_interactive_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00400000u;
  max_non_interactive_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.max_non_interactive_duration_ms)
}

// optional int32 broadcast_ref_count = 29;
inline bool AlarmManagerServiceDumpProto::has_broadcast_ref_count() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_broadcast_ref_count() {
  broadcast_ref_count_ = 0;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AlarmManagerServiceDumpProto::broadcast_ref_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.broadcast_ref_count)
  return broadcast_ref_count_;
}
inline void AlarmManagerServiceDumpProto::set_broadcast_ref_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00800000u;
  broadcast_ref_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.broadcast_ref_count)
}

// optional int32 pending_intent_send_count = 30;
inline bool AlarmManagerServiceDumpProto::has_pending_intent_send_count() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_pending_intent_send_count() {
  pending_intent_send_count_ = 0;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AlarmManagerServiceDumpProto::pending_intent_send_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_intent_send_count)
  return pending_intent_send_count_;
}
inline void AlarmManagerServiceDumpProto::set_pending_intent_send_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x01000000u;
  pending_intent_send_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_intent_send_count)
}

// optional int32 pending_intent_finish_count = 31;
inline bool AlarmManagerServiceDumpProto::has_pending_intent_finish_count() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_pending_intent_finish_count() {
  pending_intent_finish_count_ = 0;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AlarmManagerServiceDumpProto::pending_intent_finish_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_intent_finish_count)
  return pending_intent_finish_count_;
}
inline void AlarmManagerServiceDumpProto::set_pending_intent_finish_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x02000000u;
  pending_intent_finish_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_intent_finish_count)
}

// optional int32 listener_send_count = 32;
inline bool AlarmManagerServiceDumpProto::has_listener_send_count() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_listener_send_count() {
  listener_send_count_ = 0;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AlarmManagerServiceDumpProto::listener_send_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.listener_send_count)
  return listener_send_count_;
}
inline void AlarmManagerServiceDumpProto::set_listener_send_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x04000000u;
  listener_send_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.listener_send_count)
}

// optional int32 listener_finish_count = 33;
inline bool AlarmManagerServiceDumpProto::has_listener_finish_count() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void AlarmManagerServiceDumpProto::clear_listener_finish_count() {
  listener_finish_count_ = 0;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AlarmManagerServiceDumpProto::listener_finish_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.listener_finish_count)
  return listener_finish_count_;
}
inline void AlarmManagerServiceDumpProto::set_listener_finish_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x08000000u;
  listener_finish_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.listener_finish_count)
}

// repeated .com.android.server.alarm.InFlightProto outstanding_deliveries = 34;
inline int AlarmManagerServiceDumpProto::outstanding_deliveries_size() const {
  return outstanding_deliveries_.size();
}
inline void AlarmManagerServiceDumpProto::clear_outstanding_deliveries() {
  outstanding_deliveries_.Clear();
}
inline ::com::android::server::alarm::InFlightProto* AlarmManagerServiceDumpProto::mutable_outstanding_deliveries(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.outstanding_deliveries)
  return outstanding_deliveries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::InFlightProto >*
AlarmManagerServiceDumpProto::mutable_outstanding_deliveries() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.outstanding_deliveries)
  return &outstanding_deliveries_;
}
inline const ::com::android::server::alarm::InFlightProto& AlarmManagerServiceDumpProto::outstanding_deliveries(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.outstanding_deliveries)
  return outstanding_deliveries_.Get(index);
}
inline ::com::android::server::alarm::InFlightProto* AlarmManagerServiceDumpProto::add_outstanding_deliveries() {
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.outstanding_deliveries)
  return outstanding_deliveries_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::InFlightProto >&
AlarmManagerServiceDumpProto::outstanding_deliveries() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.outstanding_deliveries)
  return outstanding_deliveries_;
}

// repeated int32 use_allow_while_idle_short_time = 35;
inline int AlarmManagerServiceDumpProto::use_allow_while_idle_short_time_size() const {
  return use_allow_while_idle_short_time_.size();
}
inline void AlarmManagerServiceDumpProto::clear_use_allow_while_idle_short_time() {
  use_allow_while_idle_short_time_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AlarmManagerServiceDumpProto::use_allow_while_idle_short_time(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.use_allow_while_idle_short_time)
  return use_allow_while_idle_short_time_.Get(index);
}
inline void AlarmManagerServiceDumpProto::set_use_allow_while_idle_short_time(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  use_allow_while_idle_short_time_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmManagerServiceDumpProto.use_allow_while_idle_short_time)
}
inline void AlarmManagerServiceDumpProto::add_use_allow_while_idle_short_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  use_allow_while_idle_short_time_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.use_allow_while_idle_short_time)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AlarmManagerServiceDumpProto::use_allow_while_idle_short_time() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.use_allow_while_idle_short_time)
  return use_allow_while_idle_short_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AlarmManagerServiceDumpProto::mutable_use_allow_while_idle_short_time() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.use_allow_while_idle_short_time)
  return &use_allow_while_idle_short_time_;
}

// repeated .com.android.server.alarm.AlarmManagerServiceDumpProto.LastAllowWhileIdleDispatch last_allow_while_idle_dispatch_times = 36;
inline int AlarmManagerServiceDumpProto::last_allow_while_idle_dispatch_times_size() const {
  return last_allow_while_idle_dispatch_times_.size();
}
inline void AlarmManagerServiceDumpProto::clear_last_allow_while_idle_dispatch_times() {
  last_allow_while_idle_dispatch_times_.Clear();
}
inline ::com::android::server::alarm::AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch* AlarmManagerServiceDumpProto::mutable_last_allow_while_idle_dispatch_times(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.last_allow_while_idle_dispatch_times)
  return last_allow_while_idle_dispatch_times_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch >*
AlarmManagerServiceDumpProto::mutable_last_allow_while_idle_dispatch_times() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.last_allow_while_idle_dispatch_times)
  return &last_allow_while_idle_dispatch_times_;
}
inline const ::com::android::server::alarm::AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch& AlarmManagerServiceDumpProto::last_allow_while_idle_dispatch_times(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.last_allow_while_idle_dispatch_times)
  return last_allow_while_idle_dispatch_times_.Get(index);
}
inline ::com::android::server::alarm::AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch* AlarmManagerServiceDumpProto::add_last_allow_while_idle_dispatch_times() {
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.last_allow_while_idle_dispatch_times)
  return last_allow_while_idle_dispatch_times_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_LastAllowWhileIdleDispatch >&
AlarmManagerServiceDumpProto::last_allow_while_idle_dispatch_times() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.last_allow_while_idle_dispatch_times)
  return last_allow_while_idle_dispatch_times_;
}

// optional .com.android.internal.util.LocalLogProto recent_problems = 37;
inline bool AlarmManagerServiceDumpProto::has_recent_problems() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline const ::com::android::internal::util::LocalLogProto& AlarmManagerServiceDumpProto::recent_problems() const {
  const ::com::android::internal::util::LocalLogProto* p = recent_problems_;
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.recent_problems)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::internal::util::LocalLogProto*>(
      &::com::android::internal::util::_LocalLogProto_default_instance_);
}
inline ::com::android::internal::util::LocalLogProto* AlarmManagerServiceDumpProto::release_recent_problems() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.AlarmManagerServiceDumpProto.recent_problems)
  _has_bits_[0] &= ~0x00000010u;
  ::com::android::internal::util::LocalLogProto* temp = recent_problems_;
  recent_problems_ = nullptr;
  return temp;
}
inline ::com::android::internal::util::LocalLogProto* AlarmManagerServiceDumpProto::mutable_recent_problems() {
  _has_bits_[0] |= 0x00000010u;
  if (recent_problems_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::internal::util::LocalLogProto>(GetArenaNoVirtual());
    recent_problems_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.recent_problems)
  return recent_problems_;
}
inline void AlarmManagerServiceDumpProto::set_allocated_recent_problems(::com::android::internal::util::LocalLogProto* recent_problems) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(recent_problems_);
  }
  if (recent_problems) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      recent_problems = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, recent_problems, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  recent_problems_ = recent_problems;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.AlarmManagerServiceDumpProto.recent_problems)
}

// repeated .com.android.server.alarm.AlarmManagerServiceDumpProto.TopAlarm top_alarms = 38;
inline int AlarmManagerServiceDumpProto::top_alarms_size() const {
  return top_alarms_.size();
}
inline void AlarmManagerServiceDumpProto::clear_top_alarms() {
  top_alarms_.Clear();
}
inline ::com::android::server::alarm::AlarmManagerServiceDumpProto_TopAlarm* AlarmManagerServiceDumpProto::mutable_top_alarms(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.top_alarms)
  return top_alarms_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_TopAlarm >*
AlarmManagerServiceDumpProto::mutable_top_alarms() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.top_alarms)
  return &top_alarms_;
}
inline const ::com::android::server::alarm::AlarmManagerServiceDumpProto_TopAlarm& AlarmManagerServiceDumpProto::top_alarms(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.top_alarms)
  return top_alarms_.Get(index);
}
inline ::com::android::server::alarm::AlarmManagerServiceDumpProto_TopAlarm* AlarmManagerServiceDumpProto::add_top_alarms() {
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.top_alarms)
  return top_alarms_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_TopAlarm >&
AlarmManagerServiceDumpProto::top_alarms() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.top_alarms)
  return top_alarms_;
}

// repeated .com.android.server.alarm.AlarmManagerServiceDumpProto.AlarmStat alarm_stats = 39;
inline int AlarmManagerServiceDumpProto::alarm_stats_size() const {
  return alarm_stats_.size();
}
inline void AlarmManagerServiceDumpProto::clear_alarm_stats() {
  alarm_stats_.Clear();
}
inline ::com::android::server::alarm::AlarmManagerServiceDumpProto_AlarmStat* AlarmManagerServiceDumpProto::mutable_alarm_stats(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.alarm_stats)
  return alarm_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_AlarmStat >*
AlarmManagerServiceDumpProto::mutable_alarm_stats() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.alarm_stats)
  return &alarm_stats_;
}
inline const ::com::android::server::alarm::AlarmManagerServiceDumpProto_AlarmStat& AlarmManagerServiceDumpProto::alarm_stats(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.alarm_stats)
  return alarm_stats_.Get(index);
}
inline ::com::android::server::alarm::AlarmManagerServiceDumpProto_AlarmStat* AlarmManagerServiceDumpProto::add_alarm_stats() {
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.alarm_stats)
  return alarm_stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmManagerServiceDumpProto_AlarmStat >&
AlarmManagerServiceDumpProto::alarm_stats() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.alarm_stats)
  return alarm_stats_;
}

// repeated .com.android.server.alarm.IdleDispatchEntryProto allow_while_idle_dispatches = 40;
inline int AlarmManagerServiceDumpProto::allow_while_idle_dispatches_size() const {
  return allow_while_idle_dispatches_.size();
}
inline void AlarmManagerServiceDumpProto::clear_allow_while_idle_dispatches() {
  allow_while_idle_dispatches_.Clear();
}
inline ::com::android::server::alarm::IdleDispatchEntryProto* AlarmManagerServiceDumpProto::mutable_allow_while_idle_dispatches(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.allow_while_idle_dispatches)
  return allow_while_idle_dispatches_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::IdleDispatchEntryProto >*
AlarmManagerServiceDumpProto::mutable_allow_while_idle_dispatches() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.allow_while_idle_dispatches)
  return &allow_while_idle_dispatches_;
}
inline const ::com::android::server::alarm::IdleDispatchEntryProto& AlarmManagerServiceDumpProto::allow_while_idle_dispatches(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.allow_while_idle_dispatches)
  return allow_while_idle_dispatches_.Get(index);
}
inline ::com::android::server::alarm::IdleDispatchEntryProto* AlarmManagerServiceDumpProto::add_allow_while_idle_dispatches() {
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.allow_while_idle_dispatches)
  return allow_while_idle_dispatches_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::IdleDispatchEntryProto >&
AlarmManagerServiceDumpProto::allow_while_idle_dispatches() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.allow_while_idle_dispatches)
  return allow_while_idle_dispatches_;
}

// repeated .com.android.server.alarm.WakeupEventProto recent_wakeup_history = 41;
inline int AlarmManagerServiceDumpProto::recent_wakeup_history_size() const {
  return recent_wakeup_history_.size();
}
inline void AlarmManagerServiceDumpProto::clear_recent_wakeup_history() {
  recent_wakeup_history_.Clear();
}
inline ::com::android::server::alarm::WakeupEventProto* AlarmManagerServiceDumpProto::mutable_recent_wakeup_history(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.recent_wakeup_history)
  return recent_wakeup_history_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::WakeupEventProto >*
AlarmManagerServiceDumpProto::mutable_recent_wakeup_history() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.recent_wakeup_history)
  return &recent_wakeup_history_;
}
inline const ::com::android::server::alarm::WakeupEventProto& AlarmManagerServiceDumpProto::recent_wakeup_history(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.recent_wakeup_history)
  return recent_wakeup_history_.Get(index);
}
inline ::com::android::server::alarm::WakeupEventProto* AlarmManagerServiceDumpProto::add_recent_wakeup_history() {
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.recent_wakeup_history)
  return recent_wakeup_history_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::WakeupEventProto >&
AlarmManagerServiceDumpProto::recent_wakeup_history() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.recent_wakeup_history)
  return recent_wakeup_history_;
}

// repeated .com.android.server.alarm.AlarmProto pending_alarms = 42;
inline int AlarmManagerServiceDumpProto::pending_alarms_size() const {
  return pending_alarms_.size();
}
inline void AlarmManagerServiceDumpProto::clear_pending_alarms() {
  pending_alarms_.Clear();
}
inline ::com::android::server::alarm::AlarmProto* AlarmManagerServiceDumpProto::mutable_pending_alarms(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_alarms)
  return pending_alarms_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >*
AlarmManagerServiceDumpProto::mutable_pending_alarms() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_alarms)
  return &pending_alarms_;
}
inline const ::com::android::server::alarm::AlarmProto& AlarmManagerServiceDumpProto::pending_alarms(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_alarms)
  return pending_alarms_.Get(index);
}
inline ::com::android::server::alarm::AlarmProto* AlarmManagerServiceDumpProto::add_pending_alarms() {
  // @@protoc_insertion_point(field_add:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_alarms)
  return pending_alarms_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >&
AlarmManagerServiceDumpProto::pending_alarms() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.AlarmManagerServiceDumpProto.pending_alarms)
  return pending_alarms_;
}

// -------------------------------------------------------------------

// AlarmClockMetadataProto

// optional int32 user = 1;
inline bool AlarmClockMetadataProto::has_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmClockMetadataProto::clear_user() {
  user_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AlarmClockMetadataProto::user() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmClockMetadataProto.user)
  return user_;
}
inline void AlarmClockMetadataProto::set_user(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  user_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmClockMetadataProto.user)
}

// optional bool is_pending_send = 2;
inline bool AlarmClockMetadataProto::has_is_pending_send() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmClockMetadataProto::clear_is_pending_send() {
  is_pending_send_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool AlarmClockMetadataProto::is_pending_send() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmClockMetadataProto.is_pending_send)
  return is_pending_send_;
}
inline void AlarmClockMetadataProto::set_is_pending_send(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_pending_send_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmClockMetadataProto.is_pending_send)
}

// optional int64 trigger_time_ms = 3;
inline bool AlarmClockMetadataProto::has_trigger_time_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlarmClockMetadataProto::clear_trigger_time_ms() {
  trigger_time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmClockMetadataProto::trigger_time_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmClockMetadataProto.trigger_time_ms)
  return trigger_time_ms_;
}
inline void AlarmClockMetadataProto::set_trigger_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  trigger_time_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmClockMetadataProto.trigger_time_ms)
}

// -------------------------------------------------------------------

// AlarmProto

// optional string tag = 1 [(.android.privacy) = {
inline bool AlarmProto::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlarmProto::clear_tag() {
  tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AlarmProto::tag() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmProto.tag)
  return tag_.GetNoArena();
}
inline void AlarmProto::set_tag(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmProto.tag)
}
inline void AlarmProto::set_tag(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.alarm.AlarmProto.tag)
}
inline void AlarmProto::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.alarm.AlarmProto.tag)
}
inline void AlarmProto::set_tag(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.alarm.AlarmProto.tag)
}
inline std::string* AlarmProto::mutable_tag() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmProto.tag)
  return tag_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AlarmProto::release_tag() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.AlarmProto.tag)
  if (!has_tag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return tag_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmProto::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tag_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.AlarmProto.tag)
}

// optional .android.app.AlarmManagerProto.AlarmType type = 2;
inline bool AlarmProto::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AlarmProto::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::android::app::AlarmManagerProto_AlarmType AlarmProto::type() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmProto.type)
  return static_cast< ::android::app::AlarmManagerProto_AlarmType >(type_);
}
inline void AlarmProto::set_type(::android::app::AlarmManagerProto_AlarmType value) {
  assert(::android::app::AlarmManagerProto_AlarmType_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  type_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmProto.type)
}

// optional int64 time_until_when_elapsed_ms = 3;
inline bool AlarmProto::has_time_until_when_elapsed_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlarmProto::clear_time_until_when_elapsed_ms() {
  time_until_when_elapsed_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmProto::time_until_when_elapsed_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmProto.time_until_when_elapsed_ms)
  return time_until_when_elapsed_ms_;
}
inline void AlarmProto::set_time_until_when_elapsed_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  time_until_when_elapsed_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmProto.time_until_when_elapsed_ms)
}

// optional int64 window_length_ms = 4;
inline bool AlarmProto::has_window_length_ms() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AlarmProto::clear_window_length_ms() {
  window_length_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmProto::window_length_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmProto.window_length_ms)
  return window_length_ms_;
}
inline void AlarmProto::set_window_length_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  window_length_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmProto.window_length_ms)
}

// optional int64 repeat_interval_ms = 5;
inline bool AlarmProto::has_repeat_interval_ms() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AlarmProto::clear_repeat_interval_ms() {
  repeat_interval_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AlarmProto::repeat_interval_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmProto.repeat_interval_ms)
  return repeat_interval_ms_;
}
inline void AlarmProto::set_repeat_interval_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  repeat_interval_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmProto.repeat_interval_ms)
}

// optional int32 count = 6;
inline bool AlarmProto::has_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AlarmProto::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AlarmProto::count() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmProto.count)
  return count_;
}
inline void AlarmProto::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmProto.count)
}

// optional int32 flags = 7;
inline bool AlarmProto::has_flags() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AlarmProto::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AlarmProto::flags() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmProto.flags)
  return flags_;
}
inline void AlarmProto::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmProto.flags)
}

// optional .android.app.AlarmClockInfoProto alarm_clock = 8;
inline bool AlarmProto::has_alarm_clock() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline const ::android::app::AlarmClockInfoProto& AlarmProto::alarm_clock() const {
  const ::android::app::AlarmClockInfoProto* p = alarm_clock_;
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmProto.alarm_clock)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::app::AlarmClockInfoProto*>(
      &::android::app::_AlarmClockInfoProto_default_instance_);
}
inline ::android::app::AlarmClockInfoProto* AlarmProto::release_alarm_clock() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.AlarmProto.alarm_clock)
  _has_bits_[0] &= ~0x00000004u;
  ::android::app::AlarmClockInfoProto* temp = alarm_clock_;
  alarm_clock_ = nullptr;
  return temp;
}
inline ::android::app::AlarmClockInfoProto* AlarmProto::mutable_alarm_clock() {
  _has_bits_[0] |= 0x00000004u;
  if (alarm_clock_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::app::AlarmClockInfoProto>(GetArenaNoVirtual());
    alarm_clock_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmProto.alarm_clock)
  return alarm_clock_;
}
inline void AlarmProto::set_allocated_alarm_clock(::android::app::AlarmClockInfoProto* alarm_clock) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(alarm_clock_);
  }
  if (alarm_clock) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      alarm_clock = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, alarm_clock, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  alarm_clock_ = alarm_clock;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.AlarmProto.alarm_clock)
}

// optional .android.app.PendingIntentProto operation = 9;
inline bool AlarmProto::has_operation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline const ::android::app::PendingIntentProto& AlarmProto::operation() const {
  const ::android::app::PendingIntentProto* p = operation_;
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmProto.operation)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::app::PendingIntentProto*>(
      &::android::app::_PendingIntentProto_default_instance_);
}
inline ::android::app::PendingIntentProto* AlarmProto::release_operation() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.AlarmProto.operation)
  _has_bits_[0] &= ~0x00000008u;
  ::android::app::PendingIntentProto* temp = operation_;
  operation_ = nullptr;
  return temp;
}
inline ::android::app::PendingIntentProto* AlarmProto::mutable_operation() {
  _has_bits_[0] |= 0x00000008u;
  if (operation_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::app::PendingIntentProto>(GetArenaNoVirtual());
    operation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmProto.operation)
  return operation_;
}
inline void AlarmProto::set_allocated_operation(::android::app::PendingIntentProto* operation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(operation_);
  }
  if (operation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      operation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, operation, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  operation_ = operation;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.AlarmProto.operation)
}

// optional string listener = 10 [(.android.privacy) = {
inline bool AlarmProto::has_listener() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlarmProto::clear_listener() {
  listener_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& AlarmProto::listener() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.AlarmProto.listener)
  return listener_.GetNoArena();
}
inline void AlarmProto::set_listener(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  listener_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.alarm.AlarmProto.listener)
}
inline void AlarmProto::set_listener(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  listener_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.alarm.AlarmProto.listener)
}
inline void AlarmProto::set_listener(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  listener_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.alarm.AlarmProto.listener)
}
inline void AlarmProto::set_listener(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  listener_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.alarm.AlarmProto.listener)
}
inline std::string* AlarmProto::mutable_listener() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.AlarmProto.listener)
  return listener_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AlarmProto::release_listener() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.AlarmProto.listener)
  if (!has_listener()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return listener_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmProto::set_allocated_listener(std::string* listener) {
  if (listener != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  listener_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), listener);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.AlarmProto.listener)
}

// -------------------------------------------------------------------

// BatchProto

// optional int64 start_realtime = 1;
inline bool BatchProto::has_start_realtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchProto::clear_start_realtime() {
  start_realtime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 BatchProto::start_realtime() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.BatchProto.start_realtime)
  return start_realtime_;
}
inline void BatchProto::set_start_realtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  start_realtime_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.BatchProto.start_realtime)
}

// optional int64 end_realtime = 2;
inline bool BatchProto::has_end_realtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchProto::clear_end_realtime() {
  end_realtime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 BatchProto::end_realtime() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.BatchProto.end_realtime)
  return end_realtime_;
}
inline void BatchProto::set_end_realtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  end_realtime_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.BatchProto.end_realtime)
}

// optional int32 flags = 3;
inline bool BatchProto::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchProto::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BatchProto::flags() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.BatchProto.flags)
  return flags_;
}
inline void BatchProto::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.BatchProto.flags)
}

// repeated .com.android.server.alarm.AlarmProto alarms = 4;
inline int BatchProto::alarms_size() const {
  return alarms_.size();
}
inline void BatchProto::clear_alarms() {
  alarms_.Clear();
}
inline ::com::android::server::alarm::AlarmProto* BatchProto::mutable_alarms(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.BatchProto.alarms)
  return alarms_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >*
BatchProto::mutable_alarms() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.alarm.BatchProto.alarms)
  return &alarms_;
}
inline const ::com::android::server::alarm::AlarmProto& BatchProto::alarms(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.BatchProto.alarms)
  return alarms_.Get(index);
}
inline ::com::android::server::alarm::AlarmProto* BatchProto::add_alarms() {
  // @@protoc_insertion_point(field_add:com.android.server.alarm.BatchProto.alarms)
  return alarms_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::alarm::AlarmProto >&
BatchProto::alarms() const {
  // @@protoc_insertion_point(field_list:com.android.server.alarm.BatchProto.alarms)
  return alarms_;
}

// -------------------------------------------------------------------

// BroadcastStatsProto

// optional int32 uid = 1;
inline bool BroadcastStatsProto::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastStatsProto::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BroadcastStatsProto::uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.BroadcastStatsProto.uid)
  return uid_;
}
inline void BroadcastStatsProto::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.BroadcastStatsProto.uid)
}

// optional string package_name = 2;
inline bool BroadcastStatsProto::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastStatsProto::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& BroadcastStatsProto::package_name() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.BroadcastStatsProto.package_name)
  return package_name_.GetNoArena();
}
inline void BroadcastStatsProto::set_package_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.alarm.BroadcastStatsProto.package_name)
}
inline void BroadcastStatsProto::set_package_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.alarm.BroadcastStatsProto.package_name)
}
inline void BroadcastStatsProto::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.alarm.BroadcastStatsProto.package_name)
}
inline void BroadcastStatsProto::set_package_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.alarm.BroadcastStatsProto.package_name)
}
inline std::string* BroadcastStatsProto::mutable_package_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.BroadcastStatsProto.package_name)
  return package_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* BroadcastStatsProto::release_package_name() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.BroadcastStatsProto.package_name)
  if (!has_package_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return package_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastStatsProto::set_allocated_package_name(std::string* package_name) {
  if (package_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  package_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.BroadcastStatsProto.package_name)
}

// optional int64 total_flight_duration_ms = 3;
inline bool BroadcastStatsProto::has_total_flight_duration_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BroadcastStatsProto::clear_total_flight_duration_ms() {
  total_flight_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 BroadcastStatsProto::total_flight_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.BroadcastStatsProto.total_flight_duration_ms)
  return total_flight_duration_ms_;
}
inline void BroadcastStatsProto::set_total_flight_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  total_flight_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.BroadcastStatsProto.total_flight_duration_ms)
}

// optional int32 count = 4;
inline bool BroadcastStatsProto::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BroadcastStatsProto::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BroadcastStatsProto::count() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.BroadcastStatsProto.count)
  return count_;
}
inline void BroadcastStatsProto::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.BroadcastStatsProto.count)
}

// optional int32 wakeup_count = 5;
inline bool BroadcastStatsProto::has_wakeup_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BroadcastStatsProto::clear_wakeup_count() {
  wakeup_count_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BroadcastStatsProto::wakeup_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.BroadcastStatsProto.wakeup_count)
  return wakeup_count_;
}
inline void BroadcastStatsProto::set_wakeup_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  wakeup_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.BroadcastStatsProto.wakeup_count)
}

// optional int64 start_time_realtime = 6;
inline bool BroadcastStatsProto::has_start_time_realtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BroadcastStatsProto::clear_start_time_realtime() {
  start_time_realtime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 BroadcastStatsProto::start_time_realtime() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.BroadcastStatsProto.start_time_realtime)
  return start_time_realtime_;
}
inline void BroadcastStatsProto::set_start_time_realtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  start_time_realtime_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.BroadcastStatsProto.start_time_realtime)
}

// optional int32 nesting = 7;
inline bool BroadcastStatsProto::has_nesting() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BroadcastStatsProto::clear_nesting() {
  nesting_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BroadcastStatsProto::nesting() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.BroadcastStatsProto.nesting)
  return nesting_;
}
inline void BroadcastStatsProto::set_nesting(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  nesting_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.BroadcastStatsProto.nesting)
}

// -------------------------------------------------------------------

// ConstantsProto

// optional int64 min_futurity_duration_ms = 1;
inline bool ConstantsProto::has_min_futurity_duration_ms() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConstantsProto::clear_min_futurity_duration_ms() {
  min_futurity_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto::min_futurity_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.ConstantsProto.min_futurity_duration_ms)
  return min_futurity_duration_ms_;
}
inline void ConstantsProto::set_min_futurity_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  min_futurity_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.ConstantsProto.min_futurity_duration_ms)
}

// optional int64 min_interval_duration_ms = 2;
inline bool ConstantsProto::has_min_interval_duration_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConstantsProto::clear_min_interval_duration_ms() {
  min_interval_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto::min_interval_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.ConstantsProto.min_interval_duration_ms)
  return min_interval_duration_ms_;
}
inline void ConstantsProto::set_min_interval_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  min_interval_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.ConstantsProto.min_interval_duration_ms)
}

// optional int64 listener_timeout_duration_ms = 3;
inline bool ConstantsProto::has_listener_timeout_duration_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConstantsProto::clear_listener_timeout_duration_ms() {
  listener_timeout_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto::listener_timeout_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.ConstantsProto.listener_timeout_duration_ms)
  return listener_timeout_duration_ms_;
}
inline void ConstantsProto::set_listener_timeout_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  listener_timeout_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.ConstantsProto.listener_timeout_duration_ms)
}

// optional int64 allow_while_idle_short_duration_ms = 4;
inline bool ConstantsProto::has_allow_while_idle_short_duration_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConstantsProto::clear_allow_while_idle_short_duration_ms() {
  allow_while_idle_short_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto::allow_while_idle_short_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.ConstantsProto.allow_while_idle_short_duration_ms)
  return allow_while_idle_short_duration_ms_;
}
inline void ConstantsProto::set_allow_while_idle_short_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  allow_while_idle_short_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.ConstantsProto.allow_while_idle_short_duration_ms)
}

// optional int64 allow_while_idle_long_duration_ms = 5;
inline bool ConstantsProto::has_allow_while_idle_long_duration_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConstantsProto::clear_allow_while_idle_long_duration_ms() {
  allow_while_idle_long_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto::allow_while_idle_long_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.ConstantsProto.allow_while_idle_long_duration_ms)
  return allow_while_idle_long_duration_ms_;
}
inline void ConstantsProto::set_allow_while_idle_long_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  allow_while_idle_long_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.ConstantsProto.allow_while_idle_long_duration_ms)
}

// optional int64 allow_while_idle_whitelist_duration_ms = 6;
inline bool ConstantsProto::has_allow_while_idle_whitelist_duration_ms() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConstantsProto::clear_allow_while_idle_whitelist_duration_ms() {
  allow_while_idle_whitelist_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto::allow_while_idle_whitelist_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.ConstantsProto.allow_while_idle_whitelist_duration_ms)
  return allow_while_idle_whitelist_duration_ms_;
}
inline void ConstantsProto::set_allow_while_idle_whitelist_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  allow_while_idle_whitelist_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.ConstantsProto.allow_while_idle_whitelist_duration_ms)
}

// optional int64 max_interval_duration_ms = 7;
inline bool ConstantsProto::has_max_interval_duration_ms() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConstantsProto::clear_max_interval_duration_ms() {
  max_interval_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto::max_interval_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.ConstantsProto.max_interval_duration_ms)
  return max_interval_duration_ms_;
}
inline void ConstantsProto::set_max_interval_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  max_interval_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.ConstantsProto.max_interval_duration_ms)
}

// -------------------------------------------------------------------

// FilterStatsProto

// optional string tag = 1 [(.android.privacy) = {
inline bool FilterStatsProto::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FilterStatsProto::clear_tag() {
  tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& FilterStatsProto::tag() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.FilterStatsProto.tag)
  return tag_.GetNoArena();
}
inline void FilterStatsProto::set_tag(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.alarm.FilterStatsProto.tag)
}
inline void FilterStatsProto::set_tag(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.alarm.FilterStatsProto.tag)
}
inline void FilterStatsProto::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.alarm.FilterStatsProto.tag)
}
inline void FilterStatsProto::set_tag(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.alarm.FilterStatsProto.tag)
}
inline std::string* FilterStatsProto::mutable_tag() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.FilterStatsProto.tag)
  return tag_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FilterStatsProto::release_tag() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.FilterStatsProto.tag)
  if (!has_tag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return tag_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FilterStatsProto::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tag_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.FilterStatsProto.tag)
}

// optional int64 last_flight_time_realtime = 2;
inline bool FilterStatsProto::has_last_flight_time_realtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FilterStatsProto::clear_last_flight_time_realtime() {
  last_flight_time_realtime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 FilterStatsProto::last_flight_time_realtime() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.FilterStatsProto.last_flight_time_realtime)
  return last_flight_time_realtime_;
}
inline void FilterStatsProto::set_last_flight_time_realtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  last_flight_time_realtime_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.FilterStatsProto.last_flight_time_realtime)
}

// optional int64 total_flight_duration_ms = 3;
inline bool FilterStatsProto::has_total_flight_duration_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FilterStatsProto::clear_total_flight_duration_ms() {
  total_flight_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 FilterStatsProto::total_flight_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.FilterStatsProto.total_flight_duration_ms)
  return total_flight_duration_ms_;
}
inline void FilterStatsProto::set_total_flight_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  total_flight_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.FilterStatsProto.total_flight_duration_ms)
}

// optional int32 count = 4;
inline bool FilterStatsProto::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FilterStatsProto::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FilterStatsProto::count() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.FilterStatsProto.count)
  return count_;
}
inline void FilterStatsProto::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.FilterStatsProto.count)
}

// optional int32 wakeup_count = 5;
inline bool FilterStatsProto::has_wakeup_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FilterStatsProto::clear_wakeup_count() {
  wakeup_count_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FilterStatsProto::wakeup_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.FilterStatsProto.wakeup_count)
  return wakeup_count_;
}
inline void FilterStatsProto::set_wakeup_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  wakeup_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.FilterStatsProto.wakeup_count)
}

// optional int64 start_time_realtime = 6;
inline bool FilterStatsProto::has_start_time_realtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FilterStatsProto::clear_start_time_realtime() {
  start_time_realtime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 FilterStatsProto::start_time_realtime() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.FilterStatsProto.start_time_realtime)
  return start_time_realtime_;
}
inline void FilterStatsProto::set_start_time_realtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  start_time_realtime_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.FilterStatsProto.start_time_realtime)
}

// optional int32 nesting = 7;
inline bool FilterStatsProto::has_nesting() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FilterStatsProto::clear_nesting() {
  nesting_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FilterStatsProto::nesting() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.FilterStatsProto.nesting)
  return nesting_;
}
inline void FilterStatsProto::set_nesting(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  nesting_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.FilterStatsProto.nesting)
}

// -------------------------------------------------------------------

// IdleDispatchEntryProto

// optional int32 uid = 1;
inline bool IdleDispatchEntryProto::has_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IdleDispatchEntryProto::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IdleDispatchEntryProto::uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.IdleDispatchEntryProto.uid)
  return uid_;
}
inline void IdleDispatchEntryProto::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.IdleDispatchEntryProto.uid)
}

// optional string pkg = 2;
inline bool IdleDispatchEntryProto::has_pkg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IdleDispatchEntryProto::clear_pkg() {
  pkg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& IdleDispatchEntryProto::pkg() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.IdleDispatchEntryProto.pkg)
  return pkg_.GetNoArena();
}
inline void IdleDispatchEntryProto::set_pkg(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  pkg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.alarm.IdleDispatchEntryProto.pkg)
}
inline void IdleDispatchEntryProto::set_pkg(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  pkg_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.alarm.IdleDispatchEntryProto.pkg)
}
inline void IdleDispatchEntryProto::set_pkg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  pkg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.alarm.IdleDispatchEntryProto.pkg)
}
inline void IdleDispatchEntryProto::set_pkg(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  pkg_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.alarm.IdleDispatchEntryProto.pkg)
}
inline std::string* IdleDispatchEntryProto::mutable_pkg() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.IdleDispatchEntryProto.pkg)
  return pkg_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* IdleDispatchEntryProto::release_pkg() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.IdleDispatchEntryProto.pkg)
  if (!has_pkg()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return pkg_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void IdleDispatchEntryProto::set_allocated_pkg(std::string* pkg) {
  if (pkg != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pkg_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pkg);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.IdleDispatchEntryProto.pkg)
}

// optional string tag = 3 [(.android.privacy) = {
inline bool IdleDispatchEntryProto::has_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IdleDispatchEntryProto::clear_tag() {
  tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& IdleDispatchEntryProto::tag() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.IdleDispatchEntryProto.tag)
  return tag_.GetNoArena();
}
inline void IdleDispatchEntryProto::set_tag(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.alarm.IdleDispatchEntryProto.tag)
}
inline void IdleDispatchEntryProto::set_tag(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  tag_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.alarm.IdleDispatchEntryProto.tag)
}
inline void IdleDispatchEntryProto::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.alarm.IdleDispatchEntryProto.tag)
}
inline void IdleDispatchEntryProto::set_tag(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.alarm.IdleDispatchEntryProto.tag)
}
inline std::string* IdleDispatchEntryProto::mutable_tag() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.IdleDispatchEntryProto.tag)
  return tag_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* IdleDispatchEntryProto::release_tag() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.IdleDispatchEntryProto.tag)
  if (!has_tag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return tag_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void IdleDispatchEntryProto::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  tag_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.IdleDispatchEntryProto.tag)
}

// optional string op = 4;
inline bool IdleDispatchEntryProto::has_op() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IdleDispatchEntryProto::clear_op() {
  op_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& IdleDispatchEntryProto::op() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.IdleDispatchEntryProto.op)
  return op_.GetNoArena();
}
inline void IdleDispatchEntryProto::set_op(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  op_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.alarm.IdleDispatchEntryProto.op)
}
inline void IdleDispatchEntryProto::set_op(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  op_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.alarm.IdleDispatchEntryProto.op)
}
inline void IdleDispatchEntryProto::set_op(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  op_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.alarm.IdleDispatchEntryProto.op)
}
inline void IdleDispatchEntryProto::set_op(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  op_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.alarm.IdleDispatchEntryProto.op)
}
inline std::string* IdleDispatchEntryProto::mutable_op() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.IdleDispatchEntryProto.op)
  return op_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* IdleDispatchEntryProto::release_op() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.IdleDispatchEntryProto.op)
  if (!has_op()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return op_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void IdleDispatchEntryProto::set_allocated_op(std::string* op) {
  if (op != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  op_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), op);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.IdleDispatchEntryProto.op)
}

// optional int64 entry_creation_realtime = 5;
inline bool IdleDispatchEntryProto::has_entry_creation_realtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IdleDispatchEntryProto::clear_entry_creation_realtime() {
  entry_creation_realtime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 IdleDispatchEntryProto::entry_creation_realtime() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.IdleDispatchEntryProto.entry_creation_realtime)
  return entry_creation_realtime_;
}
inline void IdleDispatchEntryProto::set_entry_creation_realtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  entry_creation_realtime_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.IdleDispatchEntryProto.entry_creation_realtime)
}

// optional int64 arg_realtime = 6;
inline bool IdleDispatchEntryProto::has_arg_realtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IdleDispatchEntryProto::clear_arg_realtime() {
  arg_realtime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 IdleDispatchEntryProto::arg_realtime() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.IdleDispatchEntryProto.arg_realtime)
  return arg_realtime_;
}
inline void IdleDispatchEntryProto::set_arg_realtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  arg_realtime_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.IdleDispatchEntryProto.arg_realtime)
}

// -------------------------------------------------------------------

// InFlightProto

// optional int32 uid = 1;
inline bool InFlightProto::has_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InFlightProto::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InFlightProto::uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.InFlightProto.uid)
  return uid_;
}
inline void InFlightProto::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.InFlightProto.uid)
}

// optional string tag = 2 [(.android.privacy) = {
inline bool InFlightProto::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InFlightProto::clear_tag() {
  tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InFlightProto::tag() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.InFlightProto.tag)
  return tag_.GetNoArena();
}
inline void InFlightProto::set_tag(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.alarm.InFlightProto.tag)
}
inline void InFlightProto::set_tag(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.alarm.InFlightProto.tag)
}
inline void InFlightProto::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.alarm.InFlightProto.tag)
}
inline void InFlightProto::set_tag(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.alarm.InFlightProto.tag)
}
inline std::string* InFlightProto::mutable_tag() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.InFlightProto.tag)
  return tag_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InFlightProto::release_tag() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.InFlightProto.tag)
  if (!has_tag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return tag_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InFlightProto::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tag_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.InFlightProto.tag)
}

// optional int64 when_elapsed_ms = 3;
inline bool InFlightProto::has_when_elapsed_ms() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void InFlightProto::clear_when_elapsed_ms() {
  when_elapsed_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 InFlightProto::when_elapsed_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.InFlightProto.when_elapsed_ms)
  return when_elapsed_ms_;
}
inline void InFlightProto::set_when_elapsed_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  when_elapsed_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.InFlightProto.when_elapsed_ms)
}

// optional .android.app.AlarmManagerProto.AlarmType alarm_type = 4;
inline bool InFlightProto::has_alarm_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void InFlightProto::clear_alarm_type() {
  alarm_type_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::android::app::AlarmManagerProto_AlarmType InFlightProto::alarm_type() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.InFlightProto.alarm_type)
  return static_cast< ::android::app::AlarmManagerProto_AlarmType >(alarm_type_);
}
inline void InFlightProto::set_alarm_type(::android::app::AlarmManagerProto_AlarmType value) {
  assert(::android::app::AlarmManagerProto_AlarmType_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  alarm_type_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.InFlightProto.alarm_type)
}

// optional .android.app.PendingIntentProto pending_intent = 5;
inline bool InFlightProto::has_pending_intent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::android::app::PendingIntentProto& InFlightProto::pending_intent() const {
  const ::android::app::PendingIntentProto* p = pending_intent_;
  // @@protoc_insertion_point(field_get:com.android.server.alarm.InFlightProto.pending_intent)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::app::PendingIntentProto*>(
      &::android::app::_PendingIntentProto_default_instance_);
}
inline ::android::app::PendingIntentProto* InFlightProto::release_pending_intent() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.InFlightProto.pending_intent)
  _has_bits_[0] &= ~0x00000002u;
  ::android::app::PendingIntentProto* temp = pending_intent_;
  pending_intent_ = nullptr;
  return temp;
}
inline ::android::app::PendingIntentProto* InFlightProto::mutable_pending_intent() {
  _has_bits_[0] |= 0x00000002u;
  if (pending_intent_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::app::PendingIntentProto>(GetArenaNoVirtual());
    pending_intent_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.InFlightProto.pending_intent)
  return pending_intent_;
}
inline void InFlightProto::set_allocated_pending_intent(::android::app::PendingIntentProto* pending_intent) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pending_intent_);
  }
  if (pending_intent) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pending_intent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pending_intent, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  pending_intent_ = pending_intent;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.InFlightProto.pending_intent)
}

// optional .com.android.server.alarm.BroadcastStatsProto broadcast_stats = 6;
inline bool InFlightProto::has_broadcast_stats() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InFlightProto::clear_broadcast_stats() {
  if (broadcast_stats_ != nullptr) broadcast_stats_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::com::android::server::alarm::BroadcastStatsProto& InFlightProto::broadcast_stats() const {
  const ::com::android::server::alarm::BroadcastStatsProto* p = broadcast_stats_;
  // @@protoc_insertion_point(field_get:com.android.server.alarm.InFlightProto.broadcast_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::alarm::BroadcastStatsProto*>(
      &::com::android::server::alarm::_BroadcastStatsProto_default_instance_);
}
inline ::com::android::server::alarm::BroadcastStatsProto* InFlightProto::release_broadcast_stats() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.InFlightProto.broadcast_stats)
  _has_bits_[0] &= ~0x00000004u;
  ::com::android::server::alarm::BroadcastStatsProto* temp = broadcast_stats_;
  broadcast_stats_ = nullptr;
  return temp;
}
inline ::com::android::server::alarm::BroadcastStatsProto* InFlightProto::mutable_broadcast_stats() {
  _has_bits_[0] |= 0x00000004u;
  if (broadcast_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::alarm::BroadcastStatsProto>(GetArenaNoVirtual());
    broadcast_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.InFlightProto.broadcast_stats)
  return broadcast_stats_;
}
inline void InFlightProto::set_allocated_broadcast_stats(::com::android::server::alarm::BroadcastStatsProto* broadcast_stats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete broadcast_stats_;
  }
  if (broadcast_stats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      broadcast_stats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, broadcast_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  broadcast_stats_ = broadcast_stats;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.InFlightProto.broadcast_stats)
}

// optional .com.android.server.alarm.FilterStatsProto filter_stats = 7;
inline bool InFlightProto::has_filter_stats() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InFlightProto::clear_filter_stats() {
  if (filter_stats_ != nullptr) filter_stats_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::com::android::server::alarm::FilterStatsProto& InFlightProto::filter_stats() const {
  const ::com::android::server::alarm::FilterStatsProto* p = filter_stats_;
  // @@protoc_insertion_point(field_get:com.android.server.alarm.InFlightProto.filter_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::alarm::FilterStatsProto*>(
      &::com::android::server::alarm::_FilterStatsProto_default_instance_);
}
inline ::com::android::server::alarm::FilterStatsProto* InFlightProto::release_filter_stats() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.InFlightProto.filter_stats)
  _has_bits_[0] &= ~0x00000008u;
  ::com::android::server::alarm::FilterStatsProto* temp = filter_stats_;
  filter_stats_ = nullptr;
  return temp;
}
inline ::com::android::server::alarm::FilterStatsProto* InFlightProto::mutable_filter_stats() {
  _has_bits_[0] |= 0x00000008u;
  if (filter_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::alarm::FilterStatsProto>(GetArenaNoVirtual());
    filter_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.InFlightProto.filter_stats)
  return filter_stats_;
}
inline void InFlightProto::set_allocated_filter_stats(::com::android::server::alarm::FilterStatsProto* filter_stats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete filter_stats_;
  }
  if (filter_stats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      filter_stats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, filter_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  filter_stats_ = filter_stats;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.InFlightProto.filter_stats)
}

// optional .android.os.WorkSourceProto work_source = 8;
inline bool InFlightProto::has_work_source() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline const ::android::os::WorkSourceProto& InFlightProto::work_source() const {
  const ::android::os::WorkSourceProto* p = work_source_;
  // @@protoc_insertion_point(field_get:com.android.server.alarm.InFlightProto.work_source)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::WorkSourceProto*>(
      &::android::os::_WorkSourceProto_default_instance_);
}
inline ::android::os::WorkSourceProto* InFlightProto::release_work_source() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.InFlightProto.work_source)
  _has_bits_[0] &= ~0x00000010u;
  ::android::os::WorkSourceProto* temp = work_source_;
  work_source_ = nullptr;
  return temp;
}
inline ::android::os::WorkSourceProto* InFlightProto::mutable_work_source() {
  _has_bits_[0] |= 0x00000010u;
  if (work_source_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::WorkSourceProto>(GetArenaNoVirtual());
    work_source_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.InFlightProto.work_source)
  return work_source_;
}
inline void InFlightProto::set_allocated_work_source(::android::os::WorkSourceProto* work_source) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(work_source_);
  }
  if (work_source) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      work_source = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, work_source, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  work_source_ = work_source;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.InFlightProto.work_source)
}

// -------------------------------------------------------------------

// WakeupEventProto

// optional int32 uid = 1;
inline bool WakeupEventProto::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WakeupEventProto::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WakeupEventProto::uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.WakeupEventProto.uid)
  return uid_;
}
inline void WakeupEventProto::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.WakeupEventProto.uid)
}

// optional string action = 2;
inline bool WakeupEventProto::has_action() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WakeupEventProto::clear_action() {
  action_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WakeupEventProto::action() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.WakeupEventProto.action)
  return action_.GetNoArena();
}
inline void WakeupEventProto::set_action(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.alarm.WakeupEventProto.action)
}
inline void WakeupEventProto::set_action(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  action_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.alarm.WakeupEventProto.action)
}
inline void WakeupEventProto::set_action(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.alarm.WakeupEventProto.action)
}
inline void WakeupEventProto::set_action(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  action_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.alarm.WakeupEventProto.action)
}
inline std::string* WakeupEventProto::mutable_action() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.alarm.WakeupEventProto.action)
  return action_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* WakeupEventProto::release_action() {
  // @@protoc_insertion_point(field_release:com.android.server.alarm.WakeupEventProto.action)
  if (!has_action()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return action_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void WakeupEventProto::set_allocated_action(std::string* action) {
  if (action != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  action_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.alarm.WakeupEventProto.action)
}

// optional int64 when = 3;
inline bool WakeupEventProto::has_when() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WakeupEventProto::clear_when() {
  when_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WakeupEventProto::when() const {
  // @@protoc_insertion_point(field_get:com.android.server.alarm.WakeupEventProto.when)
  return when_;
}
inline void WakeupEventProto::set_when(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  when_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.alarm.WakeupEventProto.when)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace alarm
}  // namespace server
}  // namespace android
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2falarm_2falarmmanagerservice_2eproto
