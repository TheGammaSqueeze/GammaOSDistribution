// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/inputmethod/inputmethodeditortrace.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/view/inputmethod/inputmethodmanager.pb.h"
#include "frameworks/base/core/proto/android/view/viewrootimpl.pb.h"
#include "frameworks/base/core/proto/android/view/insetscontroller.pb.h"
#include "frameworks/base/core/proto/android/view/imeinsetssourceconsumer.pb.h"
#include "frameworks/base/core/proto/android/view/inputmethod/editorinfo.pb.h"
#include "frameworks/base/core/proto/android/view/inputmethod/inputconnection.pb.h"
#include "frameworks/base/core/proto/android/view/imefocuscontroller.pb.h"
#include "frameworks/base/core/proto/android/server/inputmethod/inputmethodmanagerservice.pb.h"
#include "frameworks/base/core/proto/android/inputmethodservice/inputmethodservice.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto;
namespace android {
namespace view {
namespace inputmethod {
class InputMethodClientsTraceFileProto;
class InputMethodClientsTraceFileProtoDefaultTypeInternal;
extern InputMethodClientsTraceFileProtoDefaultTypeInternal _InputMethodClientsTraceFileProto_default_instance_;
class InputMethodClientsTraceProto;
class InputMethodClientsTraceProtoDefaultTypeInternal;
extern InputMethodClientsTraceProtoDefaultTypeInternal _InputMethodClientsTraceProto_default_instance_;
class InputMethodClientsTraceProto_ClientSideProto;
class InputMethodClientsTraceProto_ClientSideProtoDefaultTypeInternal;
extern InputMethodClientsTraceProto_ClientSideProtoDefaultTypeInternal _InputMethodClientsTraceProto_ClientSideProto_default_instance_;
class InputMethodManagerServiceTraceFileProto;
class InputMethodManagerServiceTraceFileProtoDefaultTypeInternal;
extern InputMethodManagerServiceTraceFileProtoDefaultTypeInternal _InputMethodManagerServiceTraceFileProto_default_instance_;
class InputMethodManagerServiceTraceProto;
class InputMethodManagerServiceTraceProtoDefaultTypeInternal;
extern InputMethodManagerServiceTraceProtoDefaultTypeInternal _InputMethodManagerServiceTraceProto_default_instance_;
class InputMethodServiceTraceFileProto;
class InputMethodServiceTraceFileProtoDefaultTypeInternal;
extern InputMethodServiceTraceFileProtoDefaultTypeInternal _InputMethodServiceTraceFileProto_default_instance_;
class InputMethodServiceTraceProto;
class InputMethodServiceTraceProtoDefaultTypeInternal;
extern InputMethodServiceTraceProtoDefaultTypeInternal _InputMethodServiceTraceProto_default_instance_;
}  // namespace inputmethod
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::view::inputmethod::InputMethodClientsTraceFileProto* Arena::CreateMaybeMessage<::android::view::inputmethod::InputMethodClientsTraceFileProto>(Arena*);
template<> ::android::view::inputmethod::InputMethodClientsTraceProto* Arena::CreateMaybeMessage<::android::view::inputmethod::InputMethodClientsTraceProto>(Arena*);
template<> ::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto* Arena::CreateMaybeMessage<::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto>(Arena*);
template<> ::android::view::inputmethod::InputMethodManagerServiceTraceFileProto* Arena::CreateMaybeMessage<::android::view::inputmethod::InputMethodManagerServiceTraceFileProto>(Arena*);
template<> ::android::view::inputmethod::InputMethodManagerServiceTraceProto* Arena::CreateMaybeMessage<::android::view::inputmethod::InputMethodManagerServiceTraceProto>(Arena*);
template<> ::android::view::inputmethod::InputMethodServiceTraceFileProto* Arena::CreateMaybeMessage<::android::view::inputmethod::InputMethodServiceTraceFileProto>(Arena*);
template<> ::android::view::inputmethod::InputMethodServiceTraceProto* Arena::CreateMaybeMessage<::android::view::inputmethod::InputMethodServiceTraceProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace view {
namespace inputmethod {

enum InputMethodClientsTraceFileProto_MagicNumber : int {
  InputMethodClientsTraceFileProto_MagicNumber_INVALID = 0,
  InputMethodClientsTraceFileProto_MagicNumber_MAGIC_NUMBER_L = 1413696841,
  InputMethodClientsTraceFileProto_MagicNumber_MAGIC_NUMBER_H = 1162035538
};
bool InputMethodClientsTraceFileProto_MagicNumber_IsValid(int value);
constexpr InputMethodClientsTraceFileProto_MagicNumber InputMethodClientsTraceFileProto_MagicNumber_MagicNumber_MIN = InputMethodClientsTraceFileProto_MagicNumber_INVALID;
constexpr InputMethodClientsTraceFileProto_MagicNumber InputMethodClientsTraceFileProto_MagicNumber_MagicNumber_MAX = InputMethodClientsTraceFileProto_MagicNumber_MAGIC_NUMBER_L;
constexpr int InputMethodClientsTraceFileProto_MagicNumber_MagicNumber_ARRAYSIZE = InputMethodClientsTraceFileProto_MagicNumber_MagicNumber_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* InputMethodClientsTraceFileProto_MagicNumber_descriptor();
template<typename T>
inline const std::string& InputMethodClientsTraceFileProto_MagicNumber_Name(T enum_t_value) {
  static_assert(::std::is_same<T, InputMethodClientsTraceFileProto_MagicNumber>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function InputMethodClientsTraceFileProto_MagicNumber_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    InputMethodClientsTraceFileProto_MagicNumber_descriptor(), enum_t_value);
}
inline bool InputMethodClientsTraceFileProto_MagicNumber_Parse(
    const std::string& name, InputMethodClientsTraceFileProto_MagicNumber* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<InputMethodClientsTraceFileProto_MagicNumber>(
    InputMethodClientsTraceFileProto_MagicNumber_descriptor(), name, value);
}
enum InputMethodServiceTraceFileProto_MagicNumber : int {
  InputMethodServiceTraceFileProto_MagicNumber_INVALID = 0,
  InputMethodServiceTraceFileProto_MagicNumber_MAGIC_NUMBER_L = 1414745417,
  InputMethodServiceTraceFileProto_MagicNumber_MAGIC_NUMBER_H = 1162035538
};
bool InputMethodServiceTraceFileProto_MagicNumber_IsValid(int value);
constexpr InputMethodServiceTraceFileProto_MagicNumber InputMethodServiceTraceFileProto_MagicNumber_MagicNumber_MIN = InputMethodServiceTraceFileProto_MagicNumber_INVALID;
constexpr InputMethodServiceTraceFileProto_MagicNumber InputMethodServiceTraceFileProto_MagicNumber_MagicNumber_MAX = InputMethodServiceTraceFileProto_MagicNumber_MAGIC_NUMBER_L;
constexpr int InputMethodServiceTraceFileProto_MagicNumber_MagicNumber_ARRAYSIZE = InputMethodServiceTraceFileProto_MagicNumber_MagicNumber_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* InputMethodServiceTraceFileProto_MagicNumber_descriptor();
template<typename T>
inline const std::string& InputMethodServiceTraceFileProto_MagicNumber_Name(T enum_t_value) {
  static_assert(::std::is_same<T, InputMethodServiceTraceFileProto_MagicNumber>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function InputMethodServiceTraceFileProto_MagicNumber_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    InputMethodServiceTraceFileProto_MagicNumber_descriptor(), enum_t_value);
}
inline bool InputMethodServiceTraceFileProto_MagicNumber_Parse(
    const std::string& name, InputMethodServiceTraceFileProto_MagicNumber* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<InputMethodServiceTraceFileProto_MagicNumber>(
    InputMethodServiceTraceFileProto_MagicNumber_descriptor(), name, value);
}
enum InputMethodManagerServiceTraceFileProto_MagicNumber : int {
  InputMethodManagerServiceTraceFileProto_MagicNumber_INVALID = 0,
  InputMethodManagerServiceTraceFileProto_MagicNumber_MAGIC_NUMBER_L = 1414352201,
  InputMethodManagerServiceTraceFileProto_MagicNumber_MAGIC_NUMBER_H = 1162035538
};
bool InputMethodManagerServiceTraceFileProto_MagicNumber_IsValid(int value);
constexpr InputMethodManagerServiceTraceFileProto_MagicNumber InputMethodManagerServiceTraceFileProto_MagicNumber_MagicNumber_MIN = InputMethodManagerServiceTraceFileProto_MagicNumber_INVALID;
constexpr InputMethodManagerServiceTraceFileProto_MagicNumber InputMethodManagerServiceTraceFileProto_MagicNumber_MagicNumber_MAX = InputMethodManagerServiceTraceFileProto_MagicNumber_MAGIC_NUMBER_L;
constexpr int InputMethodManagerServiceTraceFileProto_MagicNumber_MagicNumber_ARRAYSIZE = InputMethodManagerServiceTraceFileProto_MagicNumber_MagicNumber_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* InputMethodManagerServiceTraceFileProto_MagicNumber_descriptor();
template<typename T>
inline const std::string& InputMethodManagerServiceTraceFileProto_MagicNumber_Name(T enum_t_value) {
  static_assert(::std::is_same<T, InputMethodManagerServiceTraceFileProto_MagicNumber>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function InputMethodManagerServiceTraceFileProto_MagicNumber_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    InputMethodManagerServiceTraceFileProto_MagicNumber_descriptor(), enum_t_value);
}
inline bool InputMethodManagerServiceTraceFileProto_MagicNumber_Parse(
    const std::string& name, InputMethodManagerServiceTraceFileProto_MagicNumber* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<InputMethodManagerServiceTraceFileProto_MagicNumber>(
    InputMethodManagerServiceTraceFileProto_MagicNumber_descriptor(), name, value);
}
// ===================================================================

class InputMethodClientsTraceFileProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputMethodClientsTraceFileProto) */ {
 public:
  InputMethodClientsTraceFileProto();
  virtual ~InputMethodClientsTraceFileProto();

  InputMethodClientsTraceFileProto(const InputMethodClientsTraceFileProto& from);
  InputMethodClientsTraceFileProto(InputMethodClientsTraceFileProto&& from) noexcept
    : InputMethodClientsTraceFileProto() {
    *this = ::std::move(from);
  }

  inline InputMethodClientsTraceFileProto& operator=(const InputMethodClientsTraceFileProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputMethodClientsTraceFileProto& operator=(InputMethodClientsTraceFileProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputMethodClientsTraceFileProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputMethodClientsTraceFileProto* internal_default_instance() {
    return reinterpret_cast<const InputMethodClientsTraceFileProto*>(
               &_InputMethodClientsTraceFileProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InputMethodClientsTraceFileProto& a, InputMethodClientsTraceFileProto& b) {
    a.Swap(&b);
  }
  inline void Swap(InputMethodClientsTraceFileProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputMethodClientsTraceFileProto* New() const final {
    return CreateMaybeMessage<InputMethodClientsTraceFileProto>(nullptr);
  }

  InputMethodClientsTraceFileProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputMethodClientsTraceFileProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputMethodClientsTraceFileProto& from);
  void MergeFrom(const InputMethodClientsTraceFileProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputMethodClientsTraceFileProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputMethodClientsTraceFileProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef InputMethodClientsTraceFileProto_MagicNumber MagicNumber;
  static constexpr MagicNumber INVALID =
    InputMethodClientsTraceFileProto_MagicNumber_INVALID;
  static constexpr MagicNumber MAGIC_NUMBER_L =
    InputMethodClientsTraceFileProto_MagicNumber_MAGIC_NUMBER_L;
  static constexpr MagicNumber MAGIC_NUMBER_H =
    InputMethodClientsTraceFileProto_MagicNumber_MAGIC_NUMBER_H;
  static inline bool MagicNumber_IsValid(int value) {
    return InputMethodClientsTraceFileProto_MagicNumber_IsValid(value);
  }
  static constexpr MagicNumber MagicNumber_MIN =
    InputMethodClientsTraceFileProto_MagicNumber_MagicNumber_MIN;
  static constexpr MagicNumber MagicNumber_MAX =
    InputMethodClientsTraceFileProto_MagicNumber_MagicNumber_MAX;
  static constexpr int MagicNumber_ARRAYSIZE =
    InputMethodClientsTraceFileProto_MagicNumber_MagicNumber_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MagicNumber_descriptor() {
    return InputMethodClientsTraceFileProto_MagicNumber_descriptor();
  }
  template<typename T>
  static inline const std::string& MagicNumber_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MagicNumber>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MagicNumber_Name.");
    return InputMethodClientsTraceFileProto_MagicNumber_Name(enum_t_value);
  }
  static inline bool MagicNumber_Parse(const std::string& name,
      MagicNumber* value) {
    return InputMethodClientsTraceFileProto_MagicNumber_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kEntryFieldNumber = 2,
    kMagicNumberFieldNumber = 1,
  };
  // repeated .android.view.inputmethod.InputMethodClientsTraceProto entry = 2;
  int entry_size() const;
  void clear_entry();
  ::android::view::inputmethod::InputMethodClientsTraceProto* mutable_entry(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodClientsTraceProto >*
      mutable_entry();
  const ::android::view::inputmethod::InputMethodClientsTraceProto& entry(int index) const;
  ::android::view::inputmethod::InputMethodClientsTraceProto* add_entry();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodClientsTraceProto >&
      entry() const;

  // optional fixed64 magic_number = 1;
  bool has_magic_number() const;
  void clear_magic_number();
  ::PROTOBUF_NAMESPACE_ID::uint64 magic_number() const;
  void set_magic_number(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputMethodClientsTraceFileProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodClientsTraceProto > entry_;
  ::PROTOBUF_NAMESPACE_ID::uint64 magic_number_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto;
};
// -------------------------------------------------------------------

class InputMethodClientsTraceProto_ClientSideProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto) */ {
 public:
  InputMethodClientsTraceProto_ClientSideProto();
  virtual ~InputMethodClientsTraceProto_ClientSideProto();

  InputMethodClientsTraceProto_ClientSideProto(const InputMethodClientsTraceProto_ClientSideProto& from);
  InputMethodClientsTraceProto_ClientSideProto(InputMethodClientsTraceProto_ClientSideProto&& from) noexcept
    : InputMethodClientsTraceProto_ClientSideProto() {
    *this = ::std::move(from);
  }

  inline InputMethodClientsTraceProto_ClientSideProto& operator=(const InputMethodClientsTraceProto_ClientSideProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputMethodClientsTraceProto_ClientSideProto& operator=(InputMethodClientsTraceProto_ClientSideProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputMethodClientsTraceProto_ClientSideProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputMethodClientsTraceProto_ClientSideProto* internal_default_instance() {
    return reinterpret_cast<const InputMethodClientsTraceProto_ClientSideProto*>(
               &_InputMethodClientsTraceProto_ClientSideProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(InputMethodClientsTraceProto_ClientSideProto& a, InputMethodClientsTraceProto_ClientSideProto& b) {
    a.Swap(&b);
  }
  inline void Swap(InputMethodClientsTraceProto_ClientSideProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputMethodClientsTraceProto_ClientSideProto* New() const final {
    return CreateMaybeMessage<InputMethodClientsTraceProto_ClientSideProto>(nullptr);
  }

  InputMethodClientsTraceProto_ClientSideProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputMethodClientsTraceProto_ClientSideProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputMethodClientsTraceProto_ClientSideProto& from);
  void MergeFrom(const InputMethodClientsTraceProto_ClientSideProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputMethodClientsTraceProto_ClientSideProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputMethodManagerFieldNumber = 2,
    kViewRootImplFieldNumber = 3,
    kInsetsControllerFieldNumber = 4,
    kImeInsetsSourceConsumerFieldNumber = 5,
    kEditorInfoFieldNumber = 6,
    kImeFocusControllerFieldNumber = 7,
    kInputConnectionFieldNumber = 8,
    kInputConnectionCallFieldNumber = 9,
    kDisplayIdFieldNumber = 1,
  };
  // optional .android.view.inputmethod.InputMethodManagerProto input_method_manager = 2;
  bool has_input_method_manager() const;
  void clear_input_method_manager();
  const ::android::view::inputmethod::InputMethodManagerProto& input_method_manager() const;
  ::android::view::inputmethod::InputMethodManagerProto* release_input_method_manager();
  ::android::view::inputmethod::InputMethodManagerProto* mutable_input_method_manager();
  void set_allocated_input_method_manager(::android::view::inputmethod::InputMethodManagerProto* input_method_manager);

  // optional .android.view.ViewRootImplProto view_root_impl = 3;
  bool has_view_root_impl() const;
  void clear_view_root_impl();
  const ::android::view::ViewRootImplProto& view_root_impl() const;
  ::android::view::ViewRootImplProto* release_view_root_impl();
  ::android::view::ViewRootImplProto* mutable_view_root_impl();
  void set_allocated_view_root_impl(::android::view::ViewRootImplProto* view_root_impl);

  // optional .android.view.InsetsControllerProto insets_controller = 4;
  bool has_insets_controller() const;
  void clear_insets_controller();
  const ::android::view::InsetsControllerProto& insets_controller() const;
  ::android::view::InsetsControllerProto* release_insets_controller();
  ::android::view::InsetsControllerProto* mutable_insets_controller();
  void set_allocated_insets_controller(::android::view::InsetsControllerProto* insets_controller);

  // optional .android.view.ImeInsetsSourceConsumerProto ime_insets_source_consumer = 5;
  bool has_ime_insets_source_consumer() const;
  void clear_ime_insets_source_consumer();
  const ::android::view::ImeInsetsSourceConsumerProto& ime_insets_source_consumer() const;
  ::android::view::ImeInsetsSourceConsumerProto* release_ime_insets_source_consumer();
  ::android::view::ImeInsetsSourceConsumerProto* mutable_ime_insets_source_consumer();
  void set_allocated_ime_insets_source_consumer(::android::view::ImeInsetsSourceConsumerProto* ime_insets_source_consumer);

  // optional .android.view.inputmethod.EditorInfoProto editor_info = 6;
  bool has_editor_info() const;
  void clear_editor_info();
  const ::android::view::inputmethod::EditorInfoProto& editor_info() const;
  ::android::view::inputmethod::EditorInfoProto* release_editor_info();
  ::android::view::inputmethod::EditorInfoProto* mutable_editor_info();
  void set_allocated_editor_info(::android::view::inputmethod::EditorInfoProto* editor_info);

  // optional .android.view.ImeFocusControllerProto ime_focus_controller = 7;
  bool has_ime_focus_controller() const;
  void clear_ime_focus_controller();
  const ::android::view::ImeFocusControllerProto& ime_focus_controller() const;
  ::android::view::ImeFocusControllerProto* release_ime_focus_controller();
  ::android::view::ImeFocusControllerProto* mutable_ime_focus_controller();
  void set_allocated_ime_focus_controller(::android::view::ImeFocusControllerProto* ime_focus_controller);

  // optional .android.view.inputmethod.InputConnectionProto input_connection = 8;
  bool has_input_connection() const;
  void clear_input_connection();
  const ::android::view::inputmethod::InputConnectionProto& input_connection() const;
  ::android::view::inputmethod::InputConnectionProto* release_input_connection();
  ::android::view::inputmethod::InputConnectionProto* mutable_input_connection();
  void set_allocated_input_connection(::android::view::inputmethod::InputConnectionProto* input_connection);

  // optional .android.view.inputmethod.InputConnectionCallProto input_connection_call = 9;
  bool has_input_connection_call() const;
  void clear_input_connection_call();
  const ::android::view::inputmethod::InputConnectionCallProto& input_connection_call() const;
  ::android::view::inputmethod::InputConnectionCallProto* release_input_connection_call();
  ::android::view::inputmethod::InputConnectionCallProto* mutable_input_connection_call();
  void set_allocated_input_connection_call(::android::view::inputmethod::InputConnectionCallProto* input_connection_call);

  // optional int32 display_id = 1;
  bool has_display_id() const;
  void clear_display_id();
  ::PROTOBUF_NAMESPACE_ID::int32 display_id() const;
  void set_display_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::view::inputmethod::InputMethodManagerProto* input_method_manager_;
  ::android::view::ViewRootImplProto* view_root_impl_;
  ::android::view::InsetsControllerProto* insets_controller_;
  ::android::view::ImeInsetsSourceConsumerProto* ime_insets_source_consumer_;
  ::android::view::inputmethod::EditorInfoProto* editor_info_;
  ::android::view::ImeFocusControllerProto* ime_focus_controller_;
  ::android::view::inputmethod::InputConnectionProto* input_connection_;
  ::android::view::inputmethod::InputConnectionCallProto* input_connection_call_;
  ::PROTOBUF_NAMESPACE_ID::int32 display_id_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto;
};
// -------------------------------------------------------------------

class InputMethodClientsTraceProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputMethodClientsTraceProto) */ {
 public:
  InputMethodClientsTraceProto();
  virtual ~InputMethodClientsTraceProto();

  InputMethodClientsTraceProto(const InputMethodClientsTraceProto& from);
  InputMethodClientsTraceProto(InputMethodClientsTraceProto&& from) noexcept
    : InputMethodClientsTraceProto() {
    *this = ::std::move(from);
  }

  inline InputMethodClientsTraceProto& operator=(const InputMethodClientsTraceProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputMethodClientsTraceProto& operator=(InputMethodClientsTraceProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputMethodClientsTraceProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputMethodClientsTraceProto* internal_default_instance() {
    return reinterpret_cast<const InputMethodClientsTraceProto*>(
               &_InputMethodClientsTraceProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(InputMethodClientsTraceProto& a, InputMethodClientsTraceProto& b) {
    a.Swap(&b);
  }
  inline void Swap(InputMethodClientsTraceProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputMethodClientsTraceProto* New() const final {
    return CreateMaybeMessage<InputMethodClientsTraceProto>(nullptr);
  }

  InputMethodClientsTraceProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputMethodClientsTraceProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputMethodClientsTraceProto& from);
  void MergeFrom(const InputMethodClientsTraceProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputMethodClientsTraceProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputMethodClientsTraceProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef InputMethodClientsTraceProto_ClientSideProto ClientSideProto;

  // accessors -------------------------------------------------------

  enum : int {
    kWhereFieldNumber = 2,
    kClientFieldNumber = 3,
    kElapsedRealtimeNanosFieldNumber = 1,
  };
  // optional string where = 2;
  bool has_where() const;
  void clear_where();
  const std::string& where() const;
  void set_where(const std::string& value);
  void set_where(std::string&& value);
  void set_where(const char* value);
  void set_where(const char* value, size_t size);
  std::string* mutable_where();
  std::string* release_where();
  void set_allocated_where(std::string* where);

  // optional .android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto client = 3;
  bool has_client() const;
  void clear_client();
  const ::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto& client() const;
  ::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto* release_client();
  ::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto* mutable_client();
  void set_allocated_client(::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto* client);

  // optional fixed64 elapsed_realtime_nanos = 1;
  bool has_elapsed_realtime_nanos() const;
  void clear_elapsed_realtime_nanos();
  ::PROTOBUF_NAMESPACE_ID::uint64 elapsed_realtime_nanos() const;
  void set_elapsed_realtime_nanos(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputMethodClientsTraceProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr where_;
  ::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto* client_;
  ::PROTOBUF_NAMESPACE_ID::uint64 elapsed_realtime_nanos_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto;
};
// -------------------------------------------------------------------

class InputMethodServiceTraceFileProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputMethodServiceTraceFileProto) */ {
 public:
  InputMethodServiceTraceFileProto();
  virtual ~InputMethodServiceTraceFileProto();

  InputMethodServiceTraceFileProto(const InputMethodServiceTraceFileProto& from);
  InputMethodServiceTraceFileProto(InputMethodServiceTraceFileProto&& from) noexcept
    : InputMethodServiceTraceFileProto() {
    *this = ::std::move(from);
  }

  inline InputMethodServiceTraceFileProto& operator=(const InputMethodServiceTraceFileProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputMethodServiceTraceFileProto& operator=(InputMethodServiceTraceFileProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputMethodServiceTraceFileProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputMethodServiceTraceFileProto* internal_default_instance() {
    return reinterpret_cast<const InputMethodServiceTraceFileProto*>(
               &_InputMethodServiceTraceFileProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(InputMethodServiceTraceFileProto& a, InputMethodServiceTraceFileProto& b) {
    a.Swap(&b);
  }
  inline void Swap(InputMethodServiceTraceFileProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputMethodServiceTraceFileProto* New() const final {
    return CreateMaybeMessage<InputMethodServiceTraceFileProto>(nullptr);
  }

  InputMethodServiceTraceFileProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputMethodServiceTraceFileProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputMethodServiceTraceFileProto& from);
  void MergeFrom(const InputMethodServiceTraceFileProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputMethodServiceTraceFileProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputMethodServiceTraceFileProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef InputMethodServiceTraceFileProto_MagicNumber MagicNumber;
  static constexpr MagicNumber INVALID =
    InputMethodServiceTraceFileProto_MagicNumber_INVALID;
  static constexpr MagicNumber MAGIC_NUMBER_L =
    InputMethodServiceTraceFileProto_MagicNumber_MAGIC_NUMBER_L;
  static constexpr MagicNumber MAGIC_NUMBER_H =
    InputMethodServiceTraceFileProto_MagicNumber_MAGIC_NUMBER_H;
  static inline bool MagicNumber_IsValid(int value) {
    return InputMethodServiceTraceFileProto_MagicNumber_IsValid(value);
  }
  static constexpr MagicNumber MagicNumber_MIN =
    InputMethodServiceTraceFileProto_MagicNumber_MagicNumber_MIN;
  static constexpr MagicNumber MagicNumber_MAX =
    InputMethodServiceTraceFileProto_MagicNumber_MagicNumber_MAX;
  static constexpr int MagicNumber_ARRAYSIZE =
    InputMethodServiceTraceFileProto_MagicNumber_MagicNumber_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MagicNumber_descriptor() {
    return InputMethodServiceTraceFileProto_MagicNumber_descriptor();
  }
  template<typename T>
  static inline const std::string& MagicNumber_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MagicNumber>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MagicNumber_Name.");
    return InputMethodServiceTraceFileProto_MagicNumber_Name(enum_t_value);
  }
  static inline bool MagicNumber_Parse(const std::string& name,
      MagicNumber* value) {
    return InputMethodServiceTraceFileProto_MagicNumber_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kEntryFieldNumber = 2,
    kMagicNumberFieldNumber = 1,
  };
  // repeated .android.view.inputmethod.InputMethodServiceTraceProto entry = 2;
  int entry_size() const;
  void clear_entry();
  ::android::view::inputmethod::InputMethodServiceTraceProto* mutable_entry(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodServiceTraceProto >*
      mutable_entry();
  const ::android::view::inputmethod::InputMethodServiceTraceProto& entry(int index) const;
  ::android::view::inputmethod::InputMethodServiceTraceProto* add_entry();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodServiceTraceProto >&
      entry() const;

  // optional fixed64 magic_number = 1;
  bool has_magic_number() const;
  void clear_magic_number();
  ::PROTOBUF_NAMESPACE_ID::uint64 magic_number() const;
  void set_magic_number(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputMethodServiceTraceFileProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodServiceTraceProto > entry_;
  ::PROTOBUF_NAMESPACE_ID::uint64 magic_number_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto;
};
// -------------------------------------------------------------------

class InputMethodServiceTraceProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputMethodServiceTraceProto) */ {
 public:
  InputMethodServiceTraceProto();
  virtual ~InputMethodServiceTraceProto();

  InputMethodServiceTraceProto(const InputMethodServiceTraceProto& from);
  InputMethodServiceTraceProto(InputMethodServiceTraceProto&& from) noexcept
    : InputMethodServiceTraceProto() {
    *this = ::std::move(from);
  }

  inline InputMethodServiceTraceProto& operator=(const InputMethodServiceTraceProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputMethodServiceTraceProto& operator=(InputMethodServiceTraceProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputMethodServiceTraceProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputMethodServiceTraceProto* internal_default_instance() {
    return reinterpret_cast<const InputMethodServiceTraceProto*>(
               &_InputMethodServiceTraceProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(InputMethodServiceTraceProto& a, InputMethodServiceTraceProto& b) {
    a.Swap(&b);
  }
  inline void Swap(InputMethodServiceTraceProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputMethodServiceTraceProto* New() const final {
    return CreateMaybeMessage<InputMethodServiceTraceProto>(nullptr);
  }

  InputMethodServiceTraceProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputMethodServiceTraceProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputMethodServiceTraceProto& from);
  void MergeFrom(const InputMethodServiceTraceProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputMethodServiceTraceProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputMethodServiceTraceProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWhereFieldNumber = 2,
    kInputMethodServiceFieldNumber = 3,
    kElapsedRealtimeNanosFieldNumber = 1,
  };
  // optional string where = 2;
  bool has_where() const;
  void clear_where();
  const std::string& where() const;
  void set_where(const std::string& value);
  void set_where(std::string&& value);
  void set_where(const char* value);
  void set_where(const char* value, size_t size);
  std::string* mutable_where();
  std::string* release_where();
  void set_allocated_where(std::string* where);

  // optional .android.inputmethodservice.InputMethodServiceProto input_method_service = 3;
  bool has_input_method_service() const;
  void clear_input_method_service();
  const ::android::inputmethodservice::InputMethodServiceProto& input_method_service() const;
  ::android::inputmethodservice::InputMethodServiceProto* release_input_method_service();
  ::android::inputmethodservice::InputMethodServiceProto* mutable_input_method_service();
  void set_allocated_input_method_service(::android::inputmethodservice::InputMethodServiceProto* input_method_service);

  // optional fixed64 elapsed_realtime_nanos = 1;
  bool has_elapsed_realtime_nanos() const;
  void clear_elapsed_realtime_nanos();
  ::PROTOBUF_NAMESPACE_ID::uint64 elapsed_realtime_nanos() const;
  void set_elapsed_realtime_nanos(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputMethodServiceTraceProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr where_;
  ::android::inputmethodservice::InputMethodServiceProto* input_method_service_;
  ::PROTOBUF_NAMESPACE_ID::uint64 elapsed_realtime_nanos_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto;
};
// -------------------------------------------------------------------

class InputMethodManagerServiceTraceFileProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputMethodManagerServiceTraceFileProto) */ {
 public:
  InputMethodManagerServiceTraceFileProto();
  virtual ~InputMethodManagerServiceTraceFileProto();

  InputMethodManagerServiceTraceFileProto(const InputMethodManagerServiceTraceFileProto& from);
  InputMethodManagerServiceTraceFileProto(InputMethodManagerServiceTraceFileProto&& from) noexcept
    : InputMethodManagerServiceTraceFileProto() {
    *this = ::std::move(from);
  }

  inline InputMethodManagerServiceTraceFileProto& operator=(const InputMethodManagerServiceTraceFileProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputMethodManagerServiceTraceFileProto& operator=(InputMethodManagerServiceTraceFileProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputMethodManagerServiceTraceFileProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputMethodManagerServiceTraceFileProto* internal_default_instance() {
    return reinterpret_cast<const InputMethodManagerServiceTraceFileProto*>(
               &_InputMethodManagerServiceTraceFileProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(InputMethodManagerServiceTraceFileProto& a, InputMethodManagerServiceTraceFileProto& b) {
    a.Swap(&b);
  }
  inline void Swap(InputMethodManagerServiceTraceFileProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputMethodManagerServiceTraceFileProto* New() const final {
    return CreateMaybeMessage<InputMethodManagerServiceTraceFileProto>(nullptr);
  }

  InputMethodManagerServiceTraceFileProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputMethodManagerServiceTraceFileProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputMethodManagerServiceTraceFileProto& from);
  void MergeFrom(const InputMethodManagerServiceTraceFileProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputMethodManagerServiceTraceFileProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputMethodManagerServiceTraceFileProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef InputMethodManagerServiceTraceFileProto_MagicNumber MagicNumber;
  static constexpr MagicNumber INVALID =
    InputMethodManagerServiceTraceFileProto_MagicNumber_INVALID;
  static constexpr MagicNumber MAGIC_NUMBER_L =
    InputMethodManagerServiceTraceFileProto_MagicNumber_MAGIC_NUMBER_L;
  static constexpr MagicNumber MAGIC_NUMBER_H =
    InputMethodManagerServiceTraceFileProto_MagicNumber_MAGIC_NUMBER_H;
  static inline bool MagicNumber_IsValid(int value) {
    return InputMethodManagerServiceTraceFileProto_MagicNumber_IsValid(value);
  }
  static constexpr MagicNumber MagicNumber_MIN =
    InputMethodManagerServiceTraceFileProto_MagicNumber_MagicNumber_MIN;
  static constexpr MagicNumber MagicNumber_MAX =
    InputMethodManagerServiceTraceFileProto_MagicNumber_MagicNumber_MAX;
  static constexpr int MagicNumber_ARRAYSIZE =
    InputMethodManagerServiceTraceFileProto_MagicNumber_MagicNumber_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MagicNumber_descriptor() {
    return InputMethodManagerServiceTraceFileProto_MagicNumber_descriptor();
  }
  template<typename T>
  static inline const std::string& MagicNumber_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MagicNumber>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MagicNumber_Name.");
    return InputMethodManagerServiceTraceFileProto_MagicNumber_Name(enum_t_value);
  }
  static inline bool MagicNumber_Parse(const std::string& name,
      MagicNumber* value) {
    return InputMethodManagerServiceTraceFileProto_MagicNumber_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kEntryFieldNumber = 2,
    kMagicNumberFieldNumber = 1,
  };
  // repeated .android.view.inputmethod.InputMethodManagerServiceTraceProto entry = 2;
  int entry_size() const;
  void clear_entry();
  ::android::view::inputmethod::InputMethodManagerServiceTraceProto* mutable_entry(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodManagerServiceTraceProto >*
      mutable_entry();
  const ::android::view::inputmethod::InputMethodManagerServiceTraceProto& entry(int index) const;
  ::android::view::inputmethod::InputMethodManagerServiceTraceProto* add_entry();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodManagerServiceTraceProto >&
      entry() const;

  // optional fixed64 magic_number = 1;
  bool has_magic_number() const;
  void clear_magic_number();
  ::PROTOBUF_NAMESPACE_ID::uint64 magic_number() const;
  void set_magic_number(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputMethodManagerServiceTraceFileProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodManagerServiceTraceProto > entry_;
  ::PROTOBUF_NAMESPACE_ID::uint64 magic_number_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto;
};
// -------------------------------------------------------------------

class InputMethodManagerServiceTraceProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.view.inputmethod.InputMethodManagerServiceTraceProto) */ {
 public:
  InputMethodManagerServiceTraceProto();
  virtual ~InputMethodManagerServiceTraceProto();

  InputMethodManagerServiceTraceProto(const InputMethodManagerServiceTraceProto& from);
  InputMethodManagerServiceTraceProto(InputMethodManagerServiceTraceProto&& from) noexcept
    : InputMethodManagerServiceTraceProto() {
    *this = ::std::move(from);
  }

  inline InputMethodManagerServiceTraceProto& operator=(const InputMethodManagerServiceTraceProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputMethodManagerServiceTraceProto& operator=(InputMethodManagerServiceTraceProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputMethodManagerServiceTraceProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputMethodManagerServiceTraceProto* internal_default_instance() {
    return reinterpret_cast<const InputMethodManagerServiceTraceProto*>(
               &_InputMethodManagerServiceTraceProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(InputMethodManagerServiceTraceProto& a, InputMethodManagerServiceTraceProto& b) {
    a.Swap(&b);
  }
  inline void Swap(InputMethodManagerServiceTraceProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputMethodManagerServiceTraceProto* New() const final {
    return CreateMaybeMessage<InputMethodManagerServiceTraceProto>(nullptr);
  }

  InputMethodManagerServiceTraceProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputMethodManagerServiceTraceProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputMethodManagerServiceTraceProto& from);
  void MergeFrom(const InputMethodManagerServiceTraceProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputMethodManagerServiceTraceProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.InputMethodManagerServiceTraceProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWhereFieldNumber = 2,
    kInputMethodManagerServiceFieldNumber = 3,
    kElapsedRealtimeNanosFieldNumber = 1,
  };
  // optional string where = 2;
  bool has_where() const;
  void clear_where();
  const std::string& where() const;
  void set_where(const std::string& value);
  void set_where(std::string&& value);
  void set_where(const char* value);
  void set_where(const char* value, size_t size);
  std::string* mutable_where();
  std::string* release_where();
  void set_allocated_where(std::string* where);

  // optional .android.server.inputmethod.InputMethodManagerServiceProto input_method_manager_service = 3;
  bool has_input_method_manager_service() const;
  void clear_input_method_manager_service();
  const ::android::server::inputmethod::InputMethodManagerServiceProto& input_method_manager_service() const;
  ::android::server::inputmethod::InputMethodManagerServiceProto* release_input_method_manager_service();
  ::android::server::inputmethod::InputMethodManagerServiceProto* mutable_input_method_manager_service();
  void set_allocated_input_method_manager_service(::android::server::inputmethod::InputMethodManagerServiceProto* input_method_manager_service);

  // optional fixed64 elapsed_realtime_nanos = 1;
  bool has_elapsed_realtime_nanos() const;
  void clear_elapsed_realtime_nanos();
  ::PROTOBUF_NAMESPACE_ID::uint64 elapsed_realtime_nanos() const;
  void set_elapsed_realtime_nanos(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.InputMethodManagerServiceTraceProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr where_;
  ::android::server::inputmethod::InputMethodManagerServiceProto* input_method_manager_service_;
  ::PROTOBUF_NAMESPACE_ID::uint64 elapsed_realtime_nanos_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InputMethodClientsTraceFileProto

// optional fixed64 magic_number = 1;
inline bool InputMethodClientsTraceFileProto::has_magic_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputMethodClientsTraceFileProto::clear_magic_number() {
  magic_number_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 InputMethodClientsTraceFileProto::magic_number() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodClientsTraceFileProto.magic_number)
  return magic_number_;
}
inline void InputMethodClientsTraceFileProto::set_magic_number(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  magic_number_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodClientsTraceFileProto.magic_number)
}

// repeated .android.view.inputmethod.InputMethodClientsTraceProto entry = 2;
inline int InputMethodClientsTraceFileProto::entry_size() const {
  return entry_.size();
}
inline void InputMethodClientsTraceFileProto::clear_entry() {
  entry_.Clear();
}
inline ::android::view::inputmethod::InputMethodClientsTraceProto* InputMethodClientsTraceFileProto::mutable_entry(int index) {
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodClientsTraceFileProto.entry)
  return entry_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodClientsTraceProto >*
InputMethodClientsTraceFileProto::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:android.view.inputmethod.InputMethodClientsTraceFileProto.entry)
  return &entry_;
}
inline const ::android::view::inputmethod::InputMethodClientsTraceProto& InputMethodClientsTraceFileProto::entry(int index) const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodClientsTraceFileProto.entry)
  return entry_.Get(index);
}
inline ::android::view::inputmethod::InputMethodClientsTraceProto* InputMethodClientsTraceFileProto::add_entry() {
  // @@protoc_insertion_point(field_add:android.view.inputmethod.InputMethodClientsTraceFileProto.entry)
  return entry_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodClientsTraceProto >&
InputMethodClientsTraceFileProto::entry() const {
  // @@protoc_insertion_point(field_list:android.view.inputmethod.InputMethodClientsTraceFileProto.entry)
  return entry_;
}

// -------------------------------------------------------------------

// InputMethodClientsTraceProto_ClientSideProto

// optional int32 display_id = 1;
inline bool InputMethodClientsTraceProto_ClientSideProto::has_display_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void InputMethodClientsTraceProto_ClientSideProto::clear_display_id() {
  display_id_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputMethodClientsTraceProto_ClientSideProto::display_id() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.display_id)
  return display_id_;
}
inline void InputMethodClientsTraceProto_ClientSideProto::set_display_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  display_id_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.display_id)
}

// optional .android.view.inputmethod.InputMethodManagerProto input_method_manager = 2;
inline bool InputMethodClientsTraceProto_ClientSideProto::has_input_method_manager() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::android::view::inputmethod::InputMethodManagerProto& InputMethodClientsTraceProto_ClientSideProto::input_method_manager() const {
  const ::android::view::inputmethod::InputMethodManagerProto* p = input_method_manager_;
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.input_method_manager)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::view::inputmethod::InputMethodManagerProto*>(
      &::android::view::inputmethod::_InputMethodManagerProto_default_instance_);
}
inline ::android::view::inputmethod::InputMethodManagerProto* InputMethodClientsTraceProto_ClientSideProto::release_input_method_manager() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.input_method_manager)
  _has_bits_[0] &= ~0x00000001u;
  ::android::view::inputmethod::InputMethodManagerProto* temp = input_method_manager_;
  input_method_manager_ = nullptr;
  return temp;
}
inline ::android::view::inputmethod::InputMethodManagerProto* InputMethodClientsTraceProto_ClientSideProto::mutable_input_method_manager() {
  _has_bits_[0] |= 0x00000001u;
  if (input_method_manager_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::view::inputmethod::InputMethodManagerProto>(GetArenaNoVirtual());
    input_method_manager_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.input_method_manager)
  return input_method_manager_;
}
inline void InputMethodClientsTraceProto_ClientSideProto::set_allocated_input_method_manager(::android::view::inputmethod::InputMethodManagerProto* input_method_manager) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(input_method_manager_);
  }
  if (input_method_manager) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      input_method_manager = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, input_method_manager, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  input_method_manager_ = input_method_manager;
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.input_method_manager)
}

// optional .android.view.ViewRootImplProto view_root_impl = 3;
inline bool InputMethodClientsTraceProto_ClientSideProto::has_view_root_impl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::android::view::ViewRootImplProto& InputMethodClientsTraceProto_ClientSideProto::view_root_impl() const {
  const ::android::view::ViewRootImplProto* p = view_root_impl_;
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.view_root_impl)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::view::ViewRootImplProto*>(
      &::android::view::_ViewRootImplProto_default_instance_);
}
inline ::android::view::ViewRootImplProto* InputMethodClientsTraceProto_ClientSideProto::release_view_root_impl() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.view_root_impl)
  _has_bits_[0] &= ~0x00000002u;
  ::android::view::ViewRootImplProto* temp = view_root_impl_;
  view_root_impl_ = nullptr;
  return temp;
}
inline ::android::view::ViewRootImplProto* InputMethodClientsTraceProto_ClientSideProto::mutable_view_root_impl() {
  _has_bits_[0] |= 0x00000002u;
  if (view_root_impl_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::view::ViewRootImplProto>(GetArenaNoVirtual());
    view_root_impl_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.view_root_impl)
  return view_root_impl_;
}
inline void InputMethodClientsTraceProto_ClientSideProto::set_allocated_view_root_impl(::android::view::ViewRootImplProto* view_root_impl) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(view_root_impl_);
  }
  if (view_root_impl) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      view_root_impl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, view_root_impl, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  view_root_impl_ = view_root_impl;
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.view_root_impl)
}

// optional .android.view.InsetsControllerProto insets_controller = 4;
inline bool InputMethodClientsTraceProto_ClientSideProto::has_insets_controller() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline const ::android::view::InsetsControllerProto& InputMethodClientsTraceProto_ClientSideProto::insets_controller() const {
  const ::android::view::InsetsControllerProto* p = insets_controller_;
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.insets_controller)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::view::InsetsControllerProto*>(
      &::android::view::_InsetsControllerProto_default_instance_);
}
inline ::android::view::InsetsControllerProto* InputMethodClientsTraceProto_ClientSideProto::release_insets_controller() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.insets_controller)
  _has_bits_[0] &= ~0x00000004u;
  ::android::view::InsetsControllerProto* temp = insets_controller_;
  insets_controller_ = nullptr;
  return temp;
}
inline ::android::view::InsetsControllerProto* InputMethodClientsTraceProto_ClientSideProto::mutable_insets_controller() {
  _has_bits_[0] |= 0x00000004u;
  if (insets_controller_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::view::InsetsControllerProto>(GetArenaNoVirtual());
    insets_controller_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.insets_controller)
  return insets_controller_;
}
inline void InputMethodClientsTraceProto_ClientSideProto::set_allocated_insets_controller(::android::view::InsetsControllerProto* insets_controller) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(insets_controller_);
  }
  if (insets_controller) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      insets_controller = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insets_controller, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  insets_controller_ = insets_controller;
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.insets_controller)
}

// optional .android.view.ImeInsetsSourceConsumerProto ime_insets_source_consumer = 5;
inline bool InputMethodClientsTraceProto_ClientSideProto::has_ime_insets_source_consumer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline const ::android::view::ImeInsetsSourceConsumerProto& InputMethodClientsTraceProto_ClientSideProto::ime_insets_source_consumer() const {
  const ::android::view::ImeInsetsSourceConsumerProto* p = ime_insets_source_consumer_;
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.ime_insets_source_consumer)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::view::ImeInsetsSourceConsumerProto*>(
      &::android::view::_ImeInsetsSourceConsumerProto_default_instance_);
}
inline ::android::view::ImeInsetsSourceConsumerProto* InputMethodClientsTraceProto_ClientSideProto::release_ime_insets_source_consumer() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.ime_insets_source_consumer)
  _has_bits_[0] &= ~0x00000008u;
  ::android::view::ImeInsetsSourceConsumerProto* temp = ime_insets_source_consumer_;
  ime_insets_source_consumer_ = nullptr;
  return temp;
}
inline ::android::view::ImeInsetsSourceConsumerProto* InputMethodClientsTraceProto_ClientSideProto::mutable_ime_insets_source_consumer() {
  _has_bits_[0] |= 0x00000008u;
  if (ime_insets_source_consumer_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::view::ImeInsetsSourceConsumerProto>(GetArenaNoVirtual());
    ime_insets_source_consumer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.ime_insets_source_consumer)
  return ime_insets_source_consumer_;
}
inline void InputMethodClientsTraceProto_ClientSideProto::set_allocated_ime_insets_source_consumer(::android::view::ImeInsetsSourceConsumerProto* ime_insets_source_consumer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ime_insets_source_consumer_);
  }
  if (ime_insets_source_consumer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ime_insets_source_consumer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ime_insets_source_consumer, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  ime_insets_source_consumer_ = ime_insets_source_consumer;
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.ime_insets_source_consumer)
}

// optional .android.view.inputmethod.EditorInfoProto editor_info = 6;
inline bool InputMethodClientsTraceProto_ClientSideProto::has_editor_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline const ::android::view::inputmethod::EditorInfoProto& InputMethodClientsTraceProto_ClientSideProto::editor_info() const {
  const ::android::view::inputmethod::EditorInfoProto* p = editor_info_;
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.editor_info)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::view::inputmethod::EditorInfoProto*>(
      &::android::view::inputmethod::_EditorInfoProto_default_instance_);
}
inline ::android::view::inputmethod::EditorInfoProto* InputMethodClientsTraceProto_ClientSideProto::release_editor_info() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.editor_info)
  _has_bits_[0] &= ~0x00000010u;
  ::android::view::inputmethod::EditorInfoProto* temp = editor_info_;
  editor_info_ = nullptr;
  return temp;
}
inline ::android::view::inputmethod::EditorInfoProto* InputMethodClientsTraceProto_ClientSideProto::mutable_editor_info() {
  _has_bits_[0] |= 0x00000010u;
  if (editor_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::view::inputmethod::EditorInfoProto>(GetArenaNoVirtual());
    editor_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.editor_info)
  return editor_info_;
}
inline void InputMethodClientsTraceProto_ClientSideProto::set_allocated_editor_info(::android::view::inputmethod::EditorInfoProto* editor_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(editor_info_);
  }
  if (editor_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      editor_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, editor_info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  editor_info_ = editor_info;
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.editor_info)
}

// optional .android.view.ImeFocusControllerProto ime_focus_controller = 7;
inline bool InputMethodClientsTraceProto_ClientSideProto::has_ime_focus_controller() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline const ::android::view::ImeFocusControllerProto& InputMethodClientsTraceProto_ClientSideProto::ime_focus_controller() const {
  const ::android::view::ImeFocusControllerProto* p = ime_focus_controller_;
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.ime_focus_controller)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::view::ImeFocusControllerProto*>(
      &::android::view::_ImeFocusControllerProto_default_instance_);
}
inline ::android::view::ImeFocusControllerProto* InputMethodClientsTraceProto_ClientSideProto::release_ime_focus_controller() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.ime_focus_controller)
  _has_bits_[0] &= ~0x00000020u;
  ::android::view::ImeFocusControllerProto* temp = ime_focus_controller_;
  ime_focus_controller_ = nullptr;
  return temp;
}
inline ::android::view::ImeFocusControllerProto* InputMethodClientsTraceProto_ClientSideProto::mutable_ime_focus_controller() {
  _has_bits_[0] |= 0x00000020u;
  if (ime_focus_controller_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::view::ImeFocusControllerProto>(GetArenaNoVirtual());
    ime_focus_controller_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.ime_focus_controller)
  return ime_focus_controller_;
}
inline void InputMethodClientsTraceProto_ClientSideProto::set_allocated_ime_focus_controller(::android::view::ImeFocusControllerProto* ime_focus_controller) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ime_focus_controller_);
  }
  if (ime_focus_controller) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ime_focus_controller = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ime_focus_controller, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  ime_focus_controller_ = ime_focus_controller;
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.ime_focus_controller)
}

// optional .android.view.inputmethod.InputConnectionProto input_connection = 8;
inline bool InputMethodClientsTraceProto_ClientSideProto::has_input_connection() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline const ::android::view::inputmethod::InputConnectionProto& InputMethodClientsTraceProto_ClientSideProto::input_connection() const {
  const ::android::view::inputmethod::InputConnectionProto* p = input_connection_;
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.input_connection)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::view::inputmethod::InputConnectionProto*>(
      &::android::view::inputmethod::_InputConnectionProto_default_instance_);
}
inline ::android::view::inputmethod::InputConnectionProto* InputMethodClientsTraceProto_ClientSideProto::release_input_connection() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.input_connection)
  _has_bits_[0] &= ~0x00000040u;
  ::android::view::inputmethod::InputConnectionProto* temp = input_connection_;
  input_connection_ = nullptr;
  return temp;
}
inline ::android::view::inputmethod::InputConnectionProto* InputMethodClientsTraceProto_ClientSideProto::mutable_input_connection() {
  _has_bits_[0] |= 0x00000040u;
  if (input_connection_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::view::inputmethod::InputConnectionProto>(GetArenaNoVirtual());
    input_connection_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.input_connection)
  return input_connection_;
}
inline void InputMethodClientsTraceProto_ClientSideProto::set_allocated_input_connection(::android::view::inputmethod::InputConnectionProto* input_connection) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(input_connection_);
  }
  if (input_connection) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      input_connection = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, input_connection, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  input_connection_ = input_connection;
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.input_connection)
}

// optional .android.view.inputmethod.InputConnectionCallProto input_connection_call = 9;
inline bool InputMethodClientsTraceProto_ClientSideProto::has_input_connection_call() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline const ::android::view::inputmethod::InputConnectionCallProto& InputMethodClientsTraceProto_ClientSideProto::input_connection_call() const {
  const ::android::view::inputmethod::InputConnectionCallProto* p = input_connection_call_;
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.input_connection_call)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::view::inputmethod::InputConnectionCallProto*>(
      &::android::view::inputmethod::_InputConnectionCallProto_default_instance_);
}
inline ::android::view::inputmethod::InputConnectionCallProto* InputMethodClientsTraceProto_ClientSideProto::release_input_connection_call() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.input_connection_call)
  _has_bits_[0] &= ~0x00000080u;
  ::android::view::inputmethod::InputConnectionCallProto* temp = input_connection_call_;
  input_connection_call_ = nullptr;
  return temp;
}
inline ::android::view::inputmethod::InputConnectionCallProto* InputMethodClientsTraceProto_ClientSideProto::mutable_input_connection_call() {
  _has_bits_[0] |= 0x00000080u;
  if (input_connection_call_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::view::inputmethod::InputConnectionCallProto>(GetArenaNoVirtual());
    input_connection_call_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.input_connection_call)
  return input_connection_call_;
}
inline void InputMethodClientsTraceProto_ClientSideProto::set_allocated_input_connection_call(::android::view::inputmethod::InputConnectionCallProto* input_connection_call) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(input_connection_call_);
  }
  if (input_connection_call) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      input_connection_call = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, input_connection_call, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  input_connection_call_ = input_connection_call;
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto.input_connection_call)
}

// -------------------------------------------------------------------

// InputMethodClientsTraceProto

// optional fixed64 elapsed_realtime_nanos = 1;
inline bool InputMethodClientsTraceProto::has_elapsed_realtime_nanos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InputMethodClientsTraceProto::clear_elapsed_realtime_nanos() {
  elapsed_realtime_nanos_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 InputMethodClientsTraceProto::elapsed_realtime_nanos() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodClientsTraceProto.elapsed_realtime_nanos)
  return elapsed_realtime_nanos_;
}
inline void InputMethodClientsTraceProto::set_elapsed_realtime_nanos(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  elapsed_realtime_nanos_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodClientsTraceProto.elapsed_realtime_nanos)
}

// optional string where = 2;
inline bool InputMethodClientsTraceProto::has_where() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputMethodClientsTraceProto::clear_where() {
  where_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InputMethodClientsTraceProto::where() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodClientsTraceProto.where)
  return where_.GetNoArena();
}
inline void InputMethodClientsTraceProto::set_where(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  where_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodClientsTraceProto.where)
}
inline void InputMethodClientsTraceProto::set_where(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  where_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.view.inputmethod.InputMethodClientsTraceProto.where)
}
inline void InputMethodClientsTraceProto::set_where(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  where_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.view.inputmethod.InputMethodClientsTraceProto.where)
}
inline void InputMethodClientsTraceProto::set_where(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  where_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.view.inputmethod.InputMethodClientsTraceProto.where)
}
inline std::string* InputMethodClientsTraceProto::mutable_where() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodClientsTraceProto.where)
  return where_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputMethodClientsTraceProto::release_where() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodClientsTraceProto.where)
  if (!has_where()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return where_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputMethodClientsTraceProto::set_allocated_where(std::string* where) {
  if (where != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  where_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), where);
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodClientsTraceProto.where)
}

// optional .android.view.inputmethod.InputMethodClientsTraceProto.ClientSideProto client = 3;
inline bool InputMethodClientsTraceProto::has_client() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputMethodClientsTraceProto::clear_client() {
  if (client_ != nullptr) client_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto& InputMethodClientsTraceProto::client() const {
  const ::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto* p = client_;
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodClientsTraceProto.client)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto*>(
      &::android::view::inputmethod::_InputMethodClientsTraceProto_ClientSideProto_default_instance_);
}
inline ::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto* InputMethodClientsTraceProto::release_client() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodClientsTraceProto.client)
  _has_bits_[0] &= ~0x00000002u;
  ::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto* temp = client_;
  client_ = nullptr;
  return temp;
}
inline ::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto* InputMethodClientsTraceProto::mutable_client() {
  _has_bits_[0] |= 0x00000002u;
  if (client_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto>(GetArenaNoVirtual());
    client_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodClientsTraceProto.client)
  return client_;
}
inline void InputMethodClientsTraceProto::set_allocated_client(::android::view::inputmethod::InputMethodClientsTraceProto_ClientSideProto* client) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete client_;
  }
  if (client) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      client = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, client, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  client_ = client;
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodClientsTraceProto.client)
}

// -------------------------------------------------------------------

// InputMethodServiceTraceFileProto

// optional fixed64 magic_number = 1;
inline bool InputMethodServiceTraceFileProto::has_magic_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputMethodServiceTraceFileProto::clear_magic_number() {
  magic_number_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 InputMethodServiceTraceFileProto::magic_number() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodServiceTraceFileProto.magic_number)
  return magic_number_;
}
inline void InputMethodServiceTraceFileProto::set_magic_number(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  magic_number_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodServiceTraceFileProto.magic_number)
}

// repeated .android.view.inputmethod.InputMethodServiceTraceProto entry = 2;
inline int InputMethodServiceTraceFileProto::entry_size() const {
  return entry_.size();
}
inline void InputMethodServiceTraceFileProto::clear_entry() {
  entry_.Clear();
}
inline ::android::view::inputmethod::InputMethodServiceTraceProto* InputMethodServiceTraceFileProto::mutable_entry(int index) {
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodServiceTraceFileProto.entry)
  return entry_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodServiceTraceProto >*
InputMethodServiceTraceFileProto::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:android.view.inputmethod.InputMethodServiceTraceFileProto.entry)
  return &entry_;
}
inline const ::android::view::inputmethod::InputMethodServiceTraceProto& InputMethodServiceTraceFileProto::entry(int index) const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodServiceTraceFileProto.entry)
  return entry_.Get(index);
}
inline ::android::view::inputmethod::InputMethodServiceTraceProto* InputMethodServiceTraceFileProto::add_entry() {
  // @@protoc_insertion_point(field_add:android.view.inputmethod.InputMethodServiceTraceFileProto.entry)
  return entry_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodServiceTraceProto >&
InputMethodServiceTraceFileProto::entry() const {
  // @@protoc_insertion_point(field_list:android.view.inputmethod.InputMethodServiceTraceFileProto.entry)
  return entry_;
}

// -------------------------------------------------------------------

// InputMethodServiceTraceProto

// optional fixed64 elapsed_realtime_nanos = 1;
inline bool InputMethodServiceTraceProto::has_elapsed_realtime_nanos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InputMethodServiceTraceProto::clear_elapsed_realtime_nanos() {
  elapsed_realtime_nanos_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 InputMethodServiceTraceProto::elapsed_realtime_nanos() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodServiceTraceProto.elapsed_realtime_nanos)
  return elapsed_realtime_nanos_;
}
inline void InputMethodServiceTraceProto::set_elapsed_realtime_nanos(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  elapsed_realtime_nanos_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodServiceTraceProto.elapsed_realtime_nanos)
}

// optional string where = 2;
inline bool InputMethodServiceTraceProto::has_where() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputMethodServiceTraceProto::clear_where() {
  where_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InputMethodServiceTraceProto::where() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodServiceTraceProto.where)
  return where_.GetNoArena();
}
inline void InputMethodServiceTraceProto::set_where(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  where_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodServiceTraceProto.where)
}
inline void InputMethodServiceTraceProto::set_where(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  where_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.view.inputmethod.InputMethodServiceTraceProto.where)
}
inline void InputMethodServiceTraceProto::set_where(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  where_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.view.inputmethod.InputMethodServiceTraceProto.where)
}
inline void InputMethodServiceTraceProto::set_where(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  where_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.view.inputmethod.InputMethodServiceTraceProto.where)
}
inline std::string* InputMethodServiceTraceProto::mutable_where() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodServiceTraceProto.where)
  return where_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputMethodServiceTraceProto::release_where() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodServiceTraceProto.where)
  if (!has_where()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return where_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputMethodServiceTraceProto::set_allocated_where(std::string* where) {
  if (where != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  where_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), where);
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodServiceTraceProto.where)
}

// optional .android.inputmethodservice.InputMethodServiceProto input_method_service = 3;
inline bool InputMethodServiceTraceProto::has_input_method_service() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::android::inputmethodservice::InputMethodServiceProto& InputMethodServiceTraceProto::input_method_service() const {
  const ::android::inputmethodservice::InputMethodServiceProto* p = input_method_service_;
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodServiceTraceProto.input_method_service)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::inputmethodservice::InputMethodServiceProto*>(
      &::android::inputmethodservice::_InputMethodServiceProto_default_instance_);
}
inline ::android::inputmethodservice::InputMethodServiceProto* InputMethodServiceTraceProto::release_input_method_service() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodServiceTraceProto.input_method_service)
  _has_bits_[0] &= ~0x00000002u;
  ::android::inputmethodservice::InputMethodServiceProto* temp = input_method_service_;
  input_method_service_ = nullptr;
  return temp;
}
inline ::android::inputmethodservice::InputMethodServiceProto* InputMethodServiceTraceProto::mutable_input_method_service() {
  _has_bits_[0] |= 0x00000002u;
  if (input_method_service_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::inputmethodservice::InputMethodServiceProto>(GetArenaNoVirtual());
    input_method_service_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodServiceTraceProto.input_method_service)
  return input_method_service_;
}
inline void InputMethodServiceTraceProto::set_allocated_input_method_service(::android::inputmethodservice::InputMethodServiceProto* input_method_service) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(input_method_service_);
  }
  if (input_method_service) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      input_method_service = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, input_method_service, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  input_method_service_ = input_method_service;
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodServiceTraceProto.input_method_service)
}

// -------------------------------------------------------------------

// InputMethodManagerServiceTraceFileProto

// optional fixed64 magic_number = 1;
inline bool InputMethodManagerServiceTraceFileProto::has_magic_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputMethodManagerServiceTraceFileProto::clear_magic_number() {
  magic_number_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 InputMethodManagerServiceTraceFileProto::magic_number() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodManagerServiceTraceFileProto.magic_number)
  return magic_number_;
}
inline void InputMethodManagerServiceTraceFileProto::set_magic_number(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  magic_number_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodManagerServiceTraceFileProto.magic_number)
}

// repeated .android.view.inputmethod.InputMethodManagerServiceTraceProto entry = 2;
inline int InputMethodManagerServiceTraceFileProto::entry_size() const {
  return entry_.size();
}
inline void InputMethodManagerServiceTraceFileProto::clear_entry() {
  entry_.Clear();
}
inline ::android::view::inputmethod::InputMethodManagerServiceTraceProto* InputMethodManagerServiceTraceFileProto::mutable_entry(int index) {
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodManagerServiceTraceFileProto.entry)
  return entry_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodManagerServiceTraceProto >*
InputMethodManagerServiceTraceFileProto::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:android.view.inputmethod.InputMethodManagerServiceTraceFileProto.entry)
  return &entry_;
}
inline const ::android::view::inputmethod::InputMethodManagerServiceTraceProto& InputMethodManagerServiceTraceFileProto::entry(int index) const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodManagerServiceTraceFileProto.entry)
  return entry_.Get(index);
}
inline ::android::view::inputmethod::InputMethodManagerServiceTraceProto* InputMethodManagerServiceTraceFileProto::add_entry() {
  // @@protoc_insertion_point(field_add:android.view.inputmethod.InputMethodManagerServiceTraceFileProto.entry)
  return entry_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::view::inputmethod::InputMethodManagerServiceTraceProto >&
InputMethodManagerServiceTraceFileProto::entry() const {
  // @@protoc_insertion_point(field_list:android.view.inputmethod.InputMethodManagerServiceTraceFileProto.entry)
  return entry_;
}

// -------------------------------------------------------------------

// InputMethodManagerServiceTraceProto

// optional fixed64 elapsed_realtime_nanos = 1;
inline bool InputMethodManagerServiceTraceProto::has_elapsed_realtime_nanos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InputMethodManagerServiceTraceProto::clear_elapsed_realtime_nanos() {
  elapsed_realtime_nanos_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 InputMethodManagerServiceTraceProto::elapsed_realtime_nanos() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodManagerServiceTraceProto.elapsed_realtime_nanos)
  return elapsed_realtime_nanos_;
}
inline void InputMethodManagerServiceTraceProto::set_elapsed_realtime_nanos(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  elapsed_realtime_nanos_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodManagerServiceTraceProto.elapsed_realtime_nanos)
}

// optional string where = 2;
inline bool InputMethodManagerServiceTraceProto::has_where() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputMethodManagerServiceTraceProto::clear_where() {
  where_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& InputMethodManagerServiceTraceProto::where() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodManagerServiceTraceProto.where)
  return where_.GetNoArena();
}
inline void InputMethodManagerServiceTraceProto::set_where(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  where_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.view.inputmethod.InputMethodManagerServiceTraceProto.where)
}
inline void InputMethodManagerServiceTraceProto::set_where(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  where_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.view.inputmethod.InputMethodManagerServiceTraceProto.where)
}
inline void InputMethodManagerServiceTraceProto::set_where(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  where_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.view.inputmethod.InputMethodManagerServiceTraceProto.where)
}
inline void InputMethodManagerServiceTraceProto::set_where(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  where_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.view.inputmethod.InputMethodManagerServiceTraceProto.where)
}
inline std::string* InputMethodManagerServiceTraceProto::mutable_where() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodManagerServiceTraceProto.where)
  return where_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputMethodManagerServiceTraceProto::release_where() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodManagerServiceTraceProto.where)
  if (!has_where()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return where_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputMethodManagerServiceTraceProto::set_allocated_where(std::string* where) {
  if (where != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  where_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), where);
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodManagerServiceTraceProto.where)
}

// optional .android.server.inputmethod.InputMethodManagerServiceProto input_method_manager_service = 3;
inline bool InputMethodManagerServiceTraceProto::has_input_method_manager_service() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::android::server::inputmethod::InputMethodManagerServiceProto& InputMethodManagerServiceTraceProto::input_method_manager_service() const {
  const ::android::server::inputmethod::InputMethodManagerServiceProto* p = input_method_manager_service_;
  // @@protoc_insertion_point(field_get:android.view.inputmethod.InputMethodManagerServiceTraceProto.input_method_manager_service)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::server::inputmethod::InputMethodManagerServiceProto*>(
      &::android::server::inputmethod::_InputMethodManagerServiceProto_default_instance_);
}
inline ::android::server::inputmethod::InputMethodManagerServiceProto* InputMethodManagerServiceTraceProto::release_input_method_manager_service() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.InputMethodManagerServiceTraceProto.input_method_manager_service)
  _has_bits_[0] &= ~0x00000002u;
  ::android::server::inputmethod::InputMethodManagerServiceProto* temp = input_method_manager_service_;
  input_method_manager_service_ = nullptr;
  return temp;
}
inline ::android::server::inputmethod::InputMethodManagerServiceProto* InputMethodManagerServiceTraceProto::mutable_input_method_manager_service() {
  _has_bits_[0] |= 0x00000002u;
  if (input_method_manager_service_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::server::inputmethod::InputMethodManagerServiceProto>(GetArenaNoVirtual());
    input_method_manager_service_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.InputMethodManagerServiceTraceProto.input_method_manager_service)
  return input_method_manager_service_;
}
inline void InputMethodManagerServiceTraceProto::set_allocated_input_method_manager_service(::android::server::inputmethod::InputMethodManagerServiceProto* input_method_manager_service) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(input_method_manager_service_);
  }
  if (input_method_manager_service) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      input_method_manager_service = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, input_method_manager_service, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  input_method_manager_service_ = input_method_manager_service;
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputMethodManagerServiceTraceProto.input_method_manager_service)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace inputmethod
}  // namespace view
}  // namespace android

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::android::view::inputmethod::InputMethodClientsTraceFileProto_MagicNumber> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::android::view::inputmethod::InputMethodClientsTraceFileProto_MagicNumber>() {
  return ::android::view::inputmethod::InputMethodClientsTraceFileProto_MagicNumber_descriptor();
}
template <> struct is_proto_enum< ::android::view::inputmethod::InputMethodServiceTraceFileProto_MagicNumber> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::android::view::inputmethod::InputMethodServiceTraceFileProto_MagicNumber>() {
  return ::android::view::inputmethod::InputMethodServiceTraceFileProto_MagicNumber_descriptor();
}
template <> struct is_proto_enum< ::android::view::inputmethod::InputMethodManagerServiceTraceFileProto_MagicNumber> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::android::view::inputmethod::InputMethodManagerServiceTraceFileProto_MagicNumber>() {
  return ::android::view::inputmethod::InputMethodManagerServiceTraceFileProto_MagicNumber_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputmethodeditortrace_2eproto
