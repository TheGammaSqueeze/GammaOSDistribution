// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/usagestatsservice_v2.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/content/configuration.pb.h"
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[11]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
namespace com {
namespace android {
namespace server {
namespace usage {
class EventObfuscatedProto;
class EventObfuscatedProtoDefaultTypeInternal;
extern EventObfuscatedProtoDefaultTypeInternal _EventObfuscatedProto_default_instance_;
class IntervalStatsObfuscatedProto;
class IntervalStatsObfuscatedProtoDefaultTypeInternal;
extern IntervalStatsObfuscatedProtoDefaultTypeInternal _IntervalStatsObfuscatedProto_default_instance_;
class IntervalStatsObfuscatedProto_Configuration;
class IntervalStatsObfuscatedProto_ConfigurationDefaultTypeInternal;
extern IntervalStatsObfuscatedProto_ConfigurationDefaultTypeInternal _IntervalStatsObfuscatedProto_Configuration_default_instance_;
class IntervalStatsObfuscatedProto_CountAndTime;
class IntervalStatsObfuscatedProto_CountAndTimeDefaultTypeInternal;
extern IntervalStatsObfuscatedProto_CountAndTimeDefaultTypeInternal _IntervalStatsObfuscatedProto_CountAndTime_default_instance_;
class IntervalStatsObfuscatedProto_PackageUsage;
class IntervalStatsObfuscatedProto_PackageUsageDefaultTypeInternal;
extern IntervalStatsObfuscatedProto_PackageUsageDefaultTypeInternal _IntervalStatsObfuscatedProto_PackageUsage_default_instance_;
class ObfuscatedPackagesProto;
class ObfuscatedPackagesProtoDefaultTypeInternal;
extern ObfuscatedPackagesProtoDefaultTypeInternal _ObfuscatedPackagesProto_default_instance_;
class ObfuscatedPackagesProto_PackagesMap;
class ObfuscatedPackagesProto_PackagesMapDefaultTypeInternal;
extern ObfuscatedPackagesProto_PackagesMapDefaultTypeInternal _ObfuscatedPackagesProto_PackagesMap_default_instance_;
class PendingEventProto;
class PendingEventProtoDefaultTypeInternal;
extern PendingEventProtoDefaultTypeInternal _PendingEventProto_default_instance_;
class UsageStatsObfuscatedProto;
class UsageStatsObfuscatedProtoDefaultTypeInternal;
extern UsageStatsObfuscatedProtoDefaultTypeInternal _UsageStatsObfuscatedProto_default_instance_;
class UsageStatsObfuscatedProto_ChooserAction;
class UsageStatsObfuscatedProto_ChooserActionDefaultTypeInternal;
extern UsageStatsObfuscatedProto_ChooserActionDefaultTypeInternal _UsageStatsObfuscatedProto_ChooserAction_default_instance_;
class UsageStatsObfuscatedProto_ChooserAction_CategoryCount;
class UsageStatsObfuscatedProto_ChooserAction_CategoryCountDefaultTypeInternal;
extern UsageStatsObfuscatedProto_ChooserAction_CategoryCountDefaultTypeInternal _UsageStatsObfuscatedProto_ChooserAction_CategoryCount_default_instance_;
}  // namespace usage
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::android::server::usage::EventObfuscatedProto* Arena::CreateMaybeMessage<::com::android::server::usage::EventObfuscatedProto>(Arena*);
template<> ::com::android::server::usage::IntervalStatsObfuscatedProto* Arena::CreateMaybeMessage<::com::android::server::usage::IntervalStatsObfuscatedProto>(Arena*);
template<> ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration* Arena::CreateMaybeMessage<::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration>(Arena*);
template<> ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* Arena::CreateMaybeMessage<::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime>(Arena*);
template<> ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage* Arena::CreateMaybeMessage<::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage>(Arena*);
template<> ::com::android::server::usage::ObfuscatedPackagesProto* Arena::CreateMaybeMessage<::com::android::server::usage::ObfuscatedPackagesProto>(Arena*);
template<> ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap* Arena::CreateMaybeMessage<::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap>(Arena*);
template<> ::com::android::server::usage::PendingEventProto* Arena::CreateMaybeMessage<::com::android::server::usage::PendingEventProto>(Arena*);
template<> ::com::android::server::usage::UsageStatsObfuscatedProto* Arena::CreateMaybeMessage<::com::android::server::usage::UsageStatsObfuscatedProto>(Arena*);
template<> ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction* Arena::CreateMaybeMessage<::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction>(Arena*);
template<> ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount* Arena::CreateMaybeMessage<::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace android {
namespace server {
namespace usage {

// ===================================================================

class IntervalStatsObfuscatedProto_CountAndTime :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime) */ {
 public:
  IntervalStatsObfuscatedProto_CountAndTime();
  virtual ~IntervalStatsObfuscatedProto_CountAndTime();

  IntervalStatsObfuscatedProto_CountAndTime(const IntervalStatsObfuscatedProto_CountAndTime& from);
  IntervalStatsObfuscatedProto_CountAndTime(IntervalStatsObfuscatedProto_CountAndTime&& from) noexcept
    : IntervalStatsObfuscatedProto_CountAndTime() {
    *this = ::std::move(from);
  }

  inline IntervalStatsObfuscatedProto_CountAndTime& operator=(const IntervalStatsObfuscatedProto_CountAndTime& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntervalStatsObfuscatedProto_CountAndTime& operator=(IntervalStatsObfuscatedProto_CountAndTime&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IntervalStatsObfuscatedProto_CountAndTime& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntervalStatsObfuscatedProto_CountAndTime* internal_default_instance() {
    return reinterpret_cast<const IntervalStatsObfuscatedProto_CountAndTime*>(
               &_IntervalStatsObfuscatedProto_CountAndTime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IntervalStatsObfuscatedProto_CountAndTime& a, IntervalStatsObfuscatedProto_CountAndTime& b) {
    a.Swap(&b);
  }
  inline void Swap(IntervalStatsObfuscatedProto_CountAndTime* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IntervalStatsObfuscatedProto_CountAndTime* New() const final {
    return CreateMaybeMessage<IntervalStatsObfuscatedProto_CountAndTime>(nullptr);
  }

  IntervalStatsObfuscatedProto_CountAndTime* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IntervalStatsObfuscatedProto_CountAndTime>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IntervalStatsObfuscatedProto_CountAndTime& from);
  void MergeFrom(const IntervalStatsObfuscatedProto_CountAndTime& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntervalStatsObfuscatedProto_CountAndTime* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeMsFieldNumber = 2,
    kCountFieldNumber = 1,
  };
  // optional int64 time_ms = 2;
  bool has_time_ms() const;
  void clear_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_ms() const;
  void set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 count = 1;
  bool has_count() const;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
};
// -------------------------------------------------------------------

class IntervalStatsObfuscatedProto_Configuration :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration) */ {
 public:
  IntervalStatsObfuscatedProto_Configuration();
  virtual ~IntervalStatsObfuscatedProto_Configuration();

  IntervalStatsObfuscatedProto_Configuration(const IntervalStatsObfuscatedProto_Configuration& from);
  IntervalStatsObfuscatedProto_Configuration(IntervalStatsObfuscatedProto_Configuration&& from) noexcept
    : IntervalStatsObfuscatedProto_Configuration() {
    *this = ::std::move(from);
  }

  inline IntervalStatsObfuscatedProto_Configuration& operator=(const IntervalStatsObfuscatedProto_Configuration& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntervalStatsObfuscatedProto_Configuration& operator=(IntervalStatsObfuscatedProto_Configuration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IntervalStatsObfuscatedProto_Configuration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntervalStatsObfuscatedProto_Configuration* internal_default_instance() {
    return reinterpret_cast<const IntervalStatsObfuscatedProto_Configuration*>(
               &_IntervalStatsObfuscatedProto_Configuration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(IntervalStatsObfuscatedProto_Configuration& a, IntervalStatsObfuscatedProto_Configuration& b) {
    a.Swap(&b);
  }
  inline void Swap(IntervalStatsObfuscatedProto_Configuration* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IntervalStatsObfuscatedProto_Configuration* New() const final {
    return CreateMaybeMessage<IntervalStatsObfuscatedProto_Configuration>(nullptr);
  }

  IntervalStatsObfuscatedProto_Configuration* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IntervalStatsObfuscatedProto_Configuration>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IntervalStatsObfuscatedProto_Configuration& from);
  void MergeFrom(const IntervalStatsObfuscatedProto_Configuration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntervalStatsObfuscatedProto_Configuration* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.usage.IntervalStatsObfuscatedProto.Configuration";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigFieldNumber = 1,
    kLastTimeActiveMsFieldNumber = 2,
    kTotalTimeActiveMsFieldNumber = 3,
    kCountFieldNumber = 4,
    kActiveFieldNumber = 5,
  };
  // optional .android.content.ConfigurationProto config = 1;
  bool has_config() const;
  void clear_config();
  const ::android::content::ConfigurationProto& config() const;
  ::android::content::ConfigurationProto* release_config();
  ::android::content::ConfigurationProto* mutable_config();
  void set_allocated_config(::android::content::ConfigurationProto* config);

  // optional int64 last_time_active_ms = 2;
  bool has_last_time_active_ms() const;
  void clear_last_time_active_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 last_time_active_ms() const;
  void set_last_time_active_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 total_time_active_ms = 3;
  bool has_total_time_active_ms() const;
  void clear_total_time_active_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 total_time_active_ms() const;
  void set_total_time_active_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 count = 4;
  bool has_count() const;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool active = 5;
  bool has_active() const;
  void clear_active();
  bool active() const;
  void set_active(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::content::ConfigurationProto* config_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_time_active_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_time_active_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  bool active_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
};
// -------------------------------------------------------------------

class IntervalStatsObfuscatedProto_PackageUsage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage) */ {
 public:
  IntervalStatsObfuscatedProto_PackageUsage();
  virtual ~IntervalStatsObfuscatedProto_PackageUsage();

  IntervalStatsObfuscatedProto_PackageUsage(const IntervalStatsObfuscatedProto_PackageUsage& from);
  IntervalStatsObfuscatedProto_PackageUsage(IntervalStatsObfuscatedProto_PackageUsage&& from) noexcept
    : IntervalStatsObfuscatedProto_PackageUsage() {
    *this = ::std::move(from);
  }

  inline IntervalStatsObfuscatedProto_PackageUsage& operator=(const IntervalStatsObfuscatedProto_PackageUsage& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntervalStatsObfuscatedProto_PackageUsage& operator=(IntervalStatsObfuscatedProto_PackageUsage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IntervalStatsObfuscatedProto_PackageUsage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntervalStatsObfuscatedProto_PackageUsage* internal_default_instance() {
    return reinterpret_cast<const IntervalStatsObfuscatedProto_PackageUsage*>(
               &_IntervalStatsObfuscatedProto_PackageUsage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(IntervalStatsObfuscatedProto_PackageUsage& a, IntervalStatsObfuscatedProto_PackageUsage& b) {
    a.Swap(&b);
  }
  inline void Swap(IntervalStatsObfuscatedProto_PackageUsage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IntervalStatsObfuscatedProto_PackageUsage* New() const final {
    return CreateMaybeMessage<IntervalStatsObfuscatedProto_PackageUsage>(nullptr);
  }

  IntervalStatsObfuscatedProto_PackageUsage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IntervalStatsObfuscatedProto_PackageUsage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IntervalStatsObfuscatedProto_PackageUsage& from);
  void MergeFrom(const IntervalStatsObfuscatedProto_PackageUsage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntervalStatsObfuscatedProto_PackageUsage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPackageNameFieldNumber = 1,
    kTimeMsFieldNumber = 2,
  };
  // optional string package_name = 1;
  bool has_package_name() const;
  void clear_package_name();
  const std::string& package_name() const;
  void set_package_name(const std::string& value);
  void set_package_name(std::string&& value);
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  std::string* mutable_package_name();
  std::string* release_package_name();
  void set_allocated_package_name(std::string* package_name);

  // optional int64 time_ms = 2;
  bool has_time_ms() const;
  void clear_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_ms() const;
  void set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr package_name_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_ms_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
};
// -------------------------------------------------------------------

class IntervalStatsObfuscatedProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.usage.IntervalStatsObfuscatedProto) */ {
 public:
  IntervalStatsObfuscatedProto();
  virtual ~IntervalStatsObfuscatedProto();

  IntervalStatsObfuscatedProto(const IntervalStatsObfuscatedProto& from);
  IntervalStatsObfuscatedProto(IntervalStatsObfuscatedProto&& from) noexcept
    : IntervalStatsObfuscatedProto() {
    *this = ::std::move(from);
  }

  inline IntervalStatsObfuscatedProto& operator=(const IntervalStatsObfuscatedProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntervalStatsObfuscatedProto& operator=(IntervalStatsObfuscatedProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IntervalStatsObfuscatedProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntervalStatsObfuscatedProto* internal_default_instance() {
    return reinterpret_cast<const IntervalStatsObfuscatedProto*>(
               &_IntervalStatsObfuscatedProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(IntervalStatsObfuscatedProto& a, IntervalStatsObfuscatedProto& b) {
    a.Swap(&b);
  }
  inline void Swap(IntervalStatsObfuscatedProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IntervalStatsObfuscatedProto* New() const final {
    return CreateMaybeMessage<IntervalStatsObfuscatedProto>(nullptr);
  }

  IntervalStatsObfuscatedProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IntervalStatsObfuscatedProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IntervalStatsObfuscatedProto& from);
  void MergeFrom(const IntervalStatsObfuscatedProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntervalStatsObfuscatedProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.usage.IntervalStatsObfuscatedProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef IntervalStatsObfuscatedProto_CountAndTime CountAndTime;
  typedef IntervalStatsObfuscatedProto_Configuration Configuration;
  typedef IntervalStatsObfuscatedProto_PackageUsage PackageUsage;

  // accessors -------------------------------------------------------

  enum : int {
    kPackagesFieldNumber = 20,
    kConfigurationsFieldNumber = 21,
    kEventLogFieldNumber = 22,
    kPendingEventsFieldNumber = 23,
    kPackageUsageFieldNumber = 24,
    kInteractiveFieldNumber = 10,
    kNonInteractiveFieldNumber = 11,
    kKeyguardShownFieldNumber = 12,
    kKeyguardHiddenFieldNumber = 13,
    kEndTimeMsFieldNumber = 1,
    kMajorVersionFieldNumber = 2,
    kMinorVersionFieldNumber = 3,
  };
  // repeated .com.android.server.usage.UsageStatsObfuscatedProto packages = 20;
  int packages_size() const;
  void clear_packages();
  ::com::android::server::usage::UsageStatsObfuscatedProto* mutable_packages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto >*
      mutable_packages();
  const ::com::android::server::usage::UsageStatsObfuscatedProto& packages(int index) const;
  ::com::android::server::usage::UsageStatsObfuscatedProto* add_packages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto >&
      packages() const;

  // repeated .com.android.server.usage.IntervalStatsObfuscatedProto.Configuration configurations = 21;
  int configurations_size() const;
  void clear_configurations();
  ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration* mutable_configurations(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration >*
      mutable_configurations();
  const ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration& configurations(int index) const;
  ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration* add_configurations();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration >&
      configurations() const;

  // repeated .com.android.server.usage.EventObfuscatedProto event_log = 22;
  int event_log_size() const;
  void clear_event_log();
  ::com::android::server::usage::EventObfuscatedProto* mutable_event_log(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::EventObfuscatedProto >*
      mutable_event_log();
  const ::com::android::server::usage::EventObfuscatedProto& event_log(int index) const;
  ::com::android::server::usage::EventObfuscatedProto* add_event_log();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::EventObfuscatedProto >&
      event_log() const;

  // repeated .com.android.server.usage.PendingEventProto pending_events = 23;
  int pending_events_size() const;
  void clear_pending_events();
  ::com::android::server::usage::PendingEventProto* mutable_pending_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::PendingEventProto >*
      mutable_pending_events();
  const ::com::android::server::usage::PendingEventProto& pending_events(int index) const;
  ::com::android::server::usage::PendingEventProto* add_pending_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::PendingEventProto >&
      pending_events() const;

  // repeated .com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage package_usage = 24;
  int package_usage_size() const;
  void clear_package_usage();
  ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage* mutable_package_usage(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage >*
      mutable_package_usage();
  const ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage& package_usage(int index) const;
  ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage* add_package_usage();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage >&
      package_usage() const;

  // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime interactive = 10;
  bool has_interactive() const;
  void clear_interactive();
  const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime& interactive() const;
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* release_interactive();
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* mutable_interactive();
  void set_allocated_interactive(::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* interactive);

  // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime non_interactive = 11;
  bool has_non_interactive() const;
  void clear_non_interactive();
  const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime& non_interactive() const;
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* release_non_interactive();
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* mutable_non_interactive();
  void set_allocated_non_interactive(::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* non_interactive);

  // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime keyguard_shown = 12;
  bool has_keyguard_shown() const;
  void clear_keyguard_shown();
  const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime& keyguard_shown() const;
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* release_keyguard_shown();
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* mutable_keyguard_shown();
  void set_allocated_keyguard_shown(::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* keyguard_shown);

  // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime keyguard_hidden = 13;
  bool has_keyguard_hidden() const;
  void clear_keyguard_hidden();
  const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime& keyguard_hidden() const;
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* release_keyguard_hidden();
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* mutable_keyguard_hidden();
  void set_allocated_keyguard_hidden(::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* keyguard_hidden);

  // optional int64 end_time_ms = 1;
  bool has_end_time_ms() const;
  void clear_end_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 end_time_ms() const;
  void set_end_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 major_version = 2;
  bool has_major_version() const;
  void clear_major_version();
  ::PROTOBUF_NAMESPACE_ID::int32 major_version() const;
  void set_major_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 minor_version = 3;
  bool has_minor_version() const;
  void clear_minor_version();
  ::PROTOBUF_NAMESPACE_ID::int32 minor_version() const;
  void set_minor_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.usage.IntervalStatsObfuscatedProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto > packages_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration > configurations_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::EventObfuscatedProto > event_log_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::PendingEventProto > pending_events_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage > package_usage_;
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* interactive_;
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* non_interactive_;
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* keyguard_shown_;
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* keyguard_hidden_;
  ::PROTOBUF_NAMESPACE_ID::int64 end_time_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 major_version_;
  ::PROTOBUF_NAMESPACE_ID::int32 minor_version_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
};
// -------------------------------------------------------------------

class UsageStatsObfuscatedProto_ChooserAction_CategoryCount :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount) */ {
 public:
  UsageStatsObfuscatedProto_ChooserAction_CategoryCount();
  virtual ~UsageStatsObfuscatedProto_ChooserAction_CategoryCount();

  UsageStatsObfuscatedProto_ChooserAction_CategoryCount(const UsageStatsObfuscatedProto_ChooserAction_CategoryCount& from);
  UsageStatsObfuscatedProto_ChooserAction_CategoryCount(UsageStatsObfuscatedProto_ChooserAction_CategoryCount&& from) noexcept
    : UsageStatsObfuscatedProto_ChooserAction_CategoryCount() {
    *this = ::std::move(from);
  }

  inline UsageStatsObfuscatedProto_ChooserAction_CategoryCount& operator=(const UsageStatsObfuscatedProto_ChooserAction_CategoryCount& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsageStatsObfuscatedProto_ChooserAction_CategoryCount& operator=(UsageStatsObfuscatedProto_ChooserAction_CategoryCount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsageStatsObfuscatedProto_ChooserAction_CategoryCount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsageStatsObfuscatedProto_ChooserAction_CategoryCount* internal_default_instance() {
    return reinterpret_cast<const UsageStatsObfuscatedProto_ChooserAction_CategoryCount*>(
               &_UsageStatsObfuscatedProto_ChooserAction_CategoryCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(UsageStatsObfuscatedProto_ChooserAction_CategoryCount& a, UsageStatsObfuscatedProto_ChooserAction_CategoryCount& b) {
    a.Swap(&b);
  }
  inline void Swap(UsageStatsObfuscatedProto_ChooserAction_CategoryCount* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsageStatsObfuscatedProto_ChooserAction_CategoryCount* New() const final {
    return CreateMaybeMessage<UsageStatsObfuscatedProto_ChooserAction_CategoryCount>(nullptr);
  }

  UsageStatsObfuscatedProto_ChooserAction_CategoryCount* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsageStatsObfuscatedProto_ChooserAction_CategoryCount>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsageStatsObfuscatedProto_ChooserAction_CategoryCount& from);
  void MergeFrom(const UsageStatsObfuscatedProto_ChooserAction_CategoryCount& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsageStatsObfuscatedProto_ChooserAction_CategoryCount* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCategoryTokenFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // optional int32 category_token = 1;
  bool has_category_token() const;
  void clear_category_token();
  ::PROTOBUF_NAMESPACE_ID::int32 category_token() const;
  void set_category_token(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 count = 2;
  bool has_count() const;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 category_token_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
};
// -------------------------------------------------------------------

class UsageStatsObfuscatedProto_ChooserAction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction) */ {
 public:
  UsageStatsObfuscatedProto_ChooserAction();
  virtual ~UsageStatsObfuscatedProto_ChooserAction();

  UsageStatsObfuscatedProto_ChooserAction(const UsageStatsObfuscatedProto_ChooserAction& from);
  UsageStatsObfuscatedProto_ChooserAction(UsageStatsObfuscatedProto_ChooserAction&& from) noexcept
    : UsageStatsObfuscatedProto_ChooserAction() {
    *this = ::std::move(from);
  }

  inline UsageStatsObfuscatedProto_ChooserAction& operator=(const UsageStatsObfuscatedProto_ChooserAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsageStatsObfuscatedProto_ChooserAction& operator=(UsageStatsObfuscatedProto_ChooserAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsageStatsObfuscatedProto_ChooserAction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsageStatsObfuscatedProto_ChooserAction* internal_default_instance() {
    return reinterpret_cast<const UsageStatsObfuscatedProto_ChooserAction*>(
               &_UsageStatsObfuscatedProto_ChooserAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(UsageStatsObfuscatedProto_ChooserAction& a, UsageStatsObfuscatedProto_ChooserAction& b) {
    a.Swap(&b);
  }
  inline void Swap(UsageStatsObfuscatedProto_ChooserAction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsageStatsObfuscatedProto_ChooserAction* New() const final {
    return CreateMaybeMessage<UsageStatsObfuscatedProto_ChooserAction>(nullptr);
  }

  UsageStatsObfuscatedProto_ChooserAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsageStatsObfuscatedProto_ChooserAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsageStatsObfuscatedProto_ChooserAction& from);
  void MergeFrom(const UsageStatsObfuscatedProto_ChooserAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsageStatsObfuscatedProto_ChooserAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef UsageStatsObfuscatedProto_ChooserAction_CategoryCount CategoryCount;

  // accessors -------------------------------------------------------

  enum : int {
    kCountsFieldNumber = 2,
    kActionTokenFieldNumber = 1,
  };
  // repeated .com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount counts = 2;
  int counts_size() const;
  void clear_counts();
  ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount* mutable_counts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount >*
      mutable_counts();
  const ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount& counts(int index) const;
  ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount* add_counts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount >&
      counts() const;

  // optional int32 action_token = 1;
  bool has_action_token() const;
  void clear_action_token();
  ::PROTOBUF_NAMESPACE_ID::int32 action_token() const;
  void set_action_token(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount > counts_;
  ::PROTOBUF_NAMESPACE_ID::int32 action_token_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
};
// -------------------------------------------------------------------

class UsageStatsObfuscatedProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.usage.UsageStatsObfuscatedProto) */ {
 public:
  UsageStatsObfuscatedProto();
  virtual ~UsageStatsObfuscatedProto();

  UsageStatsObfuscatedProto(const UsageStatsObfuscatedProto& from);
  UsageStatsObfuscatedProto(UsageStatsObfuscatedProto&& from) noexcept
    : UsageStatsObfuscatedProto() {
    *this = ::std::move(from);
  }

  inline UsageStatsObfuscatedProto& operator=(const UsageStatsObfuscatedProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsageStatsObfuscatedProto& operator=(UsageStatsObfuscatedProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UsageStatsObfuscatedProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsageStatsObfuscatedProto* internal_default_instance() {
    return reinterpret_cast<const UsageStatsObfuscatedProto*>(
               &_UsageStatsObfuscatedProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(UsageStatsObfuscatedProto& a, UsageStatsObfuscatedProto& b) {
    a.Swap(&b);
  }
  inline void Swap(UsageStatsObfuscatedProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UsageStatsObfuscatedProto* New() const final {
    return CreateMaybeMessage<UsageStatsObfuscatedProto>(nullptr);
  }

  UsageStatsObfuscatedProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UsageStatsObfuscatedProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UsageStatsObfuscatedProto& from);
  void MergeFrom(const UsageStatsObfuscatedProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsageStatsObfuscatedProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.usage.UsageStatsObfuscatedProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef UsageStatsObfuscatedProto_ChooserAction ChooserAction;

  // accessors -------------------------------------------------------

  enum : int {
    kChooserActionsFieldNumber = 7,
    kLastTimeActiveMsFieldNumber = 3,
    kPackageTokenFieldNumber = 1,
    kLastEventFieldNumber = 5,
    kTotalTimeActiveMsFieldNumber = 4,
    kLastTimeServiceUsedMsFieldNumber = 8,
    kTotalTimeServiceUsedMsFieldNumber = 9,
    kLastTimeVisibleMsFieldNumber = 10,
    kTotalTimeVisibleMsFieldNumber = 11,
    kLastTimeComponentUsedMsFieldNumber = 12,
    kAppLaunchCountFieldNumber = 6,
  };
  // repeated .com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction chooser_actions = 7;
  int chooser_actions_size() const;
  void clear_chooser_actions();
  ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction* mutable_chooser_actions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction >*
      mutable_chooser_actions();
  const ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction& chooser_actions(int index) const;
  ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction* add_chooser_actions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction >&
      chooser_actions() const;

  // optional int64 last_time_active_ms = 3;
  bool has_last_time_active_ms() const;
  void clear_last_time_active_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 last_time_active_ms() const;
  void set_last_time_active_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 package_token = 1;
  bool has_package_token() const;
  void clear_package_token();
  ::PROTOBUF_NAMESPACE_ID::int32 package_token() const;
  void set_package_token(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 last_event = 5;
  bool has_last_event() const;
  void clear_last_event();
  ::PROTOBUF_NAMESPACE_ID::int32 last_event() const;
  void set_last_event(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 total_time_active_ms = 4;
  bool has_total_time_active_ms() const;
  void clear_total_time_active_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 total_time_active_ms() const;
  void set_total_time_active_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 last_time_service_used_ms = 8;
  bool has_last_time_service_used_ms() const;
  void clear_last_time_service_used_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 last_time_service_used_ms() const;
  void set_last_time_service_used_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 total_time_service_used_ms = 9;
  bool has_total_time_service_used_ms() const;
  void clear_total_time_service_used_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 total_time_service_used_ms() const;
  void set_total_time_service_used_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 last_time_visible_ms = 10;
  bool has_last_time_visible_ms() const;
  void clear_last_time_visible_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 last_time_visible_ms() const;
  void set_last_time_visible_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 total_time_visible_ms = 11;
  bool has_total_time_visible_ms() const;
  void clear_total_time_visible_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 total_time_visible_ms() const;
  void set_total_time_visible_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 last_time_component_used_ms = 12;
  bool has_last_time_component_used_ms() const;
  void clear_last_time_component_used_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 last_time_component_used_ms() const;
  void set_last_time_component_used_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 app_launch_count = 6;
  bool has_app_launch_count() const;
  void clear_app_launch_count();
  ::PROTOBUF_NAMESPACE_ID::int32 app_launch_count() const;
  void set_app_launch_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.usage.UsageStatsObfuscatedProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction > chooser_actions_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_time_active_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 package_token_;
  ::PROTOBUF_NAMESPACE_ID::int32 last_event_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_time_active_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_time_service_used_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_time_service_used_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_time_visible_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_time_visible_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_time_component_used_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 app_launch_count_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
};
// -------------------------------------------------------------------

class EventObfuscatedProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.usage.EventObfuscatedProto) */ {
 public:
  EventObfuscatedProto();
  virtual ~EventObfuscatedProto();

  EventObfuscatedProto(const EventObfuscatedProto& from);
  EventObfuscatedProto(EventObfuscatedProto&& from) noexcept
    : EventObfuscatedProto() {
    *this = ::std::move(from);
  }

  inline EventObfuscatedProto& operator=(const EventObfuscatedProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventObfuscatedProto& operator=(EventObfuscatedProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EventObfuscatedProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventObfuscatedProto* internal_default_instance() {
    return reinterpret_cast<const EventObfuscatedProto*>(
               &_EventObfuscatedProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(EventObfuscatedProto& a, EventObfuscatedProto& b) {
    a.Swap(&b);
  }
  inline void Swap(EventObfuscatedProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EventObfuscatedProto* New() const final {
    return CreateMaybeMessage<EventObfuscatedProto>(nullptr);
  }

  EventObfuscatedProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EventObfuscatedProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EventObfuscatedProto& from);
  void MergeFrom(const EventObfuscatedProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventObfuscatedProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.usage.EventObfuscatedProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigFieldNumber = 6,
    kPackageTokenFieldNumber = 1,
    kClassTokenFieldNumber = 2,
    kTimeMsFieldNumber = 3,
    kFlagsFieldNumber = 4,
    kTypeFieldNumber = 5,
    kShortcutIdTokenFieldNumber = 7,
    kStandbyBucketFieldNumber = 8,
    kNotificationChannelIdTokenFieldNumber = 9,
    kInstanceIdFieldNumber = 10,
    kTaskRootPackageTokenFieldNumber = 11,
    kTaskRootClassTokenFieldNumber = 12,
    kLocusIdTokenFieldNumber = 13,
  };
  // optional .android.content.ConfigurationProto config = 6;
  bool has_config() const;
  void clear_config();
  const ::android::content::ConfigurationProto& config() const;
  ::android::content::ConfigurationProto* release_config();
  ::android::content::ConfigurationProto* mutable_config();
  void set_allocated_config(::android::content::ConfigurationProto* config);

  // optional int32 package_token = 1;
  bool has_package_token() const;
  void clear_package_token();
  ::PROTOBUF_NAMESPACE_ID::int32 package_token() const;
  void set_package_token(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 class_token = 2;
  bool has_class_token() const;
  void clear_class_token();
  ::PROTOBUF_NAMESPACE_ID::int32 class_token() const;
  void set_class_token(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 time_ms = 3;
  bool has_time_ms() const;
  void clear_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_ms() const;
  void set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 flags = 4;
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 type = 5;
  bool has_type() const;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 shortcut_id_token = 7;
  bool has_shortcut_id_token() const;
  void clear_shortcut_id_token();
  ::PROTOBUF_NAMESPACE_ID::int32 shortcut_id_token() const;
  void set_shortcut_id_token(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 standby_bucket = 8;
  bool has_standby_bucket() const;
  void clear_standby_bucket();
  ::PROTOBUF_NAMESPACE_ID::int32 standby_bucket() const;
  void set_standby_bucket(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 notification_channel_id_token = 9;
  bool has_notification_channel_id_token() const;
  void clear_notification_channel_id_token();
  ::PROTOBUF_NAMESPACE_ID::int32 notification_channel_id_token() const;
  void set_notification_channel_id_token(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 instance_id = 10;
  bool has_instance_id() const;
  void clear_instance_id();
  ::PROTOBUF_NAMESPACE_ID::int32 instance_id() const;
  void set_instance_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 task_root_package_token = 11;
  bool has_task_root_package_token() const;
  void clear_task_root_package_token();
  ::PROTOBUF_NAMESPACE_ID::int32 task_root_package_token() const;
  void set_task_root_package_token(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 task_root_class_token = 12;
  bool has_task_root_class_token() const;
  void clear_task_root_class_token();
  ::PROTOBUF_NAMESPACE_ID::int32 task_root_class_token() const;
  void set_task_root_class_token(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 locus_id_token = 13;
  bool has_locus_id_token() const;
  void clear_locus_id_token();
  ::PROTOBUF_NAMESPACE_ID::int32 locus_id_token() const;
  void set_locus_id_token(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.usage.EventObfuscatedProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::content::ConfigurationProto* config_;
  ::PROTOBUF_NAMESPACE_ID::int32 package_token_;
  ::PROTOBUF_NAMESPACE_ID::int32 class_token_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 shortcut_id_token_;
  ::PROTOBUF_NAMESPACE_ID::int32 standby_bucket_;
  ::PROTOBUF_NAMESPACE_ID::int32 notification_channel_id_token_;
  ::PROTOBUF_NAMESPACE_ID::int32 instance_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 task_root_package_token_;
  ::PROTOBUF_NAMESPACE_ID::int32 task_root_class_token_;
  ::PROTOBUF_NAMESPACE_ID::int32 locus_id_token_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
};
// -------------------------------------------------------------------

class PendingEventProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.usage.PendingEventProto) */ {
 public:
  PendingEventProto();
  virtual ~PendingEventProto();

  PendingEventProto(const PendingEventProto& from);
  PendingEventProto(PendingEventProto&& from) noexcept
    : PendingEventProto() {
    *this = ::std::move(from);
  }

  inline PendingEventProto& operator=(const PendingEventProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingEventProto& operator=(PendingEventProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PendingEventProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PendingEventProto* internal_default_instance() {
    return reinterpret_cast<const PendingEventProto*>(
               &_PendingEventProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(PendingEventProto& a, PendingEventProto& b) {
    a.Swap(&b);
  }
  inline void Swap(PendingEventProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PendingEventProto* New() const final {
    return CreateMaybeMessage<PendingEventProto>(nullptr);
  }

  PendingEventProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PendingEventProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PendingEventProto& from);
  void MergeFrom(const PendingEventProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PendingEventProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.usage.PendingEventProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPackageNameFieldNumber = 1,
    kClassNameFieldNumber = 2,
    kShortcutIdFieldNumber = 7,
    kNotificationChannelIdFieldNumber = 9,
    kTaskRootPackageFieldNumber = 11,
    kTaskRootClassFieldNumber = 12,
    kLocusIdFieldNumber = 13,
    kConfigFieldNumber = 6,
    kTimeMsFieldNumber = 3,
    kFlagsFieldNumber = 4,
    kTypeFieldNumber = 5,
    kStandbyBucketFieldNumber = 8,
    kInstanceIdFieldNumber = 10,
  };
  // optional string package_name = 1;
  bool has_package_name() const;
  void clear_package_name();
  const std::string& package_name() const;
  void set_package_name(const std::string& value);
  void set_package_name(std::string&& value);
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  std::string* mutable_package_name();
  std::string* release_package_name();
  void set_allocated_package_name(std::string* package_name);

  // optional string class_name = 2;
  bool has_class_name() const;
  void clear_class_name();
  const std::string& class_name() const;
  void set_class_name(const std::string& value);
  void set_class_name(std::string&& value);
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  std::string* mutable_class_name();
  std::string* release_class_name();
  void set_allocated_class_name(std::string* class_name);

  // optional string shortcut_id = 7 [(.android.privacy) = {
  bool has_shortcut_id() const;
  void clear_shortcut_id();
  const std::string& shortcut_id() const;
  void set_shortcut_id(const std::string& value);
  void set_shortcut_id(std::string&& value);
  void set_shortcut_id(const char* value);
  void set_shortcut_id(const char* value, size_t size);
  std::string* mutable_shortcut_id();
  std::string* release_shortcut_id();
  void set_allocated_shortcut_id(std::string* shortcut_id);

  // optional string notification_channel_id = 9 [(.android.privacy) = {
  bool has_notification_channel_id() const;
  void clear_notification_channel_id();
  const std::string& notification_channel_id() const;
  void set_notification_channel_id(const std::string& value);
  void set_notification_channel_id(std::string&& value);
  void set_notification_channel_id(const char* value);
  void set_notification_channel_id(const char* value, size_t size);
  std::string* mutable_notification_channel_id();
  std::string* release_notification_channel_id();
  void set_allocated_notification_channel_id(std::string* notification_channel_id);

  // optional string task_root_package = 11;
  bool has_task_root_package() const;
  void clear_task_root_package();
  const std::string& task_root_package() const;
  void set_task_root_package(const std::string& value);
  void set_task_root_package(std::string&& value);
  void set_task_root_package(const char* value);
  void set_task_root_package(const char* value, size_t size);
  std::string* mutable_task_root_package();
  std::string* release_task_root_package();
  void set_allocated_task_root_package(std::string* task_root_package);

  // optional string task_root_class = 12;
  bool has_task_root_class() const;
  void clear_task_root_class();
  const std::string& task_root_class() const;
  void set_task_root_class(const std::string& value);
  void set_task_root_class(std::string&& value);
  void set_task_root_class(const char* value);
  void set_task_root_class(const char* value, size_t size);
  std::string* mutable_task_root_class();
  std::string* release_task_root_class();
  void set_allocated_task_root_class(std::string* task_root_class);

  // optional string locus_id = 13 [(.android.privacy) = {
  bool has_locus_id() const;
  void clear_locus_id();
  const std::string& locus_id() const;
  void set_locus_id(const std::string& value);
  void set_locus_id(std::string&& value);
  void set_locus_id(const char* value);
  void set_locus_id(const char* value, size_t size);
  std::string* mutable_locus_id();
  std::string* release_locus_id();
  void set_allocated_locus_id(std::string* locus_id);

  // optional .android.content.ConfigurationProto config = 6;
  bool has_config() const;
  void clear_config();
  const ::android::content::ConfigurationProto& config() const;
  ::android::content::ConfigurationProto* release_config();
  ::android::content::ConfigurationProto* mutable_config();
  void set_allocated_config(::android::content::ConfigurationProto* config);

  // optional int64 time_ms = 3;
  bool has_time_ms() const;
  void clear_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_ms() const;
  void set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 flags = 4;
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 type = 5;
  bool has_type() const;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 standby_bucket = 8;
  bool has_standby_bucket() const;
  void clear_standby_bucket();
  ::PROTOBUF_NAMESPACE_ID::int32 standby_bucket() const;
  void set_standby_bucket(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 instance_id = 10;
  bool has_instance_id() const;
  void clear_instance_id();
  ::PROTOBUF_NAMESPACE_ID::int32 instance_id() const;
  void set_instance_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.usage.PendingEventProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr package_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr class_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr shortcut_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr notification_channel_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr task_root_package_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr task_root_class_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locus_id_;
  ::android::content::ConfigurationProto* config_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 standby_bucket_;
  ::PROTOBUF_NAMESPACE_ID::int32 instance_id_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
};
// -------------------------------------------------------------------

class ObfuscatedPackagesProto_PackagesMap :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap) */ {
 public:
  ObfuscatedPackagesProto_PackagesMap();
  virtual ~ObfuscatedPackagesProto_PackagesMap();

  ObfuscatedPackagesProto_PackagesMap(const ObfuscatedPackagesProto_PackagesMap& from);
  ObfuscatedPackagesProto_PackagesMap(ObfuscatedPackagesProto_PackagesMap&& from) noexcept
    : ObfuscatedPackagesProto_PackagesMap() {
    *this = ::std::move(from);
  }

  inline ObfuscatedPackagesProto_PackagesMap& operator=(const ObfuscatedPackagesProto_PackagesMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObfuscatedPackagesProto_PackagesMap& operator=(ObfuscatedPackagesProto_PackagesMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObfuscatedPackagesProto_PackagesMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObfuscatedPackagesProto_PackagesMap* internal_default_instance() {
    return reinterpret_cast<const ObfuscatedPackagesProto_PackagesMap*>(
               &_ObfuscatedPackagesProto_PackagesMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ObfuscatedPackagesProto_PackagesMap& a, ObfuscatedPackagesProto_PackagesMap& b) {
    a.Swap(&b);
  }
  inline void Swap(ObfuscatedPackagesProto_PackagesMap* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObfuscatedPackagesProto_PackagesMap* New() const final {
    return CreateMaybeMessage<ObfuscatedPackagesProto_PackagesMap>(nullptr);
  }

  ObfuscatedPackagesProto_PackagesMap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObfuscatedPackagesProto_PackagesMap>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObfuscatedPackagesProto_PackagesMap& from);
  void MergeFrom(const ObfuscatedPackagesProto_PackagesMap& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObfuscatedPackagesProto_PackagesMap* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.usage.ObfuscatedPackagesProto.PackagesMap";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStringsFieldNumber = 2,
    kPackageTokenFieldNumber = 1,
  };
  // repeated string strings = 2 [(.android.privacy) = {
  int strings_size() const;
  void clear_strings();
  const std::string& strings(int index) const;
  std::string* mutable_strings(int index);
  void set_strings(int index, const std::string& value);
  void set_strings(int index, std::string&& value);
  void set_strings(int index, const char* value);
  void set_strings(int index, const char* value, size_t size);
  std::string* add_strings();
  void add_strings(const std::string& value);
  void add_strings(std::string&& value);
  void add_strings(const char* value);
  void add_strings(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& strings() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_strings();

  // optional int32 package_token = 1;
  bool has_package_token() const;
  void clear_package_token();
  ::PROTOBUF_NAMESPACE_ID::int32 package_token() const;
  void set_package_token(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> strings_;
  ::PROTOBUF_NAMESPACE_ID::int32 package_token_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
};
// -------------------------------------------------------------------

class ObfuscatedPackagesProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.usage.ObfuscatedPackagesProto) */ {
 public:
  ObfuscatedPackagesProto();
  virtual ~ObfuscatedPackagesProto();

  ObfuscatedPackagesProto(const ObfuscatedPackagesProto& from);
  ObfuscatedPackagesProto(ObfuscatedPackagesProto&& from) noexcept
    : ObfuscatedPackagesProto() {
    *this = ::std::move(from);
  }

  inline ObfuscatedPackagesProto& operator=(const ObfuscatedPackagesProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObfuscatedPackagesProto& operator=(ObfuscatedPackagesProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObfuscatedPackagesProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObfuscatedPackagesProto* internal_default_instance() {
    return reinterpret_cast<const ObfuscatedPackagesProto*>(
               &_ObfuscatedPackagesProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ObfuscatedPackagesProto& a, ObfuscatedPackagesProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ObfuscatedPackagesProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObfuscatedPackagesProto* New() const final {
    return CreateMaybeMessage<ObfuscatedPackagesProto>(nullptr);
  }

  ObfuscatedPackagesProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObfuscatedPackagesProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObfuscatedPackagesProto& from);
  void MergeFrom(const ObfuscatedPackagesProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObfuscatedPackagesProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.usage.ObfuscatedPackagesProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ObfuscatedPackagesProto_PackagesMap PackagesMap;

  // accessors -------------------------------------------------------

  enum : int {
    kPackagesMapFieldNumber = 2,
    kCounterFieldNumber = 1,
  };
  // repeated .com.android.server.usage.ObfuscatedPackagesProto.PackagesMap packages_map = 2;
  int packages_map_size() const;
  void clear_packages_map();
  ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap* mutable_packages_map(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap >*
      mutable_packages_map();
  const ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap& packages_map(int index) const;
  ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap* add_packages_map();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap >&
      packages_map() const;

  // optional int32 counter = 1;
  bool has_counter() const;
  void clear_counter();
  ::PROTOBUF_NAMESPACE_ID::int32 counter() const;
  void set_counter(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.usage.ObfuscatedPackagesProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap > packages_map_;
  ::PROTOBUF_NAMESPACE_ID::int32 counter_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IntervalStatsObfuscatedProto_CountAndTime

// optional int32 count = 1;
inline bool IntervalStatsObfuscatedProto_CountAndTime::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntervalStatsObfuscatedProto_CountAndTime::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IntervalStatsObfuscatedProto_CountAndTime::count() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime.count)
  return count_;
}
inline void IntervalStatsObfuscatedProto_CountAndTime::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime.count)
}

// optional int64 time_ms = 2;
inline bool IntervalStatsObfuscatedProto_CountAndTime::has_time_ms() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntervalStatsObfuscatedProto_CountAndTime::clear_time_ms() {
  time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 IntervalStatsObfuscatedProto_CountAndTime::time_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime.time_ms)
  return time_ms_;
}
inline void IntervalStatsObfuscatedProto_CountAndTime::set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  time_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime.time_ms)
}

// -------------------------------------------------------------------

// IntervalStatsObfuscatedProto_Configuration

// optional .android.content.ConfigurationProto config = 1;
inline bool IntervalStatsObfuscatedProto_Configuration::has_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::android::content::ConfigurationProto& IntervalStatsObfuscatedProto_Configuration::config() const {
  const ::android::content::ConfigurationProto* p = config_;
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration.config)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::content::ConfigurationProto*>(
      &::android::content::_ConfigurationProto_default_instance_);
}
inline ::android::content::ConfigurationProto* IntervalStatsObfuscatedProto_Configuration::release_config() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration.config)
  _has_bits_[0] &= ~0x00000001u;
  ::android::content::ConfigurationProto* temp = config_;
  config_ = nullptr;
  return temp;
}
inline ::android::content::ConfigurationProto* IntervalStatsObfuscatedProto_Configuration::mutable_config() {
  _has_bits_[0] |= 0x00000001u;
  if (config_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::content::ConfigurationProto>(GetArenaNoVirtual());
    config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration.config)
  return config_;
}
inline void IntervalStatsObfuscatedProto_Configuration::set_allocated_config(::android::content::ConfigurationProto* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(config_);
  }
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration.config)
}

// optional int64 last_time_active_ms = 2;
inline bool IntervalStatsObfuscatedProto_Configuration::has_last_time_active_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntervalStatsObfuscatedProto_Configuration::clear_last_time_active_ms() {
  last_time_active_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 IntervalStatsObfuscatedProto_Configuration::last_time_active_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration.last_time_active_ms)
  return last_time_active_ms_;
}
inline void IntervalStatsObfuscatedProto_Configuration::set_last_time_active_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  last_time_active_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration.last_time_active_ms)
}

// optional int64 total_time_active_ms = 3;
inline bool IntervalStatsObfuscatedProto_Configuration::has_total_time_active_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IntervalStatsObfuscatedProto_Configuration::clear_total_time_active_ms() {
  total_time_active_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 IntervalStatsObfuscatedProto_Configuration::total_time_active_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration.total_time_active_ms)
  return total_time_active_ms_;
}
inline void IntervalStatsObfuscatedProto_Configuration::set_total_time_active_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  total_time_active_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration.total_time_active_ms)
}

// optional int32 count = 4;
inline bool IntervalStatsObfuscatedProto_Configuration::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IntervalStatsObfuscatedProto_Configuration::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IntervalStatsObfuscatedProto_Configuration::count() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration.count)
  return count_;
}
inline void IntervalStatsObfuscatedProto_Configuration::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration.count)
}

// optional bool active = 5;
inline bool IntervalStatsObfuscatedProto_Configuration::has_active() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IntervalStatsObfuscatedProto_Configuration::clear_active() {
  active_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool IntervalStatsObfuscatedProto_Configuration::active() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration.active)
  return active_;
}
inline void IntervalStatsObfuscatedProto_Configuration::set_active(bool value) {
  _has_bits_[0] |= 0x00000010u;
  active_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration.active)
}

// -------------------------------------------------------------------

// IntervalStatsObfuscatedProto_PackageUsage

// optional string package_name = 1;
inline bool IntervalStatsObfuscatedProto_PackageUsage::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntervalStatsObfuscatedProto_PackageUsage::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& IntervalStatsObfuscatedProto_PackageUsage::package_name() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage.package_name)
  return package_name_.GetNoArena();
}
inline void IntervalStatsObfuscatedProto_PackageUsage::set_package_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage.package_name)
}
inline void IntervalStatsObfuscatedProto_PackageUsage::set_package_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage.package_name)
}
inline void IntervalStatsObfuscatedProto_PackageUsage::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage.package_name)
}
inline void IntervalStatsObfuscatedProto_PackageUsage::set_package_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage.package_name)
}
inline std::string* IntervalStatsObfuscatedProto_PackageUsage::mutable_package_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage.package_name)
  return package_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* IntervalStatsObfuscatedProto_PackageUsage::release_package_name() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage.package_name)
  if (!has_package_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return package_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void IntervalStatsObfuscatedProto_PackageUsage::set_allocated_package_name(std::string* package_name) {
  if (package_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  package_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage.package_name)
}

// optional int64 time_ms = 2;
inline bool IntervalStatsObfuscatedProto_PackageUsage::has_time_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntervalStatsObfuscatedProto_PackageUsage::clear_time_ms() {
  time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 IntervalStatsObfuscatedProto_PackageUsage::time_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage.time_ms)
  return time_ms_;
}
inline void IntervalStatsObfuscatedProto_PackageUsage::set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  time_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage.time_ms)
}

// -------------------------------------------------------------------

// IntervalStatsObfuscatedProto

// optional int64 end_time_ms = 1;
inline bool IntervalStatsObfuscatedProto::has_end_time_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IntervalStatsObfuscatedProto::clear_end_time_ms() {
  end_time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 IntervalStatsObfuscatedProto::end_time_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.end_time_ms)
  return end_time_ms_;
}
inline void IntervalStatsObfuscatedProto::set_end_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  end_time_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.IntervalStatsObfuscatedProto.end_time_ms)
}

// optional int32 major_version = 2;
inline bool IntervalStatsObfuscatedProto::has_major_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IntervalStatsObfuscatedProto::clear_major_version() {
  major_version_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IntervalStatsObfuscatedProto::major_version() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.major_version)
  return major_version_;
}
inline void IntervalStatsObfuscatedProto::set_major_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  major_version_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.IntervalStatsObfuscatedProto.major_version)
}

// optional int32 minor_version = 3;
inline bool IntervalStatsObfuscatedProto::has_minor_version() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IntervalStatsObfuscatedProto::clear_minor_version() {
  minor_version_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IntervalStatsObfuscatedProto::minor_version() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.minor_version)
  return minor_version_;
}
inline void IntervalStatsObfuscatedProto::set_minor_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  minor_version_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.IntervalStatsObfuscatedProto.minor_version)
}

// optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime interactive = 10;
inline bool IntervalStatsObfuscatedProto::has_interactive() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntervalStatsObfuscatedProto::clear_interactive() {
  if (interactive_ != nullptr) interactive_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime& IntervalStatsObfuscatedProto::interactive() const {
  const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* p = interactive_;
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.interactive)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime*>(
      &::com::android::server::usage::_IntervalStatsObfuscatedProto_CountAndTime_default_instance_);
}
inline ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* IntervalStatsObfuscatedProto::release_interactive() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.IntervalStatsObfuscatedProto.interactive)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* temp = interactive_;
  interactive_ = nullptr;
  return temp;
}
inline ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* IntervalStatsObfuscatedProto::mutable_interactive() {
  _has_bits_[0] |= 0x00000001u;
  if (interactive_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime>(GetArenaNoVirtual());
    interactive_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.IntervalStatsObfuscatedProto.interactive)
  return interactive_;
}
inline void IntervalStatsObfuscatedProto::set_allocated_interactive(::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* interactive) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete interactive_;
  }
  if (interactive) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      interactive = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, interactive, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  interactive_ = interactive;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.IntervalStatsObfuscatedProto.interactive)
}

// optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime non_interactive = 11;
inline bool IntervalStatsObfuscatedProto::has_non_interactive() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntervalStatsObfuscatedProto::clear_non_interactive() {
  if (non_interactive_ != nullptr) non_interactive_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime& IntervalStatsObfuscatedProto::non_interactive() const {
  const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* p = non_interactive_;
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.non_interactive)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime*>(
      &::com::android::server::usage::_IntervalStatsObfuscatedProto_CountAndTime_default_instance_);
}
inline ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* IntervalStatsObfuscatedProto::release_non_interactive() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.IntervalStatsObfuscatedProto.non_interactive)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* temp = non_interactive_;
  non_interactive_ = nullptr;
  return temp;
}
inline ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* IntervalStatsObfuscatedProto::mutable_non_interactive() {
  _has_bits_[0] |= 0x00000002u;
  if (non_interactive_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime>(GetArenaNoVirtual());
    non_interactive_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.IntervalStatsObfuscatedProto.non_interactive)
  return non_interactive_;
}
inline void IntervalStatsObfuscatedProto::set_allocated_non_interactive(::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* non_interactive) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete non_interactive_;
  }
  if (non_interactive) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      non_interactive = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, non_interactive, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  non_interactive_ = non_interactive;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.IntervalStatsObfuscatedProto.non_interactive)
}

// optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime keyguard_shown = 12;
inline bool IntervalStatsObfuscatedProto::has_keyguard_shown() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IntervalStatsObfuscatedProto::clear_keyguard_shown() {
  if (keyguard_shown_ != nullptr) keyguard_shown_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime& IntervalStatsObfuscatedProto::keyguard_shown() const {
  const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* p = keyguard_shown_;
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.keyguard_shown)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime*>(
      &::com::android::server::usage::_IntervalStatsObfuscatedProto_CountAndTime_default_instance_);
}
inline ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* IntervalStatsObfuscatedProto::release_keyguard_shown() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.IntervalStatsObfuscatedProto.keyguard_shown)
  _has_bits_[0] &= ~0x00000004u;
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* temp = keyguard_shown_;
  keyguard_shown_ = nullptr;
  return temp;
}
inline ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* IntervalStatsObfuscatedProto::mutable_keyguard_shown() {
  _has_bits_[0] |= 0x00000004u;
  if (keyguard_shown_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime>(GetArenaNoVirtual());
    keyguard_shown_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.IntervalStatsObfuscatedProto.keyguard_shown)
  return keyguard_shown_;
}
inline void IntervalStatsObfuscatedProto::set_allocated_keyguard_shown(::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* keyguard_shown) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete keyguard_shown_;
  }
  if (keyguard_shown) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      keyguard_shown = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, keyguard_shown, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  keyguard_shown_ = keyguard_shown;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.IntervalStatsObfuscatedProto.keyguard_shown)
}

// optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime keyguard_hidden = 13;
inline bool IntervalStatsObfuscatedProto::has_keyguard_hidden() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IntervalStatsObfuscatedProto::clear_keyguard_hidden() {
  if (keyguard_hidden_ != nullptr) keyguard_hidden_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime& IntervalStatsObfuscatedProto::keyguard_hidden() const {
  const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* p = keyguard_hidden_;
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.keyguard_hidden)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime*>(
      &::com::android::server::usage::_IntervalStatsObfuscatedProto_CountAndTime_default_instance_);
}
inline ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* IntervalStatsObfuscatedProto::release_keyguard_hidden() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.IntervalStatsObfuscatedProto.keyguard_hidden)
  _has_bits_[0] &= ~0x00000008u;
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* temp = keyguard_hidden_;
  keyguard_hidden_ = nullptr;
  return temp;
}
inline ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* IntervalStatsObfuscatedProto::mutable_keyguard_hidden() {
  _has_bits_[0] |= 0x00000008u;
  if (keyguard_hidden_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime>(GetArenaNoVirtual());
    keyguard_hidden_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.IntervalStatsObfuscatedProto.keyguard_hidden)
  return keyguard_hidden_;
}
inline void IntervalStatsObfuscatedProto::set_allocated_keyguard_hidden(::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* keyguard_hidden) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete keyguard_hidden_;
  }
  if (keyguard_hidden) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      keyguard_hidden = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, keyguard_hidden, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  keyguard_hidden_ = keyguard_hidden;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.IntervalStatsObfuscatedProto.keyguard_hidden)
}

// repeated .com.android.server.usage.UsageStatsObfuscatedProto packages = 20;
inline int IntervalStatsObfuscatedProto::packages_size() const {
  return packages_.size();
}
inline void IntervalStatsObfuscatedProto::clear_packages() {
  packages_.Clear();
}
inline ::com::android::server::usage::UsageStatsObfuscatedProto* IntervalStatsObfuscatedProto::mutable_packages(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.IntervalStatsObfuscatedProto.packages)
  return packages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto >*
IntervalStatsObfuscatedProto::mutable_packages() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.usage.IntervalStatsObfuscatedProto.packages)
  return &packages_;
}
inline const ::com::android::server::usage::UsageStatsObfuscatedProto& IntervalStatsObfuscatedProto::packages(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.packages)
  return packages_.Get(index);
}
inline ::com::android::server::usage::UsageStatsObfuscatedProto* IntervalStatsObfuscatedProto::add_packages() {
  // @@protoc_insertion_point(field_add:com.android.server.usage.IntervalStatsObfuscatedProto.packages)
  return packages_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto >&
IntervalStatsObfuscatedProto::packages() const {
  // @@protoc_insertion_point(field_list:com.android.server.usage.IntervalStatsObfuscatedProto.packages)
  return packages_;
}

// repeated .com.android.server.usage.IntervalStatsObfuscatedProto.Configuration configurations = 21;
inline int IntervalStatsObfuscatedProto::configurations_size() const {
  return configurations_.size();
}
inline void IntervalStatsObfuscatedProto::clear_configurations() {
  configurations_.Clear();
}
inline ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration* IntervalStatsObfuscatedProto::mutable_configurations(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.IntervalStatsObfuscatedProto.configurations)
  return configurations_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration >*
IntervalStatsObfuscatedProto::mutable_configurations() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.usage.IntervalStatsObfuscatedProto.configurations)
  return &configurations_;
}
inline const ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration& IntervalStatsObfuscatedProto::configurations(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.configurations)
  return configurations_.Get(index);
}
inline ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration* IntervalStatsObfuscatedProto::add_configurations() {
  // @@protoc_insertion_point(field_add:com.android.server.usage.IntervalStatsObfuscatedProto.configurations)
  return configurations_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration >&
IntervalStatsObfuscatedProto::configurations() const {
  // @@protoc_insertion_point(field_list:com.android.server.usage.IntervalStatsObfuscatedProto.configurations)
  return configurations_;
}

// repeated .com.android.server.usage.EventObfuscatedProto event_log = 22;
inline int IntervalStatsObfuscatedProto::event_log_size() const {
  return event_log_.size();
}
inline void IntervalStatsObfuscatedProto::clear_event_log() {
  event_log_.Clear();
}
inline ::com::android::server::usage::EventObfuscatedProto* IntervalStatsObfuscatedProto::mutable_event_log(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.IntervalStatsObfuscatedProto.event_log)
  return event_log_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::EventObfuscatedProto >*
IntervalStatsObfuscatedProto::mutable_event_log() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.usage.IntervalStatsObfuscatedProto.event_log)
  return &event_log_;
}
inline const ::com::android::server::usage::EventObfuscatedProto& IntervalStatsObfuscatedProto::event_log(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.event_log)
  return event_log_.Get(index);
}
inline ::com::android::server::usage::EventObfuscatedProto* IntervalStatsObfuscatedProto::add_event_log() {
  // @@protoc_insertion_point(field_add:com.android.server.usage.IntervalStatsObfuscatedProto.event_log)
  return event_log_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::EventObfuscatedProto >&
IntervalStatsObfuscatedProto::event_log() const {
  // @@protoc_insertion_point(field_list:com.android.server.usage.IntervalStatsObfuscatedProto.event_log)
  return event_log_;
}

// repeated .com.android.server.usage.PendingEventProto pending_events = 23;
inline int IntervalStatsObfuscatedProto::pending_events_size() const {
  return pending_events_.size();
}
inline void IntervalStatsObfuscatedProto::clear_pending_events() {
  pending_events_.Clear();
}
inline ::com::android::server::usage::PendingEventProto* IntervalStatsObfuscatedProto::mutable_pending_events(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.IntervalStatsObfuscatedProto.pending_events)
  return pending_events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::PendingEventProto >*
IntervalStatsObfuscatedProto::mutable_pending_events() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.usage.IntervalStatsObfuscatedProto.pending_events)
  return &pending_events_;
}
inline const ::com::android::server::usage::PendingEventProto& IntervalStatsObfuscatedProto::pending_events(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.pending_events)
  return pending_events_.Get(index);
}
inline ::com::android::server::usage::PendingEventProto* IntervalStatsObfuscatedProto::add_pending_events() {
  // @@protoc_insertion_point(field_add:com.android.server.usage.IntervalStatsObfuscatedProto.pending_events)
  return pending_events_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::PendingEventProto >&
IntervalStatsObfuscatedProto::pending_events() const {
  // @@protoc_insertion_point(field_list:com.android.server.usage.IntervalStatsObfuscatedProto.pending_events)
  return pending_events_;
}

// repeated .com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage package_usage = 24;
inline int IntervalStatsObfuscatedProto::package_usage_size() const {
  return package_usage_.size();
}
inline void IntervalStatsObfuscatedProto::clear_package_usage() {
  package_usage_.Clear();
}
inline ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage* IntervalStatsObfuscatedProto::mutable_package_usage(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.IntervalStatsObfuscatedProto.package_usage)
  return package_usage_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage >*
IntervalStatsObfuscatedProto::mutable_package_usage() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.usage.IntervalStatsObfuscatedProto.package_usage)
  return &package_usage_;
}
inline const ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage& IntervalStatsObfuscatedProto::package_usage(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.IntervalStatsObfuscatedProto.package_usage)
  return package_usage_.Get(index);
}
inline ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage* IntervalStatsObfuscatedProto::add_package_usage() {
  // @@protoc_insertion_point(field_add:com.android.server.usage.IntervalStatsObfuscatedProto.package_usage)
  return package_usage_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage >&
IntervalStatsObfuscatedProto::package_usage() const {
  // @@protoc_insertion_point(field_list:com.android.server.usage.IntervalStatsObfuscatedProto.package_usage)
  return package_usage_;
}

// -------------------------------------------------------------------

// UsageStatsObfuscatedProto_ChooserAction_CategoryCount

// optional int32 category_token = 1;
inline bool UsageStatsObfuscatedProto_ChooserAction_CategoryCount::has_category_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::clear_category_token() {
  category_token_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UsageStatsObfuscatedProto_ChooserAction_CategoryCount::category_token() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount.category_token)
  return category_token_;
}
inline void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::set_category_token(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  category_token_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount.category_token)
}

// optional int32 count = 2;
inline bool UsageStatsObfuscatedProto_ChooserAction_CategoryCount::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UsageStatsObfuscatedProto_ChooserAction_CategoryCount::count() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount.count)
  return count_;
}
inline void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount.count)
}

// -------------------------------------------------------------------

// UsageStatsObfuscatedProto_ChooserAction

// optional int32 action_token = 1;
inline bool UsageStatsObfuscatedProto_ChooserAction::has_action_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UsageStatsObfuscatedProto_ChooserAction::clear_action_token() {
  action_token_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UsageStatsObfuscatedProto_ChooserAction::action_token() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.action_token)
  return action_token_;
}
inline void UsageStatsObfuscatedProto_ChooserAction::set_action_token(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  action_token_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.action_token)
}

// repeated .com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount counts = 2;
inline int UsageStatsObfuscatedProto_ChooserAction::counts_size() const {
  return counts_.size();
}
inline void UsageStatsObfuscatedProto_ChooserAction::clear_counts() {
  counts_.Clear();
}
inline ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount* UsageStatsObfuscatedProto_ChooserAction::mutable_counts(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.counts)
  return counts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount >*
UsageStatsObfuscatedProto_ChooserAction::mutable_counts() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.counts)
  return &counts_;
}
inline const ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount& UsageStatsObfuscatedProto_ChooserAction::counts(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.counts)
  return counts_.Get(index);
}
inline ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount* UsageStatsObfuscatedProto_ChooserAction::add_counts() {
  // @@protoc_insertion_point(field_add:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.counts)
  return counts_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount >&
UsageStatsObfuscatedProto_ChooserAction::counts() const {
  // @@protoc_insertion_point(field_list:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.counts)
  return counts_;
}

// -------------------------------------------------------------------

// UsageStatsObfuscatedProto

// optional int32 package_token = 1;
inline bool UsageStatsObfuscatedProto::has_package_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UsageStatsObfuscatedProto::clear_package_token() {
  package_token_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UsageStatsObfuscatedProto::package_token() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.package_token)
  return package_token_;
}
inline void UsageStatsObfuscatedProto::set_package_token(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  package_token_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.UsageStatsObfuscatedProto.package_token)
}

// optional int64 last_time_active_ms = 3;
inline bool UsageStatsObfuscatedProto::has_last_time_active_ms() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UsageStatsObfuscatedProto::clear_last_time_active_ms() {
  last_time_active_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UsageStatsObfuscatedProto::last_time_active_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.last_time_active_ms)
  return last_time_active_ms_;
}
inline void UsageStatsObfuscatedProto::set_last_time_active_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  last_time_active_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.UsageStatsObfuscatedProto.last_time_active_ms)
}

// optional int64 total_time_active_ms = 4;
inline bool UsageStatsObfuscatedProto::has_total_time_active_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UsageStatsObfuscatedProto::clear_total_time_active_ms() {
  total_time_active_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UsageStatsObfuscatedProto::total_time_active_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.total_time_active_ms)
  return total_time_active_ms_;
}
inline void UsageStatsObfuscatedProto::set_total_time_active_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  total_time_active_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.UsageStatsObfuscatedProto.total_time_active_ms)
}

// optional int32 last_event = 5;
inline bool UsageStatsObfuscatedProto::has_last_event() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UsageStatsObfuscatedProto::clear_last_event() {
  last_event_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UsageStatsObfuscatedProto::last_event() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.last_event)
  return last_event_;
}
inline void UsageStatsObfuscatedProto::set_last_event(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  last_event_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.UsageStatsObfuscatedProto.last_event)
}

// optional int32 app_launch_count = 6;
inline bool UsageStatsObfuscatedProto::has_app_launch_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UsageStatsObfuscatedProto::clear_app_launch_count() {
  app_launch_count_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UsageStatsObfuscatedProto::app_launch_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.app_launch_count)
  return app_launch_count_;
}
inline void UsageStatsObfuscatedProto::set_app_launch_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  app_launch_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.UsageStatsObfuscatedProto.app_launch_count)
}

// repeated .com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction chooser_actions = 7;
inline int UsageStatsObfuscatedProto::chooser_actions_size() const {
  return chooser_actions_.size();
}
inline void UsageStatsObfuscatedProto::clear_chooser_actions() {
  chooser_actions_.Clear();
}
inline ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction* UsageStatsObfuscatedProto::mutable_chooser_actions(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.UsageStatsObfuscatedProto.chooser_actions)
  return chooser_actions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction >*
UsageStatsObfuscatedProto::mutable_chooser_actions() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.usage.UsageStatsObfuscatedProto.chooser_actions)
  return &chooser_actions_;
}
inline const ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction& UsageStatsObfuscatedProto::chooser_actions(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.chooser_actions)
  return chooser_actions_.Get(index);
}
inline ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction* UsageStatsObfuscatedProto::add_chooser_actions() {
  // @@protoc_insertion_point(field_add:com.android.server.usage.UsageStatsObfuscatedProto.chooser_actions)
  return chooser_actions_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction >&
UsageStatsObfuscatedProto::chooser_actions() const {
  // @@protoc_insertion_point(field_list:com.android.server.usage.UsageStatsObfuscatedProto.chooser_actions)
  return chooser_actions_;
}

// optional int64 last_time_service_used_ms = 8;
inline bool UsageStatsObfuscatedProto::has_last_time_service_used_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UsageStatsObfuscatedProto::clear_last_time_service_used_ms() {
  last_time_service_used_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UsageStatsObfuscatedProto::last_time_service_used_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.last_time_service_used_ms)
  return last_time_service_used_ms_;
}
inline void UsageStatsObfuscatedProto::set_last_time_service_used_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  last_time_service_used_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.UsageStatsObfuscatedProto.last_time_service_used_ms)
}

// optional int64 total_time_service_used_ms = 9;
inline bool UsageStatsObfuscatedProto::has_total_time_service_used_ms() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UsageStatsObfuscatedProto::clear_total_time_service_used_ms() {
  total_time_service_used_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UsageStatsObfuscatedProto::total_time_service_used_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.total_time_service_used_ms)
  return total_time_service_used_ms_;
}
inline void UsageStatsObfuscatedProto::set_total_time_service_used_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  total_time_service_used_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.UsageStatsObfuscatedProto.total_time_service_used_ms)
}

// optional int64 last_time_visible_ms = 10;
inline bool UsageStatsObfuscatedProto::has_last_time_visible_ms() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UsageStatsObfuscatedProto::clear_last_time_visible_ms() {
  last_time_visible_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UsageStatsObfuscatedProto::last_time_visible_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.last_time_visible_ms)
  return last_time_visible_ms_;
}
inline void UsageStatsObfuscatedProto::set_last_time_visible_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  last_time_visible_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.UsageStatsObfuscatedProto.last_time_visible_ms)
}

// optional int64 total_time_visible_ms = 11;
inline bool UsageStatsObfuscatedProto::has_total_time_visible_ms() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UsageStatsObfuscatedProto::clear_total_time_visible_ms() {
  total_time_visible_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UsageStatsObfuscatedProto::total_time_visible_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.total_time_visible_ms)
  return total_time_visible_ms_;
}
inline void UsageStatsObfuscatedProto::set_total_time_visible_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  total_time_visible_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.UsageStatsObfuscatedProto.total_time_visible_ms)
}

// optional int64 last_time_component_used_ms = 12;
inline bool UsageStatsObfuscatedProto::has_last_time_component_used_ms() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UsageStatsObfuscatedProto::clear_last_time_component_used_ms() {
  last_time_component_used_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UsageStatsObfuscatedProto::last_time_component_used_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.UsageStatsObfuscatedProto.last_time_component_used_ms)
  return last_time_component_used_ms_;
}
inline void UsageStatsObfuscatedProto::set_last_time_component_used_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  last_time_component_used_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.UsageStatsObfuscatedProto.last_time_component_used_ms)
}

// -------------------------------------------------------------------

// EventObfuscatedProto

// optional int32 package_token = 1;
inline bool EventObfuscatedProto::has_package_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EventObfuscatedProto::clear_package_token() {
  package_token_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventObfuscatedProto::package_token() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.EventObfuscatedProto.package_token)
  return package_token_;
}
inline void EventObfuscatedProto::set_package_token(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  package_token_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.EventObfuscatedProto.package_token)
}

// optional int32 class_token = 2;
inline bool EventObfuscatedProto::has_class_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EventObfuscatedProto::clear_class_token() {
  class_token_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventObfuscatedProto::class_token() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.EventObfuscatedProto.class_token)
  return class_token_;
}
inline void EventObfuscatedProto::set_class_token(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  class_token_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.EventObfuscatedProto.class_token)
}

// optional int64 time_ms = 3;
inline bool EventObfuscatedProto::has_time_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EventObfuscatedProto::clear_time_ms() {
  time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 EventObfuscatedProto::time_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.EventObfuscatedProto.time_ms)
  return time_ms_;
}
inline void EventObfuscatedProto::set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  time_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.EventObfuscatedProto.time_ms)
}

// optional int32 flags = 4;
inline bool EventObfuscatedProto::has_flags() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EventObfuscatedProto::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventObfuscatedProto::flags() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.EventObfuscatedProto.flags)
  return flags_;
}
inline void EventObfuscatedProto::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.EventObfuscatedProto.flags)
}

// optional int32 type = 5;
inline bool EventObfuscatedProto::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EventObfuscatedProto::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventObfuscatedProto::type() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.EventObfuscatedProto.type)
  return type_;
}
inline void EventObfuscatedProto::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  type_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.EventObfuscatedProto.type)
}

// optional .android.content.ConfigurationProto config = 6;
inline bool EventObfuscatedProto::has_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::android::content::ConfigurationProto& EventObfuscatedProto::config() const {
  const ::android::content::ConfigurationProto* p = config_;
  // @@protoc_insertion_point(field_get:com.android.server.usage.EventObfuscatedProto.config)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::content::ConfigurationProto*>(
      &::android::content::_ConfigurationProto_default_instance_);
}
inline ::android::content::ConfigurationProto* EventObfuscatedProto::release_config() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.EventObfuscatedProto.config)
  _has_bits_[0] &= ~0x00000001u;
  ::android::content::ConfigurationProto* temp = config_;
  config_ = nullptr;
  return temp;
}
inline ::android::content::ConfigurationProto* EventObfuscatedProto::mutable_config() {
  _has_bits_[0] |= 0x00000001u;
  if (config_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::content::ConfigurationProto>(GetArenaNoVirtual());
    config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.EventObfuscatedProto.config)
  return config_;
}
inline void EventObfuscatedProto::set_allocated_config(::android::content::ConfigurationProto* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(config_);
  }
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.EventObfuscatedProto.config)
}

// optional int32 shortcut_id_token = 7;
inline bool EventObfuscatedProto::has_shortcut_id_token() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EventObfuscatedProto::clear_shortcut_id_token() {
  shortcut_id_token_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventObfuscatedProto::shortcut_id_token() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.EventObfuscatedProto.shortcut_id_token)
  return shortcut_id_token_;
}
inline void EventObfuscatedProto::set_shortcut_id_token(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  shortcut_id_token_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.EventObfuscatedProto.shortcut_id_token)
}

// optional int32 standby_bucket = 8;
inline bool EventObfuscatedProto::has_standby_bucket() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EventObfuscatedProto::clear_standby_bucket() {
  standby_bucket_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventObfuscatedProto::standby_bucket() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.EventObfuscatedProto.standby_bucket)
  return standby_bucket_;
}
inline void EventObfuscatedProto::set_standby_bucket(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  standby_bucket_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.EventObfuscatedProto.standby_bucket)
}

// optional int32 notification_channel_id_token = 9;
inline bool EventObfuscatedProto::has_notification_channel_id_token() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void EventObfuscatedProto::clear_notification_channel_id_token() {
  notification_channel_id_token_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventObfuscatedProto::notification_channel_id_token() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.EventObfuscatedProto.notification_channel_id_token)
  return notification_channel_id_token_;
}
inline void EventObfuscatedProto::set_notification_channel_id_token(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  notification_channel_id_token_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.EventObfuscatedProto.notification_channel_id_token)
}

// optional int32 instance_id = 10;
inline bool EventObfuscatedProto::has_instance_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void EventObfuscatedProto::clear_instance_id() {
  instance_id_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventObfuscatedProto::instance_id() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.EventObfuscatedProto.instance_id)
  return instance_id_;
}
inline void EventObfuscatedProto::set_instance_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.EventObfuscatedProto.instance_id)
}

// optional int32 task_root_package_token = 11;
inline bool EventObfuscatedProto::has_task_root_package_token() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void EventObfuscatedProto::clear_task_root_package_token() {
  task_root_package_token_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventObfuscatedProto::task_root_package_token() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.EventObfuscatedProto.task_root_package_token)
  return task_root_package_token_;
}
inline void EventObfuscatedProto::set_task_root_package_token(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  task_root_package_token_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.EventObfuscatedProto.task_root_package_token)
}

// optional int32 task_root_class_token = 12;
inline bool EventObfuscatedProto::has_task_root_class_token() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void EventObfuscatedProto::clear_task_root_class_token() {
  task_root_class_token_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventObfuscatedProto::task_root_class_token() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.EventObfuscatedProto.task_root_class_token)
  return task_root_class_token_;
}
inline void EventObfuscatedProto::set_task_root_class_token(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  task_root_class_token_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.EventObfuscatedProto.task_root_class_token)
}

// optional int32 locus_id_token = 13;
inline bool EventObfuscatedProto::has_locus_id_token() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void EventObfuscatedProto::clear_locus_id_token() {
  locus_id_token_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EventObfuscatedProto::locus_id_token() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.EventObfuscatedProto.locus_id_token)
  return locus_id_token_;
}
inline void EventObfuscatedProto::set_locus_id_token(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  locus_id_token_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.EventObfuscatedProto.locus_id_token)
}

// -------------------------------------------------------------------

// PendingEventProto

// optional string package_name = 1;
inline bool PendingEventProto::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PendingEventProto::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PendingEventProto::package_name() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.PendingEventProto.package_name)
  return package_name_.GetNoArena();
}
inline void PendingEventProto::set_package_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.usage.PendingEventProto.package_name)
}
inline void PendingEventProto::set_package_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.usage.PendingEventProto.package_name)
}
inline void PendingEventProto::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.usage.PendingEventProto.package_name)
}
inline void PendingEventProto::set_package_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.usage.PendingEventProto.package_name)
}
inline std::string* PendingEventProto::mutable_package_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.PendingEventProto.package_name)
  return package_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PendingEventProto::release_package_name() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.PendingEventProto.package_name)
  if (!has_package_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return package_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PendingEventProto::set_allocated_package_name(std::string* package_name) {
  if (package_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  package_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.PendingEventProto.package_name)
}

// optional string class_name = 2;
inline bool PendingEventProto::has_class_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PendingEventProto::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& PendingEventProto::class_name() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.PendingEventProto.class_name)
  return class_name_.GetNoArena();
}
inline void PendingEventProto::set_class_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  class_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.usage.PendingEventProto.class_name)
}
inline void PendingEventProto::set_class_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  class_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.usage.PendingEventProto.class_name)
}
inline void PendingEventProto::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  class_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.usage.PendingEventProto.class_name)
}
inline void PendingEventProto::set_class_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  class_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.usage.PendingEventProto.class_name)
}
inline std::string* PendingEventProto::mutable_class_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.PendingEventProto.class_name)
  return class_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PendingEventProto::release_class_name() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.PendingEventProto.class_name)
  if (!has_class_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return class_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PendingEventProto::set_allocated_class_name(std::string* class_name) {
  if (class_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  class_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.PendingEventProto.class_name)
}

// optional int64 time_ms = 3;
inline bool PendingEventProto::has_time_ms() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PendingEventProto::clear_time_ms() {
  time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PendingEventProto::time_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.PendingEventProto.time_ms)
  return time_ms_;
}
inline void PendingEventProto::set_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  time_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.PendingEventProto.time_ms)
}

// optional int32 flags = 4;
inline bool PendingEventProto::has_flags() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PendingEventProto::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PendingEventProto::flags() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.PendingEventProto.flags)
  return flags_;
}
inline void PendingEventProto::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.PendingEventProto.flags)
}

// optional int32 type = 5;
inline bool PendingEventProto::has_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PendingEventProto::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PendingEventProto::type() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.PendingEventProto.type)
  return type_;
}
inline void PendingEventProto::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  type_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.PendingEventProto.type)
}

// optional .android.content.ConfigurationProto config = 6;
inline bool PendingEventProto::has_config() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline const ::android::content::ConfigurationProto& PendingEventProto::config() const {
  const ::android::content::ConfigurationProto* p = config_;
  // @@protoc_insertion_point(field_get:com.android.server.usage.PendingEventProto.config)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::content::ConfigurationProto*>(
      &::android::content::_ConfigurationProto_default_instance_);
}
inline ::android::content::ConfigurationProto* PendingEventProto::release_config() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.PendingEventProto.config)
  _has_bits_[0] &= ~0x00000080u;
  ::android::content::ConfigurationProto* temp = config_;
  config_ = nullptr;
  return temp;
}
inline ::android::content::ConfigurationProto* PendingEventProto::mutable_config() {
  _has_bits_[0] |= 0x00000080u;
  if (config_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::content::ConfigurationProto>(GetArenaNoVirtual());
    config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.PendingEventProto.config)
  return config_;
}
inline void PendingEventProto::set_allocated_config(::android::content::ConfigurationProto* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(config_);
  }
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.PendingEventProto.config)
}

// optional string shortcut_id = 7 [(.android.privacy) = {
inline bool PendingEventProto::has_shortcut_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PendingEventProto::clear_shortcut_id() {
  shortcut_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& PendingEventProto::shortcut_id() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.PendingEventProto.shortcut_id)
  return shortcut_id_.GetNoArena();
}
inline void PendingEventProto::set_shortcut_id(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  shortcut_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.usage.PendingEventProto.shortcut_id)
}
inline void PendingEventProto::set_shortcut_id(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  shortcut_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.usage.PendingEventProto.shortcut_id)
}
inline void PendingEventProto::set_shortcut_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  shortcut_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.usage.PendingEventProto.shortcut_id)
}
inline void PendingEventProto::set_shortcut_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  shortcut_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.usage.PendingEventProto.shortcut_id)
}
inline std::string* PendingEventProto::mutable_shortcut_id() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.PendingEventProto.shortcut_id)
  return shortcut_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PendingEventProto::release_shortcut_id() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.PendingEventProto.shortcut_id)
  if (!has_shortcut_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return shortcut_id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PendingEventProto::set_allocated_shortcut_id(std::string* shortcut_id) {
  if (shortcut_id != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  shortcut_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), shortcut_id);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.PendingEventProto.shortcut_id)
}

// optional int32 standby_bucket = 8;
inline bool PendingEventProto::has_standby_bucket() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PendingEventProto::clear_standby_bucket() {
  standby_bucket_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PendingEventProto::standby_bucket() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.PendingEventProto.standby_bucket)
  return standby_bucket_;
}
inline void PendingEventProto::set_standby_bucket(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  standby_bucket_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.PendingEventProto.standby_bucket)
}

// optional string notification_channel_id = 9 [(.android.privacy) = {
inline bool PendingEventProto::has_notification_channel_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PendingEventProto::clear_notification_channel_id() {
  notification_channel_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& PendingEventProto::notification_channel_id() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.PendingEventProto.notification_channel_id)
  return notification_channel_id_.GetNoArena();
}
inline void PendingEventProto::set_notification_channel_id(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  notification_channel_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.usage.PendingEventProto.notification_channel_id)
}
inline void PendingEventProto::set_notification_channel_id(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  notification_channel_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.usage.PendingEventProto.notification_channel_id)
}
inline void PendingEventProto::set_notification_channel_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  notification_channel_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.usage.PendingEventProto.notification_channel_id)
}
inline void PendingEventProto::set_notification_channel_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  notification_channel_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.usage.PendingEventProto.notification_channel_id)
}
inline std::string* PendingEventProto::mutable_notification_channel_id() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.PendingEventProto.notification_channel_id)
  return notification_channel_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PendingEventProto::release_notification_channel_id() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.PendingEventProto.notification_channel_id)
  if (!has_notification_channel_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return notification_channel_id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PendingEventProto::set_allocated_notification_channel_id(std::string* notification_channel_id) {
  if (notification_channel_id != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  notification_channel_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), notification_channel_id);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.PendingEventProto.notification_channel_id)
}

// optional int32 instance_id = 10;
inline bool PendingEventProto::has_instance_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PendingEventProto::clear_instance_id() {
  instance_id_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PendingEventProto::instance_id() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.PendingEventProto.instance_id)
  return instance_id_;
}
inline void PendingEventProto::set_instance_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.PendingEventProto.instance_id)
}

// optional string task_root_package = 11;
inline bool PendingEventProto::has_task_root_package() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PendingEventProto::clear_task_root_package() {
  task_root_package_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& PendingEventProto::task_root_package() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.PendingEventProto.task_root_package)
  return task_root_package_.GetNoArena();
}
inline void PendingEventProto::set_task_root_package(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  task_root_package_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.usage.PendingEventProto.task_root_package)
}
inline void PendingEventProto::set_task_root_package(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  task_root_package_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.usage.PendingEventProto.task_root_package)
}
inline void PendingEventProto::set_task_root_package(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  task_root_package_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.usage.PendingEventProto.task_root_package)
}
inline void PendingEventProto::set_task_root_package(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  task_root_package_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.usage.PendingEventProto.task_root_package)
}
inline std::string* PendingEventProto::mutable_task_root_package() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.PendingEventProto.task_root_package)
  return task_root_package_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PendingEventProto::release_task_root_package() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.PendingEventProto.task_root_package)
  if (!has_task_root_package()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return task_root_package_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PendingEventProto::set_allocated_task_root_package(std::string* task_root_package) {
  if (task_root_package != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  task_root_package_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), task_root_package);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.PendingEventProto.task_root_package)
}

// optional string task_root_class = 12;
inline bool PendingEventProto::has_task_root_class() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PendingEventProto::clear_task_root_class() {
  task_root_class_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& PendingEventProto::task_root_class() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.PendingEventProto.task_root_class)
  return task_root_class_.GetNoArena();
}
inline void PendingEventProto::set_task_root_class(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  task_root_class_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.usage.PendingEventProto.task_root_class)
}
inline void PendingEventProto::set_task_root_class(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  task_root_class_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.usage.PendingEventProto.task_root_class)
}
inline void PendingEventProto::set_task_root_class(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  task_root_class_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.usage.PendingEventProto.task_root_class)
}
inline void PendingEventProto::set_task_root_class(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  task_root_class_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.usage.PendingEventProto.task_root_class)
}
inline std::string* PendingEventProto::mutable_task_root_class() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.PendingEventProto.task_root_class)
  return task_root_class_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PendingEventProto::release_task_root_class() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.PendingEventProto.task_root_class)
  if (!has_task_root_class()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return task_root_class_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PendingEventProto::set_allocated_task_root_class(std::string* task_root_class) {
  if (task_root_class != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  task_root_class_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), task_root_class);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.PendingEventProto.task_root_class)
}

// optional string locus_id = 13 [(.android.privacy) = {
inline bool PendingEventProto::has_locus_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PendingEventProto::clear_locus_id() {
  locus_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& PendingEventProto::locus_id() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.PendingEventProto.locus_id)
  return locus_id_.GetNoArena();
}
inline void PendingEventProto::set_locus_id(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  locus_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.usage.PendingEventProto.locus_id)
}
inline void PendingEventProto::set_locus_id(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  locus_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.usage.PendingEventProto.locus_id)
}
inline void PendingEventProto::set_locus_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  locus_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.usage.PendingEventProto.locus_id)
}
inline void PendingEventProto::set_locus_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  locus_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.usage.PendingEventProto.locus_id)
}
inline std::string* PendingEventProto::mutable_locus_id() {
  _has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.PendingEventProto.locus_id)
  return locus_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PendingEventProto::release_locus_id() {
  // @@protoc_insertion_point(field_release:com.android.server.usage.PendingEventProto.locus_id)
  if (!has_locus_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return locus_id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PendingEventProto::set_allocated_locus_id(std::string* locus_id) {
  if (locus_id != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  locus_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locus_id);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.usage.PendingEventProto.locus_id)
}

// -------------------------------------------------------------------

// ObfuscatedPackagesProto_PackagesMap

// optional int32 package_token = 1;
inline bool ObfuscatedPackagesProto_PackagesMap::has_package_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObfuscatedPackagesProto_PackagesMap::clear_package_token() {
  package_token_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObfuscatedPackagesProto_PackagesMap::package_token() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.package_token)
  return package_token_;
}
inline void ObfuscatedPackagesProto_PackagesMap::set_package_token(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  package_token_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.package_token)
}

// repeated string strings = 2 [(.android.privacy) = {
inline int ObfuscatedPackagesProto_PackagesMap::strings_size() const {
  return strings_.size();
}
inline void ObfuscatedPackagesProto_PackagesMap::clear_strings() {
  strings_.Clear();
}
inline const std::string& ObfuscatedPackagesProto_PackagesMap::strings(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings)
  return strings_.Get(index);
}
inline std::string* ObfuscatedPackagesProto_PackagesMap::mutable_strings(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings)
  return strings_.Mutable(index);
}
inline void ObfuscatedPackagesProto_PackagesMap::set_strings(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings)
  strings_.Mutable(index)->assign(value);
}
inline void ObfuscatedPackagesProto_PackagesMap::set_strings(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings)
  strings_.Mutable(index)->assign(std::move(value));
}
inline void ObfuscatedPackagesProto_PackagesMap::set_strings(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strings_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings)
}
inline void ObfuscatedPackagesProto_PackagesMap::set_strings(int index, const char* value, size_t size) {
  strings_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings)
}
inline std::string* ObfuscatedPackagesProto_PackagesMap::add_strings() {
  // @@protoc_insertion_point(field_add_mutable:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings)
  return strings_.Add();
}
inline void ObfuscatedPackagesProto_PackagesMap::add_strings(const std::string& value) {
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings)
}
inline void ObfuscatedPackagesProto_PackagesMap::add_strings(std::string&& value) {
  strings_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings)
}
inline void ObfuscatedPackagesProto_PackagesMap::add_strings(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings)
}
inline void ObfuscatedPackagesProto_PackagesMap::add_strings(const char* value, size_t size) {
  strings_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ObfuscatedPackagesProto_PackagesMap::strings() const {
  // @@protoc_insertion_point(field_list:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings)
  return strings_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ObfuscatedPackagesProto_PackagesMap::mutable_strings() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings)
  return &strings_;
}

// -------------------------------------------------------------------

// ObfuscatedPackagesProto

// optional int32 counter = 1;
inline bool ObfuscatedPackagesProto::has_counter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObfuscatedPackagesProto::clear_counter() {
  counter_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObfuscatedPackagesProto::counter() const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.ObfuscatedPackagesProto.counter)
  return counter_;
}
inline void ObfuscatedPackagesProto::set_counter(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  counter_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.usage.ObfuscatedPackagesProto.counter)
}

// repeated .com.android.server.usage.ObfuscatedPackagesProto.PackagesMap packages_map = 2;
inline int ObfuscatedPackagesProto::packages_map_size() const {
  return packages_map_.size();
}
inline void ObfuscatedPackagesProto::clear_packages_map() {
  packages_map_.Clear();
}
inline ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap* ObfuscatedPackagesProto::mutable_packages_map(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.usage.ObfuscatedPackagesProto.packages_map)
  return packages_map_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap >*
ObfuscatedPackagesProto::mutable_packages_map() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.usage.ObfuscatedPackagesProto.packages_map)
  return &packages_map_;
}
inline const ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap& ObfuscatedPackagesProto::packages_map(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.usage.ObfuscatedPackagesProto.packages_map)
  return packages_map_.Get(index);
}
inline ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap* ObfuscatedPackagesProto::add_packages_map() {
  // @@protoc_insertion_point(field_add:com.android.server.usage.ObfuscatedPackagesProto.packages_map)
  return packages_map_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap >&
ObfuscatedPackagesProto::packages_map() const {
  // @@protoc_insertion_point(field_list:com.android.server.usage.ObfuscatedPackagesProto.packages_map)
  return packages_map_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace usage
}  // namespace server
}  // namespace android
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto
