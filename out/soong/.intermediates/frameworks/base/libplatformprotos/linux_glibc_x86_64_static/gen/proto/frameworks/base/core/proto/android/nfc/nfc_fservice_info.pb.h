// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/nfc/nfc_fservice_info.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fnfc_5ffservice_5finfo_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fnfc_5ffservice_5finfo_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/content/component_name.pb.h"
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fnfc_5ffservice_5finfo_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fnfc_5ffservice_5finfo_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fnfc_5ffservice_5finfo_2eproto;
namespace android {
namespace nfc {
namespace cardemulation {
class NfcFServiceInfoProto;
class NfcFServiceInfoProtoDefaultTypeInternal;
extern NfcFServiceInfoProtoDefaultTypeInternal _NfcFServiceInfoProto_default_instance_;
}  // namespace cardemulation
}  // namespace nfc
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::nfc::cardemulation::NfcFServiceInfoProto* Arena::CreateMaybeMessage<::android::nfc::cardemulation::NfcFServiceInfoProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace nfc {
namespace cardemulation {

// ===================================================================

class NfcFServiceInfoProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.nfc.cardemulation.NfcFServiceInfoProto) */ {
 public:
  NfcFServiceInfoProto();
  virtual ~NfcFServiceInfoProto();

  NfcFServiceInfoProto(const NfcFServiceInfoProto& from);
  NfcFServiceInfoProto(NfcFServiceInfoProto&& from) noexcept
    : NfcFServiceInfoProto() {
    *this = ::std::move(from);
  }

  inline NfcFServiceInfoProto& operator=(const NfcFServiceInfoProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NfcFServiceInfoProto& operator=(NfcFServiceInfoProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NfcFServiceInfoProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NfcFServiceInfoProto* internal_default_instance() {
    return reinterpret_cast<const NfcFServiceInfoProto*>(
               &_NfcFServiceInfoProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NfcFServiceInfoProto& a, NfcFServiceInfoProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NfcFServiceInfoProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NfcFServiceInfoProto* New() const final {
    return CreateMaybeMessage<NfcFServiceInfoProto>(nullptr);
  }

  NfcFServiceInfoProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NfcFServiceInfoProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NfcFServiceInfoProto& from);
  void MergeFrom(const NfcFServiceInfoProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NfcFServiceInfoProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.nfc.cardemulation.NfcFServiceInfoProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fnfc_5ffservice_5finfo_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fnfc_5ffservice_5finfo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDescriptionFieldNumber = 2,
    kSystemCodeFieldNumber = 3,
    kNfcid2FieldNumber = 4,
    kT3TPmmFieldNumber = 5,
    kComponentNameFieldNumber = 1,
  };
  // optional string description = 2;
  bool has_description() const;
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);

  // optional string system_code = 3;
  bool has_system_code() const;
  void clear_system_code();
  const std::string& system_code() const;
  void set_system_code(const std::string& value);
  void set_system_code(std::string&& value);
  void set_system_code(const char* value);
  void set_system_code(const char* value, size_t size);
  std::string* mutable_system_code();
  std::string* release_system_code();
  void set_allocated_system_code(std::string* system_code);

  // optional string nfcid2 = 4;
  bool has_nfcid2() const;
  void clear_nfcid2();
  const std::string& nfcid2() const;
  void set_nfcid2(const std::string& value);
  void set_nfcid2(std::string&& value);
  void set_nfcid2(const char* value);
  void set_nfcid2(const char* value, size_t size);
  std::string* mutable_nfcid2();
  std::string* release_nfcid2();
  void set_allocated_nfcid2(std::string* nfcid2);

  // optional string t3t_pmm = 5;
  bool has_t3t_pmm() const;
  void clear_t3t_pmm();
  const std::string& t3t_pmm() const;
  void set_t3t_pmm(const std::string& value);
  void set_t3t_pmm(std::string&& value);
  void set_t3t_pmm(const char* value);
  void set_t3t_pmm(const char* value, size_t size);
  std::string* mutable_t3t_pmm();
  std::string* release_t3t_pmm();
  void set_allocated_t3t_pmm(std::string* t3t_pmm);

  // optional .android.content.ComponentNameProto component_name = 1;
  bool has_component_name() const;
  void clear_component_name();
  const ::android::content::ComponentNameProto& component_name() const;
  ::android::content::ComponentNameProto* release_component_name();
  ::android::content::ComponentNameProto* mutable_component_name();
  void set_allocated_component_name(::android::content::ComponentNameProto* component_name);

  // @@protoc_insertion_point(class_scope:android.nfc.cardemulation.NfcFServiceInfoProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr system_code_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nfcid2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr t3t_pmm_;
  ::android::content::ComponentNameProto* component_name_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fnfc_5ffservice_5finfo_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NfcFServiceInfoProto

// optional .android.content.ComponentNameProto component_name = 1;
inline bool NfcFServiceInfoProto::has_component_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline const ::android::content::ComponentNameProto& NfcFServiceInfoProto::component_name() const {
  const ::android::content::ComponentNameProto* p = component_name_;
  // @@protoc_insertion_point(field_get:android.nfc.cardemulation.NfcFServiceInfoProto.component_name)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::content::ComponentNameProto*>(
      &::android::content::_ComponentNameProto_default_instance_);
}
inline ::android::content::ComponentNameProto* NfcFServiceInfoProto::release_component_name() {
  // @@protoc_insertion_point(field_release:android.nfc.cardemulation.NfcFServiceInfoProto.component_name)
  _has_bits_[0] &= ~0x00000010u;
  ::android::content::ComponentNameProto* temp = component_name_;
  component_name_ = nullptr;
  return temp;
}
inline ::android::content::ComponentNameProto* NfcFServiceInfoProto::mutable_component_name() {
  _has_bits_[0] |= 0x00000010u;
  if (component_name_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::content::ComponentNameProto>(GetArenaNoVirtual());
    component_name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.nfc.cardemulation.NfcFServiceInfoProto.component_name)
  return component_name_;
}
inline void NfcFServiceInfoProto::set_allocated_component_name(::android::content::ComponentNameProto* component_name) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(component_name_);
  }
  if (component_name) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      component_name = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, component_name, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  component_name_ = component_name;
  // @@protoc_insertion_point(field_set_allocated:android.nfc.cardemulation.NfcFServiceInfoProto.component_name)
}

// optional string description = 2;
inline bool NfcFServiceInfoProto::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NfcFServiceInfoProto::clear_description() {
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& NfcFServiceInfoProto::description() const {
  // @@protoc_insertion_point(field_get:android.nfc.cardemulation.NfcFServiceInfoProto.description)
  return description_.GetNoArena();
}
inline void NfcFServiceInfoProto::set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.nfc.cardemulation.NfcFServiceInfoProto.description)
}
inline void NfcFServiceInfoProto::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.nfc.cardemulation.NfcFServiceInfoProto.description)
}
inline void NfcFServiceInfoProto::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.nfc.cardemulation.NfcFServiceInfoProto.description)
}
inline void NfcFServiceInfoProto::set_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.nfc.cardemulation.NfcFServiceInfoProto.description)
}
inline std::string* NfcFServiceInfoProto::mutable_description() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.nfc.cardemulation.NfcFServiceInfoProto.description)
  return description_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NfcFServiceInfoProto::release_description() {
  // @@protoc_insertion_point(field_release:android.nfc.cardemulation.NfcFServiceInfoProto.description)
  if (!has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return description_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NfcFServiceInfoProto::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  description_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:android.nfc.cardemulation.NfcFServiceInfoProto.description)
}

// optional string system_code = 3;
inline bool NfcFServiceInfoProto::has_system_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NfcFServiceInfoProto::clear_system_code() {
  system_code_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& NfcFServiceInfoProto::system_code() const {
  // @@protoc_insertion_point(field_get:android.nfc.cardemulation.NfcFServiceInfoProto.system_code)
  return system_code_.GetNoArena();
}
inline void NfcFServiceInfoProto::set_system_code(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  system_code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.nfc.cardemulation.NfcFServiceInfoProto.system_code)
}
inline void NfcFServiceInfoProto::set_system_code(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  system_code_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.nfc.cardemulation.NfcFServiceInfoProto.system_code)
}
inline void NfcFServiceInfoProto::set_system_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  system_code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.nfc.cardemulation.NfcFServiceInfoProto.system_code)
}
inline void NfcFServiceInfoProto::set_system_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  system_code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.nfc.cardemulation.NfcFServiceInfoProto.system_code)
}
inline std::string* NfcFServiceInfoProto::mutable_system_code() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.nfc.cardemulation.NfcFServiceInfoProto.system_code)
  return system_code_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NfcFServiceInfoProto::release_system_code() {
  // @@protoc_insertion_point(field_release:android.nfc.cardemulation.NfcFServiceInfoProto.system_code)
  if (!has_system_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return system_code_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NfcFServiceInfoProto::set_allocated_system_code(std::string* system_code) {
  if (system_code != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  system_code_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), system_code);
  // @@protoc_insertion_point(field_set_allocated:android.nfc.cardemulation.NfcFServiceInfoProto.system_code)
}

// optional string nfcid2 = 4;
inline bool NfcFServiceInfoProto::has_nfcid2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NfcFServiceInfoProto::clear_nfcid2() {
  nfcid2_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& NfcFServiceInfoProto::nfcid2() const {
  // @@protoc_insertion_point(field_get:android.nfc.cardemulation.NfcFServiceInfoProto.nfcid2)
  return nfcid2_.GetNoArena();
}
inline void NfcFServiceInfoProto::set_nfcid2(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  nfcid2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.nfc.cardemulation.NfcFServiceInfoProto.nfcid2)
}
inline void NfcFServiceInfoProto::set_nfcid2(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  nfcid2_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.nfc.cardemulation.NfcFServiceInfoProto.nfcid2)
}
inline void NfcFServiceInfoProto::set_nfcid2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  nfcid2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.nfc.cardemulation.NfcFServiceInfoProto.nfcid2)
}
inline void NfcFServiceInfoProto::set_nfcid2(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  nfcid2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.nfc.cardemulation.NfcFServiceInfoProto.nfcid2)
}
inline std::string* NfcFServiceInfoProto::mutable_nfcid2() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.nfc.cardemulation.NfcFServiceInfoProto.nfcid2)
  return nfcid2_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NfcFServiceInfoProto::release_nfcid2() {
  // @@protoc_insertion_point(field_release:android.nfc.cardemulation.NfcFServiceInfoProto.nfcid2)
  if (!has_nfcid2()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return nfcid2_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NfcFServiceInfoProto::set_allocated_nfcid2(std::string* nfcid2) {
  if (nfcid2 != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  nfcid2_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nfcid2);
  // @@protoc_insertion_point(field_set_allocated:android.nfc.cardemulation.NfcFServiceInfoProto.nfcid2)
}

// optional string t3t_pmm = 5;
inline bool NfcFServiceInfoProto::has_t3t_pmm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NfcFServiceInfoProto::clear_t3t_pmm() {
  t3t_pmm_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& NfcFServiceInfoProto::t3t_pmm() const {
  // @@protoc_insertion_point(field_get:android.nfc.cardemulation.NfcFServiceInfoProto.t3t_pmm)
  return t3t_pmm_.GetNoArena();
}
inline void NfcFServiceInfoProto::set_t3t_pmm(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  t3t_pmm_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.nfc.cardemulation.NfcFServiceInfoProto.t3t_pmm)
}
inline void NfcFServiceInfoProto::set_t3t_pmm(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  t3t_pmm_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.nfc.cardemulation.NfcFServiceInfoProto.t3t_pmm)
}
inline void NfcFServiceInfoProto::set_t3t_pmm(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  t3t_pmm_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.nfc.cardemulation.NfcFServiceInfoProto.t3t_pmm)
}
inline void NfcFServiceInfoProto::set_t3t_pmm(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  t3t_pmm_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.nfc.cardemulation.NfcFServiceInfoProto.t3t_pmm)
}
inline std::string* NfcFServiceInfoProto::mutable_t3t_pmm() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.nfc.cardemulation.NfcFServiceInfoProto.t3t_pmm)
  return t3t_pmm_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NfcFServiceInfoProto::release_t3t_pmm() {
  // @@protoc_insertion_point(field_release:android.nfc.cardemulation.NfcFServiceInfoProto.t3t_pmm)
  if (!has_t3t_pmm()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return t3t_pmm_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NfcFServiceInfoProto::set_allocated_t3t_pmm(std::string* t3t_pmm) {
  if (t3t_pmm != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  t3t_pmm_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), t3t_pmm);
  // @@protoc_insertion_point(field_set_allocated:android.nfc.cardemulation.NfcFServiceInfoProto.t3t_pmm)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace cardemulation
}  // namespace nfc
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fnfc_5ffservice_5finfo_2eproto
