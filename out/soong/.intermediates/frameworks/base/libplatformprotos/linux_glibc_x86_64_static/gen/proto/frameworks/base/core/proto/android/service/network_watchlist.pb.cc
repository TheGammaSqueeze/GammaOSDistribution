// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/service/network_watchlist.proto

#include "frameworks/base/core/proto/android/service/network_watchlist.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NetworkWatchlistAppResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto;
namespace com {
namespace android {
namespace service {
class NetworkWatchlistReportProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NetworkWatchlistReportProto> _instance;
} _NetworkWatchlistReportProto_default_instance_;
class NetworkWatchlistAppResultProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NetworkWatchlistAppResultProto> _instance;
} _NetworkWatchlistAppResultProto_default_instance_;
}  // namespace service
}  // namespace android
}  // namespace com
static void InitDefaultsscc_info_NetworkWatchlistAppResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::service::_NetworkWatchlistAppResultProto_default_instance_;
    new (ptr) ::com::android::service::NetworkWatchlistAppResultProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::service::NetworkWatchlistAppResultProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NetworkWatchlistAppResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_NetworkWatchlistAppResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto}, {}};

static void InitDefaultsscc_info_NetworkWatchlistReportProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::service::_NetworkWatchlistReportProto_default_instance_;
    new (ptr) ::com::android::service::NetworkWatchlistReportProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::service::NetworkWatchlistReportProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NetworkWatchlistReportProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_NetworkWatchlistReportProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto}, {
      &scc_info_NetworkWatchlistAppResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::com::android::service::NetworkWatchlistReportProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::service::NetworkWatchlistReportProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::service::NetworkWatchlistReportProto, report_version_),
  PROTOBUF_FIELD_OFFSET(::com::android::service::NetworkWatchlistReportProto, watchlist_config_hash_),
  PROTOBUF_FIELD_OFFSET(::com::android::service::NetworkWatchlistReportProto, app_result_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::android::service::NetworkWatchlistAppResultProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::service::NetworkWatchlistAppResultProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::service::NetworkWatchlistAppResultProto, app_digest_),
  PROTOBUF_FIELD_OFFSET(::com::android::service::NetworkWatchlistAppResultProto, encoded_result_),
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::com::android::service::NetworkWatchlistReportProto)},
  { 11, 18, sizeof(::com::android::service::NetworkWatchlistAppResultProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::service::_NetworkWatchlistReportProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::service::_NetworkWatchlistAppResultProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nBframeworks/base/core/proto/android/ser"
  "vice/network_watchlist.proto\022\023com.androi"
  "d.service\"\235\001\n\033NetworkWatchlistReportProt"
  "o\022\026\n\016report_version\030\001 \001(\005\022\035\n\025watchlist_c"
  "onfig_hash\030\002 \001(\t\022G\n\napp_result\030\003 \003(\01323.c"
  "om.android.service.NetworkWatchlistAppRe"
  "sultProto\"L\n\036NetworkWatchlistAppResultPr"
  "oto\022\022\n\napp_digest\030\001 \001(\t\022\026\n\016encoded_resul"
  "t\030\002 \001(\010B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto_sccs[2] = {
  &scc_info_NetworkWatchlistAppResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto.base,
  &scc_info_NetworkWatchlistReportProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto, "frameworks/base/core/proto/android/service/network_watchlist.proto", 331,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto, 2, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto), true);
namespace com {
namespace android {
namespace service {

// ===================================================================

void NetworkWatchlistReportProto::InitAsDefaultInstance() {
}
class NetworkWatchlistReportProto::_Internal {
 public:
  using HasBits = decltype(std::declval<NetworkWatchlistReportProto>()._has_bits_);
  static void set_has_report_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_watchlist_config_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

NetworkWatchlistReportProto::NetworkWatchlistReportProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.service.NetworkWatchlistReportProto)
}
NetworkWatchlistReportProto::NetworkWatchlistReportProto(const NetworkWatchlistReportProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      app_result_(from.app_result_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  watchlist_config_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_watchlist_config_hash()) {
    watchlist_config_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.watchlist_config_hash_);
  }
  report_version_ = from.report_version_;
  // @@protoc_insertion_point(copy_constructor:com.android.service.NetworkWatchlistReportProto)
}

void NetworkWatchlistReportProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NetworkWatchlistReportProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto.base);
  watchlist_config_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  report_version_ = 0;
}

NetworkWatchlistReportProto::~NetworkWatchlistReportProto() {
  // @@protoc_insertion_point(destructor:com.android.service.NetworkWatchlistReportProto)
  SharedDtor();
}

void NetworkWatchlistReportProto::SharedDtor() {
  watchlist_config_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NetworkWatchlistReportProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NetworkWatchlistReportProto& NetworkWatchlistReportProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NetworkWatchlistReportProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto.base);
  return *internal_default_instance();
}


void NetworkWatchlistReportProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.service.NetworkWatchlistReportProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_result_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    watchlist_config_hash_.ClearNonDefaultToEmptyNoArena();
  }
  report_version_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NetworkWatchlistReportProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 report_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_report_version(&has_bits);
          report_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string watchlist_config_hash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_watchlist_config_hash(), ptr, ctx, "com.android.service.NetworkWatchlistReportProto.watchlist_config_hash");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.service.NetworkWatchlistAppResultProto app_result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_app_result(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NetworkWatchlistReportProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.service.NetworkWatchlistReportProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 report_version = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_report_version(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &report_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string watchlist_config_hash = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_watchlist_config_hash()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->watchlist_config_hash().data(), static_cast<int>(this->watchlist_config_hash().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.service.NetworkWatchlistReportProto.watchlist_config_hash");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.service.NetworkWatchlistAppResultProto app_result = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_app_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.service.NetworkWatchlistReportProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.service.NetworkWatchlistReportProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NetworkWatchlistReportProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.service.NetworkWatchlistReportProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 report_version = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->report_version(), output);
  }

  // optional string watchlist_config_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->watchlist_config_hash().data(), static_cast<int>(this->watchlist_config_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.service.NetworkWatchlistReportProto.watchlist_config_hash");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->watchlist_config_hash(), output);
  }

  // repeated .com.android.service.NetworkWatchlistAppResultProto app_result = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->app_result_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->app_result(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.service.NetworkWatchlistReportProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* NetworkWatchlistReportProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.service.NetworkWatchlistReportProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 report_version = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->report_version(), target);
  }

  // optional string watchlist_config_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->watchlist_config_hash().data(), static_cast<int>(this->watchlist_config_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.service.NetworkWatchlistReportProto.watchlist_config_hash");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->watchlist_config_hash(), target);
  }

  // repeated .com.android.service.NetworkWatchlistAppResultProto app_result = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->app_result_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->app_result(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.service.NetworkWatchlistReportProto)
  return target;
}

size_t NetworkWatchlistReportProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.service.NetworkWatchlistReportProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.service.NetworkWatchlistAppResultProto app_result = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->app_result_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->app_result(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string watchlist_config_hash = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->watchlist_config_hash());
    }

    // optional int32 report_version = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->report_version());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetworkWatchlistReportProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.service.NetworkWatchlistReportProto)
  GOOGLE_DCHECK_NE(&from, this);
  const NetworkWatchlistReportProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NetworkWatchlistReportProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.service.NetworkWatchlistReportProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.service.NetworkWatchlistReportProto)
    MergeFrom(*source);
  }
}

void NetworkWatchlistReportProto::MergeFrom(const NetworkWatchlistReportProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.service.NetworkWatchlistReportProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  app_result_.MergeFrom(from.app_result_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      watchlist_config_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.watchlist_config_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      report_version_ = from.report_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NetworkWatchlistReportProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.service.NetworkWatchlistReportProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkWatchlistReportProto::CopyFrom(const NetworkWatchlistReportProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.service.NetworkWatchlistReportProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkWatchlistReportProto::IsInitialized() const {
  return true;
}

void NetworkWatchlistReportProto::InternalSwap(NetworkWatchlistReportProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&app_result_)->InternalSwap(CastToBase(&other->app_result_));
  watchlist_config_hash_.Swap(&other->watchlist_config_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(report_version_, other->report_version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NetworkWatchlistReportProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NetworkWatchlistAppResultProto::InitAsDefaultInstance() {
}
class NetworkWatchlistAppResultProto::_Internal {
 public:
  using HasBits = decltype(std::declval<NetworkWatchlistAppResultProto>()._has_bits_);
  static void set_has_app_digest(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_encoded_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

NetworkWatchlistAppResultProto::NetworkWatchlistAppResultProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.service.NetworkWatchlistAppResultProto)
}
NetworkWatchlistAppResultProto::NetworkWatchlistAppResultProto(const NetworkWatchlistAppResultProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_digest_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_app_digest()) {
    app_digest_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.app_digest_);
  }
  encoded_result_ = from.encoded_result_;
  // @@protoc_insertion_point(copy_constructor:com.android.service.NetworkWatchlistAppResultProto)
}

void NetworkWatchlistAppResultProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NetworkWatchlistAppResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto.base);
  app_digest_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  encoded_result_ = false;
}

NetworkWatchlistAppResultProto::~NetworkWatchlistAppResultProto() {
  // @@protoc_insertion_point(destructor:com.android.service.NetworkWatchlistAppResultProto)
  SharedDtor();
}

void NetworkWatchlistAppResultProto::SharedDtor() {
  app_digest_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NetworkWatchlistAppResultProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NetworkWatchlistAppResultProto& NetworkWatchlistAppResultProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NetworkWatchlistAppResultProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto.base);
  return *internal_default_instance();
}


void NetworkWatchlistAppResultProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.service.NetworkWatchlistAppResultProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    app_digest_.ClearNonDefaultToEmptyNoArena();
  }
  encoded_result_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NetworkWatchlistAppResultProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string app_digest = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_app_digest(), ptr, ctx, "com.android.service.NetworkWatchlistAppResultProto.app_digest");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool encoded_result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_encoded_result(&has_bits);
          encoded_result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NetworkWatchlistAppResultProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.service.NetworkWatchlistAppResultProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app_digest = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_app_digest()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app_digest().data(), static_cast<int>(this->app_digest().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.service.NetworkWatchlistAppResultProto.app_digest");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool encoded_result = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_encoded_result(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &encoded_result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.service.NetworkWatchlistAppResultProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.service.NetworkWatchlistAppResultProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NetworkWatchlistAppResultProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.service.NetworkWatchlistAppResultProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string app_digest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_digest().data(), static_cast<int>(this->app_digest().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.service.NetworkWatchlistAppResultProto.app_digest");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_digest(), output);
  }

  // optional bool encoded_result = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->encoded_result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.service.NetworkWatchlistAppResultProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* NetworkWatchlistAppResultProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.service.NetworkWatchlistAppResultProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string app_digest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_digest().data(), static_cast<int>(this->app_digest().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.service.NetworkWatchlistAppResultProto.app_digest");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->app_digest(), target);
  }

  // optional bool encoded_result = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->encoded_result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.service.NetworkWatchlistAppResultProto)
  return target;
}

size_t NetworkWatchlistAppResultProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.service.NetworkWatchlistAppResultProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string app_digest = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->app_digest());
    }

    // optional bool encoded_result = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetworkWatchlistAppResultProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.service.NetworkWatchlistAppResultProto)
  GOOGLE_DCHECK_NE(&from, this);
  const NetworkWatchlistAppResultProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NetworkWatchlistAppResultProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.service.NetworkWatchlistAppResultProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.service.NetworkWatchlistAppResultProto)
    MergeFrom(*source);
  }
}

void NetworkWatchlistAppResultProto::MergeFrom(const NetworkWatchlistAppResultProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.service.NetworkWatchlistAppResultProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      app_digest_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.app_digest_);
    }
    if (cached_has_bits & 0x00000002u) {
      encoded_result_ = from.encoded_result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NetworkWatchlistAppResultProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.service.NetworkWatchlistAppResultProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkWatchlistAppResultProto::CopyFrom(const NetworkWatchlistAppResultProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.service.NetworkWatchlistAppResultProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkWatchlistAppResultProto::IsInitialized() const {
  return true;
}

void NetworkWatchlistAppResultProto::InternalSwap(NetworkWatchlistAppResultProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  app_digest_.Swap(&other->app_digest_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(encoded_result_, other->encoded_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NetworkWatchlistAppResultProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::android::service::NetworkWatchlistReportProto* Arena::CreateMaybeMessage< ::com::android::service::NetworkWatchlistReportProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::service::NetworkWatchlistReportProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::service::NetworkWatchlistAppResultProto* Arena::CreateMaybeMessage< ::com::android::service::NetworkWatchlistAppResultProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::service::NetworkWatchlistAppResultProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
