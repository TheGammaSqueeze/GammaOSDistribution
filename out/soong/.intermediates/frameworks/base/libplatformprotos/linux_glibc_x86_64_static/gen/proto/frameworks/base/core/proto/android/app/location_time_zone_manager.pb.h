// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/app/location_time_zone_manager.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2flocation_5ftime_5fzone_5fmanager_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2flocation_5ftime_5fzone_5fmanager_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/app/time_zone_detector.pb.h"
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2flocation_5ftime_5fzone_5fmanager_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2flocation_5ftime_5fzone_5fmanager_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2flocation_5ftime_5fzone_5fmanager_2eproto;
namespace android {
namespace app {
namespace time {
class LocationTimeZoneManagerServiceStateProto;
class LocationTimeZoneManagerServiceStateProtoDefaultTypeInternal;
extern LocationTimeZoneManagerServiceStateProtoDefaultTypeInternal _LocationTimeZoneManagerServiceStateProto_default_instance_;
class TimeZoneProviderStateProto;
class TimeZoneProviderStateProtoDefaultTypeInternal;
extern TimeZoneProviderStateProtoDefaultTypeInternal _TimeZoneProviderStateProto_default_instance_;
}  // namespace time
}  // namespace app
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::app::time::LocationTimeZoneManagerServiceStateProto* Arena::CreateMaybeMessage<::android::app::time::LocationTimeZoneManagerServiceStateProto>(Arena*);
template<> ::android::app::time::TimeZoneProviderStateProto* Arena::CreateMaybeMessage<::android::app::time::TimeZoneProviderStateProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace app {
namespace time {

enum TimeZoneProviderStateEnum : int {
  TIME_ZONE_PROVIDER_STATE_UNKNOWN = 0,
  TIME_ZONE_PROVIDER_STATE_INITIALIZING = 1,
  TIME_ZONE_PROVIDER_STATE_CERTAIN = 2,
  TIME_ZONE_PROVIDER_STATE_UNCERTAIN = 3,
  TIME_ZONE_PROVIDER_STATE_DISABLED = 4,
  TIME_ZONE_PROVIDER_STATE_PERM_FAILED = 5,
  TIME_ZONE_PROVIDER_STATE_DESTROYED = 6
};
bool TimeZoneProviderStateEnum_IsValid(int value);
constexpr TimeZoneProviderStateEnum TimeZoneProviderStateEnum_MIN = TIME_ZONE_PROVIDER_STATE_UNKNOWN;
constexpr TimeZoneProviderStateEnum TimeZoneProviderStateEnum_MAX = TIME_ZONE_PROVIDER_STATE_DESTROYED;
constexpr int TimeZoneProviderStateEnum_ARRAYSIZE = TimeZoneProviderStateEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TimeZoneProviderStateEnum_descriptor();
template<typename T>
inline const std::string& TimeZoneProviderStateEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, TimeZoneProviderStateEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function TimeZoneProviderStateEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    TimeZoneProviderStateEnum_descriptor(), enum_t_value);
}
inline bool TimeZoneProviderStateEnum_Parse(
    const std::string& name, TimeZoneProviderStateEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<TimeZoneProviderStateEnum>(
    TimeZoneProviderStateEnum_descriptor(), name, value);
}
// ===================================================================

class LocationTimeZoneManagerServiceStateProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.app.time.LocationTimeZoneManagerServiceStateProto) */ {
 public:
  LocationTimeZoneManagerServiceStateProto();
  virtual ~LocationTimeZoneManagerServiceStateProto();

  LocationTimeZoneManagerServiceStateProto(const LocationTimeZoneManagerServiceStateProto& from);
  LocationTimeZoneManagerServiceStateProto(LocationTimeZoneManagerServiceStateProto&& from) noexcept
    : LocationTimeZoneManagerServiceStateProto() {
    *this = ::std::move(from);
  }

  inline LocationTimeZoneManagerServiceStateProto& operator=(const LocationTimeZoneManagerServiceStateProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocationTimeZoneManagerServiceStateProto& operator=(LocationTimeZoneManagerServiceStateProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LocationTimeZoneManagerServiceStateProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocationTimeZoneManagerServiceStateProto* internal_default_instance() {
    return reinterpret_cast<const LocationTimeZoneManagerServiceStateProto*>(
               &_LocationTimeZoneManagerServiceStateProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LocationTimeZoneManagerServiceStateProto& a, LocationTimeZoneManagerServiceStateProto& b) {
    a.Swap(&b);
  }
  inline void Swap(LocationTimeZoneManagerServiceStateProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LocationTimeZoneManagerServiceStateProto* New() const final {
    return CreateMaybeMessage<LocationTimeZoneManagerServiceStateProto>(nullptr);
  }

  LocationTimeZoneManagerServiceStateProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LocationTimeZoneManagerServiceStateProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LocationTimeZoneManagerServiceStateProto& from);
  void MergeFrom(const LocationTimeZoneManagerServiceStateProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocationTimeZoneManagerServiceStateProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.app.time.LocationTimeZoneManagerServiceStateProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2flocation_5ftime_5fzone_5fmanager_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2flocation_5ftime_5fzone_5fmanager_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrimaryProviderStatesFieldNumber = 2,
    kSecondaryProviderStatesFieldNumber = 3,
    kLastSuggestionFieldNumber = 1,
  };
  // repeated .android.app.time.TimeZoneProviderStateProto primary_provider_states = 2;
  int primary_provider_states_size() const;
  void clear_primary_provider_states();
  ::android::app::time::TimeZoneProviderStateProto* mutable_primary_provider_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::time::TimeZoneProviderStateProto >*
      mutable_primary_provider_states();
  const ::android::app::time::TimeZoneProviderStateProto& primary_provider_states(int index) const;
  ::android::app::time::TimeZoneProviderStateProto* add_primary_provider_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::time::TimeZoneProviderStateProto >&
      primary_provider_states() const;

  // repeated .android.app.time.TimeZoneProviderStateProto secondary_provider_states = 3;
  int secondary_provider_states_size() const;
  void clear_secondary_provider_states();
  ::android::app::time::TimeZoneProviderStateProto* mutable_secondary_provider_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::time::TimeZoneProviderStateProto >*
      mutable_secondary_provider_states();
  const ::android::app::time::TimeZoneProviderStateProto& secondary_provider_states(int index) const;
  ::android::app::time::TimeZoneProviderStateProto* add_secondary_provider_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::time::TimeZoneProviderStateProto >&
      secondary_provider_states() const;

  // optional .android.app.time.GeolocationTimeZoneSuggestionProto last_suggestion = 1;
  bool has_last_suggestion() const;
  void clear_last_suggestion();
  const ::android::app::time::GeolocationTimeZoneSuggestionProto& last_suggestion() const;
  ::android::app::time::GeolocationTimeZoneSuggestionProto* release_last_suggestion();
  ::android::app::time::GeolocationTimeZoneSuggestionProto* mutable_last_suggestion();
  void set_allocated_last_suggestion(::android::app::time::GeolocationTimeZoneSuggestionProto* last_suggestion);

  // @@protoc_insertion_point(class_scope:android.app.time.LocationTimeZoneManagerServiceStateProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::time::TimeZoneProviderStateProto > primary_provider_states_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::time::TimeZoneProviderStateProto > secondary_provider_states_;
  ::android::app::time::GeolocationTimeZoneSuggestionProto* last_suggestion_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2flocation_5ftime_5fzone_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class TimeZoneProviderStateProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.app.time.TimeZoneProviderStateProto) */ {
 public:
  TimeZoneProviderStateProto();
  virtual ~TimeZoneProviderStateProto();

  TimeZoneProviderStateProto(const TimeZoneProviderStateProto& from);
  TimeZoneProviderStateProto(TimeZoneProviderStateProto&& from) noexcept
    : TimeZoneProviderStateProto() {
    *this = ::std::move(from);
  }

  inline TimeZoneProviderStateProto& operator=(const TimeZoneProviderStateProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimeZoneProviderStateProto& operator=(TimeZoneProviderStateProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TimeZoneProviderStateProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimeZoneProviderStateProto* internal_default_instance() {
    return reinterpret_cast<const TimeZoneProviderStateProto*>(
               &_TimeZoneProviderStateProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TimeZoneProviderStateProto& a, TimeZoneProviderStateProto& b) {
    a.Swap(&b);
  }
  inline void Swap(TimeZoneProviderStateProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TimeZoneProviderStateProto* New() const final {
    return CreateMaybeMessage<TimeZoneProviderStateProto>(nullptr);
  }

  TimeZoneProviderStateProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TimeZoneProviderStateProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TimeZoneProviderStateProto& from);
  void MergeFrom(const TimeZoneProviderStateProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimeZoneProviderStateProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.app.time.TimeZoneProviderStateProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2flocation_5ftime_5fzone_5fmanager_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2flocation_5ftime_5fzone_5fmanager_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 1,
  };
  // optional .android.app.time.TimeZoneProviderStateEnum state = 1;
  bool has_state() const;
  void clear_state();
  ::android::app::time::TimeZoneProviderStateEnum state() const;
  void set_state(::android::app::time::TimeZoneProviderStateEnum value);

  // @@protoc_insertion_point(class_scope:android.app.time.TimeZoneProviderStateProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int state_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2flocation_5ftime_5fzone_5fmanager_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LocationTimeZoneManagerServiceStateProto

// optional .android.app.time.GeolocationTimeZoneSuggestionProto last_suggestion = 1;
inline bool LocationTimeZoneManagerServiceStateProto::has_last_suggestion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::android::app::time::GeolocationTimeZoneSuggestionProto& LocationTimeZoneManagerServiceStateProto::last_suggestion() const {
  const ::android::app::time::GeolocationTimeZoneSuggestionProto* p = last_suggestion_;
  // @@protoc_insertion_point(field_get:android.app.time.LocationTimeZoneManagerServiceStateProto.last_suggestion)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::app::time::GeolocationTimeZoneSuggestionProto*>(
      &::android::app::time::_GeolocationTimeZoneSuggestionProto_default_instance_);
}
inline ::android::app::time::GeolocationTimeZoneSuggestionProto* LocationTimeZoneManagerServiceStateProto::release_last_suggestion() {
  // @@protoc_insertion_point(field_release:android.app.time.LocationTimeZoneManagerServiceStateProto.last_suggestion)
  _has_bits_[0] &= ~0x00000001u;
  ::android::app::time::GeolocationTimeZoneSuggestionProto* temp = last_suggestion_;
  last_suggestion_ = nullptr;
  return temp;
}
inline ::android::app::time::GeolocationTimeZoneSuggestionProto* LocationTimeZoneManagerServiceStateProto::mutable_last_suggestion() {
  _has_bits_[0] |= 0x00000001u;
  if (last_suggestion_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::app::time::GeolocationTimeZoneSuggestionProto>(GetArenaNoVirtual());
    last_suggestion_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.app.time.LocationTimeZoneManagerServiceStateProto.last_suggestion)
  return last_suggestion_;
}
inline void LocationTimeZoneManagerServiceStateProto::set_allocated_last_suggestion(::android::app::time::GeolocationTimeZoneSuggestionProto* last_suggestion) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_suggestion_);
  }
  if (last_suggestion) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      last_suggestion = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_suggestion, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  last_suggestion_ = last_suggestion;
  // @@protoc_insertion_point(field_set_allocated:android.app.time.LocationTimeZoneManagerServiceStateProto.last_suggestion)
}

// repeated .android.app.time.TimeZoneProviderStateProto primary_provider_states = 2;
inline int LocationTimeZoneManagerServiceStateProto::primary_provider_states_size() const {
  return primary_provider_states_.size();
}
inline void LocationTimeZoneManagerServiceStateProto::clear_primary_provider_states() {
  primary_provider_states_.Clear();
}
inline ::android::app::time::TimeZoneProviderStateProto* LocationTimeZoneManagerServiceStateProto::mutable_primary_provider_states(int index) {
  // @@protoc_insertion_point(field_mutable:android.app.time.LocationTimeZoneManagerServiceStateProto.primary_provider_states)
  return primary_provider_states_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::time::TimeZoneProviderStateProto >*
LocationTimeZoneManagerServiceStateProto::mutable_primary_provider_states() {
  // @@protoc_insertion_point(field_mutable_list:android.app.time.LocationTimeZoneManagerServiceStateProto.primary_provider_states)
  return &primary_provider_states_;
}
inline const ::android::app::time::TimeZoneProviderStateProto& LocationTimeZoneManagerServiceStateProto::primary_provider_states(int index) const {
  // @@protoc_insertion_point(field_get:android.app.time.LocationTimeZoneManagerServiceStateProto.primary_provider_states)
  return primary_provider_states_.Get(index);
}
inline ::android::app::time::TimeZoneProviderStateProto* LocationTimeZoneManagerServiceStateProto::add_primary_provider_states() {
  // @@protoc_insertion_point(field_add:android.app.time.LocationTimeZoneManagerServiceStateProto.primary_provider_states)
  return primary_provider_states_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::time::TimeZoneProviderStateProto >&
LocationTimeZoneManagerServiceStateProto::primary_provider_states() const {
  // @@protoc_insertion_point(field_list:android.app.time.LocationTimeZoneManagerServiceStateProto.primary_provider_states)
  return primary_provider_states_;
}

// repeated .android.app.time.TimeZoneProviderStateProto secondary_provider_states = 3;
inline int LocationTimeZoneManagerServiceStateProto::secondary_provider_states_size() const {
  return secondary_provider_states_.size();
}
inline void LocationTimeZoneManagerServiceStateProto::clear_secondary_provider_states() {
  secondary_provider_states_.Clear();
}
inline ::android::app::time::TimeZoneProviderStateProto* LocationTimeZoneManagerServiceStateProto::mutable_secondary_provider_states(int index) {
  // @@protoc_insertion_point(field_mutable:android.app.time.LocationTimeZoneManagerServiceStateProto.secondary_provider_states)
  return secondary_provider_states_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::time::TimeZoneProviderStateProto >*
LocationTimeZoneManagerServiceStateProto::mutable_secondary_provider_states() {
  // @@protoc_insertion_point(field_mutable_list:android.app.time.LocationTimeZoneManagerServiceStateProto.secondary_provider_states)
  return &secondary_provider_states_;
}
inline const ::android::app::time::TimeZoneProviderStateProto& LocationTimeZoneManagerServiceStateProto::secondary_provider_states(int index) const {
  // @@protoc_insertion_point(field_get:android.app.time.LocationTimeZoneManagerServiceStateProto.secondary_provider_states)
  return secondary_provider_states_.Get(index);
}
inline ::android::app::time::TimeZoneProviderStateProto* LocationTimeZoneManagerServiceStateProto::add_secondary_provider_states() {
  // @@protoc_insertion_point(field_add:android.app.time.LocationTimeZoneManagerServiceStateProto.secondary_provider_states)
  return secondary_provider_states_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::time::TimeZoneProviderStateProto >&
LocationTimeZoneManagerServiceStateProto::secondary_provider_states() const {
  // @@protoc_insertion_point(field_list:android.app.time.LocationTimeZoneManagerServiceStateProto.secondary_provider_states)
  return secondary_provider_states_;
}

// -------------------------------------------------------------------

// TimeZoneProviderStateProto

// optional .android.app.time.TimeZoneProviderStateEnum state = 1;
inline bool TimeZoneProviderStateProto::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeZoneProviderStateProto::clear_state() {
  state_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::android::app::time::TimeZoneProviderStateEnum TimeZoneProviderStateProto::state() const {
  // @@protoc_insertion_point(field_get:android.app.time.TimeZoneProviderStateProto.state)
  return static_cast< ::android::app::time::TimeZoneProviderStateEnum >(state_);
}
inline void TimeZoneProviderStateProto::set_state(::android::app::time::TimeZoneProviderStateEnum value) {
  assert(::android::app::time::TimeZoneProviderStateEnum_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  state_ = value;
  // @@protoc_insertion_point(field_set:android.app.time.TimeZoneProviderStateProto.state)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace time
}  // namespace app
}  // namespace android

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::android::app::time::TimeZoneProviderStateEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::android::app::time::TimeZoneProviderStateEnum>() {
  return ::android::app::time::TimeZoneProviderStateEnum_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2flocation_5ftime_5fzone_5fmanager_2eproto
