// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/proto_logging/stats/enums/bluetooth/hci/enums.proto

#include "frameworks/proto_logging/stats/enums/bluetooth/hci/enums.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace android {
namespace bluetooth {
namespace hci {
}  // namespace hci
}  // namespace bluetooth
}  // namespace android
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n>frameworks/proto_logging/stats/enums/b"
  "luetooth/hci/enums.proto\022\025android.blueto"
  "oth.hci*\222J\n\013CommandEnum\022\021\n\013CMD_UNKNOWN\020\377"
  "\377\?\022\020\n\013CMD_INQUIRY\020\201\010\022\027\n\022CMD_INQUIRY_CANC"
  "EL\020\202\010\022\036\n\031CMD_PERIODIC_INQUIRY_MODE\020\203\010\022#\n"
  "\036CMD_EXIT_PERIODIC_INQUIRY_MODE\020\204\010\022\032\n\025CM"
  "D_CREATE_CONNECTION\020\205\010\022\023\n\016CMD_DISCONNECT"
  "\020\206\010\022\033\n\026CMD_ADD_SCO_CONNECTION\020\207\010\022!\n\034CMD_"
  "CREATE_CONNECTION_CANCEL\020\210\010\022\"\n\035CMD_ACCEP"
  "T_CONNECTION_REQUEST\020\211\010\022\"\n\035CMD_REJECT_CO"
  "NNECTION_REQUEST\020\212\010\022\037\n\032CMD_LINK_KEY_REQU"
  "EST_REPLY\020\213\010\022#\n\036CMD_LINK_KEY_REQUEST_NEG"
  "_REPLY\020\214\010\022\037\n\032CMD_PIN_CODE_REQUEST_REPLY\020"
  "\215\010\022#\n\036CMD_PIN_CODE_REQUEST_NEG_REPLY\020\216\010\022"
  " \n\033CMD_CHANGE_CONN_PACKET_TYPE\020\217\010\022!\n\034CMD"
  "_AUTHENTICATION_REQUESTED\020\221\010\022\034\n\027CMD_SET_"
  "CONN_ENCRYPTION\020\223\010\022\035\n\030CMD_CHANGE_CONN_LI"
  "NK_KEY\020\225\010\022\030\n\023CMD_MASTER_LINK_KEY\020\227\010\022\031\n\024C"
  "MD_RMT_NAME_REQUEST\020\231\010\022 \n\033CMD_RMT_NAME_R"
  "EQUEST_CANCEL\020\232\010\022\032\n\025CMD_READ_RMT_FEATURE"
  "S\020\233\010\022\036\n\031CMD_READ_RMT_EXT_FEATURES\020\234\010\022\036\n\031"
  "CMD_READ_RMT_VERSION_INFO\020\235\010\022\036\n\031CMD_READ"
  "_RMT_CLOCK_OFFSET\020\237\010\022\030\n\023CMD_READ_LMP_HAN"
  "DLE\020\240\010\022\036\n\031CMD_SETUP_ESCO_CONNECTION\020\250\010\022\037"
  "\n\032CMD_ACCEPT_ESCO_CONNECTION\020\251\010\022\037\n\032CMD_R"
  "EJECT_ESCO_CONNECTION\020\252\010\022$\n\037CMD_IO_CAPAB"
  "ILITY_REQUEST_REPLY\020\253\010\022 \n\033CMD_USER_CONF_"
  "REQUEST_REPLY\020\254\010\022\"\n\035CMD_USER_CONF_VALUE_"
  "NEG_REPLY\020\255\010\022\037\n\032CMD_USER_PASSKEY_REQ_REP"
  "LY\020\256\010\022#\n\036CMD_USER_PASSKEY_REQ_NEG_REPLY\020"
  "\257\010\022\037\n\032CMD_REM_OOB_DATA_REQ_REPLY\020\260\010\022#\n\036C"
  "MD_REM_OOB_DATA_REQ_NEG_REPLY\020\263\010\022\035\n\030CMD_"
  "IO_CAP_REQ_NEG_REPLY\020\264\010\022\035\n\030CMD_CREATE_PH"
  "YSICAL_LINK\020\265\010\022\035\n\030CMD_ACCEPT_PHYSICAL_LI"
  "NK\020\266\010\022!\n\034CMD_DISCONNECT_PHYSICAL_LINK\020\267\010"
  "\022\034\n\027CMD_CREATE_LOGICAL_LINK\020\270\010\022\034\n\027CMD_AC"
  "CEPT_LOGICAL_LINK\020\271\010\022 \n\033CMD_DISCONNECT_L"
  "OGICAL_LINK\020\272\010\022\034\n\027CMD_LOGICAL_LINK_CANCE"
  "L\020\273\010\022\031\n\024CMD_FLOW_SPEC_MODIFY\020\274\010\022\"\n\035CMD_E"
  "NH_SETUP_ESCO_CONNECTION\020\275\010\022#\n\036CMD_ENH_A"
  "CCEPT_ESCO_CONNECTION\020\276\010\022\027\n\022CMD_TRUNCATE"
  "D_PAGE\020\277\010\022\036\n\031CMD_TRUNCATED_PAGE_CANCEL\020\300"
  "\010\022\020\n\013CMD_SET_CLB\020\301\010\022\024\n\017CMD_RECEIVE_CLB\020\302"
  "\010\022\031\n\024CMD_START_SYNC_TRAIN\020\303\010\022\033\n\026CMD_RECE"
  "IVE_SYNC_TRAIN\020\304\010\022(\n#CMD_REM_OOB_EXTENDE"
  "D_DATA_REQ_REPLY\020\305\010\022\022\n\rCMD_HOLD_MODE\020\201\020\022"
  "\023\n\016CMD_SNIFF_MODE\020\203\020\022\030\n\023CMD_EXIT_SNIFF_M"
  "ODE\020\204\020\022\022\n\rCMD_PARK_MODE\020\205\020\022\027\n\022CMD_EXIT_P"
  "ARK_MODE\020\206\020\022\022\n\rCMD_QOS_SETUP\020\207\020\022\027\n\022CMD_R"
  "OLE_DISCOVERY\020\211\020\022\024\n\017CMD_SWITCH_ROLE\020\213\020\022\035"
  "\n\030CMD_READ_POLICY_SETTINGS\020\214\020\022\036\n\031CMD_WRI"
  "TE_POLICY_SETTINGS\020\215\020\022!\n\034CMD_READ_DEF_PO"
  "LICY_SETTINGS\020\216\020\022\"\n\035CMD_WRITE_DEF_POLICY"
  "_SETTINGS\020\217\020\022\033\n\026CMD_FLOW_SPECIFICATION\020\220"
  "\020\022\027\n\022CMD_SNIFF_SUB_RATE\020\221\020\022\027\n\022CMD_SET_EV"
  "ENT_MASK\020\201\030\022\016\n\tCMD_RESET\020\203\030\022\031\n\024CMD_SET_E"
  "VENT_FILTER\020\205\030\022\016\n\tCMD_FLUSH\020\210\030\022\026\n\021CMD_RE"
  "AD_PIN_TYPE\020\211\030\022\027\n\022CMD_WRITE_PIN_TYPE\020\212\030\022"
  "\034\n\027CMD_CREATE_NEW_UNIT_KEY\020\213\030\022 \n\033CMD_GET"
  "_MWS_TRANS_LAYER_CFG\020\214\030\022\035\n\030CMD_READ_STOR"
  "ED_LINK_KEY\020\215\030\022\036\n\031CMD_WRITE_STORED_LINK_"
  "KEY\020\221\030\022\037\n\032CMD_DELETE_STORED_LINK_KEY\020\222\030\022"
  "\032\n\025CMD_CHANGE_LOCAL_NAME\020\223\030\022\030\n\023CMD_READ_"
  "LOCAL_NAME\020\224\030\022\036\n\031CMD_READ_CONN_ACCEPT_TO"
  "UT\020\225\030\022\037\n\032CMD_WRITE_CONN_ACCEPT_TOUT\020\226\030\022\027"
  "\n\022CMD_READ_PAGE_TOUT\020\227\030\022\030\n\023CMD_WRITE_PAG"
  "E_TOUT\020\230\030\022\031\n\024CMD_READ_SCAN_ENABLE\020\231\030\022\032\n\025"
  "CMD_WRITE_SCAN_ENABLE\020\232\030\022\032\n\025CMD_READ_PAG"
  "ESCAN_CFG\020\233\030\022\033\n\026CMD_WRITE_PAGESCAN_CFG\020\234"
  "\030\022\035\n\030CMD_READ_INQUIRYSCAN_CFG\020\235\030\022\036\n\031CMD_"
  "WRITE_INQUIRYSCAN_CFG\020\236\030\022#\n\036CMD_READ_AUT"
  "HENTICATION_ENABLE\020\237\030\022$\n\037CMD_WRITE_AUTHE"
  "NTICATION_ENABLE\020\240\030\022\035\n\030CMD_READ_ENCRYPTI"
  "ON_MODE\020\241\030\022\036\n\031CMD_WRITE_ENCRYPTION_MODE\020"
  "\242\030\022\035\n\030CMD_READ_CLASS_OF_DEVICE\020\243\030\022\036\n\031CMD"
  "_WRITE_CLASS_OF_DEVICE\020\244\030\022\034\n\027CMD_READ_VO"
  "ICE_SETTINGS\020\245\030\022\035\n\030CMD_WRITE_VOICE_SETTI"
  "NGS\020\246\030\022%\n CMD_READ_AUTOMATIC_FLUSH_TIMEO"
  "UT\020\247\030\022&\n!CMD_WRITE_AUTOMATIC_FLUSH_TIMEO"
  "UT\020\250\030\022\037\n\032CMD_READ_NUM_BCAST_REXMITS\020\251\030\022 "
  "\n\033CMD_WRITE_NUM_BCAST_REXMITS\020\252\030\022 \n\033CMD_"
  "READ_HOLD_MODE_ACTIVITY\020\253\030\022!\n\034CMD_WRITE_"
  "HOLD_MODE_ACTIVITY\020\254\030\022\"\n\035CMD_READ_TRANSM"
  "IT_POWER_LEVEL\020\255\030\022\"\n\035CMD_READ_SCO_FLOW_C"
  "TRL_ENABLE\020\256\030\022#\n\036CMD_WRITE_SCO_FLOW_CTRL"
  "_ENABLE\020\257\030\022!\n\034CMD_SET_HC_TO_HOST_FLOW_CT"
  "RL\020\261\030\022\031\n\024CMD_HOST_BUFFER_SIZE\020\263\030\022\036\n\031CMD_"
  "HOST_NUM_PACKETS_DONE\020\265\030\022\035\n\030CMD_READ_LIN"
  "K_SUPER_TOUT\020\266\030\022\036\n\031CMD_WRITE_LINK_SUPER_"
  "TOUT\020\267\030\022\037\n\032CMD_READ_NUM_SUPPORTED_IAC\020\270\030"
  "\022\035\n\030CMD_READ_CURRENT_IAC_LAP\020\271\030\022\036\n\031CMD_W"
  "RITE_CURRENT_IAC_LAP\020\272\030\022\"\n\035CMD_READ_PAGE"
  "SCAN_PERIOD_MODE\020\273\030\022#\n\036CMD_WRITE_PAGESCA"
  "N_PERIOD_MODE\020\274\030\022\033\n\026CMD_READ_PAGESCAN_MO"
  "DE\020\275\030\022\034\n\027CMD_WRITE_PAGESCAN_MODE\020\276\030\022\031\n\024C"
  "MD_SET_AFH_CHANNELS\020\277\030\022\032\n\025CMD_READ_INQSC"
  "AN_TYPE\020\302\030\022\033\n\026CMD_WRITE_INQSCAN_TYPE\020\303\030\022"
  "\032\n\025CMD_READ_INQUIRY_MODE\020\304\030\022\033\n\026CMD_WRITE"
  "_INQUIRY_MODE\020\305\030\022\033\n\026CMD_READ_PAGESCAN_TY"
  "PE\020\306\030\022\034\n\027CMD_WRITE_PAGESCAN_TYPE\020\307\030\022!\n\034C"
  "MD_READ_AFH_ASSESSMENT_MODE\020\310\030\022\"\n\035CMD_WR"
  "ITE_AFH_ASSESSMENT_MODE\020\311\030\022\036\n\031CMD_READ_E"
  "XT_INQ_RESPONSE\020\321\030\022\037\n\032CMD_WRITE_EXT_INQ_"
  "RESPONSE\020\322\030\022\037\n\032CMD_REFRESH_ENCRYPTION_KE"
  "Y\020\323\030\022!\n\034CMD_READ_SIMPLE_PAIRING_MODE\020\325\030\022"
  "\"\n\035CMD_WRITE_SIMPLE_PAIRING_MODE\020\326\030\022\034\n\027C"
  "MD_READ_LOCAL_OOB_DATA\020\327\030\022 \n\033CMD_READ_IN"
  "Q_TX_POWER_LEVEL\020\330\030\022!\n\034CMD_WRITE_INQ_TX_"
  "POWER_LEVEL\020\331\030\022 \n\033CMD_READ_ERRONEOUS_DAT"
  "A_RPT\020\332\030\022!\n\034CMD_WRITE_ERRONEOUS_DATA_RPT"
  "\020\333\030\022\027\n\022CMD_ENHANCED_FLUSH\020\337\030\022\034\n\027CMD_SEND"
  "_KEYPRESS_NOTIF\020\340\030\022)\n$CMD_READ_LOGICAL_L"
  "INK_ACCEPT_TIMEOUT\020\341\030\022*\n%CMD_WRITE_LOGIC"
  "AL_LINK_ACCEPT_TIMEOUT\020\342\030\022\036\n\031CMD_SET_EVE"
  "NT_MASK_PAGE_2\020\343\030\022\033\n\026CMD_READ_LOCATION_D"
  "ATA\020\344\030\022\034\n\027CMD_WRITE_LOCATION_DATA\020\345\030\022\037\n\032"
  "CMD_READ_FLOW_CONTROL_MODE\020\346\030\022 \n\033CMD_WRI"
  "TE_FLOW_CONTROL_MODE\020\347\030\022#\n\036CMD_READ_ENHA"
  "NCED_TX_PWR_LEVEL\020\350\030\022\033\n\026CMD_READ_BE_FLUS"
  "H_TOUT\020\351\030\022\034\n\027CMD_WRITE_BE_FLUSH_TOUT\020\352\030\022"
  "\031\n\024CMD_SHORT_RANGE_MODE\020\353\030\022\036\n\031CMD_READ_B"
  "LE_HOST_SUPPORT\020\354\030\022\037\n\032CMD_WRITE_BLE_HOST"
  "_SUPPORT\020\355\030\022#\n\036CMD_SET_MWS_CHANNEL_PARAM"
  "ETERS\020\356\030\022)\n$CMD_SET_EXTERNAL_FRAME_CONFI"
  "GURATION\020\357\030\022\032\n\025CMD_SET_MWS_SIGNALING\020\360\030\022"
  " \n\033CMD_SET_MWS_TRANSPORT_LAYER\020\361\030\022%\n CMD"
  "_SET_MWS_SCAN_FREQUENCY_TABLE\020\362\030\022&\n!CMD_"
  "SET_MWS_PATTERN_CONFIGURATION\020\363\030\022\035\n\030CMD_"
  "SET_RESERVED_LT_ADDR\020\364\030\022 \n\033CMD_DELETE_RE"
  "SERVED_LT_ADDR\020\365\030\022\027\n\022CMD_WRITE_CLB_DATA\020"
  "\366\030\022\036\n\031CMD_READ_SYNC_TRAIN_PARAM\020\367\030\022\037\n\032CM"
  "D_WRITE_SYNC_TRAIN_PARAM\020\370\030\022\"\n\035CMD_READ_"
  "SECURE_CONNS_SUPPORT\020\371\030\022#\n\036CMD_WRITE_SEC"
  "URE_CONNS_SUPPORT\020\372\030\022$\n\037CMD_READ_AUTHED_"
  "PAYLOAD_TIMEOUT\020\373\030\022%\n CMD_WRITE_AUTHED_P"
  "AYLOAD_TIMEOUT\020\374\030\022%\n CMD_READ_LOCAL_OOB_"
  "EXTENDED_DATA\020\375\030\022#\n\036CMD_READ_EXTENDED_PA"
  "GE_TIMEOUT\020\376\030\022$\n\037CMD_WRITE_EXTENDED_PAGE"
  "_TIMEOUT\020\377\030\022%\n CMD_READ_EXTENDED_INQUIRY"
  "_LENGTH\020\200\031\022&\n!CMD_WRITE_EXTENDED_INQUIRY"
  "_LENGTH\020\201\031\022 \n\033CMD_READ_LOCAL_VERSION_INF"
  "O\020\201 \022\"\n\035CMD_READ_LOCAL_SUPPORTED_CMDS\020\202 "
  "\022\034\n\027CMD_READ_LOCAL_FEATURES\020\203 \022 \n\033CMD_RE"
  "AD_LOCAL_EXT_FEATURES\020\204 \022\031\n\024CMD_READ_BUF"
  "FER_SIZE\020\205 \022\032\n\025CMD_READ_COUNTRY_CODE\020\207 \022"
  "\025\n\020CMD_READ_BD_ADDR\020\211 \022\035\n\030CMD_READ_DATA_"
  "BLOCK_SIZE\020\212 \022$\n\037CMD_READ_LOCAL_SUPPORTE"
  "D_CODECS\020\213 \022$\n\037CMD_READ_FAILED_CONTACT_C"
  "OUNTER\020\201(\022%\n CMD_RESET_FAILED_CONTACT_CO"
  "UNTER\020\202(\022\031\n\024CMD_GET_LINK_QUALITY\020\203(\022\022\n\rC"
  "MD_READ_RSSI\020\205(\022\030\n\023CMD_READ_AFH_CH_MAP\020\206"
  "(\022\023\n\016CMD_READ_CLOCK\020\207(\022\033\n\026CMD_READ_ENCR_"
  "KEY_SIZE\020\210(\022\034\n\027CMD_READ_LOCAL_AMP_INFO\020\211"
  "(\022\035\n\030CMD_READ_LOCAL_AMP_ASSOC\020\212(\022\037\n\032CMD_"
  "WRITE_REMOTE_AMP_ASSOC\020\213(\022\036\n\031CMD_GET_MWS"
  "_TRANSPORT_CFG\020\214(\022\"\n\035CMD_SET_TRIGGERED_C"
  "LK_CAPTURE\020\215(\022\033\n\026CMD_READ_LOOPBACK_MODE\020"
  "\2010\022\034\n\027CMD_WRITE_LOOPBACK_MODE\020\2020\022#\n\036CMD_"
  "ENABLE_DEV_UNDER_TEST_MODE\020\2030\022#\n\036CMD_WRI"
  "TE_SIMP_PAIR_DEBUG_MODE\020\2040\022 \n\033CMD_ENABLE"
  "_AMP_RCVR_REPORTS\020\2070\022\025\n\020CMD_AMP_TEST_END"
  "\020\2100\022\021\n\014CMD_AMP_TEST\020\2110\022$\n\037CMD_WRITE_SECU"
  "RE_CONN_TEST_MODE\020\2120\022\033\n\026CMD_BLE_SET_EVEN"
  "T_MASK\020\201@\022\035\n\030CMD_BLE_READ_BUFFER_SIZE\020\202@"
  "\022 \n\033CMD_BLE_READ_LOCAL_SPT_FEAT\020\203@\022!\n\034CM"
  "D_BLE_WRITE_LOCAL_SPT_FEAT\020\204@\022\036\n\031CMD_BLE"
  "_WRITE_RANDOM_ADDR\020\205@\022\035\n\030CMD_BLE_WRITE_A"
  "DV_PARAMS\020\206@\022#\n\036CMD_BLE_READ_ADV_CHNL_TX"
  "_POWER\020\207@\022\033\n\026CMD_BLE_WRITE_ADV_DATA\020\210@\022 "
  "\n\033CMD_BLE_WRITE_SCAN_RSP_DATA\020\211@\022\035\n\030CMD_"
  "BLE_WRITE_ADV_ENABLE\020\212@\022\036\n\031CMD_BLE_WRITE"
  "_SCAN_PARAMS\020\213@\022\036\n\031CMD_BLE_WRITE_SCAN_EN"
  "ABLE\020\214@\022\033\n\026CMD_BLE_CREATE_LL_CONN\020\215@\022\037\n\032"
  "CMD_BLE_CREATE_CONN_CANCEL\020\216@\022!\n\034CMD_BLE"
  "_READ_WHITE_LIST_SIZE\020\217@\022\035\n\030CMD_BLE_CLEA"
  "R_WHITE_LIST\020\220@\022\033\n\026CMD_BLE_ADD_WHITE_LIS"
  "T\020\221@\022\036\n\031CMD_BLE_REMOVE_WHITE_LIST\020\222@\022\037\n\032"
  "CMD_BLE_UPD_LL_CONN_PARAMS\020\223@\022 \n\033CMD_BLE"
  "_SET_HOST_CHNL_CLASS\020\224@\022\032\n\025CMD_BLE_READ_"
  "CHNL_MAP\020\225@\022\035\n\030CMD_BLE_READ_REMOTE_FEAT\020"
  "\226@\022\024\n\017CMD_BLE_ENCRYPT\020\227@\022\021\n\014CMD_BLE_RAND"
  "\020\230@\022\026\n\021CMD_BLE_START_ENC\020\231@\022\032\n\025CMD_BLE_L"
  "TK_REQ_REPLY\020\232@\022\036\n\031CMD_BLE_LTK_REQ_NEG_R"
  "EPLY\020\233@\022\"\n\035CMD_BLE_READ_SUPPORTED_STATES"
  "\020\234@\022\032\n\025CMD_BLE_RECEIVER_TEST\020\235@\022\035\n\030CMD_B"
  "LE_TRANSMITTER_TEST\020\236@\022\025\n\020CMD_BLE_TEST_E"
  "ND\020\237@\022\037\n\032CMD_BLE_RC_PARAM_REQ_REPLY\020\240@\022#"
  "\n\036CMD_BLE_RC_PARAM_REQ_NEG_REPLY\020\241@\022\034\n\027C"
  "MD_BLE_SET_DATA_LENGTH\020\242@\022%\n CMD_BLE_REA"
  "D_DEFAULT_DATA_LENGTH\020\243@\022&\n!CMD_BLE_WRIT"
  "E_DEFAULT_DATA_LENGTH\020\244@\022\033\n\026CMD_BLE_GENE"
  "RATE_DHKEY\020\246@\022#\n\036CMD_BLE_ADD_DEV_RESOLVI"
  "NG_LIST\020\247@\022\"\n\035CMD_BLE_RM_DEV_RESOLVING_L"
  "IST\020\250@\022!\n\034CMD_BLE_CLEAR_RESOLVING_LIST\020\251"
  "@\022%\n CMD_BLE_READ_RESOLVING_LIST_SIZE\020\252@"
  "\022&\n!CMD_BLE_READ_RESOLVABLE_ADDR_PEER\020\253@"
  "\022\'\n\"CMD_BLE_READ_RESOLVABLE_ADDR_LOCAL\020\254"
  "@\022\'\n\"CMD_BLE_SET_ADDR_RESOLUTION_ENABLE\020"
  "\255@\022&\n!CMD_BLE_SET_RAND_PRIV_ADDR_TIMOUT\020"
  "\256@\022%\n CMD_BLE_READ_MAXIMUM_DATA_LENGTH\020\257"
  "@\022\025\n\020CMD_BLE_READ_PHY\020\260@\022\034\n\027CMD_BLE_SET_"
  "DEFAULT_PHY\020\261@\022\024\n\017CMD_BLE_SET_PHY\020\262@\022\036\n\031"
  "CMD_BLE_ENH_RECEIVER_TEST\020\263@\022!\n\034CMD_BLE_"
  "ENH_TRANSMITTER_TEST\020\264@\022/\n*CMD_BLE_SET_E"
  "XT_ADVERTISING_RANDOM_ADDRESS\020\265@\022&\n!CMD_"
  "BLE_SET_EXT_ADVERTISING_PARAM\020\266@\022%\n CMD_"
  "BLE_SET_EXT_ADVERTISING_DATA\020\267@\022*\n%CMD_B"
  "LE_SET_EXT_ADVERTISING_SCAN_RESP\020\270@\022\'\n\"C"
  "MD_BLE_SET_EXT_ADVERTISING_ENABLE\020\271@\0221\n,"
  "CMD_BLE_READ_MAXIMUM_ADVERTISING_DATA_LE"
  "NGTH\020\272@\0226\n1CMD_BLE_READ_NUMBER_OF_SUPPOR"
  "TED_ADVERTISING_SETS\020\273@\022#\n\036CMD_BLE_REMOV"
  "E_ADVERTISING_SET\020\274@\022#\n\036CMD_BLE_CLEAR_AD"
  "VERTISING_SETS\020\275@\022+\n&CMD_BLE_SET_PERIODI"
  "C_ADVERTISING_PARAM\020\276@\022*\n%CMD_BLE_SET_PE"
  "RIODIC_ADVERTISING_DATA\020\277@\022,\n\'CMD_BLE_SE"
  "T_PERIODIC_ADVERTISING_ENABLE\020\300@\022)\n$CMD_"
  "BLE_SET_EXTENDED_SCAN_PARAMETERS\020\301@\022%\n C"
  "MD_BLE_SET_EXTENDED_SCAN_ENABLE\020\302@\022\'\n\"CM"
  "D_BLE_EXTENDED_CREATE_CONNECTION\020\303@\022-\n(C"
  "MD_BLE_PERIODIC_ADVERTISING_CREATE_SYNC\020"
  "\304@\0224\n/CMD_BLE_PERIODIC_ADVERTISING_CREAT"
  "E_SYNC_CANCEL\020\305@\0220\n+CMD_BLE_PERIODIC_ADV"
  "ERTISING_TERMINATE_SYNC\020\306@\0224\n/CMD_BLE_AD"
  "D_DEVICE_TO_PERIODIC_ADVERTISING_LIST\020\307@"
  "\0225\n0CMD_BLE_RM_DEVICE_FROM_PERIODIC_ADVE"
  "RTISING_LIST\020\310@\022,\n\'CMD_BLE_CLEAR_PERIODI"
  "C_ADVERTISING_LIST\020\311@\0220\n+CMD_BLE_READ_PE"
  "RIODIC_ADVERTISING_LIST_SIZE\020\312@\022 \n\033CMD_B"
  "LE_READ_TRANSMIT_POWER\020\313@\022\"\n\035CMD_BLE_REA"
  "D_RF_COMPENS_POWER\020\314@\022#\n\036CMD_BLE_WRITE_R"
  "F_COMPENS_POWER\020\315@\022\035\n\030CMD_BLE_SET_PRIVAC"
  "Y_MODE\020\316@\022\030\n\022CMD_BLE_VENDOR_CAP\020\323\372\003\022\027\n\021C"
  "MD_BLE_MULTI_ADV\020\324\372\003\022\030\n\022CMD_BLE_BATCH_SC"
  "AN\020\326\372\003\022\030\n\022CMD_BLE_ADV_FILTER\020\327\372\003\022\027\n\021CMD_"
  "BLE_TRACK_ADV\020\330\372\003\022\031\n\023CMD_BLE_ENERGY_INFO"
  "\020\331\372\003\022\"\n\034CMD_BLE_EXTENDED_SCAN_PARAMS\020\332\372\003"
  "\022\037\n\031CMD_CONTROLLER_DEBUG_INFO\020\333\372\003\022 \n\032CMD"
  "_CONTROLLER_A2DP_OPCODE\020\335\372\003\022\037\n\031CMD_BRCM_"
  "SET_ACL_PRIORITY\020\327\370\003*\365\021\n\tEventEnum\022\020\n\013EV"
  "T_UNKNOWN\020\377\037\022\024\n\020EVT_INQUIRY_COMP\020\001\022\026\n\022EV"
  "T_INQUIRY_RESULT\020\002\022\027\n\023EVT_CONNECTION_COM"
  "P\020\003\022\032\n\026EVT_CONNECTION_REQUEST\020\004\022\032\n\026EVT_D"
  "ISCONNECTION_COMP\020\005\022\033\n\027EVT_AUTHENTICATIO"
  "N_COMP\020\006\022\035\n\031EVT_RMT_NAME_REQUEST_COMP\020\007\022"
  "\031\n\025EVT_ENCRYPTION_CHANGE\020\010\022\034\n\030EVT_CHANGE"
  "_CONN_LINK_KEY\020\t\022\034\n\030EVT_MASTER_LINK_KEY_"
  "COMP\020\n\022\036\n\032EVT_READ_RMT_FEATURES_COMP\020\013\022\035"
  "\n\031EVT_READ_RMT_VERSION_COMP\020\014\022\026\n\022EVT_QOS"
  "_SETUP_COMP\020\r\022\030\n\024EVT_COMMAND_COMPLETE\020\016\022"
  "\026\n\022EVT_COMMAND_STATUS\020\017\022\026\n\022EVT_HARDWARE_"
  "ERROR\020\020\022\026\n\022EVT_FLUSH_OCCURRED\020\021\022\023\n\017EVT_R"
  "OLE_CHANGE\020\022\022\033\n\027EVT_NUM_COMPL_DATA_PKTS\020"
  "\023\022\023\n\017EVT_MODE_CHANGE\020\024\022\030\n\024EVT_RETURN_LIN"
  "K_KEYS\020\025\022\030\n\024EVT_PIN_CODE_REQUEST\020\026\022\030\n\024EV"
  "T_LINK_KEY_REQUEST\020\027\022\035\n\031EVT_LINK_KEY_NOT"
  "IFICATION\020\030\022\030\n\024EVT_LOOPBACK_COMMAND\020\031\022\031\n"
  "\025EVT_DATA_BUF_OVERFLOW\020\032\022\031\n\025EVT_MAX_SLOT"
  "S_CHANGED\020\033\022\033\n\027EVT_READ_CLOCK_OFF_COMP\020\034"
  "\022\034\n\030EVT_CONN_PKT_TYPE_CHANGE\020\035\022\025\n\021EVT_QO"
  "S_VIOLATION\020\036\022\035\n\031EVT_PAGE_SCAN_MODE_CHAN"
  "GE\020\037\022\037\n\033EVT_PAGE_SCAN_REP_MODE_CHNG\020 \022\037\n"
  "\033EVT_FLOW_SPECIFICATION_COMP\020!\022\033\n\027EVT_IN"
  "QUIRY_RSSI_RESULT\020\"\022\"\n\036EVT_READ_RMT_EXT_"
  "FEATURES_COMP\020#\022\034\n\030EVT_ESCO_CONNECTION_C"
  "OMP\020,\022\037\n\033EVT_ESCO_CONNECTION_CHANGED\020-\022\026"
  "\n\022EVT_SNIFF_SUB_RATE\020.\022\037\n\033EVT_EXTENDED_I"
  "NQUIRY_RESULT\020/\022#\n\037EVT_ENCRYPTION_KEY_RE"
  "FRESH_COMP\0200\022\035\n\031EVT_IO_CAPABILITY_REQUES"
  "T\0201\022\036\n\032EVT_IO_CAPABILITY_RESPONSE\0202\022!\n\035E"
  "VT_USER_CONFIRMATION_REQUEST\0203\022\034\n\030EVT_US"
  "ER_PASSKEY_REQUEST\0204\022\037\n\033EVT_REMOTE_OOB_D"
  "ATA_REQUEST\0205\022\037\n\033EVT_SIMPLE_PAIRING_COMP"
  "LETE\0206\022\037\n\033EVT_LINK_SUPER_TOUT_CHANGED\0208\022"
  "\037\n\033EVT_ENHANCED_FLUSH_COMPLETE\0209\022\033\n\027EVT_"
  "USER_PASSKEY_NOTIFY\020;\022\027\n\023EVT_KEYPRESS_NO"
  "TIFY\020<\022 \n\034EVT_RMT_HOST_SUP_FEAT_NOTIFY\020="
  "\022\020\n\014EVT_BLE_META\020>\022\032\n\026EVT_PHYSICAL_LINK_"
  "COMP\020@\022\030\n\024EVT_CHANNEL_SELECTED\020A\022\037\n\033EVT_"
  "DISC_PHYSICAL_LINK_COMP\020B\022#\n\037EVT_PHY_LIN"
  "K_LOSS_EARLY_WARNING\020C\022\031\n\025EVT_PHY_LINK_R"
  "ECOVERY\020D\022\031\n\025EVT_LOGICAL_LINK_COMP\020E\022\036\n\032"
  "EVT_DISC_LOGICAL_LINK_COMP\020F\022\035\n\031EVT_FLOW"
  "_SPEC_MODIFY_COMP\020G\022\035\n\031EVT_NUM_COMPL_DAT"
  "A_BLOCKS\020H\022\026\n\022EVT_AMP_TEST_START\020I\022\024\n\020EV"
  "T_AMP_TEST_END\020J\022\030\n\024EVT_AMP_RECEIVER_RPT"
  "\020K\022!\n\035EVT_SHORT_RANGE_MODE_COMPLETE\020L\022\031\n"
  "\025EVT_AMP_STATUS_CHANGE\020M\022#\n\037EVT_SET_TRIG"
  "GERED_CLOCK_CAPTURE\020N\022\027\n\023EVT_SYNC_TRAIN_"
  "CMPL\020O\022\027\n\023EVT_SYNC_TRAIN_RCVD\020P\022%\n!EVT_C"
  "ONNLESS_SLAVE_BROADCAST_RCVD\020Q\022(\n$EVT_CO"
  "NNLESS_SLAVE_BROADCAST_TIMEOUT\020R\022\033\n\027EVT_"
  "TRUNCATED_PAGE_CMPL\020S\022\036\n\032EVT_SLAVE_PAGE_"
  "RES_TIMEOUT\020T\0220\n,EVT_CONNLESS_SLAVE_BROA"
  "DCAST_CHNL_MAP_CHANGE\020U\022 \n\034EVT_INQUIRY_R"
  "ES_NOTIFICATION\020V\022\036\n\032EVT_AUTHED_PAYLOAD_"
  "TIMEOUT\020W\022\031\n\025EVT_SAM_STATUS_CHANGE\020X*\341\005\n"
  "\020BleMetaEventEnum\022\024\n\017BLE_EVT_UNKNOWN\020\377\037\022"
  "\035\n\031BLE_EVT_CONN_COMPLETE_EVT\020\001\022\033\n\027BLE_EV"
  "T_ADV_PKT_RPT_EVT\020\002\022!\n\035BLE_EVT_LL_CONN_P"
  "ARAM_UPD_EVT\020\003\022%\n!BLE_EVT_READ_REMOTE_FE"
  "AT_CMPL_EVT\020\004\022\027\n\023BLE_EVT_LTK_REQ_EVT\020\005\022\034"
  "\n\030BLE_EVT_RC_PARAM_REQ_EVT\020\006\022\"\n\036BLE_EVT_"
  "DATA_LENGTH_CHANGE_EVT\020\007\022#\n\037BLE_EVT_READ"
  "_LOCAL_P256_PUB_KEY\020\010\022\032\n\026BLE_EVT_GEN_DHK"
  "EY_CMPL\020\t\022&\n\"BLE_EVT_ENHANCED_CONN_COMPL"
  "ETE_EVT\020\n\022\032\n\026BLE_EVT_DIRECT_ADV_EVT\020\013\022#\n"
  "\037BLE_EVT_PHY_UPDATE_COMPLETE_EVT\020\014\022+\n\'BL"
  "E_EVT_EXTENDED_ADVERTISING_REPORT_EVT\020\r\022"
  "%\n!BLE_EVT_PERIODIC_ADV_SYNC_EST_EVT\020\016\022#"
  "\n\037BLE_EVT_PERIODIC_ADV_REPORT_EVT\020\017\022&\n\"B"
  "LE_EVT_PERIODIC_ADV_SYNC_LOST_EVT\020\020\022\034\n\030B"
  "LE_EVT_SCAN_TIMEOUT_EVT\020\021\022*\n&BLE_EVT_ADV"
  "ERTISING_SET_TERMINATED_EVT\020\022\022\033\n\027BLE_EVT"
  "_SCAN_REQ_RX_EVT\020\023\022$\n BLE_EVT_CHNL_SELEC"
  "TION_ALGORITHM\020\024*\222\021\n\nStatusEnum\022\023\n\016STATU"
  "S_UNKNOWN\020\377\037\022\022\n\016STATUS_SUCCESS\020\000\022\032\n\026STAT"
  "US_ILLEGAL_COMMAND\020\001\022\030\n\024STATUS_NO_CONNEC"
  "TION\020\002\022\025\n\021STATUS_HW_FAILURE\020\003\022\027\n\023STATUS_"
  "PAGE_TIMEOUT\020\004\022\027\n\023STATUS_AUTH_FAILURE\020\005\022"
  "\026\n\022STATUS_KEY_MISSING\020\006\022\026\n\022STATUS_MEMORY"
  "_FULL\020\007\022\032\n\026STATUS_CONNECTION_TOUT\020\010\022!\n\035S"
  "TATUS_MAX_NUM_OF_CONNECTIONS\020\t\022\032\n\026STATUS"
  "_MAX_NUM_OF_SCOS\020\n\022\034\n\030STATUS_CONNECTION_"
  "EXISTS\020\013\022\035\n\031STATUS_COMMAND_DISALLOWED\020\014\022"
  " \n\034STATUS_HOST_REJECT_RESOURCES\020\r\022\037\n\033STA"
  "TUS_HOST_REJECT_SECURITY\020\016\022\035\n\031STATUS_HOS"
  "T_REJECT_DEVICE\020\017\022\027\n\023STATUS_HOST_TIMEOUT"
  "\020\020\022\034\n\030STATUS_UNSUPPORTED_VALUE\020\021\022 \n\034STAT"
  "US_ILLEGAL_PARAMETER_FMT\020\022\022\024\n\020STATUS_PEE"
  "R_USER\020\023\022\035\n\031STATUS_PEER_LOW_RESOURCES\020\024\022"
  "\031\n\025STATUS_PEER_POWER_OFF\020\025\022 \n\034STATUS_CON"
  "N_CAUSE_LOCAL_HOST\020\026\022\034\n\030STATUS_REPEATED_"
  "ATTEMPTS\020\027\022\036\n\032STATUS_PAIRING_NOT_ALLOWED"
  "\020\030\022\032\n\026STATUS_UNKNOWN_LMP_PDU\020\031\022\"\n\036STATUS"
  "_UNSUPPORTED_REM_FEATURE\020\032\022\036\n\032STATUS_SCO"
  "_OFFSET_REJECTED\020\033\022 \n\034STATUS_SCO_INTERVA"
  "L_REJECTED\020\034\022\027\n\023STATUS_SCO_AIR_MODE\020\035\022\034\n"
  "\030STATUS_INVALID_LMP_PARAM\020\036\022\026\n\022STATUS_UN"
  "SPECIFIED\020\037\022\"\n\036STATUS_UNSUPPORTED_LMP_FE"
  "ATURE\020 \022\"\n\036STATUS_ROLE_CHANGE_NOT_ALLOWE"
  "D\020!\022\037\n\033STATUS_LMP_RESPONSE_TIMEOUT\020\"\022%\n!"
  "STATUS_LMP_STATUS_TRANS_COLLISION\020#\022\036\n\032S"
  "TATUS_LMP_PDU_NOT_ALLOWED\020$\022$\n STATUS_EN"
  "CRY_MODE_NOT_ACCEPTABLE\020%\022\030\n\024STATUS_UNIT"
  "_KEY_USED\020&\022\034\n\030STATUS_QOS_NOT_SUPPORTED\020"
  "\'\022\031\n\025STATUS_INSTANT_PASSED\020(\022.\n*STATUS_P"
  "AIRING_WITH_UNIT_KEY_NOT_SUPPORTED\020)\022%\n!"
  "STATUS_DIFF_TRANSACTION_COLLISION\020*\022\031\n\025S"
  "TATUS_UNDEFINED_0x2B\020+\022!\n\035STATUS_QOS_UNA"
  "CCEPTABLE_PARAM\020,\022\027\n\023STATUS_QOS_REJECTED"
  "\020-\022%\n!STATUS_CHAN_CLASSIF_NOT_SUPPORTED\020"
  ".\022\037\n\033STATUS_INSUFFCIENT_SECURITY\020/\022\035\n\031ST"
  "ATUS_PARAM_OUT_OF_RANGE\0200\022\031\n\025STATUS_UNDE"
  "FINED_0x31\0201\022\036\n\032STATUS_ROLE_SWITCH_PENDI"
  "NG\0202\022\031\n\025STATUS_UNDEFINED_0x33\0203\022\"\n\036STATU"
  "S_RESERVED_SLOT_VIOLATION\0204\022\035\n\031STATUS_RO"
  "LE_SWITCH_FAILED\0205\022!\n\035STATUS_INQ_RSP_DAT"
  "A_TOO_LARGE\0206\022\'\n#STATUS_SIMPLE_PAIRING_N"
  "OT_SUPPORTED\0207\022\034\n\030STATUS_HOST_BUSY_PAIRI"
  "NG\0208\022\"\n\036STATUS_REJ_NO_SUITABLE_CHANNEL\0209"
  "\022\032\n\026STATUS_CONTROLLER_BUSY\020:\022!\n\035STATUS_U"
  "NACCEPT_CONN_INTERVAL\020;\022\036\n\032STATUS_ADVERT"
  "ISING_TIMEOUT\020<\022\'\n#STATUS_CONN_TOUT_DUE_"
  "TO_MIC_FAILURE\020=\022$\n STATUS_CONN_FAILED_E"
  "STABLISHMENT\020>\022 \n\034STATUS_MAC_CONNECTION_"
  "FAILED\020\?\022!\n\035STATUS_LT_ADDR_ALREADY_IN_US"
  "E\020@\022 \n\034STATUS_LT_ADDR_NOT_ALLOCATED\020A\022\032\n"
  "\026STATUS_CLB_NOT_ENABLED\020B\022\033\n\027STATUS_CLB_"
  "DATA_TOO_BIG\020C\022%\n!STATUS_OPERATION_CANCE"
  "LED_BY_HOST\020D*\215\001\n\tBqrIdEnum\022\022\n\016BQR_ID_UN"
  "KNOWN\020\000\022\027\n\023BQR_ID_MONITOR_MODE\020\001\022\030\n\024BQR_"
  "ID_APPROACH_LSTO\020\002\022\034\n\030BQR_ID_A2DP_AUDIO_"
  "CHOPPY\020\003\022\033\n\027BQR_ID_SCO_VOICE_CHOPPY\020\004*\367\005"
  "\n\021BqrPacketTypeEnum\022\033\n\027BQR_PACKET_TYPE_U"
  "NKNOWN\020\000\022\026\n\022BQR_PACKET_TYPE_ID\020\001\022\030\n\024BQR_"
  "PACKET_TYPE_NULL\020\002\022\030\n\024BQR_PACKET_TYPE_PO"
  "LL\020\003\022\027\n\023BQR_PACKET_TYPE_FHS\020\004\022\027\n\023BQR_PAC"
  "KET_TYPE_HV1\020\005\022\027\n\023BQR_PACKET_TYPE_HV2\020\006\022"
  "\027\n\023BQR_PACKET_TYPE_HV3\020\007\022\026\n\022BQR_PACKET_T"
  "YPE_DV\020\010\022\027\n\023BQR_PACKET_TYPE_EV3\020\t\022\027\n\023BQR"
  "_PACKET_TYPE_EV4\020\n\022\027\n\023BQR_PACKET_TYPE_EV"
  "5\020\013\022\030\n\024BQR_PACKET_TYPE_2EV3\020\014\022\030\n\024BQR_PAC"
  "KET_TYPE_2EV5\020\r\022\030\n\024BQR_PACKET_TYPE_3EV3\020"
  "\016\022\030\n\024BQR_PACKET_TYPE_3EV5\020\017\022\027\n\023BQR_PACKE"
  "T_TYPE_DM1\020\020\022\027\n\023BQR_PACKET_TYPE_DH1\020\021\022\027\n"
  "\023BQR_PACKET_TYPE_DM3\020\022\022\027\n\023BQR_PACKET_TYP"
  "E_DH3\020\023\022\027\n\023BQR_PACKET_TYPE_DM5\020\024\022\027\n\023BQR_"
  "PACKET_TYPE_DH5\020\025\022\030\n\024BQR_PACKET_TYPE_AUX"
  "1\020\026\022\030\n\024BQR_PACKET_TYPE_2DH1\020\027\022\030\n\024BQR_PAC"
  "KET_TYPE_2DH3\020\030\022\030\n\024BQR_PACKET_TYPE_2DH5\020"
  "\031\022\030\n\024BQR_PACKET_TYPE_3DH1\020\032\022\030\n\024BQR_PACKE"
  "T_TYPE_3DH3\020\033\022\030\n\024BQR_PACKET_TYPE_3DH5\020\034B"
  "\032B\026BluetoothHciProtoEnumsP\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto_once;
static bool descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto = {
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto_initialized, descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto, "frameworks/proto_logging/stats/enums/bluetooth/hci/enums.proto", 15747,
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto_once, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto_sccs, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto::offsets,
  file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto, 0, file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto, file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto), true);
namespace android {
namespace bluetooth {
namespace hci {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CommandEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto[0];
}
bool CommandEnum_IsValid(int value) {
  switch (value) {
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1029:
    case 1030:
    case 1031:
    case 1032:
    case 1033:
    case 1034:
    case 1035:
    case 1036:
    case 1037:
    case 1038:
    case 1039:
    case 1041:
    case 1043:
    case 1045:
    case 1047:
    case 1049:
    case 1050:
    case 1051:
    case 1052:
    case 1053:
    case 1055:
    case 1056:
    case 1064:
    case 1065:
    case 1066:
    case 1067:
    case 1068:
    case 1069:
    case 1070:
    case 1071:
    case 1072:
    case 1075:
    case 1076:
    case 1077:
    case 1078:
    case 1079:
    case 1080:
    case 1081:
    case 1082:
    case 1083:
    case 1084:
    case 1085:
    case 1086:
    case 1087:
    case 1088:
    case 1089:
    case 1090:
    case 1091:
    case 1092:
    case 1093:
    case 2049:
    case 2051:
    case 2052:
    case 2053:
    case 2054:
    case 2055:
    case 2057:
    case 2059:
    case 2060:
    case 2061:
    case 2062:
    case 2063:
    case 2064:
    case 2065:
    case 3073:
    case 3075:
    case 3077:
    case 3080:
    case 3081:
    case 3082:
    case 3083:
    case 3084:
    case 3085:
    case 3089:
    case 3090:
    case 3091:
    case 3092:
    case 3093:
    case 3094:
    case 3095:
    case 3096:
    case 3097:
    case 3098:
    case 3099:
    case 3100:
    case 3101:
    case 3102:
    case 3103:
    case 3104:
    case 3105:
    case 3106:
    case 3107:
    case 3108:
    case 3109:
    case 3110:
    case 3111:
    case 3112:
    case 3113:
    case 3114:
    case 3115:
    case 3116:
    case 3117:
    case 3118:
    case 3119:
    case 3121:
    case 3123:
    case 3125:
    case 3126:
    case 3127:
    case 3128:
    case 3129:
    case 3130:
    case 3131:
    case 3132:
    case 3133:
    case 3134:
    case 3135:
    case 3138:
    case 3139:
    case 3140:
    case 3141:
    case 3142:
    case 3143:
    case 3144:
    case 3145:
    case 3153:
    case 3154:
    case 3155:
    case 3157:
    case 3158:
    case 3159:
    case 3160:
    case 3161:
    case 3162:
    case 3163:
    case 3167:
    case 3168:
    case 3169:
    case 3170:
    case 3171:
    case 3172:
    case 3173:
    case 3174:
    case 3175:
    case 3176:
    case 3177:
    case 3178:
    case 3179:
    case 3180:
    case 3181:
    case 3182:
    case 3183:
    case 3184:
    case 3185:
    case 3186:
    case 3187:
    case 3188:
    case 3189:
    case 3190:
    case 3191:
    case 3192:
    case 3193:
    case 3194:
    case 3195:
    case 3196:
    case 3197:
    case 3198:
    case 3199:
    case 3200:
    case 3201:
    case 4097:
    case 4098:
    case 4099:
    case 4100:
    case 4101:
    case 4103:
    case 4105:
    case 4106:
    case 4107:
    case 5121:
    case 5122:
    case 5123:
    case 5125:
    case 5126:
    case 5127:
    case 5128:
    case 5129:
    case 5130:
    case 5131:
    case 5132:
    case 5133:
    case 6145:
    case 6146:
    case 6147:
    case 6148:
    case 6151:
    case 6152:
    case 6153:
    case 6154:
    case 8193:
    case 8194:
    case 8195:
    case 8196:
    case 8197:
    case 8198:
    case 8199:
    case 8200:
    case 8201:
    case 8202:
    case 8203:
    case 8204:
    case 8205:
    case 8206:
    case 8207:
    case 8208:
    case 8209:
    case 8210:
    case 8211:
    case 8212:
    case 8213:
    case 8214:
    case 8215:
    case 8216:
    case 8217:
    case 8218:
    case 8219:
    case 8220:
    case 8221:
    case 8222:
    case 8223:
    case 8224:
    case 8225:
    case 8226:
    case 8227:
    case 8228:
    case 8230:
    case 8231:
    case 8232:
    case 8233:
    case 8234:
    case 8235:
    case 8236:
    case 8237:
    case 8238:
    case 8239:
    case 8240:
    case 8241:
    case 8242:
    case 8243:
    case 8244:
    case 8245:
    case 8246:
    case 8247:
    case 8248:
    case 8249:
    case 8250:
    case 8251:
    case 8252:
    case 8253:
    case 8254:
    case 8255:
    case 8256:
    case 8257:
    case 8258:
    case 8259:
    case 8260:
    case 8261:
    case 8262:
    case 8263:
    case 8264:
    case 8265:
    case 8266:
    case 8267:
    case 8268:
    case 8269:
    case 8270:
    case 64599:
    case 64851:
    case 64852:
    case 64854:
    case 64855:
    case 64856:
    case 64857:
    case 64858:
    case 64859:
    case 64861:
    case 1048575:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EventEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto[1];
}
bool EventEnum_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 56:
    case 57:
    case 59:
    case 60:
    case 61:
    case 62:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 4095:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BleMetaEventEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto[2];
}
bool BleMetaEventEnum_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 4095:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* StatusEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto[3];
}
bool StatusEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 4095:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BqrIdEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto[4];
}
bool BqrIdEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BqrPacketTypeEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fhci_2fenums_2eproto[5];
}
bool BqrPacketTypeEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace hci
}  // namespace bluetooth
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
