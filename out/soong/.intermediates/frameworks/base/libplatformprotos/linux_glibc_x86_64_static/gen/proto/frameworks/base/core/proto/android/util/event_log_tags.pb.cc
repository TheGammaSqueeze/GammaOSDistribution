// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/util/event_log_tags.proto

#include "frameworks/base/core/proto/android/util/event_log_tags.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EventLogTag_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EventLogTag_ValueDescriptor_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto;
namespace android {
namespace util {
class EventLogTagMapProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EventLogTagMapProto> _instance;
} _EventLogTagMapProto_default_instance_;
class EventLogTag_ValueDescriptorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EventLogTag_ValueDescriptor> _instance;
} _EventLogTag_ValueDescriptor_default_instance_;
class EventLogTagDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EventLogTag> _instance;
} _EventLogTag_default_instance_;
}  // namespace util
}  // namespace android
static void InitDefaultsscc_info_EventLogTag_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::util::_EventLogTag_default_instance_;
    new (ptr) ::android::util::EventLogTag();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::util::EventLogTag::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EventLogTag_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_EventLogTag_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto}, {
      &scc_info_EventLogTag_ValueDescriptor_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto.base,}};

static void InitDefaultsscc_info_EventLogTag_ValueDescriptor_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::util::_EventLogTag_ValueDescriptor_default_instance_;
    new (ptr) ::android::util::EventLogTag_ValueDescriptor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::util::EventLogTag_ValueDescriptor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EventLogTag_ValueDescriptor_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_EventLogTag_ValueDescriptor_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto}, {}};

static void InitDefaultsscc_info_EventLogTagMapProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::util::_EventLogTagMapProto_default_instance_;
    new (ptr) ::android::util::EventLogTagMapProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::util::EventLogTagMapProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EventLogTagMapProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_EventLogTagMapProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto}, {
      &scc_info_EventLogTag_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::util::EventLogTagMapProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::util::EventLogTagMapProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::util::EventLogTagMapProto, event_log_tags_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::util::EventLogTag_ValueDescriptor, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::util::EventLogTag_ValueDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::util::EventLogTag_ValueDescriptor, name_),
  PROTOBUF_FIELD_OFFSET(::android::util::EventLogTag_ValueDescriptor, type_),
  PROTOBUF_FIELD_OFFSET(::android::util::EventLogTag_ValueDescriptor, unit_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::android::util::EventLogTag, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::util::EventLogTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::util::EventLogTag, tag_number_),
  PROTOBUF_FIELD_OFFSET(::android::util::EventLogTag, tag_name_),
  PROTOBUF_FIELD_OFFSET(::android::util::EventLogTag, value_descriptors_),
  1,
  0,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::android::util::EventLogTagMapProto)},
  { 7, 15, sizeof(::android::util::EventLogTag_ValueDescriptor)},
  { 18, 26, sizeof(::android::util::EventLogTag)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::util::_EventLogTagMapProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::util::_EventLogTag_ValueDescriptor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::util::_EventLogTag_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n<frameworks/base/core/proto/android/uti"
  "l/event_log_tags.proto\022\014android.util\0320fr"
  "ameworks/base/core/proto/android/privacy"
  ".proto\"S\n\023EventLogTagMapProto\0221\n\016event_l"
  "og_tags\030\001 \003(\0132\031.android.util.EventLogTag"
  ":\t\232\237\325\207\003\003\010\310\001\"\366\003\n\013EventLogTag\022\022\n\ntag_numbe"
  "r\030\001 \001(\r\022\020\n\010tag_name\030\002 \001(\t\022D\n\021value_descr"
  "iptors\030\003 \003(\0132).android.util.EventLogTag."
  "ValueDescriptor\032\357\002\n\017ValueDescriptor\022\014\n\004n"
  "ame\030\001 \001(\t\022@\n\004type\030\002 \001(\01622.android.util.E"
  "ventLogTag.ValueDescriptor.DataType\022@\n\004u"
  "nit\030\003 \001(\01622.android.util.EventLogTag.Val"
  "ueDescriptor.DataUnit\"K\n\010DataType\022\013\n\007UNK"
  "NOWN\020\000\022\007\n\003INT\020\001\022\010\n\004LONG\020\002\022\n\n\006STRING\020\003\022\010\n"
  "\004LIST\020\004\022\t\n\005FLOAT\020\005\"r\n\010DataUnit\022\t\n\005UNSET\020"
  "\000\022\013\n\007OBJECTS\020\001\022\t\n\005BYTES\020\002\022\020\n\014MILLISECOND"
  "S\020\003\022\017\n\013ALLOCATIONS\020\004\022\006\n\002ID\020\005\022\013\n\007PERCENT\020"
  "\006\022\013\n\007SECONDS\020s:\t\232\237\325\207\003\003\010\310\001:\t\232\237\325\207\003\003\010\310\001B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto_deps[1] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto_sccs[3] = {
  &scc_info_EventLogTag_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto.base,
  &scc_info_EventLogTag_ValueDescriptor_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto.base,
  &scc_info_EventLogTagMapProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto, "frameworks/base/core/proto/android/util/event_log_tags.proto", 720,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto_deps, 3, 1,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto, 3, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto), true);
namespace android {
namespace util {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EventLogTag_ValueDescriptor_DataType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto[0];
}
bool EventLogTag_ValueDescriptor_DataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr EventLogTag_ValueDescriptor_DataType EventLogTag_ValueDescriptor::UNKNOWN;
constexpr EventLogTag_ValueDescriptor_DataType EventLogTag_ValueDescriptor::INT;
constexpr EventLogTag_ValueDescriptor_DataType EventLogTag_ValueDescriptor::LONG;
constexpr EventLogTag_ValueDescriptor_DataType EventLogTag_ValueDescriptor::STRING;
constexpr EventLogTag_ValueDescriptor_DataType EventLogTag_ValueDescriptor::LIST;
constexpr EventLogTag_ValueDescriptor_DataType EventLogTag_ValueDescriptor::FLOAT;
constexpr EventLogTag_ValueDescriptor_DataType EventLogTag_ValueDescriptor::DataType_MIN;
constexpr EventLogTag_ValueDescriptor_DataType EventLogTag_ValueDescriptor::DataType_MAX;
constexpr int EventLogTag_ValueDescriptor::DataType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EventLogTag_ValueDescriptor_DataUnit_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto[1];
}
bool EventLogTag_ValueDescriptor_DataUnit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 115:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr EventLogTag_ValueDescriptor_DataUnit EventLogTag_ValueDescriptor::UNSET;
constexpr EventLogTag_ValueDescriptor_DataUnit EventLogTag_ValueDescriptor::OBJECTS;
constexpr EventLogTag_ValueDescriptor_DataUnit EventLogTag_ValueDescriptor::BYTES;
constexpr EventLogTag_ValueDescriptor_DataUnit EventLogTag_ValueDescriptor::MILLISECONDS;
constexpr EventLogTag_ValueDescriptor_DataUnit EventLogTag_ValueDescriptor::ALLOCATIONS;
constexpr EventLogTag_ValueDescriptor_DataUnit EventLogTag_ValueDescriptor::ID;
constexpr EventLogTag_ValueDescriptor_DataUnit EventLogTag_ValueDescriptor::PERCENT;
constexpr EventLogTag_ValueDescriptor_DataUnit EventLogTag_ValueDescriptor::SECONDS;
constexpr EventLogTag_ValueDescriptor_DataUnit EventLogTag_ValueDescriptor::DataUnit_MIN;
constexpr EventLogTag_ValueDescriptor_DataUnit EventLogTag_ValueDescriptor::DataUnit_MAX;
constexpr int EventLogTag_ValueDescriptor::DataUnit_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void EventLogTagMapProto::InitAsDefaultInstance() {
}
class EventLogTagMapProto::_Internal {
 public:
  using HasBits = decltype(std::declval<EventLogTagMapProto>()._has_bits_);
};

EventLogTagMapProto::EventLogTagMapProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.util.EventLogTagMapProto)
}
EventLogTagMapProto::EventLogTagMapProto(const EventLogTagMapProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      event_log_tags_(from.event_log_tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:android.util.EventLogTagMapProto)
}

void EventLogTagMapProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EventLogTagMapProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto.base);
}

EventLogTagMapProto::~EventLogTagMapProto() {
  // @@protoc_insertion_point(destructor:android.util.EventLogTagMapProto)
  SharedDtor();
}

void EventLogTagMapProto::SharedDtor() {
}

void EventLogTagMapProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventLogTagMapProto& EventLogTagMapProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EventLogTagMapProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto.base);
  return *internal_default_instance();
}


void EventLogTagMapProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.util.EventLogTagMapProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_log_tags_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EventLogTagMapProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.util.EventLogTag event_log_tags = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_event_log_tags(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EventLogTagMapProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.util.EventLogTagMapProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.util.EventLogTag event_log_tags = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_event_log_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.util.EventLogTagMapProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.util.EventLogTagMapProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EventLogTagMapProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.util.EventLogTagMapProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.util.EventLogTag event_log_tags = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_log_tags_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->event_log_tags(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.util.EventLogTagMapProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* EventLogTagMapProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.util.EventLogTagMapProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.util.EventLogTag event_log_tags = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_log_tags_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->event_log_tags(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.util.EventLogTagMapProto)
  return target;
}

size_t EventLogTagMapProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.util.EventLogTagMapProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.util.EventLogTag event_log_tags = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->event_log_tags_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->event_log_tags(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventLogTagMapProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.util.EventLogTagMapProto)
  GOOGLE_DCHECK_NE(&from, this);
  const EventLogTagMapProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EventLogTagMapProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.util.EventLogTagMapProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.util.EventLogTagMapProto)
    MergeFrom(*source);
  }
}

void EventLogTagMapProto::MergeFrom(const EventLogTagMapProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.util.EventLogTagMapProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  event_log_tags_.MergeFrom(from.event_log_tags_);
}

void EventLogTagMapProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.util.EventLogTagMapProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventLogTagMapProto::CopyFrom(const EventLogTagMapProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.util.EventLogTagMapProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventLogTagMapProto::IsInitialized() const {
  return true;
}

void EventLogTagMapProto::InternalSwap(EventLogTagMapProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&event_log_tags_)->InternalSwap(CastToBase(&other->event_log_tags_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EventLogTagMapProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EventLogTag_ValueDescriptor::InitAsDefaultInstance() {
}
class EventLogTag_ValueDescriptor::_Internal {
 public:
  using HasBits = decltype(std::declval<EventLogTag_ValueDescriptor>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unit(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

EventLogTag_ValueDescriptor::EventLogTag_ValueDescriptor()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.util.EventLogTag.ValueDescriptor)
}
EventLogTag_ValueDescriptor::EventLogTag_ValueDescriptor(const EventLogTag_ValueDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&unit_) -
    reinterpret_cast<char*>(&type_)) + sizeof(unit_));
  // @@protoc_insertion_point(copy_constructor:android.util.EventLogTag.ValueDescriptor)
}

void EventLogTag_ValueDescriptor::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EventLogTag_ValueDescriptor_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unit_) -
      reinterpret_cast<char*>(&type_)) + sizeof(unit_));
}

EventLogTag_ValueDescriptor::~EventLogTag_ValueDescriptor() {
  // @@protoc_insertion_point(destructor:android.util.EventLogTag.ValueDescriptor)
  SharedDtor();
}

void EventLogTag_ValueDescriptor::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EventLogTag_ValueDescriptor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventLogTag_ValueDescriptor& EventLogTag_ValueDescriptor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EventLogTag_ValueDescriptor_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto.base);
  return *internal_default_instance();
}


void EventLogTag_ValueDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:android.util.EventLogTag.ValueDescriptor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&unit_) -
        reinterpret_cast<char*>(&type_)) + sizeof(unit_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EventLogTag_ValueDescriptor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_name(), ptr, ctx, "android.util.EventLogTag.ValueDescriptor.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.util.EventLogTag.ValueDescriptor.DataType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::util::EventLogTag_ValueDescriptor_DataType_IsValid(val))) {
            set_type(static_cast<::android::util::EventLogTag_ValueDescriptor_DataType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.util.EventLogTag.ValueDescriptor.DataUnit unit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::util::EventLogTag_ValueDescriptor_DataUnit_IsValid(val))) {
            set_unit(static_cast<::android::util::EventLogTag_ValueDescriptor_DataUnit>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EventLogTag_ValueDescriptor::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.util.EventLogTag.ValueDescriptor)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.util.EventLogTag.ValueDescriptor.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.util.EventLogTag.ValueDescriptor.DataType type = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::util::EventLogTag_ValueDescriptor_DataType_IsValid(value)) {
            set_type(static_cast< ::android::util::EventLogTag_ValueDescriptor_DataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.util.EventLogTag.ValueDescriptor.DataUnit unit = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::util::EventLogTag_ValueDescriptor_DataUnit_IsValid(value)) {
            set_unit(static_cast< ::android::util::EventLogTag_ValueDescriptor_DataUnit >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.util.EventLogTag.ValueDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.util.EventLogTag.ValueDescriptor)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EventLogTag_ValueDescriptor::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.util.EventLogTag.ValueDescriptor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.util.EventLogTag.ValueDescriptor.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .android.util.EventLogTag.ValueDescriptor.DataType type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional .android.util.EventLogTag.ValueDescriptor.DataUnit unit = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      3, this->unit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.util.EventLogTag.ValueDescriptor)
}

::PROTOBUF_NAMESPACE_ID::uint8* EventLogTag_ValueDescriptor::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.util.EventLogTag.ValueDescriptor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.util.EventLogTag.ValueDescriptor.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .android.util.EventLogTag.ValueDescriptor.DataType type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional .android.util.EventLogTag.ValueDescriptor.DataUnit unit = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->unit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.util.EventLogTag.ValueDescriptor)
  return target;
}

size_t EventLogTag_ValueDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.util.EventLogTag.ValueDescriptor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .android.util.EventLogTag.ValueDescriptor.DataType type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .android.util.EventLogTag.ValueDescriptor.DataUnit unit = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->unit());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventLogTag_ValueDescriptor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.util.EventLogTag.ValueDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const EventLogTag_ValueDescriptor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EventLogTag_ValueDescriptor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.util.EventLogTag.ValueDescriptor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.util.EventLogTag.ValueDescriptor)
    MergeFrom(*source);
  }
}

void EventLogTag_ValueDescriptor::MergeFrom(const EventLogTag_ValueDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.util.EventLogTag.ValueDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      unit_ = from.unit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EventLogTag_ValueDescriptor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.util.EventLogTag.ValueDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventLogTag_ValueDescriptor::CopyFrom(const EventLogTag_ValueDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.util.EventLogTag.ValueDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventLogTag_ValueDescriptor::IsInitialized() const {
  return true;
}

void EventLogTag_ValueDescriptor::InternalSwap(EventLogTag_ValueDescriptor* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(unit_, other->unit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EventLogTag_ValueDescriptor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EventLogTag::InitAsDefaultInstance() {
}
class EventLogTag::_Internal {
 public:
  using HasBits = decltype(std::declval<EventLogTag>()._has_bits_);
  static void set_has_tag_number(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_tag_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

EventLogTag::EventLogTag()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.util.EventLogTag)
}
EventLogTag::EventLogTag(const EventLogTag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      value_descriptors_(from.value_descriptors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag_name()) {
    tag_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tag_name_);
  }
  tag_number_ = from.tag_number_;
  // @@protoc_insertion_point(copy_constructor:android.util.EventLogTag)
}

void EventLogTag::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EventLogTag_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto.base);
  tag_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tag_number_ = 0u;
}

EventLogTag::~EventLogTag() {
  // @@protoc_insertion_point(destructor:android.util.EventLogTag)
  SharedDtor();
}

void EventLogTag::SharedDtor() {
  tag_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EventLogTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventLogTag& EventLogTag::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EventLogTag_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fevent_5flog_5ftags_2eproto.base);
  return *internal_default_instance();
}


void EventLogTag::Clear() {
// @@protoc_insertion_point(message_clear_start:android.util.EventLogTag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_descriptors_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    tag_name_.ClearNonDefaultToEmptyNoArena();
  }
  tag_number_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EventLogTag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 tag_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_tag_number(&has_bits);
          tag_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string tag_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_tag_name(), ptr, ctx, "android.util.EventLogTag.tag_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.util.EventLogTag.ValueDescriptor value_descriptors = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_value_descriptors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EventLogTag::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.util.EventLogTag)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 tag_number = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_tag_number(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tag_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tag_name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_tag_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag_name().data(), static_cast<int>(this->tag_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.util.EventLogTag.tag_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.util.EventLogTag.ValueDescriptor value_descriptors = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_value_descriptors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.util.EventLogTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.util.EventLogTag)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EventLogTag::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.util.EventLogTag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tag_number = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(1, this->tag_number(), output);
  }

  // optional string tag_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag_name().data(), static_cast<int>(this->tag_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.util.EventLogTag.tag_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tag_name(), output);
  }

  // repeated .android.util.EventLogTag.ValueDescriptor value_descriptors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_descriptors_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->value_descriptors(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.util.EventLogTag)
}

::PROTOBUF_NAMESPACE_ID::uint8* EventLogTag::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.util.EventLogTag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 tag_number = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->tag_number(), target);
  }

  // optional string tag_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag_name().data(), static_cast<int>(this->tag_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.util.EventLogTag.tag_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->tag_name(), target);
  }

  // repeated .android.util.EventLogTag.ValueDescriptor value_descriptors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_descriptors_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->value_descriptors(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.util.EventLogTag)
  return target;
}

size_t EventLogTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.util.EventLogTag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.util.EventLogTag.ValueDescriptor value_descriptors = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->value_descriptors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->value_descriptors(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string tag_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->tag_name());
    }

    // optional uint32 tag_number = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->tag_number());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventLogTag::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.util.EventLogTag)
  GOOGLE_DCHECK_NE(&from, this);
  const EventLogTag* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EventLogTag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.util.EventLogTag)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.util.EventLogTag)
    MergeFrom(*source);
  }
}

void EventLogTag::MergeFrom(const EventLogTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.util.EventLogTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_descriptors_.MergeFrom(from.value_descriptors_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      tag_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tag_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      tag_number_ = from.tag_number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EventLogTag::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.util.EventLogTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventLogTag::CopyFrom(const EventLogTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.util.EventLogTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventLogTag::IsInitialized() const {
  return true;
}

void EventLogTag::InternalSwap(EventLogTag* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&value_descriptors_)->InternalSwap(CastToBase(&other->value_descriptors_));
  tag_name_.Swap(&other->tag_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tag_number_, other->tag_number_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EventLogTag::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace util
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::util::EventLogTagMapProto* Arena::CreateMaybeMessage< ::android::util::EventLogTagMapProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::util::EventLogTagMapProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::util::EventLogTag_ValueDescriptor* Arena::CreateMaybeMessage< ::android::util::EventLogTag_ValueDescriptor >(Arena* arena) {
  return Arena::CreateInternal< ::android::util::EventLogTag_ValueDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::android::util::EventLogTag* Arena::CreateMaybeMessage< ::android::util::EventLogTag >(Arena* arena) {
  return Arena::CreateInternal< ::android::util::EventLogTag >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
