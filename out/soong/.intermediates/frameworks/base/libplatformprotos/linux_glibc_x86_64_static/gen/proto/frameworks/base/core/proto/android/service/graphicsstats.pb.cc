// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/service/graphicsstats.proto

#include "frameworks/base/core/proto/android/service/graphicsstats.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GraphicsStatsHistogramBucketProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GraphicsStatsJankSummaryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GraphicsStatsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto;
namespace android {
namespace service {
class GraphicsStatsServiceDumpProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GraphicsStatsServiceDumpProto> _instance;
} _GraphicsStatsServiceDumpProto_default_instance_;
class GraphicsStatsProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GraphicsStatsProto> _instance;
} _GraphicsStatsProto_default_instance_;
class GraphicsStatsJankSummaryProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GraphicsStatsJankSummaryProto> _instance;
} _GraphicsStatsJankSummaryProto_default_instance_;
class GraphicsStatsHistogramBucketProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GraphicsStatsHistogramBucketProto> _instance;
} _GraphicsStatsHistogramBucketProto_default_instance_;
}  // namespace service
}  // namespace android
static void InitDefaultsscc_info_GraphicsStatsHistogramBucketProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::_GraphicsStatsHistogramBucketProto_default_instance_;
    new (ptr) ::android::service::GraphicsStatsHistogramBucketProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::GraphicsStatsHistogramBucketProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GraphicsStatsHistogramBucketProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GraphicsStatsHistogramBucketProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto}, {}};

static void InitDefaultsscc_info_GraphicsStatsJankSummaryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::_GraphicsStatsJankSummaryProto_default_instance_;
    new (ptr) ::android::service::GraphicsStatsJankSummaryProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::GraphicsStatsJankSummaryProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GraphicsStatsJankSummaryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GraphicsStatsJankSummaryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto}, {}};

static void InitDefaultsscc_info_GraphicsStatsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::_GraphicsStatsProto_default_instance_;
    new (ptr) ::android::service::GraphicsStatsProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::GraphicsStatsProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GraphicsStatsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_GraphicsStatsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto}, {
      &scc_info_GraphicsStatsJankSummaryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto.base,
      &scc_info_GraphicsStatsHistogramBucketProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto.base,}};

static void InitDefaultsscc_info_GraphicsStatsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::_GraphicsStatsServiceDumpProto_default_instance_;
    new (ptr) ::android::service::GraphicsStatsServiceDumpProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::GraphicsStatsServiceDumpProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GraphicsStatsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_GraphicsStatsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto}, {
      &scc_info_GraphicsStatsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto[4];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsServiceDumpProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsServiceDumpProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsServiceDumpProto, stats_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsProto, package_name_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsProto, version_code_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsProto, stats_start_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsProto, stats_end_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsProto, summary_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsProto, histogram_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsProto, gpu_histogram_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsProto, pipeline_),
  0,
  2,
  3,
  4,
  1,
  ~0u,
  ~0u,
  5,
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsJankSummaryProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsJankSummaryProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsJankSummaryProto, total_frames_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsJankSummaryProto, janky_frames_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsJankSummaryProto, missed_vsync_count_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsJankSummaryProto, high_input_latency_count_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsJankSummaryProto, slow_ui_thread_count_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsJankSummaryProto, slow_bitmap_upload_count_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsJankSummaryProto, slow_draw_count_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsJankSummaryProto, missed_deadline_count_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsHistogramBucketProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsHistogramBucketProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsHistogramBucketProto, render_millis_),
  PROTOBUF_FIELD_OFFSET(::android::service::GraphicsStatsHistogramBucketProto, frame_count_),
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::android::service::GraphicsStatsServiceDumpProto)},
  { 7, 20, sizeof(::android::service::GraphicsStatsProto)},
  { 28, 41, sizeof(::android::service::GraphicsStatsJankSummaryProto)},
  { 49, 56, sizeof(::android::service::GraphicsStatsHistogramBucketProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::_GraphicsStatsServiceDumpProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::_GraphicsStatsProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::_GraphicsStatsJankSummaryProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::_GraphicsStatsHistogramBucketProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n>frameworks/base/core/proto/android/ser"
  "vice/graphicsstats.proto\022\017android.servic"
  "e\0320frameworks/base/core/proto/android/pr"
  "ivacy.proto\"^\n\035GraphicsStatsServiceDumpP"
  "roto\0222\n\005stats\030\001 \003(\0132#.android.service.Gr"
  "aphicsStatsProto:\t\232\237\325\207\003\003\010\310\001\"\273\003\n\022Graphics"
  "StatsProto\022\024\n\014package_name\030\001 \001(\t\022\024\n\014vers"
  "ion_code\030\002 \001(\003\022\023\n\013stats_start\030\003 \001(\003\022\021\n\ts"
  "tats_end\030\004 \001(\003\022\?\n\007summary\030\005 \001(\0132..androi"
  "d.service.GraphicsStatsJankSummaryProto\022"
  "E\n\thistogram\030\006 \003(\01322.android.service.Gra"
  "phicsStatsHistogramBucketProto\022I\n\rgpu_hi"
  "stogram\030\007 \003(\01322.android.service.Graphics"
  "StatsHistogramBucketProto\022B\n\010pipeline\030\010 "
  "\001(\01620.android.service.GraphicsStatsProto"
  ".PipelineType\"/\n\014PipelineType\022\013\n\007UNKNOWN"
  "\020\000\022\006\n\002GL\020\001\022\n\n\006VULKAN\020\002:\t\232\237\325\207\003\003\010\310\001\"\214\002\n\035Gr"
  "aphicsStatsJankSummaryProto\022\024\n\014total_fra"
  "mes\030\001 \001(\005\022\024\n\014janky_frames\030\002 \001(\005\022\032\n\022misse"
  "d_vsync_count\030\003 \001(\005\022 \n\030high_input_latenc"
  "y_count\030\004 \001(\005\022\034\n\024slow_ui_thread_count\030\005 "
  "\001(\005\022 \n\030slow_bitmap_upload_count\030\006 \001(\005\022\027\n"
  "\017slow_draw_count\030\007 \001(\005\022\035\n\025missed_deadlin"
  "e_count\030\010 \001(\005:\t\232\237\325\207\003\003\010\310\001\"Z\n!GraphicsStat"
  "sHistogramBucketProto\022\025\n\rrender_millis\030\001"
  " \001(\005\022\023\n\013frame_count\030\002 \001(\005:\t\232\237\325\207\003\003\010\310\001B\035B\031"
  "GraphicsStatsServiceProtoP\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto_deps[1] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto_sccs[4] = {
  &scc_info_GraphicsStatsHistogramBucketProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto.base,
  &scc_info_GraphicsStatsJankSummaryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto.base,
  &scc_info_GraphicsStatsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto.base,
  &scc_info_GraphicsStatsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto, "frameworks/base/core/proto/android/service/graphicsstats.proto", 1067,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto_deps, 4, 1,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto, 4, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto), true);
namespace android {
namespace service {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GraphicsStatsProto_PipelineType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto[0];
}
bool GraphicsStatsProto_PipelineType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GraphicsStatsProto_PipelineType GraphicsStatsProto::UNKNOWN;
constexpr GraphicsStatsProto_PipelineType GraphicsStatsProto::GL;
constexpr GraphicsStatsProto_PipelineType GraphicsStatsProto::VULKAN;
constexpr GraphicsStatsProto_PipelineType GraphicsStatsProto::PipelineType_MIN;
constexpr GraphicsStatsProto_PipelineType GraphicsStatsProto::PipelineType_MAX;
constexpr int GraphicsStatsProto::PipelineType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void GraphicsStatsServiceDumpProto::InitAsDefaultInstance() {
}
class GraphicsStatsServiceDumpProto::_Internal {
 public:
  using HasBits = decltype(std::declval<GraphicsStatsServiceDumpProto>()._has_bits_);
};

GraphicsStatsServiceDumpProto::GraphicsStatsServiceDumpProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.GraphicsStatsServiceDumpProto)
}
GraphicsStatsServiceDumpProto::GraphicsStatsServiceDumpProto(const GraphicsStatsServiceDumpProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:android.service.GraphicsStatsServiceDumpProto)
}

void GraphicsStatsServiceDumpProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GraphicsStatsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto.base);
}

GraphicsStatsServiceDumpProto::~GraphicsStatsServiceDumpProto() {
  // @@protoc_insertion_point(destructor:android.service.GraphicsStatsServiceDumpProto)
  SharedDtor();
}

void GraphicsStatsServiceDumpProto::SharedDtor() {
}

void GraphicsStatsServiceDumpProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GraphicsStatsServiceDumpProto& GraphicsStatsServiceDumpProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GraphicsStatsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto.base);
  return *internal_default_instance();
}


void GraphicsStatsServiceDumpProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.GraphicsStatsServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GraphicsStatsServiceDumpProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.service.GraphicsStatsProto stats = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_stats(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GraphicsStatsServiceDumpProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.GraphicsStatsServiceDumpProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.service.GraphicsStatsProto stats = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.GraphicsStatsServiceDumpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.GraphicsStatsServiceDumpProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GraphicsStatsServiceDumpProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.GraphicsStatsServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.service.GraphicsStatsProto stats = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->stats(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.GraphicsStatsServiceDumpProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* GraphicsStatsServiceDumpProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.GraphicsStatsServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.service.GraphicsStatsProto stats = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->stats(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.GraphicsStatsServiceDumpProto)
  return target;
}

size_t GraphicsStatsServiceDumpProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.GraphicsStatsServiceDumpProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.GraphicsStatsProto stats = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->stats(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphicsStatsServiceDumpProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.GraphicsStatsServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphicsStatsServiceDumpProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GraphicsStatsServiceDumpProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.GraphicsStatsServiceDumpProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.GraphicsStatsServiceDumpProto)
    MergeFrom(*source);
  }
}

void GraphicsStatsServiceDumpProto::MergeFrom(const GraphicsStatsServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.GraphicsStatsServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
}

void GraphicsStatsServiceDumpProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.GraphicsStatsServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphicsStatsServiceDumpProto::CopyFrom(const GraphicsStatsServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.GraphicsStatsServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphicsStatsServiceDumpProto::IsInitialized() const {
  return true;
}

void GraphicsStatsServiceDumpProto::InternalSwap(GraphicsStatsServiceDumpProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&stats_)->InternalSwap(CastToBase(&other->stats_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GraphicsStatsServiceDumpProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GraphicsStatsProto::InitAsDefaultInstance() {
  ::android::service::_GraphicsStatsProto_default_instance_._instance.get_mutable()->summary_ = const_cast< ::android::service::GraphicsStatsJankSummaryProto*>(
      ::android::service::GraphicsStatsJankSummaryProto::internal_default_instance());
}
class GraphicsStatsProto::_Internal {
 public:
  using HasBits = decltype(std::declval<GraphicsStatsProto>()._has_bits_);
  static void set_has_package_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version_code(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_stats_start(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_stats_end(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::android::service::GraphicsStatsJankSummaryProto& summary(const GraphicsStatsProto* msg);
  static void set_has_summary(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_pipeline(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::android::service::GraphicsStatsJankSummaryProto&
GraphicsStatsProto::_Internal::summary(const GraphicsStatsProto* msg) {
  return *msg->summary_;
}
GraphicsStatsProto::GraphicsStatsProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.GraphicsStatsProto)
}
GraphicsStatsProto::GraphicsStatsProto(const GraphicsStatsProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      histogram_(from.histogram_),
      gpu_histogram_(from.gpu_histogram_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_package_name()) {
    package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  if (from.has_summary()) {
    summary_ = new ::android::service::GraphicsStatsJankSummaryProto(*from.summary_);
  } else {
    summary_ = nullptr;
  }
  ::memcpy(&version_code_, &from.version_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&pipeline_) -
    reinterpret_cast<char*>(&version_code_)) + sizeof(pipeline_));
  // @@protoc_insertion_point(copy_constructor:android.service.GraphicsStatsProto)
}

void GraphicsStatsProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GraphicsStatsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto.base);
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&summary_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pipeline_) -
      reinterpret_cast<char*>(&summary_)) + sizeof(pipeline_));
}

GraphicsStatsProto::~GraphicsStatsProto() {
  // @@protoc_insertion_point(destructor:android.service.GraphicsStatsProto)
  SharedDtor();
}

void GraphicsStatsProto::SharedDtor() {
  package_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete summary_;
}

void GraphicsStatsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GraphicsStatsProto& GraphicsStatsProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GraphicsStatsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto.base);
  return *internal_default_instance();
}


void GraphicsStatsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.GraphicsStatsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  histogram_.Clear();
  gpu_histogram_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      package_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(summary_ != nullptr);
      summary_->Clear();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&version_code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pipeline_) -
        reinterpret_cast<char*>(&version_code_)) + sizeof(pipeline_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GraphicsStatsProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string package_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_package_name(), ptr, ctx, "android.service.GraphicsStatsProto.package_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 version_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_version_code(&has_bits);
          version_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 stats_start = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_stats_start(&has_bits);
          stats_start_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 stats_end = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_stats_end(&has_bits);
          stats_end_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.GraphicsStatsJankSummaryProto summary = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_summary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.GraphicsStatsHistogramBucketProto histogram = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_histogram(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 50);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.GraphicsStatsHistogramBucketProto gpu_histogram = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_gpu_histogram(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 58);
        } else goto handle_unusual;
        continue;
      // optional .android.service.GraphicsStatsProto.PipelineType pipeline = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::GraphicsStatsProto_PipelineType_IsValid(val))) {
            set_pipeline(static_cast<::android::service::GraphicsStatsProto_PipelineType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GraphicsStatsProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.GraphicsStatsProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string package_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package_name().data(), static_cast<int>(this->package_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.GraphicsStatsProto.package_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 version_code = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_version_code(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 stats_start = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_stats_start(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &stats_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 stats_end = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_stats_end(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &stats_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.GraphicsStatsJankSummaryProto summary = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.GraphicsStatsHistogramBucketProto histogram = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_histogram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.GraphicsStatsHistogramBucketProto gpu_histogram = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_gpu_histogram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.GraphicsStatsProto.PipelineType pipeline = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::GraphicsStatsProto_PipelineType_IsValid(value)) {
            set_pipeline(static_cast< ::android::service::GraphicsStatsProto_PipelineType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                8, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.GraphicsStatsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.GraphicsStatsProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GraphicsStatsProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.GraphicsStatsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string package_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.GraphicsStatsProto.package_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->package_name(), output);
  }

  // optional int64 version_code = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->version_code(), output);
  }

  // optional int64 stats_start = 3;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->stats_start(), output);
  }

  // optional int64 stats_end = 4;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(4, this->stats_end(), output);
  }

  // optional .android.service.GraphicsStatsJankSummaryProto summary = 5;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::summary(this), output);
  }

  // repeated .android.service.GraphicsStatsHistogramBucketProto histogram = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->histogram_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->histogram(static_cast<int>(i)),
      output);
  }

  // repeated .android.service.GraphicsStatsHistogramBucketProto gpu_histogram = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gpu_histogram_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->gpu_histogram(static_cast<int>(i)),
      output);
  }

  // optional .android.service.GraphicsStatsProto.PipelineType pipeline = 8;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      8, this->pipeline(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.GraphicsStatsProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* GraphicsStatsProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.GraphicsStatsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string package_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.GraphicsStatsProto.package_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->package_name(), target);
  }

  // optional int64 version_code = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->version_code(), target);
  }

  // optional int64 stats_start = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->stats_start(), target);
  }

  // optional int64 stats_end = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->stats_end(), target);
  }

  // optional .android.service.GraphicsStatsJankSummaryProto summary = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::summary(this), target);
  }

  // repeated .android.service.GraphicsStatsHistogramBucketProto histogram = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->histogram_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->histogram(static_cast<int>(i)), target);
  }

  // repeated .android.service.GraphicsStatsHistogramBucketProto gpu_histogram = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gpu_histogram_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->gpu_histogram(static_cast<int>(i)), target);
  }

  // optional .android.service.GraphicsStatsProto.PipelineType pipeline = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->pipeline(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.GraphicsStatsProto)
  return target;
}

size_t GraphicsStatsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.GraphicsStatsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.GraphicsStatsHistogramBucketProto histogram = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->histogram_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->histogram(static_cast<int>(i)));
    }
  }

  // repeated .android.service.GraphicsStatsHistogramBucketProto gpu_histogram = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->gpu_histogram_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->gpu_histogram(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string package_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // optional .android.service.GraphicsStatsJankSummaryProto summary = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *summary_);
    }

    // optional int64 version_code = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->version_code());
    }

    // optional int64 stats_start = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->stats_start());
    }

    // optional int64 stats_end = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->stats_end());
    }

    // optional .android.service.GraphicsStatsProto.PipelineType pipeline = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->pipeline());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphicsStatsProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.GraphicsStatsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphicsStatsProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GraphicsStatsProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.GraphicsStatsProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.GraphicsStatsProto)
    MergeFrom(*source);
  }
}

void GraphicsStatsProto::MergeFrom(const GraphicsStatsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.GraphicsStatsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  histogram_.MergeFrom(from.histogram_);
  gpu_histogram_.MergeFrom(from.gpu_histogram_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_summary()->::android::service::GraphicsStatsJankSummaryProto::MergeFrom(from.summary());
    }
    if (cached_has_bits & 0x00000004u) {
      version_code_ = from.version_code_;
    }
    if (cached_has_bits & 0x00000008u) {
      stats_start_ = from.stats_start_;
    }
    if (cached_has_bits & 0x00000010u) {
      stats_end_ = from.stats_end_;
    }
    if (cached_has_bits & 0x00000020u) {
      pipeline_ = from.pipeline_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GraphicsStatsProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.GraphicsStatsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphicsStatsProto::CopyFrom(const GraphicsStatsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.GraphicsStatsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphicsStatsProto::IsInitialized() const {
  return true;
}

void GraphicsStatsProto::InternalSwap(GraphicsStatsProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&histogram_)->InternalSwap(CastToBase(&other->histogram_));
  CastToBase(&gpu_histogram_)->InternalSwap(CastToBase(&other->gpu_histogram_));
  package_name_.Swap(&other->package_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(summary_, other->summary_);
  swap(version_code_, other->version_code_);
  swap(stats_start_, other->stats_start_);
  swap(stats_end_, other->stats_end_);
  swap(pipeline_, other->pipeline_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GraphicsStatsProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GraphicsStatsJankSummaryProto::InitAsDefaultInstance() {
}
class GraphicsStatsJankSummaryProto::_Internal {
 public:
  using HasBits = decltype(std::declval<GraphicsStatsJankSummaryProto>()._has_bits_);
  static void set_has_total_frames(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_janky_frames(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_missed_vsync_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_high_input_latency_count(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_slow_ui_thread_count(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_slow_bitmap_upload_count(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_slow_draw_count(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_missed_deadline_count(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

GraphicsStatsJankSummaryProto::GraphicsStatsJankSummaryProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.GraphicsStatsJankSummaryProto)
}
GraphicsStatsJankSummaryProto::GraphicsStatsJankSummaryProto(const GraphicsStatsJankSummaryProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_frames_, &from.total_frames_,
    static_cast<size_t>(reinterpret_cast<char*>(&missed_deadline_count_) -
    reinterpret_cast<char*>(&total_frames_)) + sizeof(missed_deadline_count_));
  // @@protoc_insertion_point(copy_constructor:android.service.GraphicsStatsJankSummaryProto)
}

void GraphicsStatsJankSummaryProto::SharedCtor() {
  ::memset(&total_frames_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&missed_deadline_count_) -
      reinterpret_cast<char*>(&total_frames_)) + sizeof(missed_deadline_count_));
}

GraphicsStatsJankSummaryProto::~GraphicsStatsJankSummaryProto() {
  // @@protoc_insertion_point(destructor:android.service.GraphicsStatsJankSummaryProto)
  SharedDtor();
}

void GraphicsStatsJankSummaryProto::SharedDtor() {
}

void GraphicsStatsJankSummaryProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GraphicsStatsJankSummaryProto& GraphicsStatsJankSummaryProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GraphicsStatsJankSummaryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto.base);
  return *internal_default_instance();
}


void GraphicsStatsJankSummaryProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.GraphicsStatsJankSummaryProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&total_frames_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&missed_deadline_count_) -
        reinterpret_cast<char*>(&total_frames_)) + sizeof(missed_deadline_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GraphicsStatsJankSummaryProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 total_frames = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_total_frames(&has_bits);
          total_frames_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 janky_frames = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_janky_frames(&has_bits);
          janky_frames_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 missed_vsync_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_missed_vsync_count(&has_bits);
          missed_vsync_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 high_input_latency_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_high_input_latency_count(&has_bits);
          high_input_latency_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 slow_ui_thread_count = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_slow_ui_thread_count(&has_bits);
          slow_ui_thread_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 slow_bitmap_upload_count = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_slow_bitmap_upload_count(&has_bits);
          slow_bitmap_upload_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 slow_draw_count = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_slow_draw_count(&has_bits);
          slow_draw_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 missed_deadline_count = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_missed_deadline_count(&has_bits);
          missed_deadline_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GraphicsStatsJankSummaryProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.GraphicsStatsJankSummaryProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 total_frames = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_total_frames(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_frames_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 janky_frames = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_janky_frames(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &janky_frames_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 missed_vsync_count = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_missed_vsync_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &missed_vsync_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 high_input_latency_count = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_high_input_latency_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &high_input_latency_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 slow_ui_thread_count = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_slow_ui_thread_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &slow_ui_thread_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 slow_bitmap_upload_count = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_slow_bitmap_upload_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &slow_bitmap_upload_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 slow_draw_count = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_slow_draw_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &slow_draw_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 missed_deadline_count = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_missed_deadline_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &missed_deadline_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.GraphicsStatsJankSummaryProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.GraphicsStatsJankSummaryProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GraphicsStatsJankSummaryProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.GraphicsStatsJankSummaryProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 total_frames = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->total_frames(), output);
  }

  // optional int32 janky_frames = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->janky_frames(), output);
  }

  // optional int32 missed_vsync_count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->missed_vsync_count(), output);
  }

  // optional int32 high_input_latency_count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->high_input_latency_count(), output);
  }

  // optional int32 slow_ui_thread_count = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->slow_ui_thread_count(), output);
  }

  // optional int32 slow_bitmap_upload_count = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->slow_bitmap_upload_count(), output);
  }

  // optional int32 slow_draw_count = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->slow_draw_count(), output);
  }

  // optional int32 missed_deadline_count = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(8, this->missed_deadline_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.GraphicsStatsJankSummaryProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* GraphicsStatsJankSummaryProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.GraphicsStatsJankSummaryProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 total_frames = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->total_frames(), target);
  }

  // optional int32 janky_frames = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->janky_frames(), target);
  }

  // optional int32 missed_vsync_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->missed_vsync_count(), target);
  }

  // optional int32 high_input_latency_count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->high_input_latency_count(), target);
  }

  // optional int32 slow_ui_thread_count = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->slow_ui_thread_count(), target);
  }

  // optional int32 slow_bitmap_upload_count = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->slow_bitmap_upload_count(), target);
  }

  // optional int32 slow_draw_count = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->slow_draw_count(), target);
  }

  // optional int32 missed_deadline_count = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->missed_deadline_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.GraphicsStatsJankSummaryProto)
  return target;
}

size_t GraphicsStatsJankSummaryProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.GraphicsStatsJankSummaryProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional int32 total_frames = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->total_frames());
    }

    // optional int32 janky_frames = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->janky_frames());
    }

    // optional int32 missed_vsync_count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->missed_vsync_count());
    }

    // optional int32 high_input_latency_count = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->high_input_latency_count());
    }

    // optional int32 slow_ui_thread_count = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->slow_ui_thread_count());
    }

    // optional int32 slow_bitmap_upload_count = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->slow_bitmap_upload_count());
    }

    // optional int32 slow_draw_count = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->slow_draw_count());
    }

    // optional int32 missed_deadline_count = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->missed_deadline_count());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphicsStatsJankSummaryProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.GraphicsStatsJankSummaryProto)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphicsStatsJankSummaryProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GraphicsStatsJankSummaryProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.GraphicsStatsJankSummaryProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.GraphicsStatsJankSummaryProto)
    MergeFrom(*source);
  }
}

void GraphicsStatsJankSummaryProto::MergeFrom(const GraphicsStatsJankSummaryProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.GraphicsStatsJankSummaryProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      total_frames_ = from.total_frames_;
    }
    if (cached_has_bits & 0x00000002u) {
      janky_frames_ = from.janky_frames_;
    }
    if (cached_has_bits & 0x00000004u) {
      missed_vsync_count_ = from.missed_vsync_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      high_input_latency_count_ = from.high_input_latency_count_;
    }
    if (cached_has_bits & 0x00000010u) {
      slow_ui_thread_count_ = from.slow_ui_thread_count_;
    }
    if (cached_has_bits & 0x00000020u) {
      slow_bitmap_upload_count_ = from.slow_bitmap_upload_count_;
    }
    if (cached_has_bits & 0x00000040u) {
      slow_draw_count_ = from.slow_draw_count_;
    }
    if (cached_has_bits & 0x00000080u) {
      missed_deadline_count_ = from.missed_deadline_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GraphicsStatsJankSummaryProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.GraphicsStatsJankSummaryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphicsStatsJankSummaryProto::CopyFrom(const GraphicsStatsJankSummaryProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.GraphicsStatsJankSummaryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphicsStatsJankSummaryProto::IsInitialized() const {
  return true;
}

void GraphicsStatsJankSummaryProto::InternalSwap(GraphicsStatsJankSummaryProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(total_frames_, other->total_frames_);
  swap(janky_frames_, other->janky_frames_);
  swap(missed_vsync_count_, other->missed_vsync_count_);
  swap(high_input_latency_count_, other->high_input_latency_count_);
  swap(slow_ui_thread_count_, other->slow_ui_thread_count_);
  swap(slow_bitmap_upload_count_, other->slow_bitmap_upload_count_);
  swap(slow_draw_count_, other->slow_draw_count_);
  swap(missed_deadline_count_, other->missed_deadline_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GraphicsStatsJankSummaryProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GraphicsStatsHistogramBucketProto::InitAsDefaultInstance() {
}
class GraphicsStatsHistogramBucketProto::_Internal {
 public:
  using HasBits = decltype(std::declval<GraphicsStatsHistogramBucketProto>()._has_bits_);
  static void set_has_render_millis(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_frame_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GraphicsStatsHistogramBucketProto::GraphicsStatsHistogramBucketProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.GraphicsStatsHistogramBucketProto)
}
GraphicsStatsHistogramBucketProto::GraphicsStatsHistogramBucketProto(const GraphicsStatsHistogramBucketProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&render_millis_, &from.render_millis_,
    static_cast<size_t>(reinterpret_cast<char*>(&frame_count_) -
    reinterpret_cast<char*>(&render_millis_)) + sizeof(frame_count_));
  // @@protoc_insertion_point(copy_constructor:android.service.GraphicsStatsHistogramBucketProto)
}

void GraphicsStatsHistogramBucketProto::SharedCtor() {
  ::memset(&render_millis_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frame_count_) -
      reinterpret_cast<char*>(&render_millis_)) + sizeof(frame_count_));
}

GraphicsStatsHistogramBucketProto::~GraphicsStatsHistogramBucketProto() {
  // @@protoc_insertion_point(destructor:android.service.GraphicsStatsHistogramBucketProto)
  SharedDtor();
}

void GraphicsStatsHistogramBucketProto::SharedDtor() {
}

void GraphicsStatsHistogramBucketProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GraphicsStatsHistogramBucketProto& GraphicsStatsHistogramBucketProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GraphicsStatsHistogramBucketProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto.base);
  return *internal_default_instance();
}


void GraphicsStatsHistogramBucketProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.GraphicsStatsHistogramBucketProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&render_millis_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&frame_count_) -
        reinterpret_cast<char*>(&render_millis_)) + sizeof(frame_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GraphicsStatsHistogramBucketProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 render_millis = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_render_millis(&has_bits);
          render_millis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 frame_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_frame_count(&has_bits);
          frame_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GraphicsStatsHistogramBucketProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.GraphicsStatsHistogramBucketProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 render_millis = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_render_millis(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &render_millis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 frame_count = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_frame_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.GraphicsStatsHistogramBucketProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.GraphicsStatsHistogramBucketProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GraphicsStatsHistogramBucketProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.GraphicsStatsHistogramBucketProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 render_millis = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->render_millis(), output);
  }

  // optional int32 frame_count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->frame_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.GraphicsStatsHistogramBucketProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* GraphicsStatsHistogramBucketProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.GraphicsStatsHistogramBucketProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 render_millis = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->render_millis(), target);
  }

  // optional int32 frame_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->frame_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.GraphicsStatsHistogramBucketProto)
  return target;
}

size_t GraphicsStatsHistogramBucketProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.GraphicsStatsHistogramBucketProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 render_millis = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->render_millis());
    }

    // optional int32 frame_count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->frame_count());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphicsStatsHistogramBucketProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.GraphicsStatsHistogramBucketProto)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphicsStatsHistogramBucketProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GraphicsStatsHistogramBucketProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.GraphicsStatsHistogramBucketProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.GraphicsStatsHistogramBucketProto)
    MergeFrom(*source);
  }
}

void GraphicsStatsHistogramBucketProto::MergeFrom(const GraphicsStatsHistogramBucketProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.GraphicsStatsHistogramBucketProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      render_millis_ = from.render_millis_;
    }
    if (cached_has_bits & 0x00000002u) {
      frame_count_ = from.frame_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GraphicsStatsHistogramBucketProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.GraphicsStatsHistogramBucketProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphicsStatsHistogramBucketProto::CopyFrom(const GraphicsStatsHistogramBucketProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.GraphicsStatsHistogramBucketProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphicsStatsHistogramBucketProto::IsInitialized() const {
  return true;
}

void GraphicsStatsHistogramBucketProto::InternalSwap(GraphicsStatsHistogramBucketProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(render_millis_, other->render_millis_);
  swap(frame_count_, other->frame_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GraphicsStatsHistogramBucketProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::service::GraphicsStatsServiceDumpProto* Arena::CreateMaybeMessage< ::android::service::GraphicsStatsServiceDumpProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::GraphicsStatsServiceDumpProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::GraphicsStatsProto* Arena::CreateMaybeMessage< ::android::service::GraphicsStatsProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::GraphicsStatsProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::GraphicsStatsJankSummaryProto* Arena::CreateMaybeMessage< ::android::service::GraphicsStatsJankSummaryProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::GraphicsStatsJankSummaryProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::GraphicsStatsHistogramBucketProto* Arena::CreateMaybeMessage< ::android::service::GraphicsStatsHistogramBucketProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::GraphicsStatsHistogramBucketProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
