// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/usagestatsservice_v2.proto

#include "frameworks/base/core/proto/android/server/usagestatsservice_v2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ConfigurationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EventObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IntervalStatsObfuscatedProto_Configuration_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IntervalStatsObfuscatedProto_CountAndTime_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IntervalStatsObfuscatedProto_PackageUsage_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObfuscatedPackagesProto_PackagesMap_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PendingEventProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UsageStatsObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UsageStatsObfuscatedProto_ChooserAction_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsageStatsObfuscatedProto_ChooserAction_CategoryCount_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto;
namespace com {
namespace android {
namespace server {
namespace usage {
class IntervalStatsObfuscatedProto_CountAndTimeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntervalStatsObfuscatedProto_CountAndTime> _instance;
} _IntervalStatsObfuscatedProto_CountAndTime_default_instance_;
class IntervalStatsObfuscatedProto_ConfigurationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntervalStatsObfuscatedProto_Configuration> _instance;
} _IntervalStatsObfuscatedProto_Configuration_default_instance_;
class IntervalStatsObfuscatedProto_PackageUsageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntervalStatsObfuscatedProto_PackageUsage> _instance;
} _IntervalStatsObfuscatedProto_PackageUsage_default_instance_;
class IntervalStatsObfuscatedProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntervalStatsObfuscatedProto> _instance;
} _IntervalStatsObfuscatedProto_default_instance_;
class UsageStatsObfuscatedProto_ChooserAction_CategoryCountDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsageStatsObfuscatedProto_ChooserAction_CategoryCount> _instance;
} _UsageStatsObfuscatedProto_ChooserAction_CategoryCount_default_instance_;
class UsageStatsObfuscatedProto_ChooserActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsageStatsObfuscatedProto_ChooserAction> _instance;
} _UsageStatsObfuscatedProto_ChooserAction_default_instance_;
class UsageStatsObfuscatedProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UsageStatsObfuscatedProto> _instance;
} _UsageStatsObfuscatedProto_default_instance_;
class EventObfuscatedProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EventObfuscatedProto> _instance;
} _EventObfuscatedProto_default_instance_;
class PendingEventProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PendingEventProto> _instance;
} _PendingEventProto_default_instance_;
class ObfuscatedPackagesProto_PackagesMapDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObfuscatedPackagesProto_PackagesMap> _instance;
} _ObfuscatedPackagesProto_PackagesMap_default_instance_;
class ObfuscatedPackagesProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObfuscatedPackagesProto> _instance;
} _ObfuscatedPackagesProto_default_instance_;
}  // namespace usage
}  // namespace server
}  // namespace android
}  // namespace com
static void InitDefaultsscc_info_EventObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::usage::_EventObfuscatedProto_default_instance_;
    new (ptr) ::com::android::server::usage::EventObfuscatedProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::usage::EventObfuscatedProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EventObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_EventObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto}, {
      &scc_info_ConfigurationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto.base,}};

static void InitDefaultsscc_info_IntervalStatsObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::usage::_IntervalStatsObfuscatedProto_default_instance_;
    new (ptr) ::com::android::server::usage::IntervalStatsObfuscatedProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::usage::IntervalStatsObfuscatedProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_IntervalStatsObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsscc_info_IntervalStatsObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto}, {
      &scc_info_IntervalStatsObfuscatedProto_CountAndTime_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
      &scc_info_UsageStatsObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
      &scc_info_IntervalStatsObfuscatedProto_Configuration_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
      &scc_info_EventObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
      &scc_info_PendingEventProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
      &scc_info_IntervalStatsObfuscatedProto_PackageUsage_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,}};

static void InitDefaultsscc_info_IntervalStatsObfuscatedProto_Configuration_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::usage::_IntervalStatsObfuscatedProto_Configuration_default_instance_;
    new (ptr) ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IntervalStatsObfuscatedProto_Configuration_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_IntervalStatsObfuscatedProto_Configuration_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto}, {
      &scc_info_ConfigurationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto.base,}};

static void InitDefaultsscc_info_IntervalStatsObfuscatedProto_CountAndTime_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::usage::_IntervalStatsObfuscatedProto_CountAndTime_default_instance_;
    new (ptr) ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IntervalStatsObfuscatedProto_CountAndTime_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_IntervalStatsObfuscatedProto_CountAndTime_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto}, {}};

static void InitDefaultsscc_info_IntervalStatsObfuscatedProto_PackageUsage_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::usage::_IntervalStatsObfuscatedProto_PackageUsage_default_instance_;
    new (ptr) ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IntervalStatsObfuscatedProto_PackageUsage_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_IntervalStatsObfuscatedProto_PackageUsage_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto}, {}};

static void InitDefaultsscc_info_ObfuscatedPackagesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::usage::_ObfuscatedPackagesProto_default_instance_;
    new (ptr) ::com::android::server::usage::ObfuscatedPackagesProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::usage::ObfuscatedPackagesProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObfuscatedPackagesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ObfuscatedPackagesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto}, {
      &scc_info_ObfuscatedPackagesProto_PackagesMap_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,}};

static void InitDefaultsscc_info_ObfuscatedPackagesProto_PackagesMap_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::usage::_ObfuscatedPackagesProto_PackagesMap_default_instance_;
    new (ptr) ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObfuscatedPackagesProto_PackagesMap_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ObfuscatedPackagesProto_PackagesMap_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto}, {}};

static void InitDefaultsscc_info_PendingEventProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::usage::_PendingEventProto_default_instance_;
    new (ptr) ::com::android::server::usage::PendingEventProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::usage::PendingEventProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PendingEventProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_PendingEventProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto}, {
      &scc_info_ConfigurationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto.base,}};

static void InitDefaultsscc_info_UsageStatsObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::usage::_UsageStatsObfuscatedProto_default_instance_;
    new (ptr) ::com::android::server::usage::UsageStatsObfuscatedProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::usage::UsageStatsObfuscatedProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UsageStatsObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_UsageStatsObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto}, {
      &scc_info_UsageStatsObfuscatedProto_ChooserAction_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,}};

static void InitDefaultsscc_info_UsageStatsObfuscatedProto_ChooserAction_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::usage::_UsageStatsObfuscatedProto_ChooserAction_default_instance_;
    new (ptr) ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UsageStatsObfuscatedProto_ChooserAction_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_UsageStatsObfuscatedProto_ChooserAction_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto}, {
      &scc_info_UsageStatsObfuscatedProto_ChooserAction_CategoryCount_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,}};

static void InitDefaultsscc_info_UsageStatsObfuscatedProto_ChooserAction_CategoryCount_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::usage::_UsageStatsObfuscatedProto_ChooserAction_CategoryCount_default_instance_;
    new (ptr) ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UsageStatsObfuscatedProto_ChooserAction_CategoryCount_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_UsageStatsObfuscatedProto_ChooserAction_CategoryCount_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto[11];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime, count_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime, time_ms_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration, config_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration, last_time_active_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration, total_time_active_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration, count_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration, active_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage, package_name_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage, time_ms_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto, end_time_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto, major_version_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto, minor_version_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto, interactive_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto, non_interactive_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto, keyguard_shown_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto, keyguard_hidden_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto, packages_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto, configurations_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto, event_log_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto, pending_events_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::IntervalStatsObfuscatedProto, package_usage_),
  4,
  5,
  6,
  0,
  1,
  2,
  3,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount, category_token_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount, count_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction, action_token_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction, counts_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto, package_token_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto, last_time_active_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto, total_time_active_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto, last_event_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto, app_launch_count_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto, chooser_actions_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto, last_time_service_used_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto, total_time_service_used_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto, last_time_visible_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto, total_time_visible_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::UsageStatsObfuscatedProto, last_time_component_used_ms_),
  1,
  0,
  3,
  2,
  9,
  ~0u,
  4,
  5,
  6,
  7,
  8,
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, package_token_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, class_token_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, time_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, flags_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, type_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, config_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, shortcut_id_token_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, standby_bucket_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, notification_channel_id_token_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, instance_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, task_root_package_token_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, task_root_class_token_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::EventObfuscatedProto, locus_id_token_),
  1,
  2,
  3,
  4,
  5,
  0,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, package_name_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, class_name_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, time_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, flags_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, type_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, config_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, shortcut_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, standby_bucket_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, notification_channel_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, instance_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, task_root_package_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, task_root_class_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::PendingEventProto, locus_id_),
  0,
  1,
  8,
  9,
  10,
  7,
  2,
  11,
  3,
  12,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap, package_token_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap, strings_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::ObfuscatedPackagesProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::ObfuscatedPackagesProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::ObfuscatedPackagesProto, counter_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::usage::ObfuscatedPackagesProto, packages_map_),
  0,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime)},
  { 9, 19, sizeof(::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration)},
  { 24, 31, sizeof(::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage)},
  { 33, 50, sizeof(::com::android::server::usage::IntervalStatsObfuscatedProto)},
  { 62, 69, sizeof(::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount)},
  { 71, 78, sizeof(::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction)},
  { 80, 96, sizeof(::com::android::server::usage::UsageStatsObfuscatedProto)},
  { 107, 125, sizeof(::com::android::server::usage::EventObfuscatedProto)},
  { 138, 156, sizeof(::com::android::server::usage::PendingEventProto)},
  { 169, 176, sizeof(::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap)},
  { 178, 185, sizeof(::com::android::server::usage::ObfuscatedPackagesProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::usage::_IntervalStatsObfuscatedProto_CountAndTime_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::usage::_IntervalStatsObfuscatedProto_Configuration_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::usage::_IntervalStatsObfuscatedProto_PackageUsage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::usage::_IntervalStatsObfuscatedProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::usage::_UsageStatsObfuscatedProto_ChooserAction_CategoryCount_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::usage::_UsageStatsObfuscatedProto_ChooserAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::usage::_UsageStatsObfuscatedProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::usage::_EventObfuscatedProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::usage::_PendingEventProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::usage::_ObfuscatedPackagesProto_PackagesMap_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::usage::_ObfuscatedPackagesProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nDframeworks/base/core/proto/android/ser"
  "ver/usagestatsservice_v2.proto\022\030com.andr"
  "oid.server.usage\032>frameworks/base/core/p"
  "roto/android/content/configuration.proto"
  "\0320frameworks/base/core/proto/android/pri"
  "vacy.proto\"\345\010\n\034IntervalStatsObfuscatedPr"
  "oto\022\023\n\013end_time_ms\030\001 \001(\003\022\025\n\rmajor_versio"
  "n\030\002 \001(\005\022\025\n\rminor_version\030\003 \001(\005\022X\n\013intera"
  "ctive\030\n \001(\0132C.com.android.server.usage.I"
  "ntervalStatsObfuscatedProto.CountAndTime"
  "\022\\\n\017non_interactive\030\013 \001(\0132C.com.android."
  "server.usage.IntervalStatsObfuscatedProt"
  "o.CountAndTime\022[\n\016keyguard_shown\030\014 \001(\0132C"
  ".com.android.server.usage.IntervalStatsO"
  "bfuscatedProto.CountAndTime\022\\\n\017keyguard_"
  "hidden\030\r \001(\0132C.com.android.server.usage."
  "IntervalStatsObfuscatedProto.CountAndTim"
  "e\022E\n\010packages\030\024 \003(\01323.com.android.server"
  ".usage.UsageStatsObfuscatedProto\022\\\n\016conf"
  "igurations\030\025 \003(\0132D.com.android.server.us"
  "age.IntervalStatsObfuscatedProto.Configu"
  "ration\022A\n\tevent_log\030\026 \003(\0132..com.android."
  "server.usage.EventObfuscatedProto\022C\n\016pen"
  "ding_events\030\027 \003(\0132+.com.android.server.u"
  "sage.PendingEventProto\022Z\n\rpackage_usage\030"
  "\030 \003(\0132C.com.android.server.usage.Interva"
  "lStatsObfuscatedProto.PackageUsage\032.\n\014Co"
  "untAndTime\022\r\n\005count\030\001 \001(\005\022\017\n\007time_ms\030\002 \001"
  "(\003\032\236\001\n\rConfiguration\0223\n\006config\030\001 \001(\0132#.a"
  "ndroid.content.ConfigurationProto\022\033\n\023las"
  "t_time_active_ms\030\002 \001(\003\022\034\n\024total_time_act"
  "ive_ms\030\003 \001(\003\022\r\n\005count\030\004 \001(\005\022\016\n\006active\030\005 "
  "\001(\010\0325\n\014PackageUsage\022\024\n\014package_name\030\001 \001("
  "\t\022\017\n\007time_ms\030\002 \001(\003\"\341\004\n\031UsageStatsObfusca"
  "tedProto\022\025\n\rpackage_token\030\001 \001(\005\022\033\n\023last_"
  "time_active_ms\030\003 \001(\003\022\034\n\024total_time_activ"
  "e_ms\030\004 \001(\003\022\022\n\nlast_event\030\005 \001(\005\022\030\n\020app_la"
  "unch_count\030\006 \001(\005\022Z\n\017chooser_actions\030\007 \003("
  "\0132A.com.android.server.usage.UsageStatsO"
  "bfuscatedProto.ChooserAction\022!\n\031last_tim"
  "e_service_used_ms\030\010 \001(\003\022\"\n\032total_time_se"
  "rvice_used_ms\030\t \001(\003\022\034\n\024last_time_visible"
  "_ms\030\n \001(\003\022\035\n\025total_time_visible_ms\030\013 \001(\003"
  "\022#\n\033last_time_component_used_ms\030\014 \001(\003\032\276\001"
  "\n\rChooserAction\022\024\n\014action_token\030\001 \001(\005\022_\n"
  "\006counts\030\002 \003(\0132O.com.android.server.usage"
  ".UsageStatsObfuscatedProto.ChooserAction"
  ".CategoryCount\0326\n\rCategoryCount\022\026\n\016categ"
  "ory_token\030\001 \001(\005\022\r\n\005count\030\002 \001(\005\"\354\002\n\024Event"
  "ObfuscatedProto\022\025\n\rpackage_token\030\001 \001(\005\022\023"
  "\n\013class_token\030\002 \001(\005\022\017\n\007time_ms\030\003 \001(\003\022\r\n\005"
  "flags\030\004 \001(\005\022\014\n\004type\030\005 \001(\005\0223\n\006config\030\006 \001("
  "\0132#.android.content.ConfigurationProto\022\031"
  "\n\021shortcut_id_token\030\007 \001(\005\022\026\n\016standby_buc"
  "ket\030\010 \001(\005\022%\n\035notification_channel_id_tok"
  "en\030\t \001(\005\022\023\n\013instance_id\030\n \001(\005\022\037\n\027task_ro"
  "ot_package_token\030\013 \001(\005\022\035\n\025task_root_clas"
  "s_token\030\014 \001(\005\022\026\n\016locus_id_token\030\r \001(\005\"\347\002"
  "\n\021PendingEventProto\022\024\n\014package_name\030\001 \001("
  "\t\022\022\n\nclass_name\030\002 \001(\t\022\017\n\007time_ms\030\003 \001(\003\022\r"
  "\n\005flags\030\004 \001(\005\022\014\n\004type\030\005 \001(\005\0223\n\006config\030\006 "
  "\001(\0132#.android.content.ConfigurationProto"
  "\022\035\n\013shortcut_id\030\007 \001(\tB\010\232\237\325\207\003\002\010d\022\026\n\016stand"
  "by_bucket\030\010 \001(\005\022)\n\027notification_channel_"
  "id\030\t \001(\tB\010\232\237\325\207\003\002\010d\022\023\n\013instance_id\030\n \001(\005\022"
  "\031\n\021task_root_package\030\013 \001(\t\022\027\n\017task_root_"
  "class\030\014 \001(\t\022\032\n\010locus_id\030\r \001(\tB\010\232\237\325\207\003\002\010d\""
  "\300\001\n\027ObfuscatedPackagesProto\022\017\n\007counter\030\001"
  " \001(\005\022S\n\014packages_map\030\002 \003(\0132=.com.android"
  ".server.usage.ObfuscatedPackagesProto.Pa"
  "ckagesMap\032\?\n\013PackagesMap\022\025\n\rpackage_toke"
  "n\030\001 \001(\005\022\031\n\007strings\030\002 \003(\tB\010\232\237\325\207\003\002\010dB\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto_deps[2] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto_sccs[11] = {
  &scc_info_EventObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
  &scc_info_IntervalStatsObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
  &scc_info_IntervalStatsObfuscatedProto_Configuration_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
  &scc_info_IntervalStatsObfuscatedProto_CountAndTime_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
  &scc_info_IntervalStatsObfuscatedProto_PackageUsage_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
  &scc_info_ObfuscatedPackagesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
  &scc_info_ObfuscatedPackagesProto_PackagesMap_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
  &scc_info_PendingEventProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
  &scc_info_UsageStatsObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
  &scc_info_UsageStatsObfuscatedProto_ChooserAction_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
  &scc_info_UsageStatsObfuscatedProto_ChooserAction_CategoryCount_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto, "frameworks/base/core/proto/android/server/usagestatsservice_v2.proto", 2878,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto_deps, 11, 2,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto, 11, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto), true);
namespace com {
namespace android {
namespace server {
namespace usage {

// ===================================================================

void IntervalStatsObfuscatedProto_CountAndTime::InitAsDefaultInstance() {
}
class IntervalStatsObfuscatedProto_CountAndTime::_Internal {
 public:
  using HasBits = decltype(std::declval<IntervalStatsObfuscatedProto_CountAndTime>()._has_bits_);
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_time_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

IntervalStatsObfuscatedProto_CountAndTime::IntervalStatsObfuscatedProto_CountAndTime()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
}
IntervalStatsObfuscatedProto_CountAndTime::IntervalStatsObfuscatedProto_CountAndTime(const IntervalStatsObfuscatedProto_CountAndTime& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_ms_, &from.time_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&time_ms_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
}

void IntervalStatsObfuscatedProto_CountAndTime::SharedCtor() {
  ::memset(&time_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&time_ms_)) + sizeof(count_));
}

IntervalStatsObfuscatedProto_CountAndTime::~IntervalStatsObfuscatedProto_CountAndTime() {
  // @@protoc_insertion_point(destructor:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
  SharedDtor();
}

void IntervalStatsObfuscatedProto_CountAndTime::SharedDtor() {
}

void IntervalStatsObfuscatedProto_CountAndTime::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntervalStatsObfuscatedProto_CountAndTime& IntervalStatsObfuscatedProto_CountAndTime::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntervalStatsObfuscatedProto_CountAndTime_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  return *internal_default_instance();
}


void IntervalStatsObfuscatedProto_CountAndTime::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&time_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&time_ms_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IntervalStatsObfuscatedProto_CountAndTime::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_count(&has_bits);
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 time_ms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_time_ms(&has_bits);
          time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IntervalStatsObfuscatedProto_CountAndTime::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 count = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 time_ms = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_time_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IntervalStatsObfuscatedProto_CountAndTime::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 count = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // optional int64 time_ms = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->time_ms(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
}

::PROTOBUF_NAMESPACE_ID::uint8* IntervalStatsObfuscatedProto_CountAndTime::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 count = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // optional int64 time_ms = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->time_ms(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
  return target;
}

size_t IntervalStatsObfuscatedProto_CountAndTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 time_ms = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->time_ms());
    }

    // optional int32 count = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntervalStatsObfuscatedProto_CountAndTime::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
  GOOGLE_DCHECK_NE(&from, this);
  const IntervalStatsObfuscatedProto_CountAndTime* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntervalStatsObfuscatedProto_CountAndTime>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
    MergeFrom(*source);
  }
}

void IntervalStatsObfuscatedProto_CountAndTime::MergeFrom(const IntervalStatsObfuscatedProto_CountAndTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      time_ms_ = from.time_ms_;
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IntervalStatsObfuscatedProto_CountAndTime::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntervalStatsObfuscatedProto_CountAndTime::CopyFrom(const IntervalStatsObfuscatedProto_CountAndTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntervalStatsObfuscatedProto_CountAndTime::IsInitialized() const {
  return true;
}

void IntervalStatsObfuscatedProto_CountAndTime::InternalSwap(IntervalStatsObfuscatedProto_CountAndTime* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(time_ms_, other->time_ms_);
  swap(count_, other->count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntervalStatsObfuscatedProto_CountAndTime::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IntervalStatsObfuscatedProto_Configuration::InitAsDefaultInstance() {
  ::com::android::server::usage::_IntervalStatsObfuscatedProto_Configuration_default_instance_._instance.get_mutable()->config_ = const_cast< ::android::content::ConfigurationProto*>(
      ::android::content::ConfigurationProto::internal_default_instance());
}
class IntervalStatsObfuscatedProto_Configuration::_Internal {
 public:
  using HasBits = decltype(std::declval<IntervalStatsObfuscatedProto_Configuration>()._has_bits_);
  static const ::android::content::ConfigurationProto& config(const IntervalStatsObfuscatedProto_Configuration* msg);
  static void set_has_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_last_time_active_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_total_time_active_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_active(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::android::content::ConfigurationProto&
IntervalStatsObfuscatedProto_Configuration::_Internal::config(const IntervalStatsObfuscatedProto_Configuration* msg) {
  return *msg->config_;
}
void IntervalStatsObfuscatedProto_Configuration::clear_config() {
  if (config_ != nullptr) config_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
IntervalStatsObfuscatedProto_Configuration::IntervalStatsObfuscatedProto_Configuration()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
}
IntervalStatsObfuscatedProto_Configuration::IntervalStatsObfuscatedProto_Configuration(const IntervalStatsObfuscatedProto_Configuration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::android::content::ConfigurationProto(*from.config_);
  } else {
    config_ = nullptr;
  }
  ::memcpy(&last_time_active_ms_, &from.last_time_active_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&active_) -
    reinterpret_cast<char*>(&last_time_active_ms_)) + sizeof(active_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
}

void IntervalStatsObfuscatedProto_Configuration::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IntervalStatsObfuscatedProto_Configuration_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&active_) -
      reinterpret_cast<char*>(&config_)) + sizeof(active_));
}

IntervalStatsObfuscatedProto_Configuration::~IntervalStatsObfuscatedProto_Configuration() {
  // @@protoc_insertion_point(destructor:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
  SharedDtor();
}

void IntervalStatsObfuscatedProto_Configuration::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
}

void IntervalStatsObfuscatedProto_Configuration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntervalStatsObfuscatedProto_Configuration& IntervalStatsObfuscatedProto_Configuration::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntervalStatsObfuscatedProto_Configuration_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  return *internal_default_instance();
}


void IntervalStatsObfuscatedProto_Configuration::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(config_ != nullptr);
    config_->Clear();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&last_time_active_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&active_) -
        reinterpret_cast<char*>(&last_time_active_ms_)) + sizeof(active_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IntervalStatsObfuscatedProto_Configuration::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.content.ConfigurationProto config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 last_time_active_ms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_last_time_active_ms(&has_bits);
          last_time_active_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 total_time_active_ms = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_total_time_active_ms(&has_bits);
          total_time_active_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_count(&has_bits);
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool active = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_active(&has_bits);
          active_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IntervalStatsObfuscatedProto_Configuration::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.content.ConfigurationProto config = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_time_active_ms = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_last_time_active_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_time_active_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 total_time_active_ms = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_total_time_active_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_time_active_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool active = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_active(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IntervalStatsObfuscatedProto_Configuration::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.content.ConfigurationProto config = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::config(this), output);
  }

  // optional int64 last_time_active_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->last_time_active_ms(), output);
  }

  // optional int64 total_time_active_ms = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->total_time_active_ms(), output);
  }

  // optional int32 count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  // optional bool active = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(5, this->active(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
}

::PROTOBUF_NAMESPACE_ID::uint8* IntervalStatsObfuscatedProto_Configuration::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.content.ConfigurationProto config = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::config(this), target);
  }

  // optional int64 last_time_active_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->last_time_active_ms(), target);
  }

  // optional int64 total_time_active_ms = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->total_time_active_ms(), target);
  }

  // optional int32 count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->count(), target);
  }

  // optional bool active = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->active(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
  return target;
}

size_t IntervalStatsObfuscatedProto_Configuration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .android.content.ConfigurationProto config = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *config_);
    }

    // optional int64 last_time_active_ms = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->last_time_active_ms());
    }

    // optional int64 total_time_active_ms = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->total_time_active_ms());
    }

    // optional int32 count = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional bool active = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntervalStatsObfuscatedProto_Configuration::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
  GOOGLE_DCHECK_NE(&from, this);
  const IntervalStatsObfuscatedProto_Configuration* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntervalStatsObfuscatedProto_Configuration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
    MergeFrom(*source);
  }
}

void IntervalStatsObfuscatedProto_Configuration::MergeFrom(const IntervalStatsObfuscatedProto_Configuration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_config()->::android::content::ConfigurationProto::MergeFrom(from.config());
    }
    if (cached_has_bits & 0x00000002u) {
      last_time_active_ms_ = from.last_time_active_ms_;
    }
    if (cached_has_bits & 0x00000004u) {
      total_time_active_ms_ = from.total_time_active_ms_;
    }
    if (cached_has_bits & 0x00000008u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000010u) {
      active_ = from.active_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IntervalStatsObfuscatedProto_Configuration::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntervalStatsObfuscatedProto_Configuration::CopyFrom(const IntervalStatsObfuscatedProto_Configuration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.usage.IntervalStatsObfuscatedProto.Configuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntervalStatsObfuscatedProto_Configuration::IsInitialized() const {
  return true;
}

void IntervalStatsObfuscatedProto_Configuration::InternalSwap(IntervalStatsObfuscatedProto_Configuration* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(config_, other->config_);
  swap(last_time_active_ms_, other->last_time_active_ms_);
  swap(total_time_active_ms_, other->total_time_active_ms_);
  swap(count_, other->count_);
  swap(active_, other->active_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntervalStatsObfuscatedProto_Configuration::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IntervalStatsObfuscatedProto_PackageUsage::InitAsDefaultInstance() {
}
class IntervalStatsObfuscatedProto_PackageUsage::_Internal {
 public:
  using HasBits = decltype(std::declval<IntervalStatsObfuscatedProto_PackageUsage>()._has_bits_);
  static void set_has_package_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_time_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

IntervalStatsObfuscatedProto_PackageUsage::IntervalStatsObfuscatedProto_PackageUsage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
}
IntervalStatsObfuscatedProto_PackageUsage::IntervalStatsObfuscatedProto_PackageUsage(const IntervalStatsObfuscatedProto_PackageUsage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_package_name()) {
    package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  time_ms_ = from.time_ms_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
}

void IntervalStatsObfuscatedProto_PackageUsage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IntervalStatsObfuscatedProto_PackageUsage_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_ms_ = PROTOBUF_LONGLONG(0);
}

IntervalStatsObfuscatedProto_PackageUsage::~IntervalStatsObfuscatedProto_PackageUsage() {
  // @@protoc_insertion_point(destructor:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
  SharedDtor();
}

void IntervalStatsObfuscatedProto_PackageUsage::SharedDtor() {
  package_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IntervalStatsObfuscatedProto_PackageUsage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntervalStatsObfuscatedProto_PackageUsage& IntervalStatsObfuscatedProto_PackageUsage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntervalStatsObfuscatedProto_PackageUsage_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  return *internal_default_instance();
}


void IntervalStatsObfuscatedProto_PackageUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    package_name_.ClearNonDefaultToEmptyNoArena();
  }
  time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IntervalStatsObfuscatedProto_PackageUsage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string package_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_package_name(), ptr, ctx, "com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage.package_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 time_ms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_time_ms(&has_bits);
          time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IntervalStatsObfuscatedProto_PackageUsage::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string package_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package_name().data(), static_cast<int>(this->package_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage.package_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 time_ms = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_time_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IntervalStatsObfuscatedProto_PackageUsage::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string package_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage.package_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->package_name(), output);
  }

  // optional int64 time_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->time_ms(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
}

::PROTOBUF_NAMESPACE_ID::uint8* IntervalStatsObfuscatedProto_PackageUsage::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string package_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage.package_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->package_name(), target);
  }

  // optional int64 time_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->time_ms(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
  return target;
}

size_t IntervalStatsObfuscatedProto_PackageUsage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string package_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // optional int64 time_ms = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->time_ms());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntervalStatsObfuscatedProto_PackageUsage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
  GOOGLE_DCHECK_NE(&from, this);
  const IntervalStatsObfuscatedProto_PackageUsage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntervalStatsObfuscatedProto_PackageUsage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
    MergeFrom(*source);
  }
}

void IntervalStatsObfuscatedProto_PackageUsage::MergeFrom(const IntervalStatsObfuscatedProto_PackageUsage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      time_ms_ = from.time_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IntervalStatsObfuscatedProto_PackageUsage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntervalStatsObfuscatedProto_PackageUsage::CopyFrom(const IntervalStatsObfuscatedProto_PackageUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntervalStatsObfuscatedProto_PackageUsage::IsInitialized() const {
  return true;
}

void IntervalStatsObfuscatedProto_PackageUsage::InternalSwap(IntervalStatsObfuscatedProto_PackageUsage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  package_name_.Swap(&other->package_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_ms_, other->time_ms_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntervalStatsObfuscatedProto_PackageUsage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IntervalStatsObfuscatedProto::InitAsDefaultInstance() {
  ::com::android::server::usage::_IntervalStatsObfuscatedProto_default_instance_._instance.get_mutable()->interactive_ = const_cast< ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime*>(
      ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime::internal_default_instance());
  ::com::android::server::usage::_IntervalStatsObfuscatedProto_default_instance_._instance.get_mutable()->non_interactive_ = const_cast< ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime*>(
      ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime::internal_default_instance());
  ::com::android::server::usage::_IntervalStatsObfuscatedProto_default_instance_._instance.get_mutable()->keyguard_shown_ = const_cast< ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime*>(
      ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime::internal_default_instance());
  ::com::android::server::usage::_IntervalStatsObfuscatedProto_default_instance_._instance.get_mutable()->keyguard_hidden_ = const_cast< ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime*>(
      ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime::internal_default_instance());
}
class IntervalStatsObfuscatedProto::_Internal {
 public:
  using HasBits = decltype(std::declval<IntervalStatsObfuscatedProto>()._has_bits_);
  static void set_has_end_time_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_major_version(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_minor_version(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime& interactive(const IntervalStatsObfuscatedProto* msg);
  static void set_has_interactive(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime& non_interactive(const IntervalStatsObfuscatedProto* msg);
  static void set_has_non_interactive(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime& keyguard_shown(const IntervalStatsObfuscatedProto* msg);
  static void set_has_keyguard_shown(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime& keyguard_hidden(const IntervalStatsObfuscatedProto* msg);
  static void set_has_keyguard_hidden(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime&
IntervalStatsObfuscatedProto::_Internal::interactive(const IntervalStatsObfuscatedProto* msg) {
  return *msg->interactive_;
}
const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime&
IntervalStatsObfuscatedProto::_Internal::non_interactive(const IntervalStatsObfuscatedProto* msg) {
  return *msg->non_interactive_;
}
const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime&
IntervalStatsObfuscatedProto::_Internal::keyguard_shown(const IntervalStatsObfuscatedProto* msg) {
  return *msg->keyguard_shown_;
}
const ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime&
IntervalStatsObfuscatedProto::_Internal::keyguard_hidden(const IntervalStatsObfuscatedProto* msg) {
  return *msg->keyguard_hidden_;
}
IntervalStatsObfuscatedProto::IntervalStatsObfuscatedProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.usage.IntervalStatsObfuscatedProto)
}
IntervalStatsObfuscatedProto::IntervalStatsObfuscatedProto(const IntervalStatsObfuscatedProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      packages_(from.packages_),
      configurations_(from.configurations_),
      event_log_(from.event_log_),
      pending_events_(from.pending_events_),
      package_usage_(from.package_usage_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interactive()) {
    interactive_ = new ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime(*from.interactive_);
  } else {
    interactive_ = nullptr;
  }
  if (from.has_non_interactive()) {
    non_interactive_ = new ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime(*from.non_interactive_);
  } else {
    non_interactive_ = nullptr;
  }
  if (from.has_keyguard_shown()) {
    keyguard_shown_ = new ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime(*from.keyguard_shown_);
  } else {
    keyguard_shown_ = nullptr;
  }
  if (from.has_keyguard_hidden()) {
    keyguard_hidden_ = new ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime(*from.keyguard_hidden_);
  } else {
    keyguard_hidden_ = nullptr;
  }
  ::memcpy(&end_time_ms_, &from.end_time_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&minor_version_) -
    reinterpret_cast<char*>(&end_time_ms_)) + sizeof(minor_version_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.usage.IntervalStatsObfuscatedProto)
}

void IntervalStatsObfuscatedProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IntervalStatsObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  ::memset(&interactive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minor_version_) -
      reinterpret_cast<char*>(&interactive_)) + sizeof(minor_version_));
}

IntervalStatsObfuscatedProto::~IntervalStatsObfuscatedProto() {
  // @@protoc_insertion_point(destructor:com.android.server.usage.IntervalStatsObfuscatedProto)
  SharedDtor();
}

void IntervalStatsObfuscatedProto::SharedDtor() {
  if (this != internal_default_instance()) delete interactive_;
  if (this != internal_default_instance()) delete non_interactive_;
  if (this != internal_default_instance()) delete keyguard_shown_;
  if (this != internal_default_instance()) delete keyguard_hidden_;
}

void IntervalStatsObfuscatedProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntervalStatsObfuscatedProto& IntervalStatsObfuscatedProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntervalStatsObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  return *internal_default_instance();
}


void IntervalStatsObfuscatedProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.usage.IntervalStatsObfuscatedProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packages_.Clear();
  configurations_.Clear();
  event_log_.Clear();
  pending_events_.Clear();
  package_usage_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(interactive_ != nullptr);
      interactive_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(non_interactive_ != nullptr);
      non_interactive_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(keyguard_shown_ != nullptr);
      keyguard_shown_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(keyguard_hidden_ != nullptr);
      keyguard_hidden_->Clear();
    }
  }
  if (cached_has_bits & 0x00000070u) {
    ::memset(&end_time_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&minor_version_) -
        reinterpret_cast<char*>(&end_time_ms_)) + sizeof(minor_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IntervalStatsObfuscatedProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int64 end_time_ms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_end_time_ms(&has_bits);
          end_time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 major_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_major_version(&has_bits);
          major_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 minor_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_minor_version(&has_bits);
          minor_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime interactive = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_interactive(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime non_interactive = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(mutable_non_interactive(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime keyguard_shown = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(mutable_keyguard_shown(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime keyguard_hidden = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(mutable_keyguard_hidden(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.usage.UsageStatsObfuscatedProto packages = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_packages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 418);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.usage.IntervalStatsObfuscatedProto.Configuration configurations = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_configurations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 426);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.usage.EventObfuscatedProto event_log = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_event_log(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 434);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.usage.PendingEventProto pending_events = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_pending_events(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 442);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage package_usage = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_package_usage(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 450);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IntervalStatsObfuscatedProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.usage.IntervalStatsObfuscatedProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 end_time_ms = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_end_time_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 major_version = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_major_version(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &major_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 minor_version = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_minor_version(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &minor_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime interactive = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_interactive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime non_interactive = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_non_interactive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime keyguard_shown = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_keyguard_shown()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime keyguard_hidden = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_keyguard_hidden()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.usage.UsageStatsObfuscatedProto packages = 20;
      case 20: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (162 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_packages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.usage.IntervalStatsObfuscatedProto.Configuration configurations = 21;
      case 21: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (170 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_configurations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.usage.EventObfuscatedProto event_log = 22;
      case 22: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (178 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_event_log()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.usage.PendingEventProto pending_events = 23;
      case 23: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (186 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_pending_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage package_usage = 24;
      case 24: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (194 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_package_usage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.usage.IntervalStatsObfuscatedProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.usage.IntervalStatsObfuscatedProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IntervalStatsObfuscatedProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.usage.IntervalStatsObfuscatedProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 end_time_ms = 1;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(1, this->end_time_ms(), output);
  }

  // optional int32 major_version = 2;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->major_version(), output);
  }

  // optional int32 minor_version = 3;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->minor_version(), output);
  }

  // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime interactive = 10;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, _Internal::interactive(this), output);
  }

  // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime non_interactive = 11;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, _Internal::non_interactive(this), output);
  }

  // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime keyguard_shown = 12;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, _Internal::keyguard_shown(this), output);
  }

  // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime keyguard_hidden = 13;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, _Internal::keyguard_hidden(this), output);
  }

  // repeated .com.android.server.usage.UsageStatsObfuscatedProto packages = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      20,
      this->packages(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.usage.IntervalStatsObfuscatedProto.Configuration configurations = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->configurations_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      21,
      this->configurations(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.usage.EventObfuscatedProto event_log = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_log_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      22,
      this->event_log(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.usage.PendingEventProto pending_events = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pending_events_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      23,
      this->pending_events(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage package_usage = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->package_usage_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->package_usage(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.usage.IntervalStatsObfuscatedProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* IntervalStatsObfuscatedProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.usage.IntervalStatsObfuscatedProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 end_time_ms = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->end_time_ms(), target);
  }

  // optional int32 major_version = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->major_version(), target);
  }

  // optional int32 minor_version = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->minor_version(), target);
  }

  // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime interactive = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, _Internal::interactive(this), target);
  }

  // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime non_interactive = 11;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, _Internal::non_interactive(this), target);
  }

  // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime keyguard_shown = 12;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, _Internal::keyguard_shown(this), target);
  }

  // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime keyguard_hidden = 13;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, _Internal::keyguard_hidden(this), target);
  }

  // repeated .com.android.server.usage.UsageStatsObfuscatedProto packages = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->packages(static_cast<int>(i)), target);
  }

  // repeated .com.android.server.usage.IntervalStatsObfuscatedProto.Configuration configurations = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->configurations_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->configurations(static_cast<int>(i)), target);
  }

  // repeated .com.android.server.usage.EventObfuscatedProto event_log = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_log_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->event_log(static_cast<int>(i)), target);
  }

  // repeated .com.android.server.usage.PendingEventProto pending_events = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pending_events_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->pending_events(static_cast<int>(i)), target);
  }

  // repeated .com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage package_usage = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->package_usage_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->package_usage(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.usage.IntervalStatsObfuscatedProto)
  return target;
}

size_t IntervalStatsObfuscatedProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.usage.IntervalStatsObfuscatedProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.usage.UsageStatsObfuscatedProto packages = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->packages_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->packages(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.usage.IntervalStatsObfuscatedProto.Configuration configurations = 21;
  {
    unsigned int count = static_cast<unsigned int>(this->configurations_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->configurations(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.usage.EventObfuscatedProto event_log = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->event_log_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->event_log(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.usage.PendingEventProto pending_events = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->pending_events_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->pending_events(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.usage.IntervalStatsObfuscatedProto.PackageUsage package_usage = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->package_usage_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->package_usage(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime interactive = 10;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *interactive_);
    }

    // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime non_interactive = 11;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *non_interactive_);
    }

    // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime keyguard_shown = 12;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *keyguard_shown_);
    }

    // optional .com.android.server.usage.IntervalStatsObfuscatedProto.CountAndTime keyguard_hidden = 13;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *keyguard_hidden_);
    }

    // optional int64 end_time_ms = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->end_time_ms());
    }

    // optional int32 major_version = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->major_version());
    }

    // optional int32 minor_version = 3;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->minor_version());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntervalStatsObfuscatedProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.usage.IntervalStatsObfuscatedProto)
  GOOGLE_DCHECK_NE(&from, this);
  const IntervalStatsObfuscatedProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntervalStatsObfuscatedProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.usage.IntervalStatsObfuscatedProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.usage.IntervalStatsObfuscatedProto)
    MergeFrom(*source);
  }
}

void IntervalStatsObfuscatedProto::MergeFrom(const IntervalStatsObfuscatedProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.usage.IntervalStatsObfuscatedProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  packages_.MergeFrom(from.packages_);
  configurations_.MergeFrom(from.configurations_);
  event_log_.MergeFrom(from.event_log_);
  pending_events_.MergeFrom(from.pending_events_);
  package_usage_.MergeFrom(from.package_usage_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_interactive()->::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime::MergeFrom(from.interactive());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_non_interactive()->::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime::MergeFrom(from.non_interactive());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_keyguard_shown()->::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime::MergeFrom(from.keyguard_shown());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_keyguard_hidden()->::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime::MergeFrom(from.keyguard_hidden());
    }
    if (cached_has_bits & 0x00000010u) {
      end_time_ms_ = from.end_time_ms_;
    }
    if (cached_has_bits & 0x00000020u) {
      major_version_ = from.major_version_;
    }
    if (cached_has_bits & 0x00000040u) {
      minor_version_ = from.minor_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IntervalStatsObfuscatedProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.usage.IntervalStatsObfuscatedProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntervalStatsObfuscatedProto::CopyFrom(const IntervalStatsObfuscatedProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.usage.IntervalStatsObfuscatedProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntervalStatsObfuscatedProto::IsInitialized() const {
  return true;
}

void IntervalStatsObfuscatedProto::InternalSwap(IntervalStatsObfuscatedProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&packages_)->InternalSwap(CastToBase(&other->packages_));
  CastToBase(&configurations_)->InternalSwap(CastToBase(&other->configurations_));
  CastToBase(&event_log_)->InternalSwap(CastToBase(&other->event_log_));
  CastToBase(&pending_events_)->InternalSwap(CastToBase(&other->pending_events_));
  CastToBase(&package_usage_)->InternalSwap(CastToBase(&other->package_usage_));
  swap(interactive_, other->interactive_);
  swap(non_interactive_, other->non_interactive_);
  swap(keyguard_shown_, other->keyguard_shown_);
  swap(keyguard_hidden_, other->keyguard_hidden_);
  swap(end_time_ms_, other->end_time_ms_);
  swap(major_version_, other->major_version_);
  swap(minor_version_, other->minor_version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntervalStatsObfuscatedProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::InitAsDefaultInstance() {
}
class UsageStatsObfuscatedProto_ChooserAction_CategoryCount::_Internal {
 public:
  using HasBits = decltype(std::declval<UsageStatsObfuscatedProto_ChooserAction_CategoryCount>()._has_bits_);
  static void set_has_category_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

UsageStatsObfuscatedProto_ChooserAction_CategoryCount::UsageStatsObfuscatedProto_ChooserAction_CategoryCount()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
}
UsageStatsObfuscatedProto_ChooserAction_CategoryCount::UsageStatsObfuscatedProto_ChooserAction_CategoryCount(const UsageStatsObfuscatedProto_ChooserAction_CategoryCount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&category_token_, &from.category_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&category_token_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
}

void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::SharedCtor() {
  ::memset(&category_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&category_token_)) + sizeof(count_));
}

UsageStatsObfuscatedProto_ChooserAction_CategoryCount::~UsageStatsObfuscatedProto_ChooserAction_CategoryCount() {
  // @@protoc_insertion_point(destructor:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
  SharedDtor();
}

void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::SharedDtor() {
}

void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsageStatsObfuscatedProto_ChooserAction_CategoryCount& UsageStatsObfuscatedProto_ChooserAction_CategoryCount::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsageStatsObfuscatedProto_ChooserAction_CategoryCount_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  return *internal_default_instance();
}


void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&category_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&category_token_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UsageStatsObfuscatedProto_ChooserAction_CategoryCount::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 category_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_category_token(&has_bits);
          category_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_count(&has_bits);
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UsageStatsObfuscatedProto_ChooserAction_CategoryCount::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 category_token = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_category_token(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &category_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 category_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->category_token(), output);
  }

  // optional int32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
}

::PROTOBUF_NAMESPACE_ID::uint8* UsageStatsObfuscatedProto_ChooserAction_CategoryCount::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 category_token = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->category_token(), target);
  }

  // optional int32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
  return target;
}

size_t UsageStatsObfuscatedProto_ChooserAction_CategoryCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 category_token = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->category_token());
    }

    // optional int32 count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
  GOOGLE_DCHECK_NE(&from, this);
  const UsageStatsObfuscatedProto_ChooserAction_CategoryCount* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsageStatsObfuscatedProto_ChooserAction_CategoryCount>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
    MergeFrom(*source);
  }
}

void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::MergeFrom(const UsageStatsObfuscatedProto_ChooserAction_CategoryCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      category_token_ = from.category_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::CopyFrom(const UsageStatsObfuscatedProto_ChooserAction_CategoryCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsageStatsObfuscatedProto_ChooserAction_CategoryCount::IsInitialized() const {
  return true;
}

void UsageStatsObfuscatedProto_ChooserAction_CategoryCount::InternalSwap(UsageStatsObfuscatedProto_ChooserAction_CategoryCount* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(category_token_, other->category_token_);
  swap(count_, other->count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsageStatsObfuscatedProto_ChooserAction_CategoryCount::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UsageStatsObfuscatedProto_ChooserAction::InitAsDefaultInstance() {
}
class UsageStatsObfuscatedProto_ChooserAction::_Internal {
 public:
  using HasBits = decltype(std::declval<UsageStatsObfuscatedProto_ChooserAction>()._has_bits_);
  static void set_has_action_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

UsageStatsObfuscatedProto_ChooserAction::UsageStatsObfuscatedProto_ChooserAction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
}
UsageStatsObfuscatedProto_ChooserAction::UsageStatsObfuscatedProto_ChooserAction(const UsageStatsObfuscatedProto_ChooserAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      counts_(from.counts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  action_token_ = from.action_token_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
}

void UsageStatsObfuscatedProto_ChooserAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UsageStatsObfuscatedProto_ChooserAction_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  action_token_ = 0;
}

UsageStatsObfuscatedProto_ChooserAction::~UsageStatsObfuscatedProto_ChooserAction() {
  // @@protoc_insertion_point(destructor:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
  SharedDtor();
}

void UsageStatsObfuscatedProto_ChooserAction::SharedDtor() {
}

void UsageStatsObfuscatedProto_ChooserAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsageStatsObfuscatedProto_ChooserAction& UsageStatsObfuscatedProto_ChooserAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsageStatsObfuscatedProto_ChooserAction_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  return *internal_default_instance();
}


void UsageStatsObfuscatedProto_ChooserAction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  counts_.Clear();
  action_token_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UsageStatsObfuscatedProto_ChooserAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 action_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_action_token(&has_bits);
          action_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount counts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_counts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UsageStatsObfuscatedProto_ChooserAction::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 action_token = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_action_token(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount counts = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_counts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UsageStatsObfuscatedProto_ChooserAction::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 action_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->action_token(), output);
  }

  // repeated .com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount counts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->counts_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->counts(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
}

::PROTOBUF_NAMESPACE_ID::uint8* UsageStatsObfuscatedProto_ChooserAction::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 action_token = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->action_token(), target);
  }

  // repeated .com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount counts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->counts_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->counts(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
  return target;
}

size_t UsageStatsObfuscatedProto_ChooserAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction.CategoryCount counts = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->counts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->counts(static_cast<int>(i)));
    }
  }

  // optional int32 action_token = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->action_token());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsageStatsObfuscatedProto_ChooserAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
  GOOGLE_DCHECK_NE(&from, this);
  const UsageStatsObfuscatedProto_ChooserAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsageStatsObfuscatedProto_ChooserAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
    MergeFrom(*source);
  }
}

void UsageStatsObfuscatedProto_ChooserAction::MergeFrom(const UsageStatsObfuscatedProto_ChooserAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  counts_.MergeFrom(from.counts_);
  if (from.has_action_token()) {
    set_action_token(from.action_token());
  }
}

void UsageStatsObfuscatedProto_ChooserAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsageStatsObfuscatedProto_ChooserAction::CopyFrom(const UsageStatsObfuscatedProto_ChooserAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsageStatsObfuscatedProto_ChooserAction::IsInitialized() const {
  return true;
}

void UsageStatsObfuscatedProto_ChooserAction::InternalSwap(UsageStatsObfuscatedProto_ChooserAction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&counts_)->InternalSwap(CastToBase(&other->counts_));
  swap(action_token_, other->action_token_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsageStatsObfuscatedProto_ChooserAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UsageStatsObfuscatedProto::InitAsDefaultInstance() {
}
class UsageStatsObfuscatedProto::_Internal {
 public:
  using HasBits = decltype(std::declval<UsageStatsObfuscatedProto>()._has_bits_);
  static void set_has_package_token(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_last_time_active_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_total_time_active_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_last_event(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_app_launch_count(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_last_time_service_used_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_total_time_service_used_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_last_time_visible_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_total_time_visible_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_last_time_component_used_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

UsageStatsObfuscatedProto::UsageStatsObfuscatedProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.usage.UsageStatsObfuscatedProto)
}
UsageStatsObfuscatedProto::UsageStatsObfuscatedProto(const UsageStatsObfuscatedProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      chooser_actions_(from.chooser_actions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&last_time_active_ms_, &from.last_time_active_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_launch_count_) -
    reinterpret_cast<char*>(&last_time_active_ms_)) + sizeof(app_launch_count_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.usage.UsageStatsObfuscatedProto)
}

void UsageStatsObfuscatedProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UsageStatsObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  ::memset(&last_time_active_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_launch_count_) -
      reinterpret_cast<char*>(&last_time_active_ms_)) + sizeof(app_launch_count_));
}

UsageStatsObfuscatedProto::~UsageStatsObfuscatedProto() {
  // @@protoc_insertion_point(destructor:com.android.server.usage.UsageStatsObfuscatedProto)
  SharedDtor();
}

void UsageStatsObfuscatedProto::SharedDtor() {
}

void UsageStatsObfuscatedProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsageStatsObfuscatedProto& UsageStatsObfuscatedProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UsageStatsObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  return *internal_default_instance();
}


void UsageStatsObfuscatedProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.usage.UsageStatsObfuscatedProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chooser_actions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&last_time_active_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&total_time_visible_ms_) -
        reinterpret_cast<char*>(&last_time_active_ms_)) + sizeof(total_time_visible_ms_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&last_time_component_used_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_launch_count_) -
        reinterpret_cast<char*>(&last_time_component_used_ms_)) + sizeof(app_launch_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UsageStatsObfuscatedProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 package_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_package_token(&has_bits);
          package_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 last_time_active_ms = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_last_time_active_ms(&has_bits);
          last_time_active_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 total_time_active_ms = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_total_time_active_ms(&has_bits);
          total_time_active_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 last_event = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_last_event(&has_bits);
          last_event_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 app_launch_count = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_app_launch_count(&has_bits);
          app_launch_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction chooser_actions = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_chooser_actions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 58);
        } else goto handle_unusual;
        continue;
      // optional int64 last_time_service_used_ms = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_last_time_service_used_ms(&has_bits);
          last_time_service_used_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 total_time_service_used_ms = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_total_time_service_used_ms(&has_bits);
          total_time_service_used_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 last_time_visible_ms = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_last_time_visible_ms(&has_bits);
          last_time_visible_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 total_time_visible_ms = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_total_time_visible_ms(&has_bits);
          total_time_visible_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 last_time_component_used_ms = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_last_time_component_used_ms(&has_bits);
          last_time_component_used_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UsageStatsObfuscatedProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.usage.UsageStatsObfuscatedProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 package_token = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_package_token(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &package_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_time_active_ms = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_last_time_active_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_time_active_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 total_time_active_ms = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_total_time_active_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_time_active_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 last_event = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_last_event(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_event_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 app_launch_count = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_app_launch_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &app_launch_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction chooser_actions = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_chooser_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_time_service_used_ms = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_last_time_service_used_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_time_service_used_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 total_time_service_used_ms = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_total_time_service_used_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_time_service_used_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_time_visible_ms = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          _Internal::set_has_last_time_visible_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_time_visible_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 total_time_visible_ms = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          _Internal::set_has_total_time_visible_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_time_visible_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_time_component_used_ms = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {
          _Internal::set_has_last_time_component_used_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_time_component_used_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.usage.UsageStatsObfuscatedProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.usage.UsageStatsObfuscatedProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UsageStatsObfuscatedProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.usage.UsageStatsObfuscatedProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 package_token = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->package_token(), output);
  }

  // optional int64 last_time_active_ms = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->last_time_active_ms(), output);
  }

  // optional int64 total_time_active_ms = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(4, this->total_time_active_ms(), output);
  }

  // optional int32 last_event = 5;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->last_event(), output);
  }

  // optional int32 app_launch_count = 6;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->app_launch_count(), output);
  }

  // repeated .com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction chooser_actions = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chooser_actions_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->chooser_actions(static_cast<int>(i)),
      output);
  }

  // optional int64 last_time_service_used_ms = 8;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(8, this->last_time_service_used_ms(), output);
  }

  // optional int64 total_time_service_used_ms = 9;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(9, this->total_time_service_used_ms(), output);
  }

  // optional int64 last_time_visible_ms = 10;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(10, this->last_time_visible_ms(), output);
  }

  // optional int64 total_time_visible_ms = 11;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(11, this->total_time_visible_ms(), output);
  }

  // optional int64 last_time_component_used_ms = 12;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(12, this->last_time_component_used_ms(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.usage.UsageStatsObfuscatedProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* UsageStatsObfuscatedProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.usage.UsageStatsObfuscatedProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 package_token = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->package_token(), target);
  }

  // optional int64 last_time_active_ms = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->last_time_active_ms(), target);
  }

  // optional int64 total_time_active_ms = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->total_time_active_ms(), target);
  }

  // optional int32 last_event = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->last_event(), target);
  }

  // optional int32 app_launch_count = 6;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->app_launch_count(), target);
  }

  // repeated .com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction chooser_actions = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chooser_actions_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->chooser_actions(static_cast<int>(i)), target);
  }

  // optional int64 last_time_service_used_ms = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->last_time_service_used_ms(), target);
  }

  // optional int64 total_time_service_used_ms = 9;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(9, this->total_time_service_used_ms(), target);
  }

  // optional int64 last_time_visible_ms = 10;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->last_time_visible_ms(), target);
  }

  // optional int64 total_time_visible_ms = 11;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(11, this->total_time_visible_ms(), target);
  }

  // optional int64 last_time_component_used_ms = 12;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(12, this->last_time_component_used_ms(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.usage.UsageStatsObfuscatedProto)
  return target;
}

size_t UsageStatsObfuscatedProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.usage.UsageStatsObfuscatedProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.usage.UsageStatsObfuscatedProto.ChooserAction chooser_actions = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->chooser_actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->chooser_actions(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional int64 last_time_active_ms = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->last_time_active_ms());
    }

    // optional int32 package_token = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->package_token());
    }

    // optional int32 last_event = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->last_event());
    }

    // optional int64 total_time_active_ms = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->total_time_active_ms());
    }

    // optional int64 last_time_service_used_ms = 8;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->last_time_service_used_ms());
    }

    // optional int64 total_time_service_used_ms = 9;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->total_time_service_used_ms());
    }

    // optional int64 last_time_visible_ms = 10;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->last_time_visible_ms());
    }

    // optional int64 total_time_visible_ms = 11;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->total_time_visible_ms());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional int64 last_time_component_used_ms = 12;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->last_time_component_used_ms());
    }

    // optional int32 app_launch_count = 6;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->app_launch_count());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsageStatsObfuscatedProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.usage.UsageStatsObfuscatedProto)
  GOOGLE_DCHECK_NE(&from, this);
  const UsageStatsObfuscatedProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UsageStatsObfuscatedProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.usage.UsageStatsObfuscatedProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.usage.UsageStatsObfuscatedProto)
    MergeFrom(*source);
  }
}

void UsageStatsObfuscatedProto::MergeFrom(const UsageStatsObfuscatedProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.usage.UsageStatsObfuscatedProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chooser_actions_.MergeFrom(from.chooser_actions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      last_time_active_ms_ = from.last_time_active_ms_;
    }
    if (cached_has_bits & 0x00000002u) {
      package_token_ = from.package_token_;
    }
    if (cached_has_bits & 0x00000004u) {
      last_event_ = from.last_event_;
    }
    if (cached_has_bits & 0x00000008u) {
      total_time_active_ms_ = from.total_time_active_ms_;
    }
    if (cached_has_bits & 0x00000010u) {
      last_time_service_used_ms_ = from.last_time_service_used_ms_;
    }
    if (cached_has_bits & 0x00000020u) {
      total_time_service_used_ms_ = from.total_time_service_used_ms_;
    }
    if (cached_has_bits & 0x00000040u) {
      last_time_visible_ms_ = from.last_time_visible_ms_;
    }
    if (cached_has_bits & 0x00000080u) {
      total_time_visible_ms_ = from.total_time_visible_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      last_time_component_used_ms_ = from.last_time_component_used_ms_;
    }
    if (cached_has_bits & 0x00000200u) {
      app_launch_count_ = from.app_launch_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UsageStatsObfuscatedProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.usage.UsageStatsObfuscatedProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsageStatsObfuscatedProto::CopyFrom(const UsageStatsObfuscatedProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.usage.UsageStatsObfuscatedProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsageStatsObfuscatedProto::IsInitialized() const {
  return true;
}

void UsageStatsObfuscatedProto::InternalSwap(UsageStatsObfuscatedProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&chooser_actions_)->InternalSwap(CastToBase(&other->chooser_actions_));
  swap(last_time_active_ms_, other->last_time_active_ms_);
  swap(package_token_, other->package_token_);
  swap(last_event_, other->last_event_);
  swap(total_time_active_ms_, other->total_time_active_ms_);
  swap(last_time_service_used_ms_, other->last_time_service_used_ms_);
  swap(total_time_service_used_ms_, other->total_time_service_used_ms_);
  swap(last_time_visible_ms_, other->last_time_visible_ms_);
  swap(total_time_visible_ms_, other->total_time_visible_ms_);
  swap(last_time_component_used_ms_, other->last_time_component_used_ms_);
  swap(app_launch_count_, other->app_launch_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsageStatsObfuscatedProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EventObfuscatedProto::InitAsDefaultInstance() {
  ::com::android::server::usage::_EventObfuscatedProto_default_instance_._instance.get_mutable()->config_ = const_cast< ::android::content::ConfigurationProto*>(
      ::android::content::ConfigurationProto::internal_default_instance());
}
class EventObfuscatedProto::_Internal {
 public:
  using HasBits = decltype(std::declval<EventObfuscatedProto>()._has_bits_);
  static void set_has_package_token(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_class_token(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_time_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::android::content::ConfigurationProto& config(const EventObfuscatedProto* msg);
  static void set_has_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_shortcut_id_token(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_standby_bucket(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_notification_channel_id_token(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_instance_id(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_task_root_package_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_task_root_class_token(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_locus_id_token(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
};

const ::android::content::ConfigurationProto&
EventObfuscatedProto::_Internal::config(const EventObfuscatedProto* msg) {
  return *msg->config_;
}
void EventObfuscatedProto::clear_config() {
  if (config_ != nullptr) config_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
EventObfuscatedProto::EventObfuscatedProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.usage.EventObfuscatedProto)
}
EventObfuscatedProto::EventObfuscatedProto(const EventObfuscatedProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::android::content::ConfigurationProto(*from.config_);
  } else {
    config_ = nullptr;
  }
  ::memcpy(&package_token_, &from.package_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&locus_id_token_) -
    reinterpret_cast<char*>(&package_token_)) + sizeof(locus_id_token_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.usage.EventObfuscatedProto)
}

void EventObfuscatedProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EventObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&locus_id_token_) -
      reinterpret_cast<char*>(&config_)) + sizeof(locus_id_token_));
}

EventObfuscatedProto::~EventObfuscatedProto() {
  // @@protoc_insertion_point(destructor:com.android.server.usage.EventObfuscatedProto)
  SharedDtor();
}

void EventObfuscatedProto::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
}

void EventObfuscatedProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventObfuscatedProto& EventObfuscatedProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EventObfuscatedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  return *internal_default_instance();
}


void EventObfuscatedProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.usage.EventObfuscatedProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(config_ != nullptr);
    config_->Clear();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&package_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&standby_bucket_) -
        reinterpret_cast<char*>(&package_token_)) + sizeof(standby_bucket_));
  }
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&notification_channel_id_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&locus_id_token_) -
        reinterpret_cast<char*>(&notification_channel_id_token_)) + sizeof(locus_id_token_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EventObfuscatedProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 package_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_package_token(&has_bits);
          package_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 class_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_class_token(&has_bits);
          class_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 time_ms = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_time_ms(&has_bits);
          time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 flags = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_flags(&has_bits);
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_type(&has_bits);
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.content.ConfigurationProto config = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 shortcut_id_token = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_shortcut_id_token(&has_bits);
          shortcut_id_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 standby_bucket = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_standby_bucket(&has_bits);
          standby_bucket_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 notification_channel_id_token = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_notification_channel_id_token(&has_bits);
          notification_channel_id_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 instance_id = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_instance_id(&has_bits);
          instance_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 task_root_package_token = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_task_root_package_token(&has_bits);
          task_root_package_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 task_root_class_token = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_task_root_class_token(&has_bits);
          task_root_class_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 locus_id_token = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_locus_id_token(&has_bits);
          locus_id_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EventObfuscatedProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.usage.EventObfuscatedProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 package_token = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_package_token(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &package_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 class_token = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_class_token(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &class_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 time_ms = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_time_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 type = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_type(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.content.ConfigurationProto config = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 shortcut_id_token = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_shortcut_id_token(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &shortcut_id_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 standby_bucket = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_standby_bucket(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &standby_bucket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 notification_channel_id_token = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_notification_channel_id_token(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &notification_channel_id_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 instance_id = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          _Internal::set_has_instance_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &instance_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 task_root_package_token = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          _Internal::set_has_task_root_package_token(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_root_package_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 task_root_class_token = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {
          _Internal::set_has_task_root_class_token(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_root_class_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 locus_id_token = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (104 & 0xFF)) {
          _Internal::set_has_locus_id_token(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &locus_id_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.usage.EventObfuscatedProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.usage.EventObfuscatedProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EventObfuscatedProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.usage.EventObfuscatedProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 package_token = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->package_token(), output);
  }

  // optional int32 class_token = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->class_token(), output);
  }

  // optional int64 time_ms = 3;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->time_ms(), output);
  }

  // optional int32 flags = 4;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->flags(), output);
  }

  // optional int32 type = 5;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  // optional .android.content.ConfigurationProto config = 6;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::config(this), output);
  }

  // optional int32 shortcut_id_token = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->shortcut_id_token(), output);
  }

  // optional int32 standby_bucket = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(8, this->standby_bucket(), output);
  }

  // optional int32 notification_channel_id_token = 9;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(9, this->notification_channel_id_token(), output);
  }

  // optional int32 instance_id = 10;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(10, this->instance_id(), output);
  }

  // optional int32 task_root_package_token = 11;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(11, this->task_root_package_token(), output);
  }

  // optional int32 task_root_class_token = 12;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(12, this->task_root_class_token(), output);
  }

  // optional int32 locus_id_token = 13;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(13, this->locus_id_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.usage.EventObfuscatedProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* EventObfuscatedProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.usage.EventObfuscatedProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 package_token = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->package_token(), target);
  }

  // optional int32 class_token = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->class_token(), target);
  }

  // optional int64 time_ms = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->time_ms(), target);
  }

  // optional int32 flags = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->flags(), target);
  }

  // optional int32 type = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  // optional .android.content.ConfigurationProto config = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::config(this), target);
  }

  // optional int32 shortcut_id_token = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->shortcut_id_token(), target);
  }

  // optional int32 standby_bucket = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->standby_bucket(), target);
  }

  // optional int32 notification_channel_id_token = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->notification_channel_id_token(), target);
  }

  // optional int32 instance_id = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->instance_id(), target);
  }

  // optional int32 task_root_package_token = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->task_root_package_token(), target);
  }

  // optional int32 task_root_class_token = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->task_root_class_token(), target);
  }

  // optional int32 locus_id_token = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->locus_id_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.usage.EventObfuscatedProto)
  return target;
}

size_t EventObfuscatedProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.usage.EventObfuscatedProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .android.content.ConfigurationProto config = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *config_);
    }

    // optional int32 package_token = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->package_token());
    }

    // optional int32 class_token = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->class_token());
    }

    // optional int64 time_ms = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->time_ms());
    }

    // optional int32 flags = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->flags());
    }

    // optional int32 type = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 shortcut_id_token = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->shortcut_id_token());
    }

    // optional int32 standby_bucket = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->standby_bucket());
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional int32 notification_channel_id_token = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->notification_channel_id_token());
    }

    // optional int32 instance_id = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->instance_id());
    }

    // optional int32 task_root_package_token = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->task_root_package_token());
    }

    // optional int32 task_root_class_token = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->task_root_class_token());
    }

    // optional int32 locus_id_token = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->locus_id_token());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventObfuscatedProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.usage.EventObfuscatedProto)
  GOOGLE_DCHECK_NE(&from, this);
  const EventObfuscatedProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EventObfuscatedProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.usage.EventObfuscatedProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.usage.EventObfuscatedProto)
    MergeFrom(*source);
  }
}

void EventObfuscatedProto::MergeFrom(const EventObfuscatedProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.usage.EventObfuscatedProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_config()->::android::content::ConfigurationProto::MergeFrom(from.config());
    }
    if (cached_has_bits & 0x00000002u) {
      package_token_ = from.package_token_;
    }
    if (cached_has_bits & 0x00000004u) {
      class_token_ = from.class_token_;
    }
    if (cached_has_bits & 0x00000008u) {
      time_ms_ = from.time_ms_;
    }
    if (cached_has_bits & 0x00000010u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000020u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000040u) {
      shortcut_id_token_ = from.shortcut_id_token_;
    }
    if (cached_has_bits & 0x00000080u) {
      standby_bucket_ = from.standby_bucket_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      notification_channel_id_token_ = from.notification_channel_id_token_;
    }
    if (cached_has_bits & 0x00000200u) {
      instance_id_ = from.instance_id_;
    }
    if (cached_has_bits & 0x00000400u) {
      task_root_package_token_ = from.task_root_package_token_;
    }
    if (cached_has_bits & 0x00000800u) {
      task_root_class_token_ = from.task_root_class_token_;
    }
    if (cached_has_bits & 0x00001000u) {
      locus_id_token_ = from.locus_id_token_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EventObfuscatedProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.usage.EventObfuscatedProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventObfuscatedProto::CopyFrom(const EventObfuscatedProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.usage.EventObfuscatedProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventObfuscatedProto::IsInitialized() const {
  return true;
}

void EventObfuscatedProto::InternalSwap(EventObfuscatedProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(config_, other->config_);
  swap(package_token_, other->package_token_);
  swap(class_token_, other->class_token_);
  swap(time_ms_, other->time_ms_);
  swap(flags_, other->flags_);
  swap(type_, other->type_);
  swap(shortcut_id_token_, other->shortcut_id_token_);
  swap(standby_bucket_, other->standby_bucket_);
  swap(notification_channel_id_token_, other->notification_channel_id_token_);
  swap(instance_id_, other->instance_id_);
  swap(task_root_package_token_, other->task_root_package_token_);
  swap(task_root_class_token_, other->task_root_class_token_);
  swap(locus_id_token_, other->locus_id_token_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EventObfuscatedProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PendingEventProto::InitAsDefaultInstance() {
  ::com::android::server::usage::_PendingEventProto_default_instance_._instance.get_mutable()->config_ = const_cast< ::android::content::ConfigurationProto*>(
      ::android::content::ConfigurationProto::internal_default_instance());
}
class PendingEventProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PendingEventProto>()._has_bits_);
  static void set_has_package_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_class_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_time_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::android::content::ConfigurationProto& config(const PendingEventProto* msg);
  static void set_has_config(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_shortcut_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_standby_bucket(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_notification_channel_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_instance_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_task_root_package(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_task_root_class(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_locus_id(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::android::content::ConfigurationProto&
PendingEventProto::_Internal::config(const PendingEventProto* msg) {
  return *msg->config_;
}
void PendingEventProto::clear_config() {
  if (config_ != nullptr) config_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
PendingEventProto::PendingEventProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.usage.PendingEventProto)
}
PendingEventProto::PendingEventProto(const PendingEventProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_package_name()) {
    package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  class_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_class_name()) {
    class_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  shortcut_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_shortcut_id()) {
    shortcut_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.shortcut_id_);
  }
  notification_channel_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_notification_channel_id()) {
    notification_channel_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.notification_channel_id_);
  }
  task_root_package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_root_package()) {
    task_root_package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.task_root_package_);
  }
  task_root_class_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_root_class()) {
    task_root_class_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.task_root_class_);
  }
  locus_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_locus_id()) {
    locus_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.locus_id_);
  }
  if (from.has_config()) {
    config_ = new ::android::content::ConfigurationProto(*from.config_);
  } else {
    config_ = nullptr;
  }
  ::memcpy(&time_ms_, &from.time_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&instance_id_) -
    reinterpret_cast<char*>(&time_ms_)) + sizeof(instance_id_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.usage.PendingEventProto)
}

void PendingEventProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PendingEventProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  class_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  shortcut_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  notification_channel_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  task_root_package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  task_root_class_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  locus_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instance_id_) -
      reinterpret_cast<char*>(&config_)) + sizeof(instance_id_));
}

PendingEventProto::~PendingEventProto() {
  // @@protoc_insertion_point(destructor:com.android.server.usage.PendingEventProto)
  SharedDtor();
}

void PendingEventProto::SharedDtor() {
  package_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  class_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  shortcut_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  notification_channel_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  task_root_package_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  task_root_class_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  locus_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
}

void PendingEventProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PendingEventProto& PendingEventProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PendingEventProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  return *internal_default_instance();
}


void PendingEventProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.usage.PendingEventProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      package_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      class_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      shortcut_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      notification_channel_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      task_root_package_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      task_root_class_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      locus_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(config_ != nullptr);
      config_->Clear();
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&time_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&instance_id_) -
        reinterpret_cast<char*>(&time_ms_)) + sizeof(instance_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PendingEventProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string package_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_package_name(), ptr, ctx, "com.android.server.usage.PendingEventProto.package_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string class_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_class_name(), ptr, ctx, "com.android.server.usage.PendingEventProto.class_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 time_ms = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_time_ms(&has_bits);
          time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 flags = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_flags(&has_bits);
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_type(&has_bits);
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.content.ConfigurationProto config = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string shortcut_id = 7 [(.android.privacy) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_shortcut_id(), ptr, ctx, "com.android.server.usage.PendingEventProto.shortcut_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 standby_bucket = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_standby_bucket(&has_bits);
          standby_bucket_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string notification_channel_id = 9 [(.android.privacy) = {
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_notification_channel_id(), ptr, ctx, "com.android.server.usage.PendingEventProto.notification_channel_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 instance_id = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_instance_id(&has_bits);
          instance_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string task_root_package = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_task_root_package(), ptr, ctx, "com.android.server.usage.PendingEventProto.task_root_package");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string task_root_class = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_task_root_class(), ptr, ctx, "com.android.server.usage.PendingEventProto.task_root_class");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string locus_id = 13 [(.android.privacy) = {
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_locus_id(), ptr, ctx, "com.android.server.usage.PendingEventProto.locus_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PendingEventProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.usage.PendingEventProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string package_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package_name().data(), static_cast<int>(this->package_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.usage.PendingEventProto.package_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string class_name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->class_name().data(), static_cast<int>(this->class_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.usage.PendingEventProto.class_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 time_ms = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_time_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 type = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_type(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.content.ConfigurationProto config = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string shortcut_id = 7 [(.android.privacy) = {
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_shortcut_id()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->shortcut_id().data(), static_cast<int>(this->shortcut_id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.usage.PendingEventProto.shortcut_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 standby_bucket = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_standby_bucket(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &standby_bucket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string notification_channel_id = 9 [(.android.privacy) = {
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_notification_channel_id()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->notification_channel_id().data(), static_cast<int>(this->notification_channel_id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.usage.PendingEventProto.notification_channel_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 instance_id = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          _Internal::set_has_instance_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &instance_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string task_root_package = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_task_root_package()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_root_package().data(), static_cast<int>(this->task_root_package().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.usage.PendingEventProto.task_root_package");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string task_root_class = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_task_root_class()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_root_class().data(), static_cast<int>(this->task_root_class().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.usage.PendingEventProto.task_root_class");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string locus_id = 13 [(.android.privacy) = {
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_locus_id()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->locus_id().data(), static_cast<int>(this->locus_id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.usage.PendingEventProto.locus_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.usage.PendingEventProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.usage.PendingEventProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PendingEventProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.usage.PendingEventProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string package_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.PendingEventProto.package_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->package_name(), output);
  }

  // optional string class_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.PendingEventProto.class_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->class_name(), output);
  }

  // optional int64 time_ms = 3;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->time_ms(), output);
  }

  // optional int32 flags = 4;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->flags(), output);
  }

  // optional int32 type = 5;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  // optional .android.content.ConfigurationProto config = 6;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::config(this), output);
  }

  // optional string shortcut_id = 7 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shortcut_id().data(), static_cast<int>(this->shortcut_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.PendingEventProto.shortcut_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->shortcut_id(), output);
  }

  // optional int32 standby_bucket = 8;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(8, this->standby_bucket(), output);
  }

  // optional string notification_channel_id = 9 [(.android.privacy) = {
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->notification_channel_id().data(), static_cast<int>(this->notification_channel_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.PendingEventProto.notification_channel_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->notification_channel_id(), output);
  }

  // optional int32 instance_id = 10;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(10, this->instance_id(), output);
  }

  // optional string task_root_package = 11;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_root_package().data(), static_cast<int>(this->task_root_package().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.PendingEventProto.task_root_package");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->task_root_package(), output);
  }

  // optional string task_root_class = 12;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_root_class().data(), static_cast<int>(this->task_root_class().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.PendingEventProto.task_root_class");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->task_root_class(), output);
  }

  // optional string locus_id = 13 [(.android.privacy) = {
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->locus_id().data(), static_cast<int>(this->locus_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.PendingEventProto.locus_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->locus_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.usage.PendingEventProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PendingEventProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.usage.PendingEventProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string package_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.PendingEventProto.package_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->package_name(), target);
  }

  // optional string class_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.PendingEventProto.class_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->class_name(), target);
  }

  // optional int64 time_ms = 3;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->time_ms(), target);
  }

  // optional int32 flags = 4;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->flags(), target);
  }

  // optional int32 type = 5;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  // optional .android.content.ConfigurationProto config = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::config(this), target);
  }

  // optional string shortcut_id = 7 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shortcut_id().data(), static_cast<int>(this->shortcut_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.PendingEventProto.shortcut_id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        7, this->shortcut_id(), target);
  }

  // optional int32 standby_bucket = 8;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->standby_bucket(), target);
  }

  // optional string notification_channel_id = 9 [(.android.privacy) = {
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->notification_channel_id().data(), static_cast<int>(this->notification_channel_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.PendingEventProto.notification_channel_id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        9, this->notification_channel_id(), target);
  }

  // optional int32 instance_id = 10;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->instance_id(), target);
  }

  // optional string task_root_package = 11;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_root_package().data(), static_cast<int>(this->task_root_package().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.PendingEventProto.task_root_package");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        11, this->task_root_package(), target);
  }

  // optional string task_root_class = 12;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_root_class().data(), static_cast<int>(this->task_root_class().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.PendingEventProto.task_root_class");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        12, this->task_root_class(), target);
  }

  // optional string locus_id = 13 [(.android.privacy) = {
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->locus_id().data(), static_cast<int>(this->locus_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.PendingEventProto.locus_id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        13, this->locus_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.usage.PendingEventProto)
  return target;
}

size_t PendingEventProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.usage.PendingEventProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string package_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // optional string class_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->class_name());
    }

    // optional string shortcut_id = 7 [(.android.privacy) = {
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->shortcut_id());
    }

    // optional string notification_channel_id = 9 [(.android.privacy) = {
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->notification_channel_id());
    }

    // optional string task_root_package = 11;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->task_root_package());
    }

    // optional string task_root_class = 12;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->task_root_class());
    }

    // optional string locus_id = 13 [(.android.privacy) = {
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->locus_id());
    }

    // optional .android.content.ConfigurationProto config = 6;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *config_);
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional int64 time_ms = 3;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->time_ms());
    }

    // optional int32 flags = 4;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->flags());
    }

    // optional int32 type = 5;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 standby_bucket = 8;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->standby_bucket());
    }

    // optional int32 instance_id = 10;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->instance_id());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PendingEventProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.usage.PendingEventProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PendingEventProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PendingEventProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.usage.PendingEventProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.usage.PendingEventProto)
    MergeFrom(*source);
  }
}

void PendingEventProto::MergeFrom(const PendingEventProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.usage.PendingEventProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      class_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.class_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      shortcut_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.shortcut_id_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      notification_channel_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.notification_channel_id_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      task_root_package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.task_root_package_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      task_root_class_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.task_root_class_);
    }
    if (cached_has_bits & 0x00000040u) {
      _has_bits_[0] |= 0x00000040u;
      locus_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.locus_id_);
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_config()->::android::content::ConfigurationProto::MergeFrom(from.config());
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      time_ms_ = from.time_ms_;
    }
    if (cached_has_bits & 0x00000200u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000400u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000800u) {
      standby_bucket_ = from.standby_bucket_;
    }
    if (cached_has_bits & 0x00001000u) {
      instance_id_ = from.instance_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PendingEventProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.usage.PendingEventProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PendingEventProto::CopyFrom(const PendingEventProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.usage.PendingEventProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PendingEventProto::IsInitialized() const {
  return true;
}

void PendingEventProto::InternalSwap(PendingEventProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  package_name_.Swap(&other->package_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  class_name_.Swap(&other->class_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shortcut_id_.Swap(&other->shortcut_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  notification_channel_id_.Swap(&other->notification_channel_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  task_root_package_.Swap(&other->task_root_package_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  task_root_class_.Swap(&other->task_root_class_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  locus_id_.Swap(&other->locus_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(config_, other->config_);
  swap(time_ms_, other->time_ms_);
  swap(flags_, other->flags_);
  swap(type_, other->type_);
  swap(standby_bucket_, other->standby_bucket_);
  swap(instance_id_, other->instance_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PendingEventProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObfuscatedPackagesProto_PackagesMap::InitAsDefaultInstance() {
}
class ObfuscatedPackagesProto_PackagesMap::_Internal {
 public:
  using HasBits = decltype(std::declval<ObfuscatedPackagesProto_PackagesMap>()._has_bits_);
  static void set_has_package_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ObfuscatedPackagesProto_PackagesMap::ObfuscatedPackagesProto_PackagesMap()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
}
ObfuscatedPackagesProto_PackagesMap::ObfuscatedPackagesProto_PackagesMap(const ObfuscatedPackagesProto_PackagesMap& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      strings_(from.strings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  package_token_ = from.package_token_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
}

void ObfuscatedPackagesProto_PackagesMap::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObfuscatedPackagesProto_PackagesMap_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  package_token_ = 0;
}

ObfuscatedPackagesProto_PackagesMap::~ObfuscatedPackagesProto_PackagesMap() {
  // @@protoc_insertion_point(destructor:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
  SharedDtor();
}

void ObfuscatedPackagesProto_PackagesMap::SharedDtor() {
}

void ObfuscatedPackagesProto_PackagesMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObfuscatedPackagesProto_PackagesMap& ObfuscatedPackagesProto_PackagesMap::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObfuscatedPackagesProto_PackagesMap_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  return *internal_default_instance();
}


void ObfuscatedPackagesProto_PackagesMap::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strings_.Clear();
  package_token_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ObfuscatedPackagesProto_PackagesMap::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 package_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_package_token(&has_bits);
          package_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string strings = 2 [(.android.privacy) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_strings(), ptr, ctx, "com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ObfuscatedPackagesProto_PackagesMap::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 package_token = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_package_token(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &package_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string strings = 2 [(.android.privacy) = {
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_strings()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strings(this->strings_size() - 1).data(),
            static_cast<int>(this->strings(this->strings_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ObfuscatedPackagesProto_PackagesMap::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 package_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->package_token(), output);
  }

  // repeated string strings = 2 [(.android.privacy) = {
  for (int i = 0, n = this->strings_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strings(i).data(), static_cast<int>(this->strings(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      2, this->strings(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
}

::PROTOBUF_NAMESPACE_ID::uint8* ObfuscatedPackagesProto_PackagesMap::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 package_token = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->package_token(), target);
  }

  // repeated string strings = 2 [(.android.privacy) = {
  for (int i = 0, n = this->strings_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strings(i).data(), static_cast<int>(this->strings(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.usage.ObfuscatedPackagesProto.PackagesMap.strings");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(2, this->strings(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
  return target;
}

size_t ObfuscatedPackagesProto_PackagesMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string strings = 2 [(.android.privacy) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->strings_size());
  for (int i = 0, n = this->strings_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->strings(i));
  }

  // optional int32 package_token = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->package_token());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObfuscatedPackagesProto_PackagesMap::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
  GOOGLE_DCHECK_NE(&from, this);
  const ObfuscatedPackagesProto_PackagesMap* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObfuscatedPackagesProto_PackagesMap>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
    MergeFrom(*source);
  }
}

void ObfuscatedPackagesProto_PackagesMap::MergeFrom(const ObfuscatedPackagesProto_PackagesMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  strings_.MergeFrom(from.strings_);
  if (from.has_package_token()) {
    set_package_token(from.package_token());
  }
}

void ObfuscatedPackagesProto_PackagesMap::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObfuscatedPackagesProto_PackagesMap::CopyFrom(const ObfuscatedPackagesProto_PackagesMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.usage.ObfuscatedPackagesProto.PackagesMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObfuscatedPackagesProto_PackagesMap::IsInitialized() const {
  return true;
}

void ObfuscatedPackagesProto_PackagesMap::InternalSwap(ObfuscatedPackagesProto_PackagesMap* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  strings_.InternalSwap(CastToBase(&other->strings_));
  swap(package_token_, other->package_token_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObfuscatedPackagesProto_PackagesMap::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObfuscatedPackagesProto::InitAsDefaultInstance() {
}
class ObfuscatedPackagesProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ObfuscatedPackagesProto>()._has_bits_);
  static void set_has_counter(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ObfuscatedPackagesProto::ObfuscatedPackagesProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.usage.ObfuscatedPackagesProto)
}
ObfuscatedPackagesProto::ObfuscatedPackagesProto(const ObfuscatedPackagesProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      packages_map_(from.packages_map_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  counter_ = from.counter_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.usage.ObfuscatedPackagesProto)
}

void ObfuscatedPackagesProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObfuscatedPackagesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  counter_ = 0;
}

ObfuscatedPackagesProto::~ObfuscatedPackagesProto() {
  // @@protoc_insertion_point(destructor:com.android.server.usage.ObfuscatedPackagesProto)
  SharedDtor();
}

void ObfuscatedPackagesProto::SharedDtor() {
}

void ObfuscatedPackagesProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObfuscatedPackagesProto& ObfuscatedPackagesProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObfuscatedPackagesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fusagestatsservice_5fv2_2eproto.base);
  return *internal_default_instance();
}


void ObfuscatedPackagesProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.usage.ObfuscatedPackagesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packages_map_.Clear();
  counter_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ObfuscatedPackagesProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 counter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_counter(&has_bits);
          counter_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.usage.ObfuscatedPackagesProto.PackagesMap packages_map = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_packages_map(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ObfuscatedPackagesProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.usage.ObfuscatedPackagesProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 counter = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_counter(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.usage.ObfuscatedPackagesProto.PackagesMap packages_map = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_packages_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.usage.ObfuscatedPackagesProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.usage.ObfuscatedPackagesProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ObfuscatedPackagesProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.usage.ObfuscatedPackagesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 counter = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->counter(), output);
  }

  // repeated .com.android.server.usage.ObfuscatedPackagesProto.PackagesMap packages_map = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_map_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->packages_map(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.usage.ObfuscatedPackagesProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ObfuscatedPackagesProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.usage.ObfuscatedPackagesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 counter = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->counter(), target);
  }

  // repeated .com.android.server.usage.ObfuscatedPackagesProto.PackagesMap packages_map = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_map_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->packages_map(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.usage.ObfuscatedPackagesProto)
  return target;
}

size_t ObfuscatedPackagesProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.usage.ObfuscatedPackagesProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.usage.ObfuscatedPackagesProto.PackagesMap packages_map = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->packages_map_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->packages_map(static_cast<int>(i)));
    }
  }

  // optional int32 counter = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->counter());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObfuscatedPackagesProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.usage.ObfuscatedPackagesProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ObfuscatedPackagesProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObfuscatedPackagesProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.usage.ObfuscatedPackagesProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.usage.ObfuscatedPackagesProto)
    MergeFrom(*source);
  }
}

void ObfuscatedPackagesProto::MergeFrom(const ObfuscatedPackagesProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.usage.ObfuscatedPackagesProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  packages_map_.MergeFrom(from.packages_map_);
  if (from.has_counter()) {
    set_counter(from.counter());
  }
}

void ObfuscatedPackagesProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.usage.ObfuscatedPackagesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObfuscatedPackagesProto::CopyFrom(const ObfuscatedPackagesProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.usage.ObfuscatedPackagesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObfuscatedPackagesProto::IsInitialized() const {
  return true;
}

void ObfuscatedPackagesProto::InternalSwap(ObfuscatedPackagesProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&packages_map_)->InternalSwap(CastToBase(&other->packages_map_));
  swap(counter_, other->counter_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObfuscatedPackagesProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace usage
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime* Arena::CreateMaybeMessage< ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::usage::IntervalStatsObfuscatedProto_CountAndTime >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration* Arena::CreateMaybeMessage< ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::usage::IntervalStatsObfuscatedProto_Configuration >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage* Arena::CreateMaybeMessage< ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::usage::IntervalStatsObfuscatedProto_PackageUsage >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::usage::IntervalStatsObfuscatedProto* Arena::CreateMaybeMessage< ::com::android::server::usage::IntervalStatsObfuscatedProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::usage::IntervalStatsObfuscatedProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount* Arena::CreateMaybeMessage< ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction_CategoryCount >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction* Arena::CreateMaybeMessage< ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::usage::UsageStatsObfuscatedProto_ChooserAction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::usage::UsageStatsObfuscatedProto* Arena::CreateMaybeMessage< ::com::android::server::usage::UsageStatsObfuscatedProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::usage::UsageStatsObfuscatedProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::usage::EventObfuscatedProto* Arena::CreateMaybeMessage< ::com::android::server::usage::EventObfuscatedProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::usage::EventObfuscatedProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::usage::PendingEventProto* Arena::CreateMaybeMessage< ::com::android::server::usage::PendingEventProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::usage::PendingEventProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap* Arena::CreateMaybeMessage< ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::usage::ObfuscatedPackagesProto_PackagesMap >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::usage::ObfuscatedPackagesProto* Arena::CreateMaybeMessage< ::com::android::server::usage::ObfuscatedPackagesProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::usage::ObfuscatedPackagesProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
