// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/inputmethodservice/inputmethodservice.proto

#include "frameworks/base/core/proto/android/inputmethodservice/inputmethodservice.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputMethodServiceProto_InsetsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2fsoftinputwindow_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SoftInputWindowProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2fsoftinputwindow_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2feditorinfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EditorInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2feditorinfo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_InputConnectionCallProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
namespace android {
namespace inputmethodservice {
class InputMethodServiceProto_InsetsProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputMethodServiceProto_InsetsProto> _instance;
} _InputMethodServiceProto_InsetsProto_default_instance_;
class InputMethodServiceProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputMethodServiceProto> _instance;
} _InputMethodServiceProto_default_instance_;
}  // namespace inputmethodservice
}  // namespace android
static void InitDefaultsscc_info_InputMethodServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::inputmethodservice::_InputMethodServiceProto_default_instance_;
    new (ptr) ::android::inputmethodservice::InputMethodServiceProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::inputmethodservice::InputMethodServiceProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_InputMethodServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsscc_info_InputMethodServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto}, {
      &scc_info_SoftInputWindowProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2fsoftinputwindow_2eproto.base,
      &scc_info_EditorInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2feditorinfo_2eproto.base,
      &scc_info_InputMethodServiceProto_InsetsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto.base,
      &scc_info_InputConnectionCallProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,}};

static void InitDefaultsscc_info_InputMethodServiceProto_InsetsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::inputmethodservice::_InputMethodServiceProto_InsetsProto_default_instance_;
    new (ptr) ::android::inputmethodservice::InputMethodServiceProto_InsetsProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::inputmethodservice::InputMethodServiceProto_InsetsProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputMethodServiceProto_InsetsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_InputMethodServiceProto_InsetsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto_InsetsProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto_InsetsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto_InsetsProto, content_top_insets_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto_InsetsProto, visible_top_insets_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto_InsetsProto, touchable_insets_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto_InsetsProto, touchable_region_),
  1,
  2,
  3,
  0,
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, soft_input_window_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, views_created_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, decor_view_visible_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, decor_view_was_visible_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, window_visible_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, in_show_window_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, configuration_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, token_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, input_binding_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, input_started_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, input_view_started_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, candidates_view_started_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, input_editor_info_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, show_input_requested_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, last_show_input_requested_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, show_input_flags_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, candidates_visibility_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, fullscreen_applied_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, is_fullscreen_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, extract_view_hidden_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, extracted_token_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, is_input_view_shown_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, status_icon_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, last_computed_insets_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, settings_observer_),
  PROTOBUF_FIELD_OFFSET(::android::inputmethodservice::InputMethodServiceProto, input_connection_call_),
  4,
  8,
  9,
  10,
  11,
  12,
  0,
  1,
  2,
  13,
  14,
  15,
  5,
  16,
  17,
  20,
  21,
  18,
  19,
  23,
  22,
  24,
  25,
  6,
  3,
  7,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::android::inputmethodservice::InputMethodServiceProto_InsetsProto)},
  { 13, 44, sizeof(::android::inputmethodservice::InputMethodServiceProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::inputmethodservice::_InputMethodServiceProto_InsetsProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::inputmethodservice::_InputMethodServiceProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nNframeworks/base/core/proto/android/inp"
  "utmethodservice/inputmethodservice.proto"
  "\022\032android.inputmethodservice\032Kframeworks"
  "/base/core/proto/android/inputmethodserv"
  "ice/softinputwindow.proto\032Dframeworks/ba"
  "se/core/proto/android/view/inputmethod/e"
  "ditorinfo.proto\032Iframeworks/base/core/pr"
  "oto/android/view/inputmethod/inputconnec"
  "tion.proto\"\251\010\n\027InputMethodServiceProto\022K"
  "\n\021soft_input_window\030\001 \001(\01320.android.inpu"
  "tmethodservice.SoftInputWindowProto\022\025\n\rv"
  "iews_created\030\002 \001(\010\022\032\n\022decor_view_visible"
  "\030\003 \001(\010\022\036\n\026decor_view_was_visible\030\004 \001(\010\022\026"
  "\n\016window_visible\030\005 \001(\010\022\026\n\016in_show_window"
  "\030\006 \001(\010\022\025\n\rconfiguration\030\007 \001(\t\022\r\n\005token\030\010"
  " \001(\t\022\025\n\rinput_binding\030\t \001(\t\022\025\n\rinput_sta"
  "rted\030\n \001(\010\022\032\n\022input_view_started\030\013 \001(\010\022\037"
  "\n\027candidates_view_started\030\014 \001(\010\022D\n\021input"
  "_editor_info\030\r \001(\0132).android.view.inputm"
  "ethod.EditorInfoProto\022\034\n\024show_input_requ"
  "ested\030\016 \001(\010\022!\n\031last_show_input_requested"
  "\030\017 \001(\010\022\030\n\020show_input_flags\030\022 \001(\005\022\035\n\025cand"
  "idates_visibility\030\023 \001(\005\022\032\n\022fullscreen_ap"
  "plied\030\024 \001(\010\022\025\n\ris_fullscreen\030\025 \001(\010\022\033\n\023ex"
  "tract_view_hidden\030\026 \001(\010\022\027\n\017extracted_tok"
  "en\030\027 \001(\005\022\033\n\023is_input_view_shown\030\030 \001(\010\022\023\n"
  "\013status_icon\030\031 \001(\005\022]\n\024last_computed_inse"
  "ts\030\032 \001(\0132\?.android.inputmethodservice.In"
  "putMethodServiceProto.InsetsProto\022\031\n\021set"
  "tings_observer\030\033 \001(\t\022Q\n\025input_connection"
  "_call\030\034 \001(\01322.android.view.inputmethod.I"
  "nputConnectionCallProto\032y\n\013InsetsProto\022\032"
  "\n\022content_top_insets\030\001 \001(\005\022\032\n\022visible_to"
  "p_insets\030\002 \001(\005\022\030\n\020touchable_insets\030\003 \001(\005"
  "\022\030\n\020touchable_region\030\004 \001(\tJ\004\010\020\020\021J\004\010\021\020\022B\002"
  "P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto_deps[3] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2fsoftinputwindow_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2feditorinfo_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto_sccs[2] = {
  &scc_info_InputMethodServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto.base,
  &scc_info_InputMethodServiceProto_InsetsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto, "frameworks/base/core/proto/android/inputmethodservice/inputmethodservice.proto", 1402,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto_deps, 2, 3,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto, 2, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto), true);
namespace android {
namespace inputmethodservice {

// ===================================================================

void InputMethodServiceProto_InsetsProto::InitAsDefaultInstance() {
}
class InputMethodServiceProto_InsetsProto::_Internal {
 public:
  using HasBits = decltype(std::declval<InputMethodServiceProto_InsetsProto>()._has_bits_);
  static void set_has_content_top_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_visible_top_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_touchable_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_touchable_region(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

InputMethodServiceProto_InsetsProto::InputMethodServiceProto_InsetsProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
}
InputMethodServiceProto_InsetsProto::InputMethodServiceProto_InsetsProto(const InputMethodServiceProto_InsetsProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  touchable_region_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_touchable_region()) {
    touchable_region_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.touchable_region_);
  }
  ::memcpy(&content_top_insets_, &from.content_top_insets_,
    static_cast<size_t>(reinterpret_cast<char*>(&touchable_insets_) -
    reinterpret_cast<char*>(&content_top_insets_)) + sizeof(touchable_insets_));
  // @@protoc_insertion_point(copy_constructor:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
}

void InputMethodServiceProto_InsetsProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputMethodServiceProto_InsetsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto.base);
  touchable_region_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&content_top_insets_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&touchable_insets_) -
      reinterpret_cast<char*>(&content_top_insets_)) + sizeof(touchable_insets_));
}

InputMethodServiceProto_InsetsProto::~InputMethodServiceProto_InsetsProto() {
  // @@protoc_insertion_point(destructor:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
  SharedDtor();
}

void InputMethodServiceProto_InsetsProto::SharedDtor() {
  touchable_region_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InputMethodServiceProto_InsetsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputMethodServiceProto_InsetsProto& InputMethodServiceProto_InsetsProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputMethodServiceProto_InsetsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto.base);
  return *internal_default_instance();
}


void InputMethodServiceProto_InsetsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    touchable_region_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&content_top_insets_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&touchable_insets_) -
        reinterpret_cast<char*>(&content_top_insets_)) + sizeof(touchable_insets_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InputMethodServiceProto_InsetsProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 content_top_insets = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_content_top_insets(&has_bits);
          content_top_insets_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 visible_top_insets = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_visible_top_insets(&has_bits);
          visible_top_insets_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 touchable_insets = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_touchable_insets(&has_bits);
          touchable_insets_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string touchable_region = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_touchable_region(), ptr, ctx, "android.inputmethodservice.InputMethodServiceProto.InsetsProto.touchable_region");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InputMethodServiceProto_InsetsProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 content_top_insets = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_content_top_insets(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &content_top_insets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 visible_top_insets = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_visible_top_insets(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &visible_top_insets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 touchable_insets = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_touchable_insets(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &touchable_insets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string touchable_region = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_touchable_region()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->touchable_region().data(), static_cast<int>(this->touchable_region().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.inputmethodservice.InputMethodServiceProto.InsetsProto.touchable_region");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InputMethodServiceProto_InsetsProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 content_top_insets = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->content_top_insets(), output);
  }

  // optional int32 visible_top_insets = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->visible_top_insets(), output);
  }

  // optional int32 touchable_insets = 3;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->touchable_insets(), output);
  }

  // optional string touchable_region = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->touchable_region().data(), static_cast<int>(this->touchable_region().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.inputmethodservice.InputMethodServiceProto.InsetsProto.touchable_region");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->touchable_region(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* InputMethodServiceProto_InsetsProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 content_top_insets = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->content_top_insets(), target);
  }

  // optional int32 visible_top_insets = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->visible_top_insets(), target);
  }

  // optional int32 touchable_insets = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->touchable_insets(), target);
  }

  // optional string touchable_region = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->touchable_region().data(), static_cast<int>(this->touchable_region().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.inputmethodservice.InputMethodServiceProto.InsetsProto.touchable_region");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->touchable_region(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
  return target;
}

size_t InputMethodServiceProto_InsetsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string touchable_region = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->touchable_region());
    }

    // optional int32 content_top_insets = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->content_top_insets());
    }

    // optional int32 visible_top_insets = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->visible_top_insets());
    }

    // optional int32 touchable_insets = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->touchable_insets());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputMethodServiceProto_InsetsProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const InputMethodServiceProto_InsetsProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputMethodServiceProto_InsetsProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
    MergeFrom(*source);
  }
}

void InputMethodServiceProto_InsetsProto::MergeFrom(const InputMethodServiceProto_InsetsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      touchable_region_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.touchable_region_);
    }
    if (cached_has_bits & 0x00000002u) {
      content_top_insets_ = from.content_top_insets_;
    }
    if (cached_has_bits & 0x00000004u) {
      visible_top_insets_ = from.visible_top_insets_;
    }
    if (cached_has_bits & 0x00000008u) {
      touchable_insets_ = from.touchable_insets_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InputMethodServiceProto_InsetsProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputMethodServiceProto_InsetsProto::CopyFrom(const InputMethodServiceProto_InsetsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.inputmethodservice.InputMethodServiceProto.InsetsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputMethodServiceProto_InsetsProto::IsInitialized() const {
  return true;
}

void InputMethodServiceProto_InsetsProto::InternalSwap(InputMethodServiceProto_InsetsProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  touchable_region_.Swap(&other->touchable_region_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(content_top_insets_, other->content_top_insets_);
  swap(visible_top_insets_, other->visible_top_insets_);
  swap(touchable_insets_, other->touchable_insets_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputMethodServiceProto_InsetsProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InputMethodServiceProto::InitAsDefaultInstance() {
  ::android::inputmethodservice::_InputMethodServiceProto_default_instance_._instance.get_mutable()->soft_input_window_ = const_cast< ::android::inputmethodservice::SoftInputWindowProto*>(
      ::android::inputmethodservice::SoftInputWindowProto::internal_default_instance());
  ::android::inputmethodservice::_InputMethodServiceProto_default_instance_._instance.get_mutable()->input_editor_info_ = const_cast< ::android::view::inputmethod::EditorInfoProto*>(
      ::android::view::inputmethod::EditorInfoProto::internal_default_instance());
  ::android::inputmethodservice::_InputMethodServiceProto_default_instance_._instance.get_mutable()->last_computed_insets_ = const_cast< ::android::inputmethodservice::InputMethodServiceProto_InsetsProto*>(
      ::android::inputmethodservice::InputMethodServiceProto_InsetsProto::internal_default_instance());
  ::android::inputmethodservice::_InputMethodServiceProto_default_instance_._instance.get_mutable()->input_connection_call_ = const_cast< ::android::view::inputmethod::InputConnectionCallProto*>(
      ::android::view::inputmethod::InputConnectionCallProto::internal_default_instance());
}
class InputMethodServiceProto::_Internal {
 public:
  using HasBits = decltype(std::declval<InputMethodServiceProto>()._has_bits_);
  static const ::android::inputmethodservice::SoftInputWindowProto& soft_input_window(const InputMethodServiceProto* msg);
  static void set_has_soft_input_window(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_views_created(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_decor_view_visible(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_decor_view_was_visible(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_window_visible(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_in_show_window(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_configuration(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_token(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_input_binding(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_input_started(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_input_view_started(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_candidates_view_started(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::android::view::inputmethod::EditorInfoProto& input_editor_info(const InputMethodServiceProto* msg);
  static void set_has_input_editor_info(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_show_input_requested(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_last_show_input_requested(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_show_input_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_candidates_visibility(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_fullscreen_applied(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_is_fullscreen(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_extract_view_hidden(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_extracted_token(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_is_input_view_shown(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_status_icon(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static const ::android::inputmethodservice::InputMethodServiceProto_InsetsProto& last_computed_insets(const InputMethodServiceProto* msg);
  static void set_has_last_computed_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_settings_observer(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::android::view::inputmethod::InputConnectionCallProto& input_connection_call(const InputMethodServiceProto* msg);
  static void set_has_input_connection_call(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

const ::android::inputmethodservice::SoftInputWindowProto&
InputMethodServiceProto::_Internal::soft_input_window(const InputMethodServiceProto* msg) {
  return *msg->soft_input_window_;
}
const ::android::view::inputmethod::EditorInfoProto&
InputMethodServiceProto::_Internal::input_editor_info(const InputMethodServiceProto* msg) {
  return *msg->input_editor_info_;
}
const ::android::inputmethodservice::InputMethodServiceProto_InsetsProto&
InputMethodServiceProto::_Internal::last_computed_insets(const InputMethodServiceProto* msg) {
  return *msg->last_computed_insets_;
}
const ::android::view::inputmethod::InputConnectionCallProto&
InputMethodServiceProto::_Internal::input_connection_call(const InputMethodServiceProto* msg) {
  return *msg->input_connection_call_;
}
void InputMethodServiceProto::clear_soft_input_window() {
  if (soft_input_window_ != nullptr) soft_input_window_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void InputMethodServiceProto::clear_input_editor_info() {
  if (input_editor_info_ != nullptr) input_editor_info_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
void InputMethodServiceProto::clear_input_connection_call() {
  if (input_connection_call_ != nullptr) input_connection_call_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
InputMethodServiceProto::InputMethodServiceProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.inputmethodservice.InputMethodServiceProto)
}
InputMethodServiceProto::InputMethodServiceProto(const InputMethodServiceProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  configuration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_configuration()) {
    configuration_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.configuration_);
  }
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  input_binding_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_input_binding()) {
    input_binding_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_binding_);
  }
  settings_observer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_settings_observer()) {
    settings_observer_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.settings_observer_);
  }
  if (from.has_soft_input_window()) {
    soft_input_window_ = new ::android::inputmethodservice::SoftInputWindowProto(*from.soft_input_window_);
  } else {
    soft_input_window_ = nullptr;
  }
  if (from.has_input_editor_info()) {
    input_editor_info_ = new ::android::view::inputmethod::EditorInfoProto(*from.input_editor_info_);
  } else {
    input_editor_info_ = nullptr;
  }
  if (from.has_last_computed_insets()) {
    last_computed_insets_ = new ::android::inputmethodservice::InputMethodServiceProto_InsetsProto(*from.last_computed_insets_);
  } else {
    last_computed_insets_ = nullptr;
  }
  if (from.has_input_connection_call()) {
    input_connection_call_ = new ::android::view::inputmethod::InputConnectionCallProto(*from.input_connection_call_);
  } else {
    input_connection_call_ = nullptr;
  }
  ::memcpy(&views_created_, &from.views_created_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_icon_) -
    reinterpret_cast<char*>(&views_created_)) + sizeof(status_icon_));
  // @@protoc_insertion_point(copy_constructor:android.inputmethodservice.InputMethodServiceProto)
}

void InputMethodServiceProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputMethodServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto.base);
  configuration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  input_binding_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  settings_observer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&soft_input_window_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_icon_) -
      reinterpret_cast<char*>(&soft_input_window_)) + sizeof(status_icon_));
}

InputMethodServiceProto::~InputMethodServiceProto() {
  // @@protoc_insertion_point(destructor:android.inputmethodservice.InputMethodServiceProto)
  SharedDtor();
}

void InputMethodServiceProto::SharedDtor() {
  configuration_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  input_binding_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  settings_observer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete soft_input_window_;
  if (this != internal_default_instance()) delete input_editor_info_;
  if (this != internal_default_instance()) delete last_computed_insets_;
  if (this != internal_default_instance()) delete input_connection_call_;
}

void InputMethodServiceProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputMethodServiceProto& InputMethodServiceProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputMethodServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2finputmethodservice_2finputmethodservice_2eproto.base);
  return *internal_default_instance();
}


void InputMethodServiceProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.inputmethodservice.InputMethodServiceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      configuration_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      input_binding_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      settings_observer_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(soft_input_window_ != nullptr);
      soft_input_window_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(input_editor_info_ != nullptr);
      input_editor_info_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(last_computed_insets_ != nullptr);
      last_computed_insets_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(input_connection_call_ != nullptr);
      input_connection_call_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&views_created_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&candidates_view_started_) -
        reinterpret_cast<char*>(&views_created_)) + sizeof(candidates_view_started_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&show_input_requested_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&extract_view_hidden_) -
        reinterpret_cast<char*>(&show_input_requested_)) + sizeof(extract_view_hidden_));
  }
  if (cached_has_bits & 0x03000000u) {
    ::memset(&is_input_view_shown_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&status_icon_) -
        reinterpret_cast<char*>(&is_input_view_shown_)) + sizeof(status_icon_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InputMethodServiceProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.inputmethodservice.SoftInputWindowProto soft_input_window = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_soft_input_window(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool views_created = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_views_created(&has_bits);
          views_created_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool decor_view_visible = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_decor_view_visible(&has_bits);
          decor_view_visible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool decor_view_was_visible = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_decor_view_was_visible(&has_bits);
          decor_view_was_visible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool window_visible = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_window_visible(&has_bits);
          window_visible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool in_show_window = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_in_show_window(&has_bits);
          in_show_window_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string configuration = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_configuration(), ptr, ctx, "android.inputmethodservice.InputMethodServiceProto.configuration");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string token = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_token(), ptr, ctx, "android.inputmethodservice.InputMethodServiceProto.token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string input_binding = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_input_binding(), ptr, ctx, "android.inputmethodservice.InputMethodServiceProto.input_binding");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool input_started = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_input_started(&has_bits);
          input_started_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool input_view_started = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_input_view_started(&has_bits);
          input_view_started_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool candidates_view_started = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_candidates_view_started(&has_bits);
          candidates_view_started_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.inputmethod.EditorInfoProto input_editor_info = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(mutable_input_editor_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool show_input_requested = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_show_input_requested(&has_bits);
          show_input_requested_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool last_show_input_requested = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_last_show_input_requested(&has_bits);
          last_show_input_requested_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 show_input_flags = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_show_input_flags(&has_bits);
          show_input_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 candidates_visibility = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          _Internal::set_has_candidates_visibility(&has_bits);
          candidates_visibility_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool fullscreen_applied = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_fullscreen_applied(&has_bits);
          fullscreen_applied_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_fullscreen = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          _Internal::set_has_is_fullscreen(&has_bits);
          is_fullscreen_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool extract_view_hidden = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_extract_view_hidden(&has_bits);
          extract_view_hidden_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 extracted_token = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          _Internal::set_has_extracted_token(&has_bits);
          extracted_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_input_view_shown = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_is_input_view_shown(&has_bits);
          is_input_view_shown_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 status_icon = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          _Internal::set_has_status_icon(&has_bits);
          status_icon_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.inputmethodservice.InputMethodServiceProto.InsetsProto last_computed_insets = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(mutable_last_computed_insets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string settings_observer = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_settings_observer(), ptr, ctx, "android.inputmethodservice.InputMethodServiceProto.settings_observer");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.inputmethod.InputConnectionCallProto input_connection_call = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr = ctx->ParseMessage(mutable_input_connection_call(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InputMethodServiceProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.inputmethodservice.InputMethodServiceProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.inputmethodservice.SoftInputWindowProto soft_input_window = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_soft_input_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool views_created = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_views_created(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &views_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool decor_view_visible = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_decor_view_visible(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &decor_view_visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool decor_view_was_visible = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_decor_view_was_visible(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &decor_view_was_visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool window_visible = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_window_visible(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &window_visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool in_show_window = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_in_show_window(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &in_show_window_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string configuration = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_configuration()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->configuration().data(), static_cast<int>(this->configuration().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.inputmethodservice.InputMethodServiceProto.configuration");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string token = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.inputmethodservice.InputMethodServiceProto.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string input_binding = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_input_binding()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->input_binding().data(), static_cast<int>(this->input_binding().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.inputmethodservice.InputMethodServiceProto.input_binding");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool input_started = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          _Internal::set_has_input_started(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &input_started_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool input_view_started = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          _Internal::set_has_input_view_started(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &input_view_started_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool candidates_view_started = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {
          _Internal::set_has_candidates_view_started(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &candidates_view_started_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.inputmethod.EditorInfoProto input_editor_info = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_input_editor_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_input_requested = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          _Internal::set_has_show_input_requested(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_input_requested_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool last_show_input_requested = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (120 & 0xFF)) {
          _Internal::set_has_last_show_input_requested(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &last_show_input_requested_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 show_input_flags = 18;
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (144 & 0xFF)) {
          _Internal::set_has_show_input_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &show_input_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 candidates_visibility = 19;
      case 19: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (152 & 0xFF)) {
          _Internal::set_has_candidates_visibility(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &candidates_visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool fullscreen_applied = 20;
      case 20: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (160 & 0xFF)) {
          _Internal::set_has_fullscreen_applied(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fullscreen_applied_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_fullscreen = 21;
      case 21: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (168 & 0xFF)) {
          _Internal::set_has_is_fullscreen(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_fullscreen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool extract_view_hidden = 22;
      case 22: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (176 & 0xFF)) {
          _Internal::set_has_extract_view_hidden(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &extract_view_hidden_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 extracted_token = 23;
      case 23: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (184 & 0xFF)) {
          _Internal::set_has_extracted_token(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &extracted_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_input_view_shown = 24;
      case 24: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (192 & 0xFF)) {
          _Internal::set_has_is_input_view_shown(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_input_view_shown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 status_icon = 25;
      case 25: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (200 & 0xFF)) {
          _Internal::set_has_status_icon(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.inputmethodservice.InputMethodServiceProto.InsetsProto last_computed_insets = 26;
      case 26: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (210 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_last_computed_insets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string settings_observer = 27;
      case 27: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (218 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_settings_observer()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->settings_observer().data(), static_cast<int>(this->settings_observer().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.inputmethodservice.InputMethodServiceProto.settings_observer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.inputmethod.InputConnectionCallProto input_connection_call = 28;
      case 28: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (226 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_input_connection_call()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.inputmethodservice.InputMethodServiceProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.inputmethodservice.InputMethodServiceProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InputMethodServiceProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.inputmethodservice.InputMethodServiceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.inputmethodservice.SoftInputWindowProto soft_input_window = 1;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::soft_input_window(this), output);
  }

  // optional bool views_created = 2;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->views_created(), output);
  }

  // optional bool decor_view_visible = 3;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->decor_view_visible(), output);
  }

  // optional bool decor_view_was_visible = 4;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(4, this->decor_view_was_visible(), output);
  }

  // optional bool window_visible = 5;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(5, this->window_visible(), output);
  }

  // optional bool in_show_window = 6;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->in_show_window(), output);
  }

  // optional string configuration = 7;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->configuration().data(), static_cast<int>(this->configuration().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.inputmethodservice.InputMethodServiceProto.configuration");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->configuration(), output);
  }

  // optional string token = 8;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.inputmethodservice.InputMethodServiceProto.token");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->token(), output);
  }

  // optional string input_binding = 9;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input_binding().data(), static_cast<int>(this->input_binding().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.inputmethodservice.InputMethodServiceProto.input_binding");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->input_binding(), output);
  }

  // optional bool input_started = 10;
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(10, this->input_started(), output);
  }

  // optional bool input_view_started = 11;
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(11, this->input_view_started(), output);
  }

  // optional bool candidates_view_started = 12;
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(12, this->candidates_view_started(), output);
  }

  // optional .android.view.inputmethod.EditorInfoProto input_editor_info = 13;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, _Internal::input_editor_info(this), output);
  }

  // optional bool show_input_requested = 14;
  if (cached_has_bits & 0x00010000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(14, this->show_input_requested(), output);
  }

  // optional bool last_show_input_requested = 15;
  if (cached_has_bits & 0x00020000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(15, this->last_show_input_requested(), output);
  }

  // optional int32 show_input_flags = 18;
  if (cached_has_bits & 0x00100000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(18, this->show_input_flags(), output);
  }

  // optional int32 candidates_visibility = 19;
  if (cached_has_bits & 0x00200000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(19, this->candidates_visibility(), output);
  }

  // optional bool fullscreen_applied = 20;
  if (cached_has_bits & 0x00040000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(20, this->fullscreen_applied(), output);
  }

  // optional bool is_fullscreen = 21;
  if (cached_has_bits & 0x00080000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(21, this->is_fullscreen(), output);
  }

  // optional bool extract_view_hidden = 22;
  if (cached_has_bits & 0x00800000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(22, this->extract_view_hidden(), output);
  }

  // optional int32 extracted_token = 23;
  if (cached_has_bits & 0x00400000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(23, this->extracted_token(), output);
  }

  // optional bool is_input_view_shown = 24;
  if (cached_has_bits & 0x01000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(24, this->is_input_view_shown(), output);
  }

  // optional int32 status_icon = 25;
  if (cached_has_bits & 0x02000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(25, this->status_icon(), output);
  }

  // optional .android.inputmethodservice.InputMethodServiceProto.InsetsProto last_computed_insets = 26;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, _Internal::last_computed_insets(this), output);
  }

  // optional string settings_observer = 27;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->settings_observer().data(), static_cast<int>(this->settings_observer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.inputmethodservice.InputMethodServiceProto.settings_observer");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->settings_observer(), output);
  }

  // optional .android.view.inputmethod.InputConnectionCallProto input_connection_call = 28;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, _Internal::input_connection_call(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.inputmethodservice.InputMethodServiceProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* InputMethodServiceProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.inputmethodservice.InputMethodServiceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.inputmethodservice.SoftInputWindowProto soft_input_window = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::soft_input_window(this), target);
  }

  // optional bool views_created = 2;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->views_created(), target);
  }

  // optional bool decor_view_visible = 3;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->decor_view_visible(), target);
  }

  // optional bool decor_view_was_visible = 4;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->decor_view_was_visible(), target);
  }

  // optional bool window_visible = 5;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->window_visible(), target);
  }

  // optional bool in_show_window = 6;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->in_show_window(), target);
  }

  // optional string configuration = 7;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->configuration().data(), static_cast<int>(this->configuration().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.inputmethodservice.InputMethodServiceProto.configuration");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        7, this->configuration(), target);
  }

  // optional string token = 8;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.inputmethodservice.InputMethodServiceProto.token");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        8, this->token(), target);
  }

  // optional string input_binding = 9;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input_binding().data(), static_cast<int>(this->input_binding().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.inputmethodservice.InputMethodServiceProto.input_binding");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        9, this->input_binding(), target);
  }

  // optional bool input_started = 10;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->input_started(), target);
  }

  // optional bool input_view_started = 11;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->input_view_started(), target);
  }

  // optional bool candidates_view_started = 12;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->candidates_view_started(), target);
  }

  // optional .android.view.inputmethod.EditorInfoProto input_editor_info = 13;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, _Internal::input_editor_info(this), target);
  }

  // optional bool show_input_requested = 14;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->show_input_requested(), target);
  }

  // optional bool last_show_input_requested = 15;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(15, this->last_show_input_requested(), target);
  }

  // optional int32 show_input_flags = 18;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(18, this->show_input_flags(), target);
  }

  // optional int32 candidates_visibility = 19;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->candidates_visibility(), target);
  }

  // optional bool fullscreen_applied = 20;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(20, this->fullscreen_applied(), target);
  }

  // optional bool is_fullscreen = 21;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(21, this->is_fullscreen(), target);
  }

  // optional bool extract_view_hidden = 22;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(22, this->extract_view_hidden(), target);
  }

  // optional int32 extracted_token = 23;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(23, this->extracted_token(), target);
  }

  // optional bool is_input_view_shown = 24;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(24, this->is_input_view_shown(), target);
  }

  // optional int32 status_icon = 25;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(25, this->status_icon(), target);
  }

  // optional .android.inputmethodservice.InputMethodServiceProto.InsetsProto last_computed_insets = 26;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, _Internal::last_computed_insets(this), target);
  }

  // optional string settings_observer = 27;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->settings_observer().data(), static_cast<int>(this->settings_observer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.inputmethodservice.InputMethodServiceProto.settings_observer");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        27, this->settings_observer(), target);
  }

  // optional .android.view.inputmethod.InputConnectionCallProto input_connection_call = 28;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, _Internal::input_connection_call(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.inputmethodservice.InputMethodServiceProto)
  return target;
}

size_t InputMethodServiceProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.inputmethodservice.InputMethodServiceProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string configuration = 7;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->configuration());
    }

    // optional string token = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->token());
    }

    // optional string input_binding = 9;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->input_binding());
    }

    // optional string settings_observer = 27;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->settings_observer());
    }

    // optional .android.inputmethodservice.SoftInputWindowProto soft_input_window = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *soft_input_window_);
    }

    // optional .android.view.inputmethod.EditorInfoProto input_editor_info = 13;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *input_editor_info_);
    }

    // optional .android.inputmethodservice.InputMethodServiceProto.InsetsProto last_computed_insets = 26;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *last_computed_insets_);
    }

    // optional .android.view.inputmethod.InputConnectionCallProto input_connection_call = 28;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *input_connection_call_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool views_created = 2;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 1;
    }

    // optional bool decor_view_visible = 3;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

    // optional bool decor_view_was_visible = 4;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool window_visible = 5;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool in_show_window = 6;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional bool input_started = 10;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

    // optional bool input_view_started = 11;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 + 1;
    }

    // optional bool candidates_view_started = 12;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool show_input_requested = 14;
    if (cached_has_bits & 0x00010000u) {
      total_size += 1 + 1;
    }

    // optional bool last_show_input_requested = 15;
    if (cached_has_bits & 0x00020000u) {
      total_size += 1 + 1;
    }

    // optional bool fullscreen_applied = 20;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool is_fullscreen = 21;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional int32 show_input_flags = 18;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->show_input_flags());
    }

    // optional int32 candidates_visibility = 19;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->candidates_visibility());
    }

    // optional int32 extracted_token = 23;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->extracted_token());
    }

    // optional bool extract_view_hidden = 22;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x03000000u) {
    // optional bool is_input_view_shown = 24;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional int32 status_icon = 25;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->status_icon());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputMethodServiceProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.inputmethodservice.InputMethodServiceProto)
  GOOGLE_DCHECK_NE(&from, this);
  const InputMethodServiceProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputMethodServiceProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.inputmethodservice.InputMethodServiceProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.inputmethodservice.InputMethodServiceProto)
    MergeFrom(*source);
  }
}

void InputMethodServiceProto::MergeFrom(const InputMethodServiceProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.inputmethodservice.InputMethodServiceProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      configuration_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.configuration_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      input_binding_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_binding_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      settings_observer_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.settings_observer_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_soft_input_window()->::android::inputmethodservice::SoftInputWindowProto::MergeFrom(from.soft_input_window());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_input_editor_info()->::android::view::inputmethod::EditorInfoProto::MergeFrom(from.input_editor_info());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_last_computed_insets()->::android::inputmethodservice::InputMethodServiceProto_InsetsProto::MergeFrom(from.last_computed_insets());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_input_connection_call()->::android::view::inputmethod::InputConnectionCallProto::MergeFrom(from.input_connection_call());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      views_created_ = from.views_created_;
    }
    if (cached_has_bits & 0x00000200u) {
      decor_view_visible_ = from.decor_view_visible_;
    }
    if (cached_has_bits & 0x00000400u) {
      decor_view_was_visible_ = from.decor_view_was_visible_;
    }
    if (cached_has_bits & 0x00000800u) {
      window_visible_ = from.window_visible_;
    }
    if (cached_has_bits & 0x00001000u) {
      in_show_window_ = from.in_show_window_;
    }
    if (cached_has_bits & 0x00002000u) {
      input_started_ = from.input_started_;
    }
    if (cached_has_bits & 0x00004000u) {
      input_view_started_ = from.input_view_started_;
    }
    if (cached_has_bits & 0x00008000u) {
      candidates_view_started_ = from.candidates_view_started_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      show_input_requested_ = from.show_input_requested_;
    }
    if (cached_has_bits & 0x00020000u) {
      last_show_input_requested_ = from.last_show_input_requested_;
    }
    if (cached_has_bits & 0x00040000u) {
      fullscreen_applied_ = from.fullscreen_applied_;
    }
    if (cached_has_bits & 0x00080000u) {
      is_fullscreen_ = from.is_fullscreen_;
    }
    if (cached_has_bits & 0x00100000u) {
      show_input_flags_ = from.show_input_flags_;
    }
    if (cached_has_bits & 0x00200000u) {
      candidates_visibility_ = from.candidates_visibility_;
    }
    if (cached_has_bits & 0x00400000u) {
      extracted_token_ = from.extracted_token_;
    }
    if (cached_has_bits & 0x00800000u) {
      extract_view_hidden_ = from.extract_view_hidden_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x03000000u) {
    if (cached_has_bits & 0x01000000u) {
      is_input_view_shown_ = from.is_input_view_shown_;
    }
    if (cached_has_bits & 0x02000000u) {
      status_icon_ = from.status_icon_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InputMethodServiceProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.inputmethodservice.InputMethodServiceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputMethodServiceProto::CopyFrom(const InputMethodServiceProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.inputmethodservice.InputMethodServiceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputMethodServiceProto::IsInitialized() const {
  return true;
}

void InputMethodServiceProto::InternalSwap(InputMethodServiceProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  configuration_.Swap(&other->configuration_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  input_binding_.Swap(&other->input_binding_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  settings_observer_.Swap(&other->settings_observer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(soft_input_window_, other->soft_input_window_);
  swap(input_editor_info_, other->input_editor_info_);
  swap(last_computed_insets_, other->last_computed_insets_);
  swap(input_connection_call_, other->input_connection_call_);
  swap(views_created_, other->views_created_);
  swap(decor_view_visible_, other->decor_view_visible_);
  swap(decor_view_was_visible_, other->decor_view_was_visible_);
  swap(window_visible_, other->window_visible_);
  swap(in_show_window_, other->in_show_window_);
  swap(input_started_, other->input_started_);
  swap(input_view_started_, other->input_view_started_);
  swap(candidates_view_started_, other->candidates_view_started_);
  swap(show_input_requested_, other->show_input_requested_);
  swap(last_show_input_requested_, other->last_show_input_requested_);
  swap(fullscreen_applied_, other->fullscreen_applied_);
  swap(is_fullscreen_, other->is_fullscreen_);
  swap(show_input_flags_, other->show_input_flags_);
  swap(candidates_visibility_, other->candidates_visibility_);
  swap(extracted_token_, other->extracted_token_);
  swap(extract_view_hidden_, other->extract_view_hidden_);
  swap(is_input_view_shown_, other->is_input_view_shown_);
  swap(status_icon_, other->status_icon_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputMethodServiceProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace inputmethodservice
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::inputmethodservice::InputMethodServiceProto_InsetsProto* Arena::CreateMaybeMessage< ::android::inputmethodservice::InputMethodServiceProto_InsetsProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::inputmethodservice::InputMethodServiceProto_InsetsProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::inputmethodservice::InputMethodServiceProto* Arena::CreateMaybeMessage< ::android::inputmethodservice::InputMethodServiceProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::inputmethodservice::InputMethodServiceProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
