// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/bluetooth_manager_service.proto

#include "frameworks/base/core/proto/android/server/bluetooth_manager_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BluetoothManagerServiceDumpProto_ActiveLog_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto;
namespace com {
namespace android {
namespace server {
class BluetoothManagerServiceDumpProto_ActiveLogDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BluetoothManagerServiceDumpProto_ActiveLog> _instance;
} _BluetoothManagerServiceDumpProto_ActiveLog_default_instance_;
class BluetoothManagerServiceDumpProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BluetoothManagerServiceDumpProto> _instance;
} _BluetoothManagerServiceDumpProto_default_instance_;
}  // namespace server
}  // namespace android
}  // namespace com
static void InitDefaultsscc_info_BluetoothManagerServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::_BluetoothManagerServiceDumpProto_default_instance_;
    new (ptr) ::com::android::server::BluetoothManagerServiceDumpProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::BluetoothManagerServiceDumpProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BluetoothManagerServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_BluetoothManagerServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto}, {
      &scc_info_BluetoothManagerServiceDumpProto_ActiveLog_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_BluetoothManagerServiceDumpProto_ActiveLog_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::_BluetoothManagerServiceDumpProto_ActiveLog_default_instance_;
    new (ptr) ::com::android::server::BluetoothManagerServiceDumpProto_ActiveLog();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::BluetoothManagerServiceDumpProto_ActiveLog::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BluetoothManagerServiceDumpProto_ActiveLog_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_BluetoothManagerServiceDumpProto_ActiveLog_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto_ActiveLog, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto_ActiveLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto_ActiveLog, timestamp_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto_ActiveLog, enable_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto_ActiveLog, package_name_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto_ActiveLog, reason_),
  1,
  2,
  0,
  3,
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, enabled_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, state_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, state_name_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, address_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, name_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, last_enabled_time_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, curr_timestamp_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, active_logs_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, num_crashes_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, crash_log_maxed_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, crash_timestamps_ms_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, num_ble_apps_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::BluetoothManagerServiceDumpProto, ble_app_package_names_),
  4,
  3,
  0,
  1,
  2,
  6,
  7,
  ~0u,
  8,
  5,
  ~0u,
  9,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::com::android::server::BluetoothManagerServiceDumpProto_ActiveLog)},
  { 13, 31, sizeof(::com::android::server::BluetoothManagerServiceDumpProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::_BluetoothManagerServiceDumpProto_ActiveLog_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::_BluetoothManagerServiceDumpProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nIframeworks/base/core/proto/android/ser"
  "ver/bluetooth_manager_service.proto\022\022com"
  ".android.server\0320frameworks/base/core/pr"
  "oto/android/privacy.proto\032:frameworks/pr"
  "oto_logging/stats/enums/bluetooth/enums."
  "proto\"\263\004\n BluetoothManagerServiceDumpPro"
  "to\022\017\n\007enabled\030\001 \001(\010\022\r\n\005state\030\002 \001(\005\022\022\n\nst"
  "ate_name\030\003 \001(\t\022\031\n\007address\030\004 \001(\tB\010\232\237\325\207\003\002\010"
  "d\022\026\n\004name\030\005 \001(\tB\010\232\237\325\207\003\002\010d\022\034\n\024last_enable"
  "d_time_ms\030\006 \001(\003\022\031\n\021curr_timestamp_ms\030\007 \001"
  "(\003\022S\n\013active_logs\030\010 \003(\0132>.com.android.se"
  "rver.BluetoothManagerServiceDumpProto.Ac"
  "tiveLog\022\023\n\013num_crashes\030\t \001(\005\022\027\n\017crash_lo"
  "g_maxed\030\n \001(\010\022\033\n\023crash_timestamps_ms\030\013 \003"
  "(\003\022\024\n\014num_ble_apps\030\014 \001(\005\022\035\n\025ble_app_pack"
  "age_names\030\r \003(\t\032\216\001\n\tActiveLog\022\024\n\014timesta"
  "mp_ms\030\001 \001(\003\022\016\n\006enable\030\002 \001(\010\022\024\n\014package_n"
  "ame\030\003 \001(\t\022:\n\006reason\030\004 \001(\0162*.android.blue"
  "tooth.EnableDisableReasonEnum:\t\232\237\325\207\003\003\010\310\001"
  ":\t\232\237\325\207\003\003\010\310\001B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto_deps[2] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
  &::descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fbluetooth_2fenums_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto_sccs[2] = {
  &scc_info_BluetoothManagerServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto.base,
  &scc_info_BluetoothManagerServiceDumpProto_ActiveLog_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto, "frameworks/base/core/proto/android/server/bluetooth_manager_service.proto", 775,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto_deps, 2, 2,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto, 2, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto), true);
namespace com {
namespace android {
namespace server {

// ===================================================================

void BluetoothManagerServiceDumpProto_ActiveLog::InitAsDefaultInstance() {
}
class BluetoothManagerServiceDumpProto_ActiveLog::_Internal {
 public:
  using HasBits = decltype(std::declval<BluetoothManagerServiceDumpProto_ActiveLog>()._has_bits_);
  static void set_has_timestamp_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_enable(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_package_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

BluetoothManagerServiceDumpProto_ActiveLog::BluetoothManagerServiceDumpProto_ActiveLog()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
}
BluetoothManagerServiceDumpProto_ActiveLog::BluetoothManagerServiceDumpProto_ActiveLog(const BluetoothManagerServiceDumpProto_ActiveLog& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_package_name()) {
    package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  ::memcpy(&timestamp_ms_, &from.timestamp_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&timestamp_ms_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
}

void BluetoothManagerServiceDumpProto_ActiveLog::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BluetoothManagerServiceDumpProto_ActiveLog_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto.base);
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&timestamp_ms_)) + sizeof(reason_));
}

BluetoothManagerServiceDumpProto_ActiveLog::~BluetoothManagerServiceDumpProto_ActiveLog() {
  // @@protoc_insertion_point(destructor:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
  SharedDtor();
}

void BluetoothManagerServiceDumpProto_ActiveLog::SharedDtor() {
  package_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BluetoothManagerServiceDumpProto_ActiveLog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BluetoothManagerServiceDumpProto_ActiveLog& BluetoothManagerServiceDumpProto_ActiveLog::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BluetoothManagerServiceDumpProto_ActiveLog_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto.base);
  return *internal_default_instance();
}


void BluetoothManagerServiceDumpProto_ActiveLog::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    package_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&timestamp_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reason_) -
        reinterpret_cast<char*>(&timestamp_ms_)) + sizeof(reason_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BluetoothManagerServiceDumpProto_ActiveLog::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int64 timestamp_ms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_timestamp_ms(&has_bits);
          timestamp_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool enable = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_enable(&has_bits);
          enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string package_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_package_name(), ptr, ctx, "com.android.server.BluetoothManagerServiceDumpProto.ActiveLog.package_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.bluetooth.EnableDisableReasonEnum reason = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::bluetooth::EnableDisableReasonEnum_IsValid(val))) {
            set_reason(static_cast<::android::bluetooth::EnableDisableReasonEnum>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BluetoothManagerServiceDumpProto_ActiveLog::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 timestamp_ms = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_timestamp_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_enable(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string package_name = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package_name().data(), static_cast<int>(this->package_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.BluetoothManagerServiceDumpProto.ActiveLog.package_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.bluetooth.EnableDisableReasonEnum reason = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::bluetooth::EnableDisableReasonEnum_IsValid(value)) {
            set_reason(static_cast< ::android::bluetooth::EnableDisableReasonEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BluetoothManagerServiceDumpProto_ActiveLog::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 timestamp_ms = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(1, this->timestamp_ms(), output);
  }

  // optional bool enable = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->enable(), output);
  }

  // optional string package_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.BluetoothManagerServiceDumpProto.ActiveLog.package_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->package_name(), output);
  }

  // optional .android.bluetooth.EnableDisableReasonEnum reason = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      4, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
}

::PROTOBUF_NAMESPACE_ID::uint8* BluetoothManagerServiceDumpProto_ActiveLog::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 timestamp_ms = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp_ms(), target);
  }

  // optional bool enable = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->enable(), target);
  }

  // optional string package_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.BluetoothManagerServiceDumpProto.ActiveLog.package_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->package_name(), target);
  }

  // optional .android.bluetooth.EnableDisableReasonEnum reason = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
  return target;
}

size_t BluetoothManagerServiceDumpProto_ActiveLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string package_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // optional int64 timestamp_ms = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->timestamp_ms());
    }

    // optional bool enable = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional .android.bluetooth.EnableDisableReasonEnum reason = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->reason());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BluetoothManagerServiceDumpProto_ActiveLog::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
  GOOGLE_DCHECK_NE(&from, this);
  const BluetoothManagerServiceDumpProto_ActiveLog* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BluetoothManagerServiceDumpProto_ActiveLog>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
    MergeFrom(*source);
  }
}

void BluetoothManagerServiceDumpProto_ActiveLog::MergeFrom(const BluetoothManagerServiceDumpProto_ActiveLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ms_ = from.timestamp_ms_;
    }
    if (cached_has_bits & 0x00000004u) {
      enable_ = from.enable_;
    }
    if (cached_has_bits & 0x00000008u) {
      reason_ = from.reason_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BluetoothManagerServiceDumpProto_ActiveLog::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BluetoothManagerServiceDumpProto_ActiveLog::CopyFrom(const BluetoothManagerServiceDumpProto_ActiveLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.BluetoothManagerServiceDumpProto.ActiveLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BluetoothManagerServiceDumpProto_ActiveLog::IsInitialized() const {
  return true;
}

void BluetoothManagerServiceDumpProto_ActiveLog::InternalSwap(BluetoothManagerServiceDumpProto_ActiveLog* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  package_name_.Swap(&other->package_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_ms_, other->timestamp_ms_);
  swap(enable_, other->enable_);
  swap(reason_, other->reason_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BluetoothManagerServiceDumpProto_ActiveLog::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BluetoothManagerServiceDumpProto::InitAsDefaultInstance() {
}
class BluetoothManagerServiceDumpProto::_Internal {
 public:
  using HasBits = decltype(std::declval<BluetoothManagerServiceDumpProto>()._has_bits_);
  static void set_has_enabled(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_state_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_address(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_last_enabled_time_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_curr_timestamp_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_num_crashes(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_crash_log_maxed(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_num_ble_apps(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

BluetoothManagerServiceDumpProto::BluetoothManagerServiceDumpProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.BluetoothManagerServiceDumpProto)
}
BluetoothManagerServiceDumpProto::BluetoothManagerServiceDumpProto(const BluetoothManagerServiceDumpProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      active_logs_(from.active_logs_),
      crash_timestamps_ms_(from.crash_timestamps_ms_),
      ble_app_package_names_(from.ble_app_package_names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_state_name()) {
    state_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.state_name_);
  }
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_ble_apps_) -
    reinterpret_cast<char*>(&state_)) + sizeof(num_ble_apps_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.BluetoothManagerServiceDumpProto)
}

void BluetoothManagerServiceDumpProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BluetoothManagerServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto.base);
  state_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_ble_apps_) -
      reinterpret_cast<char*>(&state_)) + sizeof(num_ble_apps_));
}

BluetoothManagerServiceDumpProto::~BluetoothManagerServiceDumpProto() {
  // @@protoc_insertion_point(destructor:com.android.server.BluetoothManagerServiceDumpProto)
  SharedDtor();
}

void BluetoothManagerServiceDumpProto::SharedDtor() {
  state_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BluetoothManagerServiceDumpProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BluetoothManagerServiceDumpProto& BluetoothManagerServiceDumpProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BluetoothManagerServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fbluetooth_5fmanager_5fservice_2eproto.base);
  return *internal_default_instance();
}


void BluetoothManagerServiceDumpProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.BluetoothManagerServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  active_logs_.Clear();
  crash_timestamps_ms_.Clear();
  ble_app_package_names_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      state_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      address_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&curr_timestamp_ms_) -
        reinterpret_cast<char*>(&state_)) + sizeof(curr_timestamp_ms_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&num_crashes_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_ble_apps_) -
        reinterpret_cast<char*>(&num_crashes_)) + sizeof(num_ble_apps_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BluetoothManagerServiceDumpProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool enabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_enabled(&has_bits);
          enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_state(&has_bits);
          state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string state_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_state_name(), ptr, ctx, "com.android.server.BluetoothManagerServiceDumpProto.state_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string address = 4 [(.android.privacy) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_address(), ptr, ctx, "com.android.server.BluetoothManagerServiceDumpProto.address");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 5 [(.android.privacy) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_name(), ptr, ctx, "com.android.server.BluetoothManagerServiceDumpProto.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 last_enabled_time_ms = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_last_enabled_time_ms(&has_bits);
          last_enabled_time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 curr_timestamp_ms = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_curr_timestamp_ms(&has_bits);
          curr_timestamp_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.BluetoothManagerServiceDumpProto.ActiveLog active_logs = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_active_logs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 66);
        } else goto handle_unusual;
        continue;
      // optional int32 num_crashes = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_num_crashes(&has_bits);
          num_crashes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool crash_log_maxed = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_crash_log_maxed(&has_bits);
          crash_log_maxed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 crash_timestamps_ms = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ptr -= 1;
          do {
            ptr += 1;
            add_crash_timestamps_ms(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 88);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(mutable_crash_timestamps_ms(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 num_ble_apps = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_num_ble_apps(&has_bits);
          num_ble_apps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string ble_app_package_names = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_ble_app_package_names(), ptr, ctx, "com.android.server.BluetoothManagerServiceDumpProto.ble_app_package_names");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 106);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BluetoothManagerServiceDumpProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.BluetoothManagerServiceDumpProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool enabled = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_enabled(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 state = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_state(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string state_name = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_state_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state_name().data(), static_cast<int>(this->state_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.BluetoothManagerServiceDumpProto.state_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string address = 4 [(.android.privacy) = {
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->address().data(), static_cast<int>(this->address().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.BluetoothManagerServiceDumpProto.address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 5 [(.android.privacy) = {
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.BluetoothManagerServiceDumpProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 last_enabled_time_ms = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_last_enabled_time_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_enabled_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 curr_timestamp_ms = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_curr_timestamp_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &curr_timestamp_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.BluetoothManagerServiceDumpProto.ActiveLog active_logs = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_active_logs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_crashes = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_num_crashes(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_crashes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool crash_log_maxed = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          _Internal::set_has_crash_log_maxed(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &crash_log_maxed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 crash_timestamps_ms = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 1, 88u, input, this->mutable_crash_timestamps_ms())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_crash_timestamps_ms())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_ble_apps = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {
          _Internal::set_has_num_ble_apps(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_ble_apps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string ble_app_package_names = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_ble_app_package_names()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ble_app_package_names(this->ble_app_package_names_size() - 1).data(),
            static_cast<int>(this->ble_app_package_names(this->ble_app_package_names_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.BluetoothManagerServiceDumpProto.ble_app_package_names");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.BluetoothManagerServiceDumpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.BluetoothManagerServiceDumpProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BluetoothManagerServiceDumpProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.BluetoothManagerServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool enabled = 1;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // optional int32 state = 2;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }

  // optional string state_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state_name().data(), static_cast<int>(this->state_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.BluetoothManagerServiceDumpProto.state_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->state_name(), output);
  }

  // optional string address = 4 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.BluetoothManagerServiceDumpProto.address");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address(), output);
  }

  // optional string name = 5 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.BluetoothManagerServiceDumpProto.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // optional int64 last_enabled_time_ms = 6;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(6, this->last_enabled_time_ms(), output);
  }

  // optional int64 curr_timestamp_ms = 7;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(7, this->curr_timestamp_ms(), output);
  }

  // repeated .com.android.server.BluetoothManagerServiceDumpProto.ActiveLog active_logs = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->active_logs_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->active_logs(static_cast<int>(i)),
      output);
  }

  // optional int32 num_crashes = 9;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(9, this->num_crashes(), output);
  }

  // optional bool crash_log_maxed = 10;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(10, this->crash_log_maxed(), output);
  }

  // repeated int64 crash_timestamps_ms = 11;
  for (int i = 0, n = this->crash_timestamps_ms_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(
      11, this->crash_timestamps_ms(i), output);
  }

  // optional int32 num_ble_apps = 12;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(12, this->num_ble_apps(), output);
  }

  // repeated string ble_app_package_names = 13;
  for (int i = 0, n = this->ble_app_package_names_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ble_app_package_names(i).data(), static_cast<int>(this->ble_app_package_names(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.BluetoothManagerServiceDumpProto.ble_app_package_names");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      13, this->ble_app_package_names(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.BluetoothManagerServiceDumpProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* BluetoothManagerServiceDumpProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.BluetoothManagerServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool enabled = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // optional int32 state = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }

  // optional string state_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state_name().data(), static_cast<int>(this->state_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.BluetoothManagerServiceDumpProto.state_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->state_name(), target);
  }

  // optional string address = 4 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.BluetoothManagerServiceDumpProto.address");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->address(), target);
  }

  // optional string name = 5 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.BluetoothManagerServiceDumpProto.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // optional int64 last_enabled_time_ms = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->last_enabled_time_ms(), target);
  }

  // optional int64 curr_timestamp_ms = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->curr_timestamp_ms(), target);
  }

  // repeated .com.android.server.BluetoothManagerServiceDumpProto.ActiveLog active_logs = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->active_logs_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->active_logs(static_cast<int>(i)), target);
  }

  // optional int32 num_crashes = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->num_crashes(), target);
  }

  // optional bool crash_log_maxed = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->crash_log_maxed(), target);
  }

  // repeated int64 crash_timestamps_ms = 11;
  target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
    WriteInt64ToArray(11, this->crash_timestamps_ms_, target);

  // optional int32 num_ble_apps = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->num_ble_apps(), target);
  }

  // repeated string ble_app_package_names = 13;
  for (int i = 0, n = this->ble_app_package_names_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ble_app_package_names(i).data(), static_cast<int>(this->ble_app_package_names(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.BluetoothManagerServiceDumpProto.ble_app_package_names");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(13, this->ble_app_package_names(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.BluetoothManagerServiceDumpProto)
  return target;
}

size_t BluetoothManagerServiceDumpProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.BluetoothManagerServiceDumpProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.BluetoothManagerServiceDumpProto.ActiveLog active_logs = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->active_logs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->active_logs(static_cast<int>(i)));
    }
  }

  // repeated int64 crash_timestamps_ms = 11;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->crash_timestamps_ms_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->crash_timestamps_ms_size());
    total_size += data_size;
  }

  // repeated string ble_app_package_names = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->ble_app_package_names_size());
  for (int i = 0, n = this->ble_app_package_names_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->ble_app_package_names(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string state_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->state_name());
    }

    // optional string address = 4 [(.android.privacy) = {
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->address());
    }

    // optional string name = 5 [(.android.privacy) = {
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 state = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->state());
    }

    // optional bool enabled = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool crash_log_maxed = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional int64 last_enabled_time_ms = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->last_enabled_time_ms());
    }

    // optional int64 curr_timestamp_ms = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->curr_timestamp_ms());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional int32 num_crashes = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->num_crashes());
    }

    // optional int32 num_ble_apps = 12;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->num_ble_apps());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BluetoothManagerServiceDumpProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.BluetoothManagerServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  const BluetoothManagerServiceDumpProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BluetoothManagerServiceDumpProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.BluetoothManagerServiceDumpProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.BluetoothManagerServiceDumpProto)
    MergeFrom(*source);
  }
}

void BluetoothManagerServiceDumpProto::MergeFrom(const BluetoothManagerServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.BluetoothManagerServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  active_logs_.MergeFrom(from.active_logs_);
  crash_timestamps_ms_.MergeFrom(from.crash_timestamps_ms_);
  ble_app_package_names_.MergeFrom(from.ble_app_package_names_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      state_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.state_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000008u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000010u) {
      enabled_ = from.enabled_;
    }
    if (cached_has_bits & 0x00000020u) {
      crash_log_maxed_ = from.crash_log_maxed_;
    }
    if (cached_has_bits & 0x00000040u) {
      last_enabled_time_ms_ = from.last_enabled_time_ms_;
    }
    if (cached_has_bits & 0x00000080u) {
      curr_timestamp_ms_ = from.curr_timestamp_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      num_crashes_ = from.num_crashes_;
    }
    if (cached_has_bits & 0x00000200u) {
      num_ble_apps_ = from.num_ble_apps_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BluetoothManagerServiceDumpProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.BluetoothManagerServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BluetoothManagerServiceDumpProto::CopyFrom(const BluetoothManagerServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.BluetoothManagerServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BluetoothManagerServiceDumpProto::IsInitialized() const {
  return true;
}

void BluetoothManagerServiceDumpProto::InternalSwap(BluetoothManagerServiceDumpProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&active_logs_)->InternalSwap(CastToBase(&other->active_logs_));
  crash_timestamps_ms_.InternalSwap(&other->crash_timestamps_ms_);
  ble_app_package_names_.InternalSwap(CastToBase(&other->ble_app_package_names_));
  state_name_.Swap(&other->state_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_, other->state_);
  swap(enabled_, other->enabled_);
  swap(crash_log_maxed_, other->crash_log_maxed_);
  swap(last_enabled_time_ms_, other->last_enabled_time_ms_);
  swap(curr_timestamp_ms_, other->curr_timestamp_ms_);
  swap(num_crashes_, other->num_crashes_);
  swap(num_ble_apps_, other->num_ble_apps_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BluetoothManagerServiceDumpProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::android::server::BluetoothManagerServiceDumpProto_ActiveLog* Arena::CreateMaybeMessage< ::com::android::server::BluetoothManagerServiceDumpProto_ActiveLog >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::BluetoothManagerServiceDumpProto_ActiveLog >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::BluetoothManagerServiceDumpProto* Arena::CreateMaybeMessage< ::com::android::server::BluetoothManagerServiceDumpProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::BluetoothManagerServiceDumpProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
