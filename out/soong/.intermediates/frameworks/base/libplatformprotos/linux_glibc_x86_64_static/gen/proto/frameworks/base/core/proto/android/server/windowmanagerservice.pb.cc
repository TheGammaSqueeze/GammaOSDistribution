// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/windowmanagerservice.proto

#include "frameworks/base/core/proto/android/server/windowmanagerservice.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ConfigurationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RectProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DisplayCutoutProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplayinfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DisplayInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplayinfo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssourcecontrol_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_InsetsSourceControlProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssourcecontrol_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InsetsSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fsurfacecontrol_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SurfaceControlProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fsurfacecontrol_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fwindowlayoutparams_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WindowLayoutParamsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fwindowlayoutparams_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<19> scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AppTransitionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BarControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConfigurationContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DisplayFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DisplayRotationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DockedTaskDividerControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IdentifierProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_KeyguardControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyguardOccludedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyguardServiceDelegateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PinnedTaskControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_RootWindowContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScreenRotationAnimationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsurfaceanimator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SurfaceAnimatorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsurfaceanimator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowcontainerthumbnail_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WindowContainerThumbnailProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowcontainerthumbnail_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_WindowFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_WindowManagerPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WindowOrientationListenerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_WindowStateAnimatorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WindowSurfaceControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
namespace com {
namespace android {
namespace server {
namespace wm {
class WindowManagerServiceDumpProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WindowManagerServiceDumpProto> _instance;
} _WindowManagerServiceDumpProto_default_instance_;
class RootWindowContainerProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RootWindowContainerProto> _instance;
} _RootWindowContainerProto_default_instance_;
class BarControllerProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BarControllerProto> _instance;
} _BarControllerProto_default_instance_;
class WindowOrientationListenerProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WindowOrientationListenerProto> _instance;
} _WindowOrientationListenerProto_default_instance_;
class KeyguardServiceDelegateProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<KeyguardServiceDelegateProto> _instance;
} _KeyguardServiceDelegateProto_default_instance_;
class KeyguardControllerProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<KeyguardControllerProto> _instance;
} _KeyguardControllerProto_default_instance_;
class KeyguardOccludedProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<KeyguardOccludedProto> _instance;
} _KeyguardOccludedProto_default_instance_;
class WindowManagerPolicyProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WindowManagerPolicyProto> _instance;
} _WindowManagerPolicyProto_default_instance_;
class AppTransitionProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AppTransitionProto> _instance;
} _AppTransitionProto_default_instance_;
class DisplayContentProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisplayContentProto> _instance;
} _DisplayContentProto_default_instance_;
class DisplayAreaProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisplayAreaProto> _instance;
} _DisplayAreaProto_default_instance_;
class DisplayAreaChildProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisplayAreaChildProto> _instance;
} _DisplayAreaChildProto_default_instance_;
class DisplayFramesProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisplayFramesProto> _instance;
} _DisplayFramesProto_default_instance_;
class DisplayRotationProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisplayRotationProto> _instance;
} _DisplayRotationProto_default_instance_;
class DockedTaskDividerControllerProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DockedTaskDividerControllerProto> _instance;
} _DockedTaskDividerControllerProto_default_instance_;
class PinnedTaskControllerProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PinnedTaskControllerProto> _instance;
} _PinnedTaskControllerProto_default_instance_;
class TaskProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TaskProto> _instance;
} _TaskProto_default_instance_;
class TaskFragmentProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TaskFragmentProto> _instance;
} _TaskFragmentProto_default_instance_;
class ActivityRecordProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActivityRecordProto> _instance;
} _ActivityRecordProto_default_instance_;
class WindowTokenProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WindowTokenProto> _instance;
} _WindowTokenProto_default_instance_;
class WindowStateProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WindowStateProto> _instance;
} _WindowStateProto_default_instance_;
class IdentifierProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IdentifierProto> _instance;
} _IdentifierProto_default_instance_;
class WindowStateAnimatorProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WindowStateAnimatorProto> _instance;
} _WindowStateAnimatorProto_default_instance_;
class WindowSurfaceControllerProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WindowSurfaceControllerProto> _instance;
} _WindowSurfaceControllerProto_default_instance_;
class ScreenRotationAnimationProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScreenRotationAnimationProto> _instance;
} _ScreenRotationAnimationProto_default_instance_;
class WindowContainerProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WindowContainerProto> _instance;
} _WindowContainerProto_default_instance_;
class WindowContainerChildProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WindowContainerChildProto> _instance;
} _WindowContainerChildProto_default_instance_;
class ConfigurationContainerProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigurationContainerProto> _instance;
} _ConfigurationContainerProto_default_instance_;
class WindowFramesProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WindowFramesProto> _instance;
} _WindowFramesProto_default_instance_;
class InsetsSourceProviderProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InsetsSourceProviderProto> _instance;
} _InsetsSourceProviderProto_default_instance_;
class ImeInsetsSourceProviderProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImeInsetsSourceProviderProto> _instance;
} _ImeInsetsSourceProviderProto_default_instance_;
}  // namespace wm
}  // namespace server
}  // namespace android
}  // namespace com
static void InitDefaultsscc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_DisplayContentProto_default_instance_;
    new (ptr) ::com::android::server::wm::DisplayContentProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::android::server::wm::_DisplayAreaProto_default_instance_;
    new (ptr) ::com::android::server::wm::DisplayAreaProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::android::server::wm::_DisplayAreaChildProto_default_instance_;
    new (ptr) ::com::android::server::wm::DisplayAreaChildProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::android::server::wm::_TaskProto_default_instance_;
    new (ptr) ::com::android::server::wm::TaskProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::android::server::wm::_TaskFragmentProto_default_instance_;
    new (ptr) ::com::android::server::wm::TaskFragmentProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::android::server::wm::_ActivityRecordProto_default_instance_;
    new (ptr) ::com::android::server::wm::ActivityRecordProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::android::server::wm::_WindowTokenProto_default_instance_;
    new (ptr) ::com::android::server::wm::WindowTokenProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::android::server::wm::_WindowStateProto_default_instance_;
    new (ptr) ::com::android::server::wm::WindowStateProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::android::server::wm::_WindowContainerProto_default_instance_;
    new (ptr) ::com::android::server::wm::WindowContainerProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::android::server::wm::_WindowContainerChildProto_default_instance_;
    new (ptr) ::com::android::server::wm::WindowContainerChildProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::android::server::wm::_InsetsSourceProviderProto_default_instance_;
    new (ptr) ::com::android::server::wm::InsetsSourceProviderProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::com::android::server::wm::_ImeInsetsSourceProviderProto_default_instance_;
    new (ptr) ::com::android::server::wm::ImeInsetsSourceProviderProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::DisplayContentProto::InitAsDefaultInstance();
  ::com::android::server::wm::DisplayAreaProto::InitAsDefaultInstance();
  ::com::android::server::wm::DisplayAreaChildProto::InitAsDefaultInstance();
  ::com::android::server::wm::TaskProto::InitAsDefaultInstance();
  ::com::android::server::wm::TaskFragmentProto::InitAsDefaultInstance();
  ::com::android::server::wm::ActivityRecordProto::InitAsDefaultInstance();
  ::com::android::server::wm::WindowTokenProto::InitAsDefaultInstance();
  ::com::android::server::wm::WindowStateProto::InitAsDefaultInstance();
  ::com::android::server::wm::WindowContainerProto::InitAsDefaultInstance();
  ::com::android::server::wm::WindowContainerChildProto::InitAsDefaultInstance();
  ::com::android::server::wm::InsetsSourceProviderProto::InitAsDefaultInstance();
  ::com::android::server::wm::ImeInsetsSourceProviderProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<19> scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 19, InitDefaultsscc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {
      &scc_info_WindowContainerThumbnailProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowcontainerthumbnail_2eproto.base,
      &scc_info_IdentifierProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_RectProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto.base,
      &scc_info_DockedTaskDividerControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_PinnedTaskControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_DisplayInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplayinfo_2eproto.base,
      &scc_info_ScreenRotationAnimationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_DisplayFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_AppTransitionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_DisplayRotationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_InsetsSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssource_2eproto.base,
      &scc_info_InsetsSourceControlProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssourcecontrol_2eproto.base,
      &scc_info_SurfaceControlProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fsurfacecontrol_2eproto.base,
      &scc_info_ConfigurationContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_SurfaceAnimatorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsurfaceanimator_2eproto.base,
      &scc_info_WindowLayoutParamsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fwindowlayoutparams_2eproto.base,
      &scc_info_WindowStateAnimatorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_DisplayCutoutProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto.base,
      &scc_info_WindowFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,}};

static void InitDefaultsscc_info_AppTransitionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_AppTransitionProto_default_instance_;
    new (ptr) ::com::android::server::wm::AppTransitionProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::AppTransitionProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AppTransitionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_AppTransitionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {}};

static void InitDefaultsscc_info_BarControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_BarControllerProto_default_instance_;
    new (ptr) ::com::android::server::wm::BarControllerProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::BarControllerProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BarControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_BarControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {}};

static void InitDefaultsscc_info_ConfigurationContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_ConfigurationContainerProto_default_instance_;
    new (ptr) ::com::android::server::wm::ConfigurationContainerProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::ConfigurationContainerProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConfigurationContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ConfigurationContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {
      &scc_info_ConfigurationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto.base,}};

static void InitDefaultsscc_info_DisplayFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_DisplayFramesProto_default_instance_;
    new (ptr) ::com::android::server::wm::DisplayFramesProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::DisplayFramesProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DisplayFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_DisplayFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {
      &scc_info_RectProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto.base,}};

static void InitDefaultsscc_info_DisplayRotationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_DisplayRotationProto_default_instance_;
    new (ptr) ::com::android::server::wm::DisplayRotationProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::DisplayRotationProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DisplayRotationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_DisplayRotationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {}};

static void InitDefaultsscc_info_DockedTaskDividerControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_DockedTaskDividerControllerProto_default_instance_;
    new (ptr) ::com::android::server::wm::DockedTaskDividerControllerProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::DockedTaskDividerControllerProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DockedTaskDividerControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_DockedTaskDividerControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {}};

static void InitDefaultsscc_info_IdentifierProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_IdentifierProto_default_instance_;
    new (ptr) ::com::android::server::wm::IdentifierProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::IdentifierProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IdentifierProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_IdentifierProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {}};

static void InitDefaultsscc_info_KeyguardControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_KeyguardControllerProto_default_instance_;
    new (ptr) ::com::android::server::wm::KeyguardControllerProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::KeyguardControllerProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_KeyguardControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_KeyguardControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {
      &scc_info_KeyguardOccludedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,}};

static void InitDefaultsscc_info_KeyguardOccludedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_KeyguardOccludedProto_default_instance_;
    new (ptr) ::com::android::server::wm::KeyguardOccludedProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::KeyguardOccludedProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyguardOccludedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_KeyguardOccludedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {}};

static void InitDefaultsscc_info_KeyguardServiceDelegateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_KeyguardServiceDelegateProto_default_instance_;
    new (ptr) ::com::android::server::wm::KeyguardServiceDelegateProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::KeyguardServiceDelegateProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyguardServiceDelegateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_KeyguardServiceDelegateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {}};

static void InitDefaultsscc_info_PinnedTaskControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_PinnedTaskControllerProto_default_instance_;
    new (ptr) ::com::android::server::wm::PinnedTaskControllerProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::PinnedTaskControllerProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PinnedTaskControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_PinnedTaskControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {
      &scc_info_RectProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto.base,}};

static void InitDefaultsscc_info_RootWindowContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_RootWindowContainerProto_default_instance_;
    new (ptr) ::com::android::server::wm::RootWindowContainerProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::RootWindowContainerProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_RootWindowContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_RootWindowContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {
      &scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_KeyguardControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_IdentifierProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,}};

static void InitDefaultsscc_info_ScreenRotationAnimationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_ScreenRotationAnimationProto_default_instance_;
    new (ptr) ::com::android::server::wm::ScreenRotationAnimationProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::ScreenRotationAnimationProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScreenRotationAnimationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ScreenRotationAnimationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {}};

static void InitDefaultsscc_info_WindowFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_WindowFramesProto_default_instance_;
    new (ptr) ::com::android::server::wm::WindowFramesProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::WindowFramesProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_WindowFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_WindowFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {
      &scc_info_RectProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto.base,
      &scc_info_DisplayCutoutProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto.base,}};

static void InitDefaultsscc_info_WindowManagerPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_WindowManagerPolicyProto_default_instance_;
    new (ptr) ::com::android::server::wm::WindowManagerPolicyProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::WindowManagerPolicyProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_WindowManagerPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsscc_info_WindowManagerPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {
      &scc_info_IdentifierProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_BarControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_WindowOrientationListenerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_KeyguardServiceDelegateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,}};

static void InitDefaultsscc_info_WindowManagerServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_WindowManagerServiceDumpProto_default_instance_;
    new (ptr) ::com::android::server::wm::WindowManagerServiceDumpProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::WindowManagerServiceDumpProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_WindowManagerServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_WindowManagerServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {
      &scc_info_WindowManagerPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_RootWindowContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
      &scc_info_IdentifierProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,}};

static void InitDefaultsscc_info_WindowOrientationListenerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_WindowOrientationListenerProto_default_instance_;
    new (ptr) ::com::android::server::wm::WindowOrientationListenerProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::WindowOrientationListenerProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WindowOrientationListenerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_WindowOrientationListenerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {}};

static void InitDefaultsscc_info_WindowStateAnimatorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_WindowStateAnimatorProto_default_instance_;
    new (ptr) ::com::android::server::wm::WindowStateAnimatorProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::WindowStateAnimatorProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_WindowStateAnimatorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_WindowStateAnimatorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {
      &scc_info_RectProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto.base,
      &scc_info_WindowSurfaceControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,}};

static void InitDefaultsscc_info_WindowSurfaceControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_WindowSurfaceControllerProto_default_instance_;
    new (ptr) ::com::android::server::wm::WindowSurfaceControllerProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::WindowSurfaceControllerProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WindowSurfaceControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_WindowSurfaceControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto[31];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerServiceDumpProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerServiceDumpProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerServiceDumpProto, policy_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerServiceDumpProto, root_window_container_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerServiceDumpProto, focused_window_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerServiceDumpProto, focused_app_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerServiceDumpProto, input_method_window_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerServiceDumpProto, display_frozen_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerServiceDumpProto, rotation_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerServiceDumpProto, last_orientation_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerServiceDumpProto, focused_display_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerServiceDumpProto, hard_keyboard_available_),
  1,
  2,
  3,
  0,
  4,
  7,
  5,
  6,
  9,
  8,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::RootWindowContainerProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::RootWindowContainerProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::RootWindowContainerProto, window_container_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::RootWindowContainerProto, displays_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::RootWindowContainerProto, windows_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::RootWindowContainerProto, keyguard_controller_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::RootWindowContainerProto, is_home_recents_component_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::RootWindowContainerProto, pending_activities_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::RootWindowContainerProto, default_min_size_resizable_task_),
  0,
  ~0u,
  ~0u,
  1,
  2,
  ~0u,
  3,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::BarControllerProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::BarControllerProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::BarControllerProto, state_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::BarControllerProto, transient_state_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowOrientationListenerProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowOrientationListenerProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowOrientationListenerProto, enabled_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowOrientationListenerProto, rotation_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardServiceDelegateProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardServiceDelegateProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardServiceDelegateProto, showing_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardServiceDelegateProto, occluded_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardServiceDelegateProto, secure_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardServiceDelegateProto, screen_state_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardServiceDelegateProto, interactive_state_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardControllerProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardControllerProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardControllerProto, keyguard_showing_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardControllerProto, keyguard_occluded_states_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardControllerProto, aod_showing_),
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardOccludedProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardOccludedProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardOccludedProto, display_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::KeyguardOccludedProto, keyguard_occluded_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, last_system_ui_flags_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, rotation_mode_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, rotation_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, orientation_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, screen_on_fully_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, keyguard_draw_complete_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, window_manager_draw_complete_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, focused_app_token_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, focused_window_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, top_fullscreen_opaque_window_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, top_fullscreen_opaque_or_dimming_window_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, keyguard_occluded_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, keyguard_occluded_changed_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, keyguard_occluded_pending_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, force_status_bar_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, force_status_bar_from_keyguard_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, status_bar_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, navigation_bar_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, orientation_listener_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerPolicyProto, keyguard_delegate_),
  8,
  9,
  10,
  19,
  11,
  12,
  13,
  0,
  1,
  2,
  3,
  14,
  15,
  16,
  17,
  18,
  4,
  5,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::AppTransitionProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::AppTransitionProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::AppTransitionProto, app_transition_state_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::AppTransitionProto, last_used_app_transition_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, window_container_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, docked_task_divider_controller_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, pinned_task_controller_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, above_app_windows_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, below_app_windows_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, ime_windows_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, dpi_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, display_info_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, rotation_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, screen_rotation_animation_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, display_frames_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, surface_size_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, focused_app_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, app_transition_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, opening_apps_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, closing_apps_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, changing_apps_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, overlay_windows_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, root_display_area_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, single_task_instance_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, focused_root_task_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, resumed_activity_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, tasks_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, display_ready_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, input_method_target_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, input_method_input_target_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, input_method_control_target_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, current_focus_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, ime_insets_source_provider_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, can_show_ime_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, display_rotation_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, ime_policy_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, is_sleeping_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayContentProto, sleep_tokens_),
  1,
  16,
  2,
  3,
  ~0u,
  ~0u,
  ~0u,
  17,
  4,
  18,
  5,
  6,
  19,
  0,
  7,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  8,
  21,
  20,
  9,
  ~0u,
  22,
  10,
  11,
  12,
  13,
  14,
  23,
  15,
  25,
  24,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayAreaProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayAreaProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayAreaProto, window_container_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayAreaProto, name_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayAreaProto, children_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayAreaProto, is_task_display_area_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayAreaProto, is_root_display_area_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayAreaProto, feature_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayAreaProto, is_organized_),
  1,
  0,
  ~0u,
  2,
  3,
  5,
  4,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayAreaChildProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayAreaChildProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayAreaChildProto, display_area_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayAreaChildProto, window_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayAreaChildProto, unknown_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayFramesProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayFramesProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayFramesProto, stable_bounds_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayFramesProto, dock_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayFramesProto, current_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayRotationProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayRotationProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayRotationProto, rotation_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayRotationProto, frozen_to_user_rotation_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayRotationProto, user_rotation_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayRotationProto, fixed_to_user_rotation_mode_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DisplayRotationProto, last_orientation_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DockedTaskDividerControllerProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DockedTaskDividerControllerProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::DockedTaskDividerControllerProto, minimized_dock_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::PinnedTaskControllerProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::PinnedTaskControllerProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::PinnedTaskControllerProto, default_bounds_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::PinnedTaskControllerProto, movement_bounds_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, window_container_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, fills_parent_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, bounds_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, displayed_bounds_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, defer_removal_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, surface_width_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, surface_height_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, tasks_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, activities_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, resumed_activity_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, real_activity_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, orig_activity_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, display_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, root_task_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, activity_type_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, resize_mode_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, min_width_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, min_height_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, adjusted_bounds_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, last_non_fullscreen_bounds_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, adjusted_for_ime_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, adjust_ime_amount_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, adjust_divider_amount_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, animating_bounds_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, minimize_amount_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, created_by_organizer_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, affinity_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, has_child_pip_activity_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskProto, task_fragment_),
  3,
  10,
  14,
  4,
  5,
  15,
  11,
  12,
  ~0u,
  ~0u,
  6,
  0,
  1,
  13,
  18,
  19,
  20,
  21,
  22,
  7,
  8,
  16,
  23,
  24,
  17,
  25,
  26,
  2,
  27,
  9,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskFragmentProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskFragmentProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskFragmentProto, window_container_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskFragmentProto, display_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskFragmentProto, activity_type_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskFragmentProto, min_width_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::TaskFragmentProto, min_height_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, name_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, window_token_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, last_surface_showing_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, is_waiting_for_transition_start_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, is_animating_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, thumbnail_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, fills_parent_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, app_stopped_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, visible_requested_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, client_visible_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, defer_hiding_client_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, reported_drawn_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, reported_visible_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, num_interesting_windows_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, num_drawn_windows_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, all_drawn_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, last_all_drawn_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, starting_window_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, starting_displayed_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, starting_moved_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, visible_set_from_transferred_starting_window_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, frozen_bounds_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, visible_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, identifier_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, state_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, front_of_task_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, proc_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, translucent_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, pip_auto_enter_enabled_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, in_size_compat_mode_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, min_aspect_ratio_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ActivityRecordProto, provides_max_bounds_),
  0,
  2,
  6,
  7,
  8,
  3,
  9,
  10,
  11,
  12,
  13,
  15,
  16,
  14,
  19,
  17,
  18,
  4,
  27,
  28,
  29,
  ~0u,
  30,
  5,
  1,
  21,
  20,
  22,
  23,
  24,
  25,
  26,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowTokenProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowTokenProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowTokenProto, window_container_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowTokenProto, hash_code_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowTokenProto, windows_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowTokenProto, waiting_to_show_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowTokenProto, paused_),
  0,
  1,
  ~0u,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, window_container_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, identifier_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, display_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, stack_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, attributes_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, given_content_insets_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, containing_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, parent_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, content_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, content_insets_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, surface_insets_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, animator_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, animating_exit_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, child_windows_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, surface_position_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, requested_width_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, requested_height_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, view_visibility_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, system_ui_visibility_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, has_surface_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, is_ready_for_display_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, display_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, overscan_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, visible_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, decor_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, outset_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, overscan_insets_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, visible_insets_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, stable_insets_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, outsets_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, cutout_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, remove_on_exit_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, destroying_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, removed_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, is_on_screen_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, is_visible_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, pending_seamless_rotation_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, finished_seamless_rotation_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, window_frames_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, force_seamless_rotation_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, has_compat_scale_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateProto, global_scale_),
  0,
  1,
  23,
  24,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  29,
  ~0u,
  11,
  25,
  26,
  27,
  28,
  30,
  31,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  32,
  33,
  34,
  35,
  36,
  38,
  37,
  22,
  39,
  40,
  41,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::IdentifierProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::IdentifierProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::IdentifierProto, hash_code_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::IdentifierProto, user_id_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::IdentifierProto, title_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateAnimatorProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateAnimatorProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateAnimatorProto, last_clip_rect_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateAnimatorProto, surface_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateAnimatorProto, draw_state_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowStateAnimatorProto, system_decor_rect_),
  0,
  1,
  3,
  2,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowSurfaceControllerProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowSurfaceControllerProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowSurfaceControllerProto, shown_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowSurfaceControllerProto, layer_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ScreenRotationAnimationProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ScreenRotationAnimationProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ScreenRotationAnimationProto, started_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ScreenRotationAnimationProto, animation_running_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerProto, configuration_container_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerProto, orientation_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerProto, visible_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerProto, surface_animator_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerProto, children_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerProto, identifier_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerProto, surface_control_),
  0,
  4,
  5,
  1,
  ~0u,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerChildProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerChildProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerChildProto, window_container_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerChildProto, display_content_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerChildProto, display_area_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerChildProto, task_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerChildProto, activity_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerChildProto, window_token_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerChildProto, window_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowContainerChildProto, task_fragment_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ConfigurationContainerProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ConfigurationContainerProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ConfigurationContainerProto, override_configuration_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ConfigurationContainerProto, full_configuration_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ConfigurationContainerProto, merged_override_configuration_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, containing_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, content_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, decor_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, display_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, outset_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, overscan_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, parent_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, visible_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, cutout_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, content_insets_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, overscan_insets_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, visible_insets_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, stable_insets_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, outsets_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowFramesProto, compat_frame_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, source_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, fake_control_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, control_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, control_target_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, pending_control_target_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, fake_control_target_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, captured_leash_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, ime_overridden_frame_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, is_leash_ready_for_dispatching_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, client_visible_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, server_visible_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, seamless_rotating_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, finish_seamless_rotate_frame_number_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::InsetsSourceProviderProto, controllable_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  14,
  13,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ImeInsetsSourceProviderProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ImeInsetsSourceProviderProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ImeInsetsSourceProviderProto, insets_source_provider_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ImeInsetsSourceProviderProto, ime_target_from_ime_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::ImeInsetsSourceProviderProto, is_ime_layout_drawn_),
  0,
  1,
  2,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::com::android::server::wm::WindowManagerServiceDumpProto)},
  { 25, 37, sizeof(::com::android::server::wm::RootWindowContainerProto)},
  { 44, 51, sizeof(::com::android::server::wm::BarControllerProto)},
  { 53, 60, sizeof(::com::android::server::wm::WindowOrientationListenerProto)},
  { 62, 72, sizeof(::com::android::server::wm::KeyguardServiceDelegateProto)},
  { 77, 85, sizeof(::com::android::server::wm::KeyguardControllerProto)},
  { 88, 95, sizeof(::com::android::server::wm::KeyguardOccludedProto)},
  { 97, 122, sizeof(::com::android::server::wm::WindowManagerPolicyProto)},
  { 142, 149, sizeof(::com::android::server::wm::AppTransitionProto)},
  { 151, 191, sizeof(::com::android::server::wm::DisplayContentProto)},
  { 226, 238, sizeof(::com::android::server::wm::DisplayAreaProto)},
  { 245, 253, sizeof(::com::android::server::wm::DisplayAreaChildProto)},
  { 256, 264, sizeof(::com::android::server::wm::DisplayFramesProto)},
  { 267, 277, sizeof(::com::android::server::wm::DisplayRotationProto)},
  { 282, 288, sizeof(::com::android::server::wm::DockedTaskDividerControllerProto)},
  { 289, 296, sizeof(::com::android::server::wm::PinnedTaskControllerProto)},
  { 298, 333, sizeof(::com::android::server::wm::TaskProto)},
  { 363, 373, sizeof(::com::android::server::wm::TaskFragmentProto)},
  { 378, 415, sizeof(::com::android::server::wm::ActivityRecordProto)},
  { 447, 457, sizeof(::com::android::server::wm::WindowTokenProto)},
  { 462, 510, sizeof(::com::android::server::wm::WindowStateProto)},
  { 553, 561, sizeof(::com::android::server::wm::IdentifierProto)},
  { 564, 573, sizeof(::com::android::server::wm::WindowStateAnimatorProto)},
  { 577, 584, sizeof(::com::android::server::wm::WindowSurfaceControllerProto)},
  { 586, 593, sizeof(::com::android::server::wm::ScreenRotationAnimationProto)},
  { 595, 607, sizeof(::com::android::server::wm::WindowContainerProto)},
  { 614, 627, sizeof(::com::android::server::wm::WindowContainerChildProto)},
  { 635, 643, sizeof(::com::android::server::wm::ConfigurationContainerProto)},
  { 646, 667, sizeof(::com::android::server::wm::WindowFramesProto)},
  { 683, 703, sizeof(::com::android::server::wm::InsetsSourceProviderProto)},
  { 718, 726, sizeof(::com::android::server::wm::ImeInsetsSourceProviderProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_WindowManagerServiceDumpProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_RootWindowContainerProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_BarControllerProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_WindowOrientationListenerProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_KeyguardServiceDelegateProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_KeyguardControllerProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_KeyguardOccludedProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_WindowManagerPolicyProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_AppTransitionProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_DisplayContentProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_DisplayAreaProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_DisplayAreaChildProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_DisplayFramesProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_DisplayRotationProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_DockedTaskDividerControllerProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_PinnedTaskControllerProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_TaskProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_TaskFragmentProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_ActivityRecordProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_WindowTokenProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_WindowStateProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_IdentifierProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_WindowStateAnimatorProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_WindowSurfaceControllerProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_ScreenRotationAnimationProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_WindowContainerProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_WindowContainerChildProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_ConfigurationContainerProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_WindowFramesProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_InsetsSourceProviderProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_ImeInsetsSourceProviderProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nDframeworks/base/core/proto/android/ser"
  "ver/windowmanagerservice.proto\022\025com.andr"
  "oid.server.wm\032=frameworks/base/core/prot"
  "o/android/app/statusbarmanager.proto\032=fr"
  "ameworks/base/core/proto/android/content"
  "/activityinfo.proto\032>frameworks/base/cor"
  "e/proto/android/content/configuration.pr"
  "oto\0326frameworks/base/core/proto/android/"
  "graphics/rect.proto\032Hframeworks/base/cor"
  "e/proto/android/server/windowcontainerth"
  "umbnail.proto\032\?frameworks/base/core/prot"
  "o/android/server/surfaceanimator.proto\032;"
  "frameworks/base/core/proto/android/view/"
  "displaycutout.proto\0329frameworks/base/cor"
  "e/proto/android/view/displayinfo.proto\0325"
  "frameworks/base/core/proto/android/view/"
  "surface.proto\032@frameworks/base/core/prot"
  "o/android/view/windowlayoutparams.proto\032"
  "0frameworks/base/core/proto/android/priv"
  "acy.proto\0320frameworks/base/core/proto/an"
  "droid/typedef.proto\032<frameworks/base/cor"
  "e/proto/android/view/surfacecontrol.prot"
  "o\032:frameworks/base/core/proto/android/vi"
  "ew/insetssource.proto\032Aframeworks/base/c"
  "ore/proto/android/view/insetssourcecontr"
  "ol.proto\0325frameworks/proto_logging/stats"
  "/enums/view/enums.proto\"\264\004\n\035WindowManage"
  "rServiceDumpProto\022\?\n\006policy\030\001 \001(\0132/.com."
  "android.server.wm.WindowManagerPolicyPro"
  "to\022N\n\025root_window_container\030\002 \001(\0132/.com."
  "android.server.wm.RootWindowContainerPro"
  "to\022>\n\016focused_window\030\003 \001(\0132&.com.android"
  ".server.wm.IdentifierProto\022\023\n\013focused_ap"
  "p\030\004 \001(\t\022C\n\023input_method_window\030\005 \001(\0132&.c"
  "om.android.server.wm.IdentifierProto\022\026\n\016"
  "display_frozen\030\006 \001(\010\0225\n\010rotation\030\007 \001(\005B#"
  "\030\001\212\246\035\035android.view.Surface.Rotation\022Q\n\020l"
  "ast_orientation\030\010 \001(\005B7\030\001\212\246\0351android.con"
  "tent.pm.ActivityInfo.ScreenOrientation\022\032"
  "\n\022focused_display_id\030\t \001(\005\022\037\n\027hard_keybo"
  "ard_available\030\n \001(\010:\t\232\237\325\207\003\003\010\310\001\"\323\003\n\030RootW"
  "indowContainerProto\022E\n\020window_container\030"
  "\001 \001(\0132+.com.android.server.wm.WindowCont"
  "ainerProto\022@\n\010displays\030\002 \003(\0132*.com.andro"
  "id.server.wm.DisplayContentProtoB\002\030\001\022<\n\007"
  "windows\030\004 \003(\0132\'.com.android.server.wm.Wi"
  "ndowStateProtoB\002\030\001\022K\n\023keyguard_controlle"
  "r\030\005 \001(\0132..com.android.server.wm.Keyguard"
  "ControllerProto\022!\n\031is_home_recents_compo"
  "nent\030\006 \001(\010\022F\n\022pending_activities\030\007 \003(\0132&"
  ".com.android.server.wm.IdentifierProtoB\002"
  "\030\001\022\'\n\037default_min_size_resizable_task\030\010 "
  "\001(\005:\t\232\237\325\207\003\003\010\310\001J\004\010\003\020\004\"\260\001\n\022BarControllerPr"
  "oto\022=\n\005state\030\001 \001(\0162..android.app.StatusB"
  "arManagerProto.WindowState\022P\n\017transient_"
  "state\030\002 \001(\01627.android.app.StatusBarManag"
  "erProto.TransientWindowState:\t\232\237\325\207\003\003\010\310\001\""
  "s\n\036WindowOrientationListenerProto\022\017\n\007ena"
  "bled\030\001 \001(\010\0225\n\010rotation\030\002 \001(\0162#.android.v"
  "iew.SurfaceProto.Rotation:\t\232\237\325\207\003\003\010\310\001\"\234\004\n"
  "\034KeyguardServiceDelegateProto\022\017\n\007showing"
  "\030\001 \001(\010\022\020\n\010occluded\030\002 \001(\010\022\016\n\006secure\030\003 \001(\010"
  "\022U\n\014screen_state\030\004 \001(\0162\?.com.android.ser"
  "ver.wm.KeyguardServiceDelegateProto.Scre"
  "enState\022_\n\021interactive_state\030\005 \001(\0162D.com"
  ".android.server.wm.KeyguardServiceDelega"
  "teProto.InteractiveState\"s\n\013ScreenState\022"
  "\024\n\020SCREEN_STATE_OFF\020\000\022\033\n\027SCREEN_STATE_TU"
  "RNING_ON\020\001\022\023\n\017SCREEN_STATE_ON\020\002\022\034\n\030SCREE"
  "N_STATE_TURNING_OFF\020\003\"\220\001\n\020InteractiveSta"
  "te\022\033\n\027INTERACTIVE_STATE_SLEEP\020\000\022\034\n\030INTER"
  "ACTIVE_STATE_WAKING\020\001\022\033\n\027INTERACTIVE_STA"
  "TE_AWAKE\020\002\022$\n INTERACTIVE_STATE_GOING_TO"
  "_SLEEP\020\003:\t\232\237\325\207\003\003\010\310\001\"\243\001\n\027KeyguardControll"
  "erProto\022\030\n\020keyguard_showing\030\001 \001(\010\022N\n\030key"
  "guard_occluded_states\030\002 \003(\0132,.com.androi"
  "d.server.wm.KeyguardOccludedProto\022\023\n\013aod"
  "_showing\030\003 \001(\010:\t\232\237\325\207\003\003\010\310\001\"Q\n\025KeyguardOcc"
  "ludedProto\022\022\n\ndisplay_id\030\001 \001(\005\022\031\n\021keygua"
  "rd_occluded\030\002 \001(\010:\t\232\237\325\207\003\003\010\310\001\"\267\t\n\030WindowM"
  "anagerPolicyProto\022 \n\024last_system_ui_flag"
  "s\030\001 \001(\005B\002\030\001\022W\n\rrotation_mode\030\002 \001(\0162@.com"
  ".android.server.wm.WindowManagerPolicyPr"
  "oto.UserRotationMode\0225\n\010rotation\030\003 \001(\0162#"
  ".android.view.SurfaceProto.Rotation\022I\n\013o"
  "rientation\030\004 \001(\01624.android.content.Activ"
  "ityInfoProto.ScreenOrientation\022\027\n\017screen"
  "_on_fully\030\005 \001(\010\022\036\n\026keyguard_draw_complet"
  "e\030\006 \001(\010\022$\n\034window_manager_draw_complete\030"
  "\007 \001(\010\022\035\n\021focused_app_token\030\010 \001(\tB\002\030\001\022B\n\016"
  "focused_window\030\t \001(\0132&.com.android.serve"
  "r.wm.IdentifierProtoB\002\030\001\022P\n\034top_fullscre"
  "en_opaque_window\030\n \001(\0132&.com.android.ser"
  "ver.wm.IdentifierProtoB\002\030\001\022[\n\'top_fullsc"
  "reen_opaque_or_dimming_window\030\013 \001(\0132&.co"
  "m.android.server.wm.IdentifierProtoB\002\030\001\022"
  "\031\n\021keyguard_occluded\030\014 \001(\010\022!\n\031keyguard_o"
  "ccluded_changed\030\r \001(\010\022!\n\031keyguard_occlud"
  "ed_pending\030\016 \001(\010\022\034\n\020force_status_bar\030\017 \001"
  "(\010B\002\030\001\022*\n\036force_status_bar_from_keyguard"
  "\030\020 \001(\010B\002\030\001\022A\n\nstatus_bar\030\021 \001(\0132).com.and"
  "roid.server.wm.BarControllerProtoB\002\030\001\022E\n"
  "\016navigation_bar\030\022 \001(\0132).com.android.serv"
  "er.wm.BarControllerProtoB\002\030\001\022W\n\024orientat"
  "ion_listener\030\023 \001(\01325.com.android.server."
  "wm.WindowOrientationListenerProtoB\002\030\001\022N\n"
  "\021keyguard_delegate\030\024 \001(\01323.com.android.s"
  "erver.wm.KeyguardServiceDelegateProto\"D\n"
  "\020UserRotationMode\022\026\n\022USER_ROTATION_FREE\020"
  "\000\022\030\n\024USER_ROTATION_LOCKED\020\001:\t\232\237\325\207\003\003\010\310\001\"\230"
  "\002\n\022AppTransitionProto\022P\n\024app_transition_"
  "state\030\001 \001(\01622.com.android.server.wm.AppT"
  "ransitionProto.AppState\022B\n\030last_used_app"
  "_transition\030\002 \001(\0162 .android.view.Transit"
  "ionTypeEnum\"a\n\010AppState\022\022\n\016APP_STATE_IDL"
  "E\020\000\022\023\n\017APP_STATE_READY\020\001\022\025\n\021APP_STATE_RU"
  "NNING\020\002\022\025\n\021APP_STATE_TIMEOUT\020\003:\t\232\237\325\207\003\003\010\310"
  "\001\"\275\017\n\023DisplayContentProto\022I\n\020window_cont"
  "ainer\030\001 \001(\0132+.com.android.server.wm.Wind"
  "owContainerProtoB\002\030\001\022\n\n\002id\030\002 \001(\005\022c\n\036dock"
  "ed_task_divider_controller\030\004 \001(\01327.com.a"
  "ndroid.server.wm.DockedTaskDividerContro"
  "llerProtoB\002\030\001\022T\n\026pinned_task_controller\030"
  "\005 \001(\01320.com.android.server.wm.PinnedTask"
  "ControllerProtoB\002\030\001\022F\n\021above_app_windows"
  "\030\006 \003(\0132\'.com.android.server.wm.WindowTok"
  "enProtoB\002\030\001\022F\n\021below_app_windows\030\007 \003(\0132\'"
  ".com.android.server.wm.WindowTokenProtoB"
  "\002\030\001\022@\n\013ime_windows\030\010 \003(\0132\'.com.android.s"
  "erver.wm.WindowTokenProtoB\002\030\001\022\013\n\003dpi\030\t \001"
  "(\005\0224\n\014display_info\030\n \001(\0132\036.android.view."
  "DisplayInfoProto\0225\n\010rotation\030\013 \001(\005B#\030\001\212\246"
  "\035\035android.view.Surface.Rotation\022V\n\031scree"
  "n_rotation_animation\030\014 \001(\01323.com.android"
  ".server.wm.ScreenRotationAnimationProto\022"
  "A\n\016display_frames\030\r \001(\0132).com.android.se"
  "rver.wm.DisplayFramesProto\022\030\n\014surface_si"
  "ze\030\016 \001(\005B\002\030\001\022\023\n\013focused_app\030\017 \001(\t\022A\n\016app"
  "_transition\030\020 \001(\0132).com.android.server.w"
  "m.AppTransitionProto\022<\n\014opening_apps\030\021 \003"
  "(\0132&.com.android.server.wm.IdentifierPro"
  "to\022<\n\014closing_apps\030\022 \003(\0132&.com.android.s"
  "erver.wm.IdentifierProto\022=\n\rchanging_app"
  "s\030\023 \003(\0132&.com.android.server.wm.Identifi"
  "erProto\022D\n\017overlay_windows\030\024 \003(\0132\'.com.a"
  "ndroid.server.wm.WindowTokenProtoB\002\030\001\022B\n"
  "\021root_display_area\030\025 \001(\0132\'.com.android.s"
  "erver.wm.DisplayAreaProto\022 \n\024single_task"
  "_instance\030\026 \001(\010B\002\030\001\022\034\n\024focused_root_task"
  "_id\030\027 \001(\005\022@\n\020resumed_activity\030\030 \001(\0132&.co"
  "m.android.server.wm.IdentifierProto\0223\n\005t"
  "asks\030\031 \003(\0132 .com.android.server.wm.TaskP"
  "rotoB\002\030\001\022\025\n\rdisplay_ready\030\032 \001(\010\022D\n\023input"
  "_method_target\030\033 \001(\0132\'.com.android.serve"
  "r.wm.WindowStateProto\022J\n\031input_method_in"
  "put_target\030\034 \001(\0132\'.com.android.server.wm"
  ".WindowStateProto\022L\n\033input_method_contro"
  "l_target\030\035 \001(\0132\'.com.android.server.wm.W"
  "indowStateProto\022>\n\rcurrent_focus\030\036 \001(\0132\'"
  ".com.android.server.wm.WindowStateProto\022"
  "W\n\032ime_insets_source_provider\030\037 \001(\01323.co"
  "m.android.server.wm.ImeInsetsSourceProvi"
  "derProto\022\030\n\014can_show_ime\030  \001(\010B\002\030\001\022E\n\020di"
  "splay_rotation\030! \001(\0132+.com.android.serve"
  "r.wm.DisplayRotationProto\022\022\n\nime_policy\030"
  "\" \001(\005\022\023\n\013is_sleeping\030$ \001(\010\022\024\n\014sleep_toke"
  "ns\030% \003(\t:\t\232\237\325\207\003\003\010\310\001J\004\010\003\020\004\"\246\002\n\020DisplayAre"
  "aProto\022E\n\020window_container\030\001 \001(\0132+.com.a"
  "ndroid.server.wm.WindowContainerProto\022\026\n"
  "\004name\030\002 \001(\tB\010\232\237\325\207\003\002\010d\022B\n\010children\030\003 \003(\0132"
  ",.com.android.server.wm.DisplayAreaChild"
  "ProtoB\002\030\001\022\034\n\024is_task_display_area\030\004 \001(\010\022"
  "\034\n\024is_root_display_area\030\005 \001(\010\022\022\n\nfeature"
  "_id\030\006 \001(\005\022\024\n\014is_organized\030\007 \001(\010:\t\232\237\325\207\003\003\010"
  "\310\001\"\253\001\n\025DisplayAreaChildProto\022=\n\014display_"
  "area\030\001 \001(\0132\'.com.android.server.wm.Displ"
  "ayAreaProto\0227\n\006window\030\002 \001(\0132\'.com.androi"
  "d.server.wm.WindowTokenProto\022\017\n\007unknown\030"
  "\003 \003(\t:\t\232\237\325\207\003\003\010\310\001\"\270\001\n\022DisplayFramesProto\022"
  "6\n\rstable_bounds\030\001 \001(\0132\033.android.graphic"
  "s.RectProtoB\002\030\001\022-\n\004dock\030\002 \001(\0132\033.android."
  "graphics.RectProtoB\002\030\001\0220\n\007current\030\003 \001(\0132"
  "\033.android.graphics.RectProtoB\002\030\001:\t\232\237\325\207\003\003"
  "\010\310\001\"\247\002\n\024DisplayRotationProto\0223\n\010rotation"
  "\030\001 \001(\005B!\212\246\035\035android.view.Surface.Rotatio"
  "n\022\037\n\027frozen_to_user_rotation\030\002 \001(\010\0228\n\rus"
  "er_rotation\030\003 \001(\005B!\212\246\035\035android.view.Surf"
  "ace.Rotation\022#\n\033fixed_to_user_rotation_m"
  "ode\030\004 \001(\005\022O\n\020last_orientation\030\005 \001(\005B5\212\246\035"
  "1android.content.pm.ActivityInfo.ScreenO"
  "rientation:\t\232\237\325\207\003\003\010\310\001\"I\n DockedTaskDivid"
  "erControllerProto\022\032\n\016minimized_dock\030\001 \001("
  "\010B\002\030\001:\t\232\237\325\207\003\003\010\310\001\"\231\001\n\031PinnedTaskControlle"
  "rProto\0227\n\016default_bounds\030\001 \001(\0132\033.android"
  ".graphics.RectProtoB\002\030\001\0228\n\017movement_boun"
  "ds\030\002 \001(\0132\033.android.graphics.RectProtoB\002\030"
  "\001:\t\232\237\325\207\003\003\010\310\001\"\255\t\n\tTaskProto\022I\n\020window_con"
  "tainer\030\001 \001(\0132+.com.android.server.wm.Win"
  "dowContainerProtoB\002\030\001\022\n\n\002id\030\002 \001(\005\022\024\n\014fil"
  "ls_parent\030\004 \001(\010\022+\n\006bounds\030\005 \001(\0132\033.androi"
  "d.graphics.RectProto\0229\n\020displayed_bounds"
  "\030\006 \001(\0132\033.android.graphics.RectProtoB\002\030\001\022"
  "\025\n\rdefer_removal\030\007 \001(\010\022\025\n\rsurface_width\030"
  "\010 \001(\005\022\026\n\016surface_height\030\t \001(\005\0223\n\005tasks\030\n"
  " \003(\0132 .com.android.server.wm.TaskProtoB\002"
  "\030\001\022B\n\nactivities\030\013 \003(\0132*.com.android.ser"
  "ver.wm.ActivityRecordProtoB\002\030\001\022@\n\020resume"
  "d_activity\030\014 \001(\0132&.com.android.server.wm"
  ".IdentifierProto\022\025\n\rreal_activity\030\r \001(\t\022"
  "\025\n\rorig_activity\030\016 \001(\t\022\026\n\ndisplay_id\030\017 \001"
  "(\005B\002\030\001\022\024\n\014root_task_id\030\020 \001(\005\022I\n\ractivity"
  "_type\030\021 \001(\005B2\030\001\212\246\035,android.app.WindowCon"
  "figuration.ActivityType\022P\n\013resize_mode\030\022"
  " \001(\005B;\212\246\0357android.appwidget.AppWidgetPro"
  "viderInfo.ResizeModeFlags\022\025\n\tmin_width\030\023"
  " \001(\005B\002\030\001\022\026\n\nmin_height\030\024 \001(\005B\002\030\001\0224\n\017adju"
  "sted_bounds\030\025 \001(\0132\033.android.graphics.Rec"
  "tProto\022\?\n\032last_non_fullscreen_bounds\030\026 \001"
  "(\0132\033.android.graphics.RectProto\022\030\n\020adjus"
  "ted_for_ime\030\027 \001(\010\022\031\n\021adjust_ime_amount\030\030"
  " \001(\002\022\035\n\025adjust_divider_amount\030\031 \001(\002\022\034\n\020a"
  "nimating_bounds\030\032 \001(\010B\002\030\001\022\027\n\017minimize_am"
  "ount\030\033 \001(\002\022\034\n\024created_by_organizer\030\034 \001(\010"
  "\022\020\n\010affinity\030\035 \001(\t\022\036\n\026has_child_pip_acti"
  "vity\030\036 \001(\010\022\?\n\rtask_fragment\030\037 \001(\0132(.com."
  "android.server.wm.TaskFragmentProto:\t\232\237\325"
  "\207\003\003\010\310\001J\004\010\003\020\004\"\351\001\n\021TaskFragmentProto\022E\n\020wi"
  "ndow_container\030\001 \001(\0132+.com.android.serve"
  "r.wm.WindowContainerProto\022\022\n\ndisplay_id\030"
  "\002 \001(\005\022G\n\ractivity_type\030\003 \001(\005B0\212\246\035,androi"
  "d.app.WindowConfiguration.ActivityType\022\021"
  "\n\tmin_width\030\004 \001(\005\022\022\n\nmin_height\030\005 \001(\005:\t\232"
  "\237\325\207\003\003\010\310\001\"\274\010\n\023ActivityRecordProto\022\026\n\004name"
  "\030\001 \001(\tB\010\232\237\325\207\003\002\010d\022=\n\014window_token\030\002 \001(\0132\'"
  ".com.android.server.wm.WindowTokenProto\022"
  "\034\n\024last_surface_showing\030\003 \001(\010\022\'\n\037is_wait"
  "ing_for_transition_start\030\004 \001(\010\022\024\n\014is_ani"
  "mating\030\005 \001(\010\022G\n\tthumbnail\030\006 \001(\01324.com.an"
  "droid.server.wm.WindowContainerThumbnail"
  "Proto\022\024\n\014fills_parent\030\007 \001(\010\022\023\n\013app_stopp"
  "ed\030\010 \001(\010\022\031\n\021visible_requested\030\t \001(\010\022\026\n\016c"
  "lient_visible\030\n \001(\010\022\033\n\023defer_hiding_clie"
  "nt\030\013 \001(\010\022\026\n\016reported_drawn\030\014 \001(\010\022\030\n\020repo"
  "rted_visible\030\r \001(\010\022\037\n\027num_interesting_wi"
  "ndows\030\016 \001(\005\022\031\n\021num_drawn_windows\030\017 \001(\005\022\021"
  "\n\tall_drawn\030\020 \001(\010\022\026\n\016last_all_drawn\030\021 \001("
  "\010\022\?\n\017starting_window\030\023 \001(\0132&.com.android"
  ".server.wm.IdentifierProto\022\032\n\022starting_d"
  "isplayed\030\024 \001(\010\022\027\n\016starting_moved\030\311\001 \001(\010\022"
  "4\n,visible_set_from_transferred_starting"
  "_window\030\026 \001(\010\0226\n\rfrozen_bounds\030\027 \003(\0132\033.a"
  "ndroid.graphics.RectProtoB\002\030\001\022\017\n\007visible"
  "\030\030 \001(\010\022>\n\nidentifier\030\032 \001(\0132&.com.android"
  ".server.wm.IdentifierProtoB\002\030\001\022\027\n\005state\030"
  "\033 \001(\tB\010\232\237\325\207\003\002\010d\022\025\n\rfront_of_task\030\034 \001(\010\022\017"
  "\n\007proc_id\030\035 \001(\005\022\023\n\013translucent\030\036 \001(\010\022\036\n\026"
  "pip_auto_enter_enabled\030\037 \001(\010\022\033\n\023in_size_"
  "compat_mode\030  \001(\010\022\030\n\020min_aspect_ratio\030! "
  "\001(\002\022\033\n\023provides_max_bounds\030\" \001(\010:\t\232\237\325\207\003\003"
  "\010\310\001J\004\010\022\020\023J\004\010\031\020\032\"\336\001\n\020WindowTokenProto\022E\n\020"
  "window_container\030\001 \001(\0132+.com.android.ser"
  "ver.wm.WindowContainerProto\022\021\n\thash_code"
  "\030\002 \001(\005\022<\n\007windows\030\003 \003(\0132\'.com.android.se"
  "rver.wm.WindowStateProtoB\002\030\001\022\027\n\017waiting_"
  "to_show\030\005 \001(\010\022\016\n\006paused\030\006 \001(\010:\t\232\237\325\207\003\003\010\310\001"
  "\"\220\017\n\020WindowStateProto\022E\n\020window_containe"
  "r\030\001 \001(\0132+.com.android.server.wm.WindowCo"
  "ntainerProto\022>\n\nidentifier\030\002 \001(\0132&.com.a"
  "ndroid.server.wm.IdentifierProtoB\002\030\001\022\022\n\n"
  "display_id\030\003 \001(\005\022\020\n\010stack_id\030\004 \001(\005\0229\n\nat"
  "tributes\030\005 \001(\0132%.android.view.WindowLayo"
  "utParamsProto\0229\n\024given_content_insets\030\006 "
  "\001(\0132\033.android.graphics.RectProto\022.\n\005fram"
  "e\030\007 \001(\0132\033.android.graphics.RectProtoB\002\030\001"
  "\0229\n\020containing_frame\030\010 \001(\0132\033.android.gra"
  "phics.RectProtoB\002\030\001\0225\n\014parent_frame\030\t \001("
  "\0132\033.android.graphics.RectProtoB\002\030\001\0226\n\rco"
  "ntent_frame\030\n \001(\0132\033.android.graphics.Rec"
  "tProtoB\002\030\001\0227\n\016content_insets\030\013 \001(\0132\033.and"
  "roid.graphics.RectProtoB\002\030\001\0223\n\016surface_i"
  "nsets\030\014 \001(\0132\033.android.graphics.RectProto"
  "\022A\n\010animator\030\r \001(\0132/.com.android.server."
  "wm.WindowStateAnimatorProto\022\026\n\016animating"
  "_exit\030\016 \001(\010\022B\n\rchild_windows\030\017 \003(\0132\'.com"
  ".android.server.wm.WindowStateProtoB\002\030\001\022"
  "5\n\020surface_position\030\020 \001(\0132\033.android.grap"
  "hics.RectProto\022\027\n\017requested_width\030\022 \001(\005\022"
  "\030\n\020requested_height\030\023 \001(\005\0229\n\017view_visibi"
  "lity\030\024 \001(\005B \212\246\035\034android.view.View.Visibi"
  "lity\022 \n\024system_ui_visibility\030\025 \001(\005B\002\030\001\022\023"
  "\n\013has_surface\030\026 \001(\010\022\034\n\024is_ready_for_disp"
  "lay\030\027 \001(\010\0226\n\rdisplay_frame\030\030 \001(\0132\033.andro"
  "id.graphics.RectProtoB\002\030\001\0227\n\016overscan_fr"
  "ame\030\031 \001(\0132\033.android.graphics.RectProtoB\002"
  "\030\001\0226\n\rvisible_frame\030\032 \001(\0132\033.android.grap"
  "hics.RectProtoB\002\030\001\0224\n\013decor_frame\030\033 \001(\0132"
  "\033.android.graphics.RectProtoB\002\030\001\0225\n\014outs"
  "et_frame\030\034 \001(\0132\033.android.graphics.RectPr"
  "otoB\002\030\001\0228\n\017overscan_insets\030\035 \001(\0132\033.andro"
  "id.graphics.RectProtoB\002\030\001\0227\n\016visible_ins"
  "ets\030\036 \001(\0132\033.android.graphics.RectProtoB\002"
  "\030\001\0226\n\rstable_insets\030\037 \001(\0132\033.android.grap"
  "hics.RectProtoB\002\030\001\0220\n\007outsets\030  \001(\0132\033.an"
  "droid.graphics.RectProtoB\002\030\001\0224\n\006cutout\030!"
  " \001(\0132 .android.view.DisplayCutoutProtoB\002"
  "\030\001\022\026\n\016remove_on_exit\030\" \001(\010\022\022\n\ndestroying"
  "\030# \001(\010\022\017\n\007removed\030$ \001(\010\022\024\n\014is_on_screen\030"
  "% \001(\010\022\022\n\nis_visible\030& \001(\010\022!\n\031pending_sea"
  "mless_rotation\030\' \001(\010\022(\n finished_seamles"
  "s_rotation_frame\030( \001(\003\022\?\n\rwindow_frames\030"
  ") \001(\0132(.com.android.server.wm.WindowFram"
  "esProto\022\037\n\027force_seamless_rotation\030* \001(\010"
  "\022\030\n\020has_compat_scale\030+ \001(\010\022\024\n\014global_sca"
  "le\030, \001(\002:\t\232\237\325\207\003\003\010\310\001\"Y\n\017IdentifierProto\022\021"
  "\n\thash_code\030\001 \001(\005\022\017\n\007user_id\030\002 \001(\005\022\027\n\005ti"
  "tle\030\003 \001(\tB\010\232\237\325\207\003\002\010d:\t\232\237\325\207\003\003\010\310\001\"\221\003\n\030Windo"
  "wStateAnimatorProto\0223\n\016last_clip_rect\030\001 "
  "\001(\0132\033.android.graphics.RectProto\022D\n\007surf"
  "ace\030\002 \001(\01323.com.android.server.wm.Window"
  "SurfaceControllerProto\022M\n\ndraw_state\030\003 \001"
  "(\01629.com.android.server.wm.WindowStateAn"
  "imatorProto.DrawState\0226\n\021system_decor_re"
  "ct\030\004 \001(\0132\033.android.graphics.RectProto\"h\n"
  "\tDrawState\022\016\n\nNO_SURFACE\020\000\022\020\n\014DRAW_PENDI"
  "NG\020\001\022\027\n\023COMMIT_DRAW_PENDING\020\002\022\021\n\rREADY_T"
  "O_SHOW\020\003\022\r\n\tHAS_DRAWN\020\004:\t\232\237\325\207\003\003\010\310\001\"G\n\034Wi"
  "ndowSurfaceControllerProto\022\r\n\005shown\030\001 \001("
  "\010\022\r\n\005layer\030\002 \001(\005:\t\232\237\325\207\003\003\010\310\001\"U\n\034ScreenRot"
  "ationAnimationProto\022\017\n\007started\030\001 \001(\010\022\031\n\021"
  "animation_running\030\002 \001(\010:\t\232\237\325\207\003\003\010\310\001\"\326\003\n\024W"
  "indowContainerProto\022S\n\027configuration_con"
  "tainer\030\001 \001(\01322.com.android.server.wm.Con"
  "figurationContainerProto\022J\n\013orientation\030"
  "\002 \001(\005B5\212\246\0351android.content.pm.ActivityIn"
  "fo.ScreenOrientation\022\017\n\007visible\030\003 \001(\010\022E\n"
  "\020surface_animator\030\004 \001(\0132+.com.android.se"
  "rver.wm.SurfaceAnimatorProto\022B\n\010children"
  "\030\005 \003(\01320.com.android.server.wm.WindowCon"
  "tainerChildProto\022:\n\nidentifier\030\006 \001(\0132&.c"
  "om.android.server.wm.IdentifierProto\022:\n\017"
  "surface_control\030\007 \001(\0132!.android.view.Sur"
  "faceControlProto:\t\232\237\325\207\003\003\010\310\001\"\230\004\n\031WindowCo"
  "ntainerChildProto\022E\n\020window_container\030\002 "
  "\001(\0132+.com.android.server.wm.WindowContai"
  "nerProto\022C\n\017display_content\030\003 \001(\0132*.com."
  "android.server.wm.DisplayContentProto\022=\n"
  "\014display_area\030\004 \001(\0132\'.com.android.server"
  ".wm.DisplayAreaProto\022.\n\004task\030\005 \001(\0132 .com"
  ".android.server.wm.TaskProto\022<\n\010activity"
  "\030\006 \001(\0132*.com.android.server.wm.ActivityR"
  "ecordProto\022=\n\014window_token\030\007 \001(\0132\'.com.a"
  "ndroid.server.wm.WindowTokenProto\0227\n\006win"
  "dow\030\010 \001(\0132\'.com.android.server.wm.Window"
  "StateProto\022\?\n\rtask_fragment\030\t \001(\0132(.com."
  "android.server.wm.TaskFragmentProto:\t\232\237\325"
  "\207\003\003\010\310\001\"\372\001\n\033ConfigurationContainerProto\022C"
  "\n\026override_configuration\030\001 \001(\0132#.android"
  ".content.ConfigurationProto\022\?\n\022full_conf"
  "iguration\030\002 \001(\0132#.android.content.Config"
  "urationProto\022J\n\035merged_override_configur"
  "ation\030\003 \001(\0132#.android.content.Configurat"
  "ionProto:\t\232\237\325\207\003\003\010\310\001\"\365\006\n\021WindowFramesProt"
  "o\0225\n\020containing_frame\030\001 \001(\0132\033.android.gr"
  "aphics.RectProto\0226\n\rcontent_frame\030\002 \001(\0132"
  "\033.android.graphics.RectProtoB\002\030\001\0224\n\013deco"
  "r_frame\030\003 \001(\0132\033.android.graphics.RectPro"
  "toB\002\030\001\0222\n\rdisplay_frame\030\004 \001(\0132\033.android."
  "graphics.RectProto\022*\n\005frame\030\005 \001(\0132\033.andr"
  "oid.graphics.RectProto\0221\n\014outset_frame\030\006"
  " \001(\0132\033.android.graphics.RectProto\0227\n\016ove"
  "rscan_frame\030\007 \001(\0132\033.android.graphics.Rec"
  "tProtoB\002\030\001\0221\n\014parent_frame\030\010 \001(\0132\033.andro"
  "id.graphics.RectProto\0226\n\rvisible_frame\030\t"
  " \001(\0132\033.android.graphics.RectProtoB\002\030\001\0224\n"
  "\006cutout\030\n \001(\0132 .android.view.DisplayCuto"
  "utProtoB\002\030\001\0227\n\016content_insets\030\013 \001(\0132\033.an"
  "droid.graphics.RectProtoB\002\030\001\0228\n\017overscan"
  "_insets\030\014 \001(\0132\033.android.graphics.RectPro"
  "toB\002\030\001\0227\n\016visible_insets\030\r \001(\0132\033.android"
  ".graphics.RectProtoB\002\030\001\0226\n\rstable_insets"
  "\030\016 \001(\0132\033.android.graphics.RectProtoB\002\030\001\022"
  ",\n\007outsets\030\017 \001(\0132\033.android.graphics.Rect"
  "Proto\0221\n\014compat_frame\030\020 \001(\0132\033.android.gr"
  "aphics.RectProto:\t\232\237\325\207\003\003\010\310\001\"\366\005\n\031InsetsSo"
  "urceProviderProto\022/\n\006source\030\001 \001(\0132\037.andr"
  "oid.view.InsetsSourceProto\022*\n\005frame\030\002 \001("
  "\0132\033.android.graphics.RectProto\022<\n\014fake_c"
  "ontrol\030\003 \001(\0132&.android.view.InsetsSource"
  "ControlProto\0227\n\007control\030\004 \001(\0132&.android."
  "view.InsetsSourceControlProto\022\?\n\016control"
  "_target\030\005 \001(\0132\'.com.android.server.wm.Wi"
  "ndowStateProto\022G\n\026pending_control_target"
  "\030\006 \001(\0132\'.com.android.server.wm.WindowSta"
  "teProto\022D\n\023fake_control_target\030\007 \001(\0132\'.c"
  "om.android.server.wm.WindowStateProto\0229\n"
  "\016captured_leash\030\010 \001(\0132!.android.view.Sur"
  "faceControlProto\0229\n\024ime_overridden_frame"
  "\030\t \001(\0132\033.android.graphics.RectProto\022&\n\036i"
  "s_leash_ready_for_dispatching\030\n \001(\010\022\026\n\016c"
  "lient_visible\030\013 \001(\010\022\026\n\016server_visible\030\014 "
  "\001(\010\022\031\n\021seamless_rotating\030\r \001(\010\022+\n#finish"
  "_seamless_rotate_frame_number\030\016 \001(\003\022\024\n\014c"
  "ontrollable\030\017 \001(\010:\t\232\237\325\207\003\003\010\310\001\"\336\001\n\034ImeInse"
  "tsSourceProviderProto\022P\n\026insets_source_p"
  "rovider\030\001 \001(\01320.com.android.server.wm.In"
  "setsSourceProviderProto\022D\n\023ime_target_fr"
  "om_ime\030\002 \001(\0132\'.com.android.server.wm.Win"
  "dowStateProto\022\033\n\023is_ime_layout_drawn\030\003 \001"
  "(\010:\t\232\237\325\207\003\003\010\310\001B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto_deps[16] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fstatusbarmanager_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2factivityinfo_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsurfaceanimator_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowcontainerthumbnail_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2ftypedef_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplayinfo_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssource_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssourcecontrol_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fsurface_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fsurfacecontrol_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fwindowlayoutparams_2eproto,
  &::descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fview_2fenums_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto_sccs[20] = {
  &scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_AppTransitionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_BarControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_ConfigurationContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_DisplayFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_DisplayRotationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_DockedTaskDividerControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_IdentifierProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_KeyguardControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_KeyguardOccludedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_KeyguardServiceDelegateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_PinnedTaskControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_RootWindowContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_ScreenRotationAnimationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_WindowFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_WindowManagerPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_WindowManagerServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_WindowOrientationListenerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_WindowStateAnimatorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
  &scc_info_WindowSurfaceControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto, "frameworks/base/core/proto/android/server/windowmanagerservice.proto", 16337,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto_deps, 20, 16,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto, 31, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto), true);
namespace com {
namespace android {
namespace server {
namespace wm {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* KeyguardServiceDelegateProto_ScreenState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto[0];
}
bool KeyguardServiceDelegateProto_ScreenState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr KeyguardServiceDelegateProto_ScreenState KeyguardServiceDelegateProto::SCREEN_STATE_OFF;
constexpr KeyguardServiceDelegateProto_ScreenState KeyguardServiceDelegateProto::SCREEN_STATE_TURNING_ON;
constexpr KeyguardServiceDelegateProto_ScreenState KeyguardServiceDelegateProto::SCREEN_STATE_ON;
constexpr KeyguardServiceDelegateProto_ScreenState KeyguardServiceDelegateProto::SCREEN_STATE_TURNING_OFF;
constexpr KeyguardServiceDelegateProto_ScreenState KeyguardServiceDelegateProto::ScreenState_MIN;
constexpr KeyguardServiceDelegateProto_ScreenState KeyguardServiceDelegateProto::ScreenState_MAX;
constexpr int KeyguardServiceDelegateProto::ScreenState_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* KeyguardServiceDelegateProto_InteractiveState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto[1];
}
bool KeyguardServiceDelegateProto_InteractiveState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr KeyguardServiceDelegateProto_InteractiveState KeyguardServiceDelegateProto::INTERACTIVE_STATE_SLEEP;
constexpr KeyguardServiceDelegateProto_InteractiveState KeyguardServiceDelegateProto::INTERACTIVE_STATE_WAKING;
constexpr KeyguardServiceDelegateProto_InteractiveState KeyguardServiceDelegateProto::INTERACTIVE_STATE_AWAKE;
constexpr KeyguardServiceDelegateProto_InteractiveState KeyguardServiceDelegateProto::INTERACTIVE_STATE_GOING_TO_SLEEP;
constexpr KeyguardServiceDelegateProto_InteractiveState KeyguardServiceDelegateProto::InteractiveState_MIN;
constexpr KeyguardServiceDelegateProto_InteractiveState KeyguardServiceDelegateProto::InteractiveState_MAX;
constexpr int KeyguardServiceDelegateProto::InteractiveState_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WindowManagerPolicyProto_UserRotationMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto[2];
}
bool WindowManagerPolicyProto_UserRotationMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr WindowManagerPolicyProto_UserRotationMode WindowManagerPolicyProto::USER_ROTATION_FREE;
constexpr WindowManagerPolicyProto_UserRotationMode WindowManagerPolicyProto::USER_ROTATION_LOCKED;
constexpr WindowManagerPolicyProto_UserRotationMode WindowManagerPolicyProto::UserRotationMode_MIN;
constexpr WindowManagerPolicyProto_UserRotationMode WindowManagerPolicyProto::UserRotationMode_MAX;
constexpr int WindowManagerPolicyProto::UserRotationMode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AppTransitionProto_AppState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto[3];
}
bool AppTransitionProto_AppState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AppTransitionProto_AppState AppTransitionProto::APP_STATE_IDLE;
constexpr AppTransitionProto_AppState AppTransitionProto::APP_STATE_READY;
constexpr AppTransitionProto_AppState AppTransitionProto::APP_STATE_RUNNING;
constexpr AppTransitionProto_AppState AppTransitionProto::APP_STATE_TIMEOUT;
constexpr AppTransitionProto_AppState AppTransitionProto::AppState_MIN;
constexpr AppTransitionProto_AppState AppTransitionProto::AppState_MAX;
constexpr int AppTransitionProto::AppState_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WindowStateAnimatorProto_DrawState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto[4];
}
bool WindowStateAnimatorProto_DrawState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr WindowStateAnimatorProto_DrawState WindowStateAnimatorProto::NO_SURFACE;
constexpr WindowStateAnimatorProto_DrawState WindowStateAnimatorProto::DRAW_PENDING;
constexpr WindowStateAnimatorProto_DrawState WindowStateAnimatorProto::COMMIT_DRAW_PENDING;
constexpr WindowStateAnimatorProto_DrawState WindowStateAnimatorProto::READY_TO_SHOW;
constexpr WindowStateAnimatorProto_DrawState WindowStateAnimatorProto::HAS_DRAWN;
constexpr WindowStateAnimatorProto_DrawState WindowStateAnimatorProto::DrawState_MIN;
constexpr WindowStateAnimatorProto_DrawState WindowStateAnimatorProto::DrawState_MAX;
constexpr int WindowStateAnimatorProto::DrawState_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void WindowManagerServiceDumpProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_WindowManagerServiceDumpProto_default_instance_._instance.get_mutable()->policy_ = const_cast< ::com::android::server::wm::WindowManagerPolicyProto*>(
      ::com::android::server::wm::WindowManagerPolicyProto::internal_default_instance());
  ::com::android::server::wm::_WindowManagerServiceDumpProto_default_instance_._instance.get_mutable()->root_window_container_ = const_cast< ::com::android::server::wm::RootWindowContainerProto*>(
      ::com::android::server::wm::RootWindowContainerProto::internal_default_instance());
  ::com::android::server::wm::_WindowManagerServiceDumpProto_default_instance_._instance.get_mutable()->focused_window_ = const_cast< ::com::android::server::wm::IdentifierProto*>(
      ::com::android::server::wm::IdentifierProto::internal_default_instance());
  ::com::android::server::wm::_WindowManagerServiceDumpProto_default_instance_._instance.get_mutable()->input_method_window_ = const_cast< ::com::android::server::wm::IdentifierProto*>(
      ::com::android::server::wm::IdentifierProto::internal_default_instance());
}
class WindowManagerServiceDumpProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WindowManagerServiceDumpProto>()._has_bits_);
  static const ::com::android::server::wm::WindowManagerPolicyProto& policy(const WindowManagerServiceDumpProto* msg);
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::com::android::server::wm::RootWindowContainerProto& root_window_container(const WindowManagerServiceDumpProto* msg);
  static void set_has_root_window_container(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::com::android::server::wm::IdentifierProto& focused_window(const WindowManagerServiceDumpProto* msg);
  static void set_has_focused_window(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_focused_app(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::android::server::wm::IdentifierProto& input_method_window(const WindowManagerServiceDumpProto* msg);
  static void set_has_input_method_window(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_display_frozen(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_last_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_focused_display_id(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_hard_keyboard_available(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

const ::com::android::server::wm::WindowManagerPolicyProto&
WindowManagerServiceDumpProto::_Internal::policy(const WindowManagerServiceDumpProto* msg) {
  return *msg->policy_;
}
const ::com::android::server::wm::RootWindowContainerProto&
WindowManagerServiceDumpProto::_Internal::root_window_container(const WindowManagerServiceDumpProto* msg) {
  return *msg->root_window_container_;
}
const ::com::android::server::wm::IdentifierProto&
WindowManagerServiceDumpProto::_Internal::focused_window(const WindowManagerServiceDumpProto* msg) {
  return *msg->focused_window_;
}
const ::com::android::server::wm::IdentifierProto&
WindowManagerServiceDumpProto::_Internal::input_method_window(const WindowManagerServiceDumpProto* msg) {
  return *msg->input_method_window_;
}
WindowManagerServiceDumpProto::WindowManagerServiceDumpProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.WindowManagerServiceDumpProto)
}
WindowManagerServiceDumpProto::WindowManagerServiceDumpProto(const WindowManagerServiceDumpProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  focused_app_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_focused_app()) {
    focused_app_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.focused_app_);
  }
  if (from.has_policy()) {
    policy_ = new ::com::android::server::wm::WindowManagerPolicyProto(*from.policy_);
  } else {
    policy_ = nullptr;
  }
  if (from.has_root_window_container()) {
    root_window_container_ = new ::com::android::server::wm::RootWindowContainerProto(*from.root_window_container_);
  } else {
    root_window_container_ = nullptr;
  }
  if (from.has_focused_window()) {
    focused_window_ = new ::com::android::server::wm::IdentifierProto(*from.focused_window_);
  } else {
    focused_window_ = nullptr;
  }
  if (from.has_input_method_window()) {
    input_method_window_ = new ::com::android::server::wm::IdentifierProto(*from.input_method_window_);
  } else {
    input_method_window_ = nullptr;
  }
  ::memcpy(&rotation_, &from.rotation_,
    static_cast<size_t>(reinterpret_cast<char*>(&focused_display_id_) -
    reinterpret_cast<char*>(&rotation_)) + sizeof(focused_display_id_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.WindowManagerServiceDumpProto)
}

void WindowManagerServiceDumpProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WindowManagerServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  focused_app_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&policy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&focused_display_id_) -
      reinterpret_cast<char*>(&policy_)) + sizeof(focused_display_id_));
}

WindowManagerServiceDumpProto::~WindowManagerServiceDumpProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.WindowManagerServiceDumpProto)
  SharedDtor();
}

void WindowManagerServiceDumpProto::SharedDtor() {
  focused_app_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete policy_;
  if (this != internal_default_instance()) delete root_window_container_;
  if (this != internal_default_instance()) delete focused_window_;
  if (this != internal_default_instance()) delete input_method_window_;
}

void WindowManagerServiceDumpProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WindowManagerServiceDumpProto& WindowManagerServiceDumpProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WindowManagerServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void WindowManagerServiceDumpProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.WindowManagerServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      focused_app_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(policy_ != nullptr);
      policy_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(root_window_container_ != nullptr);
      root_window_container_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(focused_window_ != nullptr);
      focused_window_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(input_method_window_ != nullptr);
      input_method_window_->Clear();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&rotation_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&display_frozen_) -
        reinterpret_cast<char*>(&rotation_)) + sizeof(display_frozen_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&hard_keyboard_available_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&focused_display_id_) -
        reinterpret_cast<char*>(&hard_keyboard_available_)) + sizeof(focused_display_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WindowManagerServiceDumpProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.wm.WindowManagerPolicyProto policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_policy(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.RootWindowContainerProto root_window_container = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_root_window_container(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.IdentifierProto focused_window = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_focused_window(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string focused_app = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_focused_app(), ptr, ctx, "com.android.server.wm.WindowManagerServiceDumpProto.focused_app");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.IdentifierProto input_method_window = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_input_method_window(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool display_frozen = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_display_frozen(&has_bits);
          display_frozen_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 rotation = 7 [deprecated = true, (.android.typedef) = "android.view.Surface.Rotation"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_rotation(&has_bits);
          rotation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 last_orientation = 8 [deprecated = true, (.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_last_orientation(&has_bits);
          last_orientation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 focused_display_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_focused_display_id(&has_bits);
          focused_display_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool hard_keyboard_available = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_hard_keyboard_available(&has_bits);
          hard_keyboard_available_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WindowManagerServiceDumpProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.WindowManagerServiceDumpProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.wm.WindowManagerPolicyProto policy = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.RootWindowContainerProto root_window_container = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_root_window_container()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.IdentifierProto focused_window = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_focused_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string focused_app = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_focused_app()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->focused_app().data(), static_cast<int>(this->focused_app().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.wm.WindowManagerServiceDumpProto.focused_app");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.IdentifierProto input_method_window = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_input_method_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool display_frozen = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_display_frozen(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &display_frozen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rotation = 7 [deprecated = true, (.android.typedef) = "android.view.Surface.Rotation"];
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_rotation(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 last_orientation = 8 [deprecated = true, (.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_last_orientation(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_orientation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 focused_display_id = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_focused_display_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &focused_display_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool hard_keyboard_available = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          _Internal::set_has_hard_keyboard_available(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hard_keyboard_available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.WindowManagerServiceDumpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.WindowManagerServiceDumpProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WindowManagerServiceDumpProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.WindowManagerServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowManagerPolicyProto policy = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::policy(this), output);
  }

  // optional .com.android.server.wm.RootWindowContainerProto root_window_container = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::root_window_container(this), output);
  }

  // optional .com.android.server.wm.IdentifierProto focused_window = 3;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::focused_window(this), output);
  }

  // optional string focused_app = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->focused_app().data(), static_cast<int>(this->focused_app().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.WindowManagerServiceDumpProto.focused_app");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->focused_app(), output);
  }

  // optional .com.android.server.wm.IdentifierProto input_method_window = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::input_method_window(this), output);
  }

  // optional bool display_frozen = 6;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->display_frozen(), output);
  }

  // optional int32 rotation = 7 [deprecated = true, (.android.typedef) = "android.view.Surface.Rotation"];
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->rotation(), output);
  }

  // optional int32 last_orientation = 8 [deprecated = true, (.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(8, this->last_orientation(), output);
  }

  // optional int32 focused_display_id = 9;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(9, this->focused_display_id(), output);
  }

  // optional bool hard_keyboard_available = 10;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(10, this->hard_keyboard_available(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.WindowManagerServiceDumpProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WindowManagerServiceDumpProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.WindowManagerServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowManagerPolicyProto policy = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::policy(this), target);
  }

  // optional .com.android.server.wm.RootWindowContainerProto root_window_container = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::root_window_container(this), target);
  }

  // optional .com.android.server.wm.IdentifierProto focused_window = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::focused_window(this), target);
  }

  // optional string focused_app = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->focused_app().data(), static_cast<int>(this->focused_app().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.WindowManagerServiceDumpProto.focused_app");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->focused_app(), target);
  }

  // optional .com.android.server.wm.IdentifierProto input_method_window = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::input_method_window(this), target);
  }

  // optional bool display_frozen = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->display_frozen(), target);
  }

  // optional int32 rotation = 7 [deprecated = true, (.android.typedef) = "android.view.Surface.Rotation"];
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->rotation(), target);
  }

  // optional int32 last_orientation = 8 [deprecated = true, (.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->last_orientation(), target);
  }

  // optional int32 focused_display_id = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->focused_display_id(), target);
  }

  // optional bool hard_keyboard_available = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->hard_keyboard_available(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.WindowManagerServiceDumpProto)
  return target;
}

size_t WindowManagerServiceDumpProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.WindowManagerServiceDumpProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string focused_app = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->focused_app());
    }

    // optional .com.android.server.wm.WindowManagerPolicyProto policy = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *policy_);
    }

    // optional .com.android.server.wm.RootWindowContainerProto root_window_container = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *root_window_container_);
    }

    // optional .com.android.server.wm.IdentifierProto focused_window = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *focused_window_);
    }

    // optional .com.android.server.wm.IdentifierProto input_method_window = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *input_method_window_);
    }

    // optional int32 rotation = 7 [deprecated = true, (.android.typedef) = "android.view.Surface.Rotation"];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->rotation());
    }

    // optional int32 last_orientation = 8 [deprecated = true, (.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->last_orientation());
    }

    // optional bool display_frozen = 6;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional bool hard_keyboard_available = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 1;
    }

    // optional int32 focused_display_id = 9;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->focused_display_id());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WindowManagerServiceDumpProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.WindowManagerServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WindowManagerServiceDumpProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WindowManagerServiceDumpProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.WindowManagerServiceDumpProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.WindowManagerServiceDumpProto)
    MergeFrom(*source);
  }
}

void WindowManagerServiceDumpProto::MergeFrom(const WindowManagerServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.WindowManagerServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      focused_app_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.focused_app_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_policy()->::com::android::server::wm::WindowManagerPolicyProto::MergeFrom(from.policy());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_root_window_container()->::com::android::server::wm::RootWindowContainerProto::MergeFrom(from.root_window_container());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_focused_window()->::com::android::server::wm::IdentifierProto::MergeFrom(from.focused_window());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_input_method_window()->::com::android::server::wm::IdentifierProto::MergeFrom(from.input_method_window());
    }
    if (cached_has_bits & 0x00000020u) {
      rotation_ = from.rotation_;
    }
    if (cached_has_bits & 0x00000040u) {
      last_orientation_ = from.last_orientation_;
    }
    if (cached_has_bits & 0x00000080u) {
      display_frozen_ = from.display_frozen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      hard_keyboard_available_ = from.hard_keyboard_available_;
    }
    if (cached_has_bits & 0x00000200u) {
      focused_display_id_ = from.focused_display_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WindowManagerServiceDumpProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.WindowManagerServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WindowManagerServiceDumpProto::CopyFrom(const WindowManagerServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.WindowManagerServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowManagerServiceDumpProto::IsInitialized() const {
  return true;
}

void WindowManagerServiceDumpProto::InternalSwap(WindowManagerServiceDumpProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  focused_app_.Swap(&other->focused_app_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(policy_, other->policy_);
  swap(root_window_container_, other->root_window_container_);
  swap(focused_window_, other->focused_window_);
  swap(input_method_window_, other->input_method_window_);
  swap(rotation_, other->rotation_);
  swap(last_orientation_, other->last_orientation_);
  swap(display_frozen_, other->display_frozen_);
  swap(hard_keyboard_available_, other->hard_keyboard_available_);
  swap(focused_display_id_, other->focused_display_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WindowManagerServiceDumpProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RootWindowContainerProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_RootWindowContainerProto_default_instance_._instance.get_mutable()->window_container_ = const_cast< ::com::android::server::wm::WindowContainerProto*>(
      ::com::android::server::wm::WindowContainerProto::internal_default_instance());
  ::com::android::server::wm::_RootWindowContainerProto_default_instance_._instance.get_mutable()->keyguard_controller_ = const_cast< ::com::android::server::wm::KeyguardControllerProto*>(
      ::com::android::server::wm::KeyguardControllerProto::internal_default_instance());
}
class RootWindowContainerProto::_Internal {
 public:
  using HasBits = decltype(std::declval<RootWindowContainerProto>()._has_bits_);
  static const ::com::android::server::wm::WindowContainerProto& window_container(const RootWindowContainerProto* msg);
  static void set_has_window_container(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::android::server::wm::KeyguardControllerProto& keyguard_controller(const RootWindowContainerProto* msg);
  static void set_has_keyguard_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_is_home_recents_component(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default_min_size_resizable_task(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::com::android::server::wm::WindowContainerProto&
RootWindowContainerProto::_Internal::window_container(const RootWindowContainerProto* msg) {
  return *msg->window_container_;
}
const ::com::android::server::wm::KeyguardControllerProto&
RootWindowContainerProto::_Internal::keyguard_controller(const RootWindowContainerProto* msg) {
  return *msg->keyguard_controller_;
}
RootWindowContainerProto::RootWindowContainerProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.RootWindowContainerProto)
}
RootWindowContainerProto::RootWindowContainerProto(const RootWindowContainerProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      displays_(from.displays_),
      windows_(from.windows_),
      pending_activities_(from.pending_activities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_window_container()) {
    window_container_ = new ::com::android::server::wm::WindowContainerProto(*from.window_container_);
  } else {
    window_container_ = nullptr;
  }
  if (from.has_keyguard_controller()) {
    keyguard_controller_ = new ::com::android::server::wm::KeyguardControllerProto(*from.keyguard_controller_);
  } else {
    keyguard_controller_ = nullptr;
  }
  ::memcpy(&is_home_recents_component_, &from.is_home_recents_component_,
    static_cast<size_t>(reinterpret_cast<char*>(&default_min_size_resizable_task_) -
    reinterpret_cast<char*>(&is_home_recents_component_)) + sizeof(default_min_size_resizable_task_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.RootWindowContainerProto)
}

void RootWindowContainerProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RootWindowContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&window_container_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&default_min_size_resizable_task_) -
      reinterpret_cast<char*>(&window_container_)) + sizeof(default_min_size_resizable_task_));
}

RootWindowContainerProto::~RootWindowContainerProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.RootWindowContainerProto)
  SharedDtor();
}

void RootWindowContainerProto::SharedDtor() {
  if (this != internal_default_instance()) delete window_container_;
  if (this != internal_default_instance()) delete keyguard_controller_;
}

void RootWindowContainerProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RootWindowContainerProto& RootWindowContainerProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RootWindowContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void RootWindowContainerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.RootWindowContainerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  displays_.Clear();
  windows_.Clear();
  pending_activities_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(window_container_ != nullptr);
      window_container_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(keyguard_controller_ != nullptr);
      keyguard_controller_->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&is_home_recents_component_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_min_size_resizable_task_) -
        reinterpret_cast<char*>(&is_home_recents_component_)) + sizeof(default_min_size_resizable_task_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RootWindowContainerProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_window_container(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.DisplayContentProto displays = 2 [deprecated = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_displays(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.WindowStateProto windows = 4 [deprecated = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_windows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.KeyguardControllerProto keyguard_controller = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_keyguard_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_home_recents_component = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_is_home_recents_component(&has_bits);
          is_home_recents_component_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.IdentifierProto pending_activities = 7 [deprecated = true];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_pending_activities(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 58);
        } else goto handle_unusual;
        continue;
      // optional int32 default_min_size_resizable_task = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_default_min_size_resizable_task(&has_bits);
          default_min_size_resizable_task_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RootWindowContainerProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.RootWindowContainerProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window_container()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.DisplayContentProto displays = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_displays()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.WindowStateProto windows = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_windows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.KeyguardControllerProto keyguard_controller = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_keyguard_controller()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_home_recents_component = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_is_home_recents_component(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_home_recents_component_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.IdentifierProto pending_activities = 7 [deprecated = true];
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_pending_activities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 default_min_size_resizable_task = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_default_min_size_resizable_task(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &default_min_size_resizable_task_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.RootWindowContainerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.RootWindowContainerProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RootWindowContainerProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.RootWindowContainerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::window_container(this), output);
  }

  // repeated .com.android.server.wm.DisplayContentProto displays = 2 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->displays_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->displays(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.wm.WindowStateProto windows = 4 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->windows_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->windows(static_cast<int>(i)),
      output);
  }

  // optional .com.android.server.wm.KeyguardControllerProto keyguard_controller = 5;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::keyguard_controller(this), output);
  }

  // optional bool is_home_recents_component = 6;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->is_home_recents_component(), output);
  }

  // repeated .com.android.server.wm.IdentifierProto pending_activities = 7 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pending_activities_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->pending_activities(static_cast<int>(i)),
      output);
  }

  // optional int32 default_min_size_resizable_task = 8;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(8, this->default_min_size_resizable_task(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.RootWindowContainerProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* RootWindowContainerProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.RootWindowContainerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::window_container(this), target);
  }

  // repeated .com.android.server.wm.DisplayContentProto displays = 2 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->displays_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->displays(static_cast<int>(i)), target);
  }

  // repeated .com.android.server.wm.WindowStateProto windows = 4 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->windows_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->windows(static_cast<int>(i)), target);
  }

  // optional .com.android.server.wm.KeyguardControllerProto keyguard_controller = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::keyguard_controller(this), target);
  }

  // optional bool is_home_recents_component = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->is_home_recents_component(), target);
  }

  // repeated .com.android.server.wm.IdentifierProto pending_activities = 7 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pending_activities_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->pending_activities(static_cast<int>(i)), target);
  }

  // optional int32 default_min_size_resizable_task = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->default_min_size_resizable_task(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.RootWindowContainerProto)
  return target;
}

size_t RootWindowContainerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.RootWindowContainerProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.wm.DisplayContentProto displays = 2 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->displays_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->displays(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.wm.WindowStateProto windows = 4 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->windows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->windows(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.wm.IdentifierProto pending_activities = 7 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->pending_activities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->pending_activities(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .com.android.server.wm.WindowContainerProto window_container = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_container_);
    }

    // optional .com.android.server.wm.KeyguardControllerProto keyguard_controller = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *keyguard_controller_);
    }

    // optional bool is_home_recents_component = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional int32 default_min_size_resizable_task = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->default_min_size_resizable_task());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RootWindowContainerProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.RootWindowContainerProto)
  GOOGLE_DCHECK_NE(&from, this);
  const RootWindowContainerProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RootWindowContainerProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.RootWindowContainerProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.RootWindowContainerProto)
    MergeFrom(*source);
  }
}

void RootWindowContainerProto::MergeFrom(const RootWindowContainerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.RootWindowContainerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  displays_.MergeFrom(from.displays_);
  windows_.MergeFrom(from.windows_);
  pending_activities_.MergeFrom(from.pending_activities_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_window_container()->::com::android::server::wm::WindowContainerProto::MergeFrom(from.window_container());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_keyguard_controller()->::com::android::server::wm::KeyguardControllerProto::MergeFrom(from.keyguard_controller());
    }
    if (cached_has_bits & 0x00000004u) {
      is_home_recents_component_ = from.is_home_recents_component_;
    }
    if (cached_has_bits & 0x00000008u) {
      default_min_size_resizable_task_ = from.default_min_size_resizable_task_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RootWindowContainerProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.RootWindowContainerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RootWindowContainerProto::CopyFrom(const RootWindowContainerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.RootWindowContainerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RootWindowContainerProto::IsInitialized() const {
  return true;
}

void RootWindowContainerProto::InternalSwap(RootWindowContainerProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&displays_)->InternalSwap(CastToBase(&other->displays_));
  CastToBase(&windows_)->InternalSwap(CastToBase(&other->windows_));
  CastToBase(&pending_activities_)->InternalSwap(CastToBase(&other->pending_activities_));
  swap(window_container_, other->window_container_);
  swap(keyguard_controller_, other->keyguard_controller_);
  swap(is_home_recents_component_, other->is_home_recents_component_);
  swap(default_min_size_resizable_task_, other->default_min_size_resizable_task_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RootWindowContainerProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BarControllerProto::InitAsDefaultInstance() {
}
class BarControllerProto::_Internal {
 public:
  using HasBits = decltype(std::declval<BarControllerProto>()._has_bits_);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_transient_state(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

BarControllerProto::BarControllerProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.BarControllerProto)
}
BarControllerProto::BarControllerProto(const BarControllerProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&transient_state_) -
    reinterpret_cast<char*>(&state_)) + sizeof(transient_state_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.BarControllerProto)
}

void BarControllerProto::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transient_state_) -
      reinterpret_cast<char*>(&state_)) + sizeof(transient_state_));
}

BarControllerProto::~BarControllerProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.BarControllerProto)
  SharedDtor();
}

void BarControllerProto::SharedDtor() {
}

void BarControllerProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BarControllerProto& BarControllerProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BarControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void BarControllerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.BarControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&transient_state_) -
        reinterpret_cast<char*>(&state_)) + sizeof(transient_state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BarControllerProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.app.StatusBarManagerProto.WindowState state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::app::StatusBarManagerProto_WindowState_IsValid(val))) {
            set_state(static_cast<::android::app::StatusBarManagerProto_WindowState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.app.StatusBarManagerProto.TransientWindowState transient_state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::app::StatusBarManagerProto_TransientWindowState_IsValid(val))) {
            set_transient_state(static_cast<::android::app::StatusBarManagerProto_TransientWindowState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BarControllerProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.BarControllerProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.app.StatusBarManagerProto.WindowState state = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::app::StatusBarManagerProto_WindowState_IsValid(value)) {
            set_state(static_cast< ::android::app::StatusBarManagerProto_WindowState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.app.StatusBarManagerProto.TransientWindowState transient_state = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::app::StatusBarManagerProto_TransientWindowState_IsValid(value)) {
            set_transient_state(static_cast< ::android::app::StatusBarManagerProto_TransientWindowState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.BarControllerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.BarControllerProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BarControllerProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.BarControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.app.StatusBarManagerProto.WindowState state = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // optional .android.app.StatusBarManagerProto.TransientWindowState transient_state = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->transient_state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.BarControllerProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* BarControllerProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.BarControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.app.StatusBarManagerProto.WindowState state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // optional .android.app.StatusBarManagerProto.TransientWindowState transient_state = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->transient_state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.BarControllerProto)
  return target;
}

size_t BarControllerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.BarControllerProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .android.app.StatusBarManagerProto.WindowState state = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->state());
    }

    // optional .android.app.StatusBarManagerProto.TransientWindowState transient_state = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->transient_state());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BarControllerProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.BarControllerProto)
  GOOGLE_DCHECK_NE(&from, this);
  const BarControllerProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BarControllerProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.BarControllerProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.BarControllerProto)
    MergeFrom(*source);
  }
}

void BarControllerProto::MergeFrom(const BarControllerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.BarControllerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000002u) {
      transient_state_ = from.transient_state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BarControllerProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.BarControllerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BarControllerProto::CopyFrom(const BarControllerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.BarControllerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BarControllerProto::IsInitialized() const {
  return true;
}

void BarControllerProto::InternalSwap(BarControllerProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(state_, other->state_);
  swap(transient_state_, other->transient_state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BarControllerProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WindowOrientationListenerProto::InitAsDefaultInstance() {
}
class WindowOrientationListenerProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WindowOrientationListenerProto>()._has_bits_);
  static void set_has_enabled(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

WindowOrientationListenerProto::WindowOrientationListenerProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.WindowOrientationListenerProto)
}
WindowOrientationListenerProto::WindowOrientationListenerProto(const WindowOrientationListenerProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&enabled_, &from.enabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&rotation_) -
    reinterpret_cast<char*>(&enabled_)) + sizeof(rotation_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.WindowOrientationListenerProto)
}

void WindowOrientationListenerProto::SharedCtor() {
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(rotation_));
}

WindowOrientationListenerProto::~WindowOrientationListenerProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.WindowOrientationListenerProto)
  SharedDtor();
}

void WindowOrientationListenerProto::SharedDtor() {
}

void WindowOrientationListenerProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WindowOrientationListenerProto& WindowOrientationListenerProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WindowOrientationListenerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void WindowOrientationListenerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.WindowOrientationListenerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&enabled_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rotation_) -
        reinterpret_cast<char*>(&enabled_)) + sizeof(rotation_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WindowOrientationListenerProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool enabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_enabled(&has_bits);
          enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.SurfaceProto.Rotation rotation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::view::SurfaceProto_Rotation_IsValid(val))) {
            set_rotation(static_cast<::android::view::SurfaceProto_Rotation>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WindowOrientationListenerProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.WindowOrientationListenerProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool enabled = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_enabled(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.SurfaceProto.Rotation rotation = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::view::SurfaceProto_Rotation_IsValid(value)) {
            set_rotation(static_cast< ::android::view::SurfaceProto_Rotation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.WindowOrientationListenerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.WindowOrientationListenerProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WindowOrientationListenerProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.WindowOrientationListenerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool enabled = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // optional .android.view.SurfaceProto.Rotation rotation = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->rotation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.WindowOrientationListenerProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WindowOrientationListenerProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.WindowOrientationListenerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool enabled = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // optional .android.view.SurfaceProto.Rotation rotation = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->rotation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.WindowOrientationListenerProto)
  return target;
}

size_t WindowOrientationListenerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.WindowOrientationListenerProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool enabled = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional .android.view.SurfaceProto.Rotation rotation = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->rotation());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WindowOrientationListenerProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.WindowOrientationListenerProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WindowOrientationListenerProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WindowOrientationListenerProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.WindowOrientationListenerProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.WindowOrientationListenerProto)
    MergeFrom(*source);
  }
}

void WindowOrientationListenerProto::MergeFrom(const WindowOrientationListenerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.WindowOrientationListenerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      enabled_ = from.enabled_;
    }
    if (cached_has_bits & 0x00000002u) {
      rotation_ = from.rotation_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WindowOrientationListenerProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.WindowOrientationListenerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WindowOrientationListenerProto::CopyFrom(const WindowOrientationListenerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.WindowOrientationListenerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowOrientationListenerProto::IsInitialized() const {
  return true;
}

void WindowOrientationListenerProto::InternalSwap(WindowOrientationListenerProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(enabled_, other->enabled_);
  swap(rotation_, other->rotation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WindowOrientationListenerProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void KeyguardServiceDelegateProto::InitAsDefaultInstance() {
}
class KeyguardServiceDelegateProto::_Internal {
 public:
  using HasBits = decltype(std::declval<KeyguardServiceDelegateProto>()._has_bits_);
  static void set_has_showing(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_occluded(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_secure(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_screen_state(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_interactive_state(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

KeyguardServiceDelegateProto::KeyguardServiceDelegateProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.KeyguardServiceDelegateProto)
}
KeyguardServiceDelegateProto::KeyguardServiceDelegateProto(const KeyguardServiceDelegateProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&showing_, &from.showing_,
    static_cast<size_t>(reinterpret_cast<char*>(&interactive_state_) -
    reinterpret_cast<char*>(&showing_)) + sizeof(interactive_state_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.KeyguardServiceDelegateProto)
}

void KeyguardServiceDelegateProto::SharedCtor() {
  ::memset(&showing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interactive_state_) -
      reinterpret_cast<char*>(&showing_)) + sizeof(interactive_state_));
}

KeyguardServiceDelegateProto::~KeyguardServiceDelegateProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.KeyguardServiceDelegateProto)
  SharedDtor();
}

void KeyguardServiceDelegateProto::SharedDtor() {
}

void KeyguardServiceDelegateProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeyguardServiceDelegateProto& KeyguardServiceDelegateProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_KeyguardServiceDelegateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void KeyguardServiceDelegateProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.KeyguardServiceDelegateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&showing_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&interactive_state_) -
        reinterpret_cast<char*>(&showing_)) + sizeof(interactive_state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* KeyguardServiceDelegateProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool showing = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_showing(&has_bits);
          showing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool occluded = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_occluded(&has_bits);
          occluded_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool secure = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_secure(&has_bits);
          secure_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.KeyguardServiceDelegateProto.ScreenState screen_state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::com::android::server::wm::KeyguardServiceDelegateProto_ScreenState_IsValid(val))) {
            set_screen_state(static_cast<::com::android::server::wm::KeyguardServiceDelegateProto_ScreenState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.KeyguardServiceDelegateProto.InteractiveState interactive_state = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::com::android::server::wm::KeyguardServiceDelegateProto_InteractiveState_IsValid(val))) {
            set_interactive_state(static_cast<::com::android::server::wm::KeyguardServiceDelegateProto_InteractiveState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool KeyguardServiceDelegateProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.KeyguardServiceDelegateProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool showing = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_showing(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &showing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool occluded = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_occluded(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &occluded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool secure = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_secure(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &secure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.KeyguardServiceDelegateProto.ScreenState screen_state = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::android::server::wm::KeyguardServiceDelegateProto_ScreenState_IsValid(value)) {
            set_screen_state(static_cast< ::com::android::server::wm::KeyguardServiceDelegateProto_ScreenState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.KeyguardServiceDelegateProto.InteractiveState interactive_state = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::android::server::wm::KeyguardServiceDelegateProto_InteractiveState_IsValid(value)) {
            set_interactive_state(static_cast< ::com::android::server::wm::KeyguardServiceDelegateProto_InteractiveState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.KeyguardServiceDelegateProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.KeyguardServiceDelegateProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void KeyguardServiceDelegateProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.KeyguardServiceDelegateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool showing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->showing(), output);
  }

  // optional bool occluded = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->occluded(), output);
  }

  // optional bool secure = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->secure(), output);
  }

  // optional .com.android.server.wm.KeyguardServiceDelegateProto.ScreenState screen_state = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      4, this->screen_state(), output);
  }

  // optional .com.android.server.wm.KeyguardServiceDelegateProto.InteractiveState interactive_state = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      5, this->interactive_state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.KeyguardServiceDelegateProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyguardServiceDelegateProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.KeyguardServiceDelegateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool showing = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->showing(), target);
  }

  // optional bool occluded = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->occluded(), target);
  }

  // optional bool secure = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->secure(), target);
  }

  // optional .com.android.server.wm.KeyguardServiceDelegateProto.ScreenState screen_state = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->screen_state(), target);
  }

  // optional .com.android.server.wm.KeyguardServiceDelegateProto.InteractiveState interactive_state = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->interactive_state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.KeyguardServiceDelegateProto)
  return target;
}

size_t KeyguardServiceDelegateProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.KeyguardServiceDelegateProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional bool showing = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool occluded = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool secure = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional .com.android.server.wm.KeyguardServiceDelegateProto.ScreenState screen_state = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->screen_state());
    }

    // optional .com.android.server.wm.KeyguardServiceDelegateProto.InteractiveState interactive_state = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->interactive_state());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyguardServiceDelegateProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.KeyguardServiceDelegateProto)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyguardServiceDelegateProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyguardServiceDelegateProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.KeyguardServiceDelegateProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.KeyguardServiceDelegateProto)
    MergeFrom(*source);
  }
}

void KeyguardServiceDelegateProto::MergeFrom(const KeyguardServiceDelegateProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.KeyguardServiceDelegateProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      showing_ = from.showing_;
    }
    if (cached_has_bits & 0x00000002u) {
      occluded_ = from.occluded_;
    }
    if (cached_has_bits & 0x00000004u) {
      secure_ = from.secure_;
    }
    if (cached_has_bits & 0x00000008u) {
      screen_state_ = from.screen_state_;
    }
    if (cached_has_bits & 0x00000010u) {
      interactive_state_ = from.interactive_state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void KeyguardServiceDelegateProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.KeyguardServiceDelegateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyguardServiceDelegateProto::CopyFrom(const KeyguardServiceDelegateProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.KeyguardServiceDelegateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyguardServiceDelegateProto::IsInitialized() const {
  return true;
}

void KeyguardServiceDelegateProto::InternalSwap(KeyguardServiceDelegateProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(showing_, other->showing_);
  swap(occluded_, other->occluded_);
  swap(secure_, other->secure_);
  swap(screen_state_, other->screen_state_);
  swap(interactive_state_, other->interactive_state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyguardServiceDelegateProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void KeyguardControllerProto::InitAsDefaultInstance() {
}
class KeyguardControllerProto::_Internal {
 public:
  using HasBits = decltype(std::declval<KeyguardControllerProto>()._has_bits_);
  static void set_has_keyguard_showing(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_aod_showing(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

KeyguardControllerProto::KeyguardControllerProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.KeyguardControllerProto)
}
KeyguardControllerProto::KeyguardControllerProto(const KeyguardControllerProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      keyguard_occluded_states_(from.keyguard_occluded_states_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&keyguard_showing_, &from.keyguard_showing_,
    static_cast<size_t>(reinterpret_cast<char*>(&aod_showing_) -
    reinterpret_cast<char*>(&keyguard_showing_)) + sizeof(aod_showing_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.KeyguardControllerProto)
}

void KeyguardControllerProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_KeyguardControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&keyguard_showing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&aod_showing_) -
      reinterpret_cast<char*>(&keyguard_showing_)) + sizeof(aod_showing_));
}

KeyguardControllerProto::~KeyguardControllerProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.KeyguardControllerProto)
  SharedDtor();
}

void KeyguardControllerProto::SharedDtor() {
}

void KeyguardControllerProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeyguardControllerProto& KeyguardControllerProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_KeyguardControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void KeyguardControllerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.KeyguardControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyguard_occluded_states_.Clear();
  ::memset(&keyguard_showing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&aod_showing_) -
      reinterpret_cast<char*>(&keyguard_showing_)) + sizeof(aod_showing_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* KeyguardControllerProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool keyguard_showing = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_keyguard_showing(&has_bits);
          keyguard_showing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.KeyguardOccludedProto keyguard_occluded_states = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_keyguard_occluded_states(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // optional bool aod_showing = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_aod_showing(&has_bits);
          aod_showing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool KeyguardControllerProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.KeyguardControllerProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool keyguard_showing = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_keyguard_showing(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keyguard_showing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.KeyguardOccludedProto keyguard_occluded_states = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_keyguard_occluded_states()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool aod_showing = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_aod_showing(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &aod_showing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.KeyguardControllerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.KeyguardControllerProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void KeyguardControllerProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.KeyguardControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool keyguard_showing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->keyguard_showing(), output);
  }

  // repeated .com.android.server.wm.KeyguardOccludedProto keyguard_occluded_states = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keyguard_occluded_states_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->keyguard_occluded_states(static_cast<int>(i)),
      output);
  }

  // optional bool aod_showing = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->aod_showing(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.KeyguardControllerProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyguardControllerProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.KeyguardControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool keyguard_showing = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->keyguard_showing(), target);
  }

  // repeated .com.android.server.wm.KeyguardOccludedProto keyguard_occluded_states = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keyguard_occluded_states_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->keyguard_occluded_states(static_cast<int>(i)), target);
  }

  // optional bool aod_showing = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->aod_showing(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.KeyguardControllerProto)
  return target;
}

size_t KeyguardControllerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.KeyguardControllerProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.wm.KeyguardOccludedProto keyguard_occluded_states = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->keyguard_occluded_states_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->keyguard_occluded_states(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool keyguard_showing = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool aod_showing = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyguardControllerProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.KeyguardControllerProto)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyguardControllerProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyguardControllerProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.KeyguardControllerProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.KeyguardControllerProto)
    MergeFrom(*source);
  }
}

void KeyguardControllerProto::MergeFrom(const KeyguardControllerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.KeyguardControllerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keyguard_occluded_states_.MergeFrom(from.keyguard_occluded_states_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      keyguard_showing_ = from.keyguard_showing_;
    }
    if (cached_has_bits & 0x00000002u) {
      aod_showing_ = from.aod_showing_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void KeyguardControllerProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.KeyguardControllerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyguardControllerProto::CopyFrom(const KeyguardControllerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.KeyguardControllerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyguardControllerProto::IsInitialized() const {
  return true;
}

void KeyguardControllerProto::InternalSwap(KeyguardControllerProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&keyguard_occluded_states_)->InternalSwap(CastToBase(&other->keyguard_occluded_states_));
  swap(keyguard_showing_, other->keyguard_showing_);
  swap(aod_showing_, other->aod_showing_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyguardControllerProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void KeyguardOccludedProto::InitAsDefaultInstance() {
}
class KeyguardOccludedProto::_Internal {
 public:
  using HasBits = decltype(std::declval<KeyguardOccludedProto>()._has_bits_);
  static void set_has_display_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_keyguard_occluded(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

KeyguardOccludedProto::KeyguardOccludedProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.KeyguardOccludedProto)
}
KeyguardOccludedProto::KeyguardOccludedProto(const KeyguardOccludedProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&display_id_, &from.display_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&keyguard_occluded_) -
    reinterpret_cast<char*>(&display_id_)) + sizeof(keyguard_occluded_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.KeyguardOccludedProto)
}

void KeyguardOccludedProto::SharedCtor() {
  ::memset(&display_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keyguard_occluded_) -
      reinterpret_cast<char*>(&display_id_)) + sizeof(keyguard_occluded_));
}

KeyguardOccludedProto::~KeyguardOccludedProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.KeyguardOccludedProto)
  SharedDtor();
}

void KeyguardOccludedProto::SharedDtor() {
}

void KeyguardOccludedProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeyguardOccludedProto& KeyguardOccludedProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_KeyguardOccludedProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void KeyguardOccludedProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.KeyguardOccludedProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&display_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&keyguard_occluded_) -
        reinterpret_cast<char*>(&display_id_)) + sizeof(keyguard_occluded_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* KeyguardOccludedProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 display_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_display_id(&has_bits);
          display_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool keyguard_occluded = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_keyguard_occluded(&has_bits);
          keyguard_occluded_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool KeyguardOccludedProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.KeyguardOccludedProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 display_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_display_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &display_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool keyguard_occluded = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_keyguard_occluded(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keyguard_occluded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.KeyguardOccludedProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.KeyguardOccludedProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void KeyguardOccludedProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.KeyguardOccludedProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 display_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->display_id(), output);
  }

  // optional bool keyguard_occluded = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->keyguard_occluded(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.KeyguardOccludedProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyguardOccludedProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.KeyguardOccludedProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 display_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->display_id(), target);
  }

  // optional bool keyguard_occluded = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->keyguard_occluded(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.KeyguardOccludedProto)
  return target;
}

size_t KeyguardOccludedProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.KeyguardOccludedProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 display_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->display_id());
    }

    // optional bool keyguard_occluded = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyguardOccludedProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.KeyguardOccludedProto)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyguardOccludedProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyguardOccludedProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.KeyguardOccludedProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.KeyguardOccludedProto)
    MergeFrom(*source);
  }
}

void KeyguardOccludedProto::MergeFrom(const KeyguardOccludedProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.KeyguardOccludedProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      display_id_ = from.display_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      keyguard_occluded_ = from.keyguard_occluded_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void KeyguardOccludedProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.KeyguardOccludedProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyguardOccludedProto::CopyFrom(const KeyguardOccludedProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.KeyguardOccludedProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyguardOccludedProto::IsInitialized() const {
  return true;
}

void KeyguardOccludedProto::InternalSwap(KeyguardOccludedProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(display_id_, other->display_id_);
  swap(keyguard_occluded_, other->keyguard_occluded_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyguardOccludedProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WindowManagerPolicyProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_WindowManagerPolicyProto_default_instance_._instance.get_mutable()->focused_window_ = const_cast< ::com::android::server::wm::IdentifierProto*>(
      ::com::android::server::wm::IdentifierProto::internal_default_instance());
  ::com::android::server::wm::_WindowManagerPolicyProto_default_instance_._instance.get_mutable()->top_fullscreen_opaque_window_ = const_cast< ::com::android::server::wm::IdentifierProto*>(
      ::com::android::server::wm::IdentifierProto::internal_default_instance());
  ::com::android::server::wm::_WindowManagerPolicyProto_default_instance_._instance.get_mutable()->top_fullscreen_opaque_or_dimming_window_ = const_cast< ::com::android::server::wm::IdentifierProto*>(
      ::com::android::server::wm::IdentifierProto::internal_default_instance());
  ::com::android::server::wm::_WindowManagerPolicyProto_default_instance_._instance.get_mutable()->status_bar_ = const_cast< ::com::android::server::wm::BarControllerProto*>(
      ::com::android::server::wm::BarControllerProto::internal_default_instance());
  ::com::android::server::wm::_WindowManagerPolicyProto_default_instance_._instance.get_mutable()->navigation_bar_ = const_cast< ::com::android::server::wm::BarControllerProto*>(
      ::com::android::server::wm::BarControllerProto::internal_default_instance());
  ::com::android::server::wm::_WindowManagerPolicyProto_default_instance_._instance.get_mutable()->orientation_listener_ = const_cast< ::com::android::server::wm::WindowOrientationListenerProto*>(
      ::com::android::server::wm::WindowOrientationListenerProto::internal_default_instance());
  ::com::android::server::wm::_WindowManagerPolicyProto_default_instance_._instance.get_mutable()->keyguard_delegate_ = const_cast< ::com::android::server::wm::KeyguardServiceDelegateProto*>(
      ::com::android::server::wm::KeyguardServiceDelegateProto::internal_default_instance());
}
class WindowManagerPolicyProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WindowManagerPolicyProto>()._has_bits_);
  static void set_has_last_system_ui_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_rotation_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_screen_on_fully(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_keyguard_draw_complete(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_window_manager_draw_complete(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_focused_app_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::android::server::wm::IdentifierProto& focused_window(const WindowManagerPolicyProto* msg);
  static void set_has_focused_window(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::com::android::server::wm::IdentifierProto& top_fullscreen_opaque_window(const WindowManagerPolicyProto* msg);
  static void set_has_top_fullscreen_opaque_window(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::com::android::server::wm::IdentifierProto& top_fullscreen_opaque_or_dimming_window(const WindowManagerPolicyProto* msg);
  static void set_has_top_fullscreen_opaque_or_dimming_window(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_keyguard_occluded(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_keyguard_occluded_changed(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_keyguard_occluded_pending(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_force_status_bar(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_force_status_bar_from_keyguard(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static const ::com::android::server::wm::BarControllerProto& status_bar(const WindowManagerPolicyProto* msg);
  static void set_has_status_bar(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::com::android::server::wm::BarControllerProto& navigation_bar(const WindowManagerPolicyProto* msg);
  static void set_has_navigation_bar(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::com::android::server::wm::WindowOrientationListenerProto& orientation_listener(const WindowManagerPolicyProto* msg);
  static void set_has_orientation_listener(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::com::android::server::wm::KeyguardServiceDelegateProto& keyguard_delegate(const WindowManagerPolicyProto* msg);
  static void set_has_keyguard_delegate(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

const ::com::android::server::wm::IdentifierProto&
WindowManagerPolicyProto::_Internal::focused_window(const WindowManagerPolicyProto* msg) {
  return *msg->focused_window_;
}
const ::com::android::server::wm::IdentifierProto&
WindowManagerPolicyProto::_Internal::top_fullscreen_opaque_window(const WindowManagerPolicyProto* msg) {
  return *msg->top_fullscreen_opaque_window_;
}
const ::com::android::server::wm::IdentifierProto&
WindowManagerPolicyProto::_Internal::top_fullscreen_opaque_or_dimming_window(const WindowManagerPolicyProto* msg) {
  return *msg->top_fullscreen_opaque_or_dimming_window_;
}
const ::com::android::server::wm::BarControllerProto&
WindowManagerPolicyProto::_Internal::status_bar(const WindowManagerPolicyProto* msg) {
  return *msg->status_bar_;
}
const ::com::android::server::wm::BarControllerProto&
WindowManagerPolicyProto::_Internal::navigation_bar(const WindowManagerPolicyProto* msg) {
  return *msg->navigation_bar_;
}
const ::com::android::server::wm::WindowOrientationListenerProto&
WindowManagerPolicyProto::_Internal::orientation_listener(const WindowManagerPolicyProto* msg) {
  return *msg->orientation_listener_;
}
const ::com::android::server::wm::KeyguardServiceDelegateProto&
WindowManagerPolicyProto::_Internal::keyguard_delegate(const WindowManagerPolicyProto* msg) {
  return *msg->keyguard_delegate_;
}
WindowManagerPolicyProto::WindowManagerPolicyProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.WindowManagerPolicyProto)
}
WindowManagerPolicyProto::WindowManagerPolicyProto(const WindowManagerPolicyProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  focused_app_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_focused_app_token()) {
    focused_app_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.focused_app_token_);
  }
  if (from.has_focused_window()) {
    focused_window_ = new ::com::android::server::wm::IdentifierProto(*from.focused_window_);
  } else {
    focused_window_ = nullptr;
  }
  if (from.has_top_fullscreen_opaque_window()) {
    top_fullscreen_opaque_window_ = new ::com::android::server::wm::IdentifierProto(*from.top_fullscreen_opaque_window_);
  } else {
    top_fullscreen_opaque_window_ = nullptr;
  }
  if (from.has_top_fullscreen_opaque_or_dimming_window()) {
    top_fullscreen_opaque_or_dimming_window_ = new ::com::android::server::wm::IdentifierProto(*from.top_fullscreen_opaque_or_dimming_window_);
  } else {
    top_fullscreen_opaque_or_dimming_window_ = nullptr;
  }
  if (from.has_status_bar()) {
    status_bar_ = new ::com::android::server::wm::BarControllerProto(*from.status_bar_);
  } else {
    status_bar_ = nullptr;
  }
  if (from.has_navigation_bar()) {
    navigation_bar_ = new ::com::android::server::wm::BarControllerProto(*from.navigation_bar_);
  } else {
    navigation_bar_ = nullptr;
  }
  if (from.has_orientation_listener()) {
    orientation_listener_ = new ::com::android::server::wm::WindowOrientationListenerProto(*from.orientation_listener_);
  } else {
    orientation_listener_ = nullptr;
  }
  if (from.has_keyguard_delegate()) {
    keyguard_delegate_ = new ::com::android::server::wm::KeyguardServiceDelegateProto(*from.keyguard_delegate_);
  } else {
    keyguard_delegate_ = nullptr;
  }
  ::memcpy(&last_system_ui_flags_, &from.last_system_ui_flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&orientation_) -
    reinterpret_cast<char*>(&last_system_ui_flags_)) + sizeof(orientation_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.WindowManagerPolicyProto)
}

void WindowManagerPolicyProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WindowManagerPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  focused_app_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&focused_window_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&force_status_bar_from_keyguard_) -
      reinterpret_cast<char*>(&focused_window_)) + sizeof(force_status_bar_from_keyguard_));
  orientation_ = -2;
}

WindowManagerPolicyProto::~WindowManagerPolicyProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.WindowManagerPolicyProto)
  SharedDtor();
}

void WindowManagerPolicyProto::SharedDtor() {
  focused_app_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete focused_window_;
  if (this != internal_default_instance()) delete top_fullscreen_opaque_window_;
  if (this != internal_default_instance()) delete top_fullscreen_opaque_or_dimming_window_;
  if (this != internal_default_instance()) delete status_bar_;
  if (this != internal_default_instance()) delete navigation_bar_;
  if (this != internal_default_instance()) delete orientation_listener_;
  if (this != internal_default_instance()) delete keyguard_delegate_;
}

void WindowManagerPolicyProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WindowManagerPolicyProto& WindowManagerPolicyProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WindowManagerPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void WindowManagerPolicyProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.WindowManagerPolicyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      focused_app_token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(focused_window_ != nullptr);
      focused_window_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(top_fullscreen_opaque_window_ != nullptr);
      top_fullscreen_opaque_window_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(top_fullscreen_opaque_or_dimming_window_ != nullptr);
      top_fullscreen_opaque_or_dimming_window_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(status_bar_ != nullptr);
      status_bar_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(navigation_bar_ != nullptr);
      navigation_bar_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(orientation_listener_ != nullptr);
      orientation_listener_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(keyguard_delegate_ != nullptr);
      keyguard_delegate_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&last_system_ui_flags_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&keyguard_occluded_changed_) -
        reinterpret_cast<char*>(&last_system_ui_flags_)) + sizeof(keyguard_occluded_changed_));
  }
  if (cached_has_bits & 0x000f0000u) {
    ::memset(&keyguard_occluded_pending_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&force_status_bar_from_keyguard_) -
        reinterpret_cast<char*>(&keyguard_occluded_pending_)) + sizeof(force_status_bar_from_keyguard_));
    orientation_ = -2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WindowManagerPolicyProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 last_system_ui_flags = 1 [deprecated = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_last_system_ui_flags(&has_bits);
          last_system_ui_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowManagerPolicyProto.UserRotationMode rotation_mode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::com::android::server::wm::WindowManagerPolicyProto_UserRotationMode_IsValid(val))) {
            set_rotation_mode(static_cast<::com::android::server::wm::WindowManagerPolicyProto_UserRotationMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.view.SurfaceProto.Rotation rotation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::view::SurfaceProto_Rotation_IsValid(val))) {
            set_rotation(static_cast<::android::view::SurfaceProto_Rotation>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.content.ActivityInfoProto.ScreenOrientation orientation = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::content::ActivityInfoProto_ScreenOrientation_IsValid(val))) {
            set_orientation(static_cast<::android::content::ActivityInfoProto_ScreenOrientation>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bool screen_on_fully = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_screen_on_fully(&has_bits);
          screen_on_fully_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool keyguard_draw_complete = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_keyguard_draw_complete(&has_bits);
          keyguard_draw_complete_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool window_manager_draw_complete = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_window_manager_draw_complete(&has_bits);
          window_manager_draw_complete_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string focused_app_token = 8 [deprecated = true];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_focused_app_token(), ptr, ctx, "com.android.server.wm.WindowManagerPolicyProto.focused_app_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.IdentifierProto focused_window = 9 [deprecated = true];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_focused_window(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.IdentifierProto top_fullscreen_opaque_window = 10 [deprecated = true];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_top_fullscreen_opaque_window(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.IdentifierProto top_fullscreen_opaque_or_dimming_window = 11 [deprecated = true];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(mutable_top_fullscreen_opaque_or_dimming_window(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool keyguard_occluded = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_keyguard_occluded(&has_bits);
          keyguard_occluded_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool keyguard_occluded_changed = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_keyguard_occluded_changed(&has_bits);
          keyguard_occluded_changed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool keyguard_occluded_pending = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_keyguard_occluded_pending(&has_bits);
          keyguard_occluded_pending_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool force_status_bar = 15 [deprecated = true];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_force_status_bar(&has_bits);
          force_status_bar_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool force_status_bar_from_keyguard = 16 [deprecated = true];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_force_status_bar_from_keyguard(&has_bits);
          force_status_bar_from_keyguard_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.BarControllerProto status_bar = 17 [deprecated = true];
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(mutable_status_bar(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.BarControllerProto navigation_bar = 18 [deprecated = true];
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(mutable_navigation_bar(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowOrientationListenerProto orientation_listener = 19 [deprecated = true];
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(mutable_orientation_listener(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.KeyguardServiceDelegateProto keyguard_delegate = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(mutable_keyguard_delegate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WindowManagerPolicyProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.WindowManagerPolicyProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 last_system_ui_flags = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_last_system_ui_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_system_ui_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowManagerPolicyProto.UserRotationMode rotation_mode = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::android::server::wm::WindowManagerPolicyProto_UserRotationMode_IsValid(value)) {
            set_rotation_mode(static_cast< ::com::android::server::wm::WindowManagerPolicyProto_UserRotationMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.SurfaceProto.Rotation rotation = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::view::SurfaceProto_Rotation_IsValid(value)) {
            set_rotation(static_cast< ::android::view::SurfaceProto_Rotation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.content.ActivityInfoProto.ScreenOrientation orientation = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::content::ActivityInfoProto_ScreenOrientation_IsValid(value)) {
            set_orientation(static_cast< ::android::content::ActivityInfoProto_ScreenOrientation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool screen_on_fully = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_screen_on_fully(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &screen_on_fully_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool keyguard_draw_complete = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_keyguard_draw_complete(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keyguard_draw_complete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool window_manager_draw_complete = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_window_manager_draw_complete(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &window_manager_draw_complete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string focused_app_token = 8 [deprecated = true];
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_focused_app_token()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->focused_app_token().data(), static_cast<int>(this->focused_app_token().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.wm.WindowManagerPolicyProto.focused_app_token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.IdentifierProto focused_window = 9 [deprecated = true];
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_focused_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.IdentifierProto top_fullscreen_opaque_window = 10 [deprecated = true];
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_top_fullscreen_opaque_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.IdentifierProto top_fullscreen_opaque_or_dimming_window = 11 [deprecated = true];
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_top_fullscreen_opaque_or_dimming_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool keyguard_occluded = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {
          _Internal::set_has_keyguard_occluded(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keyguard_occluded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool keyguard_occluded_changed = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (104 & 0xFF)) {
          _Internal::set_has_keyguard_occluded_changed(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keyguard_occluded_changed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool keyguard_occluded_pending = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          _Internal::set_has_keyguard_occluded_pending(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keyguard_occluded_pending_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool force_status_bar = 15 [deprecated = true];
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (120 & 0xFF)) {
          _Internal::set_has_force_status_bar(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &force_status_bar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool force_status_bar_from_keyguard = 16 [deprecated = true];
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (128 & 0xFF)) {
          _Internal::set_has_force_status_bar_from_keyguard(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &force_status_bar_from_keyguard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.BarControllerProto status_bar = 17 [deprecated = true];
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (138 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_status_bar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.BarControllerProto navigation_bar = 18 [deprecated = true];
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (146 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_navigation_bar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowOrientationListenerProto orientation_listener = 19 [deprecated = true];
      case 19: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (154 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_orientation_listener()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.KeyguardServiceDelegateProto keyguard_delegate = 20;
      case 20: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (162 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_keyguard_delegate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.WindowManagerPolicyProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.WindowManagerPolicyProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WindowManagerPolicyProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.WindowManagerPolicyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 last_system_ui_flags = 1 [deprecated = true];
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->last_system_ui_flags(), output);
  }

  // optional .com.android.server.wm.WindowManagerPolicyProto.UserRotationMode rotation_mode = 2;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->rotation_mode(), output);
  }

  // optional .android.view.SurfaceProto.Rotation rotation = 3;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      3, this->rotation(), output);
  }

  // optional .android.content.ActivityInfoProto.ScreenOrientation orientation = 4;
  if (cached_has_bits & 0x00080000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      4, this->orientation(), output);
  }

  // optional bool screen_on_fully = 5;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(5, this->screen_on_fully(), output);
  }

  // optional bool keyguard_draw_complete = 6;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->keyguard_draw_complete(), output);
  }

  // optional bool window_manager_draw_complete = 7;
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(7, this->window_manager_draw_complete(), output);
  }

  // optional string focused_app_token = 8 [deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->focused_app_token().data(), static_cast<int>(this->focused_app_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.WindowManagerPolicyProto.focused_app_token");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->focused_app_token(), output);
  }

  // optional .com.android.server.wm.IdentifierProto focused_window = 9 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, _Internal::focused_window(this), output);
  }

  // optional .com.android.server.wm.IdentifierProto top_fullscreen_opaque_window = 10 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, _Internal::top_fullscreen_opaque_window(this), output);
  }

  // optional .com.android.server.wm.IdentifierProto top_fullscreen_opaque_or_dimming_window = 11 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, _Internal::top_fullscreen_opaque_or_dimming_window(this), output);
  }

  // optional bool keyguard_occluded = 12;
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(12, this->keyguard_occluded(), output);
  }

  // optional bool keyguard_occluded_changed = 13;
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(13, this->keyguard_occluded_changed(), output);
  }

  // optional bool keyguard_occluded_pending = 14;
  if (cached_has_bits & 0x00010000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(14, this->keyguard_occluded_pending(), output);
  }

  // optional bool force_status_bar = 15 [deprecated = true];
  if (cached_has_bits & 0x00020000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(15, this->force_status_bar(), output);
  }

  // optional bool force_status_bar_from_keyguard = 16 [deprecated = true];
  if (cached_has_bits & 0x00040000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(16, this->force_status_bar_from_keyguard(), output);
  }

  // optional .com.android.server.wm.BarControllerProto status_bar = 17 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, _Internal::status_bar(this), output);
  }

  // optional .com.android.server.wm.BarControllerProto navigation_bar = 18 [deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, _Internal::navigation_bar(this), output);
  }

  // optional .com.android.server.wm.WindowOrientationListenerProto orientation_listener = 19 [deprecated = true];
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, _Internal::orientation_listener(this), output);
  }

  // optional .com.android.server.wm.KeyguardServiceDelegateProto keyguard_delegate = 20;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, _Internal::keyguard_delegate(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.WindowManagerPolicyProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WindowManagerPolicyProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.WindowManagerPolicyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 last_system_ui_flags = 1 [deprecated = true];
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->last_system_ui_flags(), target);
  }

  // optional .com.android.server.wm.WindowManagerPolicyProto.UserRotationMode rotation_mode = 2;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->rotation_mode(), target);
  }

  // optional .android.view.SurfaceProto.Rotation rotation = 3;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->rotation(), target);
  }

  // optional .android.content.ActivityInfoProto.ScreenOrientation orientation = 4;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->orientation(), target);
  }

  // optional bool screen_on_fully = 5;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->screen_on_fully(), target);
  }

  // optional bool keyguard_draw_complete = 6;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->keyguard_draw_complete(), target);
  }

  // optional bool window_manager_draw_complete = 7;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->window_manager_draw_complete(), target);
  }

  // optional string focused_app_token = 8 [deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->focused_app_token().data(), static_cast<int>(this->focused_app_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.WindowManagerPolicyProto.focused_app_token");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        8, this->focused_app_token(), target);
  }

  // optional .com.android.server.wm.IdentifierProto focused_window = 9 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::focused_window(this), target);
  }

  // optional .com.android.server.wm.IdentifierProto top_fullscreen_opaque_window = 10 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, _Internal::top_fullscreen_opaque_window(this), target);
  }

  // optional .com.android.server.wm.IdentifierProto top_fullscreen_opaque_or_dimming_window = 11 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, _Internal::top_fullscreen_opaque_or_dimming_window(this), target);
  }

  // optional bool keyguard_occluded = 12;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->keyguard_occluded(), target);
  }

  // optional bool keyguard_occluded_changed = 13;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(13, this->keyguard_occluded_changed(), target);
  }

  // optional bool keyguard_occluded_pending = 14;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->keyguard_occluded_pending(), target);
  }

  // optional bool force_status_bar = 15 [deprecated = true];
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(15, this->force_status_bar(), target);
  }

  // optional bool force_status_bar_from_keyguard = 16 [deprecated = true];
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->force_status_bar_from_keyguard(), target);
  }

  // optional .com.android.server.wm.BarControllerProto status_bar = 17 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, _Internal::status_bar(this), target);
  }

  // optional .com.android.server.wm.BarControllerProto navigation_bar = 18 [deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, _Internal::navigation_bar(this), target);
  }

  // optional .com.android.server.wm.WindowOrientationListenerProto orientation_listener = 19 [deprecated = true];
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, _Internal::orientation_listener(this), target);
  }

  // optional .com.android.server.wm.KeyguardServiceDelegateProto keyguard_delegate = 20;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, _Internal::keyguard_delegate(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.WindowManagerPolicyProto)
  return target;
}

size_t WindowManagerPolicyProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.WindowManagerPolicyProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string focused_app_token = 8 [deprecated = true];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->focused_app_token());
    }

    // optional .com.android.server.wm.IdentifierProto focused_window = 9 [deprecated = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *focused_window_);
    }

    // optional .com.android.server.wm.IdentifierProto top_fullscreen_opaque_window = 10 [deprecated = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *top_fullscreen_opaque_window_);
    }

    // optional .com.android.server.wm.IdentifierProto top_fullscreen_opaque_or_dimming_window = 11 [deprecated = true];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *top_fullscreen_opaque_or_dimming_window_);
    }

    // optional .com.android.server.wm.BarControllerProto status_bar = 17 [deprecated = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *status_bar_);
    }

    // optional .com.android.server.wm.BarControllerProto navigation_bar = 18 [deprecated = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *navigation_bar_);
    }

    // optional .com.android.server.wm.WindowOrientationListenerProto orientation_listener = 19 [deprecated = true];
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *orientation_listener_);
    }

    // optional .com.android.server.wm.KeyguardServiceDelegateProto keyguard_delegate = 20;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *keyguard_delegate_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int32 last_system_ui_flags = 1 [deprecated = true];
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->last_system_ui_flags());
    }

    // optional .com.android.server.wm.WindowManagerPolicyProto.UserRotationMode rotation_mode = 2;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->rotation_mode());
    }

    // optional .android.view.SurfaceProto.Rotation rotation = 3;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->rotation());
    }

    // optional bool screen_on_fully = 5;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool keyguard_draw_complete = 6;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional bool window_manager_draw_complete = 7;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

    // optional bool keyguard_occluded = 12;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 + 1;
    }

    // optional bool keyguard_occluded_changed = 13;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x000f0000u) {
    // optional bool keyguard_occluded_pending = 14;
    if (cached_has_bits & 0x00010000u) {
      total_size += 1 + 1;
    }

    // optional bool force_status_bar = 15 [deprecated = true];
    if (cached_has_bits & 0x00020000u) {
      total_size += 1 + 1;
    }

    // optional bool force_status_bar_from_keyguard = 16 [deprecated = true];
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional .android.content.ActivityInfoProto.ScreenOrientation orientation = 4;
    if (cached_has_bits & 0x00080000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->orientation());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WindowManagerPolicyProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.WindowManagerPolicyProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WindowManagerPolicyProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WindowManagerPolicyProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.WindowManagerPolicyProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.WindowManagerPolicyProto)
    MergeFrom(*source);
  }
}

void WindowManagerPolicyProto::MergeFrom(const WindowManagerPolicyProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.WindowManagerPolicyProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      focused_app_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.focused_app_token_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_focused_window()->::com::android::server::wm::IdentifierProto::MergeFrom(from.focused_window());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_top_fullscreen_opaque_window()->::com::android::server::wm::IdentifierProto::MergeFrom(from.top_fullscreen_opaque_window());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_top_fullscreen_opaque_or_dimming_window()->::com::android::server::wm::IdentifierProto::MergeFrom(from.top_fullscreen_opaque_or_dimming_window());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_status_bar()->::com::android::server::wm::BarControllerProto::MergeFrom(from.status_bar());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_navigation_bar()->::com::android::server::wm::BarControllerProto::MergeFrom(from.navigation_bar());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_orientation_listener()->::com::android::server::wm::WindowOrientationListenerProto::MergeFrom(from.orientation_listener());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_keyguard_delegate()->::com::android::server::wm::KeyguardServiceDelegateProto::MergeFrom(from.keyguard_delegate());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      last_system_ui_flags_ = from.last_system_ui_flags_;
    }
    if (cached_has_bits & 0x00000200u) {
      rotation_mode_ = from.rotation_mode_;
    }
    if (cached_has_bits & 0x00000400u) {
      rotation_ = from.rotation_;
    }
    if (cached_has_bits & 0x00000800u) {
      screen_on_fully_ = from.screen_on_fully_;
    }
    if (cached_has_bits & 0x00001000u) {
      keyguard_draw_complete_ = from.keyguard_draw_complete_;
    }
    if (cached_has_bits & 0x00002000u) {
      window_manager_draw_complete_ = from.window_manager_draw_complete_;
    }
    if (cached_has_bits & 0x00004000u) {
      keyguard_occluded_ = from.keyguard_occluded_;
    }
    if (cached_has_bits & 0x00008000u) {
      keyguard_occluded_changed_ = from.keyguard_occluded_changed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x000f0000u) {
    if (cached_has_bits & 0x00010000u) {
      keyguard_occluded_pending_ = from.keyguard_occluded_pending_;
    }
    if (cached_has_bits & 0x00020000u) {
      force_status_bar_ = from.force_status_bar_;
    }
    if (cached_has_bits & 0x00040000u) {
      force_status_bar_from_keyguard_ = from.force_status_bar_from_keyguard_;
    }
    if (cached_has_bits & 0x00080000u) {
      orientation_ = from.orientation_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WindowManagerPolicyProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.WindowManagerPolicyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WindowManagerPolicyProto::CopyFrom(const WindowManagerPolicyProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.WindowManagerPolicyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowManagerPolicyProto::IsInitialized() const {
  return true;
}

void WindowManagerPolicyProto::InternalSwap(WindowManagerPolicyProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  focused_app_token_.Swap(&other->focused_app_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(focused_window_, other->focused_window_);
  swap(top_fullscreen_opaque_window_, other->top_fullscreen_opaque_window_);
  swap(top_fullscreen_opaque_or_dimming_window_, other->top_fullscreen_opaque_or_dimming_window_);
  swap(status_bar_, other->status_bar_);
  swap(navigation_bar_, other->navigation_bar_);
  swap(orientation_listener_, other->orientation_listener_);
  swap(keyguard_delegate_, other->keyguard_delegate_);
  swap(last_system_ui_flags_, other->last_system_ui_flags_);
  swap(rotation_mode_, other->rotation_mode_);
  swap(rotation_, other->rotation_);
  swap(screen_on_fully_, other->screen_on_fully_);
  swap(keyguard_draw_complete_, other->keyguard_draw_complete_);
  swap(window_manager_draw_complete_, other->window_manager_draw_complete_);
  swap(keyguard_occluded_, other->keyguard_occluded_);
  swap(keyguard_occluded_changed_, other->keyguard_occluded_changed_);
  swap(keyguard_occluded_pending_, other->keyguard_occluded_pending_);
  swap(force_status_bar_, other->force_status_bar_);
  swap(force_status_bar_from_keyguard_, other->force_status_bar_from_keyguard_);
  swap(orientation_, other->orientation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WindowManagerPolicyProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AppTransitionProto::InitAsDefaultInstance() {
}
class AppTransitionProto::_Internal {
 public:
  using HasBits = decltype(std::declval<AppTransitionProto>()._has_bits_);
  static void set_has_app_transition_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_last_used_app_transition(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

AppTransitionProto::AppTransitionProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.AppTransitionProto)
}
AppTransitionProto::AppTransitionProto(const AppTransitionProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_transition_state_, &from.app_transition_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_used_app_transition_) -
    reinterpret_cast<char*>(&app_transition_state_)) + sizeof(last_used_app_transition_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.AppTransitionProto)
}

void AppTransitionProto::SharedCtor() {
  ::memset(&app_transition_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_used_app_transition_) -
      reinterpret_cast<char*>(&app_transition_state_)) + sizeof(last_used_app_transition_));
}

AppTransitionProto::~AppTransitionProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.AppTransitionProto)
  SharedDtor();
}

void AppTransitionProto::SharedDtor() {
}

void AppTransitionProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppTransitionProto& AppTransitionProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AppTransitionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void AppTransitionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.AppTransitionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&app_transition_state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_used_app_transition_) -
        reinterpret_cast<char*>(&app_transition_state_)) + sizeof(last_used_app_transition_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AppTransitionProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.wm.AppTransitionProto.AppState app_transition_state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::com::android::server::wm::AppTransitionProto_AppState_IsValid(val))) {
            set_app_transition_state(static_cast<::com::android::server::wm::AppTransitionProto_AppState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.view.TransitionTypeEnum last_used_app_transition = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::view::TransitionTypeEnum_IsValid(val))) {
            set_last_used_app_transition(static_cast<::android::view::TransitionTypeEnum>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AppTransitionProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.AppTransitionProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.wm.AppTransitionProto.AppState app_transition_state = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::android::server::wm::AppTransitionProto_AppState_IsValid(value)) {
            set_app_transition_state(static_cast< ::com::android::server::wm::AppTransitionProto_AppState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.TransitionTypeEnum last_used_app_transition = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::view::TransitionTypeEnum_IsValid(value)) {
            set_last_used_app_transition(static_cast< ::android::view::TransitionTypeEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.AppTransitionProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.AppTransitionProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AppTransitionProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.AppTransitionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.AppTransitionProto.AppState app_transition_state = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->app_transition_state(), output);
  }

  // optional .android.view.TransitionTypeEnum last_used_app_transition = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->last_used_app_transition(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.AppTransitionProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* AppTransitionProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.AppTransitionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.AppTransitionProto.AppState app_transition_state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->app_transition_state(), target);
  }

  // optional .android.view.TransitionTypeEnum last_used_app_transition = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->last_used_app_transition(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.AppTransitionProto)
  return target;
}

size_t AppTransitionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.AppTransitionProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .com.android.server.wm.AppTransitionProto.AppState app_transition_state = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->app_transition_state());
    }

    // optional .android.view.TransitionTypeEnum last_used_app_transition = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->last_used_app_transition());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppTransitionProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.AppTransitionProto)
  GOOGLE_DCHECK_NE(&from, this);
  const AppTransitionProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AppTransitionProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.AppTransitionProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.AppTransitionProto)
    MergeFrom(*source);
  }
}

void AppTransitionProto::MergeFrom(const AppTransitionProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.AppTransitionProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      app_transition_state_ = from.app_transition_state_;
    }
    if (cached_has_bits & 0x00000002u) {
      last_used_app_transition_ = from.last_used_app_transition_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AppTransitionProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.AppTransitionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppTransitionProto::CopyFrom(const AppTransitionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.AppTransitionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppTransitionProto::IsInitialized() const {
  return true;
}

void AppTransitionProto::InternalSwap(AppTransitionProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(app_transition_state_, other->app_transition_state_);
  swap(last_used_app_transition_, other->last_used_app_transition_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppTransitionProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisplayContentProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->window_container_ = const_cast< ::com::android::server::wm::WindowContainerProto*>(
      ::com::android::server::wm::WindowContainerProto::internal_default_instance());
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->docked_task_divider_controller_ = const_cast< ::com::android::server::wm::DockedTaskDividerControllerProto*>(
      ::com::android::server::wm::DockedTaskDividerControllerProto::internal_default_instance());
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->pinned_task_controller_ = const_cast< ::com::android::server::wm::PinnedTaskControllerProto*>(
      ::com::android::server::wm::PinnedTaskControllerProto::internal_default_instance());
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->display_info_ = const_cast< ::android::view::DisplayInfoProto*>(
      ::android::view::DisplayInfoProto::internal_default_instance());
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->screen_rotation_animation_ = const_cast< ::com::android::server::wm::ScreenRotationAnimationProto*>(
      ::com::android::server::wm::ScreenRotationAnimationProto::internal_default_instance());
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->display_frames_ = const_cast< ::com::android::server::wm::DisplayFramesProto*>(
      ::com::android::server::wm::DisplayFramesProto::internal_default_instance());
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->app_transition_ = const_cast< ::com::android::server::wm::AppTransitionProto*>(
      ::com::android::server::wm::AppTransitionProto::internal_default_instance());
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->root_display_area_ = const_cast< ::com::android::server::wm::DisplayAreaProto*>(
      ::com::android::server::wm::DisplayAreaProto::internal_default_instance());
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->resumed_activity_ = const_cast< ::com::android::server::wm::IdentifierProto*>(
      ::com::android::server::wm::IdentifierProto::internal_default_instance());
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->input_method_target_ = const_cast< ::com::android::server::wm::WindowStateProto*>(
      ::com::android::server::wm::WindowStateProto::internal_default_instance());
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->input_method_input_target_ = const_cast< ::com::android::server::wm::WindowStateProto*>(
      ::com::android::server::wm::WindowStateProto::internal_default_instance());
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->input_method_control_target_ = const_cast< ::com::android::server::wm::WindowStateProto*>(
      ::com::android::server::wm::WindowStateProto::internal_default_instance());
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->current_focus_ = const_cast< ::com::android::server::wm::WindowStateProto*>(
      ::com::android::server::wm::WindowStateProto::internal_default_instance());
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->ime_insets_source_provider_ = const_cast< ::com::android::server::wm::ImeInsetsSourceProviderProto*>(
      ::com::android::server::wm::ImeInsetsSourceProviderProto::internal_default_instance());
  ::com::android::server::wm::_DisplayContentProto_default_instance_._instance.get_mutable()->display_rotation_ = const_cast< ::com::android::server::wm::DisplayRotationProto*>(
      ::com::android::server::wm::DisplayRotationProto::internal_default_instance());
}
class DisplayContentProto::_Internal {
 public:
  using HasBits = decltype(std::declval<DisplayContentProto>()._has_bits_);
  static const ::com::android::server::wm::WindowContainerProto& window_container(const DisplayContentProto* msg);
  static void set_has_window_container(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::com::android::server::wm::DockedTaskDividerControllerProto& docked_task_divider_controller(const DisplayContentProto* msg);
  static void set_has_docked_task_divider_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::com::android::server::wm::PinnedTaskControllerProto& pinned_task_controller(const DisplayContentProto* msg);
  static void set_has_pinned_task_controller(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_dpi(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static const ::android::view::DisplayInfoProto& display_info(const DisplayContentProto* msg);
  static void set_has_display_info(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static const ::com::android::server::wm::ScreenRotationAnimationProto& screen_rotation_animation(const DisplayContentProto* msg);
  static void set_has_screen_rotation_animation(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::com::android::server::wm::DisplayFramesProto& display_frames(const DisplayContentProto* msg);
  static void set_has_display_frames(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_surface_size(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_focused_app(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::android::server::wm::AppTransitionProto& app_transition(const DisplayContentProto* msg);
  static void set_has_app_transition(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::com::android::server::wm::DisplayAreaProto& root_display_area(const DisplayContentProto* msg);
  static void set_has_root_display_area(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_single_task_instance(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_focused_root_task_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static const ::com::android::server::wm::IdentifierProto& resumed_activity(const DisplayContentProto* msg);
  static void set_has_resumed_activity(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_display_ready(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static const ::com::android::server::wm::WindowStateProto& input_method_target(const DisplayContentProto* msg);
  static void set_has_input_method_target(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::com::android::server::wm::WindowStateProto& input_method_input_target(const DisplayContentProto* msg);
  static void set_has_input_method_input_target(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::com::android::server::wm::WindowStateProto& input_method_control_target(const DisplayContentProto* msg);
  static void set_has_input_method_control_target(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::com::android::server::wm::WindowStateProto& current_focus(const DisplayContentProto* msg);
  static void set_has_current_focus(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::com::android::server::wm::ImeInsetsSourceProviderProto& ime_insets_source_provider(const DisplayContentProto* msg);
  static void set_has_ime_insets_source_provider(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_can_show_ime(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static const ::com::android::server::wm::DisplayRotationProto& display_rotation(const DisplayContentProto* msg);
  static void set_has_display_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_ime_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_is_sleeping(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
};

const ::com::android::server::wm::WindowContainerProto&
DisplayContentProto::_Internal::window_container(const DisplayContentProto* msg) {
  return *msg->window_container_;
}
const ::com::android::server::wm::DockedTaskDividerControllerProto&
DisplayContentProto::_Internal::docked_task_divider_controller(const DisplayContentProto* msg) {
  return *msg->docked_task_divider_controller_;
}
const ::com::android::server::wm::PinnedTaskControllerProto&
DisplayContentProto::_Internal::pinned_task_controller(const DisplayContentProto* msg) {
  return *msg->pinned_task_controller_;
}
const ::android::view::DisplayInfoProto&
DisplayContentProto::_Internal::display_info(const DisplayContentProto* msg) {
  return *msg->display_info_;
}
const ::com::android::server::wm::ScreenRotationAnimationProto&
DisplayContentProto::_Internal::screen_rotation_animation(const DisplayContentProto* msg) {
  return *msg->screen_rotation_animation_;
}
const ::com::android::server::wm::DisplayFramesProto&
DisplayContentProto::_Internal::display_frames(const DisplayContentProto* msg) {
  return *msg->display_frames_;
}
const ::com::android::server::wm::AppTransitionProto&
DisplayContentProto::_Internal::app_transition(const DisplayContentProto* msg) {
  return *msg->app_transition_;
}
const ::com::android::server::wm::DisplayAreaProto&
DisplayContentProto::_Internal::root_display_area(const DisplayContentProto* msg) {
  return *msg->root_display_area_;
}
const ::com::android::server::wm::IdentifierProto&
DisplayContentProto::_Internal::resumed_activity(const DisplayContentProto* msg) {
  return *msg->resumed_activity_;
}
const ::com::android::server::wm::WindowStateProto&
DisplayContentProto::_Internal::input_method_target(const DisplayContentProto* msg) {
  return *msg->input_method_target_;
}
const ::com::android::server::wm::WindowStateProto&
DisplayContentProto::_Internal::input_method_input_target(const DisplayContentProto* msg) {
  return *msg->input_method_input_target_;
}
const ::com::android::server::wm::WindowStateProto&
DisplayContentProto::_Internal::input_method_control_target(const DisplayContentProto* msg) {
  return *msg->input_method_control_target_;
}
const ::com::android::server::wm::WindowStateProto&
DisplayContentProto::_Internal::current_focus(const DisplayContentProto* msg) {
  return *msg->current_focus_;
}
const ::com::android::server::wm::ImeInsetsSourceProviderProto&
DisplayContentProto::_Internal::ime_insets_source_provider(const DisplayContentProto* msg) {
  return *msg->ime_insets_source_provider_;
}
const ::com::android::server::wm::DisplayRotationProto&
DisplayContentProto::_Internal::display_rotation(const DisplayContentProto* msg) {
  return *msg->display_rotation_;
}
void DisplayContentProto::clear_display_info() {
  if (display_info_ != nullptr) display_info_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
DisplayContentProto::DisplayContentProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.DisplayContentProto)
}
DisplayContentProto::DisplayContentProto(const DisplayContentProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      above_app_windows_(from.above_app_windows_),
      below_app_windows_(from.below_app_windows_),
      ime_windows_(from.ime_windows_),
      opening_apps_(from.opening_apps_),
      closing_apps_(from.closing_apps_),
      changing_apps_(from.changing_apps_),
      overlay_windows_(from.overlay_windows_),
      tasks_(from.tasks_),
      sleep_tokens_(from.sleep_tokens_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  focused_app_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_focused_app()) {
    focused_app_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.focused_app_);
  }
  if (from.has_window_container()) {
    window_container_ = new ::com::android::server::wm::WindowContainerProto(*from.window_container_);
  } else {
    window_container_ = nullptr;
  }
  if (from.has_docked_task_divider_controller()) {
    docked_task_divider_controller_ = new ::com::android::server::wm::DockedTaskDividerControllerProto(*from.docked_task_divider_controller_);
  } else {
    docked_task_divider_controller_ = nullptr;
  }
  if (from.has_pinned_task_controller()) {
    pinned_task_controller_ = new ::com::android::server::wm::PinnedTaskControllerProto(*from.pinned_task_controller_);
  } else {
    pinned_task_controller_ = nullptr;
  }
  if (from.has_display_info()) {
    display_info_ = new ::android::view::DisplayInfoProto(*from.display_info_);
  } else {
    display_info_ = nullptr;
  }
  if (from.has_screen_rotation_animation()) {
    screen_rotation_animation_ = new ::com::android::server::wm::ScreenRotationAnimationProto(*from.screen_rotation_animation_);
  } else {
    screen_rotation_animation_ = nullptr;
  }
  if (from.has_display_frames()) {
    display_frames_ = new ::com::android::server::wm::DisplayFramesProto(*from.display_frames_);
  } else {
    display_frames_ = nullptr;
  }
  if (from.has_app_transition()) {
    app_transition_ = new ::com::android::server::wm::AppTransitionProto(*from.app_transition_);
  } else {
    app_transition_ = nullptr;
  }
  if (from.has_root_display_area()) {
    root_display_area_ = new ::com::android::server::wm::DisplayAreaProto(*from.root_display_area_);
  } else {
    root_display_area_ = nullptr;
  }
  if (from.has_resumed_activity()) {
    resumed_activity_ = new ::com::android::server::wm::IdentifierProto(*from.resumed_activity_);
  } else {
    resumed_activity_ = nullptr;
  }
  if (from.has_input_method_target()) {
    input_method_target_ = new ::com::android::server::wm::WindowStateProto(*from.input_method_target_);
  } else {
    input_method_target_ = nullptr;
  }
  if (from.has_input_method_input_target()) {
    input_method_input_target_ = new ::com::android::server::wm::WindowStateProto(*from.input_method_input_target_);
  } else {
    input_method_input_target_ = nullptr;
  }
  if (from.has_input_method_control_target()) {
    input_method_control_target_ = new ::com::android::server::wm::WindowStateProto(*from.input_method_control_target_);
  } else {
    input_method_control_target_ = nullptr;
  }
  if (from.has_current_focus()) {
    current_focus_ = new ::com::android::server::wm::WindowStateProto(*from.current_focus_);
  } else {
    current_focus_ = nullptr;
  }
  if (from.has_ime_insets_source_provider()) {
    ime_insets_source_provider_ = new ::com::android::server::wm::ImeInsetsSourceProviderProto(*from.ime_insets_source_provider_);
  } else {
    ime_insets_source_provider_ = nullptr;
  }
  if (from.has_display_rotation()) {
    display_rotation_ = new ::com::android::server::wm::DisplayRotationProto(*from.display_rotation_);
  } else {
    display_rotation_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ime_policy_) -
    reinterpret_cast<char*>(&id_)) + sizeof(ime_policy_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.DisplayContentProto)
}

void DisplayContentProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  focused_app_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&window_container_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ime_policy_) -
      reinterpret_cast<char*>(&window_container_)) + sizeof(ime_policy_));
}

DisplayContentProto::~DisplayContentProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.DisplayContentProto)
  SharedDtor();
}

void DisplayContentProto::SharedDtor() {
  focused_app_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete window_container_;
  if (this != internal_default_instance()) delete docked_task_divider_controller_;
  if (this != internal_default_instance()) delete pinned_task_controller_;
  if (this != internal_default_instance()) delete display_info_;
  if (this != internal_default_instance()) delete screen_rotation_animation_;
  if (this != internal_default_instance()) delete display_frames_;
  if (this != internal_default_instance()) delete app_transition_;
  if (this != internal_default_instance()) delete root_display_area_;
  if (this != internal_default_instance()) delete resumed_activity_;
  if (this != internal_default_instance()) delete input_method_target_;
  if (this != internal_default_instance()) delete input_method_input_target_;
  if (this != internal_default_instance()) delete input_method_control_target_;
  if (this != internal_default_instance()) delete current_focus_;
  if (this != internal_default_instance()) delete ime_insets_source_provider_;
  if (this != internal_default_instance()) delete display_rotation_;
}

void DisplayContentProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisplayContentProto& DisplayContentProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void DisplayContentProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.DisplayContentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  above_app_windows_.Clear();
  below_app_windows_.Clear();
  ime_windows_.Clear();
  opening_apps_.Clear();
  closing_apps_.Clear();
  changing_apps_.Clear();
  overlay_windows_.Clear();
  tasks_.Clear();
  sleep_tokens_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      focused_app_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(window_container_ != nullptr);
      window_container_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(docked_task_divider_controller_ != nullptr);
      docked_task_divider_controller_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(pinned_task_controller_ != nullptr);
      pinned_task_controller_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(display_info_ != nullptr);
      display_info_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(screen_rotation_animation_ != nullptr);
      screen_rotation_animation_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(display_frames_ != nullptr);
      display_frames_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(app_transition_ != nullptr);
      app_transition_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(root_display_area_ != nullptr);
      root_display_area_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(resumed_activity_ != nullptr);
      resumed_activity_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(input_method_target_ != nullptr);
      input_method_target_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(input_method_input_target_ != nullptr);
      input_method_input_target_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(input_method_control_target_ != nullptr);
      input_method_control_target_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(current_focus_ != nullptr);
      current_focus_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(ime_insets_source_provider_ != nullptr);
      ime_insets_source_provider_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(display_rotation_ != nullptr);
      display_rotation_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&can_show_ime_) -
        reinterpret_cast<char*>(&id_)) + sizeof(can_show_ime_));
  }
  if (cached_has_bits & 0x03000000u) {
    ::memset(&is_sleeping_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ime_policy_) -
        reinterpret_cast<char*>(&is_sleeping_)) + sizeof(ime_policy_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DisplayContentProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 1 [deprecated = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_window_container(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.DockedTaskDividerControllerProto docked_task_divider_controller = 4 [deprecated = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_docked_task_divider_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.PinnedTaskControllerProto pinned_task_controller = 5 [deprecated = true];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_pinned_task_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.WindowTokenProto above_app_windows = 6 [deprecated = true];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_above_app_windows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 50);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.WindowTokenProto below_app_windows = 7 [deprecated = true];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_below_app_windows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 58);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.WindowTokenProto ime_windows = 8 [deprecated = true];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_ime_windows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 66);
        } else goto handle_unusual;
        continue;
      // optional int32 dpi = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_dpi(&has_bits);
          dpi_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.DisplayInfoProto display_info = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_display_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 rotation = 11 [deprecated = true, (.android.typedef) = "android.view.Surface.Rotation"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_rotation(&has_bits);
          rotation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.ScreenRotationAnimationProto screen_rotation_animation = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(mutable_screen_rotation_animation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.DisplayFramesProto display_frames = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(mutable_display_frames(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 surface_size = 14 [deprecated = true];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_surface_size(&has_bits);
          surface_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string focused_app = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_focused_app(), ptr, ctx, "com.android.server.wm.DisplayContentProto.focused_app");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.AppTransitionProto app_transition = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(mutable_app_transition(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.IdentifierProto opening_apps = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_opening_apps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 394);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.IdentifierProto closing_apps = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_closing_apps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 402);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.IdentifierProto changing_apps = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_changing_apps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 410);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.WindowTokenProto overlay_windows = 20 [deprecated = true];
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_overlay_windows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 418);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.DisplayAreaProto root_display_area = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(mutable_root_display_area(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool single_task_instance = 22 [deprecated = true];
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_single_task_instance(&has_bits);
          single_task_instance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 focused_root_task_id = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          _Internal::set_has_focused_root_task_id(&has_bits);
          focused_root_task_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.IdentifierProto resumed_activity = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ctx->ParseMessage(mutable_resumed_activity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.TaskProto tasks = 25 [deprecated = true];
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_tasks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 458);
        } else goto handle_unusual;
        continue;
      // optional bool display_ready = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_display_ready(&has_bits);
          display_ready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowStateProto input_method_target = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(mutable_input_method_target(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowStateProto input_method_input_target = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr = ctx->ParseMessage(mutable_input_method_input_target(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowStateProto input_method_control_target = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(mutable_input_method_control_target(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowStateProto current_focus = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr = ctx->ParseMessage(mutable_current_focus(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.ImeInsetsSourceProviderProto ime_insets_source_provider = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(mutable_ime_insets_source_provider(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool can_show_ime = 32 [deprecated = true];
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_can_show_ime(&has_bits);
          can_show_ime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.DisplayRotationProto display_rotation = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_display_rotation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 ime_policy = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ime_policy(&has_bits);
          ime_policy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_sleeping = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_is_sleeping(&has_bits);
          is_sleeping_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string sleep_tokens = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_sleep_tokens(), ptr, ctx, "com.android.server.wm.DisplayContentProto.sleep_tokens");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 682);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DisplayContentProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.DisplayContentProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window_container()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.DockedTaskDividerControllerProto docked_task_divider_controller = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_docked_task_divider_controller()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.PinnedTaskControllerProto pinned_task_controller = 5 [deprecated = true];
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_pinned_task_controller()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.WindowTokenProto above_app_windows = 6 [deprecated = true];
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_above_app_windows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.WindowTokenProto below_app_windows = 7 [deprecated = true];
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_below_app_windows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.WindowTokenProto ime_windows = 8 [deprecated = true];
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_ime_windows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 dpi = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_dpi(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &dpi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.DisplayInfoProto display_info = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_display_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rotation = 11 [deprecated = true, (.android.typedef) = "android.view.Surface.Rotation"];
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          _Internal::set_has_rotation(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.ScreenRotationAnimationProto screen_rotation_animation = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_screen_rotation_animation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.DisplayFramesProto display_frames = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_display_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 surface_size = 14 [deprecated = true];
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          _Internal::set_has_surface_size(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &surface_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string focused_app = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (122 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_focused_app()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->focused_app().data(), static_cast<int>(this->focused_app().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.wm.DisplayContentProto.focused_app");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.AppTransitionProto app_transition = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (130 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_app_transition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.IdentifierProto opening_apps = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (138 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_opening_apps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.IdentifierProto closing_apps = 18;
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (146 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_closing_apps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.IdentifierProto changing_apps = 19;
      case 19: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (154 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_changing_apps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.WindowTokenProto overlay_windows = 20 [deprecated = true];
      case 20: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (162 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_overlay_windows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.DisplayAreaProto root_display_area = 21;
      case 21: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (170 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_root_display_area()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool single_task_instance = 22 [deprecated = true];
      case 22: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (176 & 0xFF)) {
          _Internal::set_has_single_task_instance(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &single_task_instance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 focused_root_task_id = 23;
      case 23: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (184 & 0xFF)) {
          _Internal::set_has_focused_root_task_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &focused_root_task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.IdentifierProto resumed_activity = 24;
      case 24: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (194 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_resumed_activity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.TaskProto tasks = 25 [deprecated = true];
      case 25: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (202 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_tasks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool display_ready = 26;
      case 26: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (208 & 0xFF)) {
          _Internal::set_has_display_ready(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &display_ready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowStateProto input_method_target = 27;
      case 27: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (218 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_input_method_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowStateProto input_method_input_target = 28;
      case 28: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (226 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_input_method_input_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowStateProto input_method_control_target = 29;
      case 29: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (234 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_input_method_control_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowStateProto current_focus = 30;
      case 30: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (242 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_current_focus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.ImeInsetsSourceProviderProto ime_insets_source_provider = 31;
      case 31: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (250 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_ime_insets_source_provider()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool can_show_ime = 32 [deprecated = true];
      case 32: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (256 & 0xFF)) {
          _Internal::set_has_can_show_ime(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_show_ime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.DisplayRotationProto display_rotation = 33;
      case 33: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (266 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_display_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ime_policy = 34;
      case 34: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (272 & 0xFF)) {
          _Internal::set_has_ime_policy(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &ime_policy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_sleeping = 36;
      case 36: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (288 & 0xFF)) {
          _Internal::set_has_is_sleeping(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_sleeping_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sleep_tokens = 37;
      case 37: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (298 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_sleep_tokens()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sleep_tokens(this->sleep_tokens_size() - 1).data(),
            static_cast<int>(this->sleep_tokens(this->sleep_tokens_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.wm.DisplayContentProto.sleep_tokens");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.DisplayContentProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.DisplayContentProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DisplayContentProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.DisplayContentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 1 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::window_container(this), output);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00010000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional .com.android.server.wm.DockedTaskDividerControllerProto docked_task_divider_controller = 4 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::docked_task_divider_controller(this), output);
  }

  // optional .com.android.server.wm.PinnedTaskControllerProto pinned_task_controller = 5 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::pinned_task_controller(this), output);
  }

  // repeated .com.android.server.wm.WindowTokenProto above_app_windows = 6 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->above_app_windows_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->above_app_windows(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.wm.WindowTokenProto below_app_windows = 7 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->below_app_windows_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->below_app_windows(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.wm.WindowTokenProto ime_windows = 8 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ime_windows_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->ime_windows(static_cast<int>(i)),
      output);
  }

  // optional int32 dpi = 9;
  if (cached_has_bits & 0x00020000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(9, this->dpi(), output);
  }

  // optional .android.view.DisplayInfoProto display_info = 10;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, _Internal::display_info(this), output);
  }

  // optional int32 rotation = 11 [deprecated = true, (.android.typedef) = "android.view.Surface.Rotation"];
  if (cached_has_bits & 0x00040000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(11, this->rotation(), output);
  }

  // optional .com.android.server.wm.ScreenRotationAnimationProto screen_rotation_animation = 12;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, _Internal::screen_rotation_animation(this), output);
  }

  // optional .com.android.server.wm.DisplayFramesProto display_frames = 13;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, _Internal::display_frames(this), output);
  }

  // optional int32 surface_size = 14 [deprecated = true];
  if (cached_has_bits & 0x00080000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(14, this->surface_size(), output);
  }

  // optional string focused_app = 15;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->focused_app().data(), static_cast<int>(this->focused_app().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.DisplayContentProto.focused_app");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->focused_app(), output);
  }

  // optional .com.android.server.wm.AppTransitionProto app_transition = 16;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, _Internal::app_transition(this), output);
  }

  // repeated .com.android.server.wm.IdentifierProto opening_apps = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->opening_apps_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->opening_apps(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.wm.IdentifierProto closing_apps = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->closing_apps_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->closing_apps(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.wm.IdentifierProto changing_apps = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->changing_apps_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->changing_apps(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.wm.WindowTokenProto overlay_windows = 20 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->overlay_windows_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      20,
      this->overlay_windows(static_cast<int>(i)),
      output);
  }

  // optional .com.android.server.wm.DisplayAreaProto root_display_area = 21;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, _Internal::root_display_area(this), output);
  }

  // optional bool single_task_instance = 22 [deprecated = true];
  if (cached_has_bits & 0x00200000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(22, this->single_task_instance(), output);
  }

  // optional int32 focused_root_task_id = 23;
  if (cached_has_bits & 0x00100000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(23, this->focused_root_task_id(), output);
  }

  // optional .com.android.server.wm.IdentifierProto resumed_activity = 24;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, _Internal::resumed_activity(this), output);
  }

  // repeated .com.android.server.wm.TaskProto tasks = 25 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->tasks(static_cast<int>(i)),
      output);
  }

  // optional bool display_ready = 26;
  if (cached_has_bits & 0x00400000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(26, this->display_ready(), output);
  }

  // optional .com.android.server.wm.WindowStateProto input_method_target = 27;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, _Internal::input_method_target(this), output);
  }

  // optional .com.android.server.wm.WindowStateProto input_method_input_target = 28;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, _Internal::input_method_input_target(this), output);
  }

  // optional .com.android.server.wm.WindowStateProto input_method_control_target = 29;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, _Internal::input_method_control_target(this), output);
  }

  // optional .com.android.server.wm.WindowStateProto current_focus = 30;
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, _Internal::current_focus(this), output);
  }

  // optional .com.android.server.wm.ImeInsetsSourceProviderProto ime_insets_source_provider = 31;
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, _Internal::ime_insets_source_provider(this), output);
  }

  // optional bool can_show_ime = 32 [deprecated = true];
  if (cached_has_bits & 0x00800000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(32, this->can_show_ime(), output);
  }

  // optional .com.android.server.wm.DisplayRotationProto display_rotation = 33;
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, _Internal::display_rotation(this), output);
  }

  // optional int32 ime_policy = 34;
  if (cached_has_bits & 0x02000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(34, this->ime_policy(), output);
  }

  // optional bool is_sleeping = 36;
  if (cached_has_bits & 0x01000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(36, this->is_sleeping(), output);
  }

  // repeated string sleep_tokens = 37;
  for (int i = 0, n = this->sleep_tokens_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sleep_tokens(i).data(), static_cast<int>(this->sleep_tokens(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.DisplayContentProto.sleep_tokens");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      37, this->sleep_tokens(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.DisplayContentProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* DisplayContentProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.DisplayContentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 1 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::window_container(this), target);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional .com.android.server.wm.DockedTaskDividerControllerProto docked_task_divider_controller = 4 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::docked_task_divider_controller(this), target);
  }

  // optional .com.android.server.wm.PinnedTaskControllerProto pinned_task_controller = 5 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::pinned_task_controller(this), target);
  }

  // repeated .com.android.server.wm.WindowTokenProto above_app_windows = 6 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->above_app_windows_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->above_app_windows(static_cast<int>(i)), target);
  }

  // repeated .com.android.server.wm.WindowTokenProto below_app_windows = 7 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->below_app_windows_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->below_app_windows(static_cast<int>(i)), target);
  }

  // repeated .com.android.server.wm.WindowTokenProto ime_windows = 8 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ime_windows_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->ime_windows(static_cast<int>(i)), target);
  }

  // optional int32 dpi = 9;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->dpi(), target);
  }

  // optional .android.view.DisplayInfoProto display_info = 10;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, _Internal::display_info(this), target);
  }

  // optional int32 rotation = 11 [deprecated = true, (.android.typedef) = "android.view.Surface.Rotation"];
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->rotation(), target);
  }

  // optional .com.android.server.wm.ScreenRotationAnimationProto screen_rotation_animation = 12;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, _Internal::screen_rotation_animation(this), target);
  }

  // optional .com.android.server.wm.DisplayFramesProto display_frames = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, _Internal::display_frames(this), target);
  }

  // optional int32 surface_size = 14 [deprecated = true];
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(14, this->surface_size(), target);
  }

  // optional string focused_app = 15;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->focused_app().data(), static_cast<int>(this->focused_app().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.DisplayContentProto.focused_app");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        15, this->focused_app(), target);
  }

  // optional .com.android.server.wm.AppTransitionProto app_transition = 16;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, _Internal::app_transition(this), target);
  }

  // repeated .com.android.server.wm.IdentifierProto opening_apps = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->opening_apps_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->opening_apps(static_cast<int>(i)), target);
  }

  // repeated .com.android.server.wm.IdentifierProto closing_apps = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->closing_apps_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->closing_apps(static_cast<int>(i)), target);
  }

  // repeated .com.android.server.wm.IdentifierProto changing_apps = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->changing_apps_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->changing_apps(static_cast<int>(i)), target);
  }

  // repeated .com.android.server.wm.WindowTokenProto overlay_windows = 20 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->overlay_windows_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->overlay_windows(static_cast<int>(i)), target);
  }

  // optional .com.android.server.wm.DisplayAreaProto root_display_area = 21;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, _Internal::root_display_area(this), target);
  }

  // optional bool single_task_instance = 22 [deprecated = true];
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(22, this->single_task_instance(), target);
  }

  // optional int32 focused_root_task_id = 23;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(23, this->focused_root_task_id(), target);
  }

  // optional .com.android.server.wm.IdentifierProto resumed_activity = 24;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, _Internal::resumed_activity(this), target);
  }

  // repeated .com.android.server.wm.TaskProto tasks = 25 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->tasks(static_cast<int>(i)), target);
  }

  // optional bool display_ready = 26;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(26, this->display_ready(), target);
  }

  // optional .com.android.server.wm.WindowStateProto input_method_target = 27;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, _Internal::input_method_target(this), target);
  }

  // optional .com.android.server.wm.WindowStateProto input_method_input_target = 28;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, _Internal::input_method_input_target(this), target);
  }

  // optional .com.android.server.wm.WindowStateProto input_method_control_target = 29;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, _Internal::input_method_control_target(this), target);
  }

  // optional .com.android.server.wm.WindowStateProto current_focus = 30;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, _Internal::current_focus(this), target);
  }

  // optional .com.android.server.wm.ImeInsetsSourceProviderProto ime_insets_source_provider = 31;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, _Internal::ime_insets_source_provider(this), target);
  }

  // optional bool can_show_ime = 32 [deprecated = true];
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(32, this->can_show_ime(), target);
  }

  // optional .com.android.server.wm.DisplayRotationProto display_rotation = 33;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, _Internal::display_rotation(this), target);
  }

  // optional int32 ime_policy = 34;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(34, this->ime_policy(), target);
  }

  // optional bool is_sleeping = 36;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(36, this->is_sleeping(), target);
  }

  // repeated string sleep_tokens = 37;
  for (int i = 0, n = this->sleep_tokens_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sleep_tokens(i).data(), static_cast<int>(this->sleep_tokens(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.DisplayContentProto.sleep_tokens");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(37, this->sleep_tokens(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.DisplayContentProto)
  return target;
}

size_t DisplayContentProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.DisplayContentProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.wm.WindowTokenProto above_app_windows = 6 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->above_app_windows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->above_app_windows(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.wm.WindowTokenProto below_app_windows = 7 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->below_app_windows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->below_app_windows(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.wm.WindowTokenProto ime_windows = 8 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->ime_windows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->ime_windows(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.wm.IdentifierProto opening_apps = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->opening_apps_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->opening_apps(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.wm.IdentifierProto closing_apps = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->closing_apps_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->closing_apps(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.wm.IdentifierProto changing_apps = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->changing_apps_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->changing_apps(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.wm.WindowTokenProto overlay_windows = 20 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->overlay_windows_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->overlay_windows(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.wm.TaskProto tasks = 25 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->tasks_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->tasks(static_cast<int>(i)));
    }
  }

  // repeated string sleep_tokens = 37;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->sleep_tokens_size());
  for (int i = 0, n = this->sleep_tokens_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->sleep_tokens(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string focused_app = 15;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->focused_app());
    }

    // optional .com.android.server.wm.WindowContainerProto window_container = 1 [deprecated = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_container_);
    }

    // optional .com.android.server.wm.DockedTaskDividerControllerProto docked_task_divider_controller = 4 [deprecated = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *docked_task_divider_controller_);
    }

    // optional .com.android.server.wm.PinnedTaskControllerProto pinned_task_controller = 5 [deprecated = true];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pinned_task_controller_);
    }

    // optional .android.view.DisplayInfoProto display_info = 10;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *display_info_);
    }

    // optional .com.android.server.wm.ScreenRotationAnimationProto screen_rotation_animation = 12;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *screen_rotation_animation_);
    }

    // optional .com.android.server.wm.DisplayFramesProto display_frames = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *display_frames_);
    }

    // optional .com.android.server.wm.AppTransitionProto app_transition = 16;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *app_transition_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .com.android.server.wm.DisplayAreaProto root_display_area = 21;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *root_display_area_);
    }

    // optional .com.android.server.wm.IdentifierProto resumed_activity = 24;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resumed_activity_);
    }

    // optional .com.android.server.wm.WindowStateProto input_method_target = 27;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *input_method_target_);
    }

    // optional .com.android.server.wm.WindowStateProto input_method_input_target = 28;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *input_method_input_target_);
    }

    // optional .com.android.server.wm.WindowStateProto input_method_control_target = 29;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *input_method_control_target_);
    }

    // optional .com.android.server.wm.WindowStateProto current_focus = 30;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *current_focus_);
    }

    // optional .com.android.server.wm.ImeInsetsSourceProviderProto ime_insets_source_provider = 31;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ime_insets_source_provider_);
    }

    // optional .com.android.server.wm.DisplayRotationProto display_rotation = 33;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *display_rotation_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional int32 id = 2;
    if (cached_has_bits & 0x00010000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 dpi = 9;
    if (cached_has_bits & 0x00020000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->dpi());
    }

    // optional int32 rotation = 11 [deprecated = true, (.android.typedef) = "android.view.Surface.Rotation"];
    if (cached_has_bits & 0x00040000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->rotation());
    }

    // optional int32 surface_size = 14 [deprecated = true];
    if (cached_has_bits & 0x00080000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->surface_size());
    }

    // optional int32 focused_root_task_id = 23;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->focused_root_task_id());
    }

    // optional bool single_task_instance = 22 [deprecated = true];
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool display_ready = 26;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool can_show_ime = 32 [deprecated = true];
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x03000000u) {
    // optional bool is_sleeping = 36;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional int32 ime_policy = 34;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->ime_policy());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisplayContentProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.DisplayContentProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayContentProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisplayContentProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.DisplayContentProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.DisplayContentProto)
    MergeFrom(*source);
  }
}

void DisplayContentProto::MergeFrom(const DisplayContentProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.DisplayContentProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  above_app_windows_.MergeFrom(from.above_app_windows_);
  below_app_windows_.MergeFrom(from.below_app_windows_);
  ime_windows_.MergeFrom(from.ime_windows_);
  opening_apps_.MergeFrom(from.opening_apps_);
  closing_apps_.MergeFrom(from.closing_apps_);
  changing_apps_.MergeFrom(from.changing_apps_);
  overlay_windows_.MergeFrom(from.overlay_windows_);
  tasks_.MergeFrom(from.tasks_);
  sleep_tokens_.MergeFrom(from.sleep_tokens_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      focused_app_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.focused_app_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_window_container()->::com::android::server::wm::WindowContainerProto::MergeFrom(from.window_container());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_docked_task_divider_controller()->::com::android::server::wm::DockedTaskDividerControllerProto::MergeFrom(from.docked_task_divider_controller());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_pinned_task_controller()->::com::android::server::wm::PinnedTaskControllerProto::MergeFrom(from.pinned_task_controller());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_display_info()->::android::view::DisplayInfoProto::MergeFrom(from.display_info());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_screen_rotation_animation()->::com::android::server::wm::ScreenRotationAnimationProto::MergeFrom(from.screen_rotation_animation());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_display_frames()->::com::android::server::wm::DisplayFramesProto::MergeFrom(from.display_frames());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_app_transition()->::com::android::server::wm::AppTransitionProto::MergeFrom(from.app_transition());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_root_display_area()->::com::android::server::wm::DisplayAreaProto::MergeFrom(from.root_display_area());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_resumed_activity()->::com::android::server::wm::IdentifierProto::MergeFrom(from.resumed_activity());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_input_method_target()->::com::android::server::wm::WindowStateProto::MergeFrom(from.input_method_target());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_input_method_input_target()->::com::android::server::wm::WindowStateProto::MergeFrom(from.input_method_input_target());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_input_method_control_target()->::com::android::server::wm::WindowStateProto::MergeFrom(from.input_method_control_target());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_current_focus()->::com::android::server::wm::WindowStateProto::MergeFrom(from.current_focus());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_ime_insets_source_provider()->::com::android::server::wm::ImeInsetsSourceProviderProto::MergeFrom(from.ime_insets_source_provider());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_display_rotation()->::com::android::server::wm::DisplayRotationProto::MergeFrom(from.display_rotation());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00020000u) {
      dpi_ = from.dpi_;
    }
    if (cached_has_bits & 0x00040000u) {
      rotation_ = from.rotation_;
    }
    if (cached_has_bits & 0x00080000u) {
      surface_size_ = from.surface_size_;
    }
    if (cached_has_bits & 0x00100000u) {
      focused_root_task_id_ = from.focused_root_task_id_;
    }
    if (cached_has_bits & 0x00200000u) {
      single_task_instance_ = from.single_task_instance_;
    }
    if (cached_has_bits & 0x00400000u) {
      display_ready_ = from.display_ready_;
    }
    if (cached_has_bits & 0x00800000u) {
      can_show_ime_ = from.can_show_ime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x03000000u) {
    if (cached_has_bits & 0x01000000u) {
      is_sleeping_ = from.is_sleeping_;
    }
    if (cached_has_bits & 0x02000000u) {
      ime_policy_ = from.ime_policy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DisplayContentProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.DisplayContentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayContentProto::CopyFrom(const DisplayContentProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.DisplayContentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayContentProto::IsInitialized() const {
  return true;
}

void DisplayContentProto::InternalSwap(DisplayContentProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&above_app_windows_)->InternalSwap(CastToBase(&other->above_app_windows_));
  CastToBase(&below_app_windows_)->InternalSwap(CastToBase(&other->below_app_windows_));
  CastToBase(&ime_windows_)->InternalSwap(CastToBase(&other->ime_windows_));
  CastToBase(&opening_apps_)->InternalSwap(CastToBase(&other->opening_apps_));
  CastToBase(&closing_apps_)->InternalSwap(CastToBase(&other->closing_apps_));
  CastToBase(&changing_apps_)->InternalSwap(CastToBase(&other->changing_apps_));
  CastToBase(&overlay_windows_)->InternalSwap(CastToBase(&other->overlay_windows_));
  CastToBase(&tasks_)->InternalSwap(CastToBase(&other->tasks_));
  sleep_tokens_.InternalSwap(CastToBase(&other->sleep_tokens_));
  focused_app_.Swap(&other->focused_app_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(window_container_, other->window_container_);
  swap(docked_task_divider_controller_, other->docked_task_divider_controller_);
  swap(pinned_task_controller_, other->pinned_task_controller_);
  swap(display_info_, other->display_info_);
  swap(screen_rotation_animation_, other->screen_rotation_animation_);
  swap(display_frames_, other->display_frames_);
  swap(app_transition_, other->app_transition_);
  swap(root_display_area_, other->root_display_area_);
  swap(resumed_activity_, other->resumed_activity_);
  swap(input_method_target_, other->input_method_target_);
  swap(input_method_input_target_, other->input_method_input_target_);
  swap(input_method_control_target_, other->input_method_control_target_);
  swap(current_focus_, other->current_focus_);
  swap(ime_insets_source_provider_, other->ime_insets_source_provider_);
  swap(display_rotation_, other->display_rotation_);
  swap(id_, other->id_);
  swap(dpi_, other->dpi_);
  swap(rotation_, other->rotation_);
  swap(surface_size_, other->surface_size_);
  swap(focused_root_task_id_, other->focused_root_task_id_);
  swap(single_task_instance_, other->single_task_instance_);
  swap(display_ready_, other->display_ready_);
  swap(can_show_ime_, other->can_show_ime_);
  swap(is_sleeping_, other->is_sleeping_);
  swap(ime_policy_, other->ime_policy_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisplayContentProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisplayAreaProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_DisplayAreaProto_default_instance_._instance.get_mutable()->window_container_ = const_cast< ::com::android::server::wm::WindowContainerProto*>(
      ::com::android::server::wm::WindowContainerProto::internal_default_instance());
}
class DisplayAreaProto::_Internal {
 public:
  using HasBits = decltype(std::declval<DisplayAreaProto>()._has_bits_);
  static const ::com::android::server::wm::WindowContainerProto& window_container(const DisplayAreaProto* msg);
  static void set_has_window_container(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_task_display_area(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_is_root_display_area(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_feature_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_is_organized(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::com::android::server::wm::WindowContainerProto&
DisplayAreaProto::_Internal::window_container(const DisplayAreaProto* msg) {
  return *msg->window_container_;
}
DisplayAreaProto::DisplayAreaProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.DisplayAreaProto)
}
DisplayAreaProto::DisplayAreaProto(const DisplayAreaProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      children_(from.children_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_window_container()) {
    window_container_ = new ::com::android::server::wm::WindowContainerProto(*from.window_container_);
  } else {
    window_container_ = nullptr;
  }
  ::memcpy(&is_task_display_area_, &from.is_task_display_area_,
    static_cast<size_t>(reinterpret_cast<char*>(&feature_id_) -
    reinterpret_cast<char*>(&is_task_display_area_)) + sizeof(feature_id_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.DisplayAreaProto)
}

void DisplayAreaProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&window_container_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&feature_id_) -
      reinterpret_cast<char*>(&window_container_)) + sizeof(feature_id_));
}

DisplayAreaProto::~DisplayAreaProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.DisplayAreaProto)
  SharedDtor();
}

void DisplayAreaProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete window_container_;
}

void DisplayAreaProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisplayAreaProto& DisplayAreaProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void DisplayAreaProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.DisplayAreaProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(window_container_ != nullptr);
      window_container_->Clear();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&is_task_display_area_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&feature_id_) -
        reinterpret_cast<char*>(&is_task_display_area_)) + sizeof(feature_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DisplayAreaProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_window_container(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2 [(.android.privacy) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_name(), ptr, ctx, "com.android.server.wm.DisplayAreaProto.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.DisplayAreaChildProto children = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_children(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // optional bool is_task_display_area = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_is_task_display_area(&has_bits);
          is_task_display_area_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_root_display_area = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_is_root_display_area(&has_bits);
          is_root_display_area_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 feature_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_feature_id(&has_bits);
          feature_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_organized = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_is_organized(&has_bits);
          is_organized_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DisplayAreaProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.DisplayAreaProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window_container()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2 [(.android.privacy) = {
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.wm.DisplayAreaProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.DisplayAreaChildProto children = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_children()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_task_display_area = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_is_task_display_area(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_task_display_area_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_root_display_area = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_is_root_display_area(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_root_display_area_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 feature_id = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_feature_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &feature_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_organized = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_is_organized(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_organized_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.DisplayAreaProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.DisplayAreaProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DisplayAreaProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.DisplayAreaProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::window_container(this), output);
  }

  // optional string name = 2 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.DisplayAreaProto.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .com.android.server.wm.DisplayAreaChildProto children = 3 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->children(static_cast<int>(i)),
      output);
  }

  // optional bool is_task_display_area = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(4, this->is_task_display_area(), output);
  }

  // optional bool is_root_display_area = 5;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(5, this->is_root_display_area(), output);
  }

  // optional int32 feature_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->feature_id(), output);
  }

  // optional bool is_organized = 7;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(7, this->is_organized(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.DisplayAreaProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* DisplayAreaProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.DisplayAreaProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::window_container(this), target);
  }

  // optional string name = 2 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.DisplayAreaProto.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .com.android.server.wm.DisplayAreaChildProto children = 3 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->children(static_cast<int>(i)), target);
  }

  // optional bool is_task_display_area = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->is_task_display_area(), target);
  }

  // optional bool is_root_display_area = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->is_root_display_area(), target);
  }

  // optional int32 feature_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->feature_id(), target);
  }

  // optional bool is_organized = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->is_organized(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.DisplayAreaProto)
  return target;
}

size_t DisplayAreaProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.DisplayAreaProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.wm.DisplayAreaChildProto children = 3 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->children_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->children(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string name = 2 [(.android.privacy) = {
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .com.android.server.wm.WindowContainerProto window_container = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_container_);
    }

    // optional bool is_task_display_area = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool is_root_display_area = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool is_organized = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional int32 feature_id = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->feature_id());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisplayAreaProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.DisplayAreaProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayAreaProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisplayAreaProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.DisplayAreaProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.DisplayAreaProto)
    MergeFrom(*source);
  }
}

void DisplayAreaProto::MergeFrom(const DisplayAreaProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.DisplayAreaProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_window_container()->::com::android::server::wm::WindowContainerProto::MergeFrom(from.window_container());
    }
    if (cached_has_bits & 0x00000004u) {
      is_task_display_area_ = from.is_task_display_area_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_root_display_area_ = from.is_root_display_area_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_organized_ = from.is_organized_;
    }
    if (cached_has_bits & 0x00000020u) {
      feature_id_ = from.feature_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DisplayAreaProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.DisplayAreaProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayAreaProto::CopyFrom(const DisplayAreaProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.DisplayAreaProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayAreaProto::IsInitialized() const {
  return true;
}

void DisplayAreaProto::InternalSwap(DisplayAreaProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&children_)->InternalSwap(CastToBase(&other->children_));
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(window_container_, other->window_container_);
  swap(is_task_display_area_, other->is_task_display_area_);
  swap(is_root_display_area_, other->is_root_display_area_);
  swap(is_organized_, other->is_organized_);
  swap(feature_id_, other->feature_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisplayAreaProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisplayAreaChildProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_DisplayAreaChildProto_default_instance_._instance.get_mutable()->display_area_ = const_cast< ::com::android::server::wm::DisplayAreaProto*>(
      ::com::android::server::wm::DisplayAreaProto::internal_default_instance());
  ::com::android::server::wm::_DisplayAreaChildProto_default_instance_._instance.get_mutable()->window_ = const_cast< ::com::android::server::wm::WindowTokenProto*>(
      ::com::android::server::wm::WindowTokenProto::internal_default_instance());
}
class DisplayAreaChildProto::_Internal {
 public:
  using HasBits = decltype(std::declval<DisplayAreaChildProto>()._has_bits_);
  static const ::com::android::server::wm::DisplayAreaProto& display_area(const DisplayAreaChildProto* msg);
  static void set_has_display_area(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::android::server::wm::WindowTokenProto& window(const DisplayAreaChildProto* msg);
  static void set_has_window(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::com::android::server::wm::DisplayAreaProto&
DisplayAreaChildProto::_Internal::display_area(const DisplayAreaChildProto* msg) {
  return *msg->display_area_;
}
const ::com::android::server::wm::WindowTokenProto&
DisplayAreaChildProto::_Internal::window(const DisplayAreaChildProto* msg) {
  return *msg->window_;
}
DisplayAreaChildProto::DisplayAreaChildProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.DisplayAreaChildProto)
}
DisplayAreaChildProto::DisplayAreaChildProto(const DisplayAreaChildProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      unknown_(from.unknown_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_display_area()) {
    display_area_ = new ::com::android::server::wm::DisplayAreaProto(*from.display_area_);
  } else {
    display_area_ = nullptr;
  }
  if (from.has_window()) {
    window_ = new ::com::android::server::wm::WindowTokenProto(*from.window_);
  } else {
    window_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.DisplayAreaChildProto)
}

void DisplayAreaChildProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&display_area_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&window_) -
      reinterpret_cast<char*>(&display_area_)) + sizeof(window_));
}

DisplayAreaChildProto::~DisplayAreaChildProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.DisplayAreaChildProto)
  SharedDtor();
}

void DisplayAreaChildProto::SharedDtor() {
  if (this != internal_default_instance()) delete display_area_;
  if (this != internal_default_instance()) delete window_;
}

void DisplayAreaChildProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisplayAreaChildProto& DisplayAreaChildProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void DisplayAreaChildProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.DisplayAreaChildProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unknown_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(display_area_ != nullptr);
      display_area_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(window_ != nullptr);
      window_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DisplayAreaChildProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.wm.DisplayAreaProto display_area = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_display_area(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowTokenProto window = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_window(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string unknown = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_unknown(), ptr, ctx, "com.android.server.wm.DisplayAreaChildProto.unknown");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DisplayAreaChildProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.DisplayAreaChildProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.wm.DisplayAreaProto display_area = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_display_area()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowTokenProto window = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string unknown = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_unknown()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unknown(this->unknown_size() - 1).data(),
            static_cast<int>(this->unknown(this->unknown_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.wm.DisplayAreaChildProto.unknown");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.DisplayAreaChildProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.DisplayAreaChildProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DisplayAreaChildProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.DisplayAreaChildProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.DisplayAreaProto display_area = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::display_area(this), output);
  }

  // optional .com.android.server.wm.WindowTokenProto window = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::window(this), output);
  }

  // repeated string unknown = 3;
  for (int i = 0, n = this->unknown_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unknown(i).data(), static_cast<int>(this->unknown(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.DisplayAreaChildProto.unknown");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      3, this->unknown(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.DisplayAreaChildProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* DisplayAreaChildProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.DisplayAreaChildProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.DisplayAreaProto display_area = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::display_area(this), target);
  }

  // optional .com.android.server.wm.WindowTokenProto window = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::window(this), target);
  }

  // repeated string unknown = 3;
  for (int i = 0, n = this->unknown_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unknown(i).data(), static_cast<int>(this->unknown(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.DisplayAreaChildProto.unknown");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(3, this->unknown(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.DisplayAreaChildProto)
  return target;
}

size_t DisplayAreaChildProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.DisplayAreaChildProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string unknown = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->unknown_size());
  for (int i = 0, n = this->unknown_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->unknown(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .com.android.server.wm.DisplayAreaProto display_area = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *display_area_);
    }

    // optional .com.android.server.wm.WindowTokenProto window = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisplayAreaChildProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.DisplayAreaChildProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayAreaChildProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisplayAreaChildProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.DisplayAreaChildProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.DisplayAreaChildProto)
    MergeFrom(*source);
  }
}

void DisplayAreaChildProto::MergeFrom(const DisplayAreaChildProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.DisplayAreaChildProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unknown_.MergeFrom(from.unknown_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_display_area()->::com::android::server::wm::DisplayAreaProto::MergeFrom(from.display_area());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_window()->::com::android::server::wm::WindowTokenProto::MergeFrom(from.window());
    }
  }
}

void DisplayAreaChildProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.DisplayAreaChildProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayAreaChildProto::CopyFrom(const DisplayAreaChildProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.DisplayAreaChildProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayAreaChildProto::IsInitialized() const {
  return true;
}

void DisplayAreaChildProto::InternalSwap(DisplayAreaChildProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  unknown_.InternalSwap(CastToBase(&other->unknown_));
  swap(display_area_, other->display_area_);
  swap(window_, other->window_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisplayAreaChildProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisplayFramesProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_DisplayFramesProto_default_instance_._instance.get_mutable()->stable_bounds_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_DisplayFramesProto_default_instance_._instance.get_mutable()->dock_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_DisplayFramesProto_default_instance_._instance.get_mutable()->current_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
}
class DisplayFramesProto::_Internal {
 public:
  using HasBits = decltype(std::declval<DisplayFramesProto>()._has_bits_);
  static const ::android::graphics::RectProto& stable_bounds(const DisplayFramesProto* msg);
  static void set_has_stable_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::android::graphics::RectProto& dock(const DisplayFramesProto* msg);
  static void set_has_dock(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::android::graphics::RectProto& current(const DisplayFramesProto* msg);
  static void set_has_current(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::android::graphics::RectProto&
DisplayFramesProto::_Internal::stable_bounds(const DisplayFramesProto* msg) {
  return *msg->stable_bounds_;
}
const ::android::graphics::RectProto&
DisplayFramesProto::_Internal::dock(const DisplayFramesProto* msg) {
  return *msg->dock_;
}
const ::android::graphics::RectProto&
DisplayFramesProto::_Internal::current(const DisplayFramesProto* msg) {
  return *msg->current_;
}
void DisplayFramesProto::clear_stable_bounds() {
  if (stable_bounds_ != nullptr) stable_bounds_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void DisplayFramesProto::clear_dock() {
  if (dock_ != nullptr) dock_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void DisplayFramesProto::clear_current() {
  if (current_ != nullptr) current_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
DisplayFramesProto::DisplayFramesProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.DisplayFramesProto)
}
DisplayFramesProto::DisplayFramesProto(const DisplayFramesProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stable_bounds()) {
    stable_bounds_ = new ::android::graphics::RectProto(*from.stable_bounds_);
  } else {
    stable_bounds_ = nullptr;
  }
  if (from.has_dock()) {
    dock_ = new ::android::graphics::RectProto(*from.dock_);
  } else {
    dock_ = nullptr;
  }
  if (from.has_current()) {
    current_ = new ::android::graphics::RectProto(*from.current_);
  } else {
    current_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.DisplayFramesProto)
}

void DisplayFramesProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DisplayFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&stable_bounds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_) -
      reinterpret_cast<char*>(&stable_bounds_)) + sizeof(current_));
}

DisplayFramesProto::~DisplayFramesProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.DisplayFramesProto)
  SharedDtor();
}

void DisplayFramesProto::SharedDtor() {
  if (this != internal_default_instance()) delete stable_bounds_;
  if (this != internal_default_instance()) delete dock_;
  if (this != internal_default_instance()) delete current_;
}

void DisplayFramesProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisplayFramesProto& DisplayFramesProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DisplayFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void DisplayFramesProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.DisplayFramesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(stable_bounds_ != nullptr);
      stable_bounds_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(dock_ != nullptr);
      dock_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(current_ != nullptr);
      current_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DisplayFramesProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.graphics.RectProto stable_bounds = 1 [deprecated = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_stable_bounds(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto dock = 2 [deprecated = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_dock(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto current = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_current(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DisplayFramesProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.DisplayFramesProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.graphics.RectProto stable_bounds = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_stable_bounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto dock = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_dock()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto current = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_current()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.DisplayFramesProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.DisplayFramesProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DisplayFramesProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.DisplayFramesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.graphics.RectProto stable_bounds = 1 [deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::stable_bounds(this), output);
  }

  // optional .android.graphics.RectProto dock = 2 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::dock(this), output);
  }

  // optional .android.graphics.RectProto current = 3 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::current(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.DisplayFramesProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* DisplayFramesProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.DisplayFramesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.graphics.RectProto stable_bounds = 1 [deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::stable_bounds(this), target);
  }

  // optional .android.graphics.RectProto dock = 2 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::dock(this), target);
  }

  // optional .android.graphics.RectProto current = 3 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::current(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.DisplayFramesProto)
  return target;
}

size_t DisplayFramesProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.DisplayFramesProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .android.graphics.RectProto stable_bounds = 1 [deprecated = true];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *stable_bounds_);
    }

    // optional .android.graphics.RectProto dock = 2 [deprecated = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *dock_);
    }

    // optional .android.graphics.RectProto current = 3 [deprecated = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *current_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisplayFramesProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.DisplayFramesProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayFramesProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisplayFramesProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.DisplayFramesProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.DisplayFramesProto)
    MergeFrom(*source);
  }
}

void DisplayFramesProto::MergeFrom(const DisplayFramesProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.DisplayFramesProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_stable_bounds()->::android::graphics::RectProto::MergeFrom(from.stable_bounds());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_dock()->::android::graphics::RectProto::MergeFrom(from.dock());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_current()->::android::graphics::RectProto::MergeFrom(from.current());
    }
  }
}

void DisplayFramesProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.DisplayFramesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayFramesProto::CopyFrom(const DisplayFramesProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.DisplayFramesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayFramesProto::IsInitialized() const {
  return true;
}

void DisplayFramesProto::InternalSwap(DisplayFramesProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(stable_bounds_, other->stable_bounds_);
  swap(dock_, other->dock_);
  swap(current_, other->current_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisplayFramesProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisplayRotationProto::InitAsDefaultInstance() {
}
class DisplayRotationProto::_Internal {
 public:
  using HasBits = decltype(std::declval<DisplayRotationProto>()._has_bits_);
  static void set_has_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_frozen_to_user_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_user_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_fixed_to_user_rotation_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_last_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

DisplayRotationProto::DisplayRotationProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.DisplayRotationProto)
}
DisplayRotationProto::DisplayRotationProto(const DisplayRotationProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rotation_, &from.rotation_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_orientation_) -
    reinterpret_cast<char*>(&rotation_)) + sizeof(last_orientation_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.DisplayRotationProto)
}

void DisplayRotationProto::SharedCtor() {
  ::memset(&rotation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_orientation_) -
      reinterpret_cast<char*>(&rotation_)) + sizeof(last_orientation_));
}

DisplayRotationProto::~DisplayRotationProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.DisplayRotationProto)
  SharedDtor();
}

void DisplayRotationProto::SharedDtor() {
}

void DisplayRotationProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisplayRotationProto& DisplayRotationProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DisplayRotationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void DisplayRotationProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.DisplayRotationProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&rotation_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_orientation_) -
        reinterpret_cast<char*>(&rotation_)) + sizeof(last_orientation_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DisplayRotationProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 rotation = 1 [(.android.typedef) = "android.view.Surface.Rotation"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_rotation(&has_bits);
          rotation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool frozen_to_user_rotation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_frozen_to_user_rotation(&has_bits);
          frozen_to_user_rotation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 user_rotation = 3 [(.android.typedef) = "android.view.Surface.Rotation"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_user_rotation(&has_bits);
          user_rotation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 fixed_to_user_rotation_mode = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_fixed_to_user_rotation_mode(&has_bits);
          fixed_to_user_rotation_mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 last_orientation = 5 [(.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_last_orientation(&has_bits);
          last_orientation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DisplayRotationProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.DisplayRotationProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rotation = 1 [(.android.typedef) = "android.view.Surface.Rotation"];
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_rotation(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool frozen_to_user_rotation = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_frozen_to_user_rotation(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &frozen_to_user_rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_rotation = 3 [(.android.typedef) = "android.view.Surface.Rotation"];
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_user_rotation(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fixed_to_user_rotation_mode = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_fixed_to_user_rotation_mode(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &fixed_to_user_rotation_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 last_orientation = 5 [(.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_last_orientation(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_orientation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.DisplayRotationProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.DisplayRotationProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DisplayRotationProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.DisplayRotationProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 rotation = 1 [(.android.typedef) = "android.view.Surface.Rotation"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->rotation(), output);
  }

  // optional bool frozen_to_user_rotation = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->frozen_to_user_rotation(), output);
  }

  // optional int32 user_rotation = 3 [(.android.typedef) = "android.view.Surface.Rotation"];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->user_rotation(), output);
  }

  // optional int32 fixed_to_user_rotation_mode = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->fixed_to_user_rotation_mode(), output);
  }

  // optional int32 last_orientation = 5 [(.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->last_orientation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.DisplayRotationProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* DisplayRotationProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.DisplayRotationProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 rotation = 1 [(.android.typedef) = "android.view.Surface.Rotation"];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->rotation(), target);
  }

  // optional bool frozen_to_user_rotation = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->frozen_to_user_rotation(), target);
  }

  // optional int32 user_rotation = 3 [(.android.typedef) = "android.view.Surface.Rotation"];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->user_rotation(), target);
  }

  // optional int32 fixed_to_user_rotation_mode = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->fixed_to_user_rotation_mode(), target);
  }

  // optional int32 last_orientation = 5 [(.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->last_orientation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.DisplayRotationProto)
  return target;
}

size_t DisplayRotationProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.DisplayRotationProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional int32 rotation = 1 [(.android.typedef) = "android.view.Surface.Rotation"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->rotation());
    }

    // optional bool frozen_to_user_rotation = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional int32 user_rotation = 3 [(.android.typedef) = "android.view.Surface.Rotation"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->user_rotation());
    }

    // optional int32 fixed_to_user_rotation_mode = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->fixed_to_user_rotation_mode());
    }

    // optional int32 last_orientation = 5 [(.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->last_orientation());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisplayRotationProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.DisplayRotationProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayRotationProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisplayRotationProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.DisplayRotationProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.DisplayRotationProto)
    MergeFrom(*source);
  }
}

void DisplayRotationProto::MergeFrom(const DisplayRotationProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.DisplayRotationProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      rotation_ = from.rotation_;
    }
    if (cached_has_bits & 0x00000002u) {
      frozen_to_user_rotation_ = from.frozen_to_user_rotation_;
    }
    if (cached_has_bits & 0x00000004u) {
      user_rotation_ = from.user_rotation_;
    }
    if (cached_has_bits & 0x00000008u) {
      fixed_to_user_rotation_mode_ = from.fixed_to_user_rotation_mode_;
    }
    if (cached_has_bits & 0x00000010u) {
      last_orientation_ = from.last_orientation_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DisplayRotationProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.DisplayRotationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayRotationProto::CopyFrom(const DisplayRotationProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.DisplayRotationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayRotationProto::IsInitialized() const {
  return true;
}

void DisplayRotationProto::InternalSwap(DisplayRotationProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(rotation_, other->rotation_);
  swap(frozen_to_user_rotation_, other->frozen_to_user_rotation_);
  swap(user_rotation_, other->user_rotation_);
  swap(fixed_to_user_rotation_mode_, other->fixed_to_user_rotation_mode_);
  swap(last_orientation_, other->last_orientation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisplayRotationProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DockedTaskDividerControllerProto::InitAsDefaultInstance() {
}
class DockedTaskDividerControllerProto::_Internal {
 public:
  using HasBits = decltype(std::declval<DockedTaskDividerControllerProto>()._has_bits_);
  static void set_has_minimized_dock(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

DockedTaskDividerControllerProto::DockedTaskDividerControllerProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.DockedTaskDividerControllerProto)
}
DockedTaskDividerControllerProto::DockedTaskDividerControllerProto(const DockedTaskDividerControllerProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  minimized_dock_ = from.minimized_dock_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.DockedTaskDividerControllerProto)
}

void DockedTaskDividerControllerProto::SharedCtor() {
  minimized_dock_ = false;
}

DockedTaskDividerControllerProto::~DockedTaskDividerControllerProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.DockedTaskDividerControllerProto)
  SharedDtor();
}

void DockedTaskDividerControllerProto::SharedDtor() {
}

void DockedTaskDividerControllerProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DockedTaskDividerControllerProto& DockedTaskDividerControllerProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DockedTaskDividerControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void DockedTaskDividerControllerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.DockedTaskDividerControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  minimized_dock_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DockedTaskDividerControllerProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool minimized_dock = 1 [deprecated = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_minimized_dock(&has_bits);
          minimized_dock_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DockedTaskDividerControllerProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.DockedTaskDividerControllerProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool minimized_dock = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_minimized_dock(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &minimized_dock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.DockedTaskDividerControllerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.DockedTaskDividerControllerProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DockedTaskDividerControllerProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.DockedTaskDividerControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool minimized_dock = 1 [deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->minimized_dock(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.DockedTaskDividerControllerProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* DockedTaskDividerControllerProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.DockedTaskDividerControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool minimized_dock = 1 [deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->minimized_dock(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.DockedTaskDividerControllerProto)
  return target;
}

size_t DockedTaskDividerControllerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.DockedTaskDividerControllerProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool minimized_dock = 1 [deprecated = true];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DockedTaskDividerControllerProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.DockedTaskDividerControllerProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DockedTaskDividerControllerProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DockedTaskDividerControllerProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.DockedTaskDividerControllerProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.DockedTaskDividerControllerProto)
    MergeFrom(*source);
  }
}

void DockedTaskDividerControllerProto::MergeFrom(const DockedTaskDividerControllerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.DockedTaskDividerControllerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_minimized_dock()) {
    set_minimized_dock(from.minimized_dock());
  }
}

void DockedTaskDividerControllerProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.DockedTaskDividerControllerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DockedTaskDividerControllerProto::CopyFrom(const DockedTaskDividerControllerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.DockedTaskDividerControllerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DockedTaskDividerControllerProto::IsInitialized() const {
  return true;
}

void DockedTaskDividerControllerProto::InternalSwap(DockedTaskDividerControllerProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(minimized_dock_, other->minimized_dock_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DockedTaskDividerControllerProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PinnedTaskControllerProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_PinnedTaskControllerProto_default_instance_._instance.get_mutable()->default_bounds_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_PinnedTaskControllerProto_default_instance_._instance.get_mutable()->movement_bounds_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
}
class PinnedTaskControllerProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PinnedTaskControllerProto>()._has_bits_);
  static const ::android::graphics::RectProto& default_bounds(const PinnedTaskControllerProto* msg);
  static void set_has_default_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::android::graphics::RectProto& movement_bounds(const PinnedTaskControllerProto* msg);
  static void set_has_movement_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::android::graphics::RectProto&
PinnedTaskControllerProto::_Internal::default_bounds(const PinnedTaskControllerProto* msg) {
  return *msg->default_bounds_;
}
const ::android::graphics::RectProto&
PinnedTaskControllerProto::_Internal::movement_bounds(const PinnedTaskControllerProto* msg) {
  return *msg->movement_bounds_;
}
void PinnedTaskControllerProto::clear_default_bounds() {
  if (default_bounds_ != nullptr) default_bounds_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void PinnedTaskControllerProto::clear_movement_bounds() {
  if (movement_bounds_ != nullptr) movement_bounds_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
PinnedTaskControllerProto::PinnedTaskControllerProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.PinnedTaskControllerProto)
}
PinnedTaskControllerProto::PinnedTaskControllerProto(const PinnedTaskControllerProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_default_bounds()) {
    default_bounds_ = new ::android::graphics::RectProto(*from.default_bounds_);
  } else {
    default_bounds_ = nullptr;
  }
  if (from.has_movement_bounds()) {
    movement_bounds_ = new ::android::graphics::RectProto(*from.movement_bounds_);
  } else {
    movement_bounds_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.PinnedTaskControllerProto)
}

void PinnedTaskControllerProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PinnedTaskControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&default_bounds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&movement_bounds_) -
      reinterpret_cast<char*>(&default_bounds_)) + sizeof(movement_bounds_));
}

PinnedTaskControllerProto::~PinnedTaskControllerProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.PinnedTaskControllerProto)
  SharedDtor();
}

void PinnedTaskControllerProto::SharedDtor() {
  if (this != internal_default_instance()) delete default_bounds_;
  if (this != internal_default_instance()) delete movement_bounds_;
}

void PinnedTaskControllerProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PinnedTaskControllerProto& PinnedTaskControllerProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PinnedTaskControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void PinnedTaskControllerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.PinnedTaskControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(default_bounds_ != nullptr);
      default_bounds_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(movement_bounds_ != nullptr);
      movement_bounds_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PinnedTaskControllerProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.graphics.RectProto default_bounds = 1 [deprecated = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_default_bounds(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto movement_bounds = 2 [deprecated = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_movement_bounds(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PinnedTaskControllerProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.PinnedTaskControllerProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.graphics.RectProto default_bounds = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_default_bounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto movement_bounds = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_movement_bounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.PinnedTaskControllerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.PinnedTaskControllerProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PinnedTaskControllerProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.PinnedTaskControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.graphics.RectProto default_bounds = 1 [deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::default_bounds(this), output);
  }

  // optional .android.graphics.RectProto movement_bounds = 2 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::movement_bounds(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.PinnedTaskControllerProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PinnedTaskControllerProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.PinnedTaskControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.graphics.RectProto default_bounds = 1 [deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::default_bounds(this), target);
  }

  // optional .android.graphics.RectProto movement_bounds = 2 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::movement_bounds(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.PinnedTaskControllerProto)
  return target;
}

size_t PinnedTaskControllerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.PinnedTaskControllerProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .android.graphics.RectProto default_bounds = 1 [deprecated = true];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *default_bounds_);
    }

    // optional .android.graphics.RectProto movement_bounds = 2 [deprecated = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *movement_bounds_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PinnedTaskControllerProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.PinnedTaskControllerProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PinnedTaskControllerProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PinnedTaskControllerProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.PinnedTaskControllerProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.PinnedTaskControllerProto)
    MergeFrom(*source);
  }
}

void PinnedTaskControllerProto::MergeFrom(const PinnedTaskControllerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.PinnedTaskControllerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_default_bounds()->::android::graphics::RectProto::MergeFrom(from.default_bounds());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_movement_bounds()->::android::graphics::RectProto::MergeFrom(from.movement_bounds());
    }
  }
}

void PinnedTaskControllerProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.PinnedTaskControllerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PinnedTaskControllerProto::CopyFrom(const PinnedTaskControllerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.PinnedTaskControllerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PinnedTaskControllerProto::IsInitialized() const {
  return true;
}

void PinnedTaskControllerProto::InternalSwap(PinnedTaskControllerProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(default_bounds_, other->default_bounds_);
  swap(movement_bounds_, other->movement_bounds_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PinnedTaskControllerProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TaskProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_TaskProto_default_instance_._instance.get_mutable()->window_container_ = const_cast< ::com::android::server::wm::WindowContainerProto*>(
      ::com::android::server::wm::WindowContainerProto::internal_default_instance());
  ::com::android::server::wm::_TaskProto_default_instance_._instance.get_mutable()->bounds_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_TaskProto_default_instance_._instance.get_mutable()->displayed_bounds_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_TaskProto_default_instance_._instance.get_mutable()->resumed_activity_ = const_cast< ::com::android::server::wm::IdentifierProto*>(
      ::com::android::server::wm::IdentifierProto::internal_default_instance());
  ::com::android::server::wm::_TaskProto_default_instance_._instance.get_mutable()->adjusted_bounds_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_TaskProto_default_instance_._instance.get_mutable()->last_non_fullscreen_bounds_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_TaskProto_default_instance_._instance.get_mutable()->task_fragment_ = const_cast< ::com::android::server::wm::TaskFragmentProto*>(
      ::com::android::server::wm::TaskFragmentProto::internal_default_instance());
}
class TaskProto::_Internal {
 public:
  using HasBits = decltype(std::declval<TaskProto>()._has_bits_);
  static const ::com::android::server::wm::WindowContainerProto& window_container(const TaskProto* msg);
  static void set_has_window_container(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_fills_parent(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::android::graphics::RectProto& bounds(const TaskProto* msg);
  static void set_has_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::android::graphics::RectProto& displayed_bounds(const TaskProto* msg);
  static void set_has_displayed_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_defer_removal(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_surface_width(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_surface_height(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::com::android::server::wm::IdentifierProto& resumed_activity(const TaskProto* msg);
  static void set_has_resumed_activity(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_real_activity(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_orig_activity(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_display_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_root_task_id(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_activity_type(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_resize_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_min_width(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_min_height(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static const ::android::graphics::RectProto& adjusted_bounds(const TaskProto* msg);
  static void set_has_adjusted_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::android::graphics::RectProto& last_non_fullscreen_bounds(const TaskProto* msg);
  static void set_has_last_non_fullscreen_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_adjusted_for_ime(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_adjust_ime_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_adjust_divider_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_animating_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_minimize_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_created_by_organizer(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_affinity(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_has_child_pip_activity(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static const ::com::android::server::wm::TaskFragmentProto& task_fragment(const TaskProto* msg);
  static void set_has_task_fragment(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

const ::com::android::server::wm::WindowContainerProto&
TaskProto::_Internal::window_container(const TaskProto* msg) {
  return *msg->window_container_;
}
const ::android::graphics::RectProto&
TaskProto::_Internal::bounds(const TaskProto* msg) {
  return *msg->bounds_;
}
const ::android::graphics::RectProto&
TaskProto::_Internal::displayed_bounds(const TaskProto* msg) {
  return *msg->displayed_bounds_;
}
const ::com::android::server::wm::IdentifierProto&
TaskProto::_Internal::resumed_activity(const TaskProto* msg) {
  return *msg->resumed_activity_;
}
const ::android::graphics::RectProto&
TaskProto::_Internal::adjusted_bounds(const TaskProto* msg) {
  return *msg->adjusted_bounds_;
}
const ::android::graphics::RectProto&
TaskProto::_Internal::last_non_fullscreen_bounds(const TaskProto* msg) {
  return *msg->last_non_fullscreen_bounds_;
}
const ::com::android::server::wm::TaskFragmentProto&
TaskProto::_Internal::task_fragment(const TaskProto* msg) {
  return *msg->task_fragment_;
}
void TaskProto::clear_bounds() {
  if (bounds_ != nullptr) bounds_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void TaskProto::clear_displayed_bounds() {
  if (displayed_bounds_ != nullptr) displayed_bounds_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
void TaskProto::clear_adjusted_bounds() {
  if (adjusted_bounds_ != nullptr) adjusted_bounds_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
void TaskProto::clear_last_non_fullscreen_bounds() {
  if (last_non_fullscreen_bounds_ != nullptr) last_non_fullscreen_bounds_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
TaskProto::TaskProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.TaskProto)
}
TaskProto::TaskProto(const TaskProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      tasks_(from.tasks_),
      activities_(from.activities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  real_activity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_real_activity()) {
    real_activity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.real_activity_);
  }
  orig_activity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_orig_activity()) {
    orig_activity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.orig_activity_);
  }
  affinity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_affinity()) {
    affinity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.affinity_);
  }
  if (from.has_window_container()) {
    window_container_ = new ::com::android::server::wm::WindowContainerProto(*from.window_container_);
  } else {
    window_container_ = nullptr;
  }
  if (from.has_bounds()) {
    bounds_ = new ::android::graphics::RectProto(*from.bounds_);
  } else {
    bounds_ = nullptr;
  }
  if (from.has_displayed_bounds()) {
    displayed_bounds_ = new ::android::graphics::RectProto(*from.displayed_bounds_);
  } else {
    displayed_bounds_ = nullptr;
  }
  if (from.has_resumed_activity()) {
    resumed_activity_ = new ::com::android::server::wm::IdentifierProto(*from.resumed_activity_);
  } else {
    resumed_activity_ = nullptr;
  }
  if (from.has_adjusted_bounds()) {
    adjusted_bounds_ = new ::android::graphics::RectProto(*from.adjusted_bounds_);
  } else {
    adjusted_bounds_ = nullptr;
  }
  if (from.has_last_non_fullscreen_bounds()) {
    last_non_fullscreen_bounds_ = new ::android::graphics::RectProto(*from.last_non_fullscreen_bounds_);
  } else {
    last_non_fullscreen_bounds_ = nullptr;
  }
  if (from.has_task_fragment()) {
    task_fragment_ = new ::com::android::server::wm::TaskFragmentProto(*from.task_fragment_);
  } else {
    task_fragment_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&has_child_pip_activity_) -
    reinterpret_cast<char*>(&id_)) + sizeof(has_child_pip_activity_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.TaskProto)
}

void TaskProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  real_activity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  orig_activity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  affinity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&window_container_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&has_child_pip_activity_) -
      reinterpret_cast<char*>(&window_container_)) + sizeof(has_child_pip_activity_));
}

TaskProto::~TaskProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.TaskProto)
  SharedDtor();
}

void TaskProto::SharedDtor() {
  real_activity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  orig_activity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  affinity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete window_container_;
  if (this != internal_default_instance()) delete bounds_;
  if (this != internal_default_instance()) delete displayed_bounds_;
  if (this != internal_default_instance()) delete resumed_activity_;
  if (this != internal_default_instance()) delete adjusted_bounds_;
  if (this != internal_default_instance()) delete last_non_fullscreen_bounds_;
  if (this != internal_default_instance()) delete task_fragment_;
}

void TaskProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskProto& TaskProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void TaskProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.TaskProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tasks_.Clear();
  activities_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      real_activity_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      orig_activity_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      affinity_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(window_container_ != nullptr);
      window_container_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(bounds_ != nullptr);
      bounds_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(displayed_bounds_ != nullptr);
      displayed_bounds_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(resumed_activity_ != nullptr);
      resumed_activity_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(adjusted_bounds_ != nullptr);
      adjusted_bounds_->Clear();
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(last_non_fullscreen_bounds_ != nullptr);
      last_non_fullscreen_bounds_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(task_fragment_ != nullptr);
      task_fragment_->Clear();
    }
  }
  if (cached_has_bits & 0x0000fc00u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&defer_removal_) -
        reinterpret_cast<char*>(&id_)) + sizeof(defer_removal_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&adjusted_for_ime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&adjust_ime_amount_) -
        reinterpret_cast<char*>(&adjusted_for_ime_)) + sizeof(adjust_ime_amount_));
  }
  if (cached_has_bits & 0x0f000000u) {
    ::memset(&adjust_divider_amount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&has_child_pip_activity_) -
        reinterpret_cast<char*>(&adjust_divider_amount_)) + sizeof(has_child_pip_activity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 1 [deprecated = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_window_container(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool fills_parent = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_fills_parent(&has_bits);
          fills_parent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto bounds = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_bounds(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto displayed_bounds = 6 [deprecated = true];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_displayed_bounds(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool defer_removal = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_defer_removal(&has_bits);
          defer_removal_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 surface_width = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_surface_width(&has_bits);
          surface_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 surface_height = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_surface_height(&has_bits);
          surface_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.TaskProto tasks = 10 [deprecated = true];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_tasks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 82);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.ActivityRecordProto activities = 11 [deprecated = true];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_activities(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 90);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.IdentifierProto resumed_activity = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(mutable_resumed_activity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string real_activity = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_real_activity(), ptr, ctx, "com.android.server.wm.TaskProto.real_activity");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string orig_activity = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_orig_activity(), ptr, ctx, "com.android.server.wm.TaskProto.orig_activity");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 display_id = 15 [deprecated = true];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_display_id(&has_bits);
          display_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 root_task_id = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_root_task_id(&has_bits);
          root_task_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 activity_type = 17 [deprecated = true, (.android.typedef) = "android.app.WindowConfiguration.ActivityType"];
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_activity_type(&has_bits);
          activity_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 resize_mode = 18 [(.android.typedef) = "android.appwidget.AppWidgetProviderInfo.ResizeModeFlags"];
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_resize_mode(&has_bits);
          resize_mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 min_width = 19 [deprecated = true];
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          _Internal::set_has_min_width(&has_bits);
          min_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 min_height = 20 [deprecated = true];
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_min_height(&has_bits);
          min_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto adjusted_bounds = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(mutable_adjusted_bounds(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto last_non_fullscreen_bounds = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ctx->ParseMessage(mutable_last_non_fullscreen_bounds(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool adjusted_for_ime = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          _Internal::set_has_adjusted_for_ime(&has_bits);
          adjusted_for_ime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float adjust_ime_amount = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 197)) {
          _Internal::set_has_adjust_ime_amount(&has_bits);
          adjust_ime_amount_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float adjust_divider_amount = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 205)) {
          _Internal::set_has_adjust_divider_amount(&has_bits);
          adjust_divider_amount_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional bool animating_bounds = 26 [deprecated = true];
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_animating_bounds(&has_bits);
          animating_bounds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float minimize_amount = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 221)) {
          _Internal::set_has_minimize_amount(&has_bits);
          minimize_amount_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional bool created_by_organizer = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_created_by_organizer(&has_bits);
          created_by_organizer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string affinity = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_affinity(), ptr, ctx, "com.android.server.wm.TaskProto.affinity");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool has_child_pip_activity = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_has_child_pip_activity(&has_bits);
          has_child_pip_activity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.TaskFragmentProto task_fragment = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(mutable_task_fragment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.TaskProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window_container()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool fills_parent = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_fills_parent(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fills_parent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto bounds = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_bounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto displayed_bounds = 6 [deprecated = true];
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_displayed_bounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool defer_removal = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_defer_removal(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &defer_removal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 surface_width = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_surface_width(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &surface_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 surface_height = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_surface_height(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &surface_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.TaskProto tasks = 10 [deprecated = true];
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_tasks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.ActivityRecordProto activities = 11 [deprecated = true];
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_activities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.IdentifierProto resumed_activity = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_resumed_activity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string real_activity = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_real_activity()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->real_activity().data(), static_cast<int>(this->real_activity().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.wm.TaskProto.real_activity");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string orig_activity = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (114 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_orig_activity()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orig_activity().data(), static_cast<int>(this->orig_activity().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.wm.TaskProto.orig_activity");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 display_id = 15 [deprecated = true];
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (120 & 0xFF)) {
          _Internal::set_has_display_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &display_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 root_task_id = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (128 & 0xFF)) {
          _Internal::set_has_root_task_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &root_task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 activity_type = 17 [deprecated = true, (.android.typedef) = "android.app.WindowConfiguration.ActivityType"];
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (136 & 0xFF)) {
          _Internal::set_has_activity_type(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 resize_mode = 18 [(.android.typedef) = "android.appwidget.AppWidgetProviderInfo.ResizeModeFlags"];
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (144 & 0xFF)) {
          _Internal::set_has_resize_mode(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &resize_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 min_width = 19 [deprecated = true];
      case 19: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (152 & 0xFF)) {
          _Internal::set_has_min_width(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 min_height = 20 [deprecated = true];
      case 20: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (160 & 0xFF)) {
          _Internal::set_has_min_height(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto adjusted_bounds = 21;
      case 21: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (170 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_adjusted_bounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto last_non_fullscreen_bounds = 22;
      case 22: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (178 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_last_non_fullscreen_bounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool adjusted_for_ime = 23;
      case 23: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (184 & 0xFF)) {
          _Internal::set_has_adjusted_for_ime(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &adjusted_for_ime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float adjust_ime_amount = 24;
      case 24: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (197 & 0xFF)) {
          _Internal::set_has_adjust_ime_amount(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &adjust_ime_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float adjust_divider_amount = 25;
      case 25: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (205 & 0xFF)) {
          _Internal::set_has_adjust_divider_amount(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &adjust_divider_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool animating_bounds = 26 [deprecated = true];
      case 26: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (208 & 0xFF)) {
          _Internal::set_has_animating_bounds(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &animating_bounds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float minimize_amount = 27;
      case 27: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (221 & 0xFF)) {
          _Internal::set_has_minimize_amount(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &minimize_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool created_by_organizer = 28;
      case 28: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (224 & 0xFF)) {
          _Internal::set_has_created_by_organizer(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &created_by_organizer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string affinity = 29;
      case 29: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (234 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_affinity()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->affinity().data(), static_cast<int>(this->affinity().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.wm.TaskProto.affinity");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_child_pip_activity = 30;
      case 30: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (240 & 0xFF)) {
          _Internal::set_has_has_child_pip_activity(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_child_pip_activity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.TaskFragmentProto task_fragment = 31;
      case 31: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (250 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_task_fragment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.TaskProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.TaskProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.TaskProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 1 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::window_container(this), output);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional bool fills_parent = 4;
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(4, this->fills_parent(), output);
  }

  // optional .android.graphics.RectProto bounds = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::bounds(this), output);
  }

  // optional .android.graphics.RectProto displayed_bounds = 6 [deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::displayed_bounds(this), output);
  }

  // optional bool defer_removal = 7;
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(7, this->defer_removal(), output);
  }

  // optional int32 surface_width = 8;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(8, this->surface_width(), output);
  }

  // optional int32 surface_height = 9;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(9, this->surface_height(), output);
  }

  // repeated .com.android.server.wm.TaskProto tasks = 10 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->tasks(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.wm.ActivityRecordProto activities = 11 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activities_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->activities(static_cast<int>(i)),
      output);
  }

  // optional .com.android.server.wm.IdentifierProto resumed_activity = 12;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, _Internal::resumed_activity(this), output);
  }

  // optional string real_activity = 13;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->real_activity().data(), static_cast<int>(this->real_activity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.TaskProto.real_activity");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->real_activity(), output);
  }

  // optional string orig_activity = 14;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orig_activity().data(), static_cast<int>(this->orig_activity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.TaskProto.orig_activity");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->orig_activity(), output);
  }

  // optional int32 display_id = 15 [deprecated = true];
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(15, this->display_id(), output);
  }

  // optional int32 root_task_id = 16;
  if (cached_has_bits & 0x00040000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(16, this->root_task_id(), output);
  }

  // optional int32 activity_type = 17 [deprecated = true, (.android.typedef) = "android.app.WindowConfiguration.ActivityType"];
  if (cached_has_bits & 0x00080000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(17, this->activity_type(), output);
  }

  // optional int32 resize_mode = 18 [(.android.typedef) = "android.appwidget.AppWidgetProviderInfo.ResizeModeFlags"];
  if (cached_has_bits & 0x00100000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(18, this->resize_mode(), output);
  }

  // optional int32 min_width = 19 [deprecated = true];
  if (cached_has_bits & 0x00200000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(19, this->min_width(), output);
  }

  // optional int32 min_height = 20 [deprecated = true];
  if (cached_has_bits & 0x00400000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(20, this->min_height(), output);
  }

  // optional .android.graphics.RectProto adjusted_bounds = 21;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, _Internal::adjusted_bounds(this), output);
  }

  // optional .android.graphics.RectProto last_non_fullscreen_bounds = 22;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, _Internal::last_non_fullscreen_bounds(this), output);
  }

  // optional bool adjusted_for_ime = 23;
  if (cached_has_bits & 0x00010000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(23, this->adjusted_for_ime(), output);
  }

  // optional float adjust_ime_amount = 24;
  if (cached_has_bits & 0x00800000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(24, this->adjust_ime_amount(), output);
  }

  // optional float adjust_divider_amount = 25;
  if (cached_has_bits & 0x01000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(25, this->adjust_divider_amount(), output);
  }

  // optional bool animating_bounds = 26 [deprecated = true];
  if (cached_has_bits & 0x00020000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(26, this->animating_bounds(), output);
  }

  // optional float minimize_amount = 27;
  if (cached_has_bits & 0x02000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(27, this->minimize_amount(), output);
  }

  // optional bool created_by_organizer = 28;
  if (cached_has_bits & 0x04000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(28, this->created_by_organizer(), output);
  }

  // optional string affinity = 29;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->affinity().data(), static_cast<int>(this->affinity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.TaskProto.affinity");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->affinity(), output);
  }

  // optional bool has_child_pip_activity = 30;
  if (cached_has_bits & 0x08000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(30, this->has_child_pip_activity(), output);
  }

  // optional .com.android.server.wm.TaskFragmentProto task_fragment = 31;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, _Internal::task_fragment(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.TaskProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* TaskProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.TaskProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 1 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::window_container(this), target);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional bool fills_parent = 4;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->fills_parent(), target);
  }

  // optional .android.graphics.RectProto bounds = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::bounds(this), target);
  }

  // optional .android.graphics.RectProto displayed_bounds = 6 [deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::displayed_bounds(this), target);
  }

  // optional bool defer_removal = 7;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->defer_removal(), target);
  }

  // optional int32 surface_width = 8;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->surface_width(), target);
  }

  // optional int32 surface_height = 9;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->surface_height(), target);
  }

  // repeated .com.android.server.wm.TaskProto tasks = 10 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->tasks(static_cast<int>(i)), target);
  }

  // repeated .com.android.server.wm.ActivityRecordProto activities = 11 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activities_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->activities(static_cast<int>(i)), target);
  }

  // optional .com.android.server.wm.IdentifierProto resumed_activity = 12;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, _Internal::resumed_activity(this), target);
  }

  // optional string real_activity = 13;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->real_activity().data(), static_cast<int>(this->real_activity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.TaskProto.real_activity");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        13, this->real_activity(), target);
  }

  // optional string orig_activity = 14;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orig_activity().data(), static_cast<int>(this->orig_activity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.TaskProto.orig_activity");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        14, this->orig_activity(), target);
  }

  // optional int32 display_id = 15 [deprecated = true];
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(15, this->display_id(), target);
  }

  // optional int32 root_task_id = 16;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(16, this->root_task_id(), target);
  }

  // optional int32 activity_type = 17 [deprecated = true, (.android.typedef) = "android.app.WindowConfiguration.ActivityType"];
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(17, this->activity_type(), target);
  }

  // optional int32 resize_mode = 18 [(.android.typedef) = "android.appwidget.AppWidgetProviderInfo.ResizeModeFlags"];
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(18, this->resize_mode(), target);
  }

  // optional int32 min_width = 19 [deprecated = true];
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->min_width(), target);
  }

  // optional int32 min_height = 20 [deprecated = true];
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(20, this->min_height(), target);
  }

  // optional .android.graphics.RectProto adjusted_bounds = 21;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, _Internal::adjusted_bounds(this), target);
  }

  // optional .android.graphics.RectProto last_non_fullscreen_bounds = 22;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, _Internal::last_non_fullscreen_bounds(this), target);
  }

  // optional bool adjusted_for_ime = 23;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(23, this->adjusted_for_ime(), target);
  }

  // optional float adjust_ime_amount = 24;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(24, this->adjust_ime_amount(), target);
  }

  // optional float adjust_divider_amount = 25;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(25, this->adjust_divider_amount(), target);
  }

  // optional bool animating_bounds = 26 [deprecated = true];
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(26, this->animating_bounds(), target);
  }

  // optional float minimize_amount = 27;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(27, this->minimize_amount(), target);
  }

  // optional bool created_by_organizer = 28;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(28, this->created_by_organizer(), target);
  }

  // optional string affinity = 29;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->affinity().data(), static_cast<int>(this->affinity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.TaskProto.affinity");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        29, this->affinity(), target);
  }

  // optional bool has_child_pip_activity = 30;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(30, this->has_child_pip_activity(), target);
  }

  // optional .com.android.server.wm.TaskFragmentProto task_fragment = 31;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, _Internal::task_fragment(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.TaskProto)
  return target;
}

size_t TaskProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.TaskProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.wm.TaskProto tasks = 10 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->tasks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->tasks(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.wm.ActivityRecordProto activities = 11 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->activities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->activities(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string real_activity = 13;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->real_activity());
    }

    // optional string orig_activity = 14;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->orig_activity());
    }

    // optional string affinity = 29;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->affinity());
    }

    // optional .com.android.server.wm.WindowContainerProto window_container = 1 [deprecated = true];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_container_);
    }

    // optional .android.graphics.RectProto bounds = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bounds_);
    }

    // optional .android.graphics.RectProto displayed_bounds = 6 [deprecated = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *displayed_bounds_);
    }

    // optional .com.android.server.wm.IdentifierProto resumed_activity = 12;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resumed_activity_);
    }

    // optional .android.graphics.RectProto adjusted_bounds = 21;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *adjusted_bounds_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .android.graphics.RectProto last_non_fullscreen_bounds = 22;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *last_non_fullscreen_bounds_);
    }

    // optional .com.android.server.wm.TaskFragmentProto task_fragment = 31;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *task_fragment_);
    }

    // optional int32 id = 2;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 surface_width = 8;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->surface_width());
    }

    // optional int32 surface_height = 9;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->surface_height());
    }

    // optional int32 display_id = 15 [deprecated = true];
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->display_id());
    }

    // optional bool fills_parent = 4;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 + 1;
    }

    // optional bool defer_removal = 7;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool adjusted_for_ime = 23;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool animating_bounds = 26 [deprecated = true];
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional int32 root_task_id = 16;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->root_task_id());
    }

    // optional int32 activity_type = 17 [deprecated = true, (.android.typedef) = "android.app.WindowConfiguration.ActivityType"];
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->activity_type());
    }

    // optional int32 resize_mode = 18 [(.android.typedef) = "android.appwidget.AppWidgetProviderInfo.ResizeModeFlags"];
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->resize_mode());
    }

    // optional int32 min_width = 19 [deprecated = true];
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->min_width());
    }

    // optional int32 min_height = 20 [deprecated = true];
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->min_height());
    }

    // optional float adjust_ime_amount = 24;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 4;
    }

  }
  if (cached_has_bits & 0x0f000000u) {
    // optional float adjust_divider_amount = 25;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 4;
    }

    // optional float minimize_amount = 27;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 4;
    }

    // optional bool created_by_organizer = 28;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool has_child_pip_activity = 30;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.TaskProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TaskProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.TaskProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.TaskProto)
    MergeFrom(*source);
  }
}

void TaskProto::MergeFrom(const TaskProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.TaskProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tasks_.MergeFrom(from.tasks_);
  activities_.MergeFrom(from.activities_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      real_activity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.real_activity_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      orig_activity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.orig_activity_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      affinity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.affinity_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_window_container()->::com::android::server::wm::WindowContainerProto::MergeFrom(from.window_container());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_bounds()->::android::graphics::RectProto::MergeFrom(from.bounds());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_displayed_bounds()->::android::graphics::RectProto::MergeFrom(from.displayed_bounds());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_resumed_activity()->::com::android::server::wm::IdentifierProto::MergeFrom(from.resumed_activity());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_adjusted_bounds()->::android::graphics::RectProto::MergeFrom(from.adjusted_bounds());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_last_non_fullscreen_bounds()->::android::graphics::RectProto::MergeFrom(from.last_non_fullscreen_bounds());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_task_fragment()->::com::android::server::wm::TaskFragmentProto::MergeFrom(from.task_fragment());
    }
    if (cached_has_bits & 0x00000400u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000800u) {
      surface_width_ = from.surface_width_;
    }
    if (cached_has_bits & 0x00001000u) {
      surface_height_ = from.surface_height_;
    }
    if (cached_has_bits & 0x00002000u) {
      display_id_ = from.display_id_;
    }
    if (cached_has_bits & 0x00004000u) {
      fills_parent_ = from.fills_parent_;
    }
    if (cached_has_bits & 0x00008000u) {
      defer_removal_ = from.defer_removal_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      adjusted_for_ime_ = from.adjusted_for_ime_;
    }
    if (cached_has_bits & 0x00020000u) {
      animating_bounds_ = from.animating_bounds_;
    }
    if (cached_has_bits & 0x00040000u) {
      root_task_id_ = from.root_task_id_;
    }
    if (cached_has_bits & 0x00080000u) {
      activity_type_ = from.activity_type_;
    }
    if (cached_has_bits & 0x00100000u) {
      resize_mode_ = from.resize_mode_;
    }
    if (cached_has_bits & 0x00200000u) {
      min_width_ = from.min_width_;
    }
    if (cached_has_bits & 0x00400000u) {
      min_height_ = from.min_height_;
    }
    if (cached_has_bits & 0x00800000u) {
      adjust_ime_amount_ = from.adjust_ime_amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0f000000u) {
    if (cached_has_bits & 0x01000000u) {
      adjust_divider_amount_ = from.adjust_divider_amount_;
    }
    if (cached_has_bits & 0x02000000u) {
      minimize_amount_ = from.minimize_amount_;
    }
    if (cached_has_bits & 0x04000000u) {
      created_by_organizer_ = from.created_by_organizer_;
    }
    if (cached_has_bits & 0x08000000u) {
      has_child_pip_activity_ = from.has_child_pip_activity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TaskProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.TaskProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskProto::CopyFrom(const TaskProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.TaskProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskProto::IsInitialized() const {
  return true;
}

void TaskProto::InternalSwap(TaskProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&tasks_)->InternalSwap(CastToBase(&other->tasks_));
  CastToBase(&activities_)->InternalSwap(CastToBase(&other->activities_));
  real_activity_.Swap(&other->real_activity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  orig_activity_.Swap(&other->orig_activity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  affinity_.Swap(&other->affinity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(window_container_, other->window_container_);
  swap(bounds_, other->bounds_);
  swap(displayed_bounds_, other->displayed_bounds_);
  swap(resumed_activity_, other->resumed_activity_);
  swap(adjusted_bounds_, other->adjusted_bounds_);
  swap(last_non_fullscreen_bounds_, other->last_non_fullscreen_bounds_);
  swap(task_fragment_, other->task_fragment_);
  swap(id_, other->id_);
  swap(surface_width_, other->surface_width_);
  swap(surface_height_, other->surface_height_);
  swap(display_id_, other->display_id_);
  swap(fills_parent_, other->fills_parent_);
  swap(defer_removal_, other->defer_removal_);
  swap(adjusted_for_ime_, other->adjusted_for_ime_);
  swap(animating_bounds_, other->animating_bounds_);
  swap(root_task_id_, other->root_task_id_);
  swap(activity_type_, other->activity_type_);
  swap(resize_mode_, other->resize_mode_);
  swap(min_width_, other->min_width_);
  swap(min_height_, other->min_height_);
  swap(adjust_ime_amount_, other->adjust_ime_amount_);
  swap(adjust_divider_amount_, other->adjust_divider_amount_);
  swap(minimize_amount_, other->minimize_amount_);
  swap(created_by_organizer_, other->created_by_organizer_);
  swap(has_child_pip_activity_, other->has_child_pip_activity_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TaskProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TaskFragmentProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_TaskFragmentProto_default_instance_._instance.get_mutable()->window_container_ = const_cast< ::com::android::server::wm::WindowContainerProto*>(
      ::com::android::server::wm::WindowContainerProto::internal_default_instance());
}
class TaskFragmentProto::_Internal {
 public:
  using HasBits = decltype(std::declval<TaskFragmentProto>()._has_bits_);
  static const ::com::android::server::wm::WindowContainerProto& window_container(const TaskFragmentProto* msg);
  static void set_has_window_container(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_display_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_activity_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_min_width(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_min_height(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::com::android::server::wm::WindowContainerProto&
TaskFragmentProto::_Internal::window_container(const TaskFragmentProto* msg) {
  return *msg->window_container_;
}
TaskFragmentProto::TaskFragmentProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.TaskFragmentProto)
}
TaskFragmentProto::TaskFragmentProto(const TaskFragmentProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_window_container()) {
    window_container_ = new ::com::android::server::wm::WindowContainerProto(*from.window_container_);
  } else {
    window_container_ = nullptr;
  }
  ::memcpy(&display_id_, &from.display_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&min_height_) -
    reinterpret_cast<char*>(&display_id_)) + sizeof(min_height_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.TaskFragmentProto)
}

void TaskFragmentProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&window_container_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_height_) -
      reinterpret_cast<char*>(&window_container_)) + sizeof(min_height_));
}

TaskFragmentProto::~TaskFragmentProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.TaskFragmentProto)
  SharedDtor();
}

void TaskFragmentProto::SharedDtor() {
  if (this != internal_default_instance()) delete window_container_;
}

void TaskFragmentProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskFragmentProto& TaskFragmentProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void TaskFragmentProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.TaskFragmentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(window_container_ != nullptr);
    window_container_->Clear();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&display_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&min_height_) -
        reinterpret_cast<char*>(&display_id_)) + sizeof(min_height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskFragmentProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_window_container(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 display_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_display_id(&has_bits);
          display_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 activity_type = 3 [(.android.typedef) = "android.app.WindowConfiguration.ActivityType"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_activity_type(&has_bits);
          activity_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 min_width = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_min_width(&has_bits);
          min_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 min_height = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_min_height(&has_bits);
          min_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskFragmentProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.TaskFragmentProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window_container()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 display_id = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_display_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &display_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 activity_type = 3 [(.android.typedef) = "android.app.WindowConfiguration.ActivityType"];
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_activity_type(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 min_width = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_min_width(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 min_height = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_min_height(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.TaskFragmentProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.TaskFragmentProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskFragmentProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.TaskFragmentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::window_container(this), output);
  }

  // optional int32 display_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->display_id(), output);
  }

  // optional int32 activity_type = 3 [(.android.typedef) = "android.app.WindowConfiguration.ActivityType"];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->activity_type(), output);
  }

  // optional int32 min_width = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->min_width(), output);
  }

  // optional int32 min_height = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->min_height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.TaskFragmentProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* TaskFragmentProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.TaskFragmentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::window_container(this), target);
  }

  // optional int32 display_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->display_id(), target);
  }

  // optional int32 activity_type = 3 [(.android.typedef) = "android.app.WindowConfiguration.ActivityType"];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->activity_type(), target);
  }

  // optional int32 min_width = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->min_width(), target);
  }

  // optional int32 min_height = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->min_height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.TaskFragmentProto)
  return target;
}

size_t TaskFragmentProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.TaskFragmentProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .com.android.server.wm.WindowContainerProto window_container = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_container_);
    }

    // optional int32 display_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->display_id());
    }

    // optional int32 activity_type = 3 [(.android.typedef) = "android.app.WindowConfiguration.ActivityType"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->activity_type());
    }

    // optional int32 min_width = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->min_width());
    }

    // optional int32 min_height = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->min_height());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskFragmentProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.TaskFragmentProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskFragmentProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TaskFragmentProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.TaskFragmentProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.TaskFragmentProto)
    MergeFrom(*source);
  }
}

void TaskFragmentProto::MergeFrom(const TaskFragmentProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.TaskFragmentProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_window_container()->::com::android::server::wm::WindowContainerProto::MergeFrom(from.window_container());
    }
    if (cached_has_bits & 0x00000002u) {
      display_id_ = from.display_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      activity_type_ = from.activity_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      min_width_ = from.min_width_;
    }
    if (cached_has_bits & 0x00000010u) {
      min_height_ = from.min_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TaskFragmentProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.TaskFragmentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskFragmentProto::CopyFrom(const TaskFragmentProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.TaskFragmentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskFragmentProto::IsInitialized() const {
  return true;
}

void TaskFragmentProto::InternalSwap(TaskFragmentProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(window_container_, other->window_container_);
  swap(display_id_, other->display_id_);
  swap(activity_type_, other->activity_type_);
  swap(min_width_, other->min_width_);
  swap(min_height_, other->min_height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TaskFragmentProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActivityRecordProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_ActivityRecordProto_default_instance_._instance.get_mutable()->window_token_ = const_cast< ::com::android::server::wm::WindowTokenProto*>(
      ::com::android::server::wm::WindowTokenProto::internal_default_instance());
  ::com::android::server::wm::_ActivityRecordProto_default_instance_._instance.get_mutable()->thumbnail_ = const_cast< ::com::android::server::wm::WindowContainerThumbnailProto*>(
      ::com::android::server::wm::WindowContainerThumbnailProto::internal_default_instance());
  ::com::android::server::wm::_ActivityRecordProto_default_instance_._instance.get_mutable()->starting_window_ = const_cast< ::com::android::server::wm::IdentifierProto*>(
      ::com::android::server::wm::IdentifierProto::internal_default_instance());
  ::com::android::server::wm::_ActivityRecordProto_default_instance_._instance.get_mutable()->identifier_ = const_cast< ::com::android::server::wm::IdentifierProto*>(
      ::com::android::server::wm::IdentifierProto::internal_default_instance());
}
class ActivityRecordProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ActivityRecordProto>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::android::server::wm::WindowTokenProto& window_token(const ActivityRecordProto* msg);
  static void set_has_window_token(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_last_surface_showing(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_is_waiting_for_transition_start(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_is_animating(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::com::android::server::wm::WindowContainerThumbnailProto& thumbnail(const ActivityRecordProto* msg);
  static void set_has_thumbnail(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_fills_parent(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_app_stopped(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_visible_requested(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_client_visible(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_defer_hiding_client(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_reported_drawn(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_reported_visible(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_num_interesting_windows(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_num_drawn_windows(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_all_drawn(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_last_all_drawn(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static const ::com::android::server::wm::IdentifierProto& starting_window(const ActivityRecordProto* msg);
  static void set_has_starting_window(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_starting_displayed(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_starting_moved(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_visible_set_from_transferred_starting_window(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_visible(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static const ::com::android::server::wm::IdentifierProto& identifier(const ActivityRecordProto* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_front_of_task(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_proc_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_translucent(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_pip_auto_enter_enabled(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_in_size_compat_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_min_aspect_ratio(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_provides_max_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
};

const ::com::android::server::wm::WindowTokenProto&
ActivityRecordProto::_Internal::window_token(const ActivityRecordProto* msg) {
  return *msg->window_token_;
}
const ::com::android::server::wm::WindowContainerThumbnailProto&
ActivityRecordProto::_Internal::thumbnail(const ActivityRecordProto* msg) {
  return *msg->thumbnail_;
}
const ::com::android::server::wm::IdentifierProto&
ActivityRecordProto::_Internal::starting_window(const ActivityRecordProto* msg) {
  return *msg->starting_window_;
}
const ::com::android::server::wm::IdentifierProto&
ActivityRecordProto::_Internal::identifier(const ActivityRecordProto* msg) {
  return *msg->identifier_;
}
void ActivityRecordProto::clear_thumbnail() {
  if (thumbnail_ != nullptr) thumbnail_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void ActivityRecordProto::clear_frozen_bounds() {
  frozen_bounds_.Clear();
}
ActivityRecordProto::ActivityRecordProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.ActivityRecordProto)
}
ActivityRecordProto::ActivityRecordProto(const ActivityRecordProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      frozen_bounds_(from.frozen_bounds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_state()) {
    state_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.has_window_token()) {
    window_token_ = new ::com::android::server::wm::WindowTokenProto(*from.window_token_);
  } else {
    window_token_ = nullptr;
  }
  if (from.has_thumbnail()) {
    thumbnail_ = new ::com::android::server::wm::WindowContainerThumbnailProto(*from.thumbnail_);
  } else {
    thumbnail_ = nullptr;
  }
  if (from.has_starting_window()) {
    starting_window_ = new ::com::android::server::wm::IdentifierProto(*from.starting_window_);
  } else {
    starting_window_ = nullptr;
  }
  if (from.has_identifier()) {
    identifier_ = new ::com::android::server::wm::IdentifierProto(*from.identifier_);
  } else {
    identifier_ = nullptr;
  }
  ::memcpy(&last_surface_showing_, &from.last_surface_showing_,
    static_cast<size_t>(reinterpret_cast<char*>(&visible_) -
    reinterpret_cast<char*>(&last_surface_showing_)) + sizeof(visible_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.ActivityRecordProto)
}

void ActivityRecordProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&window_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visible_) -
      reinterpret_cast<char*>(&window_token_)) + sizeof(visible_));
}

ActivityRecordProto::~ActivityRecordProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.ActivityRecordProto)
  SharedDtor();
}

void ActivityRecordProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete window_token_;
  if (this != internal_default_instance()) delete thumbnail_;
  if (this != internal_default_instance()) delete starting_window_;
  if (this != internal_default_instance()) delete identifier_;
}

void ActivityRecordProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActivityRecordProto& ActivityRecordProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void ActivityRecordProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.ActivityRecordProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frozen_bounds_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      state_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(window_token_ != nullptr);
      window_token_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(thumbnail_ != nullptr);
      thumbnail_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(starting_window_ != nullptr);
      starting_window_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(identifier_ != nullptr);
      identifier_->Clear();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&last_surface_showing_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_waiting_for_transition_start_) -
        reinterpret_cast<char*>(&last_surface_showing_)) + sizeof(is_waiting_for_transition_start_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&is_animating_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reported_drawn_) -
        reinterpret_cast<char*>(&is_animating_)) + sizeof(reported_drawn_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&reported_visible_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pip_auto_enter_enabled_) -
        reinterpret_cast<char*>(&reported_visible_)) + sizeof(pip_auto_enter_enabled_));
  }
  if (cached_has_bits & 0x7f000000u) {
    ::memset(&in_size_compat_mode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&visible_) -
        reinterpret_cast<char*>(&in_size_compat_mode_)) + sizeof(visible_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ActivityRecordProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1 [(.android.privacy) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_name(), ptr, ctx, "com.android.server.wm.ActivityRecordProto.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowTokenProto window_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_window_token(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool last_surface_showing = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_last_surface_showing(&has_bits);
          last_surface_showing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_waiting_for_transition_start = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_is_waiting_for_transition_start(&has_bits);
          is_waiting_for_transition_start_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_animating = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_is_animating(&has_bits);
          is_animating_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowContainerThumbnailProto thumbnail = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_thumbnail(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool fills_parent = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_fills_parent(&has_bits);
          fills_parent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool app_stopped = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_app_stopped(&has_bits);
          app_stopped_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool visible_requested = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_visible_requested(&has_bits);
          visible_requested_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool client_visible = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_client_visible(&has_bits);
          client_visible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool defer_hiding_client = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_defer_hiding_client(&has_bits);
          defer_hiding_client_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool reported_drawn = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_reported_drawn(&has_bits);
          reported_drawn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool reported_visible = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_reported_visible(&has_bits);
          reported_visible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 num_interesting_windows = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_num_interesting_windows(&has_bits);
          num_interesting_windows_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 num_drawn_windows = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_num_drawn_windows(&has_bits);
          num_drawn_windows_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool all_drawn = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_all_drawn(&has_bits);
          all_drawn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool last_all_drawn = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_last_all_drawn(&has_bits);
          last_all_drawn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.IdentifierProto starting_window = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(mutable_starting_window(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool starting_displayed = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_starting_displayed(&has_bits);
          starting_displayed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool visible_set_from_transferred_starting_window = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_visible_set_from_transferred_starting_window(&has_bits);
          visible_set_from_transferred_starting_window_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.graphics.RectProto frozen_bounds = 23 [deprecated = true];
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(add_frozen_bounds(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 442);
        } else goto handle_unusual;
        continue;
      // optional bool visible = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_visible(&has_bits);
          visible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.IdentifierProto identifier = 26 [deprecated = true];
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(mutable_identifier(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string state = 27 [(.android.privacy) = {
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_state(), ptr, ctx, "com.android.server.wm.ActivityRecordProto.state");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool front_of_task = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_front_of_task(&has_bits);
          front_of_task_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 proc_id = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232)) {
          _Internal::set_has_proc_id(&has_bits);
          proc_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool translucent = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_translucent(&has_bits);
          translucent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pip_auto_enter_enabled = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          _Internal::set_has_pip_auto_enter_enabled(&has_bits);
          pip_auto_enter_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool in_size_compat_mode = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_in_size_compat_mode(&has_bits);
          in_size_compat_mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float min_aspect_ratio = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          _Internal::set_has_min_aspect_ratio(&has_bits);
          min_aspect_ratio_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional bool provides_max_bounds = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_provides_max_bounds(&has_bits);
          provides_max_bounds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool starting_moved = 201;
      case 201:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_starting_moved(&has_bits);
          starting_moved_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ActivityRecordProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.ActivityRecordProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1 [(.android.privacy) = {
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.wm.ActivityRecordProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowTokenProto window_token = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool last_surface_showing = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_last_surface_showing(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &last_surface_showing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_waiting_for_transition_start = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_is_waiting_for_transition_start(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_waiting_for_transition_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_animating = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_is_animating(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_animating_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowContainerThumbnailProto thumbnail = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_thumbnail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool fills_parent = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_fills_parent(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fills_parent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool app_stopped = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_app_stopped(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &app_stopped_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool visible_requested = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_visible_requested(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_requested_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool client_visible = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          _Internal::set_has_client_visible(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &client_visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool defer_hiding_client = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          _Internal::set_has_defer_hiding_client(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &defer_hiding_client_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool reported_drawn = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {
          _Internal::set_has_reported_drawn(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reported_drawn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool reported_visible = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (104 & 0xFF)) {
          _Internal::set_has_reported_visible(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reported_visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_interesting_windows = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          _Internal::set_has_num_interesting_windows(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_interesting_windows_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_drawn_windows = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (120 & 0xFF)) {
          _Internal::set_has_num_drawn_windows(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_drawn_windows_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool all_drawn = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (128 & 0xFF)) {
          _Internal::set_has_all_drawn(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &all_drawn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool last_all_drawn = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (136 & 0xFF)) {
          _Internal::set_has_last_all_drawn(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &last_all_drawn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.IdentifierProto starting_window = 19;
      case 19: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (154 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_starting_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool starting_displayed = 20;
      case 20: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (160 & 0xFF)) {
          _Internal::set_has_starting_displayed(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &starting_displayed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool visible_set_from_transferred_starting_window = 22;
      case 22: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (176 & 0xFF)) {
          _Internal::set_has_visible_set_from_transferred_starting_window(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_set_from_transferred_starting_window_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.graphics.RectProto frozen_bounds = 23 [deprecated = true];
      case 23: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (186 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_frozen_bounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool visible = 24;
      case 24: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (192 & 0xFF)) {
          _Internal::set_has_visible(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.IdentifierProto identifier = 26 [deprecated = true];
      case 26: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (210 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string state = 27 [(.android.privacy) = {
      case 27: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (218 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state().data(), static_cast<int>(this->state().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.wm.ActivityRecordProto.state");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool front_of_task = 28;
      case 28: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (224 & 0xFF)) {
          _Internal::set_has_front_of_task(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &front_of_task_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 proc_id = 29;
      case 29: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (232 & 0xFF)) {
          _Internal::set_has_proc_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &proc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool translucent = 30;
      case 30: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (240 & 0xFF)) {
          _Internal::set_has_translucent(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &translucent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pip_auto_enter_enabled = 31;
      case 31: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (248 & 0xFF)) {
          _Internal::set_has_pip_auto_enter_enabled(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pip_auto_enter_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool in_size_compat_mode = 32;
      case 32: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (256 & 0xFF)) {
          _Internal::set_has_in_size_compat_mode(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &in_size_compat_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float min_aspect_ratio = 33;
      case 33: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (269 & 0xFF)) {
          _Internal::set_has_min_aspect_ratio(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &min_aspect_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool provides_max_bounds = 34;
      case 34: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (272 & 0xFF)) {
          _Internal::set_has_provides_max_bounds(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &provides_max_bounds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool starting_moved = 201;
      case 201: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (1608 & 0xFF)) {
          _Internal::set_has_starting_moved(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &starting_moved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.ActivityRecordProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.ActivityRecordProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ActivityRecordProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.ActivityRecordProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.ActivityRecordProto.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .com.android.server.wm.WindowTokenProto window_token = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::window_token(this), output);
  }

  // optional bool last_surface_showing = 3;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->last_surface_showing(), output);
  }

  // optional bool is_waiting_for_transition_start = 4;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(4, this->is_waiting_for_transition_start(), output);
  }

  // optional bool is_animating = 5;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(5, this->is_animating(), output);
  }

  // optional .com.android.server.wm.WindowContainerThumbnailProto thumbnail = 6;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::thumbnail(this), output);
  }

  // optional bool fills_parent = 7;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(7, this->fills_parent(), output);
  }

  // optional bool app_stopped = 8;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(8, this->app_stopped(), output);
  }

  // optional bool visible_requested = 9;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(9, this->visible_requested(), output);
  }

  // optional bool client_visible = 10;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(10, this->client_visible(), output);
  }

  // optional bool defer_hiding_client = 11;
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(11, this->defer_hiding_client(), output);
  }

  // optional bool reported_drawn = 12;
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(12, this->reported_drawn(), output);
  }

  // optional bool reported_visible = 13;
  if (cached_has_bits & 0x00010000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(13, this->reported_visible(), output);
  }

  // optional int32 num_interesting_windows = 14;
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(14, this->num_interesting_windows(), output);
  }

  // optional int32 num_drawn_windows = 15;
  if (cached_has_bits & 0x00080000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(15, this->num_drawn_windows(), output);
  }

  // optional bool all_drawn = 16;
  if (cached_has_bits & 0x00020000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(16, this->all_drawn(), output);
  }

  // optional bool last_all_drawn = 17;
  if (cached_has_bits & 0x00040000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(17, this->last_all_drawn(), output);
  }

  // optional .com.android.server.wm.IdentifierProto starting_window = 19;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, _Internal::starting_window(this), output);
  }

  // optional bool starting_displayed = 20;
  if (cached_has_bits & 0x08000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(20, this->starting_displayed(), output);
  }

  // optional bool visible_set_from_transferred_starting_window = 22;
  if (cached_has_bits & 0x20000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(22, this->visible_set_from_transferred_starting_window(), output);
  }

  // repeated .android.graphics.RectProto frozen_bounds = 23 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frozen_bounds_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      23,
      this->frozen_bounds(static_cast<int>(i)),
      output);
  }

  // optional bool visible = 24;
  if (cached_has_bits & 0x40000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(24, this->visible(), output);
  }

  // optional .com.android.server.wm.IdentifierProto identifier = 26 [deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, _Internal::identifier(this), output);
  }

  // optional string state = 27 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), static_cast<int>(this->state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.ActivityRecordProto.state");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->state(), output);
  }

  // optional bool front_of_task = 28;
  if (cached_has_bits & 0x00200000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(28, this->front_of_task(), output);
  }

  // optional int32 proc_id = 29;
  if (cached_has_bits & 0x00100000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(29, this->proc_id(), output);
  }

  // optional bool translucent = 30;
  if (cached_has_bits & 0x00400000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(30, this->translucent(), output);
  }

  // optional bool pip_auto_enter_enabled = 31;
  if (cached_has_bits & 0x00800000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(31, this->pip_auto_enter_enabled(), output);
  }

  // optional bool in_size_compat_mode = 32;
  if (cached_has_bits & 0x01000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(32, this->in_size_compat_mode(), output);
  }

  // optional float min_aspect_ratio = 33;
  if (cached_has_bits & 0x02000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(33, this->min_aspect_ratio(), output);
  }

  // optional bool provides_max_bounds = 34;
  if (cached_has_bits & 0x04000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(34, this->provides_max_bounds(), output);
  }

  // optional bool starting_moved = 201;
  if (cached_has_bits & 0x10000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(201, this->starting_moved(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.ActivityRecordProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ActivityRecordProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.ActivityRecordProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.ActivityRecordProto.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .com.android.server.wm.WindowTokenProto window_token = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::window_token(this), target);
  }

  // optional bool last_surface_showing = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->last_surface_showing(), target);
  }

  // optional bool is_waiting_for_transition_start = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->is_waiting_for_transition_start(), target);
  }

  // optional bool is_animating = 5;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->is_animating(), target);
  }

  // optional .com.android.server.wm.WindowContainerThumbnailProto thumbnail = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::thumbnail(this), target);
  }

  // optional bool fills_parent = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->fills_parent(), target);
  }

  // optional bool app_stopped = 8;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->app_stopped(), target);
  }

  // optional bool visible_requested = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->visible_requested(), target);
  }

  // optional bool client_visible = 10;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->client_visible(), target);
  }

  // optional bool defer_hiding_client = 11;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->defer_hiding_client(), target);
  }

  // optional bool reported_drawn = 12;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->reported_drawn(), target);
  }

  // optional bool reported_visible = 13;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(13, this->reported_visible(), target);
  }

  // optional int32 num_interesting_windows = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(14, this->num_interesting_windows(), target);
  }

  // optional int32 num_drawn_windows = 15;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(15, this->num_drawn_windows(), target);
  }

  // optional bool all_drawn = 16;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->all_drawn(), target);
  }

  // optional bool last_all_drawn = 17;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->last_all_drawn(), target);
  }

  // optional .com.android.server.wm.IdentifierProto starting_window = 19;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, _Internal::starting_window(this), target);
  }

  // optional bool starting_displayed = 20;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(20, this->starting_displayed(), target);
  }

  // optional bool visible_set_from_transferred_starting_window = 22;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(22, this->visible_set_from_transferred_starting_window(), target);
  }

  // repeated .android.graphics.RectProto frozen_bounds = 23 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frozen_bounds_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->frozen_bounds(static_cast<int>(i)), target);
  }

  // optional bool visible = 24;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(24, this->visible(), target);
  }

  // optional .com.android.server.wm.IdentifierProto identifier = 26 [deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, _Internal::identifier(this), target);
  }

  // optional string state = 27 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), static_cast<int>(this->state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.ActivityRecordProto.state");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        27, this->state(), target);
  }

  // optional bool front_of_task = 28;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(28, this->front_of_task(), target);
  }

  // optional int32 proc_id = 29;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(29, this->proc_id(), target);
  }

  // optional bool translucent = 30;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(30, this->translucent(), target);
  }

  // optional bool pip_auto_enter_enabled = 31;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(31, this->pip_auto_enter_enabled(), target);
  }

  // optional bool in_size_compat_mode = 32;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(32, this->in_size_compat_mode(), target);
  }

  // optional float min_aspect_ratio = 33;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(33, this->min_aspect_ratio(), target);
  }

  // optional bool provides_max_bounds = 34;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(34, this->provides_max_bounds(), target);
  }

  // optional bool starting_moved = 201;
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(201, this->starting_moved(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.ActivityRecordProto)
  return target;
}

size_t ActivityRecordProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.ActivityRecordProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.graphics.RectProto frozen_bounds = 23 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->frozen_bounds_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->frozen_bounds(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string name = 1 [(.android.privacy) = {
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string state = 27 [(.android.privacy) = {
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->state());
    }

    // optional .com.android.server.wm.WindowTokenProto window_token = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_token_);
    }

    // optional .com.android.server.wm.WindowContainerThumbnailProto thumbnail = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *thumbnail_);
    }

    // optional .com.android.server.wm.IdentifierProto starting_window = 19;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *starting_window_);
    }

    // optional .com.android.server.wm.IdentifierProto identifier = 26 [deprecated = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *identifier_);
    }

    // optional bool last_surface_showing = 3;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional bool is_waiting_for_transition_start = 4;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool is_animating = 5;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 1;
    }

    // optional bool fills_parent = 7;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

    // optional bool app_stopped = 8;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool visible_requested = 9;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool client_visible = 10;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional bool defer_hiding_client = 11;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

    // optional int32 num_interesting_windows = 14;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->num_interesting_windows());
    }

    // optional bool reported_drawn = 12;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool reported_visible = 13;
    if (cached_has_bits & 0x00010000u) {
      total_size += 1 + 1;
    }

    // optional bool all_drawn = 16;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool last_all_drawn = 17;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional int32 num_drawn_windows = 15;
    if (cached_has_bits & 0x00080000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->num_drawn_windows());
    }

    // optional int32 proc_id = 29;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->proc_id());
    }

    // optional bool front_of_task = 28;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool translucent = 30;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool pip_auto_enter_enabled = 31;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x7f000000u) {
    // optional bool in_size_compat_mode = 32;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional float min_aspect_ratio = 33;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 4;
    }

    // optional bool provides_max_bounds = 34;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool starting_displayed = 20;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool starting_moved = 201;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool visible_set_from_transferred_starting_window = 22;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool visible = 24;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActivityRecordProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.ActivityRecordProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityRecordProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActivityRecordProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.ActivityRecordProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.ActivityRecordProto)
    MergeFrom(*source);
  }
}

void ActivityRecordProto::MergeFrom(const ActivityRecordProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.ActivityRecordProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  frozen_bounds_.MergeFrom(from.frozen_bounds_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      state_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.state_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_window_token()->::com::android::server::wm::WindowTokenProto::MergeFrom(from.window_token());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_thumbnail()->::com::android::server::wm::WindowContainerThumbnailProto::MergeFrom(from.thumbnail());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_starting_window()->::com::android::server::wm::IdentifierProto::MergeFrom(from.starting_window());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_identifier()->::com::android::server::wm::IdentifierProto::MergeFrom(from.identifier());
    }
    if (cached_has_bits & 0x00000040u) {
      last_surface_showing_ = from.last_surface_showing_;
    }
    if (cached_has_bits & 0x00000080u) {
      is_waiting_for_transition_start_ = from.is_waiting_for_transition_start_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      is_animating_ = from.is_animating_;
    }
    if (cached_has_bits & 0x00000200u) {
      fills_parent_ = from.fills_parent_;
    }
    if (cached_has_bits & 0x00000400u) {
      app_stopped_ = from.app_stopped_;
    }
    if (cached_has_bits & 0x00000800u) {
      visible_requested_ = from.visible_requested_;
    }
    if (cached_has_bits & 0x00001000u) {
      client_visible_ = from.client_visible_;
    }
    if (cached_has_bits & 0x00002000u) {
      defer_hiding_client_ = from.defer_hiding_client_;
    }
    if (cached_has_bits & 0x00004000u) {
      num_interesting_windows_ = from.num_interesting_windows_;
    }
    if (cached_has_bits & 0x00008000u) {
      reported_drawn_ = from.reported_drawn_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      reported_visible_ = from.reported_visible_;
    }
    if (cached_has_bits & 0x00020000u) {
      all_drawn_ = from.all_drawn_;
    }
    if (cached_has_bits & 0x00040000u) {
      last_all_drawn_ = from.last_all_drawn_;
    }
    if (cached_has_bits & 0x00080000u) {
      num_drawn_windows_ = from.num_drawn_windows_;
    }
    if (cached_has_bits & 0x00100000u) {
      proc_id_ = from.proc_id_;
    }
    if (cached_has_bits & 0x00200000u) {
      front_of_task_ = from.front_of_task_;
    }
    if (cached_has_bits & 0x00400000u) {
      translucent_ = from.translucent_;
    }
    if (cached_has_bits & 0x00800000u) {
      pip_auto_enter_enabled_ = from.pip_auto_enter_enabled_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x7f000000u) {
    if (cached_has_bits & 0x01000000u) {
      in_size_compat_mode_ = from.in_size_compat_mode_;
    }
    if (cached_has_bits & 0x02000000u) {
      min_aspect_ratio_ = from.min_aspect_ratio_;
    }
    if (cached_has_bits & 0x04000000u) {
      provides_max_bounds_ = from.provides_max_bounds_;
    }
    if (cached_has_bits & 0x08000000u) {
      starting_displayed_ = from.starting_displayed_;
    }
    if (cached_has_bits & 0x10000000u) {
      starting_moved_ = from.starting_moved_;
    }
    if (cached_has_bits & 0x20000000u) {
      visible_set_from_transferred_starting_window_ = from.visible_set_from_transferred_starting_window_;
    }
    if (cached_has_bits & 0x40000000u) {
      visible_ = from.visible_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActivityRecordProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.ActivityRecordProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityRecordProto::CopyFrom(const ActivityRecordProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.ActivityRecordProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityRecordProto::IsInitialized() const {
  return true;
}

void ActivityRecordProto::InternalSwap(ActivityRecordProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&frozen_bounds_)->InternalSwap(CastToBase(&other->frozen_bounds_));
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  state_.Swap(&other->state_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(window_token_, other->window_token_);
  swap(thumbnail_, other->thumbnail_);
  swap(starting_window_, other->starting_window_);
  swap(identifier_, other->identifier_);
  swap(last_surface_showing_, other->last_surface_showing_);
  swap(is_waiting_for_transition_start_, other->is_waiting_for_transition_start_);
  swap(is_animating_, other->is_animating_);
  swap(fills_parent_, other->fills_parent_);
  swap(app_stopped_, other->app_stopped_);
  swap(visible_requested_, other->visible_requested_);
  swap(client_visible_, other->client_visible_);
  swap(defer_hiding_client_, other->defer_hiding_client_);
  swap(num_interesting_windows_, other->num_interesting_windows_);
  swap(reported_drawn_, other->reported_drawn_);
  swap(reported_visible_, other->reported_visible_);
  swap(all_drawn_, other->all_drawn_);
  swap(last_all_drawn_, other->last_all_drawn_);
  swap(num_drawn_windows_, other->num_drawn_windows_);
  swap(proc_id_, other->proc_id_);
  swap(front_of_task_, other->front_of_task_);
  swap(translucent_, other->translucent_);
  swap(pip_auto_enter_enabled_, other->pip_auto_enter_enabled_);
  swap(in_size_compat_mode_, other->in_size_compat_mode_);
  swap(min_aspect_ratio_, other->min_aspect_ratio_);
  swap(provides_max_bounds_, other->provides_max_bounds_);
  swap(starting_displayed_, other->starting_displayed_);
  swap(starting_moved_, other->starting_moved_);
  swap(visible_set_from_transferred_starting_window_, other->visible_set_from_transferred_starting_window_);
  swap(visible_, other->visible_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActivityRecordProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WindowTokenProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_WindowTokenProto_default_instance_._instance.get_mutable()->window_container_ = const_cast< ::com::android::server::wm::WindowContainerProto*>(
      ::com::android::server::wm::WindowContainerProto::internal_default_instance());
}
class WindowTokenProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WindowTokenProto>()._has_bits_);
  static const ::com::android::server::wm::WindowContainerProto& window_container(const WindowTokenProto* msg);
  static void set_has_window_container(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hash_code(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_waiting_to_show(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_paused(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::com::android::server::wm::WindowContainerProto&
WindowTokenProto::_Internal::window_container(const WindowTokenProto* msg) {
  return *msg->window_container_;
}
WindowTokenProto::WindowTokenProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.WindowTokenProto)
}
WindowTokenProto::WindowTokenProto(const WindowTokenProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      windows_(from.windows_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_window_container()) {
    window_container_ = new ::com::android::server::wm::WindowContainerProto(*from.window_container_);
  } else {
    window_container_ = nullptr;
  }
  ::memcpy(&hash_code_, &from.hash_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&paused_) -
    reinterpret_cast<char*>(&hash_code_)) + sizeof(paused_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.WindowTokenProto)
}

void WindowTokenProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&window_container_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&paused_) -
      reinterpret_cast<char*>(&window_container_)) + sizeof(paused_));
}

WindowTokenProto::~WindowTokenProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.WindowTokenProto)
  SharedDtor();
}

void WindowTokenProto::SharedDtor() {
  if (this != internal_default_instance()) delete window_container_;
}

void WindowTokenProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WindowTokenProto& WindowTokenProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void WindowTokenProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.WindowTokenProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  windows_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(window_container_ != nullptr);
    window_container_->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&hash_code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&paused_) -
        reinterpret_cast<char*>(&hash_code_)) + sizeof(paused_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WindowTokenProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_window_container(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 hash_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_hash_code(&has_bits);
          hash_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.WindowStateProto windows = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_windows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // optional bool waiting_to_show = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_waiting_to_show(&has_bits);
          waiting_to_show_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool paused = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_paused(&has_bits);
          paused_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WindowTokenProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.WindowTokenProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window_container()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hash_code = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_hash_code(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &hash_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.WindowStateProto windows = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_windows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool waiting_to_show = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_waiting_to_show(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &waiting_to_show_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool paused = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_paused(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &paused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.WindowTokenProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.WindowTokenProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WindowTokenProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.WindowTokenProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::window_container(this), output);
  }

  // optional int32 hash_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->hash_code(), output);
  }

  // repeated .com.android.server.wm.WindowStateProto windows = 3 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->windows_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->windows(static_cast<int>(i)),
      output);
  }

  // optional bool waiting_to_show = 5;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(5, this->waiting_to_show(), output);
  }

  // optional bool paused = 6;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->paused(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.WindowTokenProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WindowTokenProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.WindowTokenProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::window_container(this), target);
  }

  // optional int32 hash_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->hash_code(), target);
  }

  // repeated .com.android.server.wm.WindowStateProto windows = 3 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->windows_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->windows(static_cast<int>(i)), target);
  }

  // optional bool waiting_to_show = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->waiting_to_show(), target);
  }

  // optional bool paused = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->paused(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.WindowTokenProto)
  return target;
}

size_t WindowTokenProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.WindowTokenProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.wm.WindowStateProto windows = 3 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->windows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->windows(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .com.android.server.wm.WindowContainerProto window_container = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_container_);
    }

    // optional int32 hash_code = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->hash_code());
    }

    // optional bool waiting_to_show = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool paused = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WindowTokenProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.WindowTokenProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WindowTokenProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WindowTokenProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.WindowTokenProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.WindowTokenProto)
    MergeFrom(*source);
  }
}

void WindowTokenProto::MergeFrom(const WindowTokenProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.WindowTokenProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  windows_.MergeFrom(from.windows_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_window_container()->::com::android::server::wm::WindowContainerProto::MergeFrom(from.window_container());
    }
    if (cached_has_bits & 0x00000002u) {
      hash_code_ = from.hash_code_;
    }
    if (cached_has_bits & 0x00000004u) {
      waiting_to_show_ = from.waiting_to_show_;
    }
    if (cached_has_bits & 0x00000008u) {
      paused_ = from.paused_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WindowTokenProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.WindowTokenProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WindowTokenProto::CopyFrom(const WindowTokenProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.WindowTokenProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowTokenProto::IsInitialized() const {
  return true;
}

void WindowTokenProto::InternalSwap(WindowTokenProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&windows_)->InternalSwap(CastToBase(&other->windows_));
  swap(window_container_, other->window_container_);
  swap(hash_code_, other->hash_code_);
  swap(waiting_to_show_, other->waiting_to_show_);
  swap(paused_, other->paused_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WindowTokenProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WindowStateProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->window_container_ = const_cast< ::com::android::server::wm::WindowContainerProto*>(
      ::com::android::server::wm::WindowContainerProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->identifier_ = const_cast< ::com::android::server::wm::IdentifierProto*>(
      ::com::android::server::wm::IdentifierProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->attributes_ = const_cast< ::android::view::WindowLayoutParamsProto*>(
      ::android::view::WindowLayoutParamsProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->given_content_insets_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->containing_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->parent_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->content_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->content_insets_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->surface_insets_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->animator_ = const_cast< ::com::android::server::wm::WindowStateAnimatorProto*>(
      ::com::android::server::wm::WindowStateAnimatorProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->surface_position_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->display_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->overscan_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->visible_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->decor_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->outset_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->overscan_insets_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->visible_insets_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->stable_insets_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->outsets_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->cutout_ = const_cast< ::android::view::DisplayCutoutProto*>(
      ::android::view::DisplayCutoutProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateProto_default_instance_._instance.get_mutable()->window_frames_ = const_cast< ::com::android::server::wm::WindowFramesProto*>(
      ::com::android::server::wm::WindowFramesProto::internal_default_instance());
}
class WindowStateProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WindowStateProto>()._has_bits_);
  static const ::com::android::server::wm::WindowContainerProto& window_container(const WindowStateProto* msg);
  static void set_has_window_container(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::android::server::wm::IdentifierProto& identifier(const WindowStateProto* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_display_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_stack_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static const ::android::view::WindowLayoutParamsProto& attributes(const WindowStateProto* msg);
  static void set_has_attributes(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::android::graphics::RectProto& given_content_insets(const WindowStateProto* msg);
  static void set_has_given_content_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::android::graphics::RectProto& frame(const WindowStateProto* msg);
  static void set_has_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::android::graphics::RectProto& containing_frame(const WindowStateProto* msg);
  static void set_has_containing_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::android::graphics::RectProto& parent_frame(const WindowStateProto* msg);
  static void set_has_parent_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::android::graphics::RectProto& content_frame(const WindowStateProto* msg);
  static void set_has_content_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::android::graphics::RectProto& content_insets(const WindowStateProto* msg);
  static void set_has_content_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::android::graphics::RectProto& surface_insets(const WindowStateProto* msg);
  static void set_has_surface_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::com::android::server::wm::WindowStateAnimatorProto& animator(const WindowStateProto* msg);
  static void set_has_animator(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_animating_exit(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static const ::android::graphics::RectProto& surface_position(const WindowStateProto* msg);
  static void set_has_surface_position(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_requested_width(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_requested_height(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_view_visibility(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_system_ui_visibility(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_has_surface(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_is_ready_for_display(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::android::graphics::RectProto& display_frame(const WindowStateProto* msg);
  static void set_has_display_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::android::graphics::RectProto& overscan_frame(const WindowStateProto* msg);
  static void set_has_overscan_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::android::graphics::RectProto& visible_frame(const WindowStateProto* msg);
  static void set_has_visible_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::android::graphics::RectProto& decor_frame(const WindowStateProto* msg);
  static void set_has_decor_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::android::graphics::RectProto& outset_frame(const WindowStateProto* msg);
  static void set_has_outset_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::android::graphics::RectProto& overscan_insets(const WindowStateProto* msg);
  static void set_has_overscan_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static const ::android::graphics::RectProto& visible_insets(const WindowStateProto* msg);
  static void set_has_visible_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static const ::android::graphics::RectProto& stable_insets(const WindowStateProto* msg);
  static void set_has_stable_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static const ::android::graphics::RectProto& outsets(const WindowStateProto* msg);
  static void set_has_outsets(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static const ::android::view::DisplayCutoutProto& cutout(const WindowStateProto* msg);
  static void set_has_cutout(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_remove_on_exit(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_destroying(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_removed(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static void set_has_is_on_screen(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static void set_has_is_visible(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static void set_has_pending_seamless_rotation(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static void set_has_finished_seamless_rotation_frame(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static const ::com::android::server::wm::WindowFramesProto& window_frames(const WindowStateProto* msg);
  static void set_has_window_frames(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_force_seamless_rotation(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static void set_has_has_compat_scale(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static void set_has_global_scale(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
};

const ::com::android::server::wm::WindowContainerProto&
WindowStateProto::_Internal::window_container(const WindowStateProto* msg) {
  return *msg->window_container_;
}
const ::com::android::server::wm::IdentifierProto&
WindowStateProto::_Internal::identifier(const WindowStateProto* msg) {
  return *msg->identifier_;
}
const ::android::view::WindowLayoutParamsProto&
WindowStateProto::_Internal::attributes(const WindowStateProto* msg) {
  return *msg->attributes_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::given_content_insets(const WindowStateProto* msg) {
  return *msg->given_content_insets_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::frame(const WindowStateProto* msg) {
  return *msg->frame_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::containing_frame(const WindowStateProto* msg) {
  return *msg->containing_frame_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::parent_frame(const WindowStateProto* msg) {
  return *msg->parent_frame_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::content_frame(const WindowStateProto* msg) {
  return *msg->content_frame_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::content_insets(const WindowStateProto* msg) {
  return *msg->content_insets_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::surface_insets(const WindowStateProto* msg) {
  return *msg->surface_insets_;
}
const ::com::android::server::wm::WindowStateAnimatorProto&
WindowStateProto::_Internal::animator(const WindowStateProto* msg) {
  return *msg->animator_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::surface_position(const WindowStateProto* msg) {
  return *msg->surface_position_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::display_frame(const WindowStateProto* msg) {
  return *msg->display_frame_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::overscan_frame(const WindowStateProto* msg) {
  return *msg->overscan_frame_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::visible_frame(const WindowStateProto* msg) {
  return *msg->visible_frame_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::decor_frame(const WindowStateProto* msg) {
  return *msg->decor_frame_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::outset_frame(const WindowStateProto* msg) {
  return *msg->outset_frame_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::overscan_insets(const WindowStateProto* msg) {
  return *msg->overscan_insets_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::visible_insets(const WindowStateProto* msg) {
  return *msg->visible_insets_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::stable_insets(const WindowStateProto* msg) {
  return *msg->stable_insets_;
}
const ::android::graphics::RectProto&
WindowStateProto::_Internal::outsets(const WindowStateProto* msg) {
  return *msg->outsets_;
}
const ::android::view::DisplayCutoutProto&
WindowStateProto::_Internal::cutout(const WindowStateProto* msg) {
  return *msg->cutout_;
}
const ::com::android::server::wm::WindowFramesProto&
WindowStateProto::_Internal::window_frames(const WindowStateProto* msg) {
  return *msg->window_frames_;
}
void WindowStateProto::clear_attributes() {
  if (attributes_ != nullptr) attributes_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void WindowStateProto::clear_given_content_insets() {
  if (given_content_insets_ != nullptr) given_content_insets_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void WindowStateProto::clear_frame() {
  if (frame_ != nullptr) frame_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void WindowStateProto::clear_containing_frame() {
  if (containing_frame_ != nullptr) containing_frame_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
void WindowStateProto::clear_parent_frame() {
  if (parent_frame_ != nullptr) parent_frame_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
void WindowStateProto::clear_content_frame() {
  if (content_frame_ != nullptr) content_frame_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
void WindowStateProto::clear_content_insets() {
  if (content_insets_ != nullptr) content_insets_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
void WindowStateProto::clear_surface_insets() {
  if (surface_insets_ != nullptr) surface_insets_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
void WindowStateProto::clear_surface_position() {
  if (surface_position_ != nullptr) surface_position_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
void WindowStateProto::clear_display_frame() {
  if (display_frame_ != nullptr) display_frame_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
void WindowStateProto::clear_overscan_frame() {
  if (overscan_frame_ != nullptr) overscan_frame_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
void WindowStateProto::clear_visible_frame() {
  if (visible_frame_ != nullptr) visible_frame_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
void WindowStateProto::clear_decor_frame() {
  if (decor_frame_ != nullptr) decor_frame_->Clear();
  _has_bits_[0] &= ~0x00008000u;
}
void WindowStateProto::clear_outset_frame() {
  if (outset_frame_ != nullptr) outset_frame_->Clear();
  _has_bits_[0] &= ~0x00010000u;
}
void WindowStateProto::clear_overscan_insets() {
  if (overscan_insets_ != nullptr) overscan_insets_->Clear();
  _has_bits_[0] &= ~0x00020000u;
}
void WindowStateProto::clear_visible_insets() {
  if (visible_insets_ != nullptr) visible_insets_->Clear();
  _has_bits_[0] &= ~0x00040000u;
}
void WindowStateProto::clear_stable_insets() {
  if (stable_insets_ != nullptr) stable_insets_->Clear();
  _has_bits_[0] &= ~0x00080000u;
}
void WindowStateProto::clear_outsets() {
  if (outsets_ != nullptr) outsets_->Clear();
  _has_bits_[0] &= ~0x00100000u;
}
void WindowStateProto::clear_cutout() {
  if (cutout_ != nullptr) cutout_->Clear();
  _has_bits_[0] &= ~0x00200000u;
}
WindowStateProto::WindowStateProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.WindowStateProto)
}
WindowStateProto::WindowStateProto(const WindowStateProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      child_windows_(from.child_windows_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_window_container()) {
    window_container_ = new ::com::android::server::wm::WindowContainerProto(*from.window_container_);
  } else {
    window_container_ = nullptr;
  }
  if (from.has_identifier()) {
    identifier_ = new ::com::android::server::wm::IdentifierProto(*from.identifier_);
  } else {
    identifier_ = nullptr;
  }
  if (from.has_attributes()) {
    attributes_ = new ::android::view::WindowLayoutParamsProto(*from.attributes_);
  } else {
    attributes_ = nullptr;
  }
  if (from.has_given_content_insets()) {
    given_content_insets_ = new ::android::graphics::RectProto(*from.given_content_insets_);
  } else {
    given_content_insets_ = nullptr;
  }
  if (from.has_frame()) {
    frame_ = new ::android::graphics::RectProto(*from.frame_);
  } else {
    frame_ = nullptr;
  }
  if (from.has_containing_frame()) {
    containing_frame_ = new ::android::graphics::RectProto(*from.containing_frame_);
  } else {
    containing_frame_ = nullptr;
  }
  if (from.has_parent_frame()) {
    parent_frame_ = new ::android::graphics::RectProto(*from.parent_frame_);
  } else {
    parent_frame_ = nullptr;
  }
  if (from.has_content_frame()) {
    content_frame_ = new ::android::graphics::RectProto(*from.content_frame_);
  } else {
    content_frame_ = nullptr;
  }
  if (from.has_content_insets()) {
    content_insets_ = new ::android::graphics::RectProto(*from.content_insets_);
  } else {
    content_insets_ = nullptr;
  }
  if (from.has_surface_insets()) {
    surface_insets_ = new ::android::graphics::RectProto(*from.surface_insets_);
  } else {
    surface_insets_ = nullptr;
  }
  if (from.has_animator()) {
    animator_ = new ::com::android::server::wm::WindowStateAnimatorProto(*from.animator_);
  } else {
    animator_ = nullptr;
  }
  if (from.has_surface_position()) {
    surface_position_ = new ::android::graphics::RectProto(*from.surface_position_);
  } else {
    surface_position_ = nullptr;
  }
  if (from.has_display_frame()) {
    display_frame_ = new ::android::graphics::RectProto(*from.display_frame_);
  } else {
    display_frame_ = nullptr;
  }
  if (from.has_overscan_frame()) {
    overscan_frame_ = new ::android::graphics::RectProto(*from.overscan_frame_);
  } else {
    overscan_frame_ = nullptr;
  }
  if (from.has_visible_frame()) {
    visible_frame_ = new ::android::graphics::RectProto(*from.visible_frame_);
  } else {
    visible_frame_ = nullptr;
  }
  if (from.has_decor_frame()) {
    decor_frame_ = new ::android::graphics::RectProto(*from.decor_frame_);
  } else {
    decor_frame_ = nullptr;
  }
  if (from.has_outset_frame()) {
    outset_frame_ = new ::android::graphics::RectProto(*from.outset_frame_);
  } else {
    outset_frame_ = nullptr;
  }
  if (from.has_overscan_insets()) {
    overscan_insets_ = new ::android::graphics::RectProto(*from.overscan_insets_);
  } else {
    overscan_insets_ = nullptr;
  }
  if (from.has_visible_insets()) {
    visible_insets_ = new ::android::graphics::RectProto(*from.visible_insets_);
  } else {
    visible_insets_ = nullptr;
  }
  if (from.has_stable_insets()) {
    stable_insets_ = new ::android::graphics::RectProto(*from.stable_insets_);
  } else {
    stable_insets_ = nullptr;
  }
  if (from.has_outsets()) {
    outsets_ = new ::android::graphics::RectProto(*from.outsets_);
  } else {
    outsets_ = nullptr;
  }
  if (from.has_cutout()) {
    cutout_ = new ::android::view::DisplayCutoutProto(*from.cutout_);
  } else {
    cutout_ = nullptr;
  }
  if (from.has_window_frames()) {
    window_frames_ = new ::com::android::server::wm::WindowFramesProto(*from.window_frames_);
  } else {
    window_frames_ = nullptr;
  }
  ::memcpy(&display_id_, &from.display_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&global_scale_) -
    reinterpret_cast<char*>(&display_id_)) + sizeof(global_scale_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.WindowStateProto)
}

void WindowStateProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&window_container_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&global_scale_) -
      reinterpret_cast<char*>(&window_container_)) + sizeof(global_scale_));
}

WindowStateProto::~WindowStateProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.WindowStateProto)
  SharedDtor();
}

void WindowStateProto::SharedDtor() {
  if (this != internal_default_instance()) delete window_container_;
  if (this != internal_default_instance()) delete identifier_;
  if (this != internal_default_instance()) delete attributes_;
  if (this != internal_default_instance()) delete given_content_insets_;
  if (this != internal_default_instance()) delete frame_;
  if (this != internal_default_instance()) delete containing_frame_;
  if (this != internal_default_instance()) delete parent_frame_;
  if (this != internal_default_instance()) delete content_frame_;
  if (this != internal_default_instance()) delete content_insets_;
  if (this != internal_default_instance()) delete surface_insets_;
  if (this != internal_default_instance()) delete animator_;
  if (this != internal_default_instance()) delete surface_position_;
  if (this != internal_default_instance()) delete display_frame_;
  if (this != internal_default_instance()) delete overscan_frame_;
  if (this != internal_default_instance()) delete visible_frame_;
  if (this != internal_default_instance()) delete decor_frame_;
  if (this != internal_default_instance()) delete outset_frame_;
  if (this != internal_default_instance()) delete overscan_insets_;
  if (this != internal_default_instance()) delete visible_insets_;
  if (this != internal_default_instance()) delete stable_insets_;
  if (this != internal_default_instance()) delete outsets_;
  if (this != internal_default_instance()) delete cutout_;
  if (this != internal_default_instance()) delete window_frames_;
}

void WindowStateProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WindowStateProto& WindowStateProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void WindowStateProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.WindowStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  child_windows_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(window_container_ != nullptr);
      window_container_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(identifier_ != nullptr);
      identifier_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(attributes_ != nullptr);
      attributes_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(given_content_insets_ != nullptr);
      given_content_insets_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(frame_ != nullptr);
      frame_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(containing_frame_ != nullptr);
      containing_frame_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(parent_frame_ != nullptr);
      parent_frame_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(content_frame_ != nullptr);
      content_frame_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(content_insets_ != nullptr);
      content_insets_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(surface_insets_ != nullptr);
      surface_insets_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(animator_ != nullptr);
      animator_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(surface_position_ != nullptr);
      surface_position_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(display_frame_ != nullptr);
      display_frame_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(overscan_frame_ != nullptr);
      overscan_frame_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(visible_frame_ != nullptr);
      visible_frame_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(decor_frame_ != nullptr);
      decor_frame_->Clear();
    }
  }
  if (cached_has_bits & 0x007f0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(outset_frame_ != nullptr);
      outset_frame_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(overscan_insets_ != nullptr);
      overscan_insets_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(visible_insets_ != nullptr);
      visible_insets_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(stable_insets_ != nullptr);
      stable_insets_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(outsets_ != nullptr);
      outsets_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(cutout_ != nullptr);
      cutout_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(window_frames_ != nullptr);
      window_frames_->Clear();
    }
  }
  display_id_ = 0;
  if (cached_has_bits & 0xff000000u) {
    ::memset(&stack_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_ready_for_display_) -
        reinterpret_cast<char*>(&stack_id_)) + sizeof(is_ready_for_display_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&remove_on_exit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&force_seamless_rotation_) -
        reinterpret_cast<char*>(&remove_on_exit_)) + sizeof(force_seamless_rotation_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&has_compat_scale_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&global_scale_) -
        reinterpret_cast<char*>(&has_compat_scale_)) + sizeof(global_scale_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WindowStateProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_window_container(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.IdentifierProto identifier = 2 [deprecated = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_identifier(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 display_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_display_id(&_has_bits_);
          display_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 stack_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_stack_id(&_has_bits_);
          stack_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.WindowLayoutParamsProto attributes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_attributes(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto given_content_insets = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_given_content_insets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto frame = 7 [deprecated = true];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto containing_frame = 8 [deprecated = true];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(mutable_containing_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto parent_frame = 9 [deprecated = true];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_parent_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto content_frame = 10 [deprecated = true];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_content_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto content_insets = 11 [deprecated = true];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(mutable_content_insets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto surface_insets = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(mutable_surface_insets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowStateAnimatorProto animator = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(mutable_animator(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool animating_exit = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_animating_exit(&_has_bits_);
          animating_exit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.WindowStateProto child_windows = 15 [deprecated = true];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_child_windows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 122);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto surface_position = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(mutable_surface_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 requested_width = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_requested_width(&_has_bits_);
          requested_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 requested_height = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          _Internal::set_has_requested_height(&_has_bits_);
          requested_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 view_visibility = 20 [(.android.typedef) = "android.view.View.Visibility"];
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_view_visibility(&_has_bits_);
          view_visibility_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 system_ui_visibility = 21 [deprecated = true];
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          _Internal::set_has_system_ui_visibility(&_has_bits_);
          system_ui_visibility_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool has_surface = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_has_surface(&_has_bits_);
          has_surface_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_ready_for_display = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          _Internal::set_has_is_ready_for_display(&_has_bits_);
          is_ready_for_display_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto display_frame = 24 [deprecated = true];
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ctx->ParseMessage(mutable_display_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto overscan_frame = 25 [deprecated = true];
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(mutable_overscan_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto visible_frame = 26 [deprecated = true];
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr = ctx->ParseMessage(mutable_visible_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto decor_frame = 27 [deprecated = true];
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ctx->ParseMessage(mutable_decor_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto outset_frame = 28 [deprecated = true];
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr = ctx->ParseMessage(mutable_outset_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto overscan_insets = 29 [deprecated = true];
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(mutable_overscan_insets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto visible_insets = 30 [deprecated = true];
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr = ctx->ParseMessage(mutable_visible_insets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto stable_insets = 31 [deprecated = true];
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(mutable_stable_insets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto outsets = 32 [deprecated = true];
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          ptr = ctx->ParseMessage(mutable_outsets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.DisplayCutoutProto cutout = 33 [deprecated = true];
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_cutout(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool remove_on_exit = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_remove_on_exit(&_has_bits_);
          remove_on_exit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool destroying = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_destroying(&_has_bits_);
          destroying_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool removed = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_removed(&_has_bits_);
          removed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_on_screen = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_is_on_screen(&_has_bits_);
          is_on_screen_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_visible = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_is_visible(&_has_bits_);
          is_visible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pending_seamless_rotation = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_pending_seamless_rotation(&_has_bits_);
          pending_seamless_rotation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 finished_seamless_rotation_frame = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_finished_seamless_rotation_frame(&_has_bits_);
          finished_seamless_rotation_frame_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowFramesProto window_frames = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_window_frames(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool force_seamless_rotation = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_force_seamless_rotation(&_has_bits_);
          force_seamless_rotation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool has_compat_scale = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_has_compat_scale(&_has_bits_);
          has_compat_scale_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float global_scale = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          _Internal::set_has_global_scale(&_has_bits_);
          global_scale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WindowStateProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.WindowStateProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window_container()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.IdentifierProto identifier = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 display_id = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_display_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &display_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 stack_id = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_stack_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &stack_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.WindowLayoutParamsProto attributes = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto given_content_insets = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_given_content_insets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto frame = 7 [deprecated = true];
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto containing_frame = 8 [deprecated = true];
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_containing_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto parent_frame = 9 [deprecated = true];
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_parent_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto content_frame = 10 [deprecated = true];
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_content_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto content_insets = 11 [deprecated = true];
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_content_insets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto surface_insets = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_surface_insets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowStateAnimatorProto animator = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_animator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool animating_exit = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          _Internal::set_has_animating_exit(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &animating_exit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.WindowStateProto child_windows = 15 [deprecated = true];
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (122 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_child_windows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto surface_position = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (130 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_surface_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 requested_width = 18;
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (144 & 0xFF)) {
          _Internal::set_has_requested_width(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &requested_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 requested_height = 19;
      case 19: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (152 & 0xFF)) {
          _Internal::set_has_requested_height(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &requested_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 view_visibility = 20 [(.android.typedef) = "android.view.View.Visibility"];
      case 20: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (160 & 0xFF)) {
          _Internal::set_has_view_visibility(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &view_visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 system_ui_visibility = 21 [deprecated = true];
      case 21: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (168 & 0xFF)) {
          _Internal::set_has_system_ui_visibility(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &system_ui_visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_surface = 22;
      case 22: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (176 & 0xFF)) {
          _Internal::set_has_has_surface(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_surface_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_ready_for_display = 23;
      case 23: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (184 & 0xFF)) {
          _Internal::set_has_is_ready_for_display(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ready_for_display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto display_frame = 24 [deprecated = true];
      case 24: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (194 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_display_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto overscan_frame = 25 [deprecated = true];
      case 25: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (202 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_overscan_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto visible_frame = 26 [deprecated = true];
      case 26: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (210 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_visible_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto decor_frame = 27 [deprecated = true];
      case 27: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (218 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_decor_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto outset_frame = 28 [deprecated = true];
      case 28: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (226 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_outset_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto overscan_insets = 29 [deprecated = true];
      case 29: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (234 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_overscan_insets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto visible_insets = 30 [deprecated = true];
      case 30: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (242 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_visible_insets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto stable_insets = 31 [deprecated = true];
      case 31: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (250 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_stable_insets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto outsets = 32 [deprecated = true];
      case 32: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (258 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_outsets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.DisplayCutoutProto cutout = 33 [deprecated = true];
      case 33: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (266 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_cutout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool remove_on_exit = 34;
      case 34: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (272 & 0xFF)) {
          _Internal::set_has_remove_on_exit(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &remove_on_exit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool destroying = 35;
      case 35: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (280 & 0xFF)) {
          _Internal::set_has_destroying(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &destroying_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool removed = 36;
      case 36: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (288 & 0xFF)) {
          _Internal::set_has_removed(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &removed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_on_screen = 37;
      case 37: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (296 & 0xFF)) {
          _Internal::set_has_is_on_screen(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_on_screen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_visible = 38;
      case 38: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (304 & 0xFF)) {
          _Internal::set_has_is_visible(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pending_seamless_rotation = 39;
      case 39: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (312 & 0xFF)) {
          _Internal::set_has_pending_seamless_rotation(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pending_seamless_rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 finished_seamless_rotation_frame = 40;
      case 40: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (320 & 0xFF)) {
          _Internal::set_has_finished_seamless_rotation_frame(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &finished_seamless_rotation_frame_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowFramesProto window_frames = 41;
      case 41: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (330 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool force_seamless_rotation = 42;
      case 42: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (336 & 0xFF)) {
          _Internal::set_has_force_seamless_rotation(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &force_seamless_rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_compat_scale = 43;
      case 43: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (344 & 0xFF)) {
          _Internal::set_has_has_compat_scale(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_compat_scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float global_scale = 44;
      case 44: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (357 & 0xFF)) {
          _Internal::set_has_global_scale(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &global_scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.WindowStateProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.WindowStateProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WindowStateProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.WindowStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::window_container(this), output);
  }

  // optional .com.android.server.wm.IdentifierProto identifier = 2 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::identifier(this), output);
  }

  // optional int32 display_id = 3;
  if (cached_has_bits & 0x00800000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->display_id(), output);
  }

  // optional int32 stack_id = 4;
  if (cached_has_bits & 0x01000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->stack_id(), output);
  }

  // optional .android.view.WindowLayoutParamsProto attributes = 5;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::attributes(this), output);
  }

  // optional .android.graphics.RectProto given_content_insets = 6;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::given_content_insets(this), output);
  }

  // optional .android.graphics.RectProto frame = 7 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::frame(this), output);
  }

  // optional .android.graphics.RectProto containing_frame = 8 [deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, _Internal::containing_frame(this), output);
  }

  // optional .android.graphics.RectProto parent_frame = 9 [deprecated = true];
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, _Internal::parent_frame(this), output);
  }

  // optional .android.graphics.RectProto content_frame = 10 [deprecated = true];
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, _Internal::content_frame(this), output);
  }

  // optional .android.graphics.RectProto content_insets = 11 [deprecated = true];
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, _Internal::content_insets(this), output);
  }

  // optional .android.graphics.RectProto surface_insets = 12;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, _Internal::surface_insets(this), output);
  }

  // optional .com.android.server.wm.WindowStateAnimatorProto animator = 13;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, _Internal::animator(this), output);
  }

  // optional bool animating_exit = 14;
  if (cached_has_bits & 0x20000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(14, this->animating_exit(), output);
  }

  // repeated .com.android.server.wm.WindowStateProto child_windows = 15 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_windows_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->child_windows(static_cast<int>(i)),
      output);
  }

  // optional .android.graphics.RectProto surface_position = 16;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, _Internal::surface_position(this), output);
  }

  // optional int32 requested_width = 18;
  if (cached_has_bits & 0x02000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(18, this->requested_width(), output);
  }

  // optional int32 requested_height = 19;
  if (cached_has_bits & 0x04000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(19, this->requested_height(), output);
  }

  // optional int32 view_visibility = 20 [(.android.typedef) = "android.view.View.Visibility"];
  if (cached_has_bits & 0x08000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(20, this->view_visibility(), output);
  }

  // optional int32 system_ui_visibility = 21 [deprecated = true];
  if (cached_has_bits & 0x10000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(21, this->system_ui_visibility(), output);
  }

  // optional bool has_surface = 22;
  if (cached_has_bits & 0x40000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(22, this->has_surface(), output);
  }

  // optional bool is_ready_for_display = 23;
  if (cached_has_bits & 0x80000000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(23, this->is_ready_for_display(), output);
  }

  // optional .android.graphics.RectProto display_frame = 24 [deprecated = true];
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, _Internal::display_frame(this), output);
  }

  // optional .android.graphics.RectProto overscan_frame = 25 [deprecated = true];
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, _Internal::overscan_frame(this), output);
  }

  // optional .android.graphics.RectProto visible_frame = 26 [deprecated = true];
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, _Internal::visible_frame(this), output);
  }

  // optional .android.graphics.RectProto decor_frame = 27 [deprecated = true];
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, _Internal::decor_frame(this), output);
  }

  // optional .android.graphics.RectProto outset_frame = 28 [deprecated = true];
  if (cached_has_bits & 0x00010000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, _Internal::outset_frame(this), output);
  }

  // optional .android.graphics.RectProto overscan_insets = 29 [deprecated = true];
  if (cached_has_bits & 0x00020000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, _Internal::overscan_insets(this), output);
  }

  // optional .android.graphics.RectProto visible_insets = 30 [deprecated = true];
  if (cached_has_bits & 0x00040000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, _Internal::visible_insets(this), output);
  }

  // optional .android.graphics.RectProto stable_insets = 31 [deprecated = true];
  if (cached_has_bits & 0x00080000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, _Internal::stable_insets(this), output);
  }

  // optional .android.graphics.RectProto outsets = 32 [deprecated = true];
  if (cached_has_bits & 0x00100000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, _Internal::outsets(this), output);
  }

  // optional .android.view.DisplayCutoutProto cutout = 33 [deprecated = true];
  if (cached_has_bits & 0x00200000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, _Internal::cutout(this), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool remove_on_exit = 34;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(34, this->remove_on_exit(), output);
  }

  // optional bool destroying = 35;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(35, this->destroying(), output);
  }

  // optional bool removed = 36;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(36, this->removed(), output);
  }

  // optional bool is_on_screen = 37;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(37, this->is_on_screen(), output);
  }

  // optional bool is_visible = 38;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(38, this->is_visible(), output);
  }

  // optional bool pending_seamless_rotation = 39;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(39, this->pending_seamless_rotation(), output);
  }

  // optional int64 finished_seamless_rotation_frame = 40;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(40, this->finished_seamless_rotation_frame(), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowFramesProto window_frames = 41;
  if (cached_has_bits & 0x00400000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, _Internal::window_frames(this), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool force_seamless_rotation = 42;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(42, this->force_seamless_rotation(), output);
  }

  // optional bool has_compat_scale = 43;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(43, this->has_compat_scale(), output);
  }

  // optional float global_scale = 44;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(44, this->global_scale(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.WindowStateProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WindowStateProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.WindowStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::window_container(this), target);
  }

  // optional .com.android.server.wm.IdentifierProto identifier = 2 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::identifier(this), target);
  }

  // optional int32 display_id = 3;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->display_id(), target);
  }

  // optional int32 stack_id = 4;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->stack_id(), target);
  }

  // optional .android.view.WindowLayoutParamsProto attributes = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::attributes(this), target);
  }

  // optional .android.graphics.RectProto given_content_insets = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::given_content_insets(this), target);
  }

  // optional .android.graphics.RectProto frame = 7 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::frame(this), target);
  }

  // optional .android.graphics.RectProto containing_frame = 8 [deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::containing_frame(this), target);
  }

  // optional .android.graphics.RectProto parent_frame = 9 [deprecated = true];
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::parent_frame(this), target);
  }

  // optional .android.graphics.RectProto content_frame = 10 [deprecated = true];
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, _Internal::content_frame(this), target);
  }

  // optional .android.graphics.RectProto content_insets = 11 [deprecated = true];
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, _Internal::content_insets(this), target);
  }

  // optional .android.graphics.RectProto surface_insets = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, _Internal::surface_insets(this), target);
  }

  // optional .com.android.server.wm.WindowStateAnimatorProto animator = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, _Internal::animator(this), target);
  }

  // optional bool animating_exit = 14;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->animating_exit(), target);
  }

  // repeated .com.android.server.wm.WindowStateProto child_windows = 15 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_windows_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->child_windows(static_cast<int>(i)), target);
  }

  // optional .android.graphics.RectProto surface_position = 16;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, _Internal::surface_position(this), target);
  }

  // optional int32 requested_width = 18;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(18, this->requested_width(), target);
  }

  // optional int32 requested_height = 19;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->requested_height(), target);
  }

  // optional int32 view_visibility = 20 [(.android.typedef) = "android.view.View.Visibility"];
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(20, this->view_visibility(), target);
  }

  // optional int32 system_ui_visibility = 21 [deprecated = true];
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(21, this->system_ui_visibility(), target);
  }

  // optional bool has_surface = 22;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(22, this->has_surface(), target);
  }

  // optional bool is_ready_for_display = 23;
  if (cached_has_bits & 0x80000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(23, this->is_ready_for_display(), target);
  }

  // optional .android.graphics.RectProto display_frame = 24 [deprecated = true];
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, _Internal::display_frame(this), target);
  }

  // optional .android.graphics.RectProto overscan_frame = 25 [deprecated = true];
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, _Internal::overscan_frame(this), target);
  }

  // optional .android.graphics.RectProto visible_frame = 26 [deprecated = true];
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, _Internal::visible_frame(this), target);
  }

  // optional .android.graphics.RectProto decor_frame = 27 [deprecated = true];
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, _Internal::decor_frame(this), target);
  }

  // optional .android.graphics.RectProto outset_frame = 28 [deprecated = true];
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, _Internal::outset_frame(this), target);
  }

  // optional .android.graphics.RectProto overscan_insets = 29 [deprecated = true];
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, _Internal::overscan_insets(this), target);
  }

  // optional .android.graphics.RectProto visible_insets = 30 [deprecated = true];
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, _Internal::visible_insets(this), target);
  }

  // optional .android.graphics.RectProto stable_insets = 31 [deprecated = true];
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, _Internal::stable_insets(this), target);
  }

  // optional .android.graphics.RectProto outsets = 32 [deprecated = true];
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, _Internal::outsets(this), target);
  }

  // optional .android.view.DisplayCutoutProto cutout = 33 [deprecated = true];
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, _Internal::cutout(this), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool remove_on_exit = 34;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(34, this->remove_on_exit(), target);
  }

  // optional bool destroying = 35;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(35, this->destroying(), target);
  }

  // optional bool removed = 36;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(36, this->removed(), target);
  }

  // optional bool is_on_screen = 37;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(37, this->is_on_screen(), target);
  }

  // optional bool is_visible = 38;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(38, this->is_visible(), target);
  }

  // optional bool pending_seamless_rotation = 39;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(39, this->pending_seamless_rotation(), target);
  }

  // optional int64 finished_seamless_rotation_frame = 40;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(40, this->finished_seamless_rotation_frame(), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowFramesProto window_frames = 41;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        41, _Internal::window_frames(this), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional bool force_seamless_rotation = 42;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(42, this->force_seamless_rotation(), target);
  }

  // optional bool has_compat_scale = 43;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(43, this->has_compat_scale(), target);
  }

  // optional float global_scale = 44;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(44, this->global_scale(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.WindowStateProto)
  return target;
}

size_t WindowStateProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.WindowStateProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.wm.WindowStateProto child_windows = 15 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->child_windows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->child_windows(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .com.android.server.wm.WindowContainerProto window_container = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_container_);
    }

    // optional .com.android.server.wm.IdentifierProto identifier = 2 [deprecated = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *identifier_);
    }

    // optional .android.view.WindowLayoutParamsProto attributes = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *attributes_);
    }

    // optional .android.graphics.RectProto given_content_insets = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *given_content_insets_);
    }

    // optional .android.graphics.RectProto frame = 7 [deprecated = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *frame_);
    }

    // optional .android.graphics.RectProto containing_frame = 8 [deprecated = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *containing_frame_);
    }

    // optional .android.graphics.RectProto parent_frame = 9 [deprecated = true];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *parent_frame_);
    }

    // optional .android.graphics.RectProto content_frame = 10 [deprecated = true];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *content_frame_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .android.graphics.RectProto content_insets = 11 [deprecated = true];
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *content_insets_);
    }

    // optional .android.graphics.RectProto surface_insets = 12;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *surface_insets_);
    }

    // optional .com.android.server.wm.WindowStateAnimatorProto animator = 13;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *animator_);
    }

    // optional .android.graphics.RectProto surface_position = 16;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *surface_position_);
    }

    // optional .android.graphics.RectProto display_frame = 24 [deprecated = true];
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *display_frame_);
    }

    // optional .android.graphics.RectProto overscan_frame = 25 [deprecated = true];
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *overscan_frame_);
    }

    // optional .android.graphics.RectProto visible_frame = 26 [deprecated = true];
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *visible_frame_);
    }

    // optional .android.graphics.RectProto decor_frame = 27 [deprecated = true];
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *decor_frame_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .android.graphics.RectProto outset_frame = 28 [deprecated = true];
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *outset_frame_);
    }

    // optional .android.graphics.RectProto overscan_insets = 29 [deprecated = true];
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *overscan_insets_);
    }

    // optional .android.graphics.RectProto visible_insets = 30 [deprecated = true];
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *visible_insets_);
    }

    // optional .android.graphics.RectProto stable_insets = 31 [deprecated = true];
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *stable_insets_);
    }

    // optional .android.graphics.RectProto outsets = 32 [deprecated = true];
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *outsets_);
    }

    // optional .android.view.DisplayCutoutProto cutout = 33 [deprecated = true];
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cutout_);
    }

    // optional .com.android.server.wm.WindowFramesProto window_frames = 41;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_frames_);
    }

    // optional int32 display_id = 3;
    if (cached_has_bits & 0x00800000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->display_id());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional int32 stack_id = 4;
    if (cached_has_bits & 0x01000000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->stack_id());
    }

    // optional int32 requested_width = 18;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->requested_width());
    }

    // optional int32 requested_height = 19;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->requested_height());
    }

    // optional int32 view_visibility = 20 [(.android.typedef) = "android.view.View.Visibility"];
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->view_visibility());
    }

    // optional int32 system_ui_visibility = 21 [deprecated = true];
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->system_ui_visibility());
    }

    // optional bool animating_exit = 14;
    if (cached_has_bits & 0x20000000u) {
      total_size += 1 + 1;
    }

    // optional bool has_surface = 22;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool is_ready_for_display = 23;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool remove_on_exit = 34;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool destroying = 35;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool removed = 36;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool is_on_screen = 37;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool is_visible = 38;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional int64 finished_seamless_rotation_frame = 40;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->finished_seamless_rotation_frame());
    }

    // optional bool pending_seamless_rotation = 39;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool force_seamless_rotation = 42;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional bool has_compat_scale = 43;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional float global_scale = 44;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 4;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WindowStateProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.WindowStateProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WindowStateProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WindowStateProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.WindowStateProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.WindowStateProto)
    MergeFrom(*source);
  }
}

void WindowStateProto::MergeFrom(const WindowStateProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.WindowStateProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  child_windows_.MergeFrom(from.child_windows_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_window_container()->::com::android::server::wm::WindowContainerProto::MergeFrom(from.window_container());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_identifier()->::com::android::server::wm::IdentifierProto::MergeFrom(from.identifier());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_attributes()->::android::view::WindowLayoutParamsProto::MergeFrom(from.attributes());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_given_content_insets()->::android::graphics::RectProto::MergeFrom(from.given_content_insets());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_frame()->::android::graphics::RectProto::MergeFrom(from.frame());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_containing_frame()->::android::graphics::RectProto::MergeFrom(from.containing_frame());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_parent_frame()->::android::graphics::RectProto::MergeFrom(from.parent_frame());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_content_frame()->::android::graphics::RectProto::MergeFrom(from.content_frame());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_content_insets()->::android::graphics::RectProto::MergeFrom(from.content_insets());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_surface_insets()->::android::graphics::RectProto::MergeFrom(from.surface_insets());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_animator()->::com::android::server::wm::WindowStateAnimatorProto::MergeFrom(from.animator());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_surface_position()->::android::graphics::RectProto::MergeFrom(from.surface_position());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_display_frame()->::android::graphics::RectProto::MergeFrom(from.display_frame());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_overscan_frame()->::android::graphics::RectProto::MergeFrom(from.overscan_frame());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_visible_frame()->::android::graphics::RectProto::MergeFrom(from.visible_frame());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_decor_frame()->::android::graphics::RectProto::MergeFrom(from.decor_frame());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_outset_frame()->::android::graphics::RectProto::MergeFrom(from.outset_frame());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_overscan_insets()->::android::graphics::RectProto::MergeFrom(from.overscan_insets());
    }
    if (cached_has_bits & 0x00040000u) {
      mutable_visible_insets()->::android::graphics::RectProto::MergeFrom(from.visible_insets());
    }
    if (cached_has_bits & 0x00080000u) {
      mutable_stable_insets()->::android::graphics::RectProto::MergeFrom(from.stable_insets());
    }
    if (cached_has_bits & 0x00100000u) {
      mutable_outsets()->::android::graphics::RectProto::MergeFrom(from.outsets());
    }
    if (cached_has_bits & 0x00200000u) {
      mutable_cutout()->::android::view::DisplayCutoutProto::MergeFrom(from.cutout());
    }
    if (cached_has_bits & 0x00400000u) {
      mutable_window_frames()->::com::android::server::wm::WindowFramesProto::MergeFrom(from.window_frames());
    }
    if (cached_has_bits & 0x00800000u) {
      display_id_ = from.display_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      stack_id_ = from.stack_id_;
    }
    if (cached_has_bits & 0x02000000u) {
      requested_width_ = from.requested_width_;
    }
    if (cached_has_bits & 0x04000000u) {
      requested_height_ = from.requested_height_;
    }
    if (cached_has_bits & 0x08000000u) {
      view_visibility_ = from.view_visibility_;
    }
    if (cached_has_bits & 0x10000000u) {
      system_ui_visibility_ = from.system_ui_visibility_;
    }
    if (cached_has_bits & 0x20000000u) {
      animating_exit_ = from.animating_exit_;
    }
    if (cached_has_bits & 0x40000000u) {
      has_surface_ = from.has_surface_;
    }
    if (cached_has_bits & 0x80000000u) {
      is_ready_for_display_ = from.is_ready_for_display_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      remove_on_exit_ = from.remove_on_exit_;
    }
    if (cached_has_bits & 0x00000002u) {
      destroying_ = from.destroying_;
    }
    if (cached_has_bits & 0x00000004u) {
      removed_ = from.removed_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_on_screen_ = from.is_on_screen_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_visible_ = from.is_visible_;
    }
    if (cached_has_bits & 0x00000020u) {
      finished_seamless_rotation_frame_ = from.finished_seamless_rotation_frame_;
    }
    if (cached_has_bits & 0x00000040u) {
      pending_seamless_rotation_ = from.pending_seamless_rotation_;
    }
    if (cached_has_bits & 0x00000080u) {
      force_seamless_rotation_ = from.force_seamless_rotation_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      has_compat_scale_ = from.has_compat_scale_;
    }
    if (cached_has_bits & 0x00000200u) {
      global_scale_ = from.global_scale_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void WindowStateProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.WindowStateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WindowStateProto::CopyFrom(const WindowStateProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.WindowStateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowStateProto::IsInitialized() const {
  return true;
}

void WindowStateProto::InternalSwap(WindowStateProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  CastToBase(&child_windows_)->InternalSwap(CastToBase(&other->child_windows_));
  swap(window_container_, other->window_container_);
  swap(identifier_, other->identifier_);
  swap(attributes_, other->attributes_);
  swap(given_content_insets_, other->given_content_insets_);
  swap(frame_, other->frame_);
  swap(containing_frame_, other->containing_frame_);
  swap(parent_frame_, other->parent_frame_);
  swap(content_frame_, other->content_frame_);
  swap(content_insets_, other->content_insets_);
  swap(surface_insets_, other->surface_insets_);
  swap(animator_, other->animator_);
  swap(surface_position_, other->surface_position_);
  swap(display_frame_, other->display_frame_);
  swap(overscan_frame_, other->overscan_frame_);
  swap(visible_frame_, other->visible_frame_);
  swap(decor_frame_, other->decor_frame_);
  swap(outset_frame_, other->outset_frame_);
  swap(overscan_insets_, other->overscan_insets_);
  swap(visible_insets_, other->visible_insets_);
  swap(stable_insets_, other->stable_insets_);
  swap(outsets_, other->outsets_);
  swap(cutout_, other->cutout_);
  swap(window_frames_, other->window_frames_);
  swap(display_id_, other->display_id_);
  swap(stack_id_, other->stack_id_);
  swap(requested_width_, other->requested_width_);
  swap(requested_height_, other->requested_height_);
  swap(view_visibility_, other->view_visibility_);
  swap(system_ui_visibility_, other->system_ui_visibility_);
  swap(animating_exit_, other->animating_exit_);
  swap(has_surface_, other->has_surface_);
  swap(is_ready_for_display_, other->is_ready_for_display_);
  swap(remove_on_exit_, other->remove_on_exit_);
  swap(destroying_, other->destroying_);
  swap(removed_, other->removed_);
  swap(is_on_screen_, other->is_on_screen_);
  swap(is_visible_, other->is_visible_);
  swap(finished_seamless_rotation_frame_, other->finished_seamless_rotation_frame_);
  swap(pending_seamless_rotation_, other->pending_seamless_rotation_);
  swap(force_seamless_rotation_, other->force_seamless_rotation_);
  swap(has_compat_scale_, other->has_compat_scale_);
  swap(global_scale_, other->global_scale_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WindowStateProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IdentifierProto::InitAsDefaultInstance() {
}
class IdentifierProto::_Internal {
 public:
  using HasBits = decltype(std::declval<IdentifierProto>()._has_bits_);
  static void set_has_hash_code(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_user_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

IdentifierProto::IdentifierProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.IdentifierProto)
}
IdentifierProto::IdentifierProto(const IdentifierProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  ::memcpy(&hash_code_, &from.hash_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&hash_code_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.IdentifierProto)
}

void IdentifierProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IdentifierProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&hash_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&hash_code_)) + sizeof(user_id_));
}

IdentifierProto::~IdentifierProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.IdentifierProto)
  SharedDtor();
}

void IdentifierProto::SharedDtor() {
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IdentifierProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IdentifierProto& IdentifierProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IdentifierProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void IdentifierProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.IdentifierProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    title_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hash_code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&user_id_) -
        reinterpret_cast<char*>(&hash_code_)) + sizeof(user_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IdentifierProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 hash_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_hash_code(&has_bits);
          hash_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_user_id(&has_bits);
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string title = 3 [(.android.privacy) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_title(), ptr, ctx, "com.android.server.wm.IdentifierProto.title");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IdentifierProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.IdentifierProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hash_code = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_hash_code(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &hash_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_id = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_user_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 3 [(.android.privacy) = {
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.wm.IdentifierProto.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.IdentifierProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.IdentifierProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IdentifierProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.IdentifierProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 hash_code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->hash_code(), output);
  }

  // optional int32 user_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->user_id(), output);
  }

  // optional string title = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.IdentifierProto.title");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.IdentifierProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* IdentifierProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.IdentifierProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 hash_code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->hash_code(), target);
  }

  // optional int32 user_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->user_id(), target);
  }

  // optional string title = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.IdentifierProto.title");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.IdentifierProto)
  return target;
}

size_t IdentifierProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.IdentifierProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string title = 3 [(.android.privacy) = {
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional int32 hash_code = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->hash_code());
    }

    // optional int32 user_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->user_id());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdentifierProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.IdentifierProto)
  GOOGLE_DCHECK_NE(&from, this);
  const IdentifierProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IdentifierProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.IdentifierProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.IdentifierProto)
    MergeFrom(*source);
  }
}

void IdentifierProto::MergeFrom(const IdentifierProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.IdentifierProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      title_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000002u) {
      hash_code_ = from.hash_code_;
    }
    if (cached_has_bits & 0x00000004u) {
      user_id_ = from.user_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IdentifierProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.IdentifierProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdentifierProto::CopyFrom(const IdentifierProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.IdentifierProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentifierProto::IsInitialized() const {
  return true;
}

void IdentifierProto::InternalSwap(IdentifierProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hash_code_, other->hash_code_);
  swap(user_id_, other->user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IdentifierProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WindowStateAnimatorProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_WindowStateAnimatorProto_default_instance_._instance.get_mutable()->last_clip_rect_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateAnimatorProto_default_instance_._instance.get_mutable()->surface_ = const_cast< ::com::android::server::wm::WindowSurfaceControllerProto*>(
      ::com::android::server::wm::WindowSurfaceControllerProto::internal_default_instance());
  ::com::android::server::wm::_WindowStateAnimatorProto_default_instance_._instance.get_mutable()->system_decor_rect_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
}
class WindowStateAnimatorProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WindowStateAnimatorProto>()._has_bits_);
  static const ::android::graphics::RectProto& last_clip_rect(const WindowStateAnimatorProto* msg);
  static void set_has_last_clip_rect(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::android::server::wm::WindowSurfaceControllerProto& surface(const WindowStateAnimatorProto* msg);
  static void set_has_surface(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_draw_state(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::android::graphics::RectProto& system_decor_rect(const WindowStateAnimatorProto* msg);
  static void set_has_system_decor_rect(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::android::graphics::RectProto&
WindowStateAnimatorProto::_Internal::last_clip_rect(const WindowStateAnimatorProto* msg) {
  return *msg->last_clip_rect_;
}
const ::com::android::server::wm::WindowSurfaceControllerProto&
WindowStateAnimatorProto::_Internal::surface(const WindowStateAnimatorProto* msg) {
  return *msg->surface_;
}
const ::android::graphics::RectProto&
WindowStateAnimatorProto::_Internal::system_decor_rect(const WindowStateAnimatorProto* msg) {
  return *msg->system_decor_rect_;
}
void WindowStateAnimatorProto::clear_last_clip_rect() {
  if (last_clip_rect_ != nullptr) last_clip_rect_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void WindowStateAnimatorProto::clear_system_decor_rect() {
  if (system_decor_rect_ != nullptr) system_decor_rect_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
WindowStateAnimatorProto::WindowStateAnimatorProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.WindowStateAnimatorProto)
}
WindowStateAnimatorProto::WindowStateAnimatorProto(const WindowStateAnimatorProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_last_clip_rect()) {
    last_clip_rect_ = new ::android::graphics::RectProto(*from.last_clip_rect_);
  } else {
    last_clip_rect_ = nullptr;
  }
  if (from.has_surface()) {
    surface_ = new ::com::android::server::wm::WindowSurfaceControllerProto(*from.surface_);
  } else {
    surface_ = nullptr;
  }
  if (from.has_system_decor_rect()) {
    system_decor_rect_ = new ::android::graphics::RectProto(*from.system_decor_rect_);
  } else {
    system_decor_rect_ = nullptr;
  }
  draw_state_ = from.draw_state_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.WindowStateAnimatorProto)
}

void WindowStateAnimatorProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WindowStateAnimatorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&last_clip_rect_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&draw_state_) -
      reinterpret_cast<char*>(&last_clip_rect_)) + sizeof(draw_state_));
}

WindowStateAnimatorProto::~WindowStateAnimatorProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.WindowStateAnimatorProto)
  SharedDtor();
}

void WindowStateAnimatorProto::SharedDtor() {
  if (this != internal_default_instance()) delete last_clip_rect_;
  if (this != internal_default_instance()) delete surface_;
  if (this != internal_default_instance()) delete system_decor_rect_;
}

void WindowStateAnimatorProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WindowStateAnimatorProto& WindowStateAnimatorProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WindowStateAnimatorProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void WindowStateAnimatorProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.WindowStateAnimatorProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(last_clip_rect_ != nullptr);
      last_clip_rect_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(surface_ != nullptr);
      surface_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(system_decor_rect_ != nullptr);
      system_decor_rect_->Clear();
    }
  }
  draw_state_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WindowStateAnimatorProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.graphics.RectProto last_clip_rect = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_last_clip_rect(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowSurfaceControllerProto surface = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_surface(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowStateAnimatorProto.DrawState draw_state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::com::android::server::wm::WindowStateAnimatorProto_DrawState_IsValid(val))) {
            set_draw_state(static_cast<::com::android::server::wm::WindowStateAnimatorProto_DrawState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto system_decor_rect = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_system_decor_rect(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WindowStateAnimatorProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.WindowStateAnimatorProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.graphics.RectProto last_clip_rect = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_last_clip_rect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowSurfaceControllerProto surface = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_surface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowStateAnimatorProto.DrawState draw_state = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::android::server::wm::WindowStateAnimatorProto_DrawState_IsValid(value)) {
            set_draw_state(static_cast< ::com::android::server::wm::WindowStateAnimatorProto_DrawState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto system_decor_rect = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_system_decor_rect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.WindowStateAnimatorProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.WindowStateAnimatorProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WindowStateAnimatorProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.WindowStateAnimatorProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.graphics.RectProto last_clip_rect = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::last_clip_rect(this), output);
  }

  // optional .com.android.server.wm.WindowSurfaceControllerProto surface = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::surface(this), output);
  }

  // optional .com.android.server.wm.WindowStateAnimatorProto.DrawState draw_state = 3;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      3, this->draw_state(), output);
  }

  // optional .android.graphics.RectProto system_decor_rect = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::system_decor_rect(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.WindowStateAnimatorProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WindowStateAnimatorProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.WindowStateAnimatorProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.graphics.RectProto last_clip_rect = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::last_clip_rect(this), target);
  }

  // optional .com.android.server.wm.WindowSurfaceControllerProto surface = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::surface(this), target);
  }

  // optional .com.android.server.wm.WindowStateAnimatorProto.DrawState draw_state = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->draw_state(), target);
  }

  // optional .android.graphics.RectProto system_decor_rect = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::system_decor_rect(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.WindowStateAnimatorProto)
  return target;
}

size_t WindowStateAnimatorProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.WindowStateAnimatorProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .android.graphics.RectProto last_clip_rect = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *last_clip_rect_);
    }

    // optional .com.android.server.wm.WindowSurfaceControllerProto surface = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *surface_);
    }

    // optional .android.graphics.RectProto system_decor_rect = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *system_decor_rect_);
    }

    // optional .com.android.server.wm.WindowStateAnimatorProto.DrawState draw_state = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->draw_state());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WindowStateAnimatorProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.WindowStateAnimatorProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WindowStateAnimatorProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WindowStateAnimatorProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.WindowStateAnimatorProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.WindowStateAnimatorProto)
    MergeFrom(*source);
  }
}

void WindowStateAnimatorProto::MergeFrom(const WindowStateAnimatorProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.WindowStateAnimatorProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_last_clip_rect()->::android::graphics::RectProto::MergeFrom(from.last_clip_rect());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_surface()->::com::android::server::wm::WindowSurfaceControllerProto::MergeFrom(from.surface());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_system_decor_rect()->::android::graphics::RectProto::MergeFrom(from.system_decor_rect());
    }
    if (cached_has_bits & 0x00000008u) {
      draw_state_ = from.draw_state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WindowStateAnimatorProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.WindowStateAnimatorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WindowStateAnimatorProto::CopyFrom(const WindowStateAnimatorProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.WindowStateAnimatorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowStateAnimatorProto::IsInitialized() const {
  return true;
}

void WindowStateAnimatorProto::InternalSwap(WindowStateAnimatorProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(last_clip_rect_, other->last_clip_rect_);
  swap(surface_, other->surface_);
  swap(system_decor_rect_, other->system_decor_rect_);
  swap(draw_state_, other->draw_state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WindowStateAnimatorProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WindowSurfaceControllerProto::InitAsDefaultInstance() {
}
class WindowSurfaceControllerProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WindowSurfaceControllerProto>()._has_bits_);
  static void set_has_shown(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_layer(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

WindowSurfaceControllerProto::WindowSurfaceControllerProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.WindowSurfaceControllerProto)
}
WindowSurfaceControllerProto::WindowSurfaceControllerProto(const WindowSurfaceControllerProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shown_, &from.shown_,
    static_cast<size_t>(reinterpret_cast<char*>(&layer_) -
    reinterpret_cast<char*>(&shown_)) + sizeof(layer_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.WindowSurfaceControllerProto)
}

void WindowSurfaceControllerProto::SharedCtor() {
  ::memset(&shown_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&layer_) -
      reinterpret_cast<char*>(&shown_)) + sizeof(layer_));
}

WindowSurfaceControllerProto::~WindowSurfaceControllerProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.WindowSurfaceControllerProto)
  SharedDtor();
}

void WindowSurfaceControllerProto::SharedDtor() {
}

void WindowSurfaceControllerProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WindowSurfaceControllerProto& WindowSurfaceControllerProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WindowSurfaceControllerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void WindowSurfaceControllerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.WindowSurfaceControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&shown_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&layer_) -
        reinterpret_cast<char*>(&shown_)) + sizeof(layer_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WindowSurfaceControllerProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool shown = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_shown(&has_bits);
          shown_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 layer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_layer(&has_bits);
          layer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WindowSurfaceControllerProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.WindowSurfaceControllerProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool shown = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_shown(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &shown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 layer = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_layer(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &layer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.WindowSurfaceControllerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.WindowSurfaceControllerProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WindowSurfaceControllerProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.WindowSurfaceControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool shown = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->shown(), output);
  }

  // optional int32 layer = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->layer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.WindowSurfaceControllerProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WindowSurfaceControllerProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.WindowSurfaceControllerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool shown = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->shown(), target);
  }

  // optional int32 layer = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->layer(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.WindowSurfaceControllerProto)
  return target;
}

size_t WindowSurfaceControllerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.WindowSurfaceControllerProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool shown = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional int32 layer = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->layer());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WindowSurfaceControllerProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.WindowSurfaceControllerProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WindowSurfaceControllerProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WindowSurfaceControllerProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.WindowSurfaceControllerProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.WindowSurfaceControllerProto)
    MergeFrom(*source);
  }
}

void WindowSurfaceControllerProto::MergeFrom(const WindowSurfaceControllerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.WindowSurfaceControllerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      shown_ = from.shown_;
    }
    if (cached_has_bits & 0x00000002u) {
      layer_ = from.layer_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WindowSurfaceControllerProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.WindowSurfaceControllerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WindowSurfaceControllerProto::CopyFrom(const WindowSurfaceControllerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.WindowSurfaceControllerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowSurfaceControllerProto::IsInitialized() const {
  return true;
}

void WindowSurfaceControllerProto::InternalSwap(WindowSurfaceControllerProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(shown_, other->shown_);
  swap(layer_, other->layer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WindowSurfaceControllerProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ScreenRotationAnimationProto::InitAsDefaultInstance() {
}
class ScreenRotationAnimationProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ScreenRotationAnimationProto>()._has_bits_);
  static void set_has_started(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_animation_running(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ScreenRotationAnimationProto::ScreenRotationAnimationProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.ScreenRotationAnimationProto)
}
ScreenRotationAnimationProto::ScreenRotationAnimationProto(const ScreenRotationAnimationProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&started_, &from.started_,
    static_cast<size_t>(reinterpret_cast<char*>(&animation_running_) -
    reinterpret_cast<char*>(&started_)) + sizeof(animation_running_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.ScreenRotationAnimationProto)
}

void ScreenRotationAnimationProto::SharedCtor() {
  ::memset(&started_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&animation_running_) -
      reinterpret_cast<char*>(&started_)) + sizeof(animation_running_));
}

ScreenRotationAnimationProto::~ScreenRotationAnimationProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.ScreenRotationAnimationProto)
  SharedDtor();
}

void ScreenRotationAnimationProto::SharedDtor() {
}

void ScreenRotationAnimationProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScreenRotationAnimationProto& ScreenRotationAnimationProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScreenRotationAnimationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void ScreenRotationAnimationProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.ScreenRotationAnimationProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&started_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&animation_running_) -
      reinterpret_cast<char*>(&started_)) + sizeof(animation_running_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ScreenRotationAnimationProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool started = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_started(&has_bits);
          started_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool animation_running = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_animation_running(&has_bits);
          animation_running_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ScreenRotationAnimationProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.ScreenRotationAnimationProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool started = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_started(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &started_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool animation_running = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_animation_running(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &animation_running_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.ScreenRotationAnimationProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.ScreenRotationAnimationProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ScreenRotationAnimationProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.ScreenRotationAnimationProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool started = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->started(), output);
  }

  // optional bool animation_running = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->animation_running(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.ScreenRotationAnimationProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ScreenRotationAnimationProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.ScreenRotationAnimationProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool started = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->started(), target);
  }

  // optional bool animation_running = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->animation_running(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.ScreenRotationAnimationProto)
  return target;
}

size_t ScreenRotationAnimationProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.ScreenRotationAnimationProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool started = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool animation_running = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScreenRotationAnimationProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.ScreenRotationAnimationProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ScreenRotationAnimationProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScreenRotationAnimationProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.ScreenRotationAnimationProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.ScreenRotationAnimationProto)
    MergeFrom(*source);
  }
}

void ScreenRotationAnimationProto::MergeFrom(const ScreenRotationAnimationProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.ScreenRotationAnimationProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      started_ = from.started_;
    }
    if (cached_has_bits & 0x00000002u) {
      animation_running_ = from.animation_running_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ScreenRotationAnimationProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.ScreenRotationAnimationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScreenRotationAnimationProto::CopyFrom(const ScreenRotationAnimationProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.ScreenRotationAnimationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScreenRotationAnimationProto::IsInitialized() const {
  return true;
}

void ScreenRotationAnimationProto::InternalSwap(ScreenRotationAnimationProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(started_, other->started_);
  swap(animation_running_, other->animation_running_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScreenRotationAnimationProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WindowContainerProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_WindowContainerProto_default_instance_._instance.get_mutable()->configuration_container_ = const_cast< ::com::android::server::wm::ConfigurationContainerProto*>(
      ::com::android::server::wm::ConfigurationContainerProto::internal_default_instance());
  ::com::android::server::wm::_WindowContainerProto_default_instance_._instance.get_mutable()->surface_animator_ = const_cast< ::com::android::server::wm::SurfaceAnimatorProto*>(
      ::com::android::server::wm::SurfaceAnimatorProto::internal_default_instance());
  ::com::android::server::wm::_WindowContainerProto_default_instance_._instance.get_mutable()->identifier_ = const_cast< ::com::android::server::wm::IdentifierProto*>(
      ::com::android::server::wm::IdentifierProto::internal_default_instance());
  ::com::android::server::wm::_WindowContainerProto_default_instance_._instance.get_mutable()->surface_control_ = const_cast< ::android::view::SurfaceControlProto*>(
      ::android::view::SurfaceControlProto::internal_default_instance());
}
class WindowContainerProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WindowContainerProto>()._has_bits_);
  static const ::com::android::server::wm::ConfigurationContainerProto& configuration_container(const WindowContainerProto* msg);
  static void set_has_configuration_container(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_visible(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::com::android::server::wm::SurfaceAnimatorProto& surface_animator(const WindowContainerProto* msg);
  static void set_has_surface_animator(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::com::android::server::wm::IdentifierProto& identifier(const WindowContainerProto* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::android::view::SurfaceControlProto& surface_control(const WindowContainerProto* msg);
  static void set_has_surface_control(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::com::android::server::wm::ConfigurationContainerProto&
WindowContainerProto::_Internal::configuration_container(const WindowContainerProto* msg) {
  return *msg->configuration_container_;
}
const ::com::android::server::wm::SurfaceAnimatorProto&
WindowContainerProto::_Internal::surface_animator(const WindowContainerProto* msg) {
  return *msg->surface_animator_;
}
const ::com::android::server::wm::IdentifierProto&
WindowContainerProto::_Internal::identifier(const WindowContainerProto* msg) {
  return *msg->identifier_;
}
const ::android::view::SurfaceControlProto&
WindowContainerProto::_Internal::surface_control(const WindowContainerProto* msg) {
  return *msg->surface_control_;
}
void WindowContainerProto::clear_surface_animator() {
  if (surface_animator_ != nullptr) surface_animator_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void WindowContainerProto::clear_surface_control() {
  if (surface_control_ != nullptr) surface_control_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
WindowContainerProto::WindowContainerProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.WindowContainerProto)
}
WindowContainerProto::WindowContainerProto(const WindowContainerProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      children_(from.children_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_configuration_container()) {
    configuration_container_ = new ::com::android::server::wm::ConfigurationContainerProto(*from.configuration_container_);
  } else {
    configuration_container_ = nullptr;
  }
  if (from.has_surface_animator()) {
    surface_animator_ = new ::com::android::server::wm::SurfaceAnimatorProto(*from.surface_animator_);
  } else {
    surface_animator_ = nullptr;
  }
  if (from.has_identifier()) {
    identifier_ = new ::com::android::server::wm::IdentifierProto(*from.identifier_);
  } else {
    identifier_ = nullptr;
  }
  if (from.has_surface_control()) {
    surface_control_ = new ::android::view::SurfaceControlProto(*from.surface_control_);
  } else {
    surface_control_ = nullptr;
  }
  ::memcpy(&orientation_, &from.orientation_,
    static_cast<size_t>(reinterpret_cast<char*>(&visible_) -
    reinterpret_cast<char*>(&orientation_)) + sizeof(visible_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.WindowContainerProto)
}

void WindowContainerProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&configuration_container_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visible_) -
      reinterpret_cast<char*>(&configuration_container_)) + sizeof(visible_));
}

WindowContainerProto::~WindowContainerProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.WindowContainerProto)
  SharedDtor();
}

void WindowContainerProto::SharedDtor() {
  if (this != internal_default_instance()) delete configuration_container_;
  if (this != internal_default_instance()) delete surface_animator_;
  if (this != internal_default_instance()) delete identifier_;
  if (this != internal_default_instance()) delete surface_control_;
}

void WindowContainerProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WindowContainerProto& WindowContainerProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void WindowContainerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.WindowContainerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(configuration_container_ != nullptr);
      configuration_container_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(surface_animator_ != nullptr);
      surface_animator_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(identifier_ != nullptr);
      identifier_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(surface_control_ != nullptr);
      surface_control_->Clear();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    ::memset(&orientation_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&visible_) -
        reinterpret_cast<char*>(&orientation_)) + sizeof(visible_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WindowContainerProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.wm.ConfigurationContainerProto configuration_container = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_configuration_container(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 orientation = 2 [(.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_orientation(&has_bits);
          orientation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool visible = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_visible(&has_bits);
          visible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.SurfaceAnimatorProto surface_animator = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_surface_animator(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.WindowContainerChildProto children = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_children(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.IdentifierProto identifier = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_identifier(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.SurfaceControlProto surface_control = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_surface_control(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WindowContainerProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.WindowContainerProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.wm.ConfigurationContainerProto configuration_container = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_configuration_container()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 orientation = 2 [(.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_orientation(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &orientation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool visible = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_visible(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.SurfaceAnimatorProto surface_animator = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_surface_animator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.WindowContainerChildProto children = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_children()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.IdentifierProto identifier = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.SurfaceControlProto surface_control = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_surface_control()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.WindowContainerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.WindowContainerProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WindowContainerProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.WindowContainerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.ConfigurationContainerProto configuration_container = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::configuration_container(this), output);
  }

  // optional int32 orientation = 2 [(.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->orientation(), output);
  }

  // optional bool visible = 3;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->visible(), output);
  }

  // optional .com.android.server.wm.SurfaceAnimatorProto surface_animator = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::surface_animator(this), output);
  }

  // repeated .com.android.server.wm.WindowContainerChildProto children = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->children(static_cast<int>(i)),
      output);
  }

  // optional .com.android.server.wm.IdentifierProto identifier = 6;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::identifier(this), output);
  }

  // optional .android.view.SurfaceControlProto surface_control = 7;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::surface_control(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.WindowContainerProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WindowContainerProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.WindowContainerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.ConfigurationContainerProto configuration_container = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::configuration_container(this), target);
  }

  // optional int32 orientation = 2 [(.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->orientation(), target);
  }

  // optional bool visible = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->visible(), target);
  }

  // optional .com.android.server.wm.SurfaceAnimatorProto surface_animator = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::surface_animator(this), target);
  }

  // repeated .com.android.server.wm.WindowContainerChildProto children = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->children(static_cast<int>(i)), target);
  }

  // optional .com.android.server.wm.IdentifierProto identifier = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::identifier(this), target);
  }

  // optional .android.view.SurfaceControlProto surface_control = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::surface_control(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.WindowContainerProto)
  return target;
}

size_t WindowContainerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.WindowContainerProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.wm.WindowContainerChildProto children = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->children_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->children(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .com.android.server.wm.ConfigurationContainerProto configuration_container = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *configuration_container_);
    }

    // optional .com.android.server.wm.SurfaceAnimatorProto surface_animator = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *surface_animator_);
    }

    // optional .com.android.server.wm.IdentifierProto identifier = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *identifier_);
    }

    // optional .android.view.SurfaceControlProto surface_control = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *surface_control_);
    }

    // optional int32 orientation = 2 [(.android.typedef) = "android.content.pm.ActivityInfo.ScreenOrientation"];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->orientation());
    }

    // optional bool visible = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WindowContainerProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.WindowContainerProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WindowContainerProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WindowContainerProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.WindowContainerProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.WindowContainerProto)
    MergeFrom(*source);
  }
}

void WindowContainerProto::MergeFrom(const WindowContainerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.WindowContainerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_configuration_container()->::com::android::server::wm::ConfigurationContainerProto::MergeFrom(from.configuration_container());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_surface_animator()->::com::android::server::wm::SurfaceAnimatorProto::MergeFrom(from.surface_animator());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_identifier()->::com::android::server::wm::IdentifierProto::MergeFrom(from.identifier());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_surface_control()->::android::view::SurfaceControlProto::MergeFrom(from.surface_control());
    }
    if (cached_has_bits & 0x00000010u) {
      orientation_ = from.orientation_;
    }
    if (cached_has_bits & 0x00000020u) {
      visible_ = from.visible_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WindowContainerProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.WindowContainerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WindowContainerProto::CopyFrom(const WindowContainerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.WindowContainerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowContainerProto::IsInitialized() const {
  return true;
}

void WindowContainerProto::InternalSwap(WindowContainerProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&children_)->InternalSwap(CastToBase(&other->children_));
  swap(configuration_container_, other->configuration_container_);
  swap(surface_animator_, other->surface_animator_);
  swap(identifier_, other->identifier_);
  swap(surface_control_, other->surface_control_);
  swap(orientation_, other->orientation_);
  swap(visible_, other->visible_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WindowContainerProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WindowContainerChildProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_WindowContainerChildProto_default_instance_._instance.get_mutable()->window_container_ = const_cast< ::com::android::server::wm::WindowContainerProto*>(
      ::com::android::server::wm::WindowContainerProto::internal_default_instance());
  ::com::android::server::wm::_WindowContainerChildProto_default_instance_._instance.get_mutable()->display_content_ = const_cast< ::com::android::server::wm::DisplayContentProto*>(
      ::com::android::server::wm::DisplayContentProto::internal_default_instance());
  ::com::android::server::wm::_WindowContainerChildProto_default_instance_._instance.get_mutable()->display_area_ = const_cast< ::com::android::server::wm::DisplayAreaProto*>(
      ::com::android::server::wm::DisplayAreaProto::internal_default_instance());
  ::com::android::server::wm::_WindowContainerChildProto_default_instance_._instance.get_mutable()->task_ = const_cast< ::com::android::server::wm::TaskProto*>(
      ::com::android::server::wm::TaskProto::internal_default_instance());
  ::com::android::server::wm::_WindowContainerChildProto_default_instance_._instance.get_mutable()->activity_ = const_cast< ::com::android::server::wm::ActivityRecordProto*>(
      ::com::android::server::wm::ActivityRecordProto::internal_default_instance());
  ::com::android::server::wm::_WindowContainerChildProto_default_instance_._instance.get_mutable()->window_token_ = const_cast< ::com::android::server::wm::WindowTokenProto*>(
      ::com::android::server::wm::WindowTokenProto::internal_default_instance());
  ::com::android::server::wm::_WindowContainerChildProto_default_instance_._instance.get_mutable()->window_ = const_cast< ::com::android::server::wm::WindowStateProto*>(
      ::com::android::server::wm::WindowStateProto::internal_default_instance());
  ::com::android::server::wm::_WindowContainerChildProto_default_instance_._instance.get_mutable()->task_fragment_ = const_cast< ::com::android::server::wm::TaskFragmentProto*>(
      ::com::android::server::wm::TaskFragmentProto::internal_default_instance());
}
class WindowContainerChildProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WindowContainerChildProto>()._has_bits_);
  static const ::com::android::server::wm::WindowContainerProto& window_container(const WindowContainerChildProto* msg);
  static void set_has_window_container(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::android::server::wm::DisplayContentProto& display_content(const WindowContainerChildProto* msg);
  static void set_has_display_content(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::com::android::server::wm::DisplayAreaProto& display_area(const WindowContainerChildProto* msg);
  static void set_has_display_area(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::com::android::server::wm::TaskProto& task(const WindowContainerChildProto* msg);
  static void set_has_task(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::com::android::server::wm::ActivityRecordProto& activity(const WindowContainerChildProto* msg);
  static void set_has_activity(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::com::android::server::wm::WindowTokenProto& window_token(const WindowContainerChildProto* msg);
  static void set_has_window_token(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::com::android::server::wm::WindowStateProto& window(const WindowContainerChildProto* msg);
  static void set_has_window(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::com::android::server::wm::TaskFragmentProto& task_fragment(const WindowContainerChildProto* msg);
  static void set_has_task_fragment(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

const ::com::android::server::wm::WindowContainerProto&
WindowContainerChildProto::_Internal::window_container(const WindowContainerChildProto* msg) {
  return *msg->window_container_;
}
const ::com::android::server::wm::DisplayContentProto&
WindowContainerChildProto::_Internal::display_content(const WindowContainerChildProto* msg) {
  return *msg->display_content_;
}
const ::com::android::server::wm::DisplayAreaProto&
WindowContainerChildProto::_Internal::display_area(const WindowContainerChildProto* msg) {
  return *msg->display_area_;
}
const ::com::android::server::wm::TaskProto&
WindowContainerChildProto::_Internal::task(const WindowContainerChildProto* msg) {
  return *msg->task_;
}
const ::com::android::server::wm::ActivityRecordProto&
WindowContainerChildProto::_Internal::activity(const WindowContainerChildProto* msg) {
  return *msg->activity_;
}
const ::com::android::server::wm::WindowTokenProto&
WindowContainerChildProto::_Internal::window_token(const WindowContainerChildProto* msg) {
  return *msg->window_token_;
}
const ::com::android::server::wm::WindowStateProto&
WindowContainerChildProto::_Internal::window(const WindowContainerChildProto* msg) {
  return *msg->window_;
}
const ::com::android::server::wm::TaskFragmentProto&
WindowContainerChildProto::_Internal::task_fragment(const WindowContainerChildProto* msg) {
  return *msg->task_fragment_;
}
WindowContainerChildProto::WindowContainerChildProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.WindowContainerChildProto)
}
WindowContainerChildProto::WindowContainerChildProto(const WindowContainerChildProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_window_container()) {
    window_container_ = new ::com::android::server::wm::WindowContainerProto(*from.window_container_);
  } else {
    window_container_ = nullptr;
  }
  if (from.has_display_content()) {
    display_content_ = new ::com::android::server::wm::DisplayContentProto(*from.display_content_);
  } else {
    display_content_ = nullptr;
  }
  if (from.has_display_area()) {
    display_area_ = new ::com::android::server::wm::DisplayAreaProto(*from.display_area_);
  } else {
    display_area_ = nullptr;
  }
  if (from.has_task()) {
    task_ = new ::com::android::server::wm::TaskProto(*from.task_);
  } else {
    task_ = nullptr;
  }
  if (from.has_activity()) {
    activity_ = new ::com::android::server::wm::ActivityRecordProto(*from.activity_);
  } else {
    activity_ = nullptr;
  }
  if (from.has_window_token()) {
    window_token_ = new ::com::android::server::wm::WindowTokenProto(*from.window_token_);
  } else {
    window_token_ = nullptr;
  }
  if (from.has_window()) {
    window_ = new ::com::android::server::wm::WindowStateProto(*from.window_);
  } else {
    window_ = nullptr;
  }
  if (from.has_task_fragment()) {
    task_fragment_ = new ::com::android::server::wm::TaskFragmentProto(*from.task_fragment_);
  } else {
    task_fragment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.WindowContainerChildProto)
}

void WindowContainerChildProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&window_container_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&task_fragment_) -
      reinterpret_cast<char*>(&window_container_)) + sizeof(task_fragment_));
}

WindowContainerChildProto::~WindowContainerChildProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.WindowContainerChildProto)
  SharedDtor();
}

void WindowContainerChildProto::SharedDtor() {
  if (this != internal_default_instance()) delete window_container_;
  if (this != internal_default_instance()) delete display_content_;
  if (this != internal_default_instance()) delete display_area_;
  if (this != internal_default_instance()) delete task_;
  if (this != internal_default_instance()) delete activity_;
  if (this != internal_default_instance()) delete window_token_;
  if (this != internal_default_instance()) delete window_;
  if (this != internal_default_instance()) delete task_fragment_;
}

void WindowContainerChildProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WindowContainerChildProto& WindowContainerChildProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void WindowContainerChildProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.WindowContainerChildProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(window_container_ != nullptr);
      window_container_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(display_content_ != nullptr);
      display_content_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(display_area_ != nullptr);
      display_area_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(task_ != nullptr);
      task_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(activity_ != nullptr);
      activity_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(window_token_ != nullptr);
      window_token_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(window_ != nullptr);
      window_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(task_fragment_ != nullptr);
      task_fragment_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WindowContainerChildProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_window_container(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.DisplayContentProto display_content = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_display_content(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.DisplayAreaProto display_area = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_display_area(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.TaskProto task = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_task(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.ActivityRecordProto activity = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_activity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowTokenProto window_token = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_window_token(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowStateProto window = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(mutable_window(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.TaskFragmentProto task_fragment = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_task_fragment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WindowContainerChildProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.WindowContainerChildProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.wm.WindowContainerProto window_container = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window_container()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.DisplayContentProto display_content = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_display_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.DisplayAreaProto display_area = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_display_area()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.TaskProto task = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.ActivityRecordProto activity = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_activity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowTokenProto window_token = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowStateProto window = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.TaskFragmentProto task_fragment = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_task_fragment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.WindowContainerChildProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.WindowContainerChildProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WindowContainerChildProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.WindowContainerChildProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::window_container(this), output);
  }

  // optional .com.android.server.wm.DisplayContentProto display_content = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::display_content(this), output);
  }

  // optional .com.android.server.wm.DisplayAreaProto display_area = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::display_area(this), output);
  }

  // optional .com.android.server.wm.TaskProto task = 5;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::task(this), output);
  }

  // optional .com.android.server.wm.ActivityRecordProto activity = 6;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::activity(this), output);
  }

  // optional .com.android.server.wm.WindowTokenProto window_token = 7;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::window_token(this), output);
  }

  // optional .com.android.server.wm.WindowStateProto window = 8;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, _Internal::window(this), output);
  }

  // optional .com.android.server.wm.TaskFragmentProto task_fragment = 9;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, _Internal::task_fragment(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.WindowContainerChildProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WindowContainerChildProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.WindowContainerChildProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.WindowContainerProto window_container = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::window_container(this), target);
  }

  // optional .com.android.server.wm.DisplayContentProto display_content = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::display_content(this), target);
  }

  // optional .com.android.server.wm.DisplayAreaProto display_area = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::display_area(this), target);
  }

  // optional .com.android.server.wm.TaskProto task = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::task(this), target);
  }

  // optional .com.android.server.wm.ActivityRecordProto activity = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::activity(this), target);
  }

  // optional .com.android.server.wm.WindowTokenProto window_token = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::window_token(this), target);
  }

  // optional .com.android.server.wm.WindowStateProto window = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::window(this), target);
  }

  // optional .com.android.server.wm.TaskFragmentProto task_fragment = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::task_fragment(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.WindowContainerChildProto)
  return target;
}

size_t WindowContainerChildProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.WindowContainerChildProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .com.android.server.wm.WindowContainerProto window_container = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_container_);
    }

    // optional .com.android.server.wm.DisplayContentProto display_content = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *display_content_);
    }

    // optional .com.android.server.wm.DisplayAreaProto display_area = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *display_area_);
    }

    // optional .com.android.server.wm.TaskProto task = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *task_);
    }

    // optional .com.android.server.wm.ActivityRecordProto activity = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *activity_);
    }

    // optional .com.android.server.wm.WindowTokenProto window_token = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_token_);
    }

    // optional .com.android.server.wm.WindowStateProto window = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_);
    }

    // optional .com.android.server.wm.TaskFragmentProto task_fragment = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *task_fragment_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WindowContainerChildProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.WindowContainerChildProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WindowContainerChildProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WindowContainerChildProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.WindowContainerChildProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.WindowContainerChildProto)
    MergeFrom(*source);
  }
}

void WindowContainerChildProto::MergeFrom(const WindowContainerChildProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.WindowContainerChildProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_window_container()->::com::android::server::wm::WindowContainerProto::MergeFrom(from.window_container());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_display_content()->::com::android::server::wm::DisplayContentProto::MergeFrom(from.display_content());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_display_area()->::com::android::server::wm::DisplayAreaProto::MergeFrom(from.display_area());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_task()->::com::android::server::wm::TaskProto::MergeFrom(from.task());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_activity()->::com::android::server::wm::ActivityRecordProto::MergeFrom(from.activity());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_window_token()->::com::android::server::wm::WindowTokenProto::MergeFrom(from.window_token());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_window()->::com::android::server::wm::WindowStateProto::MergeFrom(from.window());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_task_fragment()->::com::android::server::wm::TaskFragmentProto::MergeFrom(from.task_fragment());
    }
  }
}

void WindowContainerChildProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.WindowContainerChildProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WindowContainerChildProto::CopyFrom(const WindowContainerChildProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.WindowContainerChildProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowContainerChildProto::IsInitialized() const {
  return true;
}

void WindowContainerChildProto::InternalSwap(WindowContainerChildProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(window_container_, other->window_container_);
  swap(display_content_, other->display_content_);
  swap(display_area_, other->display_area_);
  swap(task_, other->task_);
  swap(activity_, other->activity_);
  swap(window_token_, other->window_token_);
  swap(window_, other->window_);
  swap(task_fragment_, other->task_fragment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WindowContainerChildProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigurationContainerProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_ConfigurationContainerProto_default_instance_._instance.get_mutable()->override_configuration_ = const_cast< ::android::content::ConfigurationProto*>(
      ::android::content::ConfigurationProto::internal_default_instance());
  ::com::android::server::wm::_ConfigurationContainerProto_default_instance_._instance.get_mutable()->full_configuration_ = const_cast< ::android::content::ConfigurationProto*>(
      ::android::content::ConfigurationProto::internal_default_instance());
  ::com::android::server::wm::_ConfigurationContainerProto_default_instance_._instance.get_mutable()->merged_override_configuration_ = const_cast< ::android::content::ConfigurationProto*>(
      ::android::content::ConfigurationProto::internal_default_instance());
}
class ConfigurationContainerProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ConfigurationContainerProto>()._has_bits_);
  static const ::android::content::ConfigurationProto& override_configuration(const ConfigurationContainerProto* msg);
  static void set_has_override_configuration(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::android::content::ConfigurationProto& full_configuration(const ConfigurationContainerProto* msg);
  static void set_has_full_configuration(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::android::content::ConfigurationProto& merged_override_configuration(const ConfigurationContainerProto* msg);
  static void set_has_merged_override_configuration(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::android::content::ConfigurationProto&
ConfigurationContainerProto::_Internal::override_configuration(const ConfigurationContainerProto* msg) {
  return *msg->override_configuration_;
}
const ::android::content::ConfigurationProto&
ConfigurationContainerProto::_Internal::full_configuration(const ConfigurationContainerProto* msg) {
  return *msg->full_configuration_;
}
const ::android::content::ConfigurationProto&
ConfigurationContainerProto::_Internal::merged_override_configuration(const ConfigurationContainerProto* msg) {
  return *msg->merged_override_configuration_;
}
void ConfigurationContainerProto::clear_override_configuration() {
  if (override_configuration_ != nullptr) override_configuration_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void ConfigurationContainerProto::clear_full_configuration() {
  if (full_configuration_ != nullptr) full_configuration_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void ConfigurationContainerProto::clear_merged_override_configuration() {
  if (merged_override_configuration_ != nullptr) merged_override_configuration_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
ConfigurationContainerProto::ConfigurationContainerProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.ConfigurationContainerProto)
}
ConfigurationContainerProto::ConfigurationContainerProto(const ConfigurationContainerProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_override_configuration()) {
    override_configuration_ = new ::android::content::ConfigurationProto(*from.override_configuration_);
  } else {
    override_configuration_ = nullptr;
  }
  if (from.has_full_configuration()) {
    full_configuration_ = new ::android::content::ConfigurationProto(*from.full_configuration_);
  } else {
    full_configuration_ = nullptr;
  }
  if (from.has_merged_override_configuration()) {
    merged_override_configuration_ = new ::android::content::ConfigurationProto(*from.merged_override_configuration_);
  } else {
    merged_override_configuration_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.ConfigurationContainerProto)
}

void ConfigurationContainerProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigurationContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&override_configuration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&merged_override_configuration_) -
      reinterpret_cast<char*>(&override_configuration_)) + sizeof(merged_override_configuration_));
}

ConfigurationContainerProto::~ConfigurationContainerProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.ConfigurationContainerProto)
  SharedDtor();
}

void ConfigurationContainerProto::SharedDtor() {
  if (this != internal_default_instance()) delete override_configuration_;
  if (this != internal_default_instance()) delete full_configuration_;
  if (this != internal_default_instance()) delete merged_override_configuration_;
}

void ConfigurationContainerProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigurationContainerProto& ConfigurationContainerProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigurationContainerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void ConfigurationContainerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.ConfigurationContainerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(override_configuration_ != nullptr);
      override_configuration_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(full_configuration_ != nullptr);
      full_configuration_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(merged_override_configuration_ != nullptr);
      merged_override_configuration_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConfigurationContainerProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.content.ConfigurationProto override_configuration = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_override_configuration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.content.ConfigurationProto full_configuration = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_full_configuration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.content.ConfigurationProto merged_override_configuration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_merged_override_configuration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConfigurationContainerProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.ConfigurationContainerProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.content.ConfigurationProto override_configuration = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_override_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.content.ConfigurationProto full_configuration = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_full_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.content.ConfigurationProto merged_override_configuration = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_merged_override_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.ConfigurationContainerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.ConfigurationContainerProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConfigurationContainerProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.ConfigurationContainerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.content.ConfigurationProto override_configuration = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::override_configuration(this), output);
  }

  // optional .android.content.ConfigurationProto full_configuration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::full_configuration(this), output);
  }

  // optional .android.content.ConfigurationProto merged_override_configuration = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::merged_override_configuration(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.ConfigurationContainerProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigurationContainerProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.ConfigurationContainerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.content.ConfigurationProto override_configuration = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::override_configuration(this), target);
  }

  // optional .android.content.ConfigurationProto full_configuration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::full_configuration(this), target);
  }

  // optional .android.content.ConfigurationProto merged_override_configuration = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::merged_override_configuration(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.ConfigurationContainerProto)
  return target;
}

size_t ConfigurationContainerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.ConfigurationContainerProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .android.content.ConfigurationProto override_configuration = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *override_configuration_);
    }

    // optional .android.content.ConfigurationProto full_configuration = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *full_configuration_);
    }

    // optional .android.content.ConfigurationProto merged_override_configuration = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *merged_override_configuration_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigurationContainerProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.ConfigurationContainerProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigurationContainerProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigurationContainerProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.ConfigurationContainerProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.ConfigurationContainerProto)
    MergeFrom(*source);
  }
}

void ConfigurationContainerProto::MergeFrom(const ConfigurationContainerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.ConfigurationContainerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_override_configuration()->::android::content::ConfigurationProto::MergeFrom(from.override_configuration());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_full_configuration()->::android::content::ConfigurationProto::MergeFrom(from.full_configuration());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_merged_override_configuration()->::android::content::ConfigurationProto::MergeFrom(from.merged_override_configuration());
    }
  }
}

void ConfigurationContainerProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.ConfigurationContainerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigurationContainerProto::CopyFrom(const ConfigurationContainerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.ConfigurationContainerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigurationContainerProto::IsInitialized() const {
  return true;
}

void ConfigurationContainerProto::InternalSwap(ConfigurationContainerProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(override_configuration_, other->override_configuration_);
  swap(full_configuration_, other->full_configuration_);
  swap(merged_override_configuration_, other->merged_override_configuration_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigurationContainerProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WindowFramesProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->containing_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->content_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->decor_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->display_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->outset_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->overscan_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->parent_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->visible_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->cutout_ = const_cast< ::android::view::DisplayCutoutProto*>(
      ::android::view::DisplayCutoutProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->content_insets_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->overscan_insets_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->visible_insets_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->stable_insets_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->outsets_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_WindowFramesProto_default_instance_._instance.get_mutable()->compat_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
}
class WindowFramesProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WindowFramesProto>()._has_bits_);
  static const ::android::graphics::RectProto& containing_frame(const WindowFramesProto* msg);
  static void set_has_containing_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::android::graphics::RectProto& content_frame(const WindowFramesProto* msg);
  static void set_has_content_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::android::graphics::RectProto& decor_frame(const WindowFramesProto* msg);
  static void set_has_decor_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::android::graphics::RectProto& display_frame(const WindowFramesProto* msg);
  static void set_has_display_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::android::graphics::RectProto& frame(const WindowFramesProto* msg);
  static void set_has_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::android::graphics::RectProto& outset_frame(const WindowFramesProto* msg);
  static void set_has_outset_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::android::graphics::RectProto& overscan_frame(const WindowFramesProto* msg);
  static void set_has_overscan_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::android::graphics::RectProto& parent_frame(const WindowFramesProto* msg);
  static void set_has_parent_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::android::graphics::RectProto& visible_frame(const WindowFramesProto* msg);
  static void set_has_visible_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::android::view::DisplayCutoutProto& cutout(const WindowFramesProto* msg);
  static void set_has_cutout(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::android::graphics::RectProto& content_insets(const WindowFramesProto* msg);
  static void set_has_content_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::android::graphics::RectProto& overscan_insets(const WindowFramesProto* msg);
  static void set_has_overscan_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::android::graphics::RectProto& visible_insets(const WindowFramesProto* msg);
  static void set_has_visible_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::android::graphics::RectProto& stable_insets(const WindowFramesProto* msg);
  static void set_has_stable_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::android::graphics::RectProto& outsets(const WindowFramesProto* msg);
  static void set_has_outsets(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::android::graphics::RectProto& compat_frame(const WindowFramesProto* msg);
  static void set_has_compat_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
};

const ::android::graphics::RectProto&
WindowFramesProto::_Internal::containing_frame(const WindowFramesProto* msg) {
  return *msg->containing_frame_;
}
const ::android::graphics::RectProto&
WindowFramesProto::_Internal::content_frame(const WindowFramesProto* msg) {
  return *msg->content_frame_;
}
const ::android::graphics::RectProto&
WindowFramesProto::_Internal::decor_frame(const WindowFramesProto* msg) {
  return *msg->decor_frame_;
}
const ::android::graphics::RectProto&
WindowFramesProto::_Internal::display_frame(const WindowFramesProto* msg) {
  return *msg->display_frame_;
}
const ::android::graphics::RectProto&
WindowFramesProto::_Internal::frame(const WindowFramesProto* msg) {
  return *msg->frame_;
}
const ::android::graphics::RectProto&
WindowFramesProto::_Internal::outset_frame(const WindowFramesProto* msg) {
  return *msg->outset_frame_;
}
const ::android::graphics::RectProto&
WindowFramesProto::_Internal::overscan_frame(const WindowFramesProto* msg) {
  return *msg->overscan_frame_;
}
const ::android::graphics::RectProto&
WindowFramesProto::_Internal::parent_frame(const WindowFramesProto* msg) {
  return *msg->parent_frame_;
}
const ::android::graphics::RectProto&
WindowFramesProto::_Internal::visible_frame(const WindowFramesProto* msg) {
  return *msg->visible_frame_;
}
const ::android::view::DisplayCutoutProto&
WindowFramesProto::_Internal::cutout(const WindowFramesProto* msg) {
  return *msg->cutout_;
}
const ::android::graphics::RectProto&
WindowFramesProto::_Internal::content_insets(const WindowFramesProto* msg) {
  return *msg->content_insets_;
}
const ::android::graphics::RectProto&
WindowFramesProto::_Internal::overscan_insets(const WindowFramesProto* msg) {
  return *msg->overscan_insets_;
}
const ::android::graphics::RectProto&
WindowFramesProto::_Internal::visible_insets(const WindowFramesProto* msg) {
  return *msg->visible_insets_;
}
const ::android::graphics::RectProto&
WindowFramesProto::_Internal::stable_insets(const WindowFramesProto* msg) {
  return *msg->stable_insets_;
}
const ::android::graphics::RectProto&
WindowFramesProto::_Internal::outsets(const WindowFramesProto* msg) {
  return *msg->outsets_;
}
const ::android::graphics::RectProto&
WindowFramesProto::_Internal::compat_frame(const WindowFramesProto* msg) {
  return *msg->compat_frame_;
}
void WindowFramesProto::clear_containing_frame() {
  if (containing_frame_ != nullptr) containing_frame_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void WindowFramesProto::clear_content_frame() {
  if (content_frame_ != nullptr) content_frame_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void WindowFramesProto::clear_decor_frame() {
  if (decor_frame_ != nullptr) decor_frame_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void WindowFramesProto::clear_display_frame() {
  if (display_frame_ != nullptr) display_frame_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void WindowFramesProto::clear_frame() {
  if (frame_ != nullptr) frame_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void WindowFramesProto::clear_outset_frame() {
  if (outset_frame_ != nullptr) outset_frame_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
void WindowFramesProto::clear_overscan_frame() {
  if (overscan_frame_ != nullptr) overscan_frame_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
void WindowFramesProto::clear_parent_frame() {
  if (parent_frame_ != nullptr) parent_frame_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
void WindowFramesProto::clear_visible_frame() {
  if (visible_frame_ != nullptr) visible_frame_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
void WindowFramesProto::clear_cutout() {
  if (cutout_ != nullptr) cutout_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
void WindowFramesProto::clear_content_insets() {
  if (content_insets_ != nullptr) content_insets_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
void WindowFramesProto::clear_overscan_insets() {
  if (overscan_insets_ != nullptr) overscan_insets_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
void WindowFramesProto::clear_visible_insets() {
  if (visible_insets_ != nullptr) visible_insets_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
void WindowFramesProto::clear_stable_insets() {
  if (stable_insets_ != nullptr) stable_insets_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
void WindowFramesProto::clear_outsets() {
  if (outsets_ != nullptr) outsets_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
void WindowFramesProto::clear_compat_frame() {
  if (compat_frame_ != nullptr) compat_frame_->Clear();
  _has_bits_[0] &= ~0x00008000u;
}
WindowFramesProto::WindowFramesProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.WindowFramesProto)
}
WindowFramesProto::WindowFramesProto(const WindowFramesProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_containing_frame()) {
    containing_frame_ = new ::android::graphics::RectProto(*from.containing_frame_);
  } else {
    containing_frame_ = nullptr;
  }
  if (from.has_content_frame()) {
    content_frame_ = new ::android::graphics::RectProto(*from.content_frame_);
  } else {
    content_frame_ = nullptr;
  }
  if (from.has_decor_frame()) {
    decor_frame_ = new ::android::graphics::RectProto(*from.decor_frame_);
  } else {
    decor_frame_ = nullptr;
  }
  if (from.has_display_frame()) {
    display_frame_ = new ::android::graphics::RectProto(*from.display_frame_);
  } else {
    display_frame_ = nullptr;
  }
  if (from.has_frame()) {
    frame_ = new ::android::graphics::RectProto(*from.frame_);
  } else {
    frame_ = nullptr;
  }
  if (from.has_outset_frame()) {
    outset_frame_ = new ::android::graphics::RectProto(*from.outset_frame_);
  } else {
    outset_frame_ = nullptr;
  }
  if (from.has_overscan_frame()) {
    overscan_frame_ = new ::android::graphics::RectProto(*from.overscan_frame_);
  } else {
    overscan_frame_ = nullptr;
  }
  if (from.has_parent_frame()) {
    parent_frame_ = new ::android::graphics::RectProto(*from.parent_frame_);
  } else {
    parent_frame_ = nullptr;
  }
  if (from.has_visible_frame()) {
    visible_frame_ = new ::android::graphics::RectProto(*from.visible_frame_);
  } else {
    visible_frame_ = nullptr;
  }
  if (from.has_cutout()) {
    cutout_ = new ::android::view::DisplayCutoutProto(*from.cutout_);
  } else {
    cutout_ = nullptr;
  }
  if (from.has_content_insets()) {
    content_insets_ = new ::android::graphics::RectProto(*from.content_insets_);
  } else {
    content_insets_ = nullptr;
  }
  if (from.has_overscan_insets()) {
    overscan_insets_ = new ::android::graphics::RectProto(*from.overscan_insets_);
  } else {
    overscan_insets_ = nullptr;
  }
  if (from.has_visible_insets()) {
    visible_insets_ = new ::android::graphics::RectProto(*from.visible_insets_);
  } else {
    visible_insets_ = nullptr;
  }
  if (from.has_stable_insets()) {
    stable_insets_ = new ::android::graphics::RectProto(*from.stable_insets_);
  } else {
    stable_insets_ = nullptr;
  }
  if (from.has_outsets()) {
    outsets_ = new ::android::graphics::RectProto(*from.outsets_);
  } else {
    outsets_ = nullptr;
  }
  if (from.has_compat_frame()) {
    compat_frame_ = new ::android::graphics::RectProto(*from.compat_frame_);
  } else {
    compat_frame_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.WindowFramesProto)
}

void WindowFramesProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WindowFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&containing_frame_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compat_frame_) -
      reinterpret_cast<char*>(&containing_frame_)) + sizeof(compat_frame_));
}

WindowFramesProto::~WindowFramesProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.WindowFramesProto)
  SharedDtor();
}

void WindowFramesProto::SharedDtor() {
  if (this != internal_default_instance()) delete containing_frame_;
  if (this != internal_default_instance()) delete content_frame_;
  if (this != internal_default_instance()) delete decor_frame_;
  if (this != internal_default_instance()) delete display_frame_;
  if (this != internal_default_instance()) delete frame_;
  if (this != internal_default_instance()) delete outset_frame_;
  if (this != internal_default_instance()) delete overscan_frame_;
  if (this != internal_default_instance()) delete parent_frame_;
  if (this != internal_default_instance()) delete visible_frame_;
  if (this != internal_default_instance()) delete cutout_;
  if (this != internal_default_instance()) delete content_insets_;
  if (this != internal_default_instance()) delete overscan_insets_;
  if (this != internal_default_instance()) delete visible_insets_;
  if (this != internal_default_instance()) delete stable_insets_;
  if (this != internal_default_instance()) delete outsets_;
  if (this != internal_default_instance()) delete compat_frame_;
}

void WindowFramesProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WindowFramesProto& WindowFramesProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WindowFramesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void WindowFramesProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.WindowFramesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(containing_frame_ != nullptr);
      containing_frame_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(content_frame_ != nullptr);
      content_frame_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(decor_frame_ != nullptr);
      decor_frame_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(display_frame_ != nullptr);
      display_frame_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(frame_ != nullptr);
      frame_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(outset_frame_ != nullptr);
      outset_frame_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(overscan_frame_ != nullptr);
      overscan_frame_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(parent_frame_ != nullptr);
      parent_frame_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(visible_frame_ != nullptr);
      visible_frame_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(cutout_ != nullptr);
      cutout_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(content_insets_ != nullptr);
      content_insets_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(overscan_insets_ != nullptr);
      overscan_insets_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(visible_insets_ != nullptr);
      visible_insets_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(stable_insets_ != nullptr);
      stable_insets_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(outsets_ != nullptr);
      outsets_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(compat_frame_ != nullptr);
      compat_frame_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WindowFramesProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.graphics.RectProto containing_frame = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_containing_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto content_frame = 2 [deprecated = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_content_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto decor_frame = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_decor_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto display_frame = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_display_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto frame = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto outset_frame = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_outset_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto overscan_frame = 7 [deprecated = true];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_overscan_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto parent_frame = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(mutable_parent_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto visible_frame = 9 [deprecated = true];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_visible_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.DisplayCutoutProto cutout = 10 [deprecated = true];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_cutout(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto content_insets = 11 [deprecated = true];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(mutable_content_insets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto overscan_insets = 12 [deprecated = true];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(mutable_overscan_insets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto visible_insets = 13 [deprecated = true];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(mutable_visible_insets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto stable_insets = 14 [deprecated = true];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(mutable_stable_insets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto outsets = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(mutable_outsets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto compat_frame = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(mutable_compat_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WindowFramesProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.WindowFramesProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.graphics.RectProto containing_frame = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_containing_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto content_frame = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_content_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto decor_frame = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_decor_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto display_frame = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_display_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto frame = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto outset_frame = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_outset_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto overscan_frame = 7 [deprecated = true];
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_overscan_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto parent_frame = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_parent_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto visible_frame = 9 [deprecated = true];
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_visible_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.DisplayCutoutProto cutout = 10 [deprecated = true];
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_cutout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto content_insets = 11 [deprecated = true];
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_content_insets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto overscan_insets = 12 [deprecated = true];
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_overscan_insets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto visible_insets = 13 [deprecated = true];
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_visible_insets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto stable_insets = 14 [deprecated = true];
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (114 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_stable_insets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto outsets = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (122 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_outsets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto compat_frame = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (130 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_compat_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.WindowFramesProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.WindowFramesProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WindowFramesProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.WindowFramesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.graphics.RectProto containing_frame = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::containing_frame(this), output);
  }

  // optional .android.graphics.RectProto content_frame = 2 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::content_frame(this), output);
  }

  // optional .android.graphics.RectProto decor_frame = 3 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::decor_frame(this), output);
  }

  // optional .android.graphics.RectProto display_frame = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::display_frame(this), output);
  }

  // optional .android.graphics.RectProto frame = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::frame(this), output);
  }

  // optional .android.graphics.RectProto outset_frame = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::outset_frame(this), output);
  }

  // optional .android.graphics.RectProto overscan_frame = 7 [deprecated = true];
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::overscan_frame(this), output);
  }

  // optional .android.graphics.RectProto parent_frame = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, _Internal::parent_frame(this), output);
  }

  // optional .android.graphics.RectProto visible_frame = 9 [deprecated = true];
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, _Internal::visible_frame(this), output);
  }

  // optional .android.view.DisplayCutoutProto cutout = 10 [deprecated = true];
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, _Internal::cutout(this), output);
  }

  // optional .android.graphics.RectProto content_insets = 11 [deprecated = true];
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, _Internal::content_insets(this), output);
  }

  // optional .android.graphics.RectProto overscan_insets = 12 [deprecated = true];
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, _Internal::overscan_insets(this), output);
  }

  // optional .android.graphics.RectProto visible_insets = 13 [deprecated = true];
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, _Internal::visible_insets(this), output);
  }

  // optional .android.graphics.RectProto stable_insets = 14 [deprecated = true];
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, _Internal::stable_insets(this), output);
  }

  // optional .android.graphics.RectProto outsets = 15;
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, _Internal::outsets(this), output);
  }

  // optional .android.graphics.RectProto compat_frame = 16;
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, _Internal::compat_frame(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.WindowFramesProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WindowFramesProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.WindowFramesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.graphics.RectProto containing_frame = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::containing_frame(this), target);
  }

  // optional .android.graphics.RectProto content_frame = 2 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::content_frame(this), target);
  }

  // optional .android.graphics.RectProto decor_frame = 3 [deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::decor_frame(this), target);
  }

  // optional .android.graphics.RectProto display_frame = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::display_frame(this), target);
  }

  // optional .android.graphics.RectProto frame = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::frame(this), target);
  }

  // optional .android.graphics.RectProto outset_frame = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::outset_frame(this), target);
  }

  // optional .android.graphics.RectProto overscan_frame = 7 [deprecated = true];
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::overscan_frame(this), target);
  }

  // optional .android.graphics.RectProto parent_frame = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::parent_frame(this), target);
  }

  // optional .android.graphics.RectProto visible_frame = 9 [deprecated = true];
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::visible_frame(this), target);
  }

  // optional .android.view.DisplayCutoutProto cutout = 10 [deprecated = true];
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, _Internal::cutout(this), target);
  }

  // optional .android.graphics.RectProto content_insets = 11 [deprecated = true];
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, _Internal::content_insets(this), target);
  }

  // optional .android.graphics.RectProto overscan_insets = 12 [deprecated = true];
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, _Internal::overscan_insets(this), target);
  }

  // optional .android.graphics.RectProto visible_insets = 13 [deprecated = true];
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, _Internal::visible_insets(this), target);
  }

  // optional .android.graphics.RectProto stable_insets = 14 [deprecated = true];
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, _Internal::stable_insets(this), target);
  }

  // optional .android.graphics.RectProto outsets = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, _Internal::outsets(this), target);
  }

  // optional .android.graphics.RectProto compat_frame = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, _Internal::compat_frame(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.WindowFramesProto)
  return target;
}

size_t WindowFramesProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.WindowFramesProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .android.graphics.RectProto containing_frame = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *containing_frame_);
    }

    // optional .android.graphics.RectProto content_frame = 2 [deprecated = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *content_frame_);
    }

    // optional .android.graphics.RectProto decor_frame = 3 [deprecated = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *decor_frame_);
    }

    // optional .android.graphics.RectProto display_frame = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *display_frame_);
    }

    // optional .android.graphics.RectProto frame = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *frame_);
    }

    // optional .android.graphics.RectProto outset_frame = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *outset_frame_);
    }

    // optional .android.graphics.RectProto overscan_frame = 7 [deprecated = true];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *overscan_frame_);
    }

    // optional .android.graphics.RectProto parent_frame = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *parent_frame_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .android.graphics.RectProto visible_frame = 9 [deprecated = true];
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *visible_frame_);
    }

    // optional .android.view.DisplayCutoutProto cutout = 10 [deprecated = true];
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cutout_);
    }

    // optional .android.graphics.RectProto content_insets = 11 [deprecated = true];
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *content_insets_);
    }

    // optional .android.graphics.RectProto overscan_insets = 12 [deprecated = true];
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *overscan_insets_);
    }

    // optional .android.graphics.RectProto visible_insets = 13 [deprecated = true];
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *visible_insets_);
    }

    // optional .android.graphics.RectProto stable_insets = 14 [deprecated = true];
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *stable_insets_);
    }

    // optional .android.graphics.RectProto outsets = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *outsets_);
    }

    // optional .android.graphics.RectProto compat_frame = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *compat_frame_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WindowFramesProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.WindowFramesProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WindowFramesProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WindowFramesProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.WindowFramesProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.WindowFramesProto)
    MergeFrom(*source);
  }
}

void WindowFramesProto::MergeFrom(const WindowFramesProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.WindowFramesProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_containing_frame()->::android::graphics::RectProto::MergeFrom(from.containing_frame());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_content_frame()->::android::graphics::RectProto::MergeFrom(from.content_frame());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_decor_frame()->::android::graphics::RectProto::MergeFrom(from.decor_frame());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_display_frame()->::android::graphics::RectProto::MergeFrom(from.display_frame());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_frame()->::android::graphics::RectProto::MergeFrom(from.frame());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_outset_frame()->::android::graphics::RectProto::MergeFrom(from.outset_frame());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_overscan_frame()->::android::graphics::RectProto::MergeFrom(from.overscan_frame());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_parent_frame()->::android::graphics::RectProto::MergeFrom(from.parent_frame());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_visible_frame()->::android::graphics::RectProto::MergeFrom(from.visible_frame());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_cutout()->::android::view::DisplayCutoutProto::MergeFrom(from.cutout());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_content_insets()->::android::graphics::RectProto::MergeFrom(from.content_insets());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_overscan_insets()->::android::graphics::RectProto::MergeFrom(from.overscan_insets());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_visible_insets()->::android::graphics::RectProto::MergeFrom(from.visible_insets());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_stable_insets()->::android::graphics::RectProto::MergeFrom(from.stable_insets());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_outsets()->::android::graphics::RectProto::MergeFrom(from.outsets());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_compat_frame()->::android::graphics::RectProto::MergeFrom(from.compat_frame());
    }
  }
}

void WindowFramesProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.WindowFramesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WindowFramesProto::CopyFrom(const WindowFramesProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.WindowFramesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowFramesProto::IsInitialized() const {
  return true;
}

void WindowFramesProto::InternalSwap(WindowFramesProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(containing_frame_, other->containing_frame_);
  swap(content_frame_, other->content_frame_);
  swap(decor_frame_, other->decor_frame_);
  swap(display_frame_, other->display_frame_);
  swap(frame_, other->frame_);
  swap(outset_frame_, other->outset_frame_);
  swap(overscan_frame_, other->overscan_frame_);
  swap(parent_frame_, other->parent_frame_);
  swap(visible_frame_, other->visible_frame_);
  swap(cutout_, other->cutout_);
  swap(content_insets_, other->content_insets_);
  swap(overscan_insets_, other->overscan_insets_);
  swap(visible_insets_, other->visible_insets_);
  swap(stable_insets_, other->stable_insets_);
  swap(outsets_, other->outsets_);
  swap(compat_frame_, other->compat_frame_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WindowFramesProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InsetsSourceProviderProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_InsetsSourceProviderProto_default_instance_._instance.get_mutable()->source_ = const_cast< ::android::view::InsetsSourceProto*>(
      ::android::view::InsetsSourceProto::internal_default_instance());
  ::com::android::server::wm::_InsetsSourceProviderProto_default_instance_._instance.get_mutable()->frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::com::android::server::wm::_InsetsSourceProviderProto_default_instance_._instance.get_mutable()->fake_control_ = const_cast< ::android::view::InsetsSourceControlProto*>(
      ::android::view::InsetsSourceControlProto::internal_default_instance());
  ::com::android::server::wm::_InsetsSourceProviderProto_default_instance_._instance.get_mutable()->control_ = const_cast< ::android::view::InsetsSourceControlProto*>(
      ::android::view::InsetsSourceControlProto::internal_default_instance());
  ::com::android::server::wm::_InsetsSourceProviderProto_default_instance_._instance.get_mutable()->control_target_ = const_cast< ::com::android::server::wm::WindowStateProto*>(
      ::com::android::server::wm::WindowStateProto::internal_default_instance());
  ::com::android::server::wm::_InsetsSourceProviderProto_default_instance_._instance.get_mutable()->pending_control_target_ = const_cast< ::com::android::server::wm::WindowStateProto*>(
      ::com::android::server::wm::WindowStateProto::internal_default_instance());
  ::com::android::server::wm::_InsetsSourceProviderProto_default_instance_._instance.get_mutable()->fake_control_target_ = const_cast< ::com::android::server::wm::WindowStateProto*>(
      ::com::android::server::wm::WindowStateProto::internal_default_instance());
  ::com::android::server::wm::_InsetsSourceProviderProto_default_instance_._instance.get_mutable()->captured_leash_ = const_cast< ::android::view::SurfaceControlProto*>(
      ::android::view::SurfaceControlProto::internal_default_instance());
  ::com::android::server::wm::_InsetsSourceProviderProto_default_instance_._instance.get_mutable()->ime_overridden_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
}
class InsetsSourceProviderProto::_Internal {
 public:
  using HasBits = decltype(std::declval<InsetsSourceProviderProto>()._has_bits_);
  static const ::android::view::InsetsSourceProto& source(const InsetsSourceProviderProto* msg);
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::android::graphics::RectProto& frame(const InsetsSourceProviderProto* msg);
  static void set_has_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::android::view::InsetsSourceControlProto& fake_control(const InsetsSourceProviderProto* msg);
  static void set_has_fake_control(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::android::view::InsetsSourceControlProto& control(const InsetsSourceProviderProto* msg);
  static void set_has_control(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::com::android::server::wm::WindowStateProto& control_target(const InsetsSourceProviderProto* msg);
  static void set_has_control_target(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::com::android::server::wm::WindowStateProto& pending_control_target(const InsetsSourceProviderProto* msg);
  static void set_has_pending_control_target(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::com::android::server::wm::WindowStateProto& fake_control_target(const InsetsSourceProviderProto* msg);
  static void set_has_fake_control_target(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::android::view::SurfaceControlProto& captured_leash(const InsetsSourceProviderProto* msg);
  static void set_has_captured_leash(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::android::graphics::RectProto& ime_overridden_frame(const InsetsSourceProviderProto* msg);
  static void set_has_ime_overridden_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_is_leash_ready_for_dispatching(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_client_visible(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_server_visible(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_seamless_rotating(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_finish_seamless_rotate_frame_number(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_controllable(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
};

const ::android::view::InsetsSourceProto&
InsetsSourceProviderProto::_Internal::source(const InsetsSourceProviderProto* msg) {
  return *msg->source_;
}
const ::android::graphics::RectProto&
InsetsSourceProviderProto::_Internal::frame(const InsetsSourceProviderProto* msg) {
  return *msg->frame_;
}
const ::android::view::InsetsSourceControlProto&
InsetsSourceProviderProto::_Internal::fake_control(const InsetsSourceProviderProto* msg) {
  return *msg->fake_control_;
}
const ::android::view::InsetsSourceControlProto&
InsetsSourceProviderProto::_Internal::control(const InsetsSourceProviderProto* msg) {
  return *msg->control_;
}
const ::com::android::server::wm::WindowStateProto&
InsetsSourceProviderProto::_Internal::control_target(const InsetsSourceProviderProto* msg) {
  return *msg->control_target_;
}
const ::com::android::server::wm::WindowStateProto&
InsetsSourceProviderProto::_Internal::pending_control_target(const InsetsSourceProviderProto* msg) {
  return *msg->pending_control_target_;
}
const ::com::android::server::wm::WindowStateProto&
InsetsSourceProviderProto::_Internal::fake_control_target(const InsetsSourceProviderProto* msg) {
  return *msg->fake_control_target_;
}
const ::android::view::SurfaceControlProto&
InsetsSourceProviderProto::_Internal::captured_leash(const InsetsSourceProviderProto* msg) {
  return *msg->captured_leash_;
}
const ::android::graphics::RectProto&
InsetsSourceProviderProto::_Internal::ime_overridden_frame(const InsetsSourceProviderProto* msg) {
  return *msg->ime_overridden_frame_;
}
void InsetsSourceProviderProto::clear_source() {
  if (source_ != nullptr) source_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void InsetsSourceProviderProto::clear_frame() {
  if (frame_ != nullptr) frame_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void InsetsSourceProviderProto::clear_fake_control() {
  if (fake_control_ != nullptr) fake_control_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void InsetsSourceProviderProto::clear_control() {
  if (control_ != nullptr) control_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void InsetsSourceProviderProto::clear_captured_leash() {
  if (captured_leash_ != nullptr) captured_leash_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
void InsetsSourceProviderProto::clear_ime_overridden_frame() {
  if (ime_overridden_frame_ != nullptr) ime_overridden_frame_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
InsetsSourceProviderProto::InsetsSourceProviderProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.InsetsSourceProviderProto)
}
InsetsSourceProviderProto::InsetsSourceProviderProto(const InsetsSourceProviderProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source()) {
    source_ = new ::android::view::InsetsSourceProto(*from.source_);
  } else {
    source_ = nullptr;
  }
  if (from.has_frame()) {
    frame_ = new ::android::graphics::RectProto(*from.frame_);
  } else {
    frame_ = nullptr;
  }
  if (from.has_fake_control()) {
    fake_control_ = new ::android::view::InsetsSourceControlProto(*from.fake_control_);
  } else {
    fake_control_ = nullptr;
  }
  if (from.has_control()) {
    control_ = new ::android::view::InsetsSourceControlProto(*from.control_);
  } else {
    control_ = nullptr;
  }
  if (from.has_control_target()) {
    control_target_ = new ::com::android::server::wm::WindowStateProto(*from.control_target_);
  } else {
    control_target_ = nullptr;
  }
  if (from.has_pending_control_target()) {
    pending_control_target_ = new ::com::android::server::wm::WindowStateProto(*from.pending_control_target_);
  } else {
    pending_control_target_ = nullptr;
  }
  if (from.has_fake_control_target()) {
    fake_control_target_ = new ::com::android::server::wm::WindowStateProto(*from.fake_control_target_);
  } else {
    fake_control_target_ = nullptr;
  }
  if (from.has_captured_leash()) {
    captured_leash_ = new ::android::view::SurfaceControlProto(*from.captured_leash_);
  } else {
    captured_leash_ = nullptr;
  }
  if (from.has_ime_overridden_frame()) {
    ime_overridden_frame_ = new ::android::graphics::RectProto(*from.ime_overridden_frame_);
  } else {
    ime_overridden_frame_ = nullptr;
  }
  ::memcpy(&is_leash_ready_for_dispatching_, &from.is_leash_ready_for_dispatching_,
    static_cast<size_t>(reinterpret_cast<char*>(&finish_seamless_rotate_frame_number_) -
    reinterpret_cast<char*>(&is_leash_ready_for_dispatching_)) + sizeof(finish_seamless_rotate_frame_number_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.InsetsSourceProviderProto)
}

void InsetsSourceProviderProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finish_seamless_rotate_frame_number_) -
      reinterpret_cast<char*>(&source_)) + sizeof(finish_seamless_rotate_frame_number_));
}

InsetsSourceProviderProto::~InsetsSourceProviderProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.InsetsSourceProviderProto)
  SharedDtor();
}

void InsetsSourceProviderProto::SharedDtor() {
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete frame_;
  if (this != internal_default_instance()) delete fake_control_;
  if (this != internal_default_instance()) delete control_;
  if (this != internal_default_instance()) delete control_target_;
  if (this != internal_default_instance()) delete pending_control_target_;
  if (this != internal_default_instance()) delete fake_control_target_;
  if (this != internal_default_instance()) delete captured_leash_;
  if (this != internal_default_instance()) delete ime_overridden_frame_;
}

void InsetsSourceProviderProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InsetsSourceProviderProto& InsetsSourceProviderProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void InsetsSourceProviderProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.InsetsSourceProviderProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(source_ != nullptr);
      source_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(frame_ != nullptr);
      frame_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(fake_control_ != nullptr);
      fake_control_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(control_ != nullptr);
      control_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(control_target_ != nullptr);
      control_target_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(pending_control_target_ != nullptr);
      pending_control_target_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(fake_control_target_ != nullptr);
      fake_control_target_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(captured_leash_ != nullptr);
      captured_leash_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(ime_overridden_frame_ != nullptr);
    ime_overridden_frame_->Clear();
  }
  if (cached_has_bits & 0x00007e00u) {
    ::memset(&is_leash_ready_for_dispatching_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&finish_seamless_rotate_frame_number_) -
        reinterpret_cast<char*>(&is_leash_ready_for_dispatching_)) + sizeof(finish_seamless_rotate_frame_number_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InsetsSourceProviderProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.view.InsetsSourceProto source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto frame = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.InsetsSourceControlProto fake_control = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_fake_control(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.InsetsSourceControlProto control = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_control(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowStateProto control_target = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_control_target(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowStateProto pending_control_target = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_pending_control_target(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowStateProto fake_control_target = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_fake_control_target(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.SurfaceControlProto captured_leash = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(mutable_captured_leash(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto ime_overridden_frame = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_ime_overridden_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_leash_ready_for_dispatching = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_is_leash_ready_for_dispatching(&has_bits);
          is_leash_ready_for_dispatching_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool client_visible = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_client_visible(&has_bits);
          client_visible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool server_visible = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_server_visible(&has_bits);
          server_visible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool seamless_rotating = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_seamless_rotating(&has_bits);
          seamless_rotating_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 finish_seamless_rotate_frame_number = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_finish_seamless_rotate_frame_number(&has_bits);
          finish_seamless_rotate_frame_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool controllable = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_controllable(&has_bits);
          controllable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InsetsSourceProviderProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.InsetsSourceProviderProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.view.InsetsSourceProto source = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto frame = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.InsetsSourceControlProto fake_control = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_fake_control()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.InsetsSourceControlProto control = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_control()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowStateProto control_target = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_control_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowStateProto pending_control_target = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_pending_control_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowStateProto fake_control_target = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_fake_control_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.SurfaceControlProto captured_leash = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_captured_leash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto ime_overridden_frame = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_ime_overridden_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_leash_ready_for_dispatching = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          _Internal::set_has_is_leash_ready_for_dispatching(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_leash_ready_for_dispatching_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool client_visible = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          _Internal::set_has_client_visible(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &client_visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool server_visible = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {
          _Internal::set_has_server_visible(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &server_visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool seamless_rotating = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (104 & 0xFF)) {
          _Internal::set_has_seamless_rotating(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &seamless_rotating_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 finish_seamless_rotate_frame_number = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          _Internal::set_has_finish_seamless_rotate_frame_number(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &finish_seamless_rotate_frame_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool controllable = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (120 & 0xFF)) {
          _Internal::set_has_controllable(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &controllable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.InsetsSourceProviderProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.InsetsSourceProviderProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InsetsSourceProviderProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.InsetsSourceProviderProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.view.InsetsSourceProto source = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::source(this), output);
  }

  // optional .android.graphics.RectProto frame = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::frame(this), output);
  }

  // optional .android.view.InsetsSourceControlProto fake_control = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::fake_control(this), output);
  }

  // optional .android.view.InsetsSourceControlProto control = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::control(this), output);
  }

  // optional .com.android.server.wm.WindowStateProto control_target = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::control_target(this), output);
  }

  // optional .com.android.server.wm.WindowStateProto pending_control_target = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::pending_control_target(this), output);
  }

  // optional .com.android.server.wm.WindowStateProto fake_control_target = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::fake_control_target(this), output);
  }

  // optional .android.view.SurfaceControlProto captured_leash = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, _Internal::captured_leash(this), output);
  }

  // optional .android.graphics.RectProto ime_overridden_frame = 9;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, _Internal::ime_overridden_frame(this), output);
  }

  // optional bool is_leash_ready_for_dispatching = 10;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(10, this->is_leash_ready_for_dispatching(), output);
  }

  // optional bool client_visible = 11;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(11, this->client_visible(), output);
  }

  // optional bool server_visible = 12;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(12, this->server_visible(), output);
  }

  // optional bool seamless_rotating = 13;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(13, this->seamless_rotating(), output);
  }

  // optional int64 finish_seamless_rotate_frame_number = 14;
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(14, this->finish_seamless_rotate_frame_number(), output);
  }

  // optional bool controllable = 15;
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(15, this->controllable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.InsetsSourceProviderProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* InsetsSourceProviderProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.InsetsSourceProviderProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.view.InsetsSourceProto source = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::source(this), target);
  }

  // optional .android.graphics.RectProto frame = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::frame(this), target);
  }

  // optional .android.view.InsetsSourceControlProto fake_control = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::fake_control(this), target);
  }

  // optional .android.view.InsetsSourceControlProto control = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::control(this), target);
  }

  // optional .com.android.server.wm.WindowStateProto control_target = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::control_target(this), target);
  }

  // optional .com.android.server.wm.WindowStateProto pending_control_target = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::pending_control_target(this), target);
  }

  // optional .com.android.server.wm.WindowStateProto fake_control_target = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::fake_control_target(this), target);
  }

  // optional .android.view.SurfaceControlProto captured_leash = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::captured_leash(this), target);
  }

  // optional .android.graphics.RectProto ime_overridden_frame = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::ime_overridden_frame(this), target);
  }

  // optional bool is_leash_ready_for_dispatching = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->is_leash_ready_for_dispatching(), target);
  }

  // optional bool client_visible = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->client_visible(), target);
  }

  // optional bool server_visible = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->server_visible(), target);
  }

  // optional bool seamless_rotating = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(13, this->seamless_rotating(), target);
  }

  // optional int64 finish_seamless_rotate_frame_number = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(14, this->finish_seamless_rotate_frame_number(), target);
  }

  // optional bool controllable = 15;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(15, this->controllable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.InsetsSourceProviderProto)
  return target;
}

size_t InsetsSourceProviderProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.InsetsSourceProviderProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .android.view.InsetsSourceProto source = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *source_);
    }

    // optional .android.graphics.RectProto frame = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *frame_);
    }

    // optional .android.view.InsetsSourceControlProto fake_control = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *fake_control_);
    }

    // optional .android.view.InsetsSourceControlProto control = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *control_);
    }

    // optional .com.android.server.wm.WindowStateProto control_target = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *control_target_);
    }

    // optional .com.android.server.wm.WindowStateProto pending_control_target = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pending_control_target_);
    }

    // optional .com.android.server.wm.WindowStateProto fake_control_target = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *fake_control_target_);
    }

    // optional .android.view.SurfaceControlProto captured_leash = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *captured_leash_);
    }

  }
  if (cached_has_bits & 0x00007f00u) {
    // optional .android.graphics.RectProto ime_overridden_frame = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ime_overridden_frame_);
    }

    // optional bool is_leash_ready_for_dispatching = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

    // optional bool client_visible = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool server_visible = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool seamless_rotating = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional bool controllable = 15;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

    // optional int64 finish_seamless_rotate_frame_number = 14;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->finish_seamless_rotate_frame_number());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsetsSourceProviderProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.InsetsSourceProviderProto)
  GOOGLE_DCHECK_NE(&from, this);
  const InsetsSourceProviderProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InsetsSourceProviderProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.InsetsSourceProviderProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.InsetsSourceProviderProto)
    MergeFrom(*source);
  }
}

void InsetsSourceProviderProto::MergeFrom(const InsetsSourceProviderProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.InsetsSourceProviderProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_source()->::android::view::InsetsSourceProto::MergeFrom(from.source());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_frame()->::android::graphics::RectProto::MergeFrom(from.frame());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_fake_control()->::android::view::InsetsSourceControlProto::MergeFrom(from.fake_control());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_control()->::android::view::InsetsSourceControlProto::MergeFrom(from.control());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_control_target()->::com::android::server::wm::WindowStateProto::MergeFrom(from.control_target());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_pending_control_target()->::com::android::server::wm::WindowStateProto::MergeFrom(from.pending_control_target());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_fake_control_target()->::com::android::server::wm::WindowStateProto::MergeFrom(from.fake_control_target());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_captured_leash()->::android::view::SurfaceControlProto::MergeFrom(from.captured_leash());
    }
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_ime_overridden_frame()->::android::graphics::RectProto::MergeFrom(from.ime_overridden_frame());
    }
    if (cached_has_bits & 0x00000200u) {
      is_leash_ready_for_dispatching_ = from.is_leash_ready_for_dispatching_;
    }
    if (cached_has_bits & 0x00000400u) {
      client_visible_ = from.client_visible_;
    }
    if (cached_has_bits & 0x00000800u) {
      server_visible_ = from.server_visible_;
    }
    if (cached_has_bits & 0x00001000u) {
      seamless_rotating_ = from.seamless_rotating_;
    }
    if (cached_has_bits & 0x00002000u) {
      controllable_ = from.controllable_;
    }
    if (cached_has_bits & 0x00004000u) {
      finish_seamless_rotate_frame_number_ = from.finish_seamless_rotate_frame_number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InsetsSourceProviderProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.InsetsSourceProviderProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsetsSourceProviderProto::CopyFrom(const InsetsSourceProviderProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.InsetsSourceProviderProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsetsSourceProviderProto::IsInitialized() const {
  return true;
}

void InsetsSourceProviderProto::InternalSwap(InsetsSourceProviderProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(source_, other->source_);
  swap(frame_, other->frame_);
  swap(fake_control_, other->fake_control_);
  swap(control_, other->control_);
  swap(control_target_, other->control_target_);
  swap(pending_control_target_, other->pending_control_target_);
  swap(fake_control_target_, other->fake_control_target_);
  swap(captured_leash_, other->captured_leash_);
  swap(ime_overridden_frame_, other->ime_overridden_frame_);
  swap(is_leash_ready_for_dispatching_, other->is_leash_ready_for_dispatching_);
  swap(client_visible_, other->client_visible_);
  swap(server_visible_, other->server_visible_);
  swap(seamless_rotating_, other->seamless_rotating_);
  swap(controllable_, other->controllable_);
  swap(finish_seamless_rotate_frame_number_, other->finish_seamless_rotate_frame_number_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InsetsSourceProviderProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ImeInsetsSourceProviderProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_ImeInsetsSourceProviderProto_default_instance_._instance.get_mutable()->insets_source_provider_ = const_cast< ::com::android::server::wm::InsetsSourceProviderProto*>(
      ::com::android::server::wm::InsetsSourceProviderProto::internal_default_instance());
  ::com::android::server::wm::_ImeInsetsSourceProviderProto_default_instance_._instance.get_mutable()->ime_target_from_ime_ = const_cast< ::com::android::server::wm::WindowStateProto*>(
      ::com::android::server::wm::WindowStateProto::internal_default_instance());
}
class ImeInsetsSourceProviderProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ImeInsetsSourceProviderProto>()._has_bits_);
  static const ::com::android::server::wm::InsetsSourceProviderProto& insets_source_provider(const ImeInsetsSourceProviderProto* msg);
  static void set_has_insets_source_provider(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::android::server::wm::WindowStateProto& ime_target_from_ime(const ImeInsetsSourceProviderProto* msg);
  static void set_has_ime_target_from_ime(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_is_ime_layout_drawn(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::com::android::server::wm::InsetsSourceProviderProto&
ImeInsetsSourceProviderProto::_Internal::insets_source_provider(const ImeInsetsSourceProviderProto* msg) {
  return *msg->insets_source_provider_;
}
const ::com::android::server::wm::WindowStateProto&
ImeInsetsSourceProviderProto::_Internal::ime_target_from_ime(const ImeInsetsSourceProviderProto* msg) {
  return *msg->ime_target_from_ime_;
}
ImeInsetsSourceProviderProto::ImeInsetsSourceProviderProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.ImeInsetsSourceProviderProto)
}
ImeInsetsSourceProviderProto::ImeInsetsSourceProviderProto(const ImeInsetsSourceProviderProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_insets_source_provider()) {
    insets_source_provider_ = new ::com::android::server::wm::InsetsSourceProviderProto(*from.insets_source_provider_);
  } else {
    insets_source_provider_ = nullptr;
  }
  if (from.has_ime_target_from_ime()) {
    ime_target_from_ime_ = new ::com::android::server::wm::WindowStateProto(*from.ime_target_from_ime_);
  } else {
    ime_target_from_ime_ = nullptr;
  }
  is_ime_layout_drawn_ = from.is_ime_layout_drawn_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.ImeInsetsSourceProviderProto)
}

void ImeInsetsSourceProviderProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  ::memset(&insets_source_provider_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ime_layout_drawn_) -
      reinterpret_cast<char*>(&insets_source_provider_)) + sizeof(is_ime_layout_drawn_));
}

ImeInsetsSourceProviderProto::~ImeInsetsSourceProviderProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.ImeInsetsSourceProviderProto)
  SharedDtor();
}

void ImeInsetsSourceProviderProto::SharedDtor() {
  if (this != internal_default_instance()) delete insets_source_provider_;
  if (this != internal_default_instance()) delete ime_target_from_ime_;
}

void ImeInsetsSourceProviderProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImeInsetsSourceProviderProto& ImeInsetsSourceProviderProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivityRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base);
  return *internal_default_instance();
}


void ImeInsetsSourceProviderProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.ImeInsetsSourceProviderProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(insets_source_provider_ != nullptr);
      insets_source_provider_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(ime_target_from_ime_ != nullptr);
      ime_target_from_ime_->Clear();
    }
  }
  is_ime_layout_drawn_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ImeInsetsSourceProviderProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .com.android.server.wm.InsetsSourceProviderProto insets_source_provider = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_insets_source_provider(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowStateProto ime_target_from_ime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_ime_target_from_ime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_ime_layout_drawn = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_is_ime_layout_drawn(&has_bits);
          is_ime_layout_drawn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ImeInsetsSourceProviderProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.ImeInsetsSourceProviderProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.android.server.wm.InsetsSourceProviderProto insets_source_provider = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_insets_source_provider()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowStateProto ime_target_from_ime = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_ime_target_from_ime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_ime_layout_drawn = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_is_ime_layout_drawn(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ime_layout_drawn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.ImeInsetsSourceProviderProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.ImeInsetsSourceProviderProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ImeInsetsSourceProviderProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.ImeInsetsSourceProviderProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.InsetsSourceProviderProto insets_source_provider = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::insets_source_provider(this), output);
  }

  // optional .com.android.server.wm.WindowStateProto ime_target_from_ime = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::ime_target_from_ime(this), output);
  }

  // optional bool is_ime_layout_drawn = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->is_ime_layout_drawn(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.ImeInsetsSourceProviderProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ImeInsetsSourceProviderProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.ImeInsetsSourceProviderProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.wm.InsetsSourceProviderProto insets_source_provider = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::insets_source_provider(this), target);
  }

  // optional .com.android.server.wm.WindowStateProto ime_target_from_ime = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::ime_target_from_ime(this), target);
  }

  // optional bool is_ime_layout_drawn = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->is_ime_layout_drawn(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.ImeInsetsSourceProviderProto)
  return target;
}

size_t ImeInsetsSourceProviderProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.ImeInsetsSourceProviderProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .com.android.server.wm.InsetsSourceProviderProto insets_source_provider = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *insets_source_provider_);
    }

    // optional .com.android.server.wm.WindowStateProto ime_target_from_ime = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ime_target_from_ime_);
    }

    // optional bool is_ime_layout_drawn = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImeInsetsSourceProviderProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.ImeInsetsSourceProviderProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ImeInsetsSourceProviderProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImeInsetsSourceProviderProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.ImeInsetsSourceProviderProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.ImeInsetsSourceProviderProto)
    MergeFrom(*source);
  }
}

void ImeInsetsSourceProviderProto::MergeFrom(const ImeInsetsSourceProviderProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.ImeInsetsSourceProviderProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_insets_source_provider()->::com::android::server::wm::InsetsSourceProviderProto::MergeFrom(from.insets_source_provider());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_ime_target_from_ime()->::com::android::server::wm::WindowStateProto::MergeFrom(from.ime_target_from_ime());
    }
    if (cached_has_bits & 0x00000004u) {
      is_ime_layout_drawn_ = from.is_ime_layout_drawn_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ImeInsetsSourceProviderProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.ImeInsetsSourceProviderProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImeInsetsSourceProviderProto::CopyFrom(const ImeInsetsSourceProviderProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.ImeInsetsSourceProviderProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImeInsetsSourceProviderProto::IsInitialized() const {
  return true;
}

void ImeInsetsSourceProviderProto::InternalSwap(ImeInsetsSourceProviderProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(insets_source_provider_, other->insets_source_provider_);
  swap(ime_target_from_ime_, other->ime_target_from_ime_);
  swap(is_ime_layout_drawn_, other->is_ime_layout_drawn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImeInsetsSourceProviderProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace wm
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::android::server::wm::WindowManagerServiceDumpProto* Arena::CreateMaybeMessage< ::com::android::server::wm::WindowManagerServiceDumpProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::WindowManagerServiceDumpProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::RootWindowContainerProto* Arena::CreateMaybeMessage< ::com::android::server::wm::RootWindowContainerProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::RootWindowContainerProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::BarControllerProto* Arena::CreateMaybeMessage< ::com::android::server::wm::BarControllerProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::BarControllerProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::WindowOrientationListenerProto* Arena::CreateMaybeMessage< ::com::android::server::wm::WindowOrientationListenerProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::WindowOrientationListenerProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::KeyguardServiceDelegateProto* Arena::CreateMaybeMessage< ::com::android::server::wm::KeyguardServiceDelegateProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::KeyguardServiceDelegateProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::KeyguardControllerProto* Arena::CreateMaybeMessage< ::com::android::server::wm::KeyguardControllerProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::KeyguardControllerProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::KeyguardOccludedProto* Arena::CreateMaybeMessage< ::com::android::server::wm::KeyguardOccludedProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::KeyguardOccludedProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::WindowManagerPolicyProto* Arena::CreateMaybeMessage< ::com::android::server::wm::WindowManagerPolicyProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::WindowManagerPolicyProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::AppTransitionProto* Arena::CreateMaybeMessage< ::com::android::server::wm::AppTransitionProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::AppTransitionProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::DisplayContentProto* Arena::CreateMaybeMessage< ::com::android::server::wm::DisplayContentProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::DisplayContentProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::DisplayAreaProto* Arena::CreateMaybeMessage< ::com::android::server::wm::DisplayAreaProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::DisplayAreaProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::DisplayAreaChildProto* Arena::CreateMaybeMessage< ::com::android::server::wm::DisplayAreaChildProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::DisplayAreaChildProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::DisplayFramesProto* Arena::CreateMaybeMessage< ::com::android::server::wm::DisplayFramesProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::DisplayFramesProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::DisplayRotationProto* Arena::CreateMaybeMessage< ::com::android::server::wm::DisplayRotationProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::DisplayRotationProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::DockedTaskDividerControllerProto* Arena::CreateMaybeMessage< ::com::android::server::wm::DockedTaskDividerControllerProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::DockedTaskDividerControllerProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::PinnedTaskControllerProto* Arena::CreateMaybeMessage< ::com::android::server::wm::PinnedTaskControllerProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::PinnedTaskControllerProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::TaskProto* Arena::CreateMaybeMessage< ::com::android::server::wm::TaskProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::TaskProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::TaskFragmentProto* Arena::CreateMaybeMessage< ::com::android::server::wm::TaskFragmentProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::TaskFragmentProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::ActivityRecordProto* Arena::CreateMaybeMessage< ::com::android::server::wm::ActivityRecordProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::ActivityRecordProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::WindowTokenProto* Arena::CreateMaybeMessage< ::com::android::server::wm::WindowTokenProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::WindowTokenProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::WindowStateProto* Arena::CreateMaybeMessage< ::com::android::server::wm::WindowStateProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::WindowStateProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::IdentifierProto* Arena::CreateMaybeMessage< ::com::android::server::wm::IdentifierProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::IdentifierProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::WindowStateAnimatorProto* Arena::CreateMaybeMessage< ::com::android::server::wm::WindowStateAnimatorProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::WindowStateAnimatorProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::WindowSurfaceControllerProto* Arena::CreateMaybeMessage< ::com::android::server::wm::WindowSurfaceControllerProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::WindowSurfaceControllerProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::ScreenRotationAnimationProto* Arena::CreateMaybeMessage< ::com::android::server::wm::ScreenRotationAnimationProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::ScreenRotationAnimationProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::WindowContainerProto* Arena::CreateMaybeMessage< ::com::android::server::wm::WindowContainerProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::WindowContainerProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::WindowContainerChildProto* Arena::CreateMaybeMessage< ::com::android::server::wm::WindowContainerChildProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::WindowContainerChildProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::ConfigurationContainerProto* Arena::CreateMaybeMessage< ::com::android::server::wm::ConfigurationContainerProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::ConfigurationContainerProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::WindowFramesProto* Arena::CreateMaybeMessage< ::com::android::server::wm::WindowFramesProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::WindowFramesProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::InsetsSourceProviderProto* Arena::CreateMaybeMessage< ::com::android::server::wm::InsetsSourceProviderProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::InsetsSourceProviderProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::ImeInsetsSourceProviderProto* Arena::CreateMaybeMessage< ::com::android::server::wm::ImeInsetsSourceProviderProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::ImeInsetsSourceProviderProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
