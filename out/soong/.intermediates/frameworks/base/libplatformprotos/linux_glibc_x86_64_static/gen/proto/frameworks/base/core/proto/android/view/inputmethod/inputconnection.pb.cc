// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/inputmethod/inputconnection.proto

#include "frameworks/base/core/proto/android/view/inputmethod/inputconnection.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputConnectionCallProto_GetCursorCapsMode_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InputConnectionCallProto_GetExtractedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputConnectionCallProto_GetExtractedText_ExtractedTextRequest_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputConnectionCallProto_GetSelectedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InputConnectionCallProto_GetSurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputConnectionCallProto_GetSurroundingText_SurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputConnectionCallProto_GetTextAfterCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputConnectionCallProto_GetTextBeforeCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto;
namespace android {
namespace view {
namespace inputmethod {
class InputConnectionProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputConnectionProto> _instance;
} _InputConnectionProto_default_instance_;
class InputConnectionCallProto_GetTextBeforeCursorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputConnectionCallProto_GetTextBeforeCursor> _instance;
} _InputConnectionCallProto_GetTextBeforeCursor_default_instance_;
class InputConnectionCallProto_GetTextAfterCursorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputConnectionCallProto_GetTextAfterCursor> _instance;
} _InputConnectionCallProto_GetTextAfterCursor_default_instance_;
class InputConnectionCallProto_GetSelectedTextDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputConnectionCallProto_GetSelectedText> _instance;
} _InputConnectionCallProto_GetSelectedText_default_instance_;
class InputConnectionCallProto_GetSurroundingText_SurroundingTextDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputConnectionCallProto_GetSurroundingText_SurroundingText> _instance;
} _InputConnectionCallProto_GetSurroundingText_SurroundingText_default_instance_;
class InputConnectionCallProto_GetSurroundingTextDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputConnectionCallProto_GetSurroundingText> _instance;
} _InputConnectionCallProto_GetSurroundingText_default_instance_;
class InputConnectionCallProto_GetCursorCapsModeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputConnectionCallProto_GetCursorCapsMode> _instance;
} _InputConnectionCallProto_GetCursorCapsMode_default_instance_;
class InputConnectionCallProto_GetExtractedText_ExtractedTextRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputConnectionCallProto_GetExtractedText_ExtractedTextRequest> _instance;
} _InputConnectionCallProto_GetExtractedText_ExtractedTextRequest_default_instance_;
class InputConnectionCallProto_GetExtractedTextDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputConnectionCallProto_GetExtractedText> _instance;
} _InputConnectionCallProto_GetExtractedText_default_instance_;
class InputConnectionCallProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputConnectionCallProto> _instance;
  const ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor* get_text_before_cursor_;
  const ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor* get_text_after_cursor_;
  const ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText* get_selected_text_;
  const ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText* get_surrounding_text_;
  const ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode* get_cursor_caps_mode_;
  const ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText* get_extracted_text_;
} _InputConnectionCallProto_default_instance_;
}  // namespace inputmethod
}  // namespace view
}  // namespace android
static void InitDefaultsscc_info_InputConnectionCallProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::inputmethod::_InputConnectionCallProto_default_instance_;
    new (ptr) ::android::view::inputmethod::InputConnectionCallProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::inputmethod::InputConnectionCallProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_InputConnectionCallProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsscc_info_InputConnectionCallProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto}, {
      &scc_info_InputConnectionCallProto_GetTextBeforeCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
      &scc_info_InputConnectionCallProto_GetTextAfterCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
      &scc_info_InputConnectionCallProto_GetSelectedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
      &scc_info_InputConnectionCallProto_GetSurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
      &scc_info_InputConnectionCallProto_GetCursorCapsMode_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
      &scc_info_InputConnectionCallProto_GetExtractedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,}};

static void InitDefaultsscc_info_InputConnectionCallProto_GetCursorCapsMode_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::inputmethod::_InputConnectionCallProto_GetCursorCapsMode_default_instance_;
    new (ptr) ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputConnectionCallProto_GetCursorCapsMode_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_InputConnectionCallProto_GetCursorCapsMode_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto}, {}};

static void InitDefaultsscc_info_InputConnectionCallProto_GetExtractedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::inputmethod::_InputConnectionCallProto_GetExtractedText_default_instance_;
    new (ptr) ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InputConnectionCallProto_GetExtractedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_InputConnectionCallProto_GetExtractedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto}, {
      &scc_info_InputConnectionCallProto_GetExtractedText_ExtractedTextRequest_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,}};

static void InitDefaultsscc_info_InputConnectionCallProto_GetExtractedText_ExtractedTextRequest_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::inputmethod::_InputConnectionCallProto_GetExtractedText_ExtractedTextRequest_default_instance_;
    new (ptr) ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputConnectionCallProto_GetExtractedText_ExtractedTextRequest_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_InputConnectionCallProto_GetExtractedText_ExtractedTextRequest_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto}, {}};

static void InitDefaultsscc_info_InputConnectionCallProto_GetSelectedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::inputmethod::_InputConnectionCallProto_GetSelectedText_default_instance_;
    new (ptr) ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputConnectionCallProto_GetSelectedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_InputConnectionCallProto_GetSelectedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto}, {}};

static void InitDefaultsscc_info_InputConnectionCallProto_GetSurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::inputmethod::_InputConnectionCallProto_GetSurroundingText_default_instance_;
    new (ptr) ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InputConnectionCallProto_GetSurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_InputConnectionCallProto_GetSurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto}, {
      &scc_info_InputConnectionCallProto_GetSurroundingText_SurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,}};

static void InitDefaultsscc_info_InputConnectionCallProto_GetSurroundingText_SurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::inputmethod::_InputConnectionCallProto_GetSurroundingText_SurroundingText_default_instance_;
    new (ptr) ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputConnectionCallProto_GetSurroundingText_SurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_InputConnectionCallProto_GetSurroundingText_SurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto}, {}};

static void InitDefaultsscc_info_InputConnectionCallProto_GetTextAfterCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::inputmethod::_InputConnectionCallProto_GetTextAfterCursor_default_instance_;
    new (ptr) ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputConnectionCallProto_GetTextAfterCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_InputConnectionCallProto_GetTextAfterCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto}, {}};

static void InitDefaultsscc_info_InputConnectionCallProto_GetTextBeforeCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::inputmethod::_InputConnectionCallProto_GetTextBeforeCursor_default_instance_;
    new (ptr) ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputConnectionCallProto_GetTextBeforeCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_InputConnectionCallProto_GetTextBeforeCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto}, {}};

static void InitDefaultsscc_info_InputConnectionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::inputmethod::_InputConnectionProto_default_instance_;
    new (ptr) ::android::view::inputmethod::InputConnectionProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::inputmethod::InputConnectionProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputConnectionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_InputConnectionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionProto, editable_text_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionProto, selected_text_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionProto, selected_text_start_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionProto, selected_text_end_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionProto, cursor_caps_mode_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor, length_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor, flags_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor, result_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor, length_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor, flags_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor, result_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSelectedText, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSelectedText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSelectedText, flags_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSelectedText, result_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText, text_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText, selection_start_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText, selection_end_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText, offset_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText, before_length_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText, after_length_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText, flags_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText, result_),
  1,
  2,
  3,
  0,
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode, req_modes_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode, result_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest, token_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest, flags_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest, hint_max_lines_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest, hint_max_chars_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText, request_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText, flags_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText, result_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::android::view::inputmethod::InputConnectionCallProtoDefaultTypeInternal, get_text_before_cursor_),
  offsetof(::android::view::inputmethod::InputConnectionCallProtoDefaultTypeInternal, get_text_after_cursor_),
  offsetof(::android::view::inputmethod::InputConnectionCallProtoDefaultTypeInternal, get_selected_text_),
  offsetof(::android::view::inputmethod::InputConnectionCallProtoDefaultTypeInternal, get_surrounding_text_),
  offsetof(::android::view::inputmethod::InputConnectionCallProtoDefaultTypeInternal, get_cursor_caps_mode_),
  offsetof(::android::view::inputmethod::InputConnectionCallProtoDefaultTypeInternal, get_extracted_text_),
  PROTOBUF_FIELD_OFFSET(::android::view::inputmethod::InputConnectionCallProto, method_call_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::android::view::inputmethod::InputConnectionProto)},
  { 15, 23, sizeof(::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor)},
  { 26, 34, sizeof(::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor)},
  { 37, 44, sizeof(::android::view::inputmethod::InputConnectionCallProto_GetSelectedText)},
  { 46, 55, sizeof(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText)},
  { 59, 68, sizeof(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText)},
  { 72, 79, sizeof(::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode)},
  { 81, 90, sizeof(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest)},
  { 94, 102, sizeof(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText)},
  { 105, 117, sizeof(::android::view::inputmethod::InputConnectionCallProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::inputmethod::_InputConnectionProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::inputmethod::_InputConnectionCallProto_GetTextBeforeCursor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::inputmethod::_InputConnectionCallProto_GetTextAfterCursor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::inputmethod::_InputConnectionCallProto_GetSelectedText_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::inputmethod::_InputConnectionCallProto_GetSurroundingText_SurroundingText_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::inputmethod::_InputConnectionCallProto_GetSurroundingText_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::inputmethod::_InputConnectionCallProto_GetCursorCapsMode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::inputmethod::_InputConnectionCallProto_GetExtractedText_ExtractedTextRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::inputmethod::_InputConnectionCallProto_GetExtractedText_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::inputmethod::_InputConnectionCallProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nIframeworks/base/core/proto/android/vie"
  "w/inputmethod/inputconnection.proto\022\030and"
  "roid.view.inputmethod\0320frameworks/base/c"
  "ore/proto/android/privacy.proto\"\252\001\n\024Inpu"
  "tConnectionProto\022\037\n\reditable_text\030\001 \001(\tB"
  "\010\232\237\325\207\003\002\010\000\022\037\n\rselected_text\030\002 \001(\tB\010\232\237\325\207\003\002"
  "\010\000\022\033\n\023selected_text_start\030\003 \001(\005\022\031\n\021selec"
  "ted_text_end\030\004 \001(\005\022\030\n\020cursor_caps_mode\030\005"
  " \001(\005\"\323\013\n\030InputConnectionCallProto\022h\n\026get"
  "_text_before_cursor\030\001 \001(\0132F.android.view"
  ".inputmethod.InputConnectionCallProto.Ge"
  "tTextBeforeCursorH\000\022f\n\025get_text_after_cu"
  "rsor\030\002 \001(\0132E.android.view.inputmethod.In"
  "putConnectionCallProto.GetTextAfterCurso"
  "rH\000\022_\n\021get_selected_text\030\003 \001(\0132B.android"
  ".view.inputmethod.InputConnectionCallPro"
  "to.GetSelectedTextH\000\022e\n\024get_surrounding_"
  "text\030\004 \001(\0132E.android.view.inputmethod.In"
  "putConnectionCallProto.GetSurroundingTex"
  "tH\000\022d\n\024get_cursor_caps_mode\030\005 \001(\0132D.andr"
  "oid.view.inputmethod.InputConnectionCall"
  "Proto.GetCursorCapsModeH\000\022a\n\022get_extract"
  "ed_text\030\006 \001(\0132C.android.view.inputmethod"
  ".InputConnectionCallProto.GetExtractedTe"
  "xtH\000\032N\n\023GetTextBeforeCursor\022\016\n\006length\030\001 "
  "\001(\005\022\r\n\005flags\030\002 \001(\005\022\030\n\006result\030\003 \001(\tB\010\232\237\325\207"
  "\003\002\010\000\032M\n\022GetTextAfterCursor\022\016\n\006length\030\001 \001"
  "(\005\022\r\n\005flags\030\002 \001(\005\022\030\n\006result\030\003 \001(\tB\010\232\237\325\207\003"
  "\002\010\000\032:\n\017GetSelectedText\022\r\n\005flags\030\001 \001(\005\022\030\n"
  "\006result\030\002 \001(\tB\010\232\237\325\207\003\002\010\000\032\242\002\n\022GetSurroundi"
  "ngText\022\025\n\rbefore_length\030\001 \001(\005\022\024\n\014after_l"
  "ength\030\002 \001(\005\022\r\n\005flags\030\003 \001(\005\022e\n\006result\030\004 \001"
  "(\0132U.android.view.inputmethod.InputConne"
  "ctionCallProto.GetSurroundingText.Surrou"
  "ndingText\032i\n\017SurroundingText\022\026\n\004text\030\001 \001"
  "(\tB\010\232\237\325\207\003\002\010\000\022\027\n\017selection_start\030\002 \001(\005\022\025\n"
  "\rselection_end\030\003 \001(\005\022\016\n\006offset\030\004 \001(\005\0326\n\021"
  "GetCursorCapsMode\022\021\n\treq_modes\030\001 \001(\005\022\016\n\006"
  "result\030\002 \001(\005\032\214\002\n\020GetExtractedText\022i\n\007req"
  "uest\030\001 \001(\0132X.android.view.inputmethod.In"
  "putConnectionCallProto.GetExtractedText."
  "ExtractedTextRequest\022\r\n\005flags\030\002 \001(\005\022\030\n\006r"
  "esult\030\003 \001(\tB\010\232\237\325\207\003\002\010\000\032d\n\024ExtractedTextRe"
  "quest\022\r\n\005token\030\001 \001(\005\022\r\n\005flags\030\002 \001(\005\022\026\n\016h"
  "int_max_lines\030\003 \001(\005\022\026\n\016hint_max_chars\030\004 "
  "\001(\005B\r\n\013method_callB\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto_deps[1] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto_sccs[10] = {
  &scc_info_InputConnectionCallProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
  &scc_info_InputConnectionCallProto_GetCursorCapsMode_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
  &scc_info_InputConnectionCallProto_GetExtractedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
  &scc_info_InputConnectionCallProto_GetExtractedText_ExtractedTextRequest_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
  &scc_info_InputConnectionCallProto_GetSelectedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
  &scc_info_InputConnectionCallProto_GetSurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
  &scc_info_InputConnectionCallProto_GetSurroundingText_SurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
  &scc_info_InputConnectionCallProto_GetTextAfterCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
  &scc_info_InputConnectionCallProto_GetTextBeforeCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
  &scc_info_InputConnectionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto, "frameworks/base/core/proto/android/view/inputmethod/inputconnection.proto", 1822,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto_deps, 10, 1,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto, 10, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto), true);
namespace android {
namespace view {
namespace inputmethod {

// ===================================================================

void InputConnectionProto::InitAsDefaultInstance() {
}
class InputConnectionProto::_Internal {
 public:
  using HasBits = decltype(std::declval<InputConnectionProto>()._has_bits_);
  static void set_has_editable_text(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_selected_text(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_selected_text_start(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_selected_text_end(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_cursor_caps_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

InputConnectionProto::InputConnectionProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.inputmethod.InputConnectionProto)
}
InputConnectionProto::InputConnectionProto(const InputConnectionProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  editable_text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_editable_text()) {
    editable_text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.editable_text_);
  }
  selected_text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_selected_text()) {
    selected_text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.selected_text_);
  }
  ::memcpy(&selected_text_start_, &from.selected_text_start_,
    static_cast<size_t>(reinterpret_cast<char*>(&cursor_caps_mode_) -
    reinterpret_cast<char*>(&selected_text_start_)) + sizeof(cursor_caps_mode_));
  // @@protoc_insertion_point(copy_constructor:android.view.inputmethod.InputConnectionProto)
}

void InputConnectionProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputConnectionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  editable_text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  selected_text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&selected_text_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cursor_caps_mode_) -
      reinterpret_cast<char*>(&selected_text_start_)) + sizeof(cursor_caps_mode_));
}

InputConnectionProto::~InputConnectionProto() {
  // @@protoc_insertion_point(destructor:android.view.inputmethod.InputConnectionProto)
  SharedDtor();
}

void InputConnectionProto::SharedDtor() {
  editable_text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  selected_text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InputConnectionProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputConnectionProto& InputConnectionProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputConnectionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  return *internal_default_instance();
}


void InputConnectionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.inputmethod.InputConnectionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      editable_text_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      selected_text_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&selected_text_start_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cursor_caps_mode_) -
        reinterpret_cast<char*>(&selected_text_start_)) + sizeof(cursor_caps_mode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InputConnectionProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string editable_text = 1 [(.android.privacy) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_editable_text(), ptr, ctx, "android.view.inputmethod.InputConnectionProto.editable_text");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string selected_text = 2 [(.android.privacy) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_selected_text(), ptr, ctx, "android.view.inputmethod.InputConnectionProto.selected_text");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 selected_text_start = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_selected_text_start(&has_bits);
          selected_text_start_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 selected_text_end = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_selected_text_end(&has_bits);
          selected_text_end_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 cursor_caps_mode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_cursor_caps_mode(&has_bits);
          cursor_caps_mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InputConnectionProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.inputmethod.InputConnectionProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string editable_text = 1 [(.android.privacy) = {
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_editable_text()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->editable_text().data(), static_cast<int>(this->editable_text().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.view.inputmethod.InputConnectionProto.editable_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string selected_text = 2 [(.android.privacy) = {
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_selected_text()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->selected_text().data(), static_cast<int>(this->selected_text().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.view.inputmethod.InputConnectionProto.selected_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 selected_text_start = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_selected_text_start(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &selected_text_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 selected_text_end = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_selected_text_end(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &selected_text_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cursor_caps_mode = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_cursor_caps_mode(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &cursor_caps_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.inputmethod.InputConnectionProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.inputmethod.InputConnectionProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InputConnectionProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.inputmethod.InputConnectionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string editable_text = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->editable_text().data(), static_cast<int>(this->editable_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.inputmethod.InputConnectionProto.editable_text");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->editable_text(), output);
  }

  // optional string selected_text = 2 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->selected_text().data(), static_cast<int>(this->selected_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.inputmethod.InputConnectionProto.selected_text");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->selected_text(), output);
  }

  // optional int32 selected_text_start = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->selected_text_start(), output);
  }

  // optional int32 selected_text_end = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->selected_text_end(), output);
  }

  // optional int32 cursor_caps_mode = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->cursor_caps_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.inputmethod.InputConnectionProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* InputConnectionProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.inputmethod.InputConnectionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string editable_text = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->editable_text().data(), static_cast<int>(this->editable_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.inputmethod.InputConnectionProto.editable_text");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->editable_text(), target);
  }

  // optional string selected_text = 2 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->selected_text().data(), static_cast<int>(this->selected_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.inputmethod.InputConnectionProto.selected_text");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->selected_text(), target);
  }

  // optional int32 selected_text_start = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->selected_text_start(), target);
  }

  // optional int32 selected_text_end = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->selected_text_end(), target);
  }

  // optional int32 cursor_caps_mode = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->cursor_caps_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.inputmethod.InputConnectionProto)
  return target;
}

size_t InputConnectionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.inputmethod.InputConnectionProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string editable_text = 1 [(.android.privacy) = {
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->editable_text());
    }

    // optional string selected_text = 2 [(.android.privacy) = {
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->selected_text());
    }

    // optional int32 selected_text_start = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->selected_text_start());
    }

    // optional int32 selected_text_end = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->selected_text_end());
    }

    // optional int32 cursor_caps_mode = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->cursor_caps_mode());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputConnectionProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.inputmethod.InputConnectionProto)
  GOOGLE_DCHECK_NE(&from, this);
  const InputConnectionProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputConnectionProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.inputmethod.InputConnectionProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.inputmethod.InputConnectionProto)
    MergeFrom(*source);
  }
}

void InputConnectionProto::MergeFrom(const InputConnectionProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.inputmethod.InputConnectionProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      editable_text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.editable_text_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      selected_text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.selected_text_);
    }
    if (cached_has_bits & 0x00000004u) {
      selected_text_start_ = from.selected_text_start_;
    }
    if (cached_has_bits & 0x00000008u) {
      selected_text_end_ = from.selected_text_end_;
    }
    if (cached_has_bits & 0x00000010u) {
      cursor_caps_mode_ = from.cursor_caps_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InputConnectionProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.inputmethod.InputConnectionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputConnectionProto::CopyFrom(const InputConnectionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.inputmethod.InputConnectionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputConnectionProto::IsInitialized() const {
  return true;
}

void InputConnectionProto::InternalSwap(InputConnectionProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  editable_text_.Swap(&other->editable_text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  selected_text_.Swap(&other->selected_text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(selected_text_start_, other->selected_text_start_);
  swap(selected_text_end_, other->selected_text_end_);
  swap(cursor_caps_mode_, other->cursor_caps_mode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputConnectionProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InputConnectionCallProto_GetTextBeforeCursor::InitAsDefaultInstance() {
}
class InputConnectionCallProto_GetTextBeforeCursor::_Internal {
 public:
  using HasBits = decltype(std::declval<InputConnectionCallProto_GetTextBeforeCursor>()._has_bits_);
  static void set_has_length(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

InputConnectionCallProto_GetTextBeforeCursor::InputConnectionCallProto_GetTextBeforeCursor()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
}
InputConnectionCallProto_GetTextBeforeCursor::InputConnectionCallProto_GetTextBeforeCursor(const InputConnectionCallProto_GetTextBeforeCursor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&length_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
}

void InputConnectionCallProto_GetTextBeforeCursor::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputConnectionCallProto_GetTextBeforeCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&length_)) + sizeof(flags_));
}

InputConnectionCallProto_GetTextBeforeCursor::~InputConnectionCallProto_GetTextBeforeCursor() {
  // @@protoc_insertion_point(destructor:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
  SharedDtor();
}

void InputConnectionCallProto_GetTextBeforeCursor::SharedDtor() {
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InputConnectionCallProto_GetTextBeforeCursor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputConnectionCallProto_GetTextBeforeCursor& InputConnectionCallProto_GetTextBeforeCursor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputConnectionCallProto_GetTextBeforeCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  return *internal_default_instance();
}


void InputConnectionCallProto_GetTextBeforeCursor::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    result_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&length_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&length_)) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InputConnectionCallProto_GetTextBeforeCursor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 length = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_length(&has_bits);
          length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_flags(&has_bits);
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string result = 3 [(.android.privacy) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_result(), ptr, ctx, "android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.result");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InputConnectionCallProto_GetTextBeforeCursor::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 length = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_length(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string result = 3 [(.android.privacy) = {
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), static_cast<int>(this->result().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.result");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InputConnectionCallProto_GetTextBeforeCursor::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 length = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->length(), output);
  }

  // optional int32 flags = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->flags(), output);
  }

  // optional string result = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.result");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
}

::PROTOBUF_NAMESPACE_ID::uint8* InputConnectionCallProto_GetTextBeforeCursor::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 length = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->length(), target);
  }

  // optional int32 flags = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->flags(), target);
  }

  // optional string result = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor.result");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
  return target;
}

size_t InputConnectionCallProto_GetTextBeforeCursor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string result = 3 [(.android.privacy) = {
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->result());
    }

    // optional int32 length = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->length());
    }

    // optional int32 flags = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->flags());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputConnectionCallProto_GetTextBeforeCursor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
  GOOGLE_DCHECK_NE(&from, this);
  const InputConnectionCallProto_GetTextBeforeCursor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputConnectionCallProto_GetTextBeforeCursor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
    MergeFrom(*source);
  }
}

void InputConnectionCallProto_GetTextBeforeCursor::MergeFrom(const InputConnectionCallProto_GetTextBeforeCursor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      result_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000002u) {
      length_ = from.length_;
    }
    if (cached_has_bits & 0x00000004u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InputConnectionCallProto_GetTextBeforeCursor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputConnectionCallProto_GetTextBeforeCursor::CopyFrom(const InputConnectionCallProto_GetTextBeforeCursor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputConnectionCallProto_GetTextBeforeCursor::IsInitialized() const {
  return true;
}

void InputConnectionCallProto_GetTextBeforeCursor::InternalSwap(InputConnectionCallProto_GetTextBeforeCursor* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(length_, other->length_);
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputConnectionCallProto_GetTextBeforeCursor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InputConnectionCallProto_GetTextAfterCursor::InitAsDefaultInstance() {
}
class InputConnectionCallProto_GetTextAfterCursor::_Internal {
 public:
  using HasBits = decltype(std::declval<InputConnectionCallProto_GetTextAfterCursor>()._has_bits_);
  static void set_has_length(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

InputConnectionCallProto_GetTextAfterCursor::InputConnectionCallProto_GetTextAfterCursor()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
}
InputConnectionCallProto_GetTextAfterCursor::InputConnectionCallProto_GetTextAfterCursor(const InputConnectionCallProto_GetTextAfterCursor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&length_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
}

void InputConnectionCallProto_GetTextAfterCursor::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputConnectionCallProto_GetTextAfterCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&length_)) + sizeof(flags_));
}

InputConnectionCallProto_GetTextAfterCursor::~InputConnectionCallProto_GetTextAfterCursor() {
  // @@protoc_insertion_point(destructor:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
  SharedDtor();
}

void InputConnectionCallProto_GetTextAfterCursor::SharedDtor() {
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InputConnectionCallProto_GetTextAfterCursor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputConnectionCallProto_GetTextAfterCursor& InputConnectionCallProto_GetTextAfterCursor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputConnectionCallProto_GetTextAfterCursor_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  return *internal_default_instance();
}


void InputConnectionCallProto_GetTextAfterCursor::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    result_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&length_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&length_)) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InputConnectionCallProto_GetTextAfterCursor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 length = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_length(&has_bits);
          length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_flags(&has_bits);
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string result = 3 [(.android.privacy) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_result(), ptr, ctx, "android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.result");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InputConnectionCallProto_GetTextAfterCursor::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 length = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_length(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string result = 3 [(.android.privacy) = {
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), static_cast<int>(this->result().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.result");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InputConnectionCallProto_GetTextAfterCursor::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 length = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->length(), output);
  }

  // optional int32 flags = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->flags(), output);
  }

  // optional string result = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.result");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
}

::PROTOBUF_NAMESPACE_ID::uint8* InputConnectionCallProto_GetTextAfterCursor::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 length = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->length(), target);
  }

  // optional int32 flags = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->flags(), target);
  }

  // optional string result = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor.result");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
  return target;
}

size_t InputConnectionCallProto_GetTextAfterCursor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string result = 3 [(.android.privacy) = {
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->result());
    }

    // optional int32 length = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->length());
    }

    // optional int32 flags = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->flags());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputConnectionCallProto_GetTextAfterCursor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
  GOOGLE_DCHECK_NE(&from, this);
  const InputConnectionCallProto_GetTextAfterCursor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputConnectionCallProto_GetTextAfterCursor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
    MergeFrom(*source);
  }
}

void InputConnectionCallProto_GetTextAfterCursor::MergeFrom(const InputConnectionCallProto_GetTextAfterCursor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      result_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000002u) {
      length_ = from.length_;
    }
    if (cached_has_bits & 0x00000004u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InputConnectionCallProto_GetTextAfterCursor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputConnectionCallProto_GetTextAfterCursor::CopyFrom(const InputConnectionCallProto_GetTextAfterCursor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputConnectionCallProto_GetTextAfterCursor::IsInitialized() const {
  return true;
}

void InputConnectionCallProto_GetTextAfterCursor::InternalSwap(InputConnectionCallProto_GetTextAfterCursor* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(length_, other->length_);
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputConnectionCallProto_GetTextAfterCursor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InputConnectionCallProto_GetSelectedText::InitAsDefaultInstance() {
}
class InputConnectionCallProto_GetSelectedText::_Internal {
 public:
  using HasBits = decltype(std::declval<InputConnectionCallProto_GetSelectedText>()._has_bits_);
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

InputConnectionCallProto_GetSelectedText::InputConnectionCallProto_GetSelectedText()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
}
InputConnectionCallProto_GetSelectedText::InputConnectionCallProto_GetSelectedText(const InputConnectionCallProto_GetSelectedText& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
}

void InputConnectionCallProto_GetSelectedText::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputConnectionCallProto_GetSelectedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = 0;
}

InputConnectionCallProto_GetSelectedText::~InputConnectionCallProto_GetSelectedText() {
  // @@protoc_insertion_point(destructor:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
  SharedDtor();
}

void InputConnectionCallProto_GetSelectedText::SharedDtor() {
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InputConnectionCallProto_GetSelectedText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputConnectionCallProto_GetSelectedText& InputConnectionCallProto_GetSelectedText::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputConnectionCallProto_GetSelectedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  return *internal_default_instance();
}


void InputConnectionCallProto_GetSelectedText::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    result_.ClearNonDefaultToEmptyNoArena();
  }
  flags_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InputConnectionCallProto_GetSelectedText::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 flags = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_flags(&has_bits);
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string result = 2 [(.android.privacy) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_result(), ptr, ctx, "android.view.inputmethod.InputConnectionCallProto.GetSelectedText.result");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InputConnectionCallProto_GetSelectedText::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flags = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string result = 2 [(.android.privacy) = {
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), static_cast<int>(this->result().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.view.inputmethod.InputConnectionCallProto.GetSelectedText.result");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InputConnectionCallProto_GetSelectedText::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 flags = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->flags(), output);
  }

  // optional string result = 2 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.inputmethod.InputConnectionCallProto.GetSelectedText.result");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
}

::PROTOBUF_NAMESPACE_ID::uint8* InputConnectionCallProto_GetSelectedText::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 flags = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->flags(), target);
  }

  // optional string result = 2 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.inputmethod.InputConnectionCallProto.GetSelectedText.result");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
  return target;
}

size_t InputConnectionCallProto_GetSelectedText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string result = 2 [(.android.privacy) = {
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->result());
    }

    // optional int32 flags = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->flags());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputConnectionCallProto_GetSelectedText::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
  GOOGLE_DCHECK_NE(&from, this);
  const InputConnectionCallProto_GetSelectedText* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputConnectionCallProto_GetSelectedText>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
    MergeFrom(*source);
  }
}

void InputConnectionCallProto_GetSelectedText::MergeFrom(const InputConnectionCallProto_GetSelectedText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      result_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000002u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InputConnectionCallProto_GetSelectedText::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputConnectionCallProto_GetSelectedText::CopyFrom(const InputConnectionCallProto_GetSelectedText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetSelectedText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputConnectionCallProto_GetSelectedText::IsInitialized() const {
  return true;
}

void InputConnectionCallProto_GetSelectedText::InternalSwap(InputConnectionCallProto_GetSelectedText* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputConnectionCallProto_GetSelectedText::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InputConnectionCallProto_GetSurroundingText_SurroundingText::InitAsDefaultInstance() {
}
class InputConnectionCallProto_GetSurroundingText_SurroundingText::_Internal {
 public:
  using HasBits = decltype(std::declval<InputConnectionCallProto_GetSurroundingText_SurroundingText>()._has_bits_);
  static void set_has_text(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_selection_start(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_selection_end(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

InputConnectionCallProto_GetSurroundingText_SurroundingText::InputConnectionCallProto_GetSurroundingText_SurroundingText()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
}
InputConnectionCallProto_GetSurroundingText_SurroundingText::InputConnectionCallProto_GetSurroundingText_SurroundingText(const InputConnectionCallProto_GetSurroundingText_SurroundingText& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&selection_start_, &from.selection_start_,
    static_cast<size_t>(reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&selection_start_)) + sizeof(offset_));
  // @@protoc_insertion_point(copy_constructor:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
}

void InputConnectionCallProto_GetSurroundingText_SurroundingText::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputConnectionCallProto_GetSurroundingText_SurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&selection_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&selection_start_)) + sizeof(offset_));
}

InputConnectionCallProto_GetSurroundingText_SurroundingText::~InputConnectionCallProto_GetSurroundingText_SurroundingText() {
  // @@protoc_insertion_point(destructor:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
  SharedDtor();
}

void InputConnectionCallProto_GetSurroundingText_SurroundingText::SharedDtor() {
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InputConnectionCallProto_GetSurroundingText_SurroundingText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputConnectionCallProto_GetSurroundingText_SurroundingText& InputConnectionCallProto_GetSurroundingText_SurroundingText::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputConnectionCallProto_GetSurroundingText_SurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  return *internal_default_instance();
}


void InputConnectionCallProto_GetSurroundingText_SurroundingText::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&selection_start_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offset_) -
        reinterpret_cast<char*>(&selection_start_)) + sizeof(offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InputConnectionCallProto_GetSurroundingText_SurroundingText::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string text = 1 [(.android.privacy) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_text(), ptr, ctx, "android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.text");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 selection_start = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_selection_start(&has_bits);
          selection_start_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 selection_end = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_selection_end(&has_bits);
          selection_end_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 offset = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_offset(&has_bits);
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InputConnectionCallProto_GetSurroundingText_SurroundingText::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1 [(.android.privacy) = {
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 selection_start = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_selection_start(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &selection_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 selection_end = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_selection_end(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &selection_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 offset = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_offset(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InputConnectionCallProto_GetSurroundingText_SurroundingText::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.text");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // optional int32 selection_start = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->selection_start(), output);
  }

  // optional int32 selection_end = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->selection_end(), output);
  }

  // optional int32 offset = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
}

::PROTOBUF_NAMESPACE_ID::uint8* InputConnectionCallProto_GetSurroundingText_SurroundingText::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText.text");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // optional int32 selection_start = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->selection_start(), target);
  }

  // optional int32 selection_end = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->selection_end(), target);
  }

  // optional int32 offset = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
  return target;
}

size_t InputConnectionCallProto_GetSurroundingText_SurroundingText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string text = 1 [(.android.privacy) = {
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional int32 selection_start = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->selection_start());
    }

    // optional int32 selection_end = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->selection_end());
    }

    // optional int32 offset = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->offset());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputConnectionCallProto_GetSurroundingText_SurroundingText::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
  GOOGLE_DCHECK_NE(&from, this);
  const InputConnectionCallProto_GetSurroundingText_SurroundingText* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputConnectionCallProto_GetSurroundingText_SurroundingText>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
    MergeFrom(*source);
  }
}

void InputConnectionCallProto_GetSurroundingText_SurroundingText::MergeFrom(const InputConnectionCallProto_GetSurroundingText_SurroundingText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      selection_start_ = from.selection_start_;
    }
    if (cached_has_bits & 0x00000004u) {
      selection_end_ = from.selection_end_;
    }
    if (cached_has_bits & 0x00000008u) {
      offset_ = from.offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InputConnectionCallProto_GetSurroundingText_SurroundingText::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputConnectionCallProto_GetSurroundingText_SurroundingText::CopyFrom(const InputConnectionCallProto_GetSurroundingText_SurroundingText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputConnectionCallProto_GetSurroundingText_SurroundingText::IsInitialized() const {
  return true;
}

void InputConnectionCallProto_GetSurroundingText_SurroundingText::InternalSwap(InputConnectionCallProto_GetSurroundingText_SurroundingText* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(selection_start_, other->selection_start_);
  swap(selection_end_, other->selection_end_);
  swap(offset_, other->offset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputConnectionCallProto_GetSurroundingText_SurroundingText::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InputConnectionCallProto_GetSurroundingText::InitAsDefaultInstance() {
  ::android::view::inputmethod::_InputConnectionCallProto_GetSurroundingText_default_instance_._instance.get_mutable()->result_ = const_cast< ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText*>(
      ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText::internal_default_instance());
}
class InputConnectionCallProto_GetSurroundingText::_Internal {
 public:
  using HasBits = decltype(std::declval<InputConnectionCallProto_GetSurroundingText>()._has_bits_);
  static void set_has_before_length(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_after_length(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText& result(const InputConnectionCallProto_GetSurroundingText* msg);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText&
InputConnectionCallProto_GetSurroundingText::_Internal::result(const InputConnectionCallProto_GetSurroundingText* msg) {
  return *msg->result_;
}
InputConnectionCallProto_GetSurroundingText::InputConnectionCallProto_GetSurroundingText()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
}
InputConnectionCallProto_GetSurroundingText::InputConnectionCallProto_GetSurroundingText(const InputConnectionCallProto_GetSurroundingText& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    result_ = new ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText(*from.result_);
  } else {
    result_ = nullptr;
  }
  ::memcpy(&before_length_, &from.before_length_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&before_length_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
}

void InputConnectionCallProto_GetSurroundingText::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputConnectionCallProto_GetSurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&result_)) + sizeof(flags_));
}

InputConnectionCallProto_GetSurroundingText::~InputConnectionCallProto_GetSurroundingText() {
  // @@protoc_insertion_point(destructor:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
  SharedDtor();
}

void InputConnectionCallProto_GetSurroundingText::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
}

void InputConnectionCallProto_GetSurroundingText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputConnectionCallProto_GetSurroundingText& InputConnectionCallProto_GetSurroundingText::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputConnectionCallProto_GetSurroundingText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  return *internal_default_instance();
}


void InputConnectionCallProto_GetSurroundingText::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(result_ != nullptr);
    result_->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&before_length_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&before_length_)) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InputConnectionCallProto_GetSurroundingText::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 before_length = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_before_length(&has_bits);
          before_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 after_length = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_after_length(&has_bits);
          after_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_flags(&has_bits);
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText result = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InputConnectionCallProto_GetSurroundingText::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 before_length = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_before_length(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &before_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 after_length = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_after_length(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &after_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText result = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InputConnectionCallProto_GetSurroundingText::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 before_length = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->before_length(), output);
  }

  // optional int32 after_length = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->after_length(), output);
  }

  // optional int32 flags = 3;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->flags(), output);
  }

  // optional .android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText result = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::result(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
}

::PROTOBUF_NAMESPACE_ID::uint8* InputConnectionCallProto_GetSurroundingText::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 before_length = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->before_length(), target);
  }

  // optional int32 after_length = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->after_length(), target);
  }

  // optional int32 flags = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->flags(), target);
  }

  // optional .android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText result = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::result(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
  return target;
}

size_t InputConnectionCallProto_GetSurroundingText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .android.view.inputmethod.InputConnectionCallProto.GetSurroundingText.SurroundingText result = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *result_);
    }

    // optional int32 before_length = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->before_length());
    }

    // optional int32 after_length = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->after_length());
    }

    // optional int32 flags = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->flags());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputConnectionCallProto_GetSurroundingText::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
  GOOGLE_DCHECK_NE(&from, this);
  const InputConnectionCallProto_GetSurroundingText* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputConnectionCallProto_GetSurroundingText>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
    MergeFrom(*source);
  }
}

void InputConnectionCallProto_GetSurroundingText::MergeFrom(const InputConnectionCallProto_GetSurroundingText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_result()->::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText::MergeFrom(from.result());
    }
    if (cached_has_bits & 0x00000002u) {
      before_length_ = from.before_length_;
    }
    if (cached_has_bits & 0x00000004u) {
      after_length_ = from.after_length_;
    }
    if (cached_has_bits & 0x00000008u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InputConnectionCallProto_GetSurroundingText::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputConnectionCallProto_GetSurroundingText::CopyFrom(const InputConnectionCallProto_GetSurroundingText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetSurroundingText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputConnectionCallProto_GetSurroundingText::IsInitialized() const {
  return true;
}

void InputConnectionCallProto_GetSurroundingText::InternalSwap(InputConnectionCallProto_GetSurroundingText* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
  swap(before_length_, other->before_length_);
  swap(after_length_, other->after_length_);
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputConnectionCallProto_GetSurroundingText::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InputConnectionCallProto_GetCursorCapsMode::InitAsDefaultInstance() {
}
class InputConnectionCallProto_GetCursorCapsMode::_Internal {
 public:
  using HasBits = decltype(std::declval<InputConnectionCallProto_GetCursorCapsMode>()._has_bits_);
  static void set_has_req_modes(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

InputConnectionCallProto_GetCursorCapsMode::InputConnectionCallProto_GetCursorCapsMode()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
}
InputConnectionCallProto_GetCursorCapsMode::InputConnectionCallProto_GetCursorCapsMode(const InputConnectionCallProto_GetCursorCapsMode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&req_modes_, &from.req_modes_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&req_modes_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
}

void InputConnectionCallProto_GetCursorCapsMode::SharedCtor() {
  ::memset(&req_modes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&req_modes_)) + sizeof(result_));
}

InputConnectionCallProto_GetCursorCapsMode::~InputConnectionCallProto_GetCursorCapsMode() {
  // @@protoc_insertion_point(destructor:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
  SharedDtor();
}

void InputConnectionCallProto_GetCursorCapsMode::SharedDtor() {
}

void InputConnectionCallProto_GetCursorCapsMode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputConnectionCallProto_GetCursorCapsMode& InputConnectionCallProto_GetCursorCapsMode::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputConnectionCallProto_GetCursorCapsMode_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  return *internal_default_instance();
}


void InputConnectionCallProto_GetCursorCapsMode::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&req_modes_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&result_) -
        reinterpret_cast<char*>(&req_modes_)) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InputConnectionCallProto_GetCursorCapsMode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 req_modes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_req_modes(&has_bits);
          req_modes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InputConnectionCallProto_GetCursorCapsMode::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 req_modes = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_req_modes(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &req_modes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_result(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InputConnectionCallProto_GetCursorCapsMode::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 req_modes = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->req_modes(), output);
  }

  // optional int32 result = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
}

::PROTOBUF_NAMESPACE_ID::uint8* InputConnectionCallProto_GetCursorCapsMode::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 req_modes = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->req_modes(), target);
  }

  // optional int32 result = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
  return target;
}

size_t InputConnectionCallProto_GetCursorCapsMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 req_modes = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->req_modes());
    }

    // optional int32 result = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputConnectionCallProto_GetCursorCapsMode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
  GOOGLE_DCHECK_NE(&from, this);
  const InputConnectionCallProto_GetCursorCapsMode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputConnectionCallProto_GetCursorCapsMode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
    MergeFrom(*source);
  }
}

void InputConnectionCallProto_GetCursorCapsMode::MergeFrom(const InputConnectionCallProto_GetCursorCapsMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      req_modes_ = from.req_modes_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InputConnectionCallProto_GetCursorCapsMode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputConnectionCallProto_GetCursorCapsMode::CopyFrom(const InputConnectionCallProto_GetCursorCapsMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputConnectionCallProto_GetCursorCapsMode::IsInitialized() const {
  return true;
}

void InputConnectionCallProto_GetCursorCapsMode::InternalSwap(InputConnectionCallProto_GetCursorCapsMode* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(req_modes_, other->req_modes_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputConnectionCallProto_GetCursorCapsMode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::InitAsDefaultInstance() {
}
class InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<InputConnectionCallProto_GetExtractedText_ExtractedTextRequest>()._has_bits_);
  static void set_has_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_hint_max_lines(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_hint_max_chars(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
}
InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest(const InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&token_, &from.token_,
    static_cast<size_t>(reinterpret_cast<char*>(&hint_max_chars_) -
    reinterpret_cast<char*>(&token_)) + sizeof(hint_max_chars_));
  // @@protoc_insertion_point(copy_constructor:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
}

void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::SharedCtor() {
  ::memset(&token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hint_max_chars_) -
      reinterpret_cast<char*>(&token_)) + sizeof(hint_max_chars_));
}

InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::~InputConnectionCallProto_GetExtractedText_ExtractedTextRequest() {
  // @@protoc_insertion_point(destructor:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
  SharedDtor();
}

void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::SharedDtor() {
}

void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputConnectionCallProto_GetExtractedText_ExtractedTextRequest_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  return *internal_default_instance();
}


void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hint_max_chars_) -
        reinterpret_cast<char*>(&token_)) + sizeof(hint_max_chars_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_token(&has_bits);
          token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_flags(&has_bits);
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 hint_max_lines = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_hint_max_lines(&has_bits);
          hint_max_lines_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 hint_max_chars = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_hint_max_chars(&has_bits);
          hint_max_chars_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 token = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_token(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hint_max_lines = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_hint_max_lines(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &hint_max_lines_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hint_max_chars = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_hint_max_chars(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &hint_max_chars_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->token(), output);
  }

  // optional int32 flags = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->flags(), output);
  }

  // optional int32 hint_max_lines = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->hint_max_lines(), output);
  }

  // optional int32 hint_max_chars = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->hint_max_chars(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 token = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->token(), target);
  }

  // optional int32 flags = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->flags(), target);
  }

  // optional int32 hint_max_lines = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->hint_max_lines(), target);
  }

  // optional int32 hint_max_chars = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->hint_max_chars(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
  return target;
}

size_t InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int32 token = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->token());
    }

    // optional int32 flags = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->flags());
    }

    // optional int32 hint_max_lines = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->hint_max_lines());
    }

    // optional int32 hint_max_chars = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->hint_max_chars());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputConnectionCallProto_GetExtractedText_ExtractedTextRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
    MergeFrom(*source);
  }
}

void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::MergeFrom(const InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      token_ = from.token_;
    }
    if (cached_has_bits & 0x00000002u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000004u) {
      hint_max_lines_ = from.hint_max_lines_;
    }
    if (cached_has_bits & 0x00000008u) {
      hint_max_chars_ = from.hint_max_chars_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::CopyFrom(const InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::IsInitialized() const {
  return true;
}

void InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::InternalSwap(InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(token_, other->token_);
  swap(flags_, other->flags_);
  swap(hint_max_lines_, other->hint_max_lines_);
  swap(hint_max_chars_, other->hint_max_chars_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InputConnectionCallProto_GetExtractedText::InitAsDefaultInstance() {
  ::android::view::inputmethod::_InputConnectionCallProto_GetExtractedText_default_instance_._instance.get_mutable()->request_ = const_cast< ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest*>(
      ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::internal_default_instance());
}
class InputConnectionCallProto_GetExtractedText::_Internal {
 public:
  using HasBits = decltype(std::declval<InputConnectionCallProto_GetExtractedText>()._has_bits_);
  static const ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest& request(const InputConnectionCallProto_GetExtractedText* msg);
  static void set_has_request(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest&
InputConnectionCallProto_GetExtractedText::_Internal::request(const InputConnectionCallProto_GetExtractedText* msg) {
  return *msg->request_;
}
InputConnectionCallProto_GetExtractedText::InputConnectionCallProto_GetExtractedText()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
}
InputConnectionCallProto_GetExtractedText::InputConnectionCallProto_GetExtractedText(const InputConnectionCallProto_GetExtractedText& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  if (from.has_request()) {
    request_ = new ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest(*from.request_);
  } else {
    request_ = nullptr;
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
}

void InputConnectionCallProto_GetExtractedText::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputConnectionCallProto_GetExtractedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&request_)) + sizeof(flags_));
}

InputConnectionCallProto_GetExtractedText::~InputConnectionCallProto_GetExtractedText() {
  // @@protoc_insertion_point(destructor:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
  SharedDtor();
}

void InputConnectionCallProto_GetExtractedText::SharedDtor() {
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete request_;
}

void InputConnectionCallProto_GetExtractedText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputConnectionCallProto_GetExtractedText& InputConnectionCallProto_GetExtractedText::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputConnectionCallProto_GetExtractedText_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  return *internal_default_instance();
}


void InputConnectionCallProto_GetExtractedText::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      result_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(request_ != nullptr);
      request_->Clear();
    }
  }
  flags_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InputConnectionCallProto_GetExtractedText::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_flags(&has_bits);
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string result = 3 [(.android.privacy) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_result(), ptr, ctx, "android.view.inputmethod.InputConnectionCallProto.GetExtractedText.result");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InputConnectionCallProto_GetExtractedText::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest request = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string result = 3 [(.android.privacy) = {
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), static_cast<int>(this->result().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.view.inputmethod.InputConnectionCallProto.GetExtractedText.result");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InputConnectionCallProto_GetExtractedText::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest request = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::request(this), output);
  }

  // optional int32 flags = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->flags(), output);
  }

  // optional string result = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.inputmethod.InputConnectionCallProto.GetExtractedText.result");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
}

::PROTOBUF_NAMESPACE_ID::uint8* InputConnectionCallProto_GetExtractedText::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest request = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::request(this), target);
  }

  // optional int32 flags = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->flags(), target);
  }

  // optional string result = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.inputmethod.InputConnectionCallProto.GetExtractedText.result");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
  return target;
}

size_t InputConnectionCallProto_GetExtractedText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string result = 3 [(.android.privacy) = {
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->result());
    }

    // optional .android.view.inputmethod.InputConnectionCallProto.GetExtractedText.ExtractedTextRequest request = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_);
    }

    // optional int32 flags = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->flags());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputConnectionCallProto_GetExtractedText::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
  GOOGLE_DCHECK_NE(&from, this);
  const InputConnectionCallProto_GetExtractedText* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputConnectionCallProto_GetExtractedText>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
    MergeFrom(*source);
  }
}

void InputConnectionCallProto_GetExtractedText::MergeFrom(const InputConnectionCallProto_GetExtractedText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      result_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_request()->::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest::MergeFrom(from.request());
    }
    if (cached_has_bits & 0x00000004u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InputConnectionCallProto_GetExtractedText::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputConnectionCallProto_GetExtractedText::CopyFrom(const InputConnectionCallProto_GetExtractedText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.inputmethod.InputConnectionCallProto.GetExtractedText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputConnectionCallProto_GetExtractedText::IsInitialized() const {
  return true;
}

void InputConnectionCallProto_GetExtractedText::InternalSwap(InputConnectionCallProto_GetExtractedText* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_, other->request_);
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputConnectionCallProto_GetExtractedText::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InputConnectionCallProto::InitAsDefaultInstance() {
  ::android::view::inputmethod::_InputConnectionCallProto_default_instance_.get_text_before_cursor_ = const_cast< ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor*>(
      ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor::internal_default_instance());
  ::android::view::inputmethod::_InputConnectionCallProto_default_instance_.get_text_after_cursor_ = const_cast< ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor*>(
      ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor::internal_default_instance());
  ::android::view::inputmethod::_InputConnectionCallProto_default_instance_.get_selected_text_ = const_cast< ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText*>(
      ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText::internal_default_instance());
  ::android::view::inputmethod::_InputConnectionCallProto_default_instance_.get_surrounding_text_ = const_cast< ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText*>(
      ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText::internal_default_instance());
  ::android::view::inputmethod::_InputConnectionCallProto_default_instance_.get_cursor_caps_mode_ = const_cast< ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode*>(
      ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode::internal_default_instance());
  ::android::view::inputmethod::_InputConnectionCallProto_default_instance_.get_extracted_text_ = const_cast< ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText*>(
      ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText::internal_default_instance());
}
class InputConnectionCallProto::_Internal {
 public:
  using HasBits = decltype(std::declval<InputConnectionCallProto>()._has_bits_);
  static const ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor& get_text_before_cursor(const InputConnectionCallProto* msg);
  static const ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor& get_text_after_cursor(const InputConnectionCallProto* msg);
  static const ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText& get_selected_text(const InputConnectionCallProto* msg);
  static const ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText& get_surrounding_text(const InputConnectionCallProto* msg);
  static const ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode& get_cursor_caps_mode(const InputConnectionCallProto* msg);
  static const ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText& get_extracted_text(const InputConnectionCallProto* msg);
};

const ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor&
InputConnectionCallProto::_Internal::get_text_before_cursor(const InputConnectionCallProto* msg) {
  return *msg->method_call_.get_text_before_cursor_;
}
const ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor&
InputConnectionCallProto::_Internal::get_text_after_cursor(const InputConnectionCallProto* msg) {
  return *msg->method_call_.get_text_after_cursor_;
}
const ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText&
InputConnectionCallProto::_Internal::get_selected_text(const InputConnectionCallProto* msg) {
  return *msg->method_call_.get_selected_text_;
}
const ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText&
InputConnectionCallProto::_Internal::get_surrounding_text(const InputConnectionCallProto* msg) {
  return *msg->method_call_.get_surrounding_text_;
}
const ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode&
InputConnectionCallProto::_Internal::get_cursor_caps_mode(const InputConnectionCallProto* msg) {
  return *msg->method_call_.get_cursor_caps_mode_;
}
const ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText&
InputConnectionCallProto::_Internal::get_extracted_text(const InputConnectionCallProto* msg) {
  return *msg->method_call_.get_extracted_text_;
}
void InputConnectionCallProto::set_allocated_get_text_before_cursor(::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor* get_text_before_cursor) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_method_call();
  if (get_text_before_cursor) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      get_text_before_cursor = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_text_before_cursor, submessage_arena);
    }
    set_has_get_text_before_cursor();
    method_call_.get_text_before_cursor_ = get_text_before_cursor;
  }
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionCallProto.get_text_before_cursor)
}
void InputConnectionCallProto::set_allocated_get_text_after_cursor(::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor* get_text_after_cursor) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_method_call();
  if (get_text_after_cursor) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      get_text_after_cursor = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_text_after_cursor, submessage_arena);
    }
    set_has_get_text_after_cursor();
    method_call_.get_text_after_cursor_ = get_text_after_cursor;
  }
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionCallProto.get_text_after_cursor)
}
void InputConnectionCallProto::set_allocated_get_selected_text(::android::view::inputmethod::InputConnectionCallProto_GetSelectedText* get_selected_text) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_method_call();
  if (get_selected_text) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      get_selected_text = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_selected_text, submessage_arena);
    }
    set_has_get_selected_text();
    method_call_.get_selected_text_ = get_selected_text;
  }
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionCallProto.get_selected_text)
}
void InputConnectionCallProto::set_allocated_get_surrounding_text(::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText* get_surrounding_text) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_method_call();
  if (get_surrounding_text) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      get_surrounding_text = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_surrounding_text, submessage_arena);
    }
    set_has_get_surrounding_text();
    method_call_.get_surrounding_text_ = get_surrounding_text;
  }
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionCallProto.get_surrounding_text)
}
void InputConnectionCallProto::set_allocated_get_cursor_caps_mode(::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode* get_cursor_caps_mode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_method_call();
  if (get_cursor_caps_mode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      get_cursor_caps_mode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_cursor_caps_mode, submessage_arena);
    }
    set_has_get_cursor_caps_mode();
    method_call_.get_cursor_caps_mode_ = get_cursor_caps_mode;
  }
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionCallProto.get_cursor_caps_mode)
}
void InputConnectionCallProto::set_allocated_get_extracted_text(::android::view::inputmethod::InputConnectionCallProto_GetExtractedText* get_extracted_text) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_method_call();
  if (get_extracted_text) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      get_extracted_text = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_extracted_text, submessage_arena);
    }
    set_has_get_extracted_text();
    method_call_.get_extracted_text_ = get_extracted_text;
  }
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.InputConnectionCallProto.get_extracted_text)
}
InputConnectionCallProto::InputConnectionCallProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.inputmethod.InputConnectionCallProto)
}
InputConnectionCallProto::InputConnectionCallProto(const InputConnectionCallProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_method_call();
  switch (from.method_call_case()) {
    case kGetTextBeforeCursor: {
      mutable_get_text_before_cursor()->::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor::MergeFrom(from.get_text_before_cursor());
      break;
    }
    case kGetTextAfterCursor: {
      mutable_get_text_after_cursor()->::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor::MergeFrom(from.get_text_after_cursor());
      break;
    }
    case kGetSelectedText: {
      mutable_get_selected_text()->::android::view::inputmethod::InputConnectionCallProto_GetSelectedText::MergeFrom(from.get_selected_text());
      break;
    }
    case kGetSurroundingText: {
      mutable_get_surrounding_text()->::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText::MergeFrom(from.get_surrounding_text());
      break;
    }
    case kGetCursorCapsMode: {
      mutable_get_cursor_caps_mode()->::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode::MergeFrom(from.get_cursor_caps_mode());
      break;
    }
    case kGetExtractedText: {
      mutable_get_extracted_text()->::android::view::inputmethod::InputConnectionCallProto_GetExtractedText::MergeFrom(from.get_extracted_text());
      break;
    }
    case METHOD_CALL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:android.view.inputmethod.InputConnectionCallProto)
}

void InputConnectionCallProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputConnectionCallProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  clear_has_method_call();
}

InputConnectionCallProto::~InputConnectionCallProto() {
  // @@protoc_insertion_point(destructor:android.view.inputmethod.InputConnectionCallProto)
  SharedDtor();
}

void InputConnectionCallProto::SharedDtor() {
  if (has_method_call()) {
    clear_method_call();
  }
}

void InputConnectionCallProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputConnectionCallProto& InputConnectionCallProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputConnectionCallProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2finputconnection_2eproto.base);
  return *internal_default_instance();
}


void InputConnectionCallProto::clear_method_call() {
// @@protoc_insertion_point(one_of_clear_start:android.view.inputmethod.InputConnectionCallProto)
  switch (method_call_case()) {
    case kGetTextBeforeCursor: {
      delete method_call_.get_text_before_cursor_;
      break;
    }
    case kGetTextAfterCursor: {
      delete method_call_.get_text_after_cursor_;
      break;
    }
    case kGetSelectedText: {
      delete method_call_.get_selected_text_;
      break;
    }
    case kGetSurroundingText: {
      delete method_call_.get_surrounding_text_;
      break;
    }
    case kGetCursorCapsMode: {
      delete method_call_.get_cursor_caps_mode_;
      break;
    }
    case kGetExtractedText: {
      delete method_call_.get_extracted_text_;
      break;
    }
    case METHOD_CALL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = METHOD_CALL_NOT_SET;
}


void InputConnectionCallProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.inputmethod.InputConnectionCallProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_method_call();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InputConnectionCallProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor get_text_before_cursor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_get_text_before_cursor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor get_text_after_cursor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_get_text_after_cursor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.inputmethod.InputConnectionCallProto.GetSelectedText get_selected_text = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_get_selected_text(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.inputmethod.InputConnectionCallProto.GetSurroundingText get_surrounding_text = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_get_surrounding_text(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode get_cursor_caps_mode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_get_cursor_caps_mode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.inputmethod.InputConnectionCallProto.GetExtractedText get_extracted_text = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_get_extracted_text(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InputConnectionCallProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.inputmethod.InputConnectionCallProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor get_text_before_cursor = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_get_text_before_cursor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor get_text_after_cursor = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_get_text_after_cursor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.inputmethod.InputConnectionCallProto.GetSelectedText get_selected_text = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_get_selected_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.inputmethod.InputConnectionCallProto.GetSurroundingText get_surrounding_text = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_get_surrounding_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode get_cursor_caps_mode = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_get_cursor_caps_mode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.inputmethod.InputConnectionCallProto.GetExtractedText get_extracted_text = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_get_extracted_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.inputmethod.InputConnectionCallProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.inputmethod.InputConnectionCallProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InputConnectionCallProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.inputmethod.InputConnectionCallProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (method_call_case()) {
    case kGetTextBeforeCursor:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, _Internal::get_text_before_cursor(this), output);
      break;
    case kGetTextAfterCursor:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, _Internal::get_text_after_cursor(this), output);
      break;
    case kGetSelectedText:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, _Internal::get_selected_text(this), output);
      break;
    case kGetSurroundingText:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, _Internal::get_surrounding_text(this), output);
      break;
    case kGetCursorCapsMode:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, _Internal::get_cursor_caps_mode(this), output);
      break;
    case kGetExtractedText:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, _Internal::get_extracted_text(this), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.inputmethod.InputConnectionCallProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* InputConnectionCallProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.inputmethod.InputConnectionCallProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (method_call_case()) {
    case kGetTextBeforeCursor:
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessageToArray(
          1, _Internal::get_text_before_cursor(this), target);
      break;
    case kGetTextAfterCursor:
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, _Internal::get_text_after_cursor(this), target);
      break;
    case kGetSelectedText:
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, _Internal::get_selected_text(this), target);
      break;
    case kGetSurroundingText:
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, _Internal::get_surrounding_text(this), target);
      break;
    case kGetCursorCapsMode:
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, _Internal::get_cursor_caps_mode(this), target);
      break;
    case kGetExtractedText:
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessageToArray(
          6, _Internal::get_extracted_text(this), target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.inputmethod.InputConnectionCallProto)
  return target;
}

size_t InputConnectionCallProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.inputmethod.InputConnectionCallProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (method_call_case()) {
    // optional .android.view.inputmethod.InputConnectionCallProto.GetTextBeforeCursor get_text_before_cursor = 1;
    case kGetTextBeforeCursor: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *method_call_.get_text_before_cursor_);
      break;
    }
    // optional .android.view.inputmethod.InputConnectionCallProto.GetTextAfterCursor get_text_after_cursor = 2;
    case kGetTextAfterCursor: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *method_call_.get_text_after_cursor_);
      break;
    }
    // optional .android.view.inputmethod.InputConnectionCallProto.GetSelectedText get_selected_text = 3;
    case kGetSelectedText: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *method_call_.get_selected_text_);
      break;
    }
    // optional .android.view.inputmethod.InputConnectionCallProto.GetSurroundingText get_surrounding_text = 4;
    case kGetSurroundingText: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *method_call_.get_surrounding_text_);
      break;
    }
    // optional .android.view.inputmethod.InputConnectionCallProto.GetCursorCapsMode get_cursor_caps_mode = 5;
    case kGetCursorCapsMode: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *method_call_.get_cursor_caps_mode_);
      break;
    }
    // optional .android.view.inputmethod.InputConnectionCallProto.GetExtractedText get_extracted_text = 6;
    case kGetExtractedText: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *method_call_.get_extracted_text_);
      break;
    }
    case METHOD_CALL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputConnectionCallProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.inputmethod.InputConnectionCallProto)
  GOOGLE_DCHECK_NE(&from, this);
  const InputConnectionCallProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputConnectionCallProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.inputmethod.InputConnectionCallProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.inputmethod.InputConnectionCallProto)
    MergeFrom(*source);
  }
}

void InputConnectionCallProto::MergeFrom(const InputConnectionCallProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.inputmethod.InputConnectionCallProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.method_call_case()) {
    case kGetTextBeforeCursor: {
      mutable_get_text_before_cursor()->::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor::MergeFrom(from.get_text_before_cursor());
      break;
    }
    case kGetTextAfterCursor: {
      mutable_get_text_after_cursor()->::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor::MergeFrom(from.get_text_after_cursor());
      break;
    }
    case kGetSelectedText: {
      mutable_get_selected_text()->::android::view::inputmethod::InputConnectionCallProto_GetSelectedText::MergeFrom(from.get_selected_text());
      break;
    }
    case kGetSurroundingText: {
      mutable_get_surrounding_text()->::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText::MergeFrom(from.get_surrounding_text());
      break;
    }
    case kGetCursorCapsMode: {
      mutable_get_cursor_caps_mode()->::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode::MergeFrom(from.get_cursor_caps_mode());
      break;
    }
    case kGetExtractedText: {
      mutable_get_extracted_text()->::android::view::inputmethod::InputConnectionCallProto_GetExtractedText::MergeFrom(from.get_extracted_text());
      break;
    }
    case METHOD_CALL_NOT_SET: {
      break;
    }
  }
}

void InputConnectionCallProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.inputmethod.InputConnectionCallProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputConnectionCallProto::CopyFrom(const InputConnectionCallProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.inputmethod.InputConnectionCallProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputConnectionCallProto::IsInitialized() const {
  return true;
}

void InputConnectionCallProto::InternalSwap(InputConnectionCallProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(method_call_, other->method_call_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputConnectionCallProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace inputmethod
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::view::inputmethod::InputConnectionProto* Arena::CreateMaybeMessage< ::android::view::inputmethod::InputConnectionProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::inputmethod::InputConnectionProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor* Arena::CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::inputmethod::InputConnectionCallProto_GetTextBeforeCursor >(arena);
}
template<> PROTOBUF_NOINLINE ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor* Arena::CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::inputmethod::InputConnectionCallProto_GetTextAfterCursor >(arena);
}
template<> PROTOBUF_NOINLINE ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText* Arena::CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::inputmethod::InputConnectionCallProto_GetSelectedText >(arena);
}
template<> PROTOBUF_NOINLINE ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText* Arena::CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText_SurroundingText >(arena);
}
template<> PROTOBUF_NOINLINE ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText* Arena::CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::inputmethod::InputConnectionCallProto_GetSurroundingText >(arena);
}
template<> PROTOBUF_NOINLINE ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode* Arena::CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::inputmethod::InputConnectionCallProto_GetCursorCapsMode >(arena);
}
template<> PROTOBUF_NOINLINE ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest* Arena::CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText_ExtractedTextRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText* Arena::CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::inputmethod::InputConnectionCallProto_GetExtractedText >(arena);
}
template<> PROTOBUF_NOINLINE ::android::view::inputmethod::InputConnectionCallProto* Arena::CreateMaybeMessage< ::android::view::inputmethod::InputConnectionCallProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::inputmethod::InputConnectionCallProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
