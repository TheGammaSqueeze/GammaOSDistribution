// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/windowmanagertrace.proto

#include "frameworks/base/core/proto/android/server/windowmanagertrace.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_WindowManagerServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WindowManagerTraceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto;
namespace com {
namespace android {
namespace server {
namespace wm {
class WindowManagerTraceFileProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WindowManagerTraceFileProto> _instance;
} _WindowManagerTraceFileProto_default_instance_;
class WindowManagerTraceProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WindowManagerTraceProto> _instance;
} _WindowManagerTraceProto_default_instance_;
}  // namespace wm
}  // namespace server
}  // namespace android
}  // namespace com
static void InitDefaultsscc_info_WindowManagerTraceFileProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_WindowManagerTraceFileProto_default_instance_;
    new (ptr) ::com::android::server::wm::WindowManagerTraceFileProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::WindowManagerTraceFileProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WindowManagerTraceFileProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_WindowManagerTraceFileProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto}, {
      &scc_info_WindowManagerTraceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto.base,}};

static void InitDefaultsscc_info_WindowManagerTraceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::wm::_WindowManagerTraceProto_default_instance_;
    new (ptr) ::com::android::server::wm::WindowManagerTraceProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::wm::WindowManagerTraceProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WindowManagerTraceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_WindowManagerTraceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto}, {
      &scc_info_WindowManagerServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerTraceFileProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerTraceFileProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerTraceFileProto, magic_number_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerTraceFileProto, entry_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerTraceProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerTraceProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerTraceProto, elapsed_realtime_nanos_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerTraceProto, where_),
  PROTOBUF_FIELD_OFFSET(::com::android::server::wm::WindowManagerTraceProto, window_manager_service_),
  2,
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::com::android::server::wm::WindowManagerTraceFileProto)},
  { 9, 17, sizeof(::com::android::server::wm::WindowManagerTraceProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_WindowManagerTraceFileProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::android::server::wm::_WindowManagerTraceProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nBframeworks/base/core/proto/android/ser"
  "ver/windowmanagertrace.proto\022\025com.androi"
  "d.server.wm\032Dframeworks/base/core/proto/"
  "android/server/windowmanagerservice.prot"
  "o\"\276\001\n\033WindowManagerTraceFileProto\022\024\n\014mag"
  "ic_number\030\001 \001(\006\022=\n\005entry\030\002 \003(\0132..com.and"
  "roid.server.wm.WindowManagerTraceProto\"J"
  "\n\013MagicNumber\022\013\n\007INVALID\020\000\022\026\n\016MAGIC_NUMB"
  "ER_L\020\327\222\271\242\005\022\026\n\016MAGIC_NUMBER_H\020\322\202\215\252\004\"\236\001\n\027W"
  "indowManagerTraceProto\022\036\n\026elapsed_realti"
  "me_nanos\030\001 \001(\006\022\r\n\005where\030\002 \001(\t\022T\n\026window_"
  "manager_service\030\003 \001(\01324.com.android.serv"
  "er.wm.WindowManagerServiceDumpProtoB\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto_deps[1] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagerservice_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto_sccs[2] = {
  &scc_info_WindowManagerTraceFileProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto.base,
  &scc_info_WindowManagerTraceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto, "frameworks/base/core/proto/android/server/windowmanagertrace.proto", 519,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto, 2, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto), true);
namespace com {
namespace android {
namespace server {
namespace wm {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* WindowManagerTraceFileProto_MagicNumber_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto[0];
}
bool WindowManagerTraceFileProto_MagicNumber_IsValid(int value) {
  switch (value) {
    case 0:
    case 1162035538:
    case 1414416727:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr WindowManagerTraceFileProto_MagicNumber WindowManagerTraceFileProto::INVALID;
constexpr WindowManagerTraceFileProto_MagicNumber WindowManagerTraceFileProto::MAGIC_NUMBER_L;
constexpr WindowManagerTraceFileProto_MagicNumber WindowManagerTraceFileProto::MAGIC_NUMBER_H;
constexpr WindowManagerTraceFileProto_MagicNumber WindowManagerTraceFileProto::MagicNumber_MIN;
constexpr WindowManagerTraceFileProto_MagicNumber WindowManagerTraceFileProto::MagicNumber_MAX;
constexpr int WindowManagerTraceFileProto::MagicNumber_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void WindowManagerTraceFileProto::InitAsDefaultInstance() {
}
class WindowManagerTraceFileProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WindowManagerTraceFileProto>()._has_bits_);
  static void set_has_magic_number(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

WindowManagerTraceFileProto::WindowManagerTraceFileProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.WindowManagerTraceFileProto)
}
WindowManagerTraceFileProto::WindowManagerTraceFileProto(const WindowManagerTraceFileProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      entry_(from.entry_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  magic_number_ = from.magic_number_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.WindowManagerTraceFileProto)
}

void WindowManagerTraceFileProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WindowManagerTraceFileProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto.base);
  magic_number_ = PROTOBUF_ULONGLONG(0);
}

WindowManagerTraceFileProto::~WindowManagerTraceFileProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.WindowManagerTraceFileProto)
  SharedDtor();
}

void WindowManagerTraceFileProto::SharedDtor() {
}

void WindowManagerTraceFileProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WindowManagerTraceFileProto& WindowManagerTraceFileProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WindowManagerTraceFileProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto.base);
  return *internal_default_instance();
}


void WindowManagerTraceFileProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.WindowManagerTraceFileProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entry_.Clear();
  magic_number_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WindowManagerTraceFileProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 magic_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_magic_number(&has_bits);
          magic_number_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.wm.WindowManagerTraceProto entry = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_entry(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WindowManagerTraceFileProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.WindowManagerTraceFileProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 magic_number = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (9 & 0xFF)) {
          _Internal::set_has_magic_number(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &magic_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.wm.WindowManagerTraceProto entry = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.WindowManagerTraceFileProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.WindowManagerTraceFileProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WindowManagerTraceFileProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.WindowManagerTraceFileProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 magic_number = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64(1, this->magic_number(), output);
  }

  // repeated .com.android.server.wm.WindowManagerTraceProto entry = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entry_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->entry(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.WindowManagerTraceFileProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WindowManagerTraceFileProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.WindowManagerTraceFileProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 magic_number = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->magic_number(), target);
  }

  // repeated .com.android.server.wm.WindowManagerTraceProto entry = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entry_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->entry(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.WindowManagerTraceFileProto)
  return target;
}

size_t WindowManagerTraceFileProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.WindowManagerTraceFileProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.wm.WindowManagerTraceProto entry = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->entry_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->entry(static_cast<int>(i)));
    }
  }

  // optional fixed64 magic_number = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WindowManagerTraceFileProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.WindowManagerTraceFileProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WindowManagerTraceFileProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WindowManagerTraceFileProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.WindowManagerTraceFileProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.WindowManagerTraceFileProto)
    MergeFrom(*source);
  }
}

void WindowManagerTraceFileProto::MergeFrom(const WindowManagerTraceFileProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.WindowManagerTraceFileProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entry_.MergeFrom(from.entry_);
  if (from.has_magic_number()) {
    set_magic_number(from.magic_number());
  }
}

void WindowManagerTraceFileProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.WindowManagerTraceFileProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WindowManagerTraceFileProto::CopyFrom(const WindowManagerTraceFileProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.WindowManagerTraceFileProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowManagerTraceFileProto::IsInitialized() const {
  return true;
}

void WindowManagerTraceFileProto::InternalSwap(WindowManagerTraceFileProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&entry_)->InternalSwap(CastToBase(&other->entry_));
  swap(magic_number_, other->magic_number_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WindowManagerTraceFileProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WindowManagerTraceProto::InitAsDefaultInstance() {
  ::com::android::server::wm::_WindowManagerTraceProto_default_instance_._instance.get_mutable()->window_manager_service_ = const_cast< ::com::android::server::wm::WindowManagerServiceDumpProto*>(
      ::com::android::server::wm::WindowManagerServiceDumpProto::internal_default_instance());
}
class WindowManagerTraceProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WindowManagerTraceProto>()._has_bits_);
  static void set_has_elapsed_realtime_nanos(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_where(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::android::server::wm::WindowManagerServiceDumpProto& window_manager_service(const WindowManagerTraceProto* msg);
  static void set_has_window_manager_service(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::com::android::server::wm::WindowManagerServiceDumpProto&
WindowManagerTraceProto::_Internal::window_manager_service(const WindowManagerTraceProto* msg) {
  return *msg->window_manager_service_;
}
void WindowManagerTraceProto::clear_window_manager_service() {
  if (window_manager_service_ != nullptr) window_manager_service_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
WindowManagerTraceProto::WindowManagerTraceProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.wm.WindowManagerTraceProto)
}
WindowManagerTraceProto::WindowManagerTraceProto(const WindowManagerTraceProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  where_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_where()) {
    where_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.where_);
  }
  if (from.has_window_manager_service()) {
    window_manager_service_ = new ::com::android::server::wm::WindowManagerServiceDumpProto(*from.window_manager_service_);
  } else {
    window_manager_service_ = nullptr;
  }
  elapsed_realtime_nanos_ = from.elapsed_realtime_nanos_;
  // @@protoc_insertion_point(copy_constructor:com.android.server.wm.WindowManagerTraceProto)
}

void WindowManagerTraceProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WindowManagerTraceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto.base);
  where_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&window_manager_service_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elapsed_realtime_nanos_) -
      reinterpret_cast<char*>(&window_manager_service_)) + sizeof(elapsed_realtime_nanos_));
}

WindowManagerTraceProto::~WindowManagerTraceProto() {
  // @@protoc_insertion_point(destructor:com.android.server.wm.WindowManagerTraceProto)
  SharedDtor();
}

void WindowManagerTraceProto::SharedDtor() {
  where_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete window_manager_service_;
}

void WindowManagerTraceProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WindowManagerTraceProto& WindowManagerTraceProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WindowManagerTraceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwindowmanagertrace_2eproto.base);
  return *internal_default_instance();
}


void WindowManagerTraceProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.wm.WindowManagerTraceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      where_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(window_manager_service_ != nullptr);
      window_manager_service_->Clear();
    }
  }
  elapsed_realtime_nanos_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WindowManagerTraceProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 elapsed_realtime_nanos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_elapsed_realtime_nanos(&has_bits);
          elapsed_realtime_nanos_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional string where = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_where(), ptr, ctx, "com.android.server.wm.WindowManagerTraceProto.where");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.wm.WindowManagerServiceDumpProto window_manager_service = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_window_manager_service(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WindowManagerTraceProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.android.server.wm.WindowManagerTraceProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 elapsed_realtime_nanos = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (9 & 0xFF)) {
          _Internal::set_has_elapsed_realtime_nanos(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &elapsed_realtime_nanos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string where = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_where()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->where().data(), static_cast<int>(this->where().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "com.android.server.wm.WindowManagerTraceProto.where");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.wm.WindowManagerServiceDumpProto window_manager_service = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window_manager_service()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.wm.WindowManagerTraceProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.wm.WindowManagerTraceProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WindowManagerTraceProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.wm.WindowManagerTraceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 elapsed_realtime_nanos = 1;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64(1, this->elapsed_realtime_nanos(), output);
  }

  // optional string where = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->where().data(), static_cast<int>(this->where().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.WindowManagerTraceProto.where");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->where(), output);
  }

  // optional .com.android.server.wm.WindowManagerServiceDumpProto window_manager_service = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::window_manager_service(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.android.server.wm.WindowManagerTraceProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WindowManagerTraceProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.android.server.wm.WindowManagerTraceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 elapsed_realtime_nanos = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->elapsed_realtime_nanos(), target);
  }

  // optional string where = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->where().data(), static_cast<int>(this->where().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "com.android.server.wm.WindowManagerTraceProto.where");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->where(), target);
  }

  // optional .com.android.server.wm.WindowManagerServiceDumpProto window_manager_service = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::window_manager_service(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.android.server.wm.WindowManagerTraceProto)
  return target;
}

size_t WindowManagerTraceProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.wm.WindowManagerTraceProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string where = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->where());
    }

    // optional .com.android.server.wm.WindowManagerServiceDumpProto window_manager_service = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_manager_service_);
    }

    // optional fixed64 elapsed_realtime_nanos = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WindowManagerTraceProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.android.server.wm.WindowManagerTraceProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WindowManagerTraceProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WindowManagerTraceProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.android.server.wm.WindowManagerTraceProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.android.server.wm.WindowManagerTraceProto)
    MergeFrom(*source);
  }
}

void WindowManagerTraceProto::MergeFrom(const WindowManagerTraceProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.wm.WindowManagerTraceProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      where_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.where_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_window_manager_service()->::com::android::server::wm::WindowManagerServiceDumpProto::MergeFrom(from.window_manager_service());
    }
    if (cached_has_bits & 0x00000004u) {
      elapsed_realtime_nanos_ = from.elapsed_realtime_nanos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WindowManagerTraceProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.android.server.wm.WindowManagerTraceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WindowManagerTraceProto::CopyFrom(const WindowManagerTraceProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.wm.WindowManagerTraceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WindowManagerTraceProto::IsInitialized() const {
  return true;
}

void WindowManagerTraceProto::InternalSwap(WindowManagerTraceProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  where_.Swap(&other->where_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(window_manager_service_, other->window_manager_service_);
  swap(elapsed_realtime_nanos_, other->elapsed_realtime_nanos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WindowManagerTraceProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace wm
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::android::server::wm::WindowManagerTraceFileProto* Arena::CreateMaybeMessage< ::com::android::server::wm::WindowManagerTraceFileProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::WindowManagerTraceFileProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::wm::WindowManagerTraceProto* Arena::CreateMaybeMessage< ::com::android::server::wm::WindowManagerTraceProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::wm::WindowManagerTraceProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
