// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/os/pagetypeinfo.proto

#include "frameworks/base/core/proto/android/os/pagetypeinfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PageTypeInfoProto_Block_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PageTypeInfoProto_MigrateType_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto;
namespace android {
namespace os {
class PageTypeInfoProto_MigrateTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PageTypeInfoProto_MigrateType> _instance;
} _PageTypeInfoProto_MigrateType_default_instance_;
class PageTypeInfoProto_BlockDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PageTypeInfoProto_Block> _instance;
} _PageTypeInfoProto_Block_default_instance_;
class PageTypeInfoProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PageTypeInfoProto> _instance;
} _PageTypeInfoProto_default_instance_;
}  // namespace os
}  // namespace android
static void InitDefaultsscc_info_PageTypeInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::_PageTypeInfoProto_default_instance_;
    new (ptr) ::android::os::PageTypeInfoProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::PageTypeInfoProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PageTypeInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_PageTypeInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto}, {
      &scc_info_PageTypeInfoProto_MigrateType_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto.base,
      &scc_info_PageTypeInfoProto_Block_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto.base,}};

static void InitDefaultsscc_info_PageTypeInfoProto_Block_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::_PageTypeInfoProto_Block_default_instance_;
    new (ptr) ::android::os::PageTypeInfoProto_Block();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::PageTypeInfoProto_Block::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PageTypeInfoProto_Block_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PageTypeInfoProto_Block_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto}, {}};

static void InitDefaultsscc_info_PageTypeInfoProto_MigrateType_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::_PageTypeInfoProto_MigrateType_default_instance_;
    new (ptr) ::android::os::PageTypeInfoProto_MigrateType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::PageTypeInfoProto_MigrateType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PageTypeInfoProto_MigrateType_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PageTypeInfoProto_MigrateType_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_MigrateType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_MigrateType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_MigrateType, node_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_MigrateType, zone_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_MigrateType, type_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_MigrateType, free_pages_count_),
  2,
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_Block, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_Block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_Block, node_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_Block, zone_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_Block, unmovable_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_Block, reclaimable_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_Block, movable_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_Block, cma_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_Block, reserve_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_Block, isolate_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto_Block, highatomic_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto, page_block_order_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto, pages_per_block_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto, migrate_types_),
  PROTOBUF_FIELD_OFFSET(::android::os::PageTypeInfoProto, blocks_),
  0,
  1,
  ~0u,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::android::os::PageTypeInfoProto_MigrateType)},
  { 13, 27, sizeof(::android::os::PageTypeInfoProto_Block)},
  { 36, 45, sizeof(::android::os::PageTypeInfoProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::os::_PageTypeInfoProto_MigrateType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::os::_PageTypeInfoProto_Block_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::os::_PageTypeInfoProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n8frameworks/base/core/proto/android/os/"
  "pagetypeinfo.proto\022\nandroid.os\0320framewor"
  "ks/base/core/proto/android/privacy.proto"
  "\"\323\003\n\021PageTypeInfoProto\022\030\n\020page_block_ord"
  "er\030\001 \001(\005\022\027\n\017pages_per_block\030\002 \001(\005\022@\n\rmig"
  "rate_types\030\003 \003(\0132).android.os.PageTypeIn"
  "foProto.MigrateType\0223\n\006blocks\030\004 \003(\0132#.an"
  "droid.os.PageTypeInfoProto.Block\032\\\n\013Migr"
  "ateType\022\014\n\004node\030\001 \001(\005\022\014\n\004zone\030\002 \001(\t\022\014\n\004t"
  "ype\030\003 \001(\t\022\030\n\020free_pages_count\030\004 \003(\005:\t\232\237\325"
  "\207\003\003\010\310\001\032\252\001\n\005Block\022\014\n\004node\030\001 \001(\005\022\014\n\004zone\030\002"
  " \001(\t\022\021\n\tunmovable\030\003 \001(\005\022\023\n\013reclaimable\030\004"
  " \001(\005\022\017\n\007movable\030\005 \001(\005\022\013\n\003cma\030\006 \001(\005\022\017\n\007re"
  "serve\030\007 \001(\005\022\017\n\007isolate\030\010 \001(\005\022\022\n\nhighatom"
  "ic\030\t \001(\005:\t\232\237\325\207\003\003\010\310\001:\t\232\237\325\207\003\003\010\310\001B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto_deps[1] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto_sccs[3] = {
  &scc_info_PageTypeInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto.base,
  &scc_info_PageTypeInfoProto_Block_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto.base,
  &scc_info_PageTypeInfoProto_MigrateType_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto, "frameworks/base/core/proto/android/os/pagetypeinfo.proto", 594,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto_deps, 3, 1,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto, 3, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto), true);
namespace android {
namespace os {

// ===================================================================

void PageTypeInfoProto_MigrateType::InitAsDefaultInstance() {
}
class PageTypeInfoProto_MigrateType::_Internal {
 public:
  using HasBits = decltype(std::declval<PageTypeInfoProto_MigrateType>()._has_bits_);
  static void set_has_node(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_zone(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PageTypeInfoProto_MigrateType::PageTypeInfoProto_MigrateType()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.PageTypeInfoProto.MigrateType)
}
PageTypeInfoProto_MigrateType::PageTypeInfoProto_MigrateType(const PageTypeInfoProto_MigrateType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      free_pages_count_(from.free_pages_count_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  zone_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_zone()) {
    zone_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  node_ = from.node_;
  // @@protoc_insertion_point(copy_constructor:android.os.PageTypeInfoProto.MigrateType)
}

void PageTypeInfoProto_MigrateType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PageTypeInfoProto_MigrateType_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto.base);
  zone_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  node_ = 0;
}

PageTypeInfoProto_MigrateType::~PageTypeInfoProto_MigrateType() {
  // @@protoc_insertion_point(destructor:android.os.PageTypeInfoProto.MigrateType)
  SharedDtor();
}

void PageTypeInfoProto_MigrateType::SharedDtor() {
  zone_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PageTypeInfoProto_MigrateType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PageTypeInfoProto_MigrateType& PageTypeInfoProto_MigrateType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PageTypeInfoProto_MigrateType_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto.base);
  return *internal_default_instance();
}


void PageTypeInfoProto_MigrateType::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.PageTypeInfoProto.MigrateType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  free_pages_count_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      zone_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      type_.ClearNonDefaultToEmptyNoArena();
    }
  }
  node_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PageTypeInfoProto_MigrateType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 node = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_node(&has_bits);
          node_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string zone = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_zone(), ptr, ctx, "android.os.PageTypeInfoProto.MigrateType.zone");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_type(), ptr, ctx, "android.os.PageTypeInfoProto.MigrateType.type");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 free_pages_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ptr -= 1;
          do {
            ptr += 1;
            add_free_pages_count(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 32);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(mutable_free_pages_count(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PageTypeInfoProto_MigrateType::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.os.PageTypeInfoProto.MigrateType)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 node = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_node(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string zone = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.os.PageTypeInfoProto.MigrateType.zone");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string type = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), static_cast<int>(this->type().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.os.PageTypeInfoProto.MigrateType.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 free_pages_count = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_free_pages_count())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_free_pages_count())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.PageTypeInfoProto.MigrateType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.PageTypeInfoProto.MigrateType)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PageTypeInfoProto_MigrateType::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.PageTypeInfoProto.MigrateType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 node = 1;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->node(), output);
  }

  // optional string zone = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PageTypeInfoProto.MigrateType.zone");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // optional string type = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PageTypeInfoProto.MigrateType.type");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // repeated int32 free_pages_count = 4;
  for (int i = 0, n = this->free_pages_count_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(
      4, this->free_pages_count(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.os.PageTypeInfoProto.MigrateType)
}

::PROTOBUF_NAMESPACE_ID::uint8* PageTypeInfoProto_MigrateType::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.os.PageTypeInfoProto.MigrateType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 node = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->node(), target);
  }

  // optional string zone = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PageTypeInfoProto.MigrateType.zone");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // optional string type = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PageTypeInfoProto.MigrateType.type");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // repeated int32 free_pages_count = 4;
  target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
    WriteInt32ToArray(4, this->free_pages_count_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.os.PageTypeInfoProto.MigrateType)
  return target;
}

size_t PageTypeInfoProto_MigrateType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.PageTypeInfoProto.MigrateType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 free_pages_count = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->free_pages_count_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->free_pages_count_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string zone = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->zone());
    }

    // optional string type = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional int32 node = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->node());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PageTypeInfoProto_MigrateType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.os.PageTypeInfoProto.MigrateType)
  GOOGLE_DCHECK_NE(&from, this);
  const PageTypeInfoProto_MigrateType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PageTypeInfoProto_MigrateType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.os.PageTypeInfoProto.MigrateType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.os.PageTypeInfoProto.MigrateType)
    MergeFrom(*source);
  }
}

void PageTypeInfoProto_MigrateType::MergeFrom(const PageTypeInfoProto_MigrateType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.PageTypeInfoProto.MigrateType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  free_pages_count_.MergeFrom(from.free_pages_count_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      zone_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.zone_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000004u) {
      node_ = from.node_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PageTypeInfoProto_MigrateType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.os.PageTypeInfoProto.MigrateType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PageTypeInfoProto_MigrateType::CopyFrom(const PageTypeInfoProto_MigrateType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.PageTypeInfoProto.MigrateType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PageTypeInfoProto_MigrateType::IsInitialized() const {
  return true;
}

void PageTypeInfoProto_MigrateType::InternalSwap(PageTypeInfoProto_MigrateType* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  free_pages_count_.InternalSwap(&other->free_pages_count_);
  zone_.Swap(&other->zone_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(node_, other->node_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PageTypeInfoProto_MigrateType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PageTypeInfoProto_Block::InitAsDefaultInstance() {
}
class PageTypeInfoProto_Block::_Internal {
 public:
  using HasBits = decltype(std::declval<PageTypeInfoProto_Block>()._has_bits_);
  static void set_has_node(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_zone(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unmovable(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_reclaimable(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_movable(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_cma(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_reserve(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_isolate(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_highatomic(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

PageTypeInfoProto_Block::PageTypeInfoProto_Block()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.PageTypeInfoProto.Block)
}
PageTypeInfoProto_Block::PageTypeInfoProto_Block(const PageTypeInfoProto_Block& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  zone_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_zone()) {
    zone_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.zone_);
  }
  ::memcpy(&node_, &from.node_,
    static_cast<size_t>(reinterpret_cast<char*>(&highatomic_) -
    reinterpret_cast<char*>(&node_)) + sizeof(highatomic_));
  // @@protoc_insertion_point(copy_constructor:android.os.PageTypeInfoProto.Block)
}

void PageTypeInfoProto_Block::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PageTypeInfoProto_Block_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto.base);
  zone_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&node_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&highatomic_) -
      reinterpret_cast<char*>(&node_)) + sizeof(highatomic_));
}

PageTypeInfoProto_Block::~PageTypeInfoProto_Block() {
  // @@protoc_insertion_point(destructor:android.os.PageTypeInfoProto.Block)
  SharedDtor();
}

void PageTypeInfoProto_Block::SharedDtor() {
  zone_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PageTypeInfoProto_Block::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PageTypeInfoProto_Block& PageTypeInfoProto_Block::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PageTypeInfoProto_Block_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto.base);
  return *internal_default_instance();
}


void PageTypeInfoProto_Block::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.PageTypeInfoProto.Block)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    zone_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&node_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isolate_) -
        reinterpret_cast<char*>(&node_)) + sizeof(isolate_));
  }
  highatomic_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PageTypeInfoProto_Block::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 node = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_node(&has_bits);
          node_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string zone = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_zone(), ptr, ctx, "android.os.PageTypeInfoProto.Block.zone");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 unmovable = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_unmovable(&has_bits);
          unmovable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 reclaimable = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_reclaimable(&has_bits);
          reclaimable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 movable = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_movable(&has_bits);
          movable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 cma = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_cma(&has_bits);
          cma_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 reserve = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_reserve(&has_bits);
          reserve_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 isolate = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_isolate(&has_bits);
          isolate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 highatomic = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_highatomic(&has_bits);
          highatomic_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PageTypeInfoProto_Block::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.os.PageTypeInfoProto.Block)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 node = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_node(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string zone = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_zone()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->zone().data(), static_cast<int>(this->zone().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.os.PageTypeInfoProto.Block.zone");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 unmovable = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_unmovable(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &unmovable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 reclaimable = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_reclaimable(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &reclaimable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 movable = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_movable(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &movable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cma = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_cma(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &cma_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 reserve = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_reserve(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserve_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 isolate = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_isolate(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &isolate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 highatomic = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_highatomic(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &highatomic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.PageTypeInfoProto.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.PageTypeInfoProto.Block)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PageTypeInfoProto_Block::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.PageTypeInfoProto.Block)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 node = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->node(), output);
  }

  // optional string zone = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PageTypeInfoProto.Block.zone");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone(), output);
  }

  // optional int32 unmovable = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->unmovable(), output);
  }

  // optional int32 reclaimable = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->reclaimable(), output);
  }

  // optional int32 movable = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->movable(), output);
  }

  // optional int32 cma = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->cma(), output);
  }

  // optional int32 reserve = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->reserve(), output);
  }

  // optional int32 isolate = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(8, this->isolate(), output);
  }

  // optional int32 highatomic = 9;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(9, this->highatomic(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.os.PageTypeInfoProto.Block)
}

::PROTOBUF_NAMESPACE_ID::uint8* PageTypeInfoProto_Block::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.os.PageTypeInfoProto.Block)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 node = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->node(), target);
  }

  // optional string zone = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zone().data(), static_cast<int>(this->zone().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.PageTypeInfoProto.Block.zone");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->zone(), target);
  }

  // optional int32 unmovable = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->unmovable(), target);
  }

  // optional int32 reclaimable = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->reclaimable(), target);
  }

  // optional int32 movable = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->movable(), target);
  }

  // optional int32 cma = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->cma(), target);
  }

  // optional int32 reserve = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->reserve(), target);
  }

  // optional int32 isolate = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->isolate(), target);
  }

  // optional int32 highatomic = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->highatomic(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.os.PageTypeInfoProto.Block)
  return target;
}

size_t PageTypeInfoProto_Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.PageTypeInfoProto.Block)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string zone = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->zone());
    }

    // optional int32 node = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->node());
    }

    // optional int32 unmovable = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->unmovable());
    }

    // optional int32 reclaimable = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->reclaimable());
    }

    // optional int32 movable = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->movable());
    }

    // optional int32 cma = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->cma());
    }

    // optional int32 reserve = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->reserve());
    }

    // optional int32 isolate = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->isolate());
    }

  }
  // optional int32 highatomic = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->highatomic());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PageTypeInfoProto_Block::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.os.PageTypeInfoProto.Block)
  GOOGLE_DCHECK_NE(&from, this);
  const PageTypeInfoProto_Block* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PageTypeInfoProto_Block>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.os.PageTypeInfoProto.Block)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.os.PageTypeInfoProto.Block)
    MergeFrom(*source);
  }
}

void PageTypeInfoProto_Block::MergeFrom(const PageTypeInfoProto_Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.PageTypeInfoProto.Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      zone_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.zone_);
    }
    if (cached_has_bits & 0x00000002u) {
      node_ = from.node_;
    }
    if (cached_has_bits & 0x00000004u) {
      unmovable_ = from.unmovable_;
    }
    if (cached_has_bits & 0x00000008u) {
      reclaimable_ = from.reclaimable_;
    }
    if (cached_has_bits & 0x00000010u) {
      movable_ = from.movable_;
    }
    if (cached_has_bits & 0x00000020u) {
      cma_ = from.cma_;
    }
    if (cached_has_bits & 0x00000040u) {
      reserve_ = from.reserve_;
    }
    if (cached_has_bits & 0x00000080u) {
      isolate_ = from.isolate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_highatomic(from.highatomic());
  }
}

void PageTypeInfoProto_Block::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.os.PageTypeInfoProto.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PageTypeInfoProto_Block::CopyFrom(const PageTypeInfoProto_Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.PageTypeInfoProto.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PageTypeInfoProto_Block::IsInitialized() const {
  return true;
}

void PageTypeInfoProto_Block::InternalSwap(PageTypeInfoProto_Block* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  zone_.Swap(&other->zone_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(node_, other->node_);
  swap(unmovable_, other->unmovable_);
  swap(reclaimable_, other->reclaimable_);
  swap(movable_, other->movable_);
  swap(cma_, other->cma_);
  swap(reserve_, other->reserve_);
  swap(isolate_, other->isolate_);
  swap(highatomic_, other->highatomic_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PageTypeInfoProto_Block::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PageTypeInfoProto::InitAsDefaultInstance() {
}
class PageTypeInfoProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PageTypeInfoProto>()._has_bits_);
  static void set_has_page_block_order(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pages_per_block(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PageTypeInfoProto::PageTypeInfoProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.PageTypeInfoProto)
}
PageTypeInfoProto::PageTypeInfoProto(const PageTypeInfoProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      migrate_types_(from.migrate_types_),
      blocks_(from.blocks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&page_block_order_, &from.page_block_order_,
    static_cast<size_t>(reinterpret_cast<char*>(&pages_per_block_) -
    reinterpret_cast<char*>(&page_block_order_)) + sizeof(pages_per_block_));
  // @@protoc_insertion_point(copy_constructor:android.os.PageTypeInfoProto)
}

void PageTypeInfoProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PageTypeInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto.base);
  ::memset(&page_block_order_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pages_per_block_) -
      reinterpret_cast<char*>(&page_block_order_)) + sizeof(pages_per_block_));
}

PageTypeInfoProto::~PageTypeInfoProto() {
  // @@protoc_insertion_point(destructor:android.os.PageTypeInfoProto)
  SharedDtor();
}

void PageTypeInfoProto::SharedDtor() {
}

void PageTypeInfoProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PageTypeInfoProto& PageTypeInfoProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PageTypeInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpagetypeinfo_2eproto.base);
  return *internal_default_instance();
}


void PageTypeInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.PageTypeInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  migrate_types_.Clear();
  blocks_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&page_block_order_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pages_per_block_) -
        reinterpret_cast<char*>(&page_block_order_)) + sizeof(pages_per_block_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PageTypeInfoProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 page_block_order = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_page_block_order(&has_bits);
          page_block_order_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 pages_per_block = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_pages_per_block(&has_bits);
          pages_per_block_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.os.PageTypeInfoProto.MigrateType migrate_types = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_migrate_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // repeated .android.os.PageTypeInfoProto.Block blocks = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_blocks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PageTypeInfoProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.os.PageTypeInfoProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_block_order = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_page_block_order(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_block_order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pages_per_block = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_pages_per_block(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &pages_per_block_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.os.PageTypeInfoProto.MigrateType migrate_types = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_migrate_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.os.PageTypeInfoProto.Block blocks = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.PageTypeInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.PageTypeInfoProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PageTypeInfoProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.PageTypeInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 page_block_order = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->page_block_order(), output);
  }

  // optional int32 pages_per_block = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->pages_per_block(), output);
  }

  // repeated .android.os.PageTypeInfoProto.MigrateType migrate_types = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->migrate_types_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->migrate_types(static_cast<int>(i)),
      output);
  }

  // repeated .android.os.PageTypeInfoProto.Block blocks = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blocks_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->blocks(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.os.PageTypeInfoProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PageTypeInfoProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.os.PageTypeInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 page_block_order = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->page_block_order(), target);
  }

  // optional int32 pages_per_block = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->pages_per_block(), target);
  }

  // repeated .android.os.PageTypeInfoProto.MigrateType migrate_types = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->migrate_types_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->migrate_types(static_cast<int>(i)), target);
  }

  // repeated .android.os.PageTypeInfoProto.Block blocks = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blocks_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->blocks(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.os.PageTypeInfoProto)
  return target;
}

size_t PageTypeInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.PageTypeInfoProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.os.PageTypeInfoProto.MigrateType migrate_types = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->migrate_types_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->migrate_types(static_cast<int>(i)));
    }
  }

  // repeated .android.os.PageTypeInfoProto.Block blocks = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->blocks(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 page_block_order = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->page_block_order());
    }

    // optional int32 pages_per_block = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->pages_per_block());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PageTypeInfoProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.os.PageTypeInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PageTypeInfoProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PageTypeInfoProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.os.PageTypeInfoProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.os.PageTypeInfoProto)
    MergeFrom(*source);
  }
}

void PageTypeInfoProto::MergeFrom(const PageTypeInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.PageTypeInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  migrate_types_.MergeFrom(from.migrate_types_);
  blocks_.MergeFrom(from.blocks_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      page_block_order_ = from.page_block_order_;
    }
    if (cached_has_bits & 0x00000002u) {
      pages_per_block_ = from.pages_per_block_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PageTypeInfoProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.os.PageTypeInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PageTypeInfoProto::CopyFrom(const PageTypeInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.PageTypeInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PageTypeInfoProto::IsInitialized() const {
  return true;
}

void PageTypeInfoProto::InternalSwap(PageTypeInfoProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&migrate_types_)->InternalSwap(CastToBase(&other->migrate_types_));
  CastToBase(&blocks_)->InternalSwap(CastToBase(&other->blocks_));
  swap(page_block_order_, other->page_block_order_);
  swap(pages_per_block_, other->pages_per_block_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PageTypeInfoProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::os::PageTypeInfoProto_MigrateType* Arena::CreateMaybeMessage< ::android::os::PageTypeInfoProto_MigrateType >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::PageTypeInfoProto_MigrateType >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::PageTypeInfoProto_Block* Arena::CreateMaybeMessage< ::android::os::PageTypeInfoProto_Block >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::PageTypeInfoProto_Block >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::PageTypeInfoProto* Arena::CreateMaybeMessage< ::android::os::PageTypeInfoProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::PageTypeInfoProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
