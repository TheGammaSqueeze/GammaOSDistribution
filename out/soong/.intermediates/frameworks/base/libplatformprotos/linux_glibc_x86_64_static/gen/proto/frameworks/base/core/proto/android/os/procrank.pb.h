// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/os/procrank.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto;
namespace android {
namespace os {
class ProcrankProto;
class ProcrankProtoDefaultTypeInternal;
extern ProcrankProtoDefaultTypeInternal _ProcrankProto_default_instance_;
class ProcrankProto_Process;
class ProcrankProto_ProcessDefaultTypeInternal;
extern ProcrankProto_ProcessDefaultTypeInternal _ProcrankProto_Process_default_instance_;
class ProcrankProto_Summary;
class ProcrankProto_SummaryDefaultTypeInternal;
extern ProcrankProto_SummaryDefaultTypeInternal _ProcrankProto_Summary_default_instance_;
class ProcrankProto_Summary_Ram;
class ProcrankProto_Summary_RamDefaultTypeInternal;
extern ProcrankProto_Summary_RamDefaultTypeInternal _ProcrankProto_Summary_Ram_default_instance_;
class ProcrankProto_Summary_Zram;
class ProcrankProto_Summary_ZramDefaultTypeInternal;
extern ProcrankProto_Summary_ZramDefaultTypeInternal _ProcrankProto_Summary_Zram_default_instance_;
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::os::ProcrankProto* Arena::CreateMaybeMessage<::android::os::ProcrankProto>(Arena*);
template<> ::android::os::ProcrankProto_Process* Arena::CreateMaybeMessage<::android::os::ProcrankProto_Process>(Arena*);
template<> ::android::os::ProcrankProto_Summary* Arena::CreateMaybeMessage<::android::os::ProcrankProto_Summary>(Arena*);
template<> ::android::os::ProcrankProto_Summary_Ram* Arena::CreateMaybeMessage<::android::os::ProcrankProto_Summary_Ram>(Arena*);
template<> ::android::os::ProcrankProto_Summary_Zram* Arena::CreateMaybeMessage<::android::os::ProcrankProto_Summary_Zram>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace os {

// ===================================================================

class ProcrankProto_Process :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.os.ProcrankProto.Process) */ {
 public:
  ProcrankProto_Process();
  virtual ~ProcrankProto_Process();

  ProcrankProto_Process(const ProcrankProto_Process& from);
  ProcrankProto_Process(ProcrankProto_Process&& from) noexcept
    : ProcrankProto_Process() {
    *this = ::std::move(from);
  }

  inline ProcrankProto_Process& operator=(const ProcrankProto_Process& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcrankProto_Process& operator=(ProcrankProto_Process&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProcrankProto_Process& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcrankProto_Process* internal_default_instance() {
    return reinterpret_cast<const ProcrankProto_Process*>(
               &_ProcrankProto_Process_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProcrankProto_Process& a, ProcrankProto_Process& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcrankProto_Process* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcrankProto_Process* New() const final {
    return CreateMaybeMessage<ProcrankProto_Process>(nullptr);
  }

  ProcrankProto_Process* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcrankProto_Process>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProcrankProto_Process& from);
  void MergeFrom(const ProcrankProto_Process& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProcrankProto_Process* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.ProcrankProto.Process";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCmdlineFieldNumber = 10,
    kVssFieldNumber = 2,
    kRssFieldNumber = 3,
    kPssFieldNumber = 4,
    kUssFieldNumber = 5,
    kSwapFieldNumber = 6,
    kPswapFieldNumber = 7,
    kUswapFieldNumber = 8,
    kZswapFieldNumber = 9,
    kPidFieldNumber = 1,
  };
  // optional string cmdline = 10;
  bool has_cmdline() const;
  void clear_cmdline();
  const std::string& cmdline() const;
  void set_cmdline(const std::string& value);
  void set_cmdline(std::string&& value);
  void set_cmdline(const char* value);
  void set_cmdline(const char* value, size_t size);
  std::string* mutable_cmdline();
  std::string* release_cmdline();
  void set_allocated_cmdline(std::string* cmdline);

  // optional int64 vss = 2;
  bool has_vss() const;
  void clear_vss();
  ::PROTOBUF_NAMESPACE_ID::int64 vss() const;
  void set_vss(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 rss = 3;
  bool has_rss() const;
  void clear_rss();
  ::PROTOBUF_NAMESPACE_ID::int64 rss() const;
  void set_rss(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 pss = 4;
  bool has_pss() const;
  void clear_pss();
  ::PROTOBUF_NAMESPACE_ID::int64 pss() const;
  void set_pss(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 uss = 5;
  bool has_uss() const;
  void clear_uss();
  ::PROTOBUF_NAMESPACE_ID::int64 uss() const;
  void set_uss(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 swap = 6;
  bool has_swap() const;
  void clear_swap();
  ::PROTOBUF_NAMESPACE_ID::int64 swap() const;
  void set_swap(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 pswap = 7;
  bool has_pswap() const;
  void clear_pswap();
  ::PROTOBUF_NAMESPACE_ID::int64 pswap() const;
  void set_pswap(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 uswap = 8;
  bool has_uswap() const;
  void clear_uswap();
  ::PROTOBUF_NAMESPACE_ID::int64 uswap() const;
  void set_uswap(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 zswap = 9;
  bool has_zswap() const;
  void clear_zswap();
  ::PROTOBUF_NAMESPACE_ID::int64 zswap() const;
  void set_zswap(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 pid = 1;
  bool has_pid() const;
  void clear_pid();
  ::PROTOBUF_NAMESPACE_ID::int32 pid() const;
  void set_pid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.ProcrankProto.Process)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cmdline_;
  ::PROTOBUF_NAMESPACE_ID::int64 vss_;
  ::PROTOBUF_NAMESPACE_ID::int64 rss_;
  ::PROTOBUF_NAMESPACE_ID::int64 pss_;
  ::PROTOBUF_NAMESPACE_ID::int64 uss_;
  ::PROTOBUF_NAMESPACE_ID::int64 swap_;
  ::PROTOBUF_NAMESPACE_ID::int64 pswap_;
  ::PROTOBUF_NAMESPACE_ID::int64 uswap_;
  ::PROTOBUF_NAMESPACE_ID::int64 zswap_;
  ::PROTOBUF_NAMESPACE_ID::int32 pid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto;
};
// -------------------------------------------------------------------

class ProcrankProto_Summary_Zram :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.os.ProcrankProto.Summary.Zram) */ {
 public:
  ProcrankProto_Summary_Zram();
  virtual ~ProcrankProto_Summary_Zram();

  ProcrankProto_Summary_Zram(const ProcrankProto_Summary_Zram& from);
  ProcrankProto_Summary_Zram(ProcrankProto_Summary_Zram&& from) noexcept
    : ProcrankProto_Summary_Zram() {
    *this = ::std::move(from);
  }

  inline ProcrankProto_Summary_Zram& operator=(const ProcrankProto_Summary_Zram& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcrankProto_Summary_Zram& operator=(ProcrankProto_Summary_Zram&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProcrankProto_Summary_Zram& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcrankProto_Summary_Zram* internal_default_instance() {
    return reinterpret_cast<const ProcrankProto_Summary_Zram*>(
               &_ProcrankProto_Summary_Zram_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ProcrankProto_Summary_Zram& a, ProcrankProto_Summary_Zram& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcrankProto_Summary_Zram* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcrankProto_Summary_Zram* New() const final {
    return CreateMaybeMessage<ProcrankProto_Summary_Zram>(nullptr);
  }

  ProcrankProto_Summary_Zram* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcrankProto_Summary_Zram>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProcrankProto_Summary_Zram& from);
  void MergeFrom(const ProcrankProto_Summary_Zram& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProcrankProto_Summary_Zram* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.ProcrankProto.Summary.Zram";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRawTextFieldNumber = 1,
  };
  // optional string raw_text = 1;
  bool has_raw_text() const;
  void clear_raw_text();
  const std::string& raw_text() const;
  void set_raw_text(const std::string& value);
  void set_raw_text(std::string&& value);
  void set_raw_text(const char* value);
  void set_raw_text(const char* value, size_t size);
  std::string* mutable_raw_text();
  std::string* release_raw_text();
  void set_allocated_raw_text(std::string* raw_text);

  // @@protoc_insertion_point(class_scope:android.os.ProcrankProto.Summary.Zram)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr raw_text_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto;
};
// -------------------------------------------------------------------

class ProcrankProto_Summary_Ram :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.os.ProcrankProto.Summary.Ram) */ {
 public:
  ProcrankProto_Summary_Ram();
  virtual ~ProcrankProto_Summary_Ram();

  ProcrankProto_Summary_Ram(const ProcrankProto_Summary_Ram& from);
  ProcrankProto_Summary_Ram(ProcrankProto_Summary_Ram&& from) noexcept
    : ProcrankProto_Summary_Ram() {
    *this = ::std::move(from);
  }

  inline ProcrankProto_Summary_Ram& operator=(const ProcrankProto_Summary_Ram& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcrankProto_Summary_Ram& operator=(ProcrankProto_Summary_Ram&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProcrankProto_Summary_Ram& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcrankProto_Summary_Ram* internal_default_instance() {
    return reinterpret_cast<const ProcrankProto_Summary_Ram*>(
               &_ProcrankProto_Summary_Ram_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ProcrankProto_Summary_Ram& a, ProcrankProto_Summary_Ram& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcrankProto_Summary_Ram* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcrankProto_Summary_Ram* New() const final {
    return CreateMaybeMessage<ProcrankProto_Summary_Ram>(nullptr);
  }

  ProcrankProto_Summary_Ram* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcrankProto_Summary_Ram>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProcrankProto_Summary_Ram& from);
  void MergeFrom(const ProcrankProto_Summary_Ram& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProcrankProto_Summary_Ram* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.ProcrankProto.Summary.Ram";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRawTextFieldNumber = 1,
  };
  // optional string raw_text = 1;
  bool has_raw_text() const;
  void clear_raw_text();
  const std::string& raw_text() const;
  void set_raw_text(const std::string& value);
  void set_raw_text(std::string&& value);
  void set_raw_text(const char* value);
  void set_raw_text(const char* value, size_t size);
  std::string* mutable_raw_text();
  std::string* release_raw_text();
  void set_allocated_raw_text(std::string* raw_text);

  // @@protoc_insertion_point(class_scope:android.os.ProcrankProto.Summary.Ram)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr raw_text_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto;
};
// -------------------------------------------------------------------

class ProcrankProto_Summary :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.os.ProcrankProto.Summary) */ {
 public:
  ProcrankProto_Summary();
  virtual ~ProcrankProto_Summary();

  ProcrankProto_Summary(const ProcrankProto_Summary& from);
  ProcrankProto_Summary(ProcrankProto_Summary&& from) noexcept
    : ProcrankProto_Summary() {
    *this = ::std::move(from);
  }

  inline ProcrankProto_Summary& operator=(const ProcrankProto_Summary& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcrankProto_Summary& operator=(ProcrankProto_Summary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProcrankProto_Summary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcrankProto_Summary* internal_default_instance() {
    return reinterpret_cast<const ProcrankProto_Summary*>(
               &_ProcrankProto_Summary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ProcrankProto_Summary& a, ProcrankProto_Summary& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcrankProto_Summary* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcrankProto_Summary* New() const final {
    return CreateMaybeMessage<ProcrankProto_Summary>(nullptr);
  }

  ProcrankProto_Summary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcrankProto_Summary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProcrankProto_Summary& from);
  void MergeFrom(const ProcrankProto_Summary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProcrankProto_Summary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.ProcrankProto.Summary";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ProcrankProto_Summary_Zram Zram;
  typedef ProcrankProto_Summary_Ram Ram;

  // accessors -------------------------------------------------------

  enum : int {
    kTotalFieldNumber = 1,
    kZramFieldNumber = 2,
    kRamFieldNumber = 3,
  };
  // optional .android.os.ProcrankProto.Process total = 1;
  bool has_total() const;
  void clear_total();
  const ::android::os::ProcrankProto_Process& total() const;
  ::android::os::ProcrankProto_Process* release_total();
  ::android::os::ProcrankProto_Process* mutable_total();
  void set_allocated_total(::android::os::ProcrankProto_Process* total);

  // optional .android.os.ProcrankProto.Summary.Zram zram = 2;
  bool has_zram() const;
  void clear_zram();
  const ::android::os::ProcrankProto_Summary_Zram& zram() const;
  ::android::os::ProcrankProto_Summary_Zram* release_zram();
  ::android::os::ProcrankProto_Summary_Zram* mutable_zram();
  void set_allocated_zram(::android::os::ProcrankProto_Summary_Zram* zram);

  // optional .android.os.ProcrankProto.Summary.Ram ram = 3;
  bool has_ram() const;
  void clear_ram();
  const ::android::os::ProcrankProto_Summary_Ram& ram() const;
  ::android::os::ProcrankProto_Summary_Ram* release_ram();
  ::android::os::ProcrankProto_Summary_Ram* mutable_ram();
  void set_allocated_ram(::android::os::ProcrankProto_Summary_Ram* ram);

  // @@protoc_insertion_point(class_scope:android.os.ProcrankProto.Summary)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::os::ProcrankProto_Process* total_;
  ::android::os::ProcrankProto_Summary_Zram* zram_;
  ::android::os::ProcrankProto_Summary_Ram* ram_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto;
};
// -------------------------------------------------------------------

class ProcrankProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.os.ProcrankProto) */ {
 public:
  ProcrankProto();
  virtual ~ProcrankProto();

  ProcrankProto(const ProcrankProto& from);
  ProcrankProto(ProcrankProto&& from) noexcept
    : ProcrankProto() {
    *this = ::std::move(from);
  }

  inline ProcrankProto& operator=(const ProcrankProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcrankProto& operator=(ProcrankProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProcrankProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcrankProto* internal_default_instance() {
    return reinterpret_cast<const ProcrankProto*>(
               &_ProcrankProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ProcrankProto& a, ProcrankProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcrankProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcrankProto* New() const final {
    return CreateMaybeMessage<ProcrankProto>(nullptr);
  }

  ProcrankProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcrankProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProcrankProto& from);
  void MergeFrom(const ProcrankProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProcrankProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.ProcrankProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ProcrankProto_Process Process;
  typedef ProcrankProto_Summary Summary;

  // accessors -------------------------------------------------------

  enum : int {
    kProcessesFieldNumber = 1,
    kSummaryFieldNumber = 2,
  };
  // repeated .android.os.ProcrankProto.Process processes = 1;
  int processes_size() const;
  void clear_processes();
  ::android::os::ProcrankProto_Process* mutable_processes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::ProcrankProto_Process >*
      mutable_processes();
  const ::android::os::ProcrankProto_Process& processes(int index) const;
  ::android::os::ProcrankProto_Process* add_processes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::ProcrankProto_Process >&
      processes() const;

  // optional .android.os.ProcrankProto.Summary summary = 2;
  bool has_summary() const;
  void clear_summary();
  const ::android::os::ProcrankProto_Summary& summary() const;
  ::android::os::ProcrankProto_Summary* release_summary();
  ::android::os::ProcrankProto_Summary* mutable_summary();
  void set_allocated_summary(::android::os::ProcrankProto_Summary* summary);

  // @@protoc_insertion_point(class_scope:android.os.ProcrankProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::ProcrankProto_Process > processes_;
  ::android::os::ProcrankProto_Summary* summary_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProcrankProto_Process

// optional int32 pid = 1;
inline bool ProcrankProto_Process::has_pid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProcrankProto_Process::clear_pid() {
  pid_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProcrankProto_Process::pid() const {
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Process.pid)
  return pid_;
}
inline void ProcrankProto_Process::set_pid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  pid_ = value;
  // @@protoc_insertion_point(field_set:android.os.ProcrankProto.Process.pid)
}

// optional int64 vss = 2;
inline bool ProcrankProto_Process::has_vss() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcrankProto_Process::clear_vss() {
  vss_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcrankProto_Process::vss() const {
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Process.vss)
  return vss_;
}
inline void ProcrankProto_Process::set_vss(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  vss_ = value;
  // @@protoc_insertion_point(field_set:android.os.ProcrankProto.Process.vss)
}

// optional int64 rss = 3;
inline bool ProcrankProto_Process::has_rss() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProcrankProto_Process::clear_rss() {
  rss_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcrankProto_Process::rss() const {
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Process.rss)
  return rss_;
}
inline void ProcrankProto_Process::set_rss(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  rss_ = value;
  // @@protoc_insertion_point(field_set:android.os.ProcrankProto.Process.rss)
}

// optional int64 pss = 4;
inline bool ProcrankProto_Process::has_pss() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProcrankProto_Process::clear_pss() {
  pss_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcrankProto_Process::pss() const {
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Process.pss)
  return pss_;
}
inline void ProcrankProto_Process::set_pss(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  pss_ = value;
  // @@protoc_insertion_point(field_set:android.os.ProcrankProto.Process.pss)
}

// optional int64 uss = 5;
inline bool ProcrankProto_Process::has_uss() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProcrankProto_Process::clear_uss() {
  uss_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcrankProto_Process::uss() const {
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Process.uss)
  return uss_;
}
inline void ProcrankProto_Process::set_uss(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  uss_ = value;
  // @@protoc_insertion_point(field_set:android.os.ProcrankProto.Process.uss)
}

// optional int64 swap = 6;
inline bool ProcrankProto_Process::has_swap() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProcrankProto_Process::clear_swap() {
  swap_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcrankProto_Process::swap() const {
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Process.swap)
  return swap_;
}
inline void ProcrankProto_Process::set_swap(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  swap_ = value;
  // @@protoc_insertion_point(field_set:android.os.ProcrankProto.Process.swap)
}

// optional int64 pswap = 7;
inline bool ProcrankProto_Process::has_pswap() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProcrankProto_Process::clear_pswap() {
  pswap_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcrankProto_Process::pswap() const {
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Process.pswap)
  return pswap_;
}
inline void ProcrankProto_Process::set_pswap(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  pswap_ = value;
  // @@protoc_insertion_point(field_set:android.os.ProcrankProto.Process.pswap)
}

// optional int64 uswap = 8;
inline bool ProcrankProto_Process::has_uswap() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProcrankProto_Process::clear_uswap() {
  uswap_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcrankProto_Process::uswap() const {
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Process.uswap)
  return uswap_;
}
inline void ProcrankProto_Process::set_uswap(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  uswap_ = value;
  // @@protoc_insertion_point(field_set:android.os.ProcrankProto.Process.uswap)
}

// optional int64 zswap = 9;
inline bool ProcrankProto_Process::has_zswap() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProcrankProto_Process::clear_zswap() {
  zswap_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProcrankProto_Process::zswap() const {
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Process.zswap)
  return zswap_;
}
inline void ProcrankProto_Process::set_zswap(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  zswap_ = value;
  // @@protoc_insertion_point(field_set:android.os.ProcrankProto.Process.zswap)
}

// optional string cmdline = 10;
inline bool ProcrankProto_Process::has_cmdline() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcrankProto_Process::clear_cmdline() {
  cmdline_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProcrankProto_Process::cmdline() const {
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Process.cmdline)
  return cmdline_.GetNoArena();
}
inline void ProcrankProto_Process::set_cmdline(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  cmdline_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.ProcrankProto.Process.cmdline)
}
inline void ProcrankProto_Process::set_cmdline(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  cmdline_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.ProcrankProto.Process.cmdline)
}
inline void ProcrankProto_Process::set_cmdline(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  cmdline_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.ProcrankProto.Process.cmdline)
}
inline void ProcrankProto_Process::set_cmdline(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  cmdline_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.ProcrankProto.Process.cmdline)
}
inline std::string* ProcrankProto_Process::mutable_cmdline() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.ProcrankProto.Process.cmdline)
  return cmdline_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ProcrankProto_Process::release_cmdline() {
  // @@protoc_insertion_point(field_release:android.os.ProcrankProto.Process.cmdline)
  if (!has_cmdline()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return cmdline_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ProcrankProto_Process::set_allocated_cmdline(std::string* cmdline) {
  if (cmdline != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  cmdline_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cmdline);
  // @@protoc_insertion_point(field_set_allocated:android.os.ProcrankProto.Process.cmdline)
}

// -------------------------------------------------------------------

// ProcrankProto_Summary_Zram

// optional string raw_text = 1;
inline bool ProcrankProto_Summary_Zram::has_raw_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcrankProto_Summary_Zram::clear_raw_text() {
  raw_text_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProcrankProto_Summary_Zram::raw_text() const {
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Summary.Zram.raw_text)
  return raw_text_.GetNoArena();
}
inline void ProcrankProto_Summary_Zram::set_raw_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  raw_text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.ProcrankProto.Summary.Zram.raw_text)
}
inline void ProcrankProto_Summary_Zram::set_raw_text(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  raw_text_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.ProcrankProto.Summary.Zram.raw_text)
}
inline void ProcrankProto_Summary_Zram::set_raw_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  raw_text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.ProcrankProto.Summary.Zram.raw_text)
}
inline void ProcrankProto_Summary_Zram::set_raw_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  raw_text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.ProcrankProto.Summary.Zram.raw_text)
}
inline std::string* ProcrankProto_Summary_Zram::mutable_raw_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.ProcrankProto.Summary.Zram.raw_text)
  return raw_text_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ProcrankProto_Summary_Zram::release_raw_text() {
  // @@protoc_insertion_point(field_release:android.os.ProcrankProto.Summary.Zram.raw_text)
  if (!has_raw_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return raw_text_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ProcrankProto_Summary_Zram::set_allocated_raw_text(std::string* raw_text) {
  if (raw_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  raw_text_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), raw_text);
  // @@protoc_insertion_point(field_set_allocated:android.os.ProcrankProto.Summary.Zram.raw_text)
}

// -------------------------------------------------------------------

// ProcrankProto_Summary_Ram

// optional string raw_text = 1;
inline bool ProcrankProto_Summary_Ram::has_raw_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcrankProto_Summary_Ram::clear_raw_text() {
  raw_text_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProcrankProto_Summary_Ram::raw_text() const {
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Summary.Ram.raw_text)
  return raw_text_.GetNoArena();
}
inline void ProcrankProto_Summary_Ram::set_raw_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  raw_text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.ProcrankProto.Summary.Ram.raw_text)
}
inline void ProcrankProto_Summary_Ram::set_raw_text(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  raw_text_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.ProcrankProto.Summary.Ram.raw_text)
}
inline void ProcrankProto_Summary_Ram::set_raw_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  raw_text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.ProcrankProto.Summary.Ram.raw_text)
}
inline void ProcrankProto_Summary_Ram::set_raw_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  raw_text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.ProcrankProto.Summary.Ram.raw_text)
}
inline std::string* ProcrankProto_Summary_Ram::mutable_raw_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.ProcrankProto.Summary.Ram.raw_text)
  return raw_text_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ProcrankProto_Summary_Ram::release_raw_text() {
  // @@protoc_insertion_point(field_release:android.os.ProcrankProto.Summary.Ram.raw_text)
  if (!has_raw_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return raw_text_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ProcrankProto_Summary_Ram::set_allocated_raw_text(std::string* raw_text) {
  if (raw_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  raw_text_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), raw_text);
  // @@protoc_insertion_point(field_set_allocated:android.os.ProcrankProto.Summary.Ram.raw_text)
}

// -------------------------------------------------------------------

// ProcrankProto_Summary

// optional .android.os.ProcrankProto.Process total = 1;
inline bool ProcrankProto_Summary::has_total() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcrankProto_Summary::clear_total() {
  if (total_ != nullptr) total_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::os::ProcrankProto_Process& ProcrankProto_Summary::total() const {
  const ::android::os::ProcrankProto_Process* p = total_;
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Summary.total)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::ProcrankProto_Process*>(
      &::android::os::_ProcrankProto_Process_default_instance_);
}
inline ::android::os::ProcrankProto_Process* ProcrankProto_Summary::release_total() {
  // @@protoc_insertion_point(field_release:android.os.ProcrankProto.Summary.total)
  _has_bits_[0] &= ~0x00000001u;
  ::android::os::ProcrankProto_Process* temp = total_;
  total_ = nullptr;
  return temp;
}
inline ::android::os::ProcrankProto_Process* ProcrankProto_Summary::mutable_total() {
  _has_bits_[0] |= 0x00000001u;
  if (total_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::ProcrankProto_Process>(GetArenaNoVirtual());
    total_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.ProcrankProto.Summary.total)
  return total_;
}
inline void ProcrankProto_Summary::set_allocated_total(::android::os::ProcrankProto_Process* total) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete total_;
  }
  if (total) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      total = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, total, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  total_ = total;
  // @@protoc_insertion_point(field_set_allocated:android.os.ProcrankProto.Summary.total)
}

// optional .android.os.ProcrankProto.Summary.Zram zram = 2;
inline bool ProcrankProto_Summary::has_zram() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProcrankProto_Summary::clear_zram() {
  if (zram_ != nullptr) zram_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::android::os::ProcrankProto_Summary_Zram& ProcrankProto_Summary::zram() const {
  const ::android::os::ProcrankProto_Summary_Zram* p = zram_;
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Summary.zram)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::ProcrankProto_Summary_Zram*>(
      &::android::os::_ProcrankProto_Summary_Zram_default_instance_);
}
inline ::android::os::ProcrankProto_Summary_Zram* ProcrankProto_Summary::release_zram() {
  // @@protoc_insertion_point(field_release:android.os.ProcrankProto.Summary.zram)
  _has_bits_[0] &= ~0x00000002u;
  ::android::os::ProcrankProto_Summary_Zram* temp = zram_;
  zram_ = nullptr;
  return temp;
}
inline ::android::os::ProcrankProto_Summary_Zram* ProcrankProto_Summary::mutable_zram() {
  _has_bits_[0] |= 0x00000002u;
  if (zram_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::ProcrankProto_Summary_Zram>(GetArenaNoVirtual());
    zram_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.ProcrankProto.Summary.zram)
  return zram_;
}
inline void ProcrankProto_Summary::set_allocated_zram(::android::os::ProcrankProto_Summary_Zram* zram) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete zram_;
  }
  if (zram) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      zram = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, zram, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  zram_ = zram;
  // @@protoc_insertion_point(field_set_allocated:android.os.ProcrankProto.Summary.zram)
}

// optional .android.os.ProcrankProto.Summary.Ram ram = 3;
inline bool ProcrankProto_Summary::has_ram() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProcrankProto_Summary::clear_ram() {
  if (ram_ != nullptr) ram_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::android::os::ProcrankProto_Summary_Ram& ProcrankProto_Summary::ram() const {
  const ::android::os::ProcrankProto_Summary_Ram* p = ram_;
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.Summary.ram)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::ProcrankProto_Summary_Ram*>(
      &::android::os::_ProcrankProto_Summary_Ram_default_instance_);
}
inline ::android::os::ProcrankProto_Summary_Ram* ProcrankProto_Summary::release_ram() {
  // @@protoc_insertion_point(field_release:android.os.ProcrankProto.Summary.ram)
  _has_bits_[0] &= ~0x00000004u;
  ::android::os::ProcrankProto_Summary_Ram* temp = ram_;
  ram_ = nullptr;
  return temp;
}
inline ::android::os::ProcrankProto_Summary_Ram* ProcrankProto_Summary::mutable_ram() {
  _has_bits_[0] |= 0x00000004u;
  if (ram_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::ProcrankProto_Summary_Ram>(GetArenaNoVirtual());
    ram_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.ProcrankProto.Summary.ram)
  return ram_;
}
inline void ProcrankProto_Summary::set_allocated_ram(::android::os::ProcrankProto_Summary_Ram* ram) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete ram_;
  }
  if (ram) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ram = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ram, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  ram_ = ram;
  // @@protoc_insertion_point(field_set_allocated:android.os.ProcrankProto.Summary.ram)
}

// -------------------------------------------------------------------

// ProcrankProto

// repeated .android.os.ProcrankProto.Process processes = 1;
inline int ProcrankProto::processes_size() const {
  return processes_.size();
}
inline void ProcrankProto::clear_processes() {
  processes_.Clear();
}
inline ::android::os::ProcrankProto_Process* ProcrankProto::mutable_processes(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.ProcrankProto.processes)
  return processes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::ProcrankProto_Process >*
ProcrankProto::mutable_processes() {
  // @@protoc_insertion_point(field_mutable_list:android.os.ProcrankProto.processes)
  return &processes_;
}
inline const ::android::os::ProcrankProto_Process& ProcrankProto::processes(int index) const {
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.processes)
  return processes_.Get(index);
}
inline ::android::os::ProcrankProto_Process* ProcrankProto::add_processes() {
  // @@protoc_insertion_point(field_add:android.os.ProcrankProto.processes)
  return processes_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::ProcrankProto_Process >&
ProcrankProto::processes() const {
  // @@protoc_insertion_point(field_list:android.os.ProcrankProto.processes)
  return processes_;
}

// optional .android.os.ProcrankProto.Summary summary = 2;
inline bool ProcrankProto::has_summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProcrankProto::clear_summary() {
  if (summary_ != nullptr) summary_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::os::ProcrankProto_Summary& ProcrankProto::summary() const {
  const ::android::os::ProcrankProto_Summary* p = summary_;
  // @@protoc_insertion_point(field_get:android.os.ProcrankProto.summary)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::ProcrankProto_Summary*>(
      &::android::os::_ProcrankProto_Summary_default_instance_);
}
inline ::android::os::ProcrankProto_Summary* ProcrankProto::release_summary() {
  // @@protoc_insertion_point(field_release:android.os.ProcrankProto.summary)
  _has_bits_[0] &= ~0x00000001u;
  ::android::os::ProcrankProto_Summary* temp = summary_;
  summary_ = nullptr;
  return temp;
}
inline ::android::os::ProcrankProto_Summary* ProcrankProto::mutable_summary() {
  _has_bits_[0] |= 0x00000001u;
  if (summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::ProcrankProto_Summary>(GetArenaNoVirtual());
    summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.ProcrankProto.summary)
  return summary_;
}
inline void ProcrankProto::set_allocated_summary(::android::os::ProcrankProto_Summary* summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete summary_;
  }
  if (summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, summary, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  summary_ = summary;
  // @@protoc_insertion_point(field_set_allocated:android.os.ProcrankProto.summary)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace os
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto
