// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/viewrootimpl.proto

#include "frameworks/base/core/proto/android/view/viewrootimpl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RectProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DisplayCutoutProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fwindowlayoutparams_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WindowLayoutParamsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fwindowlayoutparams_2eproto;
namespace android {
namespace view {
class ViewRootImplProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ViewRootImplProto> _instance;
} _ViewRootImplProto_default_instance_;
}  // namespace view
}  // namespace android
static void InitDefaultsscc_info_ViewRootImplProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::_ViewRootImplProto_default_instance_;
    new (ptr) ::android::view::ViewRootImplProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::ViewRootImplProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ViewRootImplProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_ViewRootImplProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto}, {
      &scc_info_RectProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto.base,
      &scc_info_DisplayCutoutProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto.base,
      &scc_info_WindowLayoutParamsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fwindowlayoutparams_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, view_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, display_id_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, app_visible_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, width_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, height_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, is_animating_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, visible_rect_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, is_drawing_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, added_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, win_frame_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, pending_display_cutout_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, last_window_insets_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, soft_input_mode_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, scroll_y_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, cur_scroll_y_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, removed_),
  PROTOBUF_FIELD_OFFSET(::android::view::ViewRootImplProto, window_attributes_),
  0,
  7,
  10,
  8,
  9,
  11,
  3,
  12,
  13,
  4,
  5,
  1,
  2,
  14,
  15,
  16,
  6,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 22, sizeof(::android::view::ViewRootImplProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::_ViewRootImplProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n:frameworks/base/core/proto/android/vie"
  "w/viewrootimpl.proto\022\014android.view\0326fram"
  "eworks/base/core/proto/android/graphics/"
  "rect.proto\032;frameworks/base/core/proto/a"
  "ndroid/view/displaycutout.proto\032@framewo"
  "rks/base/core/proto/android/view/windowl"
  "ayoutparams.proto\"\373\003\n\021ViewRootImplProto\022"
  "\014\n\004view\030\001 \001(\t\022\022\n\ndisplay_id\030\002 \001(\005\022\023\n\013app"
  "_visible\030\003 \001(\010\022\r\n\005width\030\004 \001(\005\022\016\n\006height\030"
  "\005 \001(\005\022\024\n\014is_animating\030\006 \001(\010\0221\n\014visible_r"
  "ect\030\007 \001(\0132\033.android.graphics.RectProto\022\022"
  "\n\nis_drawing\030\010 \001(\010\022\r\n\005added\030\t \001(\010\022.\n\twin"
  "_frame\030\n \001(\0132\033.android.graphics.RectProt"
  "o\022D\n\026pending_display_cutout\030\013 \001(\0132 .andr"
  "oid.view.DisplayCutoutProtoB\002\030\001\022\032\n\022last_"
  "window_insets\030\014 \001(\t\022\027\n\017soft_input_mode\030\r"
  " \001(\t\022\020\n\010scroll_y\030\016 \001(\005\022\024\n\014cur_scroll_y\030\017"
  " \001(\005\022\017\n\007removed\030\020 \001(\010\022@\n\021window_attribut"
  "es\030\021 \001(\0132%.android.view.WindowLayoutPara"
  "msProtoB\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto_deps[3] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fwindowlayoutparams_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto_sccs[1] = {
  &scc_info_ViewRootImplProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto, "frameworks/base/core/proto/android/view/viewrootimpl.proto", 771,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto_deps, 1, 3,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto, 1, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto), true);
namespace android {
namespace view {

// ===================================================================

void ViewRootImplProto::InitAsDefaultInstance() {
  ::android::view::_ViewRootImplProto_default_instance_._instance.get_mutable()->visible_rect_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::android::view::_ViewRootImplProto_default_instance_._instance.get_mutable()->win_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::android::view::_ViewRootImplProto_default_instance_._instance.get_mutable()->pending_display_cutout_ = const_cast< ::android::view::DisplayCutoutProto*>(
      ::android::view::DisplayCutoutProto::internal_default_instance());
  ::android::view::_ViewRootImplProto_default_instance_._instance.get_mutable()->window_attributes_ = const_cast< ::android::view::WindowLayoutParamsProto*>(
      ::android::view::WindowLayoutParamsProto::internal_default_instance());
}
class ViewRootImplProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ViewRootImplProto>()._has_bits_);
  static void set_has_view(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_display_id(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_app_visible(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_width(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_is_animating(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::android::graphics::RectProto& visible_rect(const ViewRootImplProto* msg);
  static void set_has_visible_rect(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_is_drawing(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_added(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::android::graphics::RectProto& win_frame(const ViewRootImplProto* msg);
  static void set_has_win_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::android::view::DisplayCutoutProto& pending_display_cutout(const ViewRootImplProto* msg);
  static void set_has_pending_display_cutout(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_last_window_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_soft_input_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_scroll_y(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_cur_scroll_y(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_removed(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::android::view::WindowLayoutParamsProto& window_attributes(const ViewRootImplProto* msg);
  static void set_has_window_attributes(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::android::graphics::RectProto&
ViewRootImplProto::_Internal::visible_rect(const ViewRootImplProto* msg) {
  return *msg->visible_rect_;
}
const ::android::graphics::RectProto&
ViewRootImplProto::_Internal::win_frame(const ViewRootImplProto* msg) {
  return *msg->win_frame_;
}
const ::android::view::DisplayCutoutProto&
ViewRootImplProto::_Internal::pending_display_cutout(const ViewRootImplProto* msg) {
  return *msg->pending_display_cutout_;
}
const ::android::view::WindowLayoutParamsProto&
ViewRootImplProto::_Internal::window_attributes(const ViewRootImplProto* msg) {
  return *msg->window_attributes_;
}
void ViewRootImplProto::clear_visible_rect() {
  if (visible_rect_ != nullptr) visible_rect_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void ViewRootImplProto::clear_win_frame() {
  if (win_frame_ != nullptr) win_frame_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void ViewRootImplProto::clear_pending_display_cutout() {
  if (pending_display_cutout_ != nullptr) pending_display_cutout_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
void ViewRootImplProto::clear_window_attributes() {
  if (window_attributes_ != nullptr) window_attributes_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
ViewRootImplProto::ViewRootImplProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.ViewRootImplProto)
}
ViewRootImplProto::ViewRootImplProto(const ViewRootImplProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  view_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_view()) {
    view_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.view_);
  }
  last_window_insets_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_last_window_insets()) {
    last_window_insets_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.last_window_insets_);
  }
  soft_input_mode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_soft_input_mode()) {
    soft_input_mode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.soft_input_mode_);
  }
  if (from.has_visible_rect()) {
    visible_rect_ = new ::android::graphics::RectProto(*from.visible_rect_);
  } else {
    visible_rect_ = nullptr;
  }
  if (from.has_win_frame()) {
    win_frame_ = new ::android::graphics::RectProto(*from.win_frame_);
  } else {
    win_frame_ = nullptr;
  }
  if (from.has_pending_display_cutout()) {
    pending_display_cutout_ = new ::android::view::DisplayCutoutProto(*from.pending_display_cutout_);
  } else {
    pending_display_cutout_ = nullptr;
  }
  if (from.has_window_attributes()) {
    window_attributes_ = new ::android::view::WindowLayoutParamsProto(*from.window_attributes_);
  } else {
    window_attributes_ = nullptr;
  }
  ::memcpy(&display_id_, &from.display_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&removed_) -
    reinterpret_cast<char*>(&display_id_)) + sizeof(removed_));
  // @@protoc_insertion_point(copy_constructor:android.view.ViewRootImplProto)
}

void ViewRootImplProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ViewRootImplProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto.base);
  view_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_window_insets_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  soft_input_mode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&visible_rect_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&removed_) -
      reinterpret_cast<char*>(&visible_rect_)) + sizeof(removed_));
}

ViewRootImplProto::~ViewRootImplProto() {
  // @@protoc_insertion_point(destructor:android.view.ViewRootImplProto)
  SharedDtor();
}

void ViewRootImplProto::SharedDtor() {
  view_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_window_insets_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  soft_input_mode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete visible_rect_;
  if (this != internal_default_instance()) delete win_frame_;
  if (this != internal_default_instance()) delete pending_display_cutout_;
  if (this != internal_default_instance()) delete window_attributes_;
}

void ViewRootImplProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ViewRootImplProto& ViewRootImplProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ViewRootImplProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fviewrootimpl_2eproto.base);
  return *internal_default_instance();
}


void ViewRootImplProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.ViewRootImplProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      view_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      last_window_insets_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      soft_input_mode_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(visible_rect_ != nullptr);
      visible_rect_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(win_frame_ != nullptr);
      win_frame_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(pending_display_cutout_ != nullptr);
      pending_display_cutout_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(window_attributes_ != nullptr);
      window_attributes_->Clear();
    }
  }
  display_id_ = 0;
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&width_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cur_scroll_y_) -
        reinterpret_cast<char*>(&width_)) + sizeof(cur_scroll_y_));
  }
  removed_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ViewRootImplProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string view = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_view(), ptr, ctx, "android.view.ViewRootImplProto.view");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 display_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_display_id(&has_bits);
          display_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool app_visible = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_app_visible(&has_bits);
          app_visible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 width = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_width(&has_bits);
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 height = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_height(&has_bits);
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_animating = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_is_animating(&has_bits);
          is_animating_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto visible_rect = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_visible_rect(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_drawing = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_is_drawing(&has_bits);
          is_drawing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool added = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_added(&has_bits);
          added_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto win_frame = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_win_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.DisplayCutoutProto pending_display_cutout = 11 [deprecated = true];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(mutable_pending_display_cutout(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string last_window_insets = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_last_window_insets(), ptr, ctx, "android.view.ViewRootImplProto.last_window_insets");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string soft_input_mode = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_soft_input_mode(), ptr, ctx, "android.view.ViewRootImplProto.soft_input_mode");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 scroll_y = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_scroll_y(&has_bits);
          scroll_y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 cur_scroll_y = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_cur_scroll_y(&has_bits);
          cur_scroll_y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool removed = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_removed(&has_bits);
          removed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.WindowLayoutParamsProto window_attributes = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(mutable_window_attributes(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ViewRootImplProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.ViewRootImplProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string view = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_view()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->view().data(), static_cast<int>(this->view().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.view.ViewRootImplProto.view");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 display_id = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_display_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &display_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool app_visible = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_app_visible(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &app_visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 width = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_width(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 height = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_height(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_animating = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_is_animating(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_animating_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto visible_rect = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_visible_rect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_drawing = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_is_drawing(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_drawing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool added = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_added(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &added_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto win_frame = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_win_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.DisplayCutoutProto pending_display_cutout = 11 [deprecated = true];
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_pending_display_cutout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string last_window_insets = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_last_window_insets()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->last_window_insets().data(), static_cast<int>(this->last_window_insets().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.view.ViewRootImplProto.last_window_insets");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string soft_input_mode = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_soft_input_mode()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->soft_input_mode().data(), static_cast<int>(this->soft_input_mode().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.view.ViewRootImplProto.soft_input_mode");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 scroll_y = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          _Internal::set_has_scroll_y(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &scroll_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cur_scroll_y = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (120 & 0xFF)) {
          _Internal::set_has_cur_scroll_y(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_scroll_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool removed = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (128 & 0xFF)) {
          _Internal::set_has_removed(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &removed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.WindowLayoutParamsProto window_attributes = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (138 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.ViewRootImplProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.ViewRootImplProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ViewRootImplProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.ViewRootImplProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string view = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->view().data(), static_cast<int>(this->view().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.ViewRootImplProto.view");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->view(), output);
  }

  // optional int32 display_id = 2;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->display_id(), output);
  }

  // optional bool app_visible = 3;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->app_visible(), output);
  }

  // optional int32 width = 4;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->width(), output);
  }

  // optional int32 height = 5;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->height(), output);
  }

  // optional bool is_animating = 6;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->is_animating(), output);
  }

  // optional .android.graphics.RectProto visible_rect = 7;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::visible_rect(this), output);
  }

  // optional bool is_drawing = 8;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(8, this->is_drawing(), output);
  }

  // optional bool added = 9;
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(9, this->added(), output);
  }

  // optional .android.graphics.RectProto win_frame = 10;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, _Internal::win_frame(this), output);
  }

  // optional .android.view.DisplayCutoutProto pending_display_cutout = 11 [deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, _Internal::pending_display_cutout(this), output);
  }

  // optional string last_window_insets = 12;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->last_window_insets().data(), static_cast<int>(this->last_window_insets().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.ViewRootImplProto.last_window_insets");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->last_window_insets(), output);
  }

  // optional string soft_input_mode = 13;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->soft_input_mode().data(), static_cast<int>(this->soft_input_mode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.ViewRootImplProto.soft_input_mode");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->soft_input_mode(), output);
  }

  // optional int32 scroll_y = 14;
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(14, this->scroll_y(), output);
  }

  // optional int32 cur_scroll_y = 15;
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(15, this->cur_scroll_y(), output);
  }

  // optional bool removed = 16;
  if (cached_has_bits & 0x00010000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(16, this->removed(), output);
  }

  // optional .android.view.WindowLayoutParamsProto window_attributes = 17;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, _Internal::window_attributes(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.ViewRootImplProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ViewRootImplProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.ViewRootImplProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string view = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->view().data(), static_cast<int>(this->view().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.ViewRootImplProto.view");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->view(), target);
  }

  // optional int32 display_id = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->display_id(), target);
  }

  // optional bool app_visible = 3;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->app_visible(), target);
  }

  // optional int32 width = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->width(), target);
  }

  // optional int32 height = 5;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->height(), target);
  }

  // optional bool is_animating = 6;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->is_animating(), target);
  }

  // optional .android.graphics.RectProto visible_rect = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::visible_rect(this), target);
  }

  // optional bool is_drawing = 8;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->is_drawing(), target);
  }

  // optional bool added = 9;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->added(), target);
  }

  // optional .android.graphics.RectProto win_frame = 10;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, _Internal::win_frame(this), target);
  }

  // optional .android.view.DisplayCutoutProto pending_display_cutout = 11 [deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, _Internal::pending_display_cutout(this), target);
  }

  // optional string last_window_insets = 12;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->last_window_insets().data(), static_cast<int>(this->last_window_insets().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.ViewRootImplProto.last_window_insets");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        12, this->last_window_insets(), target);
  }

  // optional string soft_input_mode = 13;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->soft_input_mode().data(), static_cast<int>(this->soft_input_mode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.view.ViewRootImplProto.soft_input_mode");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        13, this->soft_input_mode(), target);
  }

  // optional int32 scroll_y = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(14, this->scroll_y(), target);
  }

  // optional int32 cur_scroll_y = 15;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(15, this->cur_scroll_y(), target);
  }

  // optional bool removed = 16;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->removed(), target);
  }

  // optional .android.view.WindowLayoutParamsProto window_attributes = 17;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, _Internal::window_attributes(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.ViewRootImplProto)
  return target;
}

size_t ViewRootImplProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.ViewRootImplProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string view = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->view());
    }

    // optional string last_window_insets = 12;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->last_window_insets());
    }

    // optional string soft_input_mode = 13;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->soft_input_mode());
    }

    // optional .android.graphics.RectProto visible_rect = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *visible_rect_);
    }

    // optional .android.graphics.RectProto win_frame = 10;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *win_frame_);
    }

    // optional .android.view.DisplayCutoutProto pending_display_cutout = 11 [deprecated = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pending_display_cutout_);
    }

    // optional .android.view.WindowLayoutParamsProto window_attributes = 17;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_attributes_);
    }

    // optional int32 display_id = 2;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->display_id());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int32 width = 4;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->width());
    }

    // optional int32 height = 5;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->height());
    }

    // optional bool app_visible = 3;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool is_animating = 6;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool is_drawing = 8;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional bool added = 9;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

    // optional int32 scroll_y = 14;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->scroll_y());
    }

    // optional int32 cur_scroll_y = 15;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->cur_scroll_y());
    }

  }
  // optional bool removed = 16;
  if (cached_has_bits & 0x00010000u) {
    total_size += 2 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewRootImplProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.ViewRootImplProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewRootImplProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ViewRootImplProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.ViewRootImplProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.ViewRootImplProto)
    MergeFrom(*source);
  }
}

void ViewRootImplProto::MergeFrom(const ViewRootImplProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.ViewRootImplProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      view_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.view_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      last_window_insets_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.last_window_insets_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      soft_input_mode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.soft_input_mode_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_visible_rect()->::android::graphics::RectProto::MergeFrom(from.visible_rect());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_win_frame()->::android::graphics::RectProto::MergeFrom(from.win_frame());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_pending_display_cutout()->::android::view::DisplayCutoutProto::MergeFrom(from.pending_display_cutout());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_window_attributes()->::android::view::WindowLayoutParamsProto::MergeFrom(from.window_attributes());
    }
    if (cached_has_bits & 0x00000080u) {
      display_id_ = from.display_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000200u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000400u) {
      app_visible_ = from.app_visible_;
    }
    if (cached_has_bits & 0x00000800u) {
      is_animating_ = from.is_animating_;
    }
    if (cached_has_bits & 0x00001000u) {
      is_drawing_ = from.is_drawing_;
    }
    if (cached_has_bits & 0x00002000u) {
      added_ = from.added_;
    }
    if (cached_has_bits & 0x00004000u) {
      scroll_y_ = from.scroll_y_;
    }
    if (cached_has_bits & 0x00008000u) {
      cur_scroll_y_ = from.cur_scroll_y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_removed(from.removed());
  }
}

void ViewRootImplProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.ViewRootImplProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewRootImplProto::CopyFrom(const ViewRootImplProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.ViewRootImplProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewRootImplProto::IsInitialized() const {
  return true;
}

void ViewRootImplProto::InternalSwap(ViewRootImplProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  view_.Swap(&other->view_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_window_insets_.Swap(&other->last_window_insets_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  soft_input_mode_.Swap(&other->soft_input_mode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(visible_rect_, other->visible_rect_);
  swap(win_frame_, other->win_frame_);
  swap(pending_display_cutout_, other->pending_display_cutout_);
  swap(window_attributes_, other->window_attributes_);
  swap(display_id_, other->display_id_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(app_visible_, other->app_visible_);
  swap(is_animating_, other->is_animating_);
  swap(is_drawing_, other->is_drawing_);
  swap(added_, other->added_);
  swap(scroll_y_, other->scroll_y_);
  swap(cur_scroll_y_, other->cur_scroll_y_);
  swap(removed_, other->removed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ViewRootImplProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::view::ViewRootImplProto* Arena::CreateMaybeMessage< ::android::view::ViewRootImplProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::ViewRootImplProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
