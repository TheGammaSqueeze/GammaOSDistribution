// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/content/configuration.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/app/window_configuration.pb.h"
#include "frameworks/base/core/proto/android/content/locale.pb.h"
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto;
namespace android {
namespace content {
class ConfigurationProto;
class ConfigurationProtoDefaultTypeInternal;
extern ConfigurationProtoDefaultTypeInternal _ConfigurationProto_default_instance_;
class DeviceConfigurationProto;
class DeviceConfigurationProtoDefaultTypeInternal;
extern DeviceConfigurationProtoDefaultTypeInternal _DeviceConfigurationProto_default_instance_;
class GlobalConfigurationProto;
class GlobalConfigurationProtoDefaultTypeInternal;
extern GlobalConfigurationProtoDefaultTypeInternal _GlobalConfigurationProto_default_instance_;
class ResourcesConfigurationProto;
class ResourcesConfigurationProtoDefaultTypeInternal;
extern ResourcesConfigurationProtoDefaultTypeInternal _ResourcesConfigurationProto_default_instance_;
}  // namespace content
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::content::ConfigurationProto* Arena::CreateMaybeMessage<::android::content::ConfigurationProto>(Arena*);
template<> ::android::content::DeviceConfigurationProto* Arena::CreateMaybeMessage<::android::content::DeviceConfigurationProto>(Arena*);
template<> ::android::content::GlobalConfigurationProto* Arena::CreateMaybeMessage<::android::content::GlobalConfigurationProto>(Arena*);
template<> ::android::content::ResourcesConfigurationProto* Arena::CreateMaybeMessage<::android::content::ResourcesConfigurationProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace content {

// ===================================================================

class ConfigurationProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.content.ConfigurationProto) */ {
 public:
  ConfigurationProto();
  virtual ~ConfigurationProto();

  ConfigurationProto(const ConfigurationProto& from);
  ConfigurationProto(ConfigurationProto&& from) noexcept
    : ConfigurationProto() {
    *this = ::std::move(from);
  }

  inline ConfigurationProto& operator=(const ConfigurationProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfigurationProto& operator=(ConfigurationProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConfigurationProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigurationProto* internal_default_instance() {
    return reinterpret_cast<const ConfigurationProto*>(
               &_ConfigurationProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ConfigurationProto& a, ConfigurationProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ConfigurationProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConfigurationProto* New() const final {
    return CreateMaybeMessage<ConfigurationProto>(nullptr);
  }

  ConfigurationProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConfigurationProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConfigurationProto& from);
  void MergeFrom(const ConfigurationProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigurationProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.content.ConfigurationProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocalesFieldNumber = 4,
    kLocaleListFieldNumber = 20,
    kWindowConfigurationFieldNumber = 19,
    kFontScaleFieldNumber = 1,
    kMccFieldNumber = 2,
    kMncFieldNumber = 3,
    kScreenLayoutFieldNumber = 5,
    kColorModeFieldNumber = 6,
    kTouchscreenFieldNumber = 7,
    kKeyboardFieldNumber = 8,
    kKeyboardHiddenFieldNumber = 9,
    kHardKeyboardHiddenFieldNumber = 10,
    kNavigationFieldNumber = 11,
    kNavigationHiddenFieldNumber = 12,
    kOrientationFieldNumber = 13,
    kUiModeFieldNumber = 14,
    kScreenWidthDpFieldNumber = 15,
    kScreenHeightDpFieldNumber = 16,
    kSmallestScreenWidthDpFieldNumber = 17,
    kDensityDpiFieldNumber = 18,
    kFontWeightAdjustmentFieldNumber = 21,
  };
  // repeated .android.content.LocaleProto locales = 4 [deprecated = true];
  PROTOBUF_DEPRECATED int locales_size() const;
  PROTOBUF_DEPRECATED void clear_locales();
  PROTOBUF_DEPRECATED ::android::content::LocaleProto* mutable_locales(int index);
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::content::LocaleProto >*
      mutable_locales();
  PROTOBUF_DEPRECATED const ::android::content::LocaleProto& locales(int index) const;
  PROTOBUF_DEPRECATED ::android::content::LocaleProto* add_locales();
  PROTOBUF_DEPRECATED const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::content::LocaleProto >&
      locales() const;

  // optional string locale_list = 20;
  bool has_locale_list() const;
  void clear_locale_list();
  const std::string& locale_list() const;
  void set_locale_list(const std::string& value);
  void set_locale_list(std::string&& value);
  void set_locale_list(const char* value);
  void set_locale_list(const char* value, size_t size);
  std::string* mutable_locale_list();
  std::string* release_locale_list();
  void set_allocated_locale_list(std::string* locale_list);

  // optional .android.app.WindowConfigurationProto window_configuration = 19;
  bool has_window_configuration() const;
  void clear_window_configuration();
  const ::android::app::WindowConfigurationProto& window_configuration() const;
  ::android::app::WindowConfigurationProto* release_window_configuration();
  ::android::app::WindowConfigurationProto* mutable_window_configuration();
  void set_allocated_window_configuration(::android::app::WindowConfigurationProto* window_configuration);

  // optional float font_scale = 1;
  bool has_font_scale() const;
  void clear_font_scale();
  float font_scale() const;
  void set_font_scale(float value);

  // optional uint32 mcc = 2;
  bool has_mcc() const;
  void clear_mcc();
  ::PROTOBUF_NAMESPACE_ID::uint32 mcc() const;
  void set_mcc(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 mnc = 3 [(.android.privacy) = {
  bool has_mnc() const;
  void clear_mnc();
  ::PROTOBUF_NAMESPACE_ID::uint32 mnc() const;
  void set_mnc(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 screen_layout = 5;
  bool has_screen_layout() const;
  void clear_screen_layout();
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_layout() const;
  void set_screen_layout(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 color_mode = 6;
  bool has_color_mode() const;
  void clear_color_mode();
  ::PROTOBUF_NAMESPACE_ID::uint32 color_mode() const;
  void set_color_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 touchscreen = 7;
  bool has_touchscreen() const;
  void clear_touchscreen();
  ::PROTOBUF_NAMESPACE_ID::uint32 touchscreen() const;
  void set_touchscreen(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 keyboard = 8;
  bool has_keyboard() const;
  void clear_keyboard();
  ::PROTOBUF_NAMESPACE_ID::uint32 keyboard() const;
  void set_keyboard(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 keyboard_hidden = 9;
  bool has_keyboard_hidden() const;
  void clear_keyboard_hidden();
  ::PROTOBUF_NAMESPACE_ID::uint32 keyboard_hidden() const;
  void set_keyboard_hidden(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 hard_keyboard_hidden = 10;
  bool has_hard_keyboard_hidden() const;
  void clear_hard_keyboard_hidden();
  ::PROTOBUF_NAMESPACE_ID::uint32 hard_keyboard_hidden() const;
  void set_hard_keyboard_hidden(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 navigation = 11;
  bool has_navigation() const;
  void clear_navigation();
  ::PROTOBUF_NAMESPACE_ID::uint32 navigation() const;
  void set_navigation(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 navigation_hidden = 12;
  bool has_navigation_hidden() const;
  void clear_navigation_hidden();
  ::PROTOBUF_NAMESPACE_ID::uint32 navigation_hidden() const;
  void set_navigation_hidden(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 orientation = 13;
  bool has_orientation() const;
  void clear_orientation();
  ::PROTOBUF_NAMESPACE_ID::uint32 orientation() const;
  void set_orientation(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 ui_mode = 14;
  bool has_ui_mode() const;
  void clear_ui_mode();
  ::PROTOBUF_NAMESPACE_ID::uint32 ui_mode() const;
  void set_ui_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 screen_width_dp = 15;
  bool has_screen_width_dp() const;
  void clear_screen_width_dp();
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_width_dp() const;
  void set_screen_width_dp(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 screen_height_dp = 16;
  bool has_screen_height_dp() const;
  void clear_screen_height_dp();
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_height_dp() const;
  void set_screen_height_dp(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 smallest_screen_width_dp = 17;
  bool has_smallest_screen_width_dp() const;
  void clear_smallest_screen_width_dp();
  ::PROTOBUF_NAMESPACE_ID::uint32 smallest_screen_width_dp() const;
  void set_smallest_screen_width_dp(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 density_dpi = 18;
  bool has_density_dpi() const;
  void clear_density_dpi();
  ::PROTOBUF_NAMESPACE_ID::uint32 density_dpi() const;
  void set_density_dpi(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 font_weight_adjustment = 21;
  bool has_font_weight_adjustment() const;
  void clear_font_weight_adjustment();
  ::PROTOBUF_NAMESPACE_ID::uint32 font_weight_adjustment() const;
  void set_font_weight_adjustment(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:android.content.ConfigurationProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::content::LocaleProto > locales_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locale_list_;
  ::android::app::WindowConfigurationProto* window_configuration_;
  float font_scale_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mcc_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mnc_;
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_layout_;
  ::PROTOBUF_NAMESPACE_ID::uint32 color_mode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 touchscreen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 keyboard_;
  ::PROTOBUF_NAMESPACE_ID::uint32 keyboard_hidden_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hard_keyboard_hidden_;
  ::PROTOBUF_NAMESPACE_ID::uint32 navigation_;
  ::PROTOBUF_NAMESPACE_ID::uint32 navigation_hidden_;
  ::PROTOBUF_NAMESPACE_ID::uint32 orientation_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ui_mode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_width_dp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_height_dp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 smallest_screen_width_dp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 density_dpi_;
  ::PROTOBUF_NAMESPACE_ID::uint32 font_weight_adjustment_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto;
};
// -------------------------------------------------------------------

class ResourcesConfigurationProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.content.ResourcesConfigurationProto) */ {
 public:
  ResourcesConfigurationProto();
  virtual ~ResourcesConfigurationProto();

  ResourcesConfigurationProto(const ResourcesConfigurationProto& from);
  ResourcesConfigurationProto(ResourcesConfigurationProto&& from) noexcept
    : ResourcesConfigurationProto() {
    *this = ::std::move(from);
  }

  inline ResourcesConfigurationProto& operator=(const ResourcesConfigurationProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourcesConfigurationProto& operator=(ResourcesConfigurationProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResourcesConfigurationProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResourcesConfigurationProto* internal_default_instance() {
    return reinterpret_cast<const ResourcesConfigurationProto*>(
               &_ResourcesConfigurationProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ResourcesConfigurationProto& a, ResourcesConfigurationProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourcesConfigurationProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResourcesConfigurationProto* New() const final {
    return CreateMaybeMessage<ResourcesConfigurationProto>(nullptr);
  }

  ResourcesConfigurationProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResourcesConfigurationProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResourcesConfigurationProto& from);
  void MergeFrom(const ResourcesConfigurationProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResourcesConfigurationProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.content.ResourcesConfigurationProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigurationFieldNumber = 1,
    kSdkVersionFieldNumber = 2,
    kScreenWidthPxFieldNumber = 3,
    kScreenHeightPxFieldNumber = 4,
  };
  // required .android.content.ConfigurationProto configuration = 1;
  bool has_configuration() const;
  void clear_configuration();
  const ::android::content::ConfigurationProto& configuration() const;
  ::android::content::ConfigurationProto* release_configuration();
  ::android::content::ConfigurationProto* mutable_configuration();
  void set_allocated_configuration(::android::content::ConfigurationProto* configuration);

  // optional uint32 sdk_version = 2;
  bool has_sdk_version() const;
  void clear_sdk_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 sdk_version() const;
  void set_sdk_version(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 screen_width_px = 3;
  bool has_screen_width_px() const;
  void clear_screen_width_px();
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_width_px() const;
  void set_screen_width_px(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 screen_height_px = 4;
  bool has_screen_height_px() const;
  void clear_screen_height_px();
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_height_px() const;
  void set_screen_height_px(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:android.content.ResourcesConfigurationProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::content::ConfigurationProto* configuration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sdk_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_width_px_;
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_height_px_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto;
};
// -------------------------------------------------------------------

class DeviceConfigurationProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.content.DeviceConfigurationProto) */ {
 public:
  DeviceConfigurationProto();
  virtual ~DeviceConfigurationProto();

  DeviceConfigurationProto(const DeviceConfigurationProto& from);
  DeviceConfigurationProto(DeviceConfigurationProto&& from) noexcept
    : DeviceConfigurationProto() {
    *this = ::std::move(from);
  }

  inline DeviceConfigurationProto& operator=(const DeviceConfigurationProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceConfigurationProto& operator=(DeviceConfigurationProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeviceConfigurationProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceConfigurationProto* internal_default_instance() {
    return reinterpret_cast<const DeviceConfigurationProto*>(
               &_DeviceConfigurationProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(DeviceConfigurationProto& a, DeviceConfigurationProto& b) {
    a.Swap(&b);
  }
  inline void Swap(DeviceConfigurationProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeviceConfigurationProto* New() const final {
    return CreateMaybeMessage<DeviceConfigurationProto>(nullptr);
  }

  DeviceConfigurationProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeviceConfigurationProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeviceConfigurationProto& from);
  void MergeFrom(const DeviceConfigurationProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeviceConfigurationProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.content.DeviceConfigurationProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpenglExtensionsFieldNumber = 9,
    kSharedLibrariesFieldNumber = 10,
    kFeaturesFieldNumber = 11,
    kCpuArchitecturesFieldNumber = 12,
    kStableScreenWidthPxFieldNumber = 1,
    kStableScreenHeightPxFieldNumber = 2,
    kTotalRamFieldNumber = 4,
    kStableDensityDpiFieldNumber = 3,
    kMaxCoresFieldNumber = 6,
    kLowRamFieldNumber = 5,
    kHasSecureScreenLockFieldNumber = 7,
    kOpenglVersionFieldNumber = 8,
  };
  // repeated string opengl_extensions = 9;
  int opengl_extensions_size() const;
  void clear_opengl_extensions();
  const std::string& opengl_extensions(int index) const;
  std::string* mutable_opengl_extensions(int index);
  void set_opengl_extensions(int index, const std::string& value);
  void set_opengl_extensions(int index, std::string&& value);
  void set_opengl_extensions(int index, const char* value);
  void set_opengl_extensions(int index, const char* value, size_t size);
  std::string* add_opengl_extensions();
  void add_opengl_extensions(const std::string& value);
  void add_opengl_extensions(std::string&& value);
  void add_opengl_extensions(const char* value);
  void add_opengl_extensions(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& opengl_extensions() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_opengl_extensions();

  // repeated string shared_libraries = 10;
  int shared_libraries_size() const;
  void clear_shared_libraries();
  const std::string& shared_libraries(int index) const;
  std::string* mutable_shared_libraries(int index);
  void set_shared_libraries(int index, const std::string& value);
  void set_shared_libraries(int index, std::string&& value);
  void set_shared_libraries(int index, const char* value);
  void set_shared_libraries(int index, const char* value, size_t size);
  std::string* add_shared_libraries();
  void add_shared_libraries(const std::string& value);
  void add_shared_libraries(std::string&& value);
  void add_shared_libraries(const char* value);
  void add_shared_libraries(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& shared_libraries() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_shared_libraries();

  // repeated string features = 11;
  int features_size() const;
  void clear_features();
  const std::string& features(int index) const;
  std::string* mutable_features(int index);
  void set_features(int index, const std::string& value);
  void set_features(int index, std::string&& value);
  void set_features(int index, const char* value);
  void set_features(int index, const char* value, size_t size);
  std::string* add_features();
  void add_features(const std::string& value);
  void add_features(std::string&& value);
  void add_features(const char* value);
  void add_features(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& features() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_features();

  // repeated string cpu_architectures = 12;
  int cpu_architectures_size() const;
  void clear_cpu_architectures();
  const std::string& cpu_architectures(int index) const;
  std::string* mutable_cpu_architectures(int index);
  void set_cpu_architectures(int index, const std::string& value);
  void set_cpu_architectures(int index, std::string&& value);
  void set_cpu_architectures(int index, const char* value);
  void set_cpu_architectures(int index, const char* value, size_t size);
  std::string* add_cpu_architectures();
  void add_cpu_architectures(const std::string& value);
  void add_cpu_architectures(std::string&& value);
  void add_cpu_architectures(const char* value);
  void add_cpu_architectures(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& cpu_architectures() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_cpu_architectures();

  // optional uint32 stable_screen_width_px = 1;
  bool has_stable_screen_width_px() const;
  void clear_stable_screen_width_px();
  ::PROTOBUF_NAMESPACE_ID::uint32 stable_screen_width_px() const;
  void set_stable_screen_width_px(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 stable_screen_height_px = 2;
  bool has_stable_screen_height_px() const;
  void clear_stable_screen_height_px();
  ::PROTOBUF_NAMESPACE_ID::uint32 stable_screen_height_px() const;
  void set_stable_screen_height_px(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint64 total_ram = 4;
  bool has_total_ram() const;
  void clear_total_ram();
  ::PROTOBUF_NAMESPACE_ID::uint64 total_ram() const;
  void set_total_ram(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint32 stable_density_dpi = 3;
  bool has_stable_density_dpi() const;
  void clear_stable_density_dpi();
  ::PROTOBUF_NAMESPACE_ID::uint32 stable_density_dpi() const;
  void set_stable_density_dpi(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 max_cores = 6;
  bool has_max_cores() const;
  void clear_max_cores();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_cores() const;
  void set_max_cores(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional bool low_ram = 5;
  bool has_low_ram() const;
  void clear_low_ram();
  bool low_ram() const;
  void set_low_ram(bool value);

  // optional bool has_secure_screen_lock = 7;
  bool has_has_secure_screen_lock() const;
  void clear_has_secure_screen_lock();
  bool has_secure_screen_lock() const;
  void set_has_secure_screen_lock(bool value);

  // optional uint32 opengl_version = 8;
  bool has_opengl_version() const;
  void clear_opengl_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 opengl_version() const;
  void set_opengl_version(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:android.content.DeviceConfigurationProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> opengl_extensions_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> shared_libraries_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> features_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> cpu_architectures_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stable_screen_width_px_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stable_screen_height_px_;
  ::PROTOBUF_NAMESPACE_ID::uint64 total_ram_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stable_density_dpi_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_cores_;
  bool low_ram_;
  bool has_secure_screen_lock_;
  ::PROTOBUF_NAMESPACE_ID::uint32 opengl_version_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto;
};
// -------------------------------------------------------------------

class GlobalConfigurationProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.content.GlobalConfigurationProto) */ {
 public:
  GlobalConfigurationProto();
  virtual ~GlobalConfigurationProto();

  GlobalConfigurationProto(const GlobalConfigurationProto& from);
  GlobalConfigurationProto(GlobalConfigurationProto&& from) noexcept
    : GlobalConfigurationProto() {
    *this = ::std::move(from);
  }

  inline GlobalConfigurationProto& operator=(const GlobalConfigurationProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GlobalConfigurationProto& operator=(GlobalConfigurationProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GlobalConfigurationProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GlobalConfigurationProto* internal_default_instance() {
    return reinterpret_cast<const GlobalConfigurationProto*>(
               &_GlobalConfigurationProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GlobalConfigurationProto& a, GlobalConfigurationProto& b) {
    a.Swap(&b);
  }
  inline void Swap(GlobalConfigurationProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GlobalConfigurationProto* New() const final {
    return CreateMaybeMessage<GlobalConfigurationProto>(nullptr);
  }

  GlobalConfigurationProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GlobalConfigurationProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GlobalConfigurationProto& from);
  void MergeFrom(const GlobalConfigurationProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GlobalConfigurationProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.content.GlobalConfigurationProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResourcesFieldNumber = 1,
    kDeviceFieldNumber = 2,
  };
  // optional .android.content.ResourcesConfigurationProto resources = 1;
  bool has_resources() const;
  void clear_resources();
  const ::android::content::ResourcesConfigurationProto& resources() const;
  ::android::content::ResourcesConfigurationProto* release_resources();
  ::android::content::ResourcesConfigurationProto* mutable_resources();
  void set_allocated_resources(::android::content::ResourcesConfigurationProto* resources);

  // optional .android.content.DeviceConfigurationProto device = 2;
  bool has_device() const;
  void clear_device();
  const ::android::content::DeviceConfigurationProto& device() const;
  ::android::content::DeviceConfigurationProto* release_device();
  ::android::content::DeviceConfigurationProto* mutable_device();
  void set_allocated_device(::android::content::DeviceConfigurationProto* device);

  // @@protoc_insertion_point(class_scope:android.content.GlobalConfigurationProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::content::ResourcesConfigurationProto* resources_;
  ::android::content::DeviceConfigurationProto* device_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConfigurationProto

// optional float font_scale = 1;
inline bool ConfigurationProto::has_font_scale() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigurationProto::clear_font_scale() {
  font_scale_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float ConfigurationProto::font_scale() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.font_scale)
  return font_scale_;
}
inline void ConfigurationProto::set_font_scale(float value) {
  _has_bits_[0] |= 0x00000004u;
  font_scale_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.font_scale)
}

// optional uint32 mcc = 2;
inline bool ConfigurationProto::has_mcc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigurationProto::clear_mcc() {
  mcc_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::mcc() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.mcc)
  return mcc_;
}
inline void ConfigurationProto::set_mcc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  mcc_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.mcc)
}

// optional uint32 mnc = 3 [(.android.privacy) = {
inline bool ConfigurationProto::has_mnc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigurationProto::clear_mnc() {
  mnc_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::mnc() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.mnc)
  return mnc_;
}
inline void ConfigurationProto::set_mnc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  mnc_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.mnc)
}

// repeated .android.content.LocaleProto locales = 4 [deprecated = true];
inline int ConfigurationProto::locales_size() const {
  return locales_.size();
}
inline ::android::content::LocaleProto* ConfigurationProto::mutable_locales(int index) {
  // @@protoc_insertion_point(field_mutable:android.content.ConfigurationProto.locales)
  return locales_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::content::LocaleProto >*
ConfigurationProto::mutable_locales() {
  // @@protoc_insertion_point(field_mutable_list:android.content.ConfigurationProto.locales)
  return &locales_;
}
inline const ::android::content::LocaleProto& ConfigurationProto::locales(int index) const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.locales)
  return locales_.Get(index);
}
inline ::android::content::LocaleProto* ConfigurationProto::add_locales() {
  // @@protoc_insertion_point(field_add:android.content.ConfigurationProto.locales)
  return locales_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::content::LocaleProto >&
ConfigurationProto::locales() const {
  // @@protoc_insertion_point(field_list:android.content.ConfigurationProto.locales)
  return locales_;
}

// optional uint32 screen_layout = 5;
inline bool ConfigurationProto::has_screen_layout() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigurationProto::clear_screen_layout() {
  screen_layout_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::screen_layout() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.screen_layout)
  return screen_layout_;
}
inline void ConfigurationProto::set_screen_layout(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  screen_layout_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.screen_layout)
}

// optional uint32 color_mode = 6;
inline bool ConfigurationProto::has_color_mode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConfigurationProto::clear_color_mode() {
  color_mode_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::color_mode() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.color_mode)
  return color_mode_;
}
inline void ConfigurationProto::set_color_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  color_mode_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.color_mode)
}

// optional uint32 touchscreen = 7;
inline bool ConfigurationProto::has_touchscreen() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConfigurationProto::clear_touchscreen() {
  touchscreen_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::touchscreen() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.touchscreen)
  return touchscreen_;
}
inline void ConfigurationProto::set_touchscreen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  touchscreen_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.touchscreen)
}

// optional uint32 keyboard = 8;
inline bool ConfigurationProto::has_keyboard() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConfigurationProto::clear_keyboard() {
  keyboard_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::keyboard() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.keyboard)
  return keyboard_;
}
inline void ConfigurationProto::set_keyboard(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  keyboard_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.keyboard)
}

// optional uint32 keyboard_hidden = 9;
inline bool ConfigurationProto::has_keyboard_hidden() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConfigurationProto::clear_keyboard_hidden() {
  keyboard_hidden_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::keyboard_hidden() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.keyboard_hidden)
  return keyboard_hidden_;
}
inline void ConfigurationProto::set_keyboard_hidden(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  keyboard_hidden_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.keyboard_hidden)
}

// optional uint32 hard_keyboard_hidden = 10;
inline bool ConfigurationProto::has_hard_keyboard_hidden() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ConfigurationProto::clear_hard_keyboard_hidden() {
  hard_keyboard_hidden_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::hard_keyboard_hidden() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.hard_keyboard_hidden)
  return hard_keyboard_hidden_;
}
inline void ConfigurationProto::set_hard_keyboard_hidden(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  hard_keyboard_hidden_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.hard_keyboard_hidden)
}

// optional uint32 navigation = 11;
inline bool ConfigurationProto::has_navigation() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ConfigurationProto::clear_navigation() {
  navigation_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::navigation() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.navigation)
  return navigation_;
}
inline void ConfigurationProto::set_navigation(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  navigation_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.navigation)
}

// optional uint32 navigation_hidden = 12;
inline bool ConfigurationProto::has_navigation_hidden() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ConfigurationProto::clear_navigation_hidden() {
  navigation_hidden_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::navigation_hidden() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.navigation_hidden)
  return navigation_hidden_;
}
inline void ConfigurationProto::set_navigation_hidden(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  navigation_hidden_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.navigation_hidden)
}

// optional uint32 orientation = 13;
inline bool ConfigurationProto::has_orientation() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ConfigurationProto::clear_orientation() {
  orientation_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::orientation() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.orientation)
  return orientation_;
}
inline void ConfigurationProto::set_orientation(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  orientation_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.orientation)
}

// optional uint32 ui_mode = 14;
inline bool ConfigurationProto::has_ui_mode() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ConfigurationProto::clear_ui_mode() {
  ui_mode_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::ui_mode() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.ui_mode)
  return ui_mode_;
}
inline void ConfigurationProto::set_ui_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  ui_mode_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.ui_mode)
}

// optional uint32 screen_width_dp = 15;
inline bool ConfigurationProto::has_screen_width_dp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ConfigurationProto::clear_screen_width_dp() {
  screen_width_dp_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::screen_width_dp() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.screen_width_dp)
  return screen_width_dp_;
}
inline void ConfigurationProto::set_screen_width_dp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  screen_width_dp_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.screen_width_dp)
}

// optional uint32 screen_height_dp = 16;
inline bool ConfigurationProto::has_screen_height_dp() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ConfigurationProto::clear_screen_height_dp() {
  screen_height_dp_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::screen_height_dp() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.screen_height_dp)
  return screen_height_dp_;
}
inline void ConfigurationProto::set_screen_height_dp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  screen_height_dp_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.screen_height_dp)
}

// optional uint32 smallest_screen_width_dp = 17;
inline bool ConfigurationProto::has_smallest_screen_width_dp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ConfigurationProto::clear_smallest_screen_width_dp() {
  smallest_screen_width_dp_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::smallest_screen_width_dp() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.smallest_screen_width_dp)
  return smallest_screen_width_dp_;
}
inline void ConfigurationProto::set_smallest_screen_width_dp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  smallest_screen_width_dp_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.smallest_screen_width_dp)
}

// optional uint32 density_dpi = 18;
inline bool ConfigurationProto::has_density_dpi() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ConfigurationProto::clear_density_dpi() {
  density_dpi_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::density_dpi() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.density_dpi)
  return density_dpi_;
}
inline void ConfigurationProto::set_density_dpi(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  density_dpi_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.density_dpi)
}

// optional .android.app.WindowConfigurationProto window_configuration = 19;
inline bool ConfigurationProto::has_window_configuration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::android::app::WindowConfigurationProto& ConfigurationProto::window_configuration() const {
  const ::android::app::WindowConfigurationProto* p = window_configuration_;
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.window_configuration)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::app::WindowConfigurationProto*>(
      &::android::app::_WindowConfigurationProto_default_instance_);
}
inline ::android::app::WindowConfigurationProto* ConfigurationProto::release_window_configuration() {
  // @@protoc_insertion_point(field_release:android.content.ConfigurationProto.window_configuration)
  _has_bits_[0] &= ~0x00000002u;
  ::android::app::WindowConfigurationProto* temp = window_configuration_;
  window_configuration_ = nullptr;
  return temp;
}
inline ::android::app::WindowConfigurationProto* ConfigurationProto::mutable_window_configuration() {
  _has_bits_[0] |= 0x00000002u;
  if (window_configuration_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::app::WindowConfigurationProto>(GetArenaNoVirtual());
    window_configuration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.content.ConfigurationProto.window_configuration)
  return window_configuration_;
}
inline void ConfigurationProto::set_allocated_window_configuration(::android::app::WindowConfigurationProto* window_configuration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(window_configuration_);
  }
  if (window_configuration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      window_configuration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, window_configuration, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  window_configuration_ = window_configuration;
  // @@protoc_insertion_point(field_set_allocated:android.content.ConfigurationProto.window_configuration)
}

// optional string locale_list = 20;
inline bool ConfigurationProto::has_locale_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigurationProto::clear_locale_list() {
  locale_list_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ConfigurationProto::locale_list() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.locale_list)
  return locale_list_.GetNoArena();
}
inline void ConfigurationProto::set_locale_list(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  locale_list_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.locale_list)
}
inline void ConfigurationProto::set_locale_list(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  locale_list_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.content.ConfigurationProto.locale_list)
}
inline void ConfigurationProto::set_locale_list(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  locale_list_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.content.ConfigurationProto.locale_list)
}
inline void ConfigurationProto::set_locale_list(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  locale_list_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.content.ConfigurationProto.locale_list)
}
inline std::string* ConfigurationProto::mutable_locale_list() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.content.ConfigurationProto.locale_list)
  return locale_list_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigurationProto::release_locale_list() {
  // @@protoc_insertion_point(field_release:android.content.ConfigurationProto.locale_list)
  if (!has_locale_list()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return locale_list_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigurationProto::set_allocated_locale_list(std::string* locale_list) {
  if (locale_list != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  locale_list_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locale_list);
  // @@protoc_insertion_point(field_set_allocated:android.content.ConfigurationProto.locale_list)
}

// optional uint32 font_weight_adjustment = 21;
inline bool ConfigurationProto::has_font_weight_adjustment() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ConfigurationProto::clear_font_weight_adjustment() {
  font_weight_adjustment_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ConfigurationProto::font_weight_adjustment() const {
  // @@protoc_insertion_point(field_get:android.content.ConfigurationProto.font_weight_adjustment)
  return font_weight_adjustment_;
}
inline void ConfigurationProto::set_font_weight_adjustment(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  font_weight_adjustment_ = value;
  // @@protoc_insertion_point(field_set:android.content.ConfigurationProto.font_weight_adjustment)
}

// -------------------------------------------------------------------

// ResourcesConfigurationProto

// required .android.content.ConfigurationProto configuration = 1;
inline bool ResourcesConfigurationProto::has_configuration() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResourcesConfigurationProto::clear_configuration() {
  if (configuration_ != nullptr) configuration_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::content::ConfigurationProto& ResourcesConfigurationProto::configuration() const {
  const ::android::content::ConfigurationProto* p = configuration_;
  // @@protoc_insertion_point(field_get:android.content.ResourcesConfigurationProto.configuration)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::content::ConfigurationProto*>(
      &::android::content::_ConfigurationProto_default_instance_);
}
inline ::android::content::ConfigurationProto* ResourcesConfigurationProto::release_configuration() {
  // @@protoc_insertion_point(field_release:android.content.ResourcesConfigurationProto.configuration)
  _has_bits_[0] &= ~0x00000001u;
  ::android::content::ConfigurationProto* temp = configuration_;
  configuration_ = nullptr;
  return temp;
}
inline ::android::content::ConfigurationProto* ResourcesConfigurationProto::mutable_configuration() {
  _has_bits_[0] |= 0x00000001u;
  if (configuration_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::content::ConfigurationProto>(GetArenaNoVirtual());
    configuration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.content.ResourcesConfigurationProto.configuration)
  return configuration_;
}
inline void ResourcesConfigurationProto::set_allocated_configuration(::android::content::ConfigurationProto* configuration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete configuration_;
  }
  if (configuration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      configuration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, configuration, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  configuration_ = configuration;
  // @@protoc_insertion_point(field_set_allocated:android.content.ResourcesConfigurationProto.configuration)
}

// optional uint32 sdk_version = 2;
inline bool ResourcesConfigurationProto::has_sdk_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResourcesConfigurationProto::clear_sdk_version() {
  sdk_version_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ResourcesConfigurationProto::sdk_version() const {
  // @@protoc_insertion_point(field_get:android.content.ResourcesConfigurationProto.sdk_version)
  return sdk_version_;
}
inline void ResourcesConfigurationProto::set_sdk_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  sdk_version_ = value;
  // @@protoc_insertion_point(field_set:android.content.ResourcesConfigurationProto.sdk_version)
}

// optional uint32 screen_width_px = 3;
inline bool ResourcesConfigurationProto::has_screen_width_px() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResourcesConfigurationProto::clear_screen_width_px() {
  screen_width_px_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ResourcesConfigurationProto::screen_width_px() const {
  // @@protoc_insertion_point(field_get:android.content.ResourcesConfigurationProto.screen_width_px)
  return screen_width_px_;
}
inline void ResourcesConfigurationProto::set_screen_width_px(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  screen_width_px_ = value;
  // @@protoc_insertion_point(field_set:android.content.ResourcesConfigurationProto.screen_width_px)
}

// optional uint32 screen_height_px = 4;
inline bool ResourcesConfigurationProto::has_screen_height_px() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResourcesConfigurationProto::clear_screen_height_px() {
  screen_height_px_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ResourcesConfigurationProto::screen_height_px() const {
  // @@protoc_insertion_point(field_get:android.content.ResourcesConfigurationProto.screen_height_px)
  return screen_height_px_;
}
inline void ResourcesConfigurationProto::set_screen_height_px(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  screen_height_px_ = value;
  // @@protoc_insertion_point(field_set:android.content.ResourcesConfigurationProto.screen_height_px)
}

// -------------------------------------------------------------------

// DeviceConfigurationProto

// optional uint32 stable_screen_width_px = 1;
inline bool DeviceConfigurationProto::has_stable_screen_width_px() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeviceConfigurationProto::clear_stable_screen_width_px() {
  stable_screen_width_px_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DeviceConfigurationProto::stable_screen_width_px() const {
  // @@protoc_insertion_point(field_get:android.content.DeviceConfigurationProto.stable_screen_width_px)
  return stable_screen_width_px_;
}
inline void DeviceConfigurationProto::set_stable_screen_width_px(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  stable_screen_width_px_ = value;
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.stable_screen_width_px)
}

// optional uint32 stable_screen_height_px = 2;
inline bool DeviceConfigurationProto::has_stable_screen_height_px() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeviceConfigurationProto::clear_stable_screen_height_px() {
  stable_screen_height_px_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DeviceConfigurationProto::stable_screen_height_px() const {
  // @@protoc_insertion_point(field_get:android.content.DeviceConfigurationProto.stable_screen_height_px)
  return stable_screen_height_px_;
}
inline void DeviceConfigurationProto::set_stable_screen_height_px(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  stable_screen_height_px_ = value;
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.stable_screen_height_px)
}

// optional uint32 stable_density_dpi = 3;
inline bool DeviceConfigurationProto::has_stable_density_dpi() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeviceConfigurationProto::clear_stable_density_dpi() {
  stable_density_dpi_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DeviceConfigurationProto::stable_density_dpi() const {
  // @@protoc_insertion_point(field_get:android.content.DeviceConfigurationProto.stable_density_dpi)
  return stable_density_dpi_;
}
inline void DeviceConfigurationProto::set_stable_density_dpi(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  stable_density_dpi_ = value;
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.stable_density_dpi)
}

// optional uint64 total_ram = 4;
inline bool DeviceConfigurationProto::has_total_ram() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeviceConfigurationProto::clear_total_ram() {
  total_ram_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DeviceConfigurationProto::total_ram() const {
  // @@protoc_insertion_point(field_get:android.content.DeviceConfigurationProto.total_ram)
  return total_ram_;
}
inline void DeviceConfigurationProto::set_total_ram(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  total_ram_ = value;
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.total_ram)
}

// optional bool low_ram = 5;
inline bool DeviceConfigurationProto::has_low_ram() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DeviceConfigurationProto::clear_low_ram() {
  low_ram_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool DeviceConfigurationProto::low_ram() const {
  // @@protoc_insertion_point(field_get:android.content.DeviceConfigurationProto.low_ram)
  return low_ram_;
}
inline void DeviceConfigurationProto::set_low_ram(bool value) {
  _has_bits_[0] |= 0x00000020u;
  low_ram_ = value;
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.low_ram)
}

// optional uint32 max_cores = 6;
inline bool DeviceConfigurationProto::has_max_cores() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DeviceConfigurationProto::clear_max_cores() {
  max_cores_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DeviceConfigurationProto::max_cores() const {
  // @@protoc_insertion_point(field_get:android.content.DeviceConfigurationProto.max_cores)
  return max_cores_;
}
inline void DeviceConfigurationProto::set_max_cores(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  max_cores_ = value;
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.max_cores)
}

// optional bool has_secure_screen_lock = 7;
inline bool DeviceConfigurationProto::has_has_secure_screen_lock() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DeviceConfigurationProto::clear_has_secure_screen_lock() {
  has_secure_screen_lock_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool DeviceConfigurationProto::has_secure_screen_lock() const {
  // @@protoc_insertion_point(field_get:android.content.DeviceConfigurationProto.has_secure_screen_lock)
  return has_secure_screen_lock_;
}
inline void DeviceConfigurationProto::set_has_secure_screen_lock(bool value) {
  _has_bits_[0] |= 0x00000040u;
  has_secure_screen_lock_ = value;
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.has_secure_screen_lock)
}

// optional uint32 opengl_version = 8;
inline bool DeviceConfigurationProto::has_opengl_version() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DeviceConfigurationProto::clear_opengl_version() {
  opengl_version_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DeviceConfigurationProto::opengl_version() const {
  // @@protoc_insertion_point(field_get:android.content.DeviceConfigurationProto.opengl_version)
  return opengl_version_;
}
inline void DeviceConfigurationProto::set_opengl_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  opengl_version_ = value;
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.opengl_version)
}

// repeated string opengl_extensions = 9;
inline int DeviceConfigurationProto::opengl_extensions_size() const {
  return opengl_extensions_.size();
}
inline void DeviceConfigurationProto::clear_opengl_extensions() {
  opengl_extensions_.Clear();
}
inline const std::string& DeviceConfigurationProto::opengl_extensions(int index) const {
  // @@protoc_insertion_point(field_get:android.content.DeviceConfigurationProto.opengl_extensions)
  return opengl_extensions_.Get(index);
}
inline std::string* DeviceConfigurationProto::mutable_opengl_extensions(int index) {
  // @@protoc_insertion_point(field_mutable:android.content.DeviceConfigurationProto.opengl_extensions)
  return opengl_extensions_.Mutable(index);
}
inline void DeviceConfigurationProto::set_opengl_extensions(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.opengl_extensions)
  opengl_extensions_.Mutable(index)->assign(value);
}
inline void DeviceConfigurationProto::set_opengl_extensions(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.opengl_extensions)
  opengl_extensions_.Mutable(index)->assign(std::move(value));
}
inline void DeviceConfigurationProto::set_opengl_extensions(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  opengl_extensions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:android.content.DeviceConfigurationProto.opengl_extensions)
}
inline void DeviceConfigurationProto::set_opengl_extensions(int index, const char* value, size_t size) {
  opengl_extensions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:android.content.DeviceConfigurationProto.opengl_extensions)
}
inline std::string* DeviceConfigurationProto::add_opengl_extensions() {
  // @@protoc_insertion_point(field_add_mutable:android.content.DeviceConfigurationProto.opengl_extensions)
  return opengl_extensions_.Add();
}
inline void DeviceConfigurationProto::add_opengl_extensions(const std::string& value) {
  opengl_extensions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:android.content.DeviceConfigurationProto.opengl_extensions)
}
inline void DeviceConfigurationProto::add_opengl_extensions(std::string&& value) {
  opengl_extensions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:android.content.DeviceConfigurationProto.opengl_extensions)
}
inline void DeviceConfigurationProto::add_opengl_extensions(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  opengl_extensions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:android.content.DeviceConfigurationProto.opengl_extensions)
}
inline void DeviceConfigurationProto::add_opengl_extensions(const char* value, size_t size) {
  opengl_extensions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:android.content.DeviceConfigurationProto.opengl_extensions)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
DeviceConfigurationProto::opengl_extensions() const {
  // @@protoc_insertion_point(field_list:android.content.DeviceConfigurationProto.opengl_extensions)
  return opengl_extensions_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
DeviceConfigurationProto::mutable_opengl_extensions() {
  // @@protoc_insertion_point(field_mutable_list:android.content.DeviceConfigurationProto.opengl_extensions)
  return &opengl_extensions_;
}

// repeated string shared_libraries = 10;
inline int DeviceConfigurationProto::shared_libraries_size() const {
  return shared_libraries_.size();
}
inline void DeviceConfigurationProto::clear_shared_libraries() {
  shared_libraries_.Clear();
}
inline const std::string& DeviceConfigurationProto::shared_libraries(int index) const {
  // @@protoc_insertion_point(field_get:android.content.DeviceConfigurationProto.shared_libraries)
  return shared_libraries_.Get(index);
}
inline std::string* DeviceConfigurationProto::mutable_shared_libraries(int index) {
  // @@protoc_insertion_point(field_mutable:android.content.DeviceConfigurationProto.shared_libraries)
  return shared_libraries_.Mutable(index);
}
inline void DeviceConfigurationProto::set_shared_libraries(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.shared_libraries)
  shared_libraries_.Mutable(index)->assign(value);
}
inline void DeviceConfigurationProto::set_shared_libraries(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.shared_libraries)
  shared_libraries_.Mutable(index)->assign(std::move(value));
}
inline void DeviceConfigurationProto::set_shared_libraries(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  shared_libraries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:android.content.DeviceConfigurationProto.shared_libraries)
}
inline void DeviceConfigurationProto::set_shared_libraries(int index, const char* value, size_t size) {
  shared_libraries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:android.content.DeviceConfigurationProto.shared_libraries)
}
inline std::string* DeviceConfigurationProto::add_shared_libraries() {
  // @@protoc_insertion_point(field_add_mutable:android.content.DeviceConfigurationProto.shared_libraries)
  return shared_libraries_.Add();
}
inline void DeviceConfigurationProto::add_shared_libraries(const std::string& value) {
  shared_libraries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:android.content.DeviceConfigurationProto.shared_libraries)
}
inline void DeviceConfigurationProto::add_shared_libraries(std::string&& value) {
  shared_libraries_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:android.content.DeviceConfigurationProto.shared_libraries)
}
inline void DeviceConfigurationProto::add_shared_libraries(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  shared_libraries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:android.content.DeviceConfigurationProto.shared_libraries)
}
inline void DeviceConfigurationProto::add_shared_libraries(const char* value, size_t size) {
  shared_libraries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:android.content.DeviceConfigurationProto.shared_libraries)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
DeviceConfigurationProto::shared_libraries() const {
  // @@protoc_insertion_point(field_list:android.content.DeviceConfigurationProto.shared_libraries)
  return shared_libraries_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
DeviceConfigurationProto::mutable_shared_libraries() {
  // @@protoc_insertion_point(field_mutable_list:android.content.DeviceConfigurationProto.shared_libraries)
  return &shared_libraries_;
}

// repeated string features = 11;
inline int DeviceConfigurationProto::features_size() const {
  return features_.size();
}
inline void DeviceConfigurationProto::clear_features() {
  features_.Clear();
}
inline const std::string& DeviceConfigurationProto::features(int index) const {
  // @@protoc_insertion_point(field_get:android.content.DeviceConfigurationProto.features)
  return features_.Get(index);
}
inline std::string* DeviceConfigurationProto::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:android.content.DeviceConfigurationProto.features)
  return features_.Mutable(index);
}
inline void DeviceConfigurationProto::set_features(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.features)
  features_.Mutable(index)->assign(value);
}
inline void DeviceConfigurationProto::set_features(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.features)
  features_.Mutable(index)->assign(std::move(value));
}
inline void DeviceConfigurationProto::set_features(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  features_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:android.content.DeviceConfigurationProto.features)
}
inline void DeviceConfigurationProto::set_features(int index, const char* value, size_t size) {
  features_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:android.content.DeviceConfigurationProto.features)
}
inline std::string* DeviceConfigurationProto::add_features() {
  // @@protoc_insertion_point(field_add_mutable:android.content.DeviceConfigurationProto.features)
  return features_.Add();
}
inline void DeviceConfigurationProto::add_features(const std::string& value) {
  features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:android.content.DeviceConfigurationProto.features)
}
inline void DeviceConfigurationProto::add_features(std::string&& value) {
  features_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:android.content.DeviceConfigurationProto.features)
}
inline void DeviceConfigurationProto::add_features(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:android.content.DeviceConfigurationProto.features)
}
inline void DeviceConfigurationProto::add_features(const char* value, size_t size) {
  features_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:android.content.DeviceConfigurationProto.features)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
DeviceConfigurationProto::features() const {
  // @@protoc_insertion_point(field_list:android.content.DeviceConfigurationProto.features)
  return features_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
DeviceConfigurationProto::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:android.content.DeviceConfigurationProto.features)
  return &features_;
}

// repeated string cpu_architectures = 12;
inline int DeviceConfigurationProto::cpu_architectures_size() const {
  return cpu_architectures_.size();
}
inline void DeviceConfigurationProto::clear_cpu_architectures() {
  cpu_architectures_.Clear();
}
inline const std::string& DeviceConfigurationProto::cpu_architectures(int index) const {
  // @@protoc_insertion_point(field_get:android.content.DeviceConfigurationProto.cpu_architectures)
  return cpu_architectures_.Get(index);
}
inline std::string* DeviceConfigurationProto::mutable_cpu_architectures(int index) {
  // @@protoc_insertion_point(field_mutable:android.content.DeviceConfigurationProto.cpu_architectures)
  return cpu_architectures_.Mutable(index);
}
inline void DeviceConfigurationProto::set_cpu_architectures(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.cpu_architectures)
  cpu_architectures_.Mutable(index)->assign(value);
}
inline void DeviceConfigurationProto::set_cpu_architectures(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:android.content.DeviceConfigurationProto.cpu_architectures)
  cpu_architectures_.Mutable(index)->assign(std::move(value));
}
inline void DeviceConfigurationProto::set_cpu_architectures(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  cpu_architectures_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:android.content.DeviceConfigurationProto.cpu_architectures)
}
inline void DeviceConfigurationProto::set_cpu_architectures(int index, const char* value, size_t size) {
  cpu_architectures_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:android.content.DeviceConfigurationProto.cpu_architectures)
}
inline std::string* DeviceConfigurationProto::add_cpu_architectures() {
  // @@protoc_insertion_point(field_add_mutable:android.content.DeviceConfigurationProto.cpu_architectures)
  return cpu_architectures_.Add();
}
inline void DeviceConfigurationProto::add_cpu_architectures(const std::string& value) {
  cpu_architectures_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:android.content.DeviceConfigurationProto.cpu_architectures)
}
inline void DeviceConfigurationProto::add_cpu_architectures(std::string&& value) {
  cpu_architectures_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:android.content.DeviceConfigurationProto.cpu_architectures)
}
inline void DeviceConfigurationProto::add_cpu_architectures(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  cpu_architectures_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:android.content.DeviceConfigurationProto.cpu_architectures)
}
inline void DeviceConfigurationProto::add_cpu_architectures(const char* value, size_t size) {
  cpu_architectures_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:android.content.DeviceConfigurationProto.cpu_architectures)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
DeviceConfigurationProto::cpu_architectures() const {
  // @@protoc_insertion_point(field_list:android.content.DeviceConfigurationProto.cpu_architectures)
  return cpu_architectures_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
DeviceConfigurationProto::mutable_cpu_architectures() {
  // @@protoc_insertion_point(field_mutable_list:android.content.DeviceConfigurationProto.cpu_architectures)
  return &cpu_architectures_;
}

// -------------------------------------------------------------------

// GlobalConfigurationProto

// optional .android.content.ResourcesConfigurationProto resources = 1;
inline bool GlobalConfigurationProto::has_resources() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalConfigurationProto::clear_resources() {
  if (resources_ != nullptr) resources_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::content::ResourcesConfigurationProto& GlobalConfigurationProto::resources() const {
  const ::android::content::ResourcesConfigurationProto* p = resources_;
  // @@protoc_insertion_point(field_get:android.content.GlobalConfigurationProto.resources)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::content::ResourcesConfigurationProto*>(
      &::android::content::_ResourcesConfigurationProto_default_instance_);
}
inline ::android::content::ResourcesConfigurationProto* GlobalConfigurationProto::release_resources() {
  // @@protoc_insertion_point(field_release:android.content.GlobalConfigurationProto.resources)
  _has_bits_[0] &= ~0x00000001u;
  ::android::content::ResourcesConfigurationProto* temp = resources_;
  resources_ = nullptr;
  return temp;
}
inline ::android::content::ResourcesConfigurationProto* GlobalConfigurationProto::mutable_resources() {
  _has_bits_[0] |= 0x00000001u;
  if (resources_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::content::ResourcesConfigurationProto>(GetArenaNoVirtual());
    resources_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.content.GlobalConfigurationProto.resources)
  return resources_;
}
inline void GlobalConfigurationProto::set_allocated_resources(::android::content::ResourcesConfigurationProto* resources) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete resources_;
  }
  if (resources) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      resources = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, resources, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  resources_ = resources;
  // @@protoc_insertion_point(field_set_allocated:android.content.GlobalConfigurationProto.resources)
}

// optional .android.content.DeviceConfigurationProto device = 2;
inline bool GlobalConfigurationProto::has_device() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalConfigurationProto::clear_device() {
  if (device_ != nullptr) device_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::android::content::DeviceConfigurationProto& GlobalConfigurationProto::device() const {
  const ::android::content::DeviceConfigurationProto* p = device_;
  // @@protoc_insertion_point(field_get:android.content.GlobalConfigurationProto.device)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::content::DeviceConfigurationProto*>(
      &::android::content::_DeviceConfigurationProto_default_instance_);
}
inline ::android::content::DeviceConfigurationProto* GlobalConfigurationProto::release_device() {
  // @@protoc_insertion_point(field_release:android.content.GlobalConfigurationProto.device)
  _has_bits_[0] &= ~0x00000002u;
  ::android::content::DeviceConfigurationProto* temp = device_;
  device_ = nullptr;
  return temp;
}
inline ::android::content::DeviceConfigurationProto* GlobalConfigurationProto::mutable_device() {
  _has_bits_[0] |= 0x00000002u;
  if (device_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::content::DeviceConfigurationProto>(GetArenaNoVirtual());
    device_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.content.GlobalConfigurationProto.device)
  return device_;
}
inline void GlobalConfigurationProto::set_allocated_device(::android::content::DeviceConfigurationProto* device) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete device_;
  }
  if (device) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      device = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  device_ = device;
  // @@protoc_insertion_point(field_set_allocated:android.content.GlobalConfigurationProto.device)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace content
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fconfiguration_2eproto
