// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/service/batterystats.proto

#include "frameworks/base/core/proto/android/service/batterystats.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fbatterystats_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BatteryStatsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fbatterystats_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BatteryStatsServiceDumpHistoryProto_Key_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto;
namespace android {
namespace service {
namespace batterystats {
class BatteryStatsServiceDumpProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BatteryStatsServiceDumpProto> _instance;
} _BatteryStatsServiceDumpProto_default_instance_;
class BatteryStatsServiceDumpHistoryProto_KeyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BatteryStatsServiceDumpHistoryProto_Key> _instance;
} _BatteryStatsServiceDumpHistoryProto_Key_default_instance_;
class BatteryStatsServiceDumpHistoryProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BatteryStatsServiceDumpHistoryProto> _instance;
} _BatteryStatsServiceDumpHistoryProto_default_instance_;
}  // namespace batterystats
}  // namespace service
}  // namespace android
static void InitDefaultsscc_info_BatteryStatsServiceDumpHistoryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::batterystats::_BatteryStatsServiceDumpHistoryProto_default_instance_;
    new (ptr) ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BatteryStatsServiceDumpHistoryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_BatteryStatsServiceDumpHistoryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto}, {
      &scc_info_BatteryStatsServiceDumpHistoryProto_Key_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto.base,}};

static void InitDefaultsscc_info_BatteryStatsServiceDumpHistoryProto_Key_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::batterystats::_BatteryStatsServiceDumpHistoryProto_Key_default_instance_;
    new (ptr) ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto_Key();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto_Key::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BatteryStatsServiceDumpHistoryProto_Key_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_BatteryStatsServiceDumpHistoryProto_Key_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto}, {}};

static void InitDefaultsscc_info_BatteryStatsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::batterystats::_BatteryStatsServiceDumpProto_default_instance_;
    new (ptr) ::android::service::batterystats::BatteryStatsServiceDumpProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::batterystats::BatteryStatsServiceDumpProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BatteryStatsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_BatteryStatsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto}, {
      &scc_info_BatteryStatsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fbatterystats_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpProto, batterystats_),
  0,
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto_Key, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto_Key, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto_Key, index_),
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto_Key, uid_),
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto_Key, tag_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto, report_version_),
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto, parcel_version_),
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto, start_platform_version_),
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto, end_platform_version_),
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto, keys_),
  PROTOBUF_FIELD_OFFSET(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto, csv_lines_),
  3,
  2,
  0,
  1,
  ~0u,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::android::service::batterystats::BatteryStatsServiceDumpProto)},
  { 7, 15, sizeof(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto_Key)},
  { 18, 29, sizeof(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::batterystats::_BatteryStatsServiceDumpProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::batterystats::_BatteryStatsServiceDumpHistoryProto_Key_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::batterystats::_BatteryStatsServiceDumpHistoryProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n=frameworks/base/core/proto/android/ser"
  "vice/batterystats.proto\022\034android.service"
  ".batterystats\0328frameworks/base/core/prot"
  "o/android/os/batterystats.proto\0320framewo"
  "rks/base/core/proto/android/privacy.prot"
  "o\"^\n\034BatteryStatsServiceDumpProto\0223\n\014bat"
  "terystats\030\001 \001(\0132\035.android.os.BatteryStat"
  "sProto:\t\232\237\325\207\003\003\010\310\001\"\301\002\n#BatteryStatsServic"
  "eDumpHistoryProto\022\026\n\016report_version\030\001 \001("
  "\005\022\026\n\016parcel_version\030\002 \001(\003\022\036\n\026start_platf"
  "orm_version\030\003 \001(\t\022\034\n\024end_platform_versio"
  "n\030\004 \001(\t\022S\n\004keys\030\005 \003(\0132E.android.service."
  "batterystats.BatteryStatsServiceDumpHist"
  "oryProto.Key\022\021\n\tcsv_lines\030\006 \003(\t\0329\n\003Key\022\r"
  "\n\005index\030\001 \001(\005\022\013\n\003uid\030\002 \001(\005\022\013\n\003tag\030\003 \001(\t:"
  "\t\232\237\325\207\003\003\010\310\001:\t\232\237\325\207\003\003\010\310\001B\034B\030BatteryStatsSer"
  "viceProtoP\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto_deps[2] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fbatterystats_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto_sccs[3] = {
  &scc_info_BatteryStatsServiceDumpHistoryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto.base,
  &scc_info_BatteryStatsServiceDumpHistoryProto_Key_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto.base,
  &scc_info_BatteryStatsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto, "frameworks/base/core/proto/android/service/batterystats.proto", 651,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto_deps, 3, 2,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto, 3, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto), true);
namespace android {
namespace service {
namespace batterystats {

// ===================================================================

void BatteryStatsServiceDumpProto::InitAsDefaultInstance() {
  ::android::service::batterystats::_BatteryStatsServiceDumpProto_default_instance_._instance.get_mutable()->batterystats_ = const_cast< ::android::os::BatteryStatsProto*>(
      ::android::os::BatteryStatsProto::internal_default_instance());
}
class BatteryStatsServiceDumpProto::_Internal {
 public:
  using HasBits = decltype(std::declval<BatteryStatsServiceDumpProto>()._has_bits_);
  static const ::android::os::BatteryStatsProto& batterystats(const BatteryStatsServiceDumpProto* msg);
  static void set_has_batterystats(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::os::BatteryStatsProto&
BatteryStatsServiceDumpProto::_Internal::batterystats(const BatteryStatsServiceDumpProto* msg) {
  return *msg->batterystats_;
}
void BatteryStatsServiceDumpProto::clear_batterystats() {
  if (batterystats_ != nullptr) batterystats_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
BatteryStatsServiceDumpProto::BatteryStatsServiceDumpProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.batterystats.BatteryStatsServiceDumpProto)
}
BatteryStatsServiceDumpProto::BatteryStatsServiceDumpProto(const BatteryStatsServiceDumpProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_batterystats()) {
    batterystats_ = new ::android::os::BatteryStatsProto(*from.batterystats_);
  } else {
    batterystats_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:android.service.batterystats.BatteryStatsServiceDumpProto)
}

void BatteryStatsServiceDumpProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BatteryStatsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto.base);
  batterystats_ = nullptr;
}

BatteryStatsServiceDumpProto::~BatteryStatsServiceDumpProto() {
  // @@protoc_insertion_point(destructor:android.service.batterystats.BatteryStatsServiceDumpProto)
  SharedDtor();
}

void BatteryStatsServiceDumpProto::SharedDtor() {
  if (this != internal_default_instance()) delete batterystats_;
}

void BatteryStatsServiceDumpProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BatteryStatsServiceDumpProto& BatteryStatsServiceDumpProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BatteryStatsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto.base);
  return *internal_default_instance();
}


void BatteryStatsServiceDumpProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.batterystats.BatteryStatsServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(batterystats_ != nullptr);
    batterystats_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BatteryStatsServiceDumpProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.os.BatteryStatsProto batterystats = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_batterystats(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BatteryStatsServiceDumpProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.batterystats.BatteryStatsServiceDumpProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.os.BatteryStatsProto batterystats = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_batterystats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.batterystats.BatteryStatsServiceDumpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.batterystats.BatteryStatsServiceDumpProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BatteryStatsServiceDumpProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.batterystats.BatteryStatsServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.os.BatteryStatsProto batterystats = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::batterystats(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.batterystats.BatteryStatsServiceDumpProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* BatteryStatsServiceDumpProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.batterystats.BatteryStatsServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.os.BatteryStatsProto batterystats = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::batterystats(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.batterystats.BatteryStatsServiceDumpProto)
  return target;
}

size_t BatteryStatsServiceDumpProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.batterystats.BatteryStatsServiceDumpProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .android.os.BatteryStatsProto batterystats = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *batterystats_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatteryStatsServiceDumpProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.batterystats.BatteryStatsServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  const BatteryStatsServiceDumpProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BatteryStatsServiceDumpProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.batterystats.BatteryStatsServiceDumpProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.batterystats.BatteryStatsServiceDumpProto)
    MergeFrom(*source);
  }
}

void BatteryStatsServiceDumpProto::MergeFrom(const BatteryStatsServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.batterystats.BatteryStatsServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_batterystats()) {
    mutable_batterystats()->::android::os::BatteryStatsProto::MergeFrom(from.batterystats());
  }
}

void BatteryStatsServiceDumpProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.batterystats.BatteryStatsServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatteryStatsServiceDumpProto::CopyFrom(const BatteryStatsServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.batterystats.BatteryStatsServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatteryStatsServiceDumpProto::IsInitialized() const {
  return true;
}

void BatteryStatsServiceDumpProto::InternalSwap(BatteryStatsServiceDumpProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(batterystats_, other->batterystats_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BatteryStatsServiceDumpProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BatteryStatsServiceDumpHistoryProto_Key::InitAsDefaultInstance() {
}
class BatteryStatsServiceDumpHistoryProto_Key::_Internal {
 public:
  using HasBits = decltype(std::declval<BatteryStatsServiceDumpHistoryProto_Key>()._has_bits_);
  static void set_has_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

BatteryStatsServiceDumpHistoryProto_Key::BatteryStatsServiceDumpHistoryProto_Key()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
}
BatteryStatsServiceDumpHistoryProto_Key::BatteryStatsServiceDumpHistoryProto_Key(const BatteryStatsServiceDumpHistoryProto_Key& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag()) {
    tag_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&index_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
}

void BatteryStatsServiceDumpHistoryProto_Key::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BatteryStatsServiceDumpHistoryProto_Key_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto.base);
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&index_)) + sizeof(uid_));
}

BatteryStatsServiceDumpHistoryProto_Key::~BatteryStatsServiceDumpHistoryProto_Key() {
  // @@protoc_insertion_point(destructor:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
  SharedDtor();
}

void BatteryStatsServiceDumpHistoryProto_Key::SharedDtor() {
  tag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BatteryStatsServiceDumpHistoryProto_Key::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BatteryStatsServiceDumpHistoryProto_Key& BatteryStatsServiceDumpHistoryProto_Key::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BatteryStatsServiceDumpHistoryProto_Key_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto.base);
  return *internal_default_instance();
}


void BatteryStatsServiceDumpHistoryProto_Key::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    tag_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uid_) -
        reinterpret_cast<char*>(&index_)) + sizeof(uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BatteryStatsServiceDumpHistoryProto_Key::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_index(&has_bits);
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_uid(&has_bits);
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string tag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_tag(), ptr, ctx, "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key.tag");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BatteryStatsServiceDumpHistoryProto_Key::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_index(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 uid = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_uid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tag = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag().data(), static_cast<int>(this->tag().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key.tag");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BatteryStatsServiceDumpHistoryProto_Key::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 index = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional int32 uid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->uid(), output);
  }

  // optional string tag = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key.tag");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
}

::PROTOBUF_NAMESPACE_ID::uint8* BatteryStatsServiceDumpHistoryProto_Key::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 index = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional int32 uid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->uid(), target);
  }

  // optional string tag = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key.tag");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->tag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
  return target;
}

size_t BatteryStatsServiceDumpHistoryProto_Key::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string tag = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->tag());
    }

    // optional int32 index = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional int32 uid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->uid());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatteryStatsServiceDumpHistoryProto_Key::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
  GOOGLE_DCHECK_NE(&from, this);
  const BatteryStatsServiceDumpHistoryProto_Key* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BatteryStatsServiceDumpHistoryProto_Key>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
    MergeFrom(*source);
  }
}

void BatteryStatsServiceDumpHistoryProto_Key::MergeFrom(const BatteryStatsServiceDumpHistoryProto_Key& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      tag_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tag_);
    }
    if (cached_has_bits & 0x00000002u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000004u) {
      uid_ = from.uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BatteryStatsServiceDumpHistoryProto_Key::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatteryStatsServiceDumpHistoryProto_Key::CopyFrom(const BatteryStatsServiceDumpHistoryProto_Key& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatteryStatsServiceDumpHistoryProto_Key::IsInitialized() const {
  return true;
}

void BatteryStatsServiceDumpHistoryProto_Key::InternalSwap(BatteryStatsServiceDumpHistoryProto_Key* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tag_.Swap(&other->tag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
  swap(uid_, other->uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BatteryStatsServiceDumpHistoryProto_Key::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BatteryStatsServiceDumpHistoryProto::InitAsDefaultInstance() {
}
class BatteryStatsServiceDumpHistoryProto::_Internal {
 public:
  using HasBits = decltype(std::declval<BatteryStatsServiceDumpHistoryProto>()._has_bits_);
  static void set_has_report_version(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_parcel_version(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_start_platform_version(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_end_platform_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

BatteryStatsServiceDumpHistoryProto::BatteryStatsServiceDumpHistoryProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
}
BatteryStatsServiceDumpHistoryProto::BatteryStatsServiceDumpHistoryProto(const BatteryStatsServiceDumpHistoryProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      keys_(from.keys_),
      csv_lines_(from.csv_lines_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_platform_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_start_platform_version()) {
    start_platform_version_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.start_platform_version_);
  }
  end_platform_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_end_platform_version()) {
    end_platform_version_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.end_platform_version_);
  }
  ::memcpy(&parcel_version_, &from.parcel_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&report_version_) -
    reinterpret_cast<char*>(&parcel_version_)) + sizeof(report_version_));
  // @@protoc_insertion_point(copy_constructor:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
}

void BatteryStatsServiceDumpHistoryProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BatteryStatsServiceDumpHistoryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto.base);
  start_platform_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  end_platform_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&parcel_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&report_version_) -
      reinterpret_cast<char*>(&parcel_version_)) + sizeof(report_version_));
}

BatteryStatsServiceDumpHistoryProto::~BatteryStatsServiceDumpHistoryProto() {
  // @@protoc_insertion_point(destructor:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
  SharedDtor();
}

void BatteryStatsServiceDumpHistoryProto::SharedDtor() {
  start_platform_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  end_platform_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BatteryStatsServiceDumpHistoryProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BatteryStatsServiceDumpHistoryProto& BatteryStatsServiceDumpHistoryProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BatteryStatsServiceDumpHistoryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fbatterystats_2eproto.base);
  return *internal_default_instance();
}


void BatteryStatsServiceDumpHistoryProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  csv_lines_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      start_platform_version_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      end_platform_version_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&parcel_version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&report_version_) -
        reinterpret_cast<char*>(&parcel_version_)) + sizeof(report_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BatteryStatsServiceDumpHistoryProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 report_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_report_version(&has_bits);
          report_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 parcel_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_parcel_version(&has_bits);
          parcel_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string start_platform_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_start_platform_version(), ptr, ctx, "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.start_platform_version");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string end_platform_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_end_platform_version(), ptr, ctx, "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.end_platform_version");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key keys = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_keys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // repeated string csv_lines = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_csv_lines(), ptr, ctx, "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.csv_lines");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 50);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BatteryStatsServiceDumpHistoryProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 report_version = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_report_version(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &report_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 parcel_version = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_parcel_version(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &parcel_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string start_platform_version = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_start_platform_version()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->start_platform_version().data(), static_cast<int>(this->start_platform_version().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.start_platform_version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string end_platform_version = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_end_platform_version()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->end_platform_version().data(), static_cast<int>(this->end_platform_version().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.end_platform_version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key keys = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string csv_lines = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_csv_lines()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->csv_lines(this->csv_lines_size() - 1).data(),
            static_cast<int>(this->csv_lines(this->csv_lines_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.csv_lines");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BatteryStatsServiceDumpHistoryProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 report_version = 1;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->report_version(), output);
  }

  // optional int64 parcel_version = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->parcel_version(), output);
  }

  // optional string start_platform_version = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->start_platform_version().data(), static_cast<int>(this->start_platform_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.start_platform_version");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->start_platform_version(), output);
  }

  // optional string end_platform_version = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->end_platform_version().data(), static_cast<int>(this->end_platform_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.end_platform_version");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->end_platform_version(), output);
  }

  // repeated .android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key keys = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->keys(static_cast<int>(i)),
      output);
  }

  // repeated string csv_lines = 6;
  for (int i = 0, n = this->csv_lines_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csv_lines(i).data(), static_cast<int>(this->csv_lines(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.csv_lines");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      6, this->csv_lines(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* BatteryStatsServiceDumpHistoryProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 report_version = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->report_version(), target);
  }

  // optional int64 parcel_version = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->parcel_version(), target);
  }

  // optional string start_platform_version = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->start_platform_version().data(), static_cast<int>(this->start_platform_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.start_platform_version");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->start_platform_version(), target);
  }

  // optional string end_platform_version = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->end_platform_version().data(), static_cast<int>(this->end_platform_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.end_platform_version");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->end_platform_version(), target);
  }

  // repeated .android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key keys = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->keys(static_cast<int>(i)), target);
  }

  // repeated string csv_lines = 6;
  for (int i = 0, n = this->csv_lines_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csv_lines(i).data(), static_cast<int>(this->csv_lines(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.batterystats.BatteryStatsServiceDumpHistoryProto.csv_lines");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(6, this->csv_lines(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
  return target;
}

size_t BatteryStatsServiceDumpHistoryProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key keys = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  // repeated string csv_lines = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->csv_lines_size());
  for (int i = 0, n = this->csv_lines_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->csv_lines(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string start_platform_version = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->start_platform_version());
    }

    // optional string end_platform_version = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->end_platform_version());
    }

    // optional int64 parcel_version = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->parcel_version());
    }

    // optional int32 report_version = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->report_version());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatteryStatsServiceDumpHistoryProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
  GOOGLE_DCHECK_NE(&from, this);
  const BatteryStatsServiceDumpHistoryProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BatteryStatsServiceDumpHistoryProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
    MergeFrom(*source);
  }
}

void BatteryStatsServiceDumpHistoryProto::MergeFrom(const BatteryStatsServiceDumpHistoryProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  csv_lines_.MergeFrom(from.csv_lines_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      start_platform_version_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.start_platform_version_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      end_platform_version_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.end_platform_version_);
    }
    if (cached_has_bits & 0x00000004u) {
      parcel_version_ = from.parcel_version_;
    }
    if (cached_has_bits & 0x00000008u) {
      report_version_ = from.report_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BatteryStatsServiceDumpHistoryProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatteryStatsServiceDumpHistoryProto::CopyFrom(const BatteryStatsServiceDumpHistoryProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.batterystats.BatteryStatsServiceDumpHistoryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatteryStatsServiceDumpHistoryProto::IsInitialized() const {
  return true;
}

void BatteryStatsServiceDumpHistoryProto::InternalSwap(BatteryStatsServiceDumpHistoryProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  csv_lines_.InternalSwap(CastToBase(&other->csv_lines_));
  start_platform_version_.Swap(&other->start_platform_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  end_platform_version_.Swap(&other->end_platform_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(parcel_version_, other->parcel_version_);
  swap(report_version_, other->report_version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BatteryStatsServiceDumpHistoryProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace batterystats
}  // namespace service
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::service::batterystats::BatteryStatsServiceDumpProto* Arena::CreateMaybeMessage< ::android::service::batterystats::BatteryStatsServiceDumpProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::batterystats::BatteryStatsServiceDumpProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto_Key* Arena::CreateMaybeMessage< ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto_Key >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto_Key >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto* Arena::CreateMaybeMessage< ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
