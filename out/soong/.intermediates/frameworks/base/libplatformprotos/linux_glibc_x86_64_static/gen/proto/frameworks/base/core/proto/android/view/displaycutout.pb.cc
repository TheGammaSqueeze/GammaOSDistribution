// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/displaycutout.proto

#include "frameworks/base/core/proto/android/view/displaycutout.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RectProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto;
namespace android {
namespace view {
class DisplayCutoutProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisplayCutoutProto> _instance;
} _DisplayCutoutProto_default_instance_;
}  // namespace view
}  // namespace android
static void InitDefaultsscc_info_DisplayCutoutProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::_DisplayCutoutProto_default_instance_;
    new (ptr) ::android::view::DisplayCutoutProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::DisplayCutoutProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DisplayCutoutProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_DisplayCutoutProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto}, {
      &scc_info_RectProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::view::DisplayCutoutProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::DisplayCutoutProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::view::DisplayCutoutProto, insets_),
  PROTOBUF_FIELD_OFFSET(::android::view::DisplayCutoutProto, bound_left_),
  PROTOBUF_FIELD_OFFSET(::android::view::DisplayCutoutProto, bound_top_),
  PROTOBUF_FIELD_OFFSET(::android::view::DisplayCutoutProto, bound_right_),
  PROTOBUF_FIELD_OFFSET(::android::view::DisplayCutoutProto, bound_bottom_),
  0,
  1,
  2,
  3,
  4,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::android::view::DisplayCutoutProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::_DisplayCutoutProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n;frameworks/base/core/proto/android/vie"
  "w/displaycutout.proto\022\014android.view\0326fra"
  "meworks/base/core/proto/android/graphics"
  "/rect.proto\0320frameworks/base/core/proto/"
  "android/privacy.proto\"\230\002\n\022DisplayCutoutP"
  "roto\022+\n\006insets\030\001 \001(\0132\033.android.graphics."
  "RectProto\022/\n\nbound_left\030\003 \001(\0132\033.android."
  "graphics.RectProto\022.\n\tbound_top\030\004 \001(\0132\033."
  "android.graphics.RectProto\0220\n\013bound_righ"
  "t\030\005 \001(\0132\033.android.graphics.RectProto\0221\n\014"
  "bound_bottom\030\006 \001(\0132\033.android.graphics.Re"
  "ctProto:\t\232\237\325\207\003\003\010\310\001J\004\010\002\020\003B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto_deps[2] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto_sccs[1] = {
  &scc_info_DisplayCutoutProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto, "frameworks/base/core/proto/android/view/displaycutout.proto", 468,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto, 1, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto), true);
namespace android {
namespace view {

// ===================================================================

void DisplayCutoutProto::InitAsDefaultInstance() {
  ::android::view::_DisplayCutoutProto_default_instance_._instance.get_mutable()->insets_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::android::view::_DisplayCutoutProto_default_instance_._instance.get_mutable()->bound_left_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::android::view::_DisplayCutoutProto_default_instance_._instance.get_mutable()->bound_top_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::android::view::_DisplayCutoutProto_default_instance_._instance.get_mutable()->bound_right_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::android::view::_DisplayCutoutProto_default_instance_._instance.get_mutable()->bound_bottom_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
}
class DisplayCutoutProto::_Internal {
 public:
  using HasBits = decltype(std::declval<DisplayCutoutProto>()._has_bits_);
  static const ::android::graphics::RectProto& insets(const DisplayCutoutProto* msg);
  static void set_has_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::android::graphics::RectProto& bound_left(const DisplayCutoutProto* msg);
  static void set_has_bound_left(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::android::graphics::RectProto& bound_top(const DisplayCutoutProto* msg);
  static void set_has_bound_top(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::android::graphics::RectProto& bound_right(const DisplayCutoutProto* msg);
  static void set_has_bound_right(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::android::graphics::RectProto& bound_bottom(const DisplayCutoutProto* msg);
  static void set_has_bound_bottom(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::android::graphics::RectProto&
DisplayCutoutProto::_Internal::insets(const DisplayCutoutProto* msg) {
  return *msg->insets_;
}
const ::android::graphics::RectProto&
DisplayCutoutProto::_Internal::bound_left(const DisplayCutoutProto* msg) {
  return *msg->bound_left_;
}
const ::android::graphics::RectProto&
DisplayCutoutProto::_Internal::bound_top(const DisplayCutoutProto* msg) {
  return *msg->bound_top_;
}
const ::android::graphics::RectProto&
DisplayCutoutProto::_Internal::bound_right(const DisplayCutoutProto* msg) {
  return *msg->bound_right_;
}
const ::android::graphics::RectProto&
DisplayCutoutProto::_Internal::bound_bottom(const DisplayCutoutProto* msg) {
  return *msg->bound_bottom_;
}
void DisplayCutoutProto::clear_insets() {
  if (insets_ != nullptr) insets_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void DisplayCutoutProto::clear_bound_left() {
  if (bound_left_ != nullptr) bound_left_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void DisplayCutoutProto::clear_bound_top() {
  if (bound_top_ != nullptr) bound_top_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void DisplayCutoutProto::clear_bound_right() {
  if (bound_right_ != nullptr) bound_right_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void DisplayCutoutProto::clear_bound_bottom() {
  if (bound_bottom_ != nullptr) bound_bottom_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
DisplayCutoutProto::DisplayCutoutProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.DisplayCutoutProto)
}
DisplayCutoutProto::DisplayCutoutProto(const DisplayCutoutProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_insets()) {
    insets_ = new ::android::graphics::RectProto(*from.insets_);
  } else {
    insets_ = nullptr;
  }
  if (from.has_bound_left()) {
    bound_left_ = new ::android::graphics::RectProto(*from.bound_left_);
  } else {
    bound_left_ = nullptr;
  }
  if (from.has_bound_top()) {
    bound_top_ = new ::android::graphics::RectProto(*from.bound_top_);
  } else {
    bound_top_ = nullptr;
  }
  if (from.has_bound_right()) {
    bound_right_ = new ::android::graphics::RectProto(*from.bound_right_);
  } else {
    bound_right_ = nullptr;
  }
  if (from.has_bound_bottom()) {
    bound_bottom_ = new ::android::graphics::RectProto(*from.bound_bottom_);
  } else {
    bound_bottom_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:android.view.DisplayCutoutProto)
}

void DisplayCutoutProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DisplayCutoutProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto.base);
  ::memset(&insets_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bound_bottom_) -
      reinterpret_cast<char*>(&insets_)) + sizeof(bound_bottom_));
}

DisplayCutoutProto::~DisplayCutoutProto() {
  // @@protoc_insertion_point(destructor:android.view.DisplayCutoutProto)
  SharedDtor();
}

void DisplayCutoutProto::SharedDtor() {
  if (this != internal_default_instance()) delete insets_;
  if (this != internal_default_instance()) delete bound_left_;
  if (this != internal_default_instance()) delete bound_top_;
  if (this != internal_default_instance()) delete bound_right_;
  if (this != internal_default_instance()) delete bound_bottom_;
}

void DisplayCutoutProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisplayCutoutProto& DisplayCutoutProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DisplayCutoutProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto.base);
  return *internal_default_instance();
}


void DisplayCutoutProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.DisplayCutoutProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(insets_ != nullptr);
      insets_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(bound_left_ != nullptr);
      bound_left_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(bound_top_ != nullptr);
      bound_top_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(bound_right_ != nullptr);
      bound_right_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(bound_bottom_ != nullptr);
      bound_bottom_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DisplayCutoutProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.graphics.RectProto insets = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_insets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto bound_left = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_bound_left(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto bound_top = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_bound_top(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto bound_right = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_bound_right(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto bound_bottom = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_bound_bottom(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DisplayCutoutProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.DisplayCutoutProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.graphics.RectProto insets = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_insets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto bound_left = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_bound_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto bound_top = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_bound_top()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto bound_right = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_bound_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto bound_bottom = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_bound_bottom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.DisplayCutoutProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.DisplayCutoutProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DisplayCutoutProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.DisplayCutoutProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.graphics.RectProto insets = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::insets(this), output);
  }

  // optional .android.graphics.RectProto bound_left = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::bound_left(this), output);
  }

  // optional .android.graphics.RectProto bound_top = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::bound_top(this), output);
  }

  // optional .android.graphics.RectProto bound_right = 5;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::bound_right(this), output);
  }

  // optional .android.graphics.RectProto bound_bottom = 6;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::bound_bottom(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.DisplayCutoutProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* DisplayCutoutProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.DisplayCutoutProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.graphics.RectProto insets = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::insets(this), target);
  }

  // optional .android.graphics.RectProto bound_left = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::bound_left(this), target);
  }

  // optional .android.graphics.RectProto bound_top = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::bound_top(this), target);
  }

  // optional .android.graphics.RectProto bound_right = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::bound_right(this), target);
  }

  // optional .android.graphics.RectProto bound_bottom = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::bound_bottom(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.DisplayCutoutProto)
  return target;
}

size_t DisplayCutoutProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.DisplayCutoutProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .android.graphics.RectProto insets = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *insets_);
    }

    // optional .android.graphics.RectProto bound_left = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bound_left_);
    }

    // optional .android.graphics.RectProto bound_top = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bound_top_);
    }

    // optional .android.graphics.RectProto bound_right = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bound_right_);
    }

    // optional .android.graphics.RectProto bound_bottom = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bound_bottom_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisplayCutoutProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.DisplayCutoutProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayCutoutProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisplayCutoutProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.DisplayCutoutProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.DisplayCutoutProto)
    MergeFrom(*source);
  }
}

void DisplayCutoutProto::MergeFrom(const DisplayCutoutProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.DisplayCutoutProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_insets()->::android::graphics::RectProto::MergeFrom(from.insets());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_bound_left()->::android::graphics::RectProto::MergeFrom(from.bound_left());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_bound_top()->::android::graphics::RectProto::MergeFrom(from.bound_top());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_bound_right()->::android::graphics::RectProto::MergeFrom(from.bound_right());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_bound_bottom()->::android::graphics::RectProto::MergeFrom(from.bound_bottom());
    }
  }
}

void DisplayCutoutProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.DisplayCutoutProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayCutoutProto::CopyFrom(const DisplayCutoutProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.DisplayCutoutProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayCutoutProto::IsInitialized() const {
  return true;
}

void DisplayCutoutProto::InternalSwap(DisplayCutoutProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(insets_, other->insets_);
  swap(bound_left_, other->bound_left_);
  swap(bound_top_, other->bound_top_);
  swap(bound_right_, other->bound_right_);
  swap(bound_bottom_, other->bound_bottom_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisplayCutoutProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::view::DisplayCutoutProto* Arena::CreateMaybeMessage< ::android::view::DisplayCutoutProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::DisplayCutoutProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
