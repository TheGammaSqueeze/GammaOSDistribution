// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/util/quotatracker.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto;
namespace android {
namespace util {
namespace quota {
class CategoryProto;
class CategoryProtoDefaultTypeInternal;
extern CategoryProtoDefaultTypeInternal _CategoryProto_default_instance_;
class CountQuotaTrackerProto;
class CountQuotaTrackerProtoDefaultTypeInternal;
extern CountQuotaTrackerProtoDefaultTypeInternal _CountQuotaTrackerProto_default_instance_;
class CountQuotaTrackerProto_CountLimit;
class CountQuotaTrackerProto_CountLimitDefaultTypeInternal;
extern CountQuotaTrackerProto_CountLimitDefaultTypeInternal _CountQuotaTrackerProto_CountLimit_default_instance_;
class CountQuotaTrackerProto_Event;
class CountQuotaTrackerProto_EventDefaultTypeInternal;
extern CountQuotaTrackerProto_EventDefaultTypeInternal _CountQuotaTrackerProto_Event_default_instance_;
class CountQuotaTrackerProto_ExecutionStats;
class CountQuotaTrackerProto_ExecutionStatsDefaultTypeInternal;
extern CountQuotaTrackerProto_ExecutionStatsDefaultTypeInternal _CountQuotaTrackerProto_ExecutionStats_default_instance_;
class CountQuotaTrackerProto_UptcStats;
class CountQuotaTrackerProto_UptcStatsDefaultTypeInternal;
extern CountQuotaTrackerProto_UptcStatsDefaultTypeInternal _CountQuotaTrackerProto_UptcStats_default_instance_;
class QuotaTrackerProto;
class QuotaTrackerProtoDefaultTypeInternal;
extern QuotaTrackerProtoDefaultTypeInternal _QuotaTrackerProto_default_instance_;
class QuotaTrackerProto_InQuotaAlarmListener;
class QuotaTrackerProto_InQuotaAlarmListenerDefaultTypeInternal;
extern QuotaTrackerProto_InQuotaAlarmListenerDefaultTypeInternal _QuotaTrackerProto_InQuotaAlarmListener_default_instance_;
class QuotaTrackerProto_InQuotaAlarmListener_Alarm;
class QuotaTrackerProto_InQuotaAlarmListener_AlarmDefaultTypeInternal;
extern QuotaTrackerProto_InQuotaAlarmListener_AlarmDefaultTypeInternal _QuotaTrackerProto_InQuotaAlarmListener_Alarm_default_instance_;
class UptcProto;
class UptcProtoDefaultTypeInternal;
extern UptcProtoDefaultTypeInternal _UptcProto_default_instance_;
}  // namespace quota
}  // namespace util
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::util::quota::CategoryProto* Arena::CreateMaybeMessage<::android::util::quota::CategoryProto>(Arena*);
template<> ::android::util::quota::CountQuotaTrackerProto* Arena::CreateMaybeMessage<::android::util::quota::CountQuotaTrackerProto>(Arena*);
template<> ::android::util::quota::CountQuotaTrackerProto_CountLimit* Arena::CreateMaybeMessage<::android::util::quota::CountQuotaTrackerProto_CountLimit>(Arena*);
template<> ::android::util::quota::CountQuotaTrackerProto_Event* Arena::CreateMaybeMessage<::android::util::quota::CountQuotaTrackerProto_Event>(Arena*);
template<> ::android::util::quota::CountQuotaTrackerProto_ExecutionStats* Arena::CreateMaybeMessage<::android::util::quota::CountQuotaTrackerProto_ExecutionStats>(Arena*);
template<> ::android::util::quota::CountQuotaTrackerProto_UptcStats* Arena::CreateMaybeMessage<::android::util::quota::CountQuotaTrackerProto_UptcStats>(Arena*);
template<> ::android::util::quota::QuotaTrackerProto* Arena::CreateMaybeMessage<::android::util::quota::QuotaTrackerProto>(Arena*);
template<> ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener* Arena::CreateMaybeMessage<::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener>(Arena*);
template<> ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener_Alarm* Arena::CreateMaybeMessage<::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener_Alarm>(Arena*);
template<> ::android::util::quota::UptcProto* Arena::CreateMaybeMessage<::android::util::quota::UptcProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace util {
namespace quota {

// ===================================================================

class QuotaTrackerProto_InQuotaAlarmListener_Alarm :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.Alarm) */ {
 public:
  QuotaTrackerProto_InQuotaAlarmListener_Alarm();
  virtual ~QuotaTrackerProto_InQuotaAlarmListener_Alarm();

  QuotaTrackerProto_InQuotaAlarmListener_Alarm(const QuotaTrackerProto_InQuotaAlarmListener_Alarm& from);
  QuotaTrackerProto_InQuotaAlarmListener_Alarm(QuotaTrackerProto_InQuotaAlarmListener_Alarm&& from) noexcept
    : QuotaTrackerProto_InQuotaAlarmListener_Alarm() {
    *this = ::std::move(from);
  }

  inline QuotaTrackerProto_InQuotaAlarmListener_Alarm& operator=(const QuotaTrackerProto_InQuotaAlarmListener_Alarm& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuotaTrackerProto_InQuotaAlarmListener_Alarm& operator=(QuotaTrackerProto_InQuotaAlarmListener_Alarm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QuotaTrackerProto_InQuotaAlarmListener_Alarm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuotaTrackerProto_InQuotaAlarmListener_Alarm* internal_default_instance() {
    return reinterpret_cast<const QuotaTrackerProto_InQuotaAlarmListener_Alarm*>(
               &_QuotaTrackerProto_InQuotaAlarmListener_Alarm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(QuotaTrackerProto_InQuotaAlarmListener_Alarm& a, QuotaTrackerProto_InQuotaAlarmListener_Alarm& b) {
    a.Swap(&b);
  }
  inline void Swap(QuotaTrackerProto_InQuotaAlarmListener_Alarm* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QuotaTrackerProto_InQuotaAlarmListener_Alarm* New() const final {
    return CreateMaybeMessage<QuotaTrackerProto_InQuotaAlarmListener_Alarm>(nullptr);
  }

  QuotaTrackerProto_InQuotaAlarmListener_Alarm* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QuotaTrackerProto_InQuotaAlarmListener_Alarm>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QuotaTrackerProto_InQuotaAlarmListener_Alarm& from);
  void MergeFrom(const QuotaTrackerProto_InQuotaAlarmListener_Alarm& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuotaTrackerProto_InQuotaAlarmListener_Alarm* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.Alarm";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUptcFieldNumber = 1,
    kInQuotaTimeElapsedFieldNumber = 2,
  };
  // optional .android.util.quota.UptcProto uptc = 1;
  bool has_uptc() const;
  void clear_uptc();
  const ::android::util::quota::UptcProto& uptc() const;
  ::android::util::quota::UptcProto* release_uptc();
  ::android::util::quota::UptcProto* mutable_uptc();
  void set_allocated_uptc(::android::util::quota::UptcProto* uptc);

  // optional int64 in_quota_time_elapsed = 2;
  bool has_in_quota_time_elapsed() const;
  void clear_in_quota_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 in_quota_time_elapsed() const;
  void set_in_quota_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.Alarm)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::util::quota::UptcProto* uptc_;
  ::PROTOBUF_NAMESPACE_ID::int64 in_quota_time_elapsed_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto;
};
// -------------------------------------------------------------------

class QuotaTrackerProto_InQuotaAlarmListener :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener) */ {
 public:
  QuotaTrackerProto_InQuotaAlarmListener();
  virtual ~QuotaTrackerProto_InQuotaAlarmListener();

  QuotaTrackerProto_InQuotaAlarmListener(const QuotaTrackerProto_InQuotaAlarmListener& from);
  QuotaTrackerProto_InQuotaAlarmListener(QuotaTrackerProto_InQuotaAlarmListener&& from) noexcept
    : QuotaTrackerProto_InQuotaAlarmListener() {
    *this = ::std::move(from);
  }

  inline QuotaTrackerProto_InQuotaAlarmListener& operator=(const QuotaTrackerProto_InQuotaAlarmListener& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuotaTrackerProto_InQuotaAlarmListener& operator=(QuotaTrackerProto_InQuotaAlarmListener&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QuotaTrackerProto_InQuotaAlarmListener& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuotaTrackerProto_InQuotaAlarmListener* internal_default_instance() {
    return reinterpret_cast<const QuotaTrackerProto_InQuotaAlarmListener*>(
               &_QuotaTrackerProto_InQuotaAlarmListener_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(QuotaTrackerProto_InQuotaAlarmListener& a, QuotaTrackerProto_InQuotaAlarmListener& b) {
    a.Swap(&b);
  }
  inline void Swap(QuotaTrackerProto_InQuotaAlarmListener* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QuotaTrackerProto_InQuotaAlarmListener* New() const final {
    return CreateMaybeMessage<QuotaTrackerProto_InQuotaAlarmListener>(nullptr);
  }

  QuotaTrackerProto_InQuotaAlarmListener* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QuotaTrackerProto_InQuotaAlarmListener>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QuotaTrackerProto_InQuotaAlarmListener& from);
  void MergeFrom(const QuotaTrackerProto_InQuotaAlarmListener& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuotaTrackerProto_InQuotaAlarmListener* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.util.quota.QuotaTrackerProto.InQuotaAlarmListener";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef QuotaTrackerProto_InQuotaAlarmListener_Alarm Alarm;

  // accessors -------------------------------------------------------

  enum : int {
    kAlarmsFieldNumber = 2,
    kTriggerTimeElapsedFieldNumber = 1,
  };
  // repeated .android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.Alarm alarms = 2;
  int alarms_size() const;
  void clear_alarms();
  ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener_Alarm* mutable_alarms(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener_Alarm >*
      mutable_alarms();
  const ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener_Alarm& alarms(int index) const;
  ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener_Alarm* add_alarms();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener_Alarm >&
      alarms() const;

  // optional int64 trigger_time_elapsed = 1;
  bool has_trigger_time_elapsed() const;
  void clear_trigger_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_time_elapsed() const;
  void set_trigger_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener_Alarm > alarms_;
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_time_elapsed_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto;
};
// -------------------------------------------------------------------

class QuotaTrackerProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.util.quota.QuotaTrackerProto) */ {
 public:
  QuotaTrackerProto();
  virtual ~QuotaTrackerProto();

  QuotaTrackerProto(const QuotaTrackerProto& from);
  QuotaTrackerProto(QuotaTrackerProto&& from) noexcept
    : QuotaTrackerProto() {
    *this = ::std::move(from);
  }

  inline QuotaTrackerProto& operator=(const QuotaTrackerProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuotaTrackerProto& operator=(QuotaTrackerProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QuotaTrackerProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuotaTrackerProto* internal_default_instance() {
    return reinterpret_cast<const QuotaTrackerProto*>(
               &_QuotaTrackerProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(QuotaTrackerProto& a, QuotaTrackerProto& b) {
    a.Swap(&b);
  }
  inline void Swap(QuotaTrackerProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QuotaTrackerProto* New() const final {
    return CreateMaybeMessage<QuotaTrackerProto>(nullptr);
  }

  QuotaTrackerProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QuotaTrackerProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QuotaTrackerProto& from);
  void MergeFrom(const QuotaTrackerProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuotaTrackerProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.util.quota.QuotaTrackerProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef QuotaTrackerProto_InQuotaAlarmListener InQuotaAlarmListener;

  // accessors -------------------------------------------------------

  enum : int {
    kInQuotaAlarmListenerFieldNumber = 4,
    kElapsedRealtimeFieldNumber = 3,
    kIsEnabledFieldNumber = 1,
    kIsGlobalQuotaFreeFieldNumber = 2,
  };
  // optional .android.util.quota.QuotaTrackerProto.InQuotaAlarmListener in_quota_alarm_listener = 4;
  bool has_in_quota_alarm_listener() const;
  void clear_in_quota_alarm_listener();
  const ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener& in_quota_alarm_listener() const;
  ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener* release_in_quota_alarm_listener();
  ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener* mutable_in_quota_alarm_listener();
  void set_allocated_in_quota_alarm_listener(::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener* in_quota_alarm_listener);

  // optional int64 elapsed_realtime = 3;
  bool has_elapsed_realtime() const;
  void clear_elapsed_realtime();
  ::PROTOBUF_NAMESPACE_ID::int64 elapsed_realtime() const;
  void set_elapsed_realtime(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional bool is_enabled = 1;
  bool has_is_enabled() const;
  void clear_is_enabled();
  bool is_enabled() const;
  void set_is_enabled(bool value);

  // optional bool is_global_quota_free = 2;
  bool has_is_global_quota_free() const;
  void clear_is_global_quota_free();
  bool is_global_quota_free() const;
  void set_is_global_quota_free(bool value);

  // @@protoc_insertion_point(class_scope:android.util.quota.QuotaTrackerProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener* in_quota_alarm_listener_;
  ::PROTOBUF_NAMESPACE_ID::int64 elapsed_realtime_;
  bool is_enabled_;
  bool is_global_quota_free_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto;
};
// -------------------------------------------------------------------

class CategoryProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.util.quota.CategoryProto) */ {
 public:
  CategoryProto();
  virtual ~CategoryProto();

  CategoryProto(const CategoryProto& from);
  CategoryProto(CategoryProto&& from) noexcept
    : CategoryProto() {
    *this = ::std::move(from);
  }

  inline CategoryProto& operator=(const CategoryProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline CategoryProto& operator=(CategoryProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CategoryProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CategoryProto* internal_default_instance() {
    return reinterpret_cast<const CategoryProto*>(
               &_CategoryProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CategoryProto& a, CategoryProto& b) {
    a.Swap(&b);
  }
  inline void Swap(CategoryProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CategoryProto* New() const final {
    return CreateMaybeMessage<CategoryProto>(nullptr);
  }

  CategoryProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CategoryProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CategoryProto& from);
  void MergeFrom(const CategoryProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CategoryProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.util.quota.CategoryProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // @@protoc_insertion_point(class_scope:android.util.quota.CategoryProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto;
};
// -------------------------------------------------------------------

class UptcProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.util.quota.UptcProto) */ {
 public:
  UptcProto();
  virtual ~UptcProto();

  UptcProto(const UptcProto& from);
  UptcProto(UptcProto&& from) noexcept
    : UptcProto() {
    *this = ::std::move(from);
  }

  inline UptcProto& operator=(const UptcProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline UptcProto& operator=(UptcProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UptcProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UptcProto* internal_default_instance() {
    return reinterpret_cast<const UptcProto*>(
               &_UptcProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(UptcProto& a, UptcProto& b) {
    a.Swap(&b);
  }
  inline void Swap(UptcProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UptcProto* New() const final {
    return CreateMaybeMessage<UptcProto>(nullptr);
  }

  UptcProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UptcProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UptcProto& from);
  void MergeFrom(const UptcProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UptcProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.util.quota.UptcProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kTagFieldNumber = 3,
    kUserIdFieldNumber = 1,
  };
  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional string tag = 3;
  bool has_tag() const;
  void clear_tag();
  const std::string& tag() const;
  void set_tag(const std::string& value);
  void set_tag(std::string&& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  std::string* mutable_tag();
  std::string* release_tag();
  void set_allocated_tag(std::string* tag);

  // optional int32 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.util.quota.UptcProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto;
};
// -------------------------------------------------------------------

class CountQuotaTrackerProto_CountLimit :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.util.quota.CountQuotaTrackerProto.CountLimit) */ {
 public:
  CountQuotaTrackerProto_CountLimit();
  virtual ~CountQuotaTrackerProto_CountLimit();

  CountQuotaTrackerProto_CountLimit(const CountQuotaTrackerProto_CountLimit& from);
  CountQuotaTrackerProto_CountLimit(CountQuotaTrackerProto_CountLimit&& from) noexcept
    : CountQuotaTrackerProto_CountLimit() {
    *this = ::std::move(from);
  }

  inline CountQuotaTrackerProto_CountLimit& operator=(const CountQuotaTrackerProto_CountLimit& from) {
    CopyFrom(from);
    return *this;
  }
  inline CountQuotaTrackerProto_CountLimit& operator=(CountQuotaTrackerProto_CountLimit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CountQuotaTrackerProto_CountLimit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CountQuotaTrackerProto_CountLimit* internal_default_instance() {
    return reinterpret_cast<const CountQuotaTrackerProto_CountLimit*>(
               &_CountQuotaTrackerProto_CountLimit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CountQuotaTrackerProto_CountLimit& a, CountQuotaTrackerProto_CountLimit& b) {
    a.Swap(&b);
  }
  inline void Swap(CountQuotaTrackerProto_CountLimit* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CountQuotaTrackerProto_CountLimit* New() const final {
    return CreateMaybeMessage<CountQuotaTrackerProto_CountLimit>(nullptr);
  }

  CountQuotaTrackerProto_CountLimit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CountQuotaTrackerProto_CountLimit>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CountQuotaTrackerProto_CountLimit& from);
  void MergeFrom(const CountQuotaTrackerProto_CountLimit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CountQuotaTrackerProto_CountLimit* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.util.quota.CountQuotaTrackerProto.CountLimit";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCategoryFieldNumber = 1,
    kWindowSizeMsFieldNumber = 3,
    kLimitFieldNumber = 2,
  };
  // optional .android.util.quota.CategoryProto category = 1;
  bool has_category() const;
  void clear_category();
  const ::android::util::quota::CategoryProto& category() const;
  ::android::util::quota::CategoryProto* release_category();
  ::android::util::quota::CategoryProto* mutable_category();
  void set_allocated_category(::android::util::quota::CategoryProto* category);

  // optional int64 window_size_ms = 3;
  bool has_window_size_ms() const;
  void clear_window_size_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 window_size_ms() const;
  void set_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 limit = 2;
  bool has_limit() const;
  void clear_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 limit() const;
  void set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.util.quota.CountQuotaTrackerProto.CountLimit)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::util::quota::CategoryProto* category_;
  ::PROTOBUF_NAMESPACE_ID::int64 window_size_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 limit_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto;
};
// -------------------------------------------------------------------

class CountQuotaTrackerProto_Event :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.util.quota.CountQuotaTrackerProto.Event) */ {
 public:
  CountQuotaTrackerProto_Event();
  virtual ~CountQuotaTrackerProto_Event();

  CountQuotaTrackerProto_Event(const CountQuotaTrackerProto_Event& from);
  CountQuotaTrackerProto_Event(CountQuotaTrackerProto_Event&& from) noexcept
    : CountQuotaTrackerProto_Event() {
    *this = ::std::move(from);
  }

  inline CountQuotaTrackerProto_Event& operator=(const CountQuotaTrackerProto_Event& from) {
    CopyFrom(from);
    return *this;
  }
  inline CountQuotaTrackerProto_Event& operator=(CountQuotaTrackerProto_Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CountQuotaTrackerProto_Event& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CountQuotaTrackerProto_Event* internal_default_instance() {
    return reinterpret_cast<const CountQuotaTrackerProto_Event*>(
               &_CountQuotaTrackerProto_Event_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CountQuotaTrackerProto_Event& a, CountQuotaTrackerProto_Event& b) {
    a.Swap(&b);
  }
  inline void Swap(CountQuotaTrackerProto_Event* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CountQuotaTrackerProto_Event* New() const final {
    return CreateMaybeMessage<CountQuotaTrackerProto_Event>(nullptr);
  }

  CountQuotaTrackerProto_Event* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CountQuotaTrackerProto_Event>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CountQuotaTrackerProto_Event& from);
  void MergeFrom(const CountQuotaTrackerProto_Event& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CountQuotaTrackerProto_Event* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.util.quota.CountQuotaTrackerProto.Event";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimestampElapsedFieldNumber = 1,
  };
  // optional int64 timestamp_elapsed = 1;
  bool has_timestamp_elapsed() const;
  void clear_timestamp_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 timestamp_elapsed() const;
  void set_timestamp_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:android.util.quota.CountQuotaTrackerProto.Event)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 timestamp_elapsed_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto;
};
// -------------------------------------------------------------------

class CountQuotaTrackerProto_ExecutionStats :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.util.quota.CountQuotaTrackerProto.ExecutionStats) */ {
 public:
  CountQuotaTrackerProto_ExecutionStats();
  virtual ~CountQuotaTrackerProto_ExecutionStats();

  CountQuotaTrackerProto_ExecutionStats(const CountQuotaTrackerProto_ExecutionStats& from);
  CountQuotaTrackerProto_ExecutionStats(CountQuotaTrackerProto_ExecutionStats&& from) noexcept
    : CountQuotaTrackerProto_ExecutionStats() {
    *this = ::std::move(from);
  }

  inline CountQuotaTrackerProto_ExecutionStats& operator=(const CountQuotaTrackerProto_ExecutionStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CountQuotaTrackerProto_ExecutionStats& operator=(CountQuotaTrackerProto_ExecutionStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CountQuotaTrackerProto_ExecutionStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CountQuotaTrackerProto_ExecutionStats* internal_default_instance() {
    return reinterpret_cast<const CountQuotaTrackerProto_ExecutionStats*>(
               &_CountQuotaTrackerProto_ExecutionStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CountQuotaTrackerProto_ExecutionStats& a, CountQuotaTrackerProto_ExecutionStats& b) {
    a.Swap(&b);
  }
  inline void Swap(CountQuotaTrackerProto_ExecutionStats* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CountQuotaTrackerProto_ExecutionStats* New() const final {
    return CreateMaybeMessage<CountQuotaTrackerProto_ExecutionStats>(nullptr);
  }

  CountQuotaTrackerProto_ExecutionStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CountQuotaTrackerProto_ExecutionStats>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CountQuotaTrackerProto_ExecutionStats& from);
  void MergeFrom(const CountQuotaTrackerProto_ExecutionStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CountQuotaTrackerProto_ExecutionStats* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.util.quota.CountQuotaTrackerProto.ExecutionStats";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExpirationTimeElapsedFieldNumber = 1,
    kWindowSizeMsFieldNumber = 2,
    kCountLimitFieldNumber = 3,
    kCountInWindowFieldNumber = 4,
    kInQuotaTimeElapsedFieldNumber = 5,
  };
  // optional int64 expiration_time_elapsed = 1;
  bool has_expiration_time_elapsed() const;
  void clear_expiration_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 expiration_time_elapsed() const;
  void set_expiration_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 window_size_ms = 2;
  bool has_window_size_ms() const;
  void clear_window_size_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 window_size_ms() const;
  void set_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 count_limit = 3;
  bool has_count_limit() const;
  void clear_count_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 count_limit() const;
  void set_count_limit(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 count_in_window = 4;
  bool has_count_in_window() const;
  void clear_count_in_window();
  ::PROTOBUF_NAMESPACE_ID::int32 count_in_window() const;
  void set_count_in_window(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 in_quota_time_elapsed = 5;
  bool has_in_quota_time_elapsed() const;
  void clear_in_quota_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 in_quota_time_elapsed() const;
  void set_in_quota_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:android.util.quota.CountQuotaTrackerProto.ExecutionStats)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 expiration_time_elapsed_;
  ::PROTOBUF_NAMESPACE_ID::int64 window_size_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_limit_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_in_window_;
  ::PROTOBUF_NAMESPACE_ID::int64 in_quota_time_elapsed_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto;
};
// -------------------------------------------------------------------

class CountQuotaTrackerProto_UptcStats :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.util.quota.CountQuotaTrackerProto.UptcStats) */ {
 public:
  CountQuotaTrackerProto_UptcStats();
  virtual ~CountQuotaTrackerProto_UptcStats();

  CountQuotaTrackerProto_UptcStats(const CountQuotaTrackerProto_UptcStats& from);
  CountQuotaTrackerProto_UptcStats(CountQuotaTrackerProto_UptcStats&& from) noexcept
    : CountQuotaTrackerProto_UptcStats() {
    *this = ::std::move(from);
  }

  inline CountQuotaTrackerProto_UptcStats& operator=(const CountQuotaTrackerProto_UptcStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CountQuotaTrackerProto_UptcStats& operator=(CountQuotaTrackerProto_UptcStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CountQuotaTrackerProto_UptcStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CountQuotaTrackerProto_UptcStats* internal_default_instance() {
    return reinterpret_cast<const CountQuotaTrackerProto_UptcStats*>(
               &_CountQuotaTrackerProto_UptcStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CountQuotaTrackerProto_UptcStats& a, CountQuotaTrackerProto_UptcStats& b) {
    a.Swap(&b);
  }
  inline void Swap(CountQuotaTrackerProto_UptcStats* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CountQuotaTrackerProto_UptcStats* New() const final {
    return CreateMaybeMessage<CountQuotaTrackerProto_UptcStats>(nullptr);
  }

  CountQuotaTrackerProto_UptcStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CountQuotaTrackerProto_UptcStats>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CountQuotaTrackerProto_UptcStats& from);
  void MergeFrom(const CountQuotaTrackerProto_UptcStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CountQuotaTrackerProto_UptcStats* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.util.quota.CountQuotaTrackerProto.UptcStats";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventsFieldNumber = 3,
    kExecutionStatsFieldNumber = 4,
    kUptcFieldNumber = 1,
    kIsQuotaFreeFieldNumber = 2,
  };
  // repeated .android.util.quota.CountQuotaTrackerProto.Event events = 3;
  int events_size() const;
  void clear_events();
  ::android::util::quota::CountQuotaTrackerProto_Event* mutable_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_Event >*
      mutable_events();
  const ::android::util::quota::CountQuotaTrackerProto_Event& events(int index) const;
  ::android::util::quota::CountQuotaTrackerProto_Event* add_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_Event >&
      events() const;

  // repeated .android.util.quota.CountQuotaTrackerProto.ExecutionStats execution_stats = 4;
  int execution_stats_size() const;
  void clear_execution_stats();
  ::android::util::quota::CountQuotaTrackerProto_ExecutionStats* mutable_execution_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_ExecutionStats >*
      mutable_execution_stats();
  const ::android::util::quota::CountQuotaTrackerProto_ExecutionStats& execution_stats(int index) const;
  ::android::util::quota::CountQuotaTrackerProto_ExecutionStats* add_execution_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_ExecutionStats >&
      execution_stats() const;

  // optional .android.util.quota.UptcProto uptc = 1;
  bool has_uptc() const;
  void clear_uptc();
  const ::android::util::quota::UptcProto& uptc() const;
  ::android::util::quota::UptcProto* release_uptc();
  ::android::util::quota::UptcProto* mutable_uptc();
  void set_allocated_uptc(::android::util::quota::UptcProto* uptc);

  // optional bool is_quota_free = 2;
  bool has_is_quota_free() const;
  void clear_is_quota_free();
  bool is_quota_free() const;
  void set_is_quota_free(bool value);

  // @@protoc_insertion_point(class_scope:android.util.quota.CountQuotaTrackerProto.UptcStats)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_Event > events_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_ExecutionStats > execution_stats_;
  ::android::util::quota::UptcProto* uptc_;
  bool is_quota_free_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto;
};
// -------------------------------------------------------------------

class CountQuotaTrackerProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.util.quota.CountQuotaTrackerProto) */ {
 public:
  CountQuotaTrackerProto();
  virtual ~CountQuotaTrackerProto();

  CountQuotaTrackerProto(const CountQuotaTrackerProto& from);
  CountQuotaTrackerProto(CountQuotaTrackerProto&& from) noexcept
    : CountQuotaTrackerProto() {
    *this = ::std::move(from);
  }

  inline CountQuotaTrackerProto& operator=(const CountQuotaTrackerProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline CountQuotaTrackerProto& operator=(CountQuotaTrackerProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CountQuotaTrackerProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CountQuotaTrackerProto* internal_default_instance() {
    return reinterpret_cast<const CountQuotaTrackerProto*>(
               &_CountQuotaTrackerProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CountQuotaTrackerProto& a, CountQuotaTrackerProto& b) {
    a.Swap(&b);
  }
  inline void Swap(CountQuotaTrackerProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CountQuotaTrackerProto* New() const final {
    return CreateMaybeMessage<CountQuotaTrackerProto>(nullptr);
  }

  CountQuotaTrackerProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CountQuotaTrackerProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CountQuotaTrackerProto& from);
  void MergeFrom(const CountQuotaTrackerProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CountQuotaTrackerProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.util.quota.CountQuotaTrackerProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef CountQuotaTrackerProto_CountLimit CountLimit;
  typedef CountQuotaTrackerProto_Event Event;
  typedef CountQuotaTrackerProto_ExecutionStats ExecutionStats;
  typedef CountQuotaTrackerProto_UptcStats UptcStats;

  // accessors -------------------------------------------------------

  enum : int {
    kCountLimitFieldNumber = 2,
    kUptcStatsFieldNumber = 3,
    kBaseQuotaDataFieldNumber = 1,
  };
  // repeated .android.util.quota.CountQuotaTrackerProto.CountLimit count_limit = 2;
  int count_limit_size() const;
  void clear_count_limit();
  ::android::util::quota::CountQuotaTrackerProto_CountLimit* mutable_count_limit(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_CountLimit >*
      mutable_count_limit();
  const ::android::util::quota::CountQuotaTrackerProto_CountLimit& count_limit(int index) const;
  ::android::util::quota::CountQuotaTrackerProto_CountLimit* add_count_limit();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_CountLimit >&
      count_limit() const;

  // repeated .android.util.quota.CountQuotaTrackerProto.UptcStats uptc_stats = 3;
  int uptc_stats_size() const;
  void clear_uptc_stats();
  ::android::util::quota::CountQuotaTrackerProto_UptcStats* mutable_uptc_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_UptcStats >*
      mutable_uptc_stats();
  const ::android::util::quota::CountQuotaTrackerProto_UptcStats& uptc_stats(int index) const;
  ::android::util::quota::CountQuotaTrackerProto_UptcStats* add_uptc_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_UptcStats >&
      uptc_stats() const;

  // optional .android.util.quota.QuotaTrackerProto base_quota_data = 1;
  bool has_base_quota_data() const;
  void clear_base_quota_data();
  const ::android::util::quota::QuotaTrackerProto& base_quota_data() const;
  ::android::util::quota::QuotaTrackerProto* release_base_quota_data();
  ::android::util::quota::QuotaTrackerProto* mutable_base_quota_data();
  void set_allocated_base_quota_data(::android::util::quota::QuotaTrackerProto* base_quota_data);

  // @@protoc_insertion_point(class_scope:android.util.quota.CountQuotaTrackerProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_CountLimit > count_limit_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_UptcStats > uptc_stats_;
  ::android::util::quota::QuotaTrackerProto* base_quota_data_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QuotaTrackerProto_InQuotaAlarmListener_Alarm

// optional .android.util.quota.UptcProto uptc = 1;
inline bool QuotaTrackerProto_InQuotaAlarmListener_Alarm::has_uptc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuotaTrackerProto_InQuotaAlarmListener_Alarm::clear_uptc() {
  if (uptc_ != nullptr) uptc_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::util::quota::UptcProto& QuotaTrackerProto_InQuotaAlarmListener_Alarm::uptc() const {
  const ::android::util::quota::UptcProto* p = uptc_;
  // @@protoc_insertion_point(field_get:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.Alarm.uptc)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::quota::UptcProto*>(
      &::android::util::quota::_UptcProto_default_instance_);
}
inline ::android::util::quota::UptcProto* QuotaTrackerProto_InQuotaAlarmListener_Alarm::release_uptc() {
  // @@protoc_insertion_point(field_release:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.Alarm.uptc)
  _has_bits_[0] &= ~0x00000001u;
  ::android::util::quota::UptcProto* temp = uptc_;
  uptc_ = nullptr;
  return temp;
}
inline ::android::util::quota::UptcProto* QuotaTrackerProto_InQuotaAlarmListener_Alarm::mutable_uptc() {
  _has_bits_[0] |= 0x00000001u;
  if (uptc_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::quota::UptcProto>(GetArenaNoVirtual());
    uptc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.Alarm.uptc)
  return uptc_;
}
inline void QuotaTrackerProto_InQuotaAlarmListener_Alarm::set_allocated_uptc(::android::util::quota::UptcProto* uptc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete uptc_;
  }
  if (uptc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      uptc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uptc, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  uptc_ = uptc;
  // @@protoc_insertion_point(field_set_allocated:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.Alarm.uptc)
}

// optional int64 in_quota_time_elapsed = 2;
inline bool QuotaTrackerProto_InQuotaAlarmListener_Alarm::has_in_quota_time_elapsed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuotaTrackerProto_InQuotaAlarmListener_Alarm::clear_in_quota_time_elapsed() {
  in_quota_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 QuotaTrackerProto_InQuotaAlarmListener_Alarm::in_quota_time_elapsed() const {
  // @@protoc_insertion_point(field_get:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.Alarm.in_quota_time_elapsed)
  return in_quota_time_elapsed_;
}
inline void QuotaTrackerProto_InQuotaAlarmListener_Alarm::set_in_quota_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  in_quota_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.Alarm.in_quota_time_elapsed)
}

// -------------------------------------------------------------------

// QuotaTrackerProto_InQuotaAlarmListener

// optional int64 trigger_time_elapsed = 1;
inline bool QuotaTrackerProto_InQuotaAlarmListener::has_trigger_time_elapsed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuotaTrackerProto_InQuotaAlarmListener::clear_trigger_time_elapsed() {
  trigger_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 QuotaTrackerProto_InQuotaAlarmListener::trigger_time_elapsed() const {
  // @@protoc_insertion_point(field_get:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.trigger_time_elapsed)
  return trigger_time_elapsed_;
}
inline void QuotaTrackerProto_InQuotaAlarmListener::set_trigger_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  trigger_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.trigger_time_elapsed)
}

// repeated .android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.Alarm alarms = 2;
inline int QuotaTrackerProto_InQuotaAlarmListener::alarms_size() const {
  return alarms_.size();
}
inline void QuotaTrackerProto_InQuotaAlarmListener::clear_alarms() {
  alarms_.Clear();
}
inline ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener_Alarm* QuotaTrackerProto_InQuotaAlarmListener::mutable_alarms(int index) {
  // @@protoc_insertion_point(field_mutable:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.alarms)
  return alarms_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener_Alarm >*
QuotaTrackerProto_InQuotaAlarmListener::mutable_alarms() {
  // @@protoc_insertion_point(field_mutable_list:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.alarms)
  return &alarms_;
}
inline const ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener_Alarm& QuotaTrackerProto_InQuotaAlarmListener::alarms(int index) const {
  // @@protoc_insertion_point(field_get:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.alarms)
  return alarms_.Get(index);
}
inline ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener_Alarm* QuotaTrackerProto_InQuotaAlarmListener::add_alarms() {
  // @@protoc_insertion_point(field_add:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.alarms)
  return alarms_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener_Alarm >&
QuotaTrackerProto_InQuotaAlarmListener::alarms() const {
  // @@protoc_insertion_point(field_list:android.util.quota.QuotaTrackerProto.InQuotaAlarmListener.alarms)
  return alarms_;
}

// -------------------------------------------------------------------

// QuotaTrackerProto

// optional bool is_enabled = 1;
inline bool QuotaTrackerProto::has_is_enabled() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuotaTrackerProto::clear_is_enabled() {
  is_enabled_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool QuotaTrackerProto::is_enabled() const {
  // @@protoc_insertion_point(field_get:android.util.quota.QuotaTrackerProto.is_enabled)
  return is_enabled_;
}
inline void QuotaTrackerProto::set_is_enabled(bool value) {
  _has_bits_[0] |= 0x00000004u;
  is_enabled_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.QuotaTrackerProto.is_enabled)
}

// optional bool is_global_quota_free = 2;
inline bool QuotaTrackerProto::has_is_global_quota_free() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QuotaTrackerProto::clear_is_global_quota_free() {
  is_global_quota_free_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool QuotaTrackerProto::is_global_quota_free() const {
  // @@protoc_insertion_point(field_get:android.util.quota.QuotaTrackerProto.is_global_quota_free)
  return is_global_quota_free_;
}
inline void QuotaTrackerProto::set_is_global_quota_free(bool value) {
  _has_bits_[0] |= 0x00000008u;
  is_global_quota_free_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.QuotaTrackerProto.is_global_quota_free)
}

// optional int64 elapsed_realtime = 3;
inline bool QuotaTrackerProto::has_elapsed_realtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuotaTrackerProto::clear_elapsed_realtime() {
  elapsed_realtime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 QuotaTrackerProto::elapsed_realtime() const {
  // @@protoc_insertion_point(field_get:android.util.quota.QuotaTrackerProto.elapsed_realtime)
  return elapsed_realtime_;
}
inline void QuotaTrackerProto::set_elapsed_realtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  elapsed_realtime_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.QuotaTrackerProto.elapsed_realtime)
}

// optional .android.util.quota.QuotaTrackerProto.InQuotaAlarmListener in_quota_alarm_listener = 4;
inline bool QuotaTrackerProto::has_in_quota_alarm_listener() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuotaTrackerProto::clear_in_quota_alarm_listener() {
  if (in_quota_alarm_listener_ != nullptr) in_quota_alarm_listener_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener& QuotaTrackerProto::in_quota_alarm_listener() const {
  const ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener* p = in_quota_alarm_listener_;
  // @@protoc_insertion_point(field_get:android.util.quota.QuotaTrackerProto.in_quota_alarm_listener)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener*>(
      &::android::util::quota::_QuotaTrackerProto_InQuotaAlarmListener_default_instance_);
}
inline ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener* QuotaTrackerProto::release_in_quota_alarm_listener() {
  // @@protoc_insertion_point(field_release:android.util.quota.QuotaTrackerProto.in_quota_alarm_listener)
  _has_bits_[0] &= ~0x00000001u;
  ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener* temp = in_quota_alarm_listener_;
  in_quota_alarm_listener_ = nullptr;
  return temp;
}
inline ::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener* QuotaTrackerProto::mutable_in_quota_alarm_listener() {
  _has_bits_[0] |= 0x00000001u;
  if (in_quota_alarm_listener_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener>(GetArenaNoVirtual());
    in_quota_alarm_listener_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.util.quota.QuotaTrackerProto.in_quota_alarm_listener)
  return in_quota_alarm_listener_;
}
inline void QuotaTrackerProto::set_allocated_in_quota_alarm_listener(::android::util::quota::QuotaTrackerProto_InQuotaAlarmListener* in_quota_alarm_listener) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete in_quota_alarm_listener_;
  }
  if (in_quota_alarm_listener) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      in_quota_alarm_listener = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, in_quota_alarm_listener, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  in_quota_alarm_listener_ = in_quota_alarm_listener;
  // @@protoc_insertion_point(field_set_allocated:android.util.quota.QuotaTrackerProto.in_quota_alarm_listener)
}

// -------------------------------------------------------------------

// CategoryProto

// optional string name = 1;
inline bool CategoryProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CategoryProto::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CategoryProto::name() const {
  // @@protoc_insertion_point(field_get:android.util.quota.CategoryProto.name)
  return name_.GetNoArena();
}
inline void CategoryProto::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.util.quota.CategoryProto.name)
}
inline void CategoryProto::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.util.quota.CategoryProto.name)
}
inline void CategoryProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.util.quota.CategoryProto.name)
}
inline void CategoryProto::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.util.quota.CategoryProto.name)
}
inline std::string* CategoryProto::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.util.quota.CategoryProto.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CategoryProto::release_name() {
  // @@protoc_insertion_point(field_release:android.util.quota.CategoryProto.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CategoryProto::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:android.util.quota.CategoryProto.name)
}

// -------------------------------------------------------------------

// UptcProto

// optional int32 user_id = 1;
inline bool UptcProto::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UptcProto::clear_user_id() {
  user_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UptcProto::user_id() const {
  // @@protoc_insertion_point(field_get:android.util.quota.UptcProto.user_id)
  return user_id_;
}
inline void UptcProto::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  user_id_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.UptcProto.user_id)
}

// optional string name = 2;
inline bool UptcProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UptcProto::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UptcProto::name() const {
  // @@protoc_insertion_point(field_get:android.util.quota.UptcProto.name)
  return name_.GetNoArena();
}
inline void UptcProto::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.util.quota.UptcProto.name)
}
inline void UptcProto::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.util.quota.UptcProto.name)
}
inline void UptcProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.util.quota.UptcProto.name)
}
inline void UptcProto::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.util.quota.UptcProto.name)
}
inline std::string* UptcProto::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.util.quota.UptcProto.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UptcProto::release_name() {
  // @@protoc_insertion_point(field_release:android.util.quota.UptcProto.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UptcProto::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:android.util.quota.UptcProto.name)
}

// optional string tag = 3;
inline bool UptcProto::has_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UptcProto::clear_tag() {
  tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& UptcProto::tag() const {
  // @@protoc_insertion_point(field_get:android.util.quota.UptcProto.tag)
  return tag_.GetNoArena();
}
inline void UptcProto::set_tag(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.util.quota.UptcProto.tag)
}
inline void UptcProto::set_tag(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  tag_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.util.quota.UptcProto.tag)
}
inline void UptcProto::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.util.quota.UptcProto.tag)
}
inline void UptcProto::set_tag(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.util.quota.UptcProto.tag)
}
inline std::string* UptcProto::mutable_tag() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.util.quota.UptcProto.tag)
  return tag_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UptcProto::release_tag() {
  // @@protoc_insertion_point(field_release:android.util.quota.UptcProto.tag)
  if (!has_tag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return tag_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UptcProto::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  tag_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:android.util.quota.UptcProto.tag)
}

// -------------------------------------------------------------------

// CountQuotaTrackerProto_CountLimit

// optional .android.util.quota.CategoryProto category = 1;
inline bool CountQuotaTrackerProto_CountLimit::has_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CountQuotaTrackerProto_CountLimit::clear_category() {
  if (category_ != nullptr) category_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::util::quota::CategoryProto& CountQuotaTrackerProto_CountLimit::category() const {
  const ::android::util::quota::CategoryProto* p = category_;
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.CountLimit.category)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::quota::CategoryProto*>(
      &::android::util::quota::_CategoryProto_default_instance_);
}
inline ::android::util::quota::CategoryProto* CountQuotaTrackerProto_CountLimit::release_category() {
  // @@protoc_insertion_point(field_release:android.util.quota.CountQuotaTrackerProto.CountLimit.category)
  _has_bits_[0] &= ~0x00000001u;
  ::android::util::quota::CategoryProto* temp = category_;
  category_ = nullptr;
  return temp;
}
inline ::android::util::quota::CategoryProto* CountQuotaTrackerProto_CountLimit::mutable_category() {
  _has_bits_[0] |= 0x00000001u;
  if (category_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::quota::CategoryProto>(GetArenaNoVirtual());
    category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.util.quota.CountQuotaTrackerProto.CountLimit.category)
  return category_;
}
inline void CountQuotaTrackerProto_CountLimit::set_allocated_category(::android::util::quota::CategoryProto* category) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete category_;
  }
  if (category) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      category = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, category, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  category_ = category;
  // @@protoc_insertion_point(field_set_allocated:android.util.quota.CountQuotaTrackerProto.CountLimit.category)
}

// optional int32 limit = 2;
inline bool CountQuotaTrackerProto_CountLimit::has_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CountQuotaTrackerProto_CountLimit::clear_limit() {
  limit_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CountQuotaTrackerProto_CountLimit::limit() const {
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.CountLimit.limit)
  return limit_;
}
inline void CountQuotaTrackerProto_CountLimit::set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  limit_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.CountQuotaTrackerProto.CountLimit.limit)
}

// optional int64 window_size_ms = 3;
inline bool CountQuotaTrackerProto_CountLimit::has_window_size_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CountQuotaTrackerProto_CountLimit::clear_window_size_ms() {
  window_size_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CountQuotaTrackerProto_CountLimit::window_size_ms() const {
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.CountLimit.window_size_ms)
  return window_size_ms_;
}
inline void CountQuotaTrackerProto_CountLimit::set_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  window_size_ms_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.CountQuotaTrackerProto.CountLimit.window_size_ms)
}

// -------------------------------------------------------------------

// CountQuotaTrackerProto_Event

// optional int64 timestamp_elapsed = 1;
inline bool CountQuotaTrackerProto_Event::has_timestamp_elapsed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CountQuotaTrackerProto_Event::clear_timestamp_elapsed() {
  timestamp_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CountQuotaTrackerProto_Event::timestamp_elapsed() const {
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.Event.timestamp_elapsed)
  return timestamp_elapsed_;
}
inline void CountQuotaTrackerProto_Event::set_timestamp_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  timestamp_elapsed_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.CountQuotaTrackerProto.Event.timestamp_elapsed)
}

// -------------------------------------------------------------------

// CountQuotaTrackerProto_ExecutionStats

// optional int64 expiration_time_elapsed = 1;
inline bool CountQuotaTrackerProto_ExecutionStats::has_expiration_time_elapsed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CountQuotaTrackerProto_ExecutionStats::clear_expiration_time_elapsed() {
  expiration_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CountQuotaTrackerProto_ExecutionStats::expiration_time_elapsed() const {
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.ExecutionStats.expiration_time_elapsed)
  return expiration_time_elapsed_;
}
inline void CountQuotaTrackerProto_ExecutionStats::set_expiration_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  expiration_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.CountQuotaTrackerProto.ExecutionStats.expiration_time_elapsed)
}

// optional int64 window_size_ms = 2;
inline bool CountQuotaTrackerProto_ExecutionStats::has_window_size_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CountQuotaTrackerProto_ExecutionStats::clear_window_size_ms() {
  window_size_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CountQuotaTrackerProto_ExecutionStats::window_size_ms() const {
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.ExecutionStats.window_size_ms)
  return window_size_ms_;
}
inline void CountQuotaTrackerProto_ExecutionStats::set_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  window_size_ms_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.CountQuotaTrackerProto.ExecutionStats.window_size_ms)
}

// optional int32 count_limit = 3;
inline bool CountQuotaTrackerProto_ExecutionStats::has_count_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CountQuotaTrackerProto_ExecutionStats::clear_count_limit() {
  count_limit_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CountQuotaTrackerProto_ExecutionStats::count_limit() const {
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.ExecutionStats.count_limit)
  return count_limit_;
}
inline void CountQuotaTrackerProto_ExecutionStats::set_count_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  count_limit_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.CountQuotaTrackerProto.ExecutionStats.count_limit)
}

// optional int32 count_in_window = 4;
inline bool CountQuotaTrackerProto_ExecutionStats::has_count_in_window() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CountQuotaTrackerProto_ExecutionStats::clear_count_in_window() {
  count_in_window_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CountQuotaTrackerProto_ExecutionStats::count_in_window() const {
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.ExecutionStats.count_in_window)
  return count_in_window_;
}
inline void CountQuotaTrackerProto_ExecutionStats::set_count_in_window(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  count_in_window_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.CountQuotaTrackerProto.ExecutionStats.count_in_window)
}

// optional int64 in_quota_time_elapsed = 5;
inline bool CountQuotaTrackerProto_ExecutionStats::has_in_quota_time_elapsed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CountQuotaTrackerProto_ExecutionStats::clear_in_quota_time_elapsed() {
  in_quota_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CountQuotaTrackerProto_ExecutionStats::in_quota_time_elapsed() const {
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.ExecutionStats.in_quota_time_elapsed)
  return in_quota_time_elapsed_;
}
inline void CountQuotaTrackerProto_ExecutionStats::set_in_quota_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  in_quota_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.CountQuotaTrackerProto.ExecutionStats.in_quota_time_elapsed)
}

// -------------------------------------------------------------------

// CountQuotaTrackerProto_UptcStats

// optional .android.util.quota.UptcProto uptc = 1;
inline bool CountQuotaTrackerProto_UptcStats::has_uptc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CountQuotaTrackerProto_UptcStats::clear_uptc() {
  if (uptc_ != nullptr) uptc_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::util::quota::UptcProto& CountQuotaTrackerProto_UptcStats::uptc() const {
  const ::android::util::quota::UptcProto* p = uptc_;
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.UptcStats.uptc)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::quota::UptcProto*>(
      &::android::util::quota::_UptcProto_default_instance_);
}
inline ::android::util::quota::UptcProto* CountQuotaTrackerProto_UptcStats::release_uptc() {
  // @@protoc_insertion_point(field_release:android.util.quota.CountQuotaTrackerProto.UptcStats.uptc)
  _has_bits_[0] &= ~0x00000001u;
  ::android::util::quota::UptcProto* temp = uptc_;
  uptc_ = nullptr;
  return temp;
}
inline ::android::util::quota::UptcProto* CountQuotaTrackerProto_UptcStats::mutable_uptc() {
  _has_bits_[0] |= 0x00000001u;
  if (uptc_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::quota::UptcProto>(GetArenaNoVirtual());
    uptc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.util.quota.CountQuotaTrackerProto.UptcStats.uptc)
  return uptc_;
}
inline void CountQuotaTrackerProto_UptcStats::set_allocated_uptc(::android::util::quota::UptcProto* uptc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete uptc_;
  }
  if (uptc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      uptc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uptc, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  uptc_ = uptc;
  // @@protoc_insertion_point(field_set_allocated:android.util.quota.CountQuotaTrackerProto.UptcStats.uptc)
}

// optional bool is_quota_free = 2;
inline bool CountQuotaTrackerProto_UptcStats::has_is_quota_free() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CountQuotaTrackerProto_UptcStats::clear_is_quota_free() {
  is_quota_free_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CountQuotaTrackerProto_UptcStats::is_quota_free() const {
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.UptcStats.is_quota_free)
  return is_quota_free_;
}
inline void CountQuotaTrackerProto_UptcStats::set_is_quota_free(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_quota_free_ = value;
  // @@protoc_insertion_point(field_set:android.util.quota.CountQuotaTrackerProto.UptcStats.is_quota_free)
}

// repeated .android.util.quota.CountQuotaTrackerProto.Event events = 3;
inline int CountQuotaTrackerProto_UptcStats::events_size() const {
  return events_.size();
}
inline void CountQuotaTrackerProto_UptcStats::clear_events() {
  events_.Clear();
}
inline ::android::util::quota::CountQuotaTrackerProto_Event* CountQuotaTrackerProto_UptcStats::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:android.util.quota.CountQuotaTrackerProto.UptcStats.events)
  return events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_Event >*
CountQuotaTrackerProto_UptcStats::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:android.util.quota.CountQuotaTrackerProto.UptcStats.events)
  return &events_;
}
inline const ::android::util::quota::CountQuotaTrackerProto_Event& CountQuotaTrackerProto_UptcStats::events(int index) const {
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.UptcStats.events)
  return events_.Get(index);
}
inline ::android::util::quota::CountQuotaTrackerProto_Event* CountQuotaTrackerProto_UptcStats::add_events() {
  // @@protoc_insertion_point(field_add:android.util.quota.CountQuotaTrackerProto.UptcStats.events)
  return events_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_Event >&
CountQuotaTrackerProto_UptcStats::events() const {
  // @@protoc_insertion_point(field_list:android.util.quota.CountQuotaTrackerProto.UptcStats.events)
  return events_;
}

// repeated .android.util.quota.CountQuotaTrackerProto.ExecutionStats execution_stats = 4;
inline int CountQuotaTrackerProto_UptcStats::execution_stats_size() const {
  return execution_stats_.size();
}
inline void CountQuotaTrackerProto_UptcStats::clear_execution_stats() {
  execution_stats_.Clear();
}
inline ::android::util::quota::CountQuotaTrackerProto_ExecutionStats* CountQuotaTrackerProto_UptcStats::mutable_execution_stats(int index) {
  // @@protoc_insertion_point(field_mutable:android.util.quota.CountQuotaTrackerProto.UptcStats.execution_stats)
  return execution_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_ExecutionStats >*
CountQuotaTrackerProto_UptcStats::mutable_execution_stats() {
  // @@protoc_insertion_point(field_mutable_list:android.util.quota.CountQuotaTrackerProto.UptcStats.execution_stats)
  return &execution_stats_;
}
inline const ::android::util::quota::CountQuotaTrackerProto_ExecutionStats& CountQuotaTrackerProto_UptcStats::execution_stats(int index) const {
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.UptcStats.execution_stats)
  return execution_stats_.Get(index);
}
inline ::android::util::quota::CountQuotaTrackerProto_ExecutionStats* CountQuotaTrackerProto_UptcStats::add_execution_stats() {
  // @@protoc_insertion_point(field_add:android.util.quota.CountQuotaTrackerProto.UptcStats.execution_stats)
  return execution_stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_ExecutionStats >&
CountQuotaTrackerProto_UptcStats::execution_stats() const {
  // @@protoc_insertion_point(field_list:android.util.quota.CountQuotaTrackerProto.UptcStats.execution_stats)
  return execution_stats_;
}

// -------------------------------------------------------------------

// CountQuotaTrackerProto

// optional .android.util.quota.QuotaTrackerProto base_quota_data = 1;
inline bool CountQuotaTrackerProto::has_base_quota_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CountQuotaTrackerProto::clear_base_quota_data() {
  if (base_quota_data_ != nullptr) base_quota_data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::android::util::quota::QuotaTrackerProto& CountQuotaTrackerProto::base_quota_data() const {
  const ::android::util::quota::QuotaTrackerProto* p = base_quota_data_;
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.base_quota_data)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::quota::QuotaTrackerProto*>(
      &::android::util::quota::_QuotaTrackerProto_default_instance_);
}
inline ::android::util::quota::QuotaTrackerProto* CountQuotaTrackerProto::release_base_quota_data() {
  // @@protoc_insertion_point(field_release:android.util.quota.CountQuotaTrackerProto.base_quota_data)
  _has_bits_[0] &= ~0x00000001u;
  ::android::util::quota::QuotaTrackerProto* temp = base_quota_data_;
  base_quota_data_ = nullptr;
  return temp;
}
inline ::android::util::quota::QuotaTrackerProto* CountQuotaTrackerProto::mutable_base_quota_data() {
  _has_bits_[0] |= 0x00000001u;
  if (base_quota_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::quota::QuotaTrackerProto>(GetArenaNoVirtual());
    base_quota_data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.util.quota.CountQuotaTrackerProto.base_quota_data)
  return base_quota_data_;
}
inline void CountQuotaTrackerProto::set_allocated_base_quota_data(::android::util::quota::QuotaTrackerProto* base_quota_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete base_quota_data_;
  }
  if (base_quota_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      base_quota_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, base_quota_data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  base_quota_data_ = base_quota_data;
  // @@protoc_insertion_point(field_set_allocated:android.util.quota.CountQuotaTrackerProto.base_quota_data)
}

// repeated .android.util.quota.CountQuotaTrackerProto.CountLimit count_limit = 2;
inline int CountQuotaTrackerProto::count_limit_size() const {
  return count_limit_.size();
}
inline void CountQuotaTrackerProto::clear_count_limit() {
  count_limit_.Clear();
}
inline ::android::util::quota::CountQuotaTrackerProto_CountLimit* CountQuotaTrackerProto::mutable_count_limit(int index) {
  // @@protoc_insertion_point(field_mutable:android.util.quota.CountQuotaTrackerProto.count_limit)
  return count_limit_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_CountLimit >*
CountQuotaTrackerProto::mutable_count_limit() {
  // @@protoc_insertion_point(field_mutable_list:android.util.quota.CountQuotaTrackerProto.count_limit)
  return &count_limit_;
}
inline const ::android::util::quota::CountQuotaTrackerProto_CountLimit& CountQuotaTrackerProto::count_limit(int index) const {
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.count_limit)
  return count_limit_.Get(index);
}
inline ::android::util::quota::CountQuotaTrackerProto_CountLimit* CountQuotaTrackerProto::add_count_limit() {
  // @@protoc_insertion_point(field_add:android.util.quota.CountQuotaTrackerProto.count_limit)
  return count_limit_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_CountLimit >&
CountQuotaTrackerProto::count_limit() const {
  // @@protoc_insertion_point(field_list:android.util.quota.CountQuotaTrackerProto.count_limit)
  return count_limit_;
}

// repeated .android.util.quota.CountQuotaTrackerProto.UptcStats uptc_stats = 3;
inline int CountQuotaTrackerProto::uptc_stats_size() const {
  return uptc_stats_.size();
}
inline void CountQuotaTrackerProto::clear_uptc_stats() {
  uptc_stats_.Clear();
}
inline ::android::util::quota::CountQuotaTrackerProto_UptcStats* CountQuotaTrackerProto::mutable_uptc_stats(int index) {
  // @@protoc_insertion_point(field_mutable:android.util.quota.CountQuotaTrackerProto.uptc_stats)
  return uptc_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_UptcStats >*
CountQuotaTrackerProto::mutable_uptc_stats() {
  // @@protoc_insertion_point(field_mutable_list:android.util.quota.CountQuotaTrackerProto.uptc_stats)
  return &uptc_stats_;
}
inline const ::android::util::quota::CountQuotaTrackerProto_UptcStats& CountQuotaTrackerProto::uptc_stats(int index) const {
  // @@protoc_insertion_point(field_get:android.util.quota.CountQuotaTrackerProto.uptc_stats)
  return uptc_stats_.Get(index);
}
inline ::android::util::quota::CountQuotaTrackerProto_UptcStats* CountQuotaTrackerProto::add_uptc_stats() {
  // @@protoc_insertion_point(field_add:android.util.quota.CountQuotaTrackerProto.uptc_stats)
  return uptc_stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::util::quota::CountQuotaTrackerProto_UptcStats >&
CountQuotaTrackerProto::uptc_stats() const {
  // @@protoc_insertion_point(field_list:android.util.quota.CountQuotaTrackerProto.uptc_stats)
  return uptc_stats_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace quota
}  // namespace util
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2futil_2fquotatracker_2eproto
