// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/app/notification_channel_group.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_5fgroup_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_5fgroup_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/app/notification_channel.pb.h"
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_5fgroup_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_5fgroup_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_5fgroup_2eproto;
namespace android {
namespace app {
class NotificationChannelGroupProto;
class NotificationChannelGroupProtoDefaultTypeInternal;
extern NotificationChannelGroupProtoDefaultTypeInternal _NotificationChannelGroupProto_default_instance_;
}  // namespace app
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::app::NotificationChannelGroupProto* Arena::CreateMaybeMessage<::android::app::NotificationChannelGroupProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace app {

// ===================================================================

class NotificationChannelGroupProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.app.NotificationChannelGroupProto) */ {
 public:
  NotificationChannelGroupProto();
  virtual ~NotificationChannelGroupProto();

  NotificationChannelGroupProto(const NotificationChannelGroupProto& from);
  NotificationChannelGroupProto(NotificationChannelGroupProto&& from) noexcept
    : NotificationChannelGroupProto() {
    *this = ::std::move(from);
  }

  inline NotificationChannelGroupProto& operator=(const NotificationChannelGroupProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotificationChannelGroupProto& operator=(NotificationChannelGroupProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NotificationChannelGroupProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NotificationChannelGroupProto* internal_default_instance() {
    return reinterpret_cast<const NotificationChannelGroupProto*>(
               &_NotificationChannelGroupProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NotificationChannelGroupProto& a, NotificationChannelGroupProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NotificationChannelGroupProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NotificationChannelGroupProto* New() const final {
    return CreateMaybeMessage<NotificationChannelGroupProto>(nullptr);
  }

  NotificationChannelGroupProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NotificationChannelGroupProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NotificationChannelGroupProto& from);
  void MergeFrom(const NotificationChannelGroupProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NotificationChannelGroupProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.app.NotificationChannelGroupProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_5fgroup_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_5fgroup_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannelsFieldNumber = 5,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kIsBlockedFieldNumber = 4,
    kAllowAppOverlayFieldNumber = 6,
  };
  // repeated .android.app.NotificationChannelProto channels = 5;
  int channels_size() const;
  void clear_channels();
  ::android::app::NotificationChannelProto* mutable_channels(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::NotificationChannelProto >*
      mutable_channels();
  const ::android::app::NotificationChannelProto& channels(int index) const;
  ::android::app::NotificationChannelProto* add_channels();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::NotificationChannelProto >&
      channels() const;

  // optional string id = 1;
  bool has_id() const;
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional string description = 3;
  bool has_description() const;
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);

  // optional bool is_blocked = 4;
  bool has_is_blocked() const;
  void clear_is_blocked();
  bool is_blocked() const;
  void set_is_blocked(bool value);

  // optional bool allow_app_overlay = 6;
  bool has_allow_app_overlay() const;
  void clear_allow_app_overlay();
  bool allow_app_overlay() const;
  void set_allow_app_overlay(bool value);

  // @@protoc_insertion_point(class_scope:android.app.NotificationChannelGroupProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::NotificationChannelProto > channels_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  bool is_blocked_;
  bool allow_app_overlay_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_5fgroup_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NotificationChannelGroupProto

// optional string id = 1;
inline bool NotificationChannelGroupProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotificationChannelGroupProto::clear_id() {
  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& NotificationChannelGroupProto::id() const {
  // @@protoc_insertion_point(field_get:android.app.NotificationChannelGroupProto.id)
  return id_.GetNoArena();
}
inline void NotificationChannelGroupProto::set_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.app.NotificationChannelGroupProto.id)
}
inline void NotificationChannelGroupProto::set_id(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.app.NotificationChannelGroupProto.id)
}
inline void NotificationChannelGroupProto::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.app.NotificationChannelGroupProto.id)
}
inline void NotificationChannelGroupProto::set_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.app.NotificationChannelGroupProto.id)
}
inline std::string* NotificationChannelGroupProto::mutable_id() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.app.NotificationChannelGroupProto.id)
  return id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NotificationChannelGroupProto::release_id() {
  // @@protoc_insertion_point(field_release:android.app.NotificationChannelGroupProto.id)
  if (!has_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationChannelGroupProto::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:android.app.NotificationChannelGroupProto.id)
}

// optional string name = 2;
inline bool NotificationChannelGroupProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotificationChannelGroupProto::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& NotificationChannelGroupProto::name() const {
  // @@protoc_insertion_point(field_get:android.app.NotificationChannelGroupProto.name)
  return name_.GetNoArena();
}
inline void NotificationChannelGroupProto::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.app.NotificationChannelGroupProto.name)
}
inline void NotificationChannelGroupProto::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.app.NotificationChannelGroupProto.name)
}
inline void NotificationChannelGroupProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.app.NotificationChannelGroupProto.name)
}
inline void NotificationChannelGroupProto::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.app.NotificationChannelGroupProto.name)
}
inline std::string* NotificationChannelGroupProto::mutable_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.app.NotificationChannelGroupProto.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NotificationChannelGroupProto::release_name() {
  // @@protoc_insertion_point(field_release:android.app.NotificationChannelGroupProto.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationChannelGroupProto::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:android.app.NotificationChannelGroupProto.name)
}

// optional string description = 3;
inline bool NotificationChannelGroupProto::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotificationChannelGroupProto::clear_description() {
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& NotificationChannelGroupProto::description() const {
  // @@protoc_insertion_point(field_get:android.app.NotificationChannelGroupProto.description)
  return description_.GetNoArena();
}
inline void NotificationChannelGroupProto::set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.app.NotificationChannelGroupProto.description)
}
inline void NotificationChannelGroupProto::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  description_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.app.NotificationChannelGroupProto.description)
}
inline void NotificationChannelGroupProto::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.app.NotificationChannelGroupProto.description)
}
inline void NotificationChannelGroupProto::set_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.app.NotificationChannelGroupProto.description)
}
inline std::string* NotificationChannelGroupProto::mutable_description() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.app.NotificationChannelGroupProto.description)
  return description_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NotificationChannelGroupProto::release_description() {
  // @@protoc_insertion_point(field_release:android.app.NotificationChannelGroupProto.description)
  if (!has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return description_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationChannelGroupProto::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  description_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:android.app.NotificationChannelGroupProto.description)
}

// optional bool is_blocked = 4;
inline bool NotificationChannelGroupProto::has_is_blocked() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotificationChannelGroupProto::clear_is_blocked() {
  is_blocked_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool NotificationChannelGroupProto::is_blocked() const {
  // @@protoc_insertion_point(field_get:android.app.NotificationChannelGroupProto.is_blocked)
  return is_blocked_;
}
inline void NotificationChannelGroupProto::set_is_blocked(bool value) {
  _has_bits_[0] |= 0x00000008u;
  is_blocked_ = value;
  // @@protoc_insertion_point(field_set:android.app.NotificationChannelGroupProto.is_blocked)
}

// repeated .android.app.NotificationChannelProto channels = 5;
inline int NotificationChannelGroupProto::channels_size() const {
  return channels_.size();
}
inline ::android::app::NotificationChannelProto* NotificationChannelGroupProto::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:android.app.NotificationChannelGroupProto.channels)
  return channels_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::NotificationChannelProto >*
NotificationChannelGroupProto::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:android.app.NotificationChannelGroupProto.channels)
  return &channels_;
}
inline const ::android::app::NotificationChannelProto& NotificationChannelGroupProto::channels(int index) const {
  // @@protoc_insertion_point(field_get:android.app.NotificationChannelGroupProto.channels)
  return channels_.Get(index);
}
inline ::android::app::NotificationChannelProto* NotificationChannelGroupProto::add_channels() {
  // @@protoc_insertion_point(field_add:android.app.NotificationChannelGroupProto.channels)
  return channels_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::app::NotificationChannelProto >&
NotificationChannelGroupProto::channels() const {
  // @@protoc_insertion_point(field_list:android.app.NotificationChannelGroupProto.channels)
  return channels_;
}

// optional bool allow_app_overlay = 6;
inline bool NotificationChannelGroupProto::has_allow_app_overlay() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotificationChannelGroupProto::clear_allow_app_overlay() {
  allow_app_overlay_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool NotificationChannelGroupProto::allow_app_overlay() const {
  // @@protoc_insertion_point(field_get:android.app.NotificationChannelGroupProto.allow_app_overlay)
  return allow_app_overlay_;
}
inline void NotificationChannelGroupProto::set_allow_app_overlay(bool value) {
  _has_bits_[0] |= 0x00000010u;
  allow_app_overlay_ = value;
  // @@protoc_insertion_point(field_set:android.app.NotificationChannelGroupProto.allow_app_overlay)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace app
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_5fgroup_2eproto
