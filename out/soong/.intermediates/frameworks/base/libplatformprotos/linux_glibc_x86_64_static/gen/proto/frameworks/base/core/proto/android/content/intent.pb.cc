// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/content/intent.proto

#include "frameworks/base/core/proto/android/content/intent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthorityEntryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ComponentNameProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpatternmatcher_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PatternMatcherProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpatternmatcher_2eproto;
namespace android {
namespace content {
class IntentProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntentProto> _instance;
} _IntentProto_default_instance_;
class IntentFilterProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntentFilterProto> _instance;
} _IntentFilterProto_default_instance_;
class AuthorityEntryProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AuthorityEntryProto> _instance;
} _AuthorityEntryProto_default_instance_;
}  // namespace content
}  // namespace android
static void InitDefaultsscc_info_AuthorityEntryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::content::_AuthorityEntryProto_default_instance_;
    new (ptr) ::android::content::AuthorityEntryProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::content::AuthorityEntryProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthorityEntryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_AuthorityEntryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto}, {}};

static void InitDefaultsscc_info_IntentFilterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::content::_IntentFilterProto_default_instance_;
    new (ptr) ::android::content::IntentFilterProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::content::IntentFilterProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_IntentFilterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_IntentFilterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto}, {
      &scc_info_PatternMatcherProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpatternmatcher_2eproto.base,
      &scc_info_AuthorityEntryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto.base,}};

static void InitDefaultsscc_info_IntentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::content::_IntentProto_default_instance_;
    new (ptr) ::android::content::IntentProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::content::IntentProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IntentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_IntentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto}, {
      &scc_info_ComponentNameProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, action_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, categories_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, data_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, type_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, flag_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, package_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, component_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, source_bounds_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, clip_data_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, extras_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, content_user_hint_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, selector_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentProto, identifier_),
  0,
  ~0u,
  1,
  2,
  3,
  4,
  10,
  5,
  6,
  7,
  11,
  8,
  9,
  PROTOBUF_FIELD_OFFSET(::android::content::IntentFilterProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentFilterProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::content::IntentFilterProto, actions_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentFilterProto, categories_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentFilterProto, data_schemes_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentFilterProto, data_scheme_specs_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentFilterProto, data_authorities_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentFilterProto, data_paths_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentFilterProto, data_types_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentFilterProto, priority_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentFilterProto, has_partial_types_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentFilterProto, get_auto_verify_),
  PROTOBUF_FIELD_OFFSET(::android::content::IntentFilterProto, mime_groups_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  2,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::content::AuthorityEntryProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::content::AuthorityEntryProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::content::AuthorityEntryProto, host_),
  PROTOBUF_FIELD_OFFSET(::android::content::AuthorityEntryProto, wild_),
  PROTOBUF_FIELD_OFFSET(::android::content::AuthorityEntryProto, port_),
  0,
  1,
  2,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 18, sizeof(::android::content::IntentProto)},
  { 31, 47, sizeof(::android::content::IntentFilterProto)},
  { 58, 66, sizeof(::android::content::AuthorityEntryProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::content::_IntentProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::content::_IntentFilterProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::content::_AuthorityEntryProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n7frameworks/base/core/proto/android/con"
  "tent/intent.proto\022\017android.content\032\?fram"
  "eworks/base/core/proto/android/content/c"
  "omponent_name.proto\032:frameworks/base/cor"
  "e/proto/android/os/patternmatcher.proto\032"
  "0frameworks/base/core/proto/android/priv"
  "acy.proto\"\321\003\n\013IntentProto\022\016\n\006action\030\001 \001("
  "\t\022\022\n\ncategories\030\002 \003(\t\022\026\n\004data\030\003 \001(\tB\010\232\237\325"
  "\207\003\002\010d\022\014\n\004type\030\004 \001(\t\022\014\n\004flag\030\005 \001(\t\022\017\n\007pac"
  "kage\030\006 \001(\t\0226\n\tcomponent\030\007 \001(\0132#.android."
  "content.ComponentNameProto\022\025\n\rsource_bou"
  "nds\030\010 \001(\t\022\033\n\tclip_data\030\t \001(\tB\010\232\237\325\207\003\002\010\000\022\030"
  "\n\006extras\030\n \001(\tB\010\232\237\325\207\003\002\010\000\022\031\n\021content_user"
  "_hint\030\013 \001(\005\022\020\n\010selector\030\014 \001(\t\022\034\n\nidentif"
  "ier\030\r \001(\tB\010\232\237\325\207\003\002\010d\"}\n\tDockState\022\027\n\023DOCK"
  "_STATE_UNDOCKED\020\000\022\023\n\017DOCK_STATE_DESK\020\001\022\022"
  "\n\016DOCK_STATE_CAR\020\002\022\026\n\022DOCK_STATE_LE_DESK"
  "\020\003\022\026\n\022DOCK_STATE_HE_DESK\020\004:\t\232\237\325\207\003\003\010\310\001\"\203\003"
  "\n\021IntentFilterProto\022\017\n\007actions\030\001 \003(\t\022\022\n\n"
  "categories\030\002 \003(\t\022\036\n\014data_schemes\030\003 \003(\tB\010"
  "\232\237\325\207\003\002\010d\022:\n\021data_scheme_specs\030\004 \003(\0132\037.an"
  "droid.os.PatternMatcherProto\022>\n\020data_aut"
  "horities\030\005 \003(\0132$.android.content.Authori"
  "tyEntryProto\0223\n\ndata_paths\030\006 \003(\0132\037.andro"
  "id.os.PatternMatcherProto\022\022\n\ndata_types\030"
  "\007 \003(\t\022\020\n\010priority\030\010 \001(\005\022\031\n\021has_partial_t"
  "ypes\030\t \001(\010\022\027\n\017get_auto_verify\030\n \001(\010\022\023\n\013m"
  "ime_groups\030\013 \003(\t:\t\232\237\325\207\003\003\010\310\001\"J\n\023Authority"
  "EntryProto\022\014\n\004host\030\001 \001(\t\022\014\n\004wild\030\002 \001(\010\022\014"
  "\n\004port\030\003 \001(\005:\t\232\237\325\207\003\003\010\310\001B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto_deps[3] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fpatternmatcher_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto_sccs[3] = {
  &scc_info_AuthorityEntryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto.base,
  &scc_info_IntentFilterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto.base,
  &scc_info_IntentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto, "frameworks/base/core/proto/android/content/intent.proto", 1187,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto_deps, 3, 3,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto, 3, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto), true);
namespace android {
namespace content {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* IntentProto_DockState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto[0];
}
bool IntentProto_DockState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr IntentProto_DockState IntentProto::DOCK_STATE_UNDOCKED;
constexpr IntentProto_DockState IntentProto::DOCK_STATE_DESK;
constexpr IntentProto_DockState IntentProto::DOCK_STATE_CAR;
constexpr IntentProto_DockState IntentProto::DOCK_STATE_LE_DESK;
constexpr IntentProto_DockState IntentProto::DOCK_STATE_HE_DESK;
constexpr IntentProto_DockState IntentProto::DockState_MIN;
constexpr IntentProto_DockState IntentProto::DockState_MAX;
constexpr int IntentProto::DockState_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void IntentProto::InitAsDefaultInstance() {
  ::android::content::_IntentProto_default_instance_._instance.get_mutable()->component_ = const_cast< ::android::content::ComponentNameProto*>(
      ::android::content::ComponentNameProto::internal_default_instance());
}
class IntentProto::_Internal {
 public:
  using HasBits = decltype(std::declval<IntentProto>()._has_bits_);
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_package(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::android::content::ComponentNameProto& component(const IntentProto* msg);
  static void set_has_component(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_source_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_clip_data(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_extras(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_content_user_hint(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_selector(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

const ::android::content::ComponentNameProto&
IntentProto::_Internal::component(const IntentProto* msg) {
  return *msg->component_;
}
void IntentProto::clear_component() {
  if (component_ != nullptr) component_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
IntentProto::IntentProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.content.IntentProto)
}
IntentProto::IntentProto(const IntentProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      categories_(from.categories_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_action()) {
    action_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  flag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_flag()) {
    flag_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.flag_);
  }
  package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_package()) {
    package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  source_bounds_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_bounds()) {
    source_bounds_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.source_bounds_);
  }
  clip_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_clip_data()) {
    clip_data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.clip_data_);
  }
  extras_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_extras()) {
    extras_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.extras_);
  }
  selector_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_selector()) {
    selector_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.selector_);
  }
  identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_identifier()) {
    identifier_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.identifier_);
  }
  if (from.has_component()) {
    component_ = new ::android::content::ComponentNameProto(*from.component_);
  } else {
    component_ = nullptr;
  }
  content_user_hint_ = from.content_user_hint_;
  // @@protoc_insertion_point(copy_constructor:android.content.IntentProto)
}

void IntentProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IntentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto.base);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_bounds_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clip_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extras_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  selector_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&component_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&content_user_hint_) -
      reinterpret_cast<char*>(&component_)) + sizeof(content_user_hint_));
}

IntentProto::~IntentProto() {
  // @@protoc_insertion_point(destructor:android.content.IntentProto)
  SharedDtor();
}

void IntentProto::SharedDtor() {
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  package_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_bounds_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clip_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extras_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  selector_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  identifier_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete component_;
}

void IntentProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntentProto& IntentProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto.base);
  return *internal_default_instance();
}


void IntentProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.content.IntentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  categories_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      action_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      data_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      flag_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      package_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      source_bounds_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      clip_data_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      extras_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      selector_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000200u) {
      identifier_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(component_ != nullptr);
      component_->Clear();
    }
  }
  content_user_hint_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IntentProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_action(), ptr, ctx, "android.content.IntentProto.action");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string categories = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_categories(), ptr, ctx, "android.content.IntentProto.categories");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // optional string data = 3 [(.android.privacy) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_data(), ptr, ctx, "android.content.IntentProto.data");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_type(), ptr, ctx, "android.content.IntentProto.type");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string flag = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_flag(), ptr, ctx, "android.content.IntentProto.flag");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string package = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_package(), ptr, ctx, "android.content.IntentProto.package");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.content.ComponentNameProto component = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_component(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string source_bounds = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_source_bounds(), ptr, ctx, "android.content.IntentProto.source_bounds");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string clip_data = 9 [(.android.privacy) = {
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_clip_data(), ptr, ctx, "android.content.IntentProto.clip_data");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string extras = 10 [(.android.privacy) = {
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_extras(), ptr, ctx, "android.content.IntentProto.extras");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 content_user_hint = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_content_user_hint(&has_bits);
          content_user_hint_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string selector = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_selector(), ptr, ctx, "android.content.IntentProto.selector");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string identifier = 13 [(.android.privacy) = {
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_identifier(), ptr, ctx, "android.content.IntentProto.identifier");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IntentProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.content.IntentProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string action = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->action().data(), static_cast<int>(this->action().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentProto.action");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string categories = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_categories()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->categories(this->categories_size() - 1).data(),
            static_cast<int>(this->categories(this->categories_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentProto.categories");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string data = 3 [(.android.privacy) = {
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), static_cast<int>(this->data().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentProto.data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string type = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), static_cast<int>(this->type().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentProto.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string flag = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_flag()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->flag().data(), static_cast<int>(this->flag().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentProto.flag");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string package = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package().data(), static_cast<int>(this->package().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentProto.package");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.content.ComponentNameProto component = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_component()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string source_bounds = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_source_bounds()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_bounds().data(), static_cast<int>(this->source_bounds().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentProto.source_bounds");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string clip_data = 9 [(.android.privacy) = {
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_clip_data()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clip_data().data(), static_cast<int>(this->clip_data().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentProto.clip_data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string extras = 10 [(.android.privacy) = {
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_extras()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extras().data(), static_cast<int>(this->extras().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentProto.extras");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 content_user_hint = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          _Internal::set_has_content_user_hint(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &content_user_hint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string selector = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_selector()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->selector().data(), static_cast<int>(this->selector().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentProto.selector");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string identifier = 13 [(.android.privacy) = {
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_identifier()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->identifier().data(), static_cast<int>(this->identifier().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentProto.identifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.content.IntentProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.content.IntentProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IntentProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.content.IntentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string action = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->action().data(), static_cast<int>(this->action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.action");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->action(), output);
  }

  // repeated string categories = 2;
  for (int i = 0, n = this->categories_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->categories(i).data(), static_cast<int>(this->categories(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.categories");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      2, this->categories(i), output);
  }

  // optional string data = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.data");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->data(), output);
  }

  // optional string type = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.type");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  // optional string flag = 5;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->flag().data(), static_cast<int>(this->flag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.flag");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->flag(), output);
  }

  // optional string package = 6;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package().data(), static_cast<int>(this->package().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.package");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->package(), output);
  }

  // optional .android.content.ComponentNameProto component = 7;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::component(this), output);
  }

  // optional string source_bounds = 8;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_bounds().data(), static_cast<int>(this->source_bounds().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.source_bounds");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->source_bounds(), output);
  }

  // optional string clip_data = 9 [(.android.privacy) = {
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clip_data().data(), static_cast<int>(this->clip_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.clip_data");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->clip_data(), output);
  }

  // optional string extras = 10 [(.android.privacy) = {
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extras().data(), static_cast<int>(this->extras().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.extras");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->extras(), output);
  }

  // optional int32 content_user_hint = 11;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(11, this->content_user_hint(), output);
  }

  // optional string selector = 12;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->selector().data(), static_cast<int>(this->selector().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.selector");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->selector(), output);
  }

  // optional string identifier = 13 [(.android.privacy) = {
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->identifier().data(), static_cast<int>(this->identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.identifier");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->identifier(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.content.IntentProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* IntentProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.content.IntentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string action = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->action().data(), static_cast<int>(this->action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.action");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->action(), target);
  }

  // repeated string categories = 2;
  for (int i = 0, n = this->categories_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->categories(i).data(), static_cast<int>(this->categories(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.categories");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(2, this->categories(i), target);
  }

  // optional string data = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.data");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->data(), target);
  }

  // optional string type = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.type");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  // optional string flag = 5;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->flag().data(), static_cast<int>(this->flag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.flag");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->flag(), target);
  }

  // optional string package = 6;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package().data(), static_cast<int>(this->package().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.package");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        6, this->package(), target);
  }

  // optional .android.content.ComponentNameProto component = 7;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::component(this), target);
  }

  // optional string source_bounds = 8;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_bounds().data(), static_cast<int>(this->source_bounds().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.source_bounds");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        8, this->source_bounds(), target);
  }

  // optional string clip_data = 9 [(.android.privacy) = {
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clip_data().data(), static_cast<int>(this->clip_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.clip_data");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        9, this->clip_data(), target);
  }

  // optional string extras = 10 [(.android.privacy) = {
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extras().data(), static_cast<int>(this->extras().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.extras");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        10, this->extras(), target);
  }

  // optional int32 content_user_hint = 11;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->content_user_hint(), target);
  }

  // optional string selector = 12;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->selector().data(), static_cast<int>(this->selector().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.selector");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        12, this->selector(), target);
  }

  // optional string identifier = 13 [(.android.privacy) = {
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->identifier().data(), static_cast<int>(this->identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentProto.identifier");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        13, this->identifier(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.content.IntentProto)
  return target;
}

size_t IntentProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.content.IntentProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string categories = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->categories_size());
  for (int i = 0, n = this->categories_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->categories(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string action = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->action());
    }

    // optional string data = 3 [(.android.privacy) = {
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->data());
    }

    // optional string type = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional string flag = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->flag());
    }

    // optional string package = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->package());
    }

    // optional string source_bounds = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->source_bounds());
    }

    // optional string clip_data = 9 [(.android.privacy) = {
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->clip_data());
    }

    // optional string extras = 10 [(.android.privacy) = {
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->extras());
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional string selector = 12;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->selector());
    }

    // optional string identifier = 13 [(.android.privacy) = {
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->identifier());
    }

    // optional .android.content.ComponentNameProto component = 7;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *component_);
    }

    // optional int32 content_user_hint = 11;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->content_user_hint());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntentProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.content.IntentProto)
  GOOGLE_DCHECK_NE(&from, this);
  const IntentProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntentProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.content.IntentProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.content.IntentProto)
    MergeFrom(*source);
  }
}

void IntentProto::MergeFrom(const IntentProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.content.IntentProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  categories_.MergeFrom(from.categories_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      action_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.action_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      flag_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.flag_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      source_bounds_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.source_bounds_);
    }
    if (cached_has_bits & 0x00000040u) {
      _has_bits_[0] |= 0x00000040u;
      clip_data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.clip_data_);
    }
    if (cached_has_bits & 0x00000080u) {
      _has_bits_[0] |= 0x00000080u;
      extras_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.extras_);
    }
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      _has_bits_[0] |= 0x00000100u;
      selector_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.selector_);
    }
    if (cached_has_bits & 0x00000200u) {
      _has_bits_[0] |= 0x00000200u;
      identifier_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.identifier_);
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_component()->::android::content::ComponentNameProto::MergeFrom(from.component());
    }
    if (cached_has_bits & 0x00000800u) {
      content_user_hint_ = from.content_user_hint_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IntentProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.content.IntentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntentProto::CopyFrom(const IntentProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.content.IntentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntentProto::IsInitialized() const {
  return true;
}

void IntentProto::InternalSwap(IntentProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  categories_.InternalSwap(CastToBase(&other->categories_));
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  flag_.Swap(&other->flag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  package_.Swap(&other->package_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_bounds_.Swap(&other->source_bounds_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  clip_data_.Swap(&other->clip_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extras_.Swap(&other->extras_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  selector_.Swap(&other->selector_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  identifier_.Swap(&other->identifier_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(component_, other->component_);
  swap(content_user_hint_, other->content_user_hint_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntentProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IntentFilterProto::InitAsDefaultInstance() {
}
class IntentFilterProto::_Internal {
 public:
  using HasBits = decltype(std::declval<IntentFilterProto>()._has_bits_);
  static void set_has_priority(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_has_partial_types(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_get_auto_verify(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

void IntentFilterProto::clear_data_scheme_specs() {
  data_scheme_specs_.Clear();
}
void IntentFilterProto::clear_data_paths() {
  data_paths_.Clear();
}
IntentFilterProto::IntentFilterProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.content.IntentFilterProto)
}
IntentFilterProto::IntentFilterProto(const IntentFilterProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      actions_(from.actions_),
      categories_(from.categories_),
      data_schemes_(from.data_schemes_),
      data_scheme_specs_(from.data_scheme_specs_),
      data_authorities_(from.data_authorities_),
      data_paths_(from.data_paths_),
      data_types_(from.data_types_),
      mime_groups_(from.mime_groups_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&priority_, &from.priority_,
    static_cast<size_t>(reinterpret_cast<char*>(&get_auto_verify_) -
    reinterpret_cast<char*>(&priority_)) + sizeof(get_auto_verify_));
  // @@protoc_insertion_point(copy_constructor:android.content.IntentFilterProto)
}

void IntentFilterProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IntentFilterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto.base);
  ::memset(&priority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&get_auto_verify_) -
      reinterpret_cast<char*>(&priority_)) + sizeof(get_auto_verify_));
}

IntentFilterProto::~IntentFilterProto() {
  // @@protoc_insertion_point(destructor:android.content.IntentFilterProto)
  SharedDtor();
}

void IntentFilterProto::SharedDtor() {
}

void IntentFilterProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntentFilterProto& IntentFilterProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntentFilterProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto.base);
  return *internal_default_instance();
}


void IntentFilterProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.content.IntentFilterProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  categories_.Clear();
  data_schemes_.Clear();
  data_scheme_specs_.Clear();
  data_authorities_.Clear();
  data_paths_.Clear();
  data_types_.Clear();
  mime_groups_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&priority_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&get_auto_verify_) -
        reinterpret_cast<char*>(&priority_)) + sizeof(get_auto_verify_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IntentFilterProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string actions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_actions(), ptr, ctx, "android.content.IntentFilterProto.actions");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated string categories = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_categories(), ptr, ctx, "android.content.IntentFilterProto.categories");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // repeated string data_schemes = 3 [(.android.privacy) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_data_schemes(), ptr, ctx, "android.content.IntentFilterProto.data_schemes");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // repeated .android.os.PatternMatcherProto data_scheme_specs = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_data_scheme_specs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // repeated .android.content.AuthorityEntryProto data_authorities = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_data_authorities(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // repeated .android.os.PatternMatcherProto data_paths = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_data_paths(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 50);
        } else goto handle_unusual;
        continue;
      // repeated string data_types = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_data_types(), ptr, ctx, "android.content.IntentFilterProto.data_types");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 58);
        } else goto handle_unusual;
        continue;
      // optional int32 priority = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_priority(&has_bits);
          priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool has_partial_types = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_has_partial_types(&has_bits);
          has_partial_types_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool get_auto_verify = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_get_auto_verify(&has_bits);
          get_auto_verify_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string mime_groups = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_mime_groups(), ptr, ctx, "android.content.IntentFilterProto.mime_groups");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 90);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IntentFilterProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.content.IntentFilterProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string actions = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_actions()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->actions(this->actions_size() - 1).data(),
            static_cast<int>(this->actions(this->actions_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentFilterProto.actions");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string categories = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_categories()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->categories(this->categories_size() - 1).data(),
            static_cast<int>(this->categories(this->categories_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentFilterProto.categories");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string data_schemes = 3 [(.android.privacy) = {
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_data_schemes()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data_schemes(this->data_schemes_size() - 1).data(),
            static_cast<int>(this->data_schemes(this->data_schemes_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentFilterProto.data_schemes");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.os.PatternMatcherProto data_scheme_specs = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_data_scheme_specs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.content.AuthorityEntryProto data_authorities = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_data_authorities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.os.PatternMatcherProto data_paths = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_data_paths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string data_types = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_data_types()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data_types(this->data_types_size() - 1).data(),
            static_cast<int>(this->data_types(this->data_types_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentFilterProto.data_types");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 priority = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_priority(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_partial_types = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_has_partial_types(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_partial_types_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool get_auto_verify = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          _Internal::set_has_get_auto_verify(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &get_auto_verify_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string mime_groups = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_mime_groups()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mime_groups(this->mime_groups_size() - 1).data(),
            static_cast<int>(this->mime_groups(this->mime_groups_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.IntentFilterProto.mime_groups");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.content.IntentFilterProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.content.IntentFilterProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IntentFilterProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.content.IntentFilterProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string actions = 1;
  for (int i = 0, n = this->actions_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actions(i).data(), static_cast<int>(this->actions(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentFilterProto.actions");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      1, this->actions(i), output);
  }

  // repeated string categories = 2;
  for (int i = 0, n = this->categories_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->categories(i).data(), static_cast<int>(this->categories(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentFilterProto.categories");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      2, this->categories(i), output);
  }

  // repeated string data_schemes = 3 [(.android.privacy) = {
  for (int i = 0, n = this->data_schemes_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_schemes(i).data(), static_cast<int>(this->data_schemes(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentFilterProto.data_schemes");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      3, this->data_schemes(i), output);
  }

  // repeated .android.os.PatternMatcherProto data_scheme_specs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_scheme_specs_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->data_scheme_specs(static_cast<int>(i)),
      output);
  }

  // repeated .android.content.AuthorityEntryProto data_authorities = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_authorities_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->data_authorities(static_cast<int>(i)),
      output);
  }

  // repeated .android.os.PatternMatcherProto data_paths = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_paths_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->data_paths(static_cast<int>(i)),
      output);
  }

  // repeated string data_types = 7;
  for (int i = 0, n = this->data_types_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_types(i).data(), static_cast<int>(this->data_types(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentFilterProto.data_types");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      7, this->data_types(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 priority = 8;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(8, this->priority(), output);
  }

  // optional bool has_partial_types = 9;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(9, this->has_partial_types(), output);
  }

  // optional bool get_auto_verify = 10;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(10, this->get_auto_verify(), output);
  }

  // repeated string mime_groups = 11;
  for (int i = 0, n = this->mime_groups_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mime_groups(i).data(), static_cast<int>(this->mime_groups(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentFilterProto.mime_groups");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      11, this->mime_groups(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.content.IntentFilterProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* IntentFilterProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.content.IntentFilterProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string actions = 1;
  for (int i = 0, n = this->actions_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actions(i).data(), static_cast<int>(this->actions(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentFilterProto.actions");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(1, this->actions(i), target);
  }

  // repeated string categories = 2;
  for (int i = 0, n = this->categories_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->categories(i).data(), static_cast<int>(this->categories(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentFilterProto.categories");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(2, this->categories(i), target);
  }

  // repeated string data_schemes = 3 [(.android.privacy) = {
  for (int i = 0, n = this->data_schemes_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_schemes(i).data(), static_cast<int>(this->data_schemes(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentFilterProto.data_schemes");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(3, this->data_schemes(i), target);
  }

  // repeated .android.os.PatternMatcherProto data_scheme_specs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_scheme_specs_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->data_scheme_specs(static_cast<int>(i)), target);
  }

  // repeated .android.content.AuthorityEntryProto data_authorities = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_authorities_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->data_authorities(static_cast<int>(i)), target);
  }

  // repeated .android.os.PatternMatcherProto data_paths = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_paths_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->data_paths(static_cast<int>(i)), target);
  }

  // repeated string data_types = 7;
  for (int i = 0, n = this->data_types_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_types(i).data(), static_cast<int>(this->data_types(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentFilterProto.data_types");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(7, this->data_types(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 priority = 8;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->priority(), target);
  }

  // optional bool has_partial_types = 9;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->has_partial_types(), target);
  }

  // optional bool get_auto_verify = 10;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->get_auto_verify(), target);
  }

  // repeated string mime_groups = 11;
  for (int i = 0, n = this->mime_groups_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mime_groups(i).data(), static_cast<int>(this->mime_groups(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.IntentFilterProto.mime_groups");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(11, this->mime_groups(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.content.IntentFilterProto)
  return target;
}

size_t IntentFilterProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.content.IntentFilterProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->actions_size());
  for (int i = 0, n = this->actions_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->actions(i));
  }

  // repeated string categories = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->categories_size());
  for (int i = 0, n = this->categories_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->categories(i));
  }

  // repeated string data_schemes = 3 [(.android.privacy) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->data_schemes_size());
  for (int i = 0, n = this->data_schemes_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->data_schemes(i));
  }

  // repeated .android.os.PatternMatcherProto data_scheme_specs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->data_scheme_specs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->data_scheme_specs(static_cast<int>(i)));
    }
  }

  // repeated .android.content.AuthorityEntryProto data_authorities = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->data_authorities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->data_authorities(static_cast<int>(i)));
    }
  }

  // repeated .android.os.PatternMatcherProto data_paths = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->data_paths_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->data_paths(static_cast<int>(i)));
    }
  }

  // repeated string data_types = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->data_types_size());
  for (int i = 0, n = this->data_types_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->data_types(i));
  }

  // repeated string mime_groups = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->mime_groups_size());
  for (int i = 0, n = this->mime_groups_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->mime_groups(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int32 priority = 8;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->priority());
    }

    // optional bool has_partial_types = 9;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool get_auto_verify = 10;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntentFilterProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.content.IntentFilterProto)
  GOOGLE_DCHECK_NE(&from, this);
  const IntentFilterProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntentFilterProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.content.IntentFilterProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.content.IntentFilterProto)
    MergeFrom(*source);
  }
}

void IntentFilterProto::MergeFrom(const IntentFilterProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.content.IntentFilterProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  categories_.MergeFrom(from.categories_);
  data_schemes_.MergeFrom(from.data_schemes_);
  data_scheme_specs_.MergeFrom(from.data_scheme_specs_);
  data_authorities_.MergeFrom(from.data_authorities_);
  data_paths_.MergeFrom(from.data_paths_);
  data_types_.MergeFrom(from.data_types_);
  mime_groups_.MergeFrom(from.mime_groups_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      priority_ = from.priority_;
    }
    if (cached_has_bits & 0x00000002u) {
      has_partial_types_ = from.has_partial_types_;
    }
    if (cached_has_bits & 0x00000004u) {
      get_auto_verify_ = from.get_auto_verify_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void IntentFilterProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.content.IntentFilterProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntentFilterProto::CopyFrom(const IntentFilterProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.content.IntentFilterProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntentFilterProto::IsInitialized() const {
  return true;
}

void IntentFilterProto::InternalSwap(IntentFilterProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  actions_.InternalSwap(CastToBase(&other->actions_));
  categories_.InternalSwap(CastToBase(&other->categories_));
  data_schemes_.InternalSwap(CastToBase(&other->data_schemes_));
  CastToBase(&data_scheme_specs_)->InternalSwap(CastToBase(&other->data_scheme_specs_));
  CastToBase(&data_authorities_)->InternalSwap(CastToBase(&other->data_authorities_));
  CastToBase(&data_paths_)->InternalSwap(CastToBase(&other->data_paths_));
  data_types_.InternalSwap(CastToBase(&other->data_types_));
  mime_groups_.InternalSwap(CastToBase(&other->mime_groups_));
  swap(priority_, other->priority_);
  swap(has_partial_types_, other->has_partial_types_);
  swap(get_auto_verify_, other->get_auto_verify_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntentFilterProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AuthorityEntryProto::InitAsDefaultInstance() {
}
class AuthorityEntryProto::_Internal {
 public:
  using HasBits = decltype(std::declval<AuthorityEntryProto>()._has_bits_);
  static void set_has_host(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_wild(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_port(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

AuthorityEntryProto::AuthorityEntryProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.content.AuthorityEntryProto)
}
AuthorityEntryProto::AuthorityEntryProto(const AuthorityEntryProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_host()) {
    host_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  ::memcpy(&wild_, &from.wild_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&wild_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:android.content.AuthorityEntryProto)
}

void AuthorityEntryProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AuthorityEntryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto.base);
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&wild_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&wild_)) + sizeof(port_));
}

AuthorityEntryProto::~AuthorityEntryProto() {
  // @@protoc_insertion_point(destructor:android.content.AuthorityEntryProto)
  SharedDtor();
}

void AuthorityEntryProto::SharedDtor() {
  host_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthorityEntryProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthorityEntryProto& AuthorityEntryProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AuthorityEntryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fintent_2eproto.base);
  return *internal_default_instance();
}


void AuthorityEntryProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.content.AuthorityEntryProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    host_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&wild_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&port_) -
        reinterpret_cast<char*>(&wild_)) + sizeof(port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AuthorityEntryProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string host = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_host(), ptr, ctx, "android.content.AuthorityEntryProto.host");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool wild = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_wild(&has_bits);
          wild_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 port = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_port(&has_bits);
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AuthorityEntryProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.content.AuthorityEntryProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string host = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), static_cast<int>(this->host().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.AuthorityEntryProto.host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool wild = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_wild(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 port = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_port(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.content.AuthorityEntryProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.content.AuthorityEntryProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AuthorityEntryProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.content.AuthorityEntryProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string host = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.AuthorityEntryProto.host");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host(), output);
  }

  // optional bool wild = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->wild(), output);
  }

  // optional int32 port = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.content.AuthorityEntryProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* AuthorityEntryProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.content.AuthorityEntryProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string host = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.AuthorityEntryProto.host");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->host(), target);
  }

  // optional bool wild = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->wild(), target);
  }

  // optional int32 port = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.content.AuthorityEntryProto)
  return target;
}

size_t AuthorityEntryProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.content.AuthorityEntryProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string host = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional bool wild = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional int32 port = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->port());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthorityEntryProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.content.AuthorityEntryProto)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthorityEntryProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AuthorityEntryProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.content.AuthorityEntryProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.content.AuthorityEntryProto)
    MergeFrom(*source);
  }
}

void AuthorityEntryProto::MergeFrom(const AuthorityEntryProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.content.AuthorityEntryProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      host_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (cached_has_bits & 0x00000002u) {
      wild_ = from.wild_;
    }
    if (cached_has_bits & 0x00000004u) {
      port_ = from.port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AuthorityEntryProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.content.AuthorityEntryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthorityEntryProto::CopyFrom(const AuthorityEntryProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.content.AuthorityEntryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthorityEntryProto::IsInitialized() const {
  return true;
}

void AuthorityEntryProto::InternalSwap(AuthorityEntryProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  host_.Swap(&other->host_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(wild_, other->wild_);
  swap(port_, other->port_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthorityEntryProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace content
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::content::IntentProto* Arena::CreateMaybeMessage< ::android::content::IntentProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::content::IntentProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::content::IntentFilterProto* Arena::CreateMaybeMessage< ::android::content::IntentFilterProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::content::IntentFilterProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::content::AuthorityEntryProto* Arena::CreateMaybeMessage< ::android::content::AuthorityEntryProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::content::AuthorityEntryProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
