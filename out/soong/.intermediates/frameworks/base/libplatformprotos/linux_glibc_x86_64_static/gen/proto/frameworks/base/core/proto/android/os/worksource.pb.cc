// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/os/worksource.proto

#include "frameworks/base/core/proto/android/os/worksource.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WorkSourceProto_WorkChain_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkSourceProto_WorkSourceContentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto;
namespace android {
namespace os {
class WorkSourceProto_WorkSourceContentProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkSourceProto_WorkSourceContentProto> _instance;
} _WorkSourceProto_WorkSourceContentProto_default_instance_;
class WorkSourceProto_WorkChainDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkSourceProto_WorkChain> _instance;
} _WorkSourceProto_WorkChain_default_instance_;
class WorkSourceProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkSourceProto> _instance;
} _WorkSourceProto_default_instance_;
}  // namespace os
}  // namespace android
static void InitDefaultsscc_info_WorkSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::_WorkSourceProto_default_instance_;
    new (ptr) ::android::os::WorkSourceProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::WorkSourceProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_WorkSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_WorkSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto}, {
      &scc_info_WorkSourceProto_WorkSourceContentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto.base,
      &scc_info_WorkSourceProto_WorkChain_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto.base,}};

static void InitDefaultsscc_info_WorkSourceProto_WorkChain_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::_WorkSourceProto_WorkChain_default_instance_;
    new (ptr) ::android::os::WorkSourceProto_WorkChain();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::WorkSourceProto_WorkChain::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WorkSourceProto_WorkChain_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_WorkSourceProto_WorkChain_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto}, {
      &scc_info_WorkSourceProto_WorkSourceContentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto.base,}};

static void InitDefaultsscc_info_WorkSourceProto_WorkSourceContentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::_WorkSourceProto_WorkSourceContentProto_default_instance_;
    new (ptr) ::android::os::WorkSourceProto_WorkSourceContentProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::WorkSourceProto_WorkSourceContentProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkSourceProto_WorkSourceContentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_WorkSourceProto_WorkSourceContentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::os::WorkSourceProto_WorkSourceContentProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::os::WorkSourceProto_WorkSourceContentProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::os::WorkSourceProto_WorkSourceContentProto, uid_),
  PROTOBUF_FIELD_OFFSET(::android::os::WorkSourceProto_WorkSourceContentProto, name_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::android::os::WorkSourceProto_WorkChain, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::os::WorkSourceProto_WorkChain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::os::WorkSourceProto_WorkChain, nodes_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::os::WorkSourceProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::os::WorkSourceProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::os::WorkSourceProto, work_source_contents_),
  PROTOBUF_FIELD_OFFSET(::android::os::WorkSourceProto, work_chains_),
  ~0u,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::android::os::WorkSourceProto_WorkSourceContentProto)},
  { 9, 15, sizeof(::android::os::WorkSourceProto_WorkChain)},
  { 16, 23, sizeof(::android::os::WorkSourceProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::os::_WorkSourceProto_WorkSourceContentProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::os::_WorkSourceProto_WorkChain_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::os::_WorkSourceProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n6frameworks/base/core/proto/android/os/"
  "worksource.proto\022\nandroid.os\0320frameworks"
  "/base/core/proto/android/privacy.proto\"\305"
  "\002\n\017WorkSourceProto\022P\n\024work_source_conten"
  "ts\030\001 \003(\01322.android.os.WorkSourceProto.Wo"
  "rkSourceContentProto\022:\n\013work_chains\030\002 \003("
  "\0132%.android.os.WorkSourceProto.WorkChain"
  "\032>\n\026WorkSourceContentProto\022\013\n\003uid\030\001 \001(\005\022"
  "\014\n\004name\030\002 \001(\t:\t\232\237\325\207\003\003\010\310\001\032Y\n\tWorkChain\022A\n"
  "\005nodes\030\001 \003(\01322.android.os.WorkSourceProt"
  "o.WorkSourceContentProto:\t\232\237\325\207\003\003\010\310\001:\t\232\237\325"
  "\207\003\003\010\310\001B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto_deps[1] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto_sccs[3] = {
  &scc_info_WorkSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto.base,
  &scc_info_WorkSourceProto_WorkChain_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto.base,
  &scc_info_WorkSourceProto_WorkSourceContentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto, "frameworks/base/core/proto/android/os/worksource.proto", 450,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto_deps, 3, 1,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto, 3, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto), true);
namespace android {
namespace os {

// ===================================================================

void WorkSourceProto_WorkSourceContentProto::InitAsDefaultInstance() {
}
class WorkSourceProto_WorkSourceContentProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WorkSourceProto_WorkSourceContentProto>()._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

WorkSourceProto_WorkSourceContentProto::WorkSourceProto_WorkSourceContentProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.WorkSourceProto.WorkSourceContentProto)
}
WorkSourceProto_WorkSourceContentProto::WorkSourceProto_WorkSourceContentProto(const WorkSourceProto_WorkSourceContentProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:android.os.WorkSourceProto.WorkSourceContentProto)
}

void WorkSourceProto_WorkSourceContentProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkSourceProto_WorkSourceContentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uid_ = 0;
}

WorkSourceProto_WorkSourceContentProto::~WorkSourceProto_WorkSourceContentProto() {
  // @@protoc_insertion_point(destructor:android.os.WorkSourceProto.WorkSourceContentProto)
  SharedDtor();
}

void WorkSourceProto_WorkSourceContentProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WorkSourceProto_WorkSourceContentProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkSourceProto_WorkSourceContentProto& WorkSourceProto_WorkSourceContentProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkSourceProto_WorkSourceContentProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto.base);
  return *internal_default_instance();
}


void WorkSourceProto_WorkSourceContentProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.WorkSourceProto.WorkSourceContentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  uid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WorkSourceProto_WorkSourceContentProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_uid(&has_bits);
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_name(), ptr, ctx, "android.os.WorkSourceProto.WorkSourceContentProto.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WorkSourceProto_WorkSourceContentProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.os.WorkSourceProto.WorkSourceContentProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 uid = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_uid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.os.WorkSourceProto.WorkSourceContentProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.WorkSourceProto.WorkSourceContentProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.WorkSourceProto.WorkSourceContentProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WorkSourceProto_WorkSourceContentProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.WorkSourceProto.WorkSourceContentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.WorkSourceProto.WorkSourceContentProto.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.os.WorkSourceProto.WorkSourceContentProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkSourceProto_WorkSourceContentProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.os.WorkSourceProto.WorkSourceContentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.WorkSourceProto.WorkSourceContentProto.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.os.WorkSourceProto.WorkSourceContentProto)
  return target;
}

size_t WorkSourceProto_WorkSourceContentProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.WorkSourceProto.WorkSourceContentProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 uid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->uid());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkSourceProto_WorkSourceContentProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.os.WorkSourceProto.WorkSourceContentProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkSourceProto_WorkSourceContentProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkSourceProto_WorkSourceContentProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.os.WorkSourceProto.WorkSourceContentProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.os.WorkSourceProto.WorkSourceContentProto)
    MergeFrom(*source);
  }
}

void WorkSourceProto_WorkSourceContentProto::MergeFrom(const WorkSourceProto_WorkSourceContentProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.WorkSourceProto.WorkSourceContentProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      uid_ = from.uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WorkSourceProto_WorkSourceContentProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.os.WorkSourceProto.WorkSourceContentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkSourceProto_WorkSourceContentProto::CopyFrom(const WorkSourceProto_WorkSourceContentProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.WorkSourceProto.WorkSourceContentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkSourceProto_WorkSourceContentProto::IsInitialized() const {
  return true;
}

void WorkSourceProto_WorkSourceContentProto::InternalSwap(WorkSourceProto_WorkSourceContentProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(uid_, other->uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkSourceProto_WorkSourceContentProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WorkSourceProto_WorkChain::InitAsDefaultInstance() {
}
class WorkSourceProto_WorkChain::_Internal {
 public:
  using HasBits = decltype(std::declval<WorkSourceProto_WorkChain>()._has_bits_);
};

WorkSourceProto_WorkChain::WorkSourceProto_WorkChain()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.WorkSourceProto.WorkChain)
}
WorkSourceProto_WorkChain::WorkSourceProto_WorkChain(const WorkSourceProto_WorkChain& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:android.os.WorkSourceProto.WorkChain)
}

void WorkSourceProto_WorkChain::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkSourceProto_WorkChain_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto.base);
}

WorkSourceProto_WorkChain::~WorkSourceProto_WorkChain() {
  // @@protoc_insertion_point(destructor:android.os.WorkSourceProto.WorkChain)
  SharedDtor();
}

void WorkSourceProto_WorkChain::SharedDtor() {
}

void WorkSourceProto_WorkChain::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkSourceProto_WorkChain& WorkSourceProto_WorkChain::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkSourceProto_WorkChain_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto.base);
  return *internal_default_instance();
}


void WorkSourceProto_WorkChain::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.WorkSourceProto.WorkChain)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WorkSourceProto_WorkChain::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.os.WorkSourceProto.WorkSourceContentProto nodes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_nodes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WorkSourceProto_WorkChain::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.os.WorkSourceProto.WorkChain)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.os.WorkSourceProto.WorkSourceContentProto nodes = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.WorkSourceProto.WorkChain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.WorkSourceProto.WorkChain)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WorkSourceProto_WorkChain::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.WorkSourceProto.WorkChain)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.os.WorkSourceProto.WorkSourceContentProto nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->nodes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.os.WorkSourceProto.WorkChain)
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkSourceProto_WorkChain::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.os.WorkSourceProto.WorkChain)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.os.WorkSourceProto.WorkSourceContentProto nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nodes(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.os.WorkSourceProto.WorkChain)
  return target;
}

size_t WorkSourceProto_WorkChain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.WorkSourceProto.WorkChain)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.os.WorkSourceProto.WorkSourceContentProto nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkSourceProto_WorkChain::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.os.WorkSourceProto.WorkChain)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkSourceProto_WorkChain* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkSourceProto_WorkChain>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.os.WorkSourceProto.WorkChain)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.os.WorkSourceProto.WorkChain)
    MergeFrom(*source);
  }
}

void WorkSourceProto_WorkChain::MergeFrom(const WorkSourceProto_WorkChain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.WorkSourceProto.WorkChain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
}

void WorkSourceProto_WorkChain::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.os.WorkSourceProto.WorkChain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkSourceProto_WorkChain::CopyFrom(const WorkSourceProto_WorkChain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.WorkSourceProto.WorkChain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkSourceProto_WorkChain::IsInitialized() const {
  return true;
}

void WorkSourceProto_WorkChain::InternalSwap(WorkSourceProto_WorkChain* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkSourceProto_WorkChain::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WorkSourceProto::InitAsDefaultInstance() {
}
class WorkSourceProto::_Internal {
 public:
  using HasBits = decltype(std::declval<WorkSourceProto>()._has_bits_);
};

WorkSourceProto::WorkSourceProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.WorkSourceProto)
}
WorkSourceProto::WorkSourceProto(const WorkSourceProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      work_source_contents_(from.work_source_contents_),
      work_chains_(from.work_chains_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:android.os.WorkSourceProto)
}

void WorkSourceProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto.base);
}

WorkSourceProto::~WorkSourceProto() {
  // @@protoc_insertion_point(destructor:android.os.WorkSourceProto)
  SharedDtor();
}

void WorkSourceProto::SharedDtor() {
}

void WorkSourceProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkSourceProto& WorkSourceProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto.base);
  return *internal_default_instance();
}


void WorkSourceProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.WorkSourceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  work_source_contents_.Clear();
  work_chains_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WorkSourceProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.os.WorkSourceProto.WorkSourceContentProto work_source_contents = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_work_source_contents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .android.os.WorkSourceProto.WorkChain work_chains = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_work_chains(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WorkSourceProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.os.WorkSourceProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.os.WorkSourceProto.WorkSourceContentProto work_source_contents = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_work_source_contents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.os.WorkSourceProto.WorkChain work_chains = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_work_chains()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.WorkSourceProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.WorkSourceProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WorkSourceProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.WorkSourceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.os.WorkSourceProto.WorkSourceContentProto work_source_contents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->work_source_contents_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->work_source_contents(static_cast<int>(i)),
      output);
  }

  // repeated .android.os.WorkSourceProto.WorkChain work_chains = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->work_chains_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->work_chains(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.os.WorkSourceProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkSourceProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.os.WorkSourceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.os.WorkSourceProto.WorkSourceContentProto work_source_contents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->work_source_contents_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->work_source_contents(static_cast<int>(i)), target);
  }

  // repeated .android.os.WorkSourceProto.WorkChain work_chains = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->work_chains_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->work_chains(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.os.WorkSourceProto)
  return target;
}

size_t WorkSourceProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.WorkSourceProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.os.WorkSourceProto.WorkSourceContentProto work_source_contents = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->work_source_contents_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->work_source_contents(static_cast<int>(i)));
    }
  }

  // repeated .android.os.WorkSourceProto.WorkChain work_chains = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->work_chains_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->work_chains(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkSourceProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.os.WorkSourceProto)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkSourceProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkSourceProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.os.WorkSourceProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.os.WorkSourceProto)
    MergeFrom(*source);
  }
}

void WorkSourceProto::MergeFrom(const WorkSourceProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.WorkSourceProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  work_source_contents_.MergeFrom(from.work_source_contents_);
  work_chains_.MergeFrom(from.work_chains_);
}

void WorkSourceProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.os.WorkSourceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkSourceProto::CopyFrom(const WorkSourceProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.WorkSourceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkSourceProto::IsInitialized() const {
  return true;
}

void WorkSourceProto::InternalSwap(WorkSourceProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&work_source_contents_)->InternalSwap(CastToBase(&other->work_source_contents_));
  CastToBase(&work_chains_)->InternalSwap(CastToBase(&other->work_chains_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkSourceProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::os::WorkSourceProto_WorkSourceContentProto* Arena::CreateMaybeMessage< ::android::os::WorkSourceProto_WorkSourceContentProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::WorkSourceProto_WorkSourceContentProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::WorkSourceProto_WorkChain* Arena::CreateMaybeMessage< ::android::os::WorkSourceProto_WorkChain >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::WorkSourceProto_WorkChain >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::WorkSourceProto* Arena::CreateMaybeMessage< ::android::os::WorkSourceProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::WorkSourceProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
