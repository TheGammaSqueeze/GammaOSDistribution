// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/remote_animation_target.proto

#include "frameworks/base/core/proto/android/view/remote_animation_target.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fwindow_5fconfiguration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WindowConfigurationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fwindow_5fconfiguration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2fpoint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PointProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2fpoint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RectProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fsurfacecontrol_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SurfaceControlProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fsurfacecontrol_2eproto;
namespace android {
namespace view {
class RemoteAnimationTargetProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoteAnimationTargetProto> _instance;
} _RemoteAnimationTargetProto_default_instance_;
}  // namespace view
}  // namespace android
static void InitDefaultsscc_info_RemoteAnimationTargetProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::_RemoteAnimationTargetProto_default_instance_;
    new (ptr) ::android::view::RemoteAnimationTargetProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::RemoteAnimationTargetProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_RemoteAnimationTargetProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsscc_info_RemoteAnimationTargetProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto}, {
      &scc_info_SurfaceControlProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fsurfacecontrol_2eproto.base,
      &scc_info_RectProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto.base,
      &scc_info_PointProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2fpoint_2eproto.base,
      &scc_info_WindowConfigurationProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fwindow_5fconfiguration_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, task_id_),
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, mode_),
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, leash_),
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, is_translucent_),
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, clip_rect_),
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, content_insets_),
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, prefix_order_index_),
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, position_),
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, source_container_bounds_),
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, window_configuration_),
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, start_leash_),
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, start_bounds_),
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, local_bounds_),
  PROTOBUF_FIELD_OFFSET(::android::view::RemoteAnimationTargetProto, screen_space_bounds_),
  10,
  11,
  0,
  12,
  1,
  2,
  13,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 19, sizeof(::android::view::RemoteAnimationTargetProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::view::_RemoteAnimationTargetProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nEframeworks/base/core/proto/android/vie"
  "w/remote_animation_target.proto\022\014android"
  ".view\032Aframeworks/base/core/proto/androi"
  "d/app/window_configuration.proto\0327framew"
  "orks/base/core/proto/android/graphics/po"
  "int.proto\0326frameworks/base/core/proto/an"
  "droid/graphics/rect.proto\032<frameworks/ba"
  "se/core/proto/android/view/surfacecontro"
  "l.proto\0320frameworks/base/core/proto/andr"
  "oid/privacy.proto\"\234\005\n\032RemoteAnimationTar"
  "getProto\022\017\n\007task_id\030\001 \001(\005\022\014\n\004mode\030\002 \001(\005\022"
  "0\n\005leash\030\003 \001(\0132!.android.view.SurfaceCon"
  "trolProto\022\026\n\016is_translucent\030\004 \001(\010\022.\n\tcli"
  "p_rect\030\005 \001(\0132\033.android.graphics.RectProt"
  "o\0223\n\016content_insets\030\006 \001(\0132\033.android.grap"
  "hics.RectProto\022\032\n\022prefix_order_index\030\007 \001"
  "(\005\022.\n\010position\030\010 \001(\0132\034.android.graphics."
  "PointProto\022<\n\027source_container_bounds\030\t "
  "\001(\0132\033.android.graphics.RectProto\022C\n\024wind"
  "ow_configuration\030\n \001(\0132%.android.app.Win"
  "dowConfigurationProto\0226\n\013start_leash\030\013 \001"
  "(\0132!.android.view.SurfaceControlProto\0221\n"
  "\014start_bounds\030\014 \001(\0132\033.android.graphics.R"
  "ectProto\0221\n\014local_bounds\030\r \001(\0132\033.android"
  ".graphics.RectProto\0228\n\023screen_space_boun"
  "ds\030\016 \001(\0132\033.android.graphics.RectProto:\t\232"
  "\237\325\207\003\003\010\310\001B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto_deps[5] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fwindow_5fconfiguration_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2fpoint_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fsurfacecontrol_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto_sccs[1] = {
  &scc_info_RemoteAnimationTargetProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto, "frameworks/base/core/proto/android/view/remote_animation_target.proto", 1052,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto_deps, 1, 5,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto, 1, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto), true);
namespace android {
namespace view {

// ===================================================================

void RemoteAnimationTargetProto::InitAsDefaultInstance() {
  ::android::view::_RemoteAnimationTargetProto_default_instance_._instance.get_mutable()->leash_ = const_cast< ::android::view::SurfaceControlProto*>(
      ::android::view::SurfaceControlProto::internal_default_instance());
  ::android::view::_RemoteAnimationTargetProto_default_instance_._instance.get_mutable()->clip_rect_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::android::view::_RemoteAnimationTargetProto_default_instance_._instance.get_mutable()->content_insets_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::android::view::_RemoteAnimationTargetProto_default_instance_._instance.get_mutable()->position_ = const_cast< ::android::graphics::PointProto*>(
      ::android::graphics::PointProto::internal_default_instance());
  ::android::view::_RemoteAnimationTargetProto_default_instance_._instance.get_mutable()->source_container_bounds_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::android::view::_RemoteAnimationTargetProto_default_instance_._instance.get_mutable()->window_configuration_ = const_cast< ::android::app::WindowConfigurationProto*>(
      ::android::app::WindowConfigurationProto::internal_default_instance());
  ::android::view::_RemoteAnimationTargetProto_default_instance_._instance.get_mutable()->start_leash_ = const_cast< ::android::view::SurfaceControlProto*>(
      ::android::view::SurfaceControlProto::internal_default_instance());
  ::android::view::_RemoteAnimationTargetProto_default_instance_._instance.get_mutable()->start_bounds_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::android::view::_RemoteAnimationTargetProto_default_instance_._instance.get_mutable()->local_bounds_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::android::view::_RemoteAnimationTargetProto_default_instance_._instance.get_mutable()->screen_space_bounds_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
}
class RemoteAnimationTargetProto::_Internal {
 public:
  using HasBits = decltype(std::declval<RemoteAnimationTargetProto>()._has_bits_);
  static void set_has_task_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::android::view::SurfaceControlProto& leash(const RemoteAnimationTargetProto* msg);
  static void set_has_leash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_translucent(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::android::graphics::RectProto& clip_rect(const RemoteAnimationTargetProto* msg);
  static void set_has_clip_rect(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::android::graphics::RectProto& content_insets(const RemoteAnimationTargetProto* msg);
  static void set_has_content_insets(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_prefix_order_index(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::android::graphics::PointProto& position(const RemoteAnimationTargetProto* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::android::graphics::RectProto& source_container_bounds(const RemoteAnimationTargetProto* msg);
  static void set_has_source_container_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::android::app::WindowConfigurationProto& window_configuration(const RemoteAnimationTargetProto* msg);
  static void set_has_window_configuration(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::android::view::SurfaceControlProto& start_leash(const RemoteAnimationTargetProto* msg);
  static void set_has_start_leash(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::android::graphics::RectProto& start_bounds(const RemoteAnimationTargetProto* msg);
  static void set_has_start_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::android::graphics::RectProto& local_bounds(const RemoteAnimationTargetProto* msg);
  static void set_has_local_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::android::graphics::RectProto& screen_space_bounds(const RemoteAnimationTargetProto* msg);
  static void set_has_screen_space_bounds(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

const ::android::view::SurfaceControlProto&
RemoteAnimationTargetProto::_Internal::leash(const RemoteAnimationTargetProto* msg) {
  return *msg->leash_;
}
const ::android::graphics::RectProto&
RemoteAnimationTargetProto::_Internal::clip_rect(const RemoteAnimationTargetProto* msg) {
  return *msg->clip_rect_;
}
const ::android::graphics::RectProto&
RemoteAnimationTargetProto::_Internal::content_insets(const RemoteAnimationTargetProto* msg) {
  return *msg->content_insets_;
}
const ::android::graphics::PointProto&
RemoteAnimationTargetProto::_Internal::position(const RemoteAnimationTargetProto* msg) {
  return *msg->position_;
}
const ::android::graphics::RectProto&
RemoteAnimationTargetProto::_Internal::source_container_bounds(const RemoteAnimationTargetProto* msg) {
  return *msg->source_container_bounds_;
}
const ::android::app::WindowConfigurationProto&
RemoteAnimationTargetProto::_Internal::window_configuration(const RemoteAnimationTargetProto* msg) {
  return *msg->window_configuration_;
}
const ::android::view::SurfaceControlProto&
RemoteAnimationTargetProto::_Internal::start_leash(const RemoteAnimationTargetProto* msg) {
  return *msg->start_leash_;
}
const ::android::graphics::RectProto&
RemoteAnimationTargetProto::_Internal::start_bounds(const RemoteAnimationTargetProto* msg) {
  return *msg->start_bounds_;
}
const ::android::graphics::RectProto&
RemoteAnimationTargetProto::_Internal::local_bounds(const RemoteAnimationTargetProto* msg) {
  return *msg->local_bounds_;
}
const ::android::graphics::RectProto&
RemoteAnimationTargetProto::_Internal::screen_space_bounds(const RemoteAnimationTargetProto* msg) {
  return *msg->screen_space_bounds_;
}
void RemoteAnimationTargetProto::clear_leash() {
  if (leash_ != nullptr) leash_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void RemoteAnimationTargetProto::clear_clip_rect() {
  if (clip_rect_ != nullptr) clip_rect_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void RemoteAnimationTargetProto::clear_content_insets() {
  if (content_insets_ != nullptr) content_insets_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void RemoteAnimationTargetProto::clear_position() {
  if (position_ != nullptr) position_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void RemoteAnimationTargetProto::clear_source_container_bounds() {
  if (source_container_bounds_ != nullptr) source_container_bounds_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void RemoteAnimationTargetProto::clear_window_configuration() {
  if (window_configuration_ != nullptr) window_configuration_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
void RemoteAnimationTargetProto::clear_start_leash() {
  if (start_leash_ != nullptr) start_leash_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
void RemoteAnimationTargetProto::clear_start_bounds() {
  if (start_bounds_ != nullptr) start_bounds_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
void RemoteAnimationTargetProto::clear_local_bounds() {
  if (local_bounds_ != nullptr) local_bounds_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
void RemoteAnimationTargetProto::clear_screen_space_bounds() {
  if (screen_space_bounds_ != nullptr) screen_space_bounds_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
RemoteAnimationTargetProto::RemoteAnimationTargetProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.RemoteAnimationTargetProto)
}
RemoteAnimationTargetProto::RemoteAnimationTargetProto(const RemoteAnimationTargetProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_leash()) {
    leash_ = new ::android::view::SurfaceControlProto(*from.leash_);
  } else {
    leash_ = nullptr;
  }
  if (from.has_clip_rect()) {
    clip_rect_ = new ::android::graphics::RectProto(*from.clip_rect_);
  } else {
    clip_rect_ = nullptr;
  }
  if (from.has_content_insets()) {
    content_insets_ = new ::android::graphics::RectProto(*from.content_insets_);
  } else {
    content_insets_ = nullptr;
  }
  if (from.has_position()) {
    position_ = new ::android::graphics::PointProto(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from.has_source_container_bounds()) {
    source_container_bounds_ = new ::android::graphics::RectProto(*from.source_container_bounds_);
  } else {
    source_container_bounds_ = nullptr;
  }
  if (from.has_window_configuration()) {
    window_configuration_ = new ::android::app::WindowConfigurationProto(*from.window_configuration_);
  } else {
    window_configuration_ = nullptr;
  }
  if (from.has_start_leash()) {
    start_leash_ = new ::android::view::SurfaceControlProto(*from.start_leash_);
  } else {
    start_leash_ = nullptr;
  }
  if (from.has_start_bounds()) {
    start_bounds_ = new ::android::graphics::RectProto(*from.start_bounds_);
  } else {
    start_bounds_ = nullptr;
  }
  if (from.has_local_bounds()) {
    local_bounds_ = new ::android::graphics::RectProto(*from.local_bounds_);
  } else {
    local_bounds_ = nullptr;
  }
  if (from.has_screen_space_bounds()) {
    screen_space_bounds_ = new ::android::graphics::RectProto(*from.screen_space_bounds_);
  } else {
    screen_space_bounds_ = nullptr;
  }
  ::memcpy(&task_id_, &from.task_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&prefix_order_index_) -
    reinterpret_cast<char*>(&task_id_)) + sizeof(prefix_order_index_));
  // @@protoc_insertion_point(copy_constructor:android.view.RemoteAnimationTargetProto)
}

void RemoteAnimationTargetProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoteAnimationTargetProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto.base);
  ::memset(&leash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prefix_order_index_) -
      reinterpret_cast<char*>(&leash_)) + sizeof(prefix_order_index_));
}

RemoteAnimationTargetProto::~RemoteAnimationTargetProto() {
  // @@protoc_insertion_point(destructor:android.view.RemoteAnimationTargetProto)
  SharedDtor();
}

void RemoteAnimationTargetProto::SharedDtor() {
  if (this != internal_default_instance()) delete leash_;
  if (this != internal_default_instance()) delete clip_rect_;
  if (this != internal_default_instance()) delete content_insets_;
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete source_container_bounds_;
  if (this != internal_default_instance()) delete window_configuration_;
  if (this != internal_default_instance()) delete start_leash_;
  if (this != internal_default_instance()) delete start_bounds_;
  if (this != internal_default_instance()) delete local_bounds_;
  if (this != internal_default_instance()) delete screen_space_bounds_;
}

void RemoteAnimationTargetProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoteAnimationTargetProto& RemoteAnimationTargetProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoteAnimationTargetProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fremote_5fanimation_5ftarget_2eproto.base);
  return *internal_default_instance();
}


void RemoteAnimationTargetProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.RemoteAnimationTargetProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(leash_ != nullptr);
      leash_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(clip_rect_ != nullptr);
      clip_rect_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(content_insets_ != nullptr);
      content_insets_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(position_ != nullptr);
      position_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(source_container_bounds_ != nullptr);
      source_container_bounds_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(window_configuration_ != nullptr);
      window_configuration_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(start_leash_ != nullptr);
      start_leash_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(start_bounds_ != nullptr);
      start_bounds_->Clear();
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(local_bounds_ != nullptr);
      local_bounds_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(screen_space_bounds_ != nullptr);
      screen_space_bounds_->Clear();
    }
  }
  if (cached_has_bits & 0x00003c00u) {
    ::memset(&task_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&prefix_order_index_) -
        reinterpret_cast<char*>(&task_id_)) + sizeof(prefix_order_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RemoteAnimationTargetProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 task_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_task_id(&has_bits);
          task_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 mode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_mode(&has_bits);
          mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.SurfaceControlProto leash = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_leash(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_translucent = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_is_translucent(&has_bits);
          is_translucent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto clip_rect = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_clip_rect(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto content_insets = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_content_insets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 prefix_order_index = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_prefix_order_index(&has_bits);
          prefix_order_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.PointProto position = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto source_container_bounds = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_source_container_bounds(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.app.WindowConfigurationProto window_configuration = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_window_configuration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.SurfaceControlProto start_leash = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(mutable_start_leash(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto start_bounds = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(mutable_start_bounds(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto local_bounds = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(mutable_local_bounds(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto screen_space_bounds = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(mutable_screen_space_bounds(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RemoteAnimationTargetProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.view.RemoteAnimationTargetProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 task_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_task_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mode = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_mode(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.SurfaceControlProto leash = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_leash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_translucent = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_is_translucent(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_translucent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto clip_rect = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_clip_rect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto content_insets = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_content_insets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 prefix_order_index = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_prefix_order_index(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &prefix_order_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.PointProto position = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto source_container_bounds = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_source_container_bounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.app.WindowConfigurationProto window_configuration = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_window_configuration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.SurfaceControlProto start_leash = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_start_leash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto start_bounds = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_start_bounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto local_bounds = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_local_bounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto screen_space_bounds = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (114 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_screen_space_bounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.RemoteAnimationTargetProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.RemoteAnimationTargetProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RemoteAnimationTargetProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.RemoteAnimationTargetProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 task_id = 1;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }

  // optional int32 mode = 2;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->mode(), output);
  }

  // optional .android.view.SurfaceControlProto leash = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::leash(this), output);
  }

  // optional bool is_translucent = 4;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(4, this->is_translucent(), output);
  }

  // optional .android.graphics.RectProto clip_rect = 5;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::clip_rect(this), output);
  }

  // optional .android.graphics.RectProto content_insets = 6;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::content_insets(this), output);
  }

  // optional int32 prefix_order_index = 7;
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->prefix_order_index(), output);
  }

  // optional .android.graphics.PointProto position = 8;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, _Internal::position(this), output);
  }

  // optional .android.graphics.RectProto source_container_bounds = 9;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, _Internal::source_container_bounds(this), output);
  }

  // optional .android.app.WindowConfigurationProto window_configuration = 10;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, _Internal::window_configuration(this), output);
  }

  // optional .android.view.SurfaceControlProto start_leash = 11;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, _Internal::start_leash(this), output);
  }

  // optional .android.graphics.RectProto start_bounds = 12;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, _Internal::start_bounds(this), output);
  }

  // optional .android.graphics.RectProto local_bounds = 13;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, _Internal::local_bounds(this), output);
  }

  // optional .android.graphics.RectProto screen_space_bounds = 14;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, _Internal::screen_space_bounds(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.view.RemoteAnimationTargetProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoteAnimationTargetProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.view.RemoteAnimationTargetProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 task_id = 1;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }

  // optional int32 mode = 2;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->mode(), target);
  }

  // optional .android.view.SurfaceControlProto leash = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::leash(this), target);
  }

  // optional bool is_translucent = 4;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->is_translucent(), target);
  }

  // optional .android.graphics.RectProto clip_rect = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::clip_rect(this), target);
  }

  // optional .android.graphics.RectProto content_insets = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::content_insets(this), target);
  }

  // optional int32 prefix_order_index = 7;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->prefix_order_index(), target);
  }

  // optional .android.graphics.PointProto position = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::position(this), target);
  }

  // optional .android.graphics.RectProto source_container_bounds = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::source_container_bounds(this), target);
  }

  // optional .android.app.WindowConfigurationProto window_configuration = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, _Internal::window_configuration(this), target);
  }

  // optional .android.view.SurfaceControlProto start_leash = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, _Internal::start_leash(this), target);
  }

  // optional .android.graphics.RectProto start_bounds = 12;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, _Internal::start_bounds(this), target);
  }

  // optional .android.graphics.RectProto local_bounds = 13;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, _Internal::local_bounds(this), target);
  }

  // optional .android.graphics.RectProto screen_space_bounds = 14;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, _Internal::screen_space_bounds(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.view.RemoteAnimationTargetProto)
  return target;
}

size_t RemoteAnimationTargetProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.RemoteAnimationTargetProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .android.view.SurfaceControlProto leash = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *leash_);
    }

    // optional .android.graphics.RectProto clip_rect = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *clip_rect_);
    }

    // optional .android.graphics.RectProto content_insets = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *content_insets_);
    }

    // optional .android.graphics.PointProto position = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *position_);
    }

    // optional .android.graphics.RectProto source_container_bounds = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *source_container_bounds_);
    }

    // optional .android.app.WindowConfigurationProto window_configuration = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *window_configuration_);
    }

    // optional .android.view.SurfaceControlProto start_leash = 11;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *start_leash_);
    }

    // optional .android.graphics.RectProto start_bounds = 12;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *start_bounds_);
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional .android.graphics.RectProto local_bounds = 13;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *local_bounds_);
    }

    // optional .android.graphics.RectProto screen_space_bounds = 14;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *screen_space_bounds_);
    }

    // optional int32 task_id = 1;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->task_id());
    }

    // optional int32 mode = 2;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->mode());
    }

    // optional bool is_translucent = 4;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional int32 prefix_order_index = 7;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->prefix_order_index());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoteAnimationTargetProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.view.RemoteAnimationTargetProto)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoteAnimationTargetProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoteAnimationTargetProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.view.RemoteAnimationTargetProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.view.RemoteAnimationTargetProto)
    MergeFrom(*source);
  }
}

void RemoteAnimationTargetProto::MergeFrom(const RemoteAnimationTargetProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.RemoteAnimationTargetProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_leash()->::android::view::SurfaceControlProto::MergeFrom(from.leash());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_clip_rect()->::android::graphics::RectProto::MergeFrom(from.clip_rect());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_content_insets()->::android::graphics::RectProto::MergeFrom(from.content_insets());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_position()->::android::graphics::PointProto::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_source_container_bounds()->::android::graphics::RectProto::MergeFrom(from.source_container_bounds());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_window_configuration()->::android::app::WindowConfigurationProto::MergeFrom(from.window_configuration());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_start_leash()->::android::view::SurfaceControlProto::MergeFrom(from.start_leash());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_start_bounds()->::android::graphics::RectProto::MergeFrom(from.start_bounds());
    }
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_local_bounds()->::android::graphics::RectProto::MergeFrom(from.local_bounds());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_screen_space_bounds()->::android::graphics::RectProto::MergeFrom(from.screen_space_bounds());
    }
    if (cached_has_bits & 0x00000400u) {
      task_id_ = from.task_id_;
    }
    if (cached_has_bits & 0x00000800u) {
      mode_ = from.mode_;
    }
    if (cached_has_bits & 0x00001000u) {
      is_translucent_ = from.is_translucent_;
    }
    if (cached_has_bits & 0x00002000u) {
      prefix_order_index_ = from.prefix_order_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RemoteAnimationTargetProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.view.RemoteAnimationTargetProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoteAnimationTargetProto::CopyFrom(const RemoteAnimationTargetProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.RemoteAnimationTargetProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoteAnimationTargetProto::IsInitialized() const {
  return true;
}

void RemoteAnimationTargetProto::InternalSwap(RemoteAnimationTargetProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(leash_, other->leash_);
  swap(clip_rect_, other->clip_rect_);
  swap(content_insets_, other->content_insets_);
  swap(position_, other->position_);
  swap(source_container_bounds_, other->source_container_bounds_);
  swap(window_configuration_, other->window_configuration_);
  swap(start_leash_, other->start_leash_);
  swap(start_bounds_, other->start_bounds_);
  swap(local_bounds_, other->local_bounds_);
  swap(screen_space_bounds_, other->screen_space_bounds_);
  swap(task_id_, other->task_id_);
  swap(mode_, other->mode_);
  swap(is_translucent_, other->is_translucent_);
  swap(prefix_order_index_, other->prefix_order_index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoteAnimationTargetProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::view::RemoteAnimationTargetProto* Arena::CreateMaybeMessage< ::android::view::RemoteAnimationTargetProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::RemoteAnimationTargetProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
