// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/app/notification_channel.proto

#include "frameworks/base/core/proto/android/app/notification_channel.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fmedia_2faudioattributes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AudioAttributesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fmedia_2faudioattributes_2eproto;
namespace android {
namespace app {
class NotificationChannelProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NotificationChannelProto> _instance;
} _NotificationChannelProto_default_instance_;
}  // namespace app
}  // namespace android
static void InitDefaultsscc_info_NotificationChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::app::_NotificationChannelProto_default_instance_;
    new (ptr) ::android::app::NotificationChannelProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::app::NotificationChannelProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NotificationChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_NotificationChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto}, {
      &scc_info_AudioAttributesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fmedia_2faudioattributes_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, id_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, name_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, description_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, importance_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, can_bypass_dnd_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, lockscreen_visibility_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, sound_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, use_lights_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, light_color_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, vibration_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, user_locked_fields_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, is_vibration_enabled_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, show_badge_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, is_deleted_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, group_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, audio_attributes_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, is_blockable_system_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, fg_service_shown_),
  PROTOBUF_FIELD_OFFSET(::android::app::NotificationChannelProto, allow_app_overlay_),
  0,
  1,
  2,
  6,
  9,
  7,
  3,
  10,
  8,
  ~0u,
  13,
  11,
  12,
  14,
  4,
  5,
  15,
  16,
  17,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 24, sizeof(::android::app::NotificationChannelProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::app::_NotificationChannelProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nAframeworks/base/core/proto/android/app"
  "/notification_channel.proto\022\013android.app"
  "\032>frameworks/base/core/proto/android/med"
  "ia/audioattributes.proto\0320frameworks/bas"
  "e/core/proto/android/privacy.proto\"\236\004\n\030N"
  "otificationChannelProto\022\024\n\002id\030\001 \001(\tB\010\232\237\325"
  "\207\003\002\010d\022\026\n\004name\030\002 \001(\tB\010\232\237\325\207\003\002\010d\022\035\n\013descrip"
  "tion\030\003 \001(\tB\010\232\237\325\207\003\002\010d\022\022\n\nimportance\030\004 \001(\005"
  "\022\026\n\016can_bypass_dnd\030\005 \001(\010\022\035\n\025lockscreen_v"
  "isibility\030\006 \001(\005\022\027\n\005sound\030\007 \001(\tB\010\232\237\325\207\003\002\010d"
  "\022\022\n\nuse_lights\030\010 \001(\010\022\023\n\013light_color\030\t \001("
  "\005\022\021\n\tvibration\030\n \003(\003\022\032\n\022user_locked_fiel"
  "ds\030\013 \001(\005\022\034\n\024is_vibration_enabled\030\014 \001(\010\022\022"
  "\n\nshow_badge\030\r \001(\010\022\022\n\nis_deleted\030\016 \001(\010\022\027"
  "\n\005group\030\017 \001(\tB\010\232\237\325\207\003\002\010d\022=\n\020audio_attribu"
  "tes\030\020 \001(\0132#.android.media.AudioAttribute"
  "sProto\022\033\n\023is_blockable_system\030\021 \001(\010\022\030\n\020f"
  "g_service_shown\030\022 \001(\010\022\031\n\021allow_app_overl"
  "ay\030\023 \001(\010:\t\232\237\325\207\003\003\010\310\001B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto_deps[2] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fmedia_2faudioattributes_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto_sccs[1] = {
  &scc_info_NotificationChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto, "frameworks/base/core/proto/android/app/notification_channel.proto", 743,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto, 1, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto), true);
namespace android {
namespace app {

// ===================================================================

void NotificationChannelProto::InitAsDefaultInstance() {
  ::android::app::_NotificationChannelProto_default_instance_._instance.get_mutable()->audio_attributes_ = const_cast< ::android::media::AudioAttributesProto*>(
      ::android::media::AudioAttributesProto::internal_default_instance());
}
class NotificationChannelProto::_Internal {
 public:
  using HasBits = decltype(std::declval<NotificationChannelProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_importance(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_can_bypass_dnd(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_lockscreen_visibility(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_sound(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_use_lights(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_light_color(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_user_locked_fields(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_is_vibration_enabled(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_show_badge(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_is_deleted(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_group(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::android::media::AudioAttributesProto& audio_attributes(const NotificationChannelProto* msg);
  static void set_has_audio_attributes(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_is_blockable_system(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_fg_service_shown(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_allow_app_overlay(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
};

const ::android::media::AudioAttributesProto&
NotificationChannelProto::_Internal::audio_attributes(const NotificationChannelProto* msg) {
  return *msg->audio_attributes_;
}
void NotificationChannelProto::clear_audio_attributes() {
  if (audio_attributes_ != nullptr) audio_attributes_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
NotificationChannelProto::NotificationChannelProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.app.NotificationChannelProto)
}
NotificationChannelProto::NotificationChannelProto(const NotificationChannelProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      vibration_(from.vibration_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  sound_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_sound()) {
    sound_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sound_);
  }
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_group()) {
    group_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  if (from.has_audio_attributes()) {
    audio_attributes_ = new ::android::media::AudioAttributesProto(*from.audio_attributes_);
  } else {
    audio_attributes_ = nullptr;
  }
  ::memcpy(&importance_, &from.importance_,
    static_cast<size_t>(reinterpret_cast<char*>(&allow_app_overlay_) -
    reinterpret_cast<char*>(&importance_)) + sizeof(allow_app_overlay_));
  // @@protoc_insertion_point(copy_constructor:android.app.NotificationChannelProto)
}

void NotificationChannelProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NotificationChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sound_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&audio_attributes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_app_overlay_) -
      reinterpret_cast<char*>(&audio_attributes_)) + sizeof(allow_app_overlay_));
}

NotificationChannelProto::~NotificationChannelProto() {
  // @@protoc_insertion_point(destructor:android.app.NotificationChannelProto)
  SharedDtor();
}

void NotificationChannelProto::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sound_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete audio_attributes_;
}

void NotificationChannelProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotificationChannelProto& NotificationChannelProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NotificationChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto.base);
  return *internal_default_instance();
}


void NotificationChannelProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.app.NotificationChannelProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vibration_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      sound_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      group_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(audio_attributes_ != nullptr);
      audio_attributes_->Clear();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&importance_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lockscreen_visibility_) -
        reinterpret_cast<char*>(&importance_)) + sizeof(lockscreen_visibility_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&light_color_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_blockable_system_) -
        reinterpret_cast<char*>(&light_color_)) + sizeof(is_blockable_system_));
  }
  if (cached_has_bits & 0x00030000u) {
    ::memset(&fg_service_shown_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&allow_app_overlay_) -
        reinterpret_cast<char*>(&fg_service_shown_)) + sizeof(allow_app_overlay_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NotificationChannelProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string id = 1 [(.android.privacy) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_id(), ptr, ctx, "android.app.NotificationChannelProto.id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2 [(.android.privacy) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_name(), ptr, ctx, "android.app.NotificationChannelProto.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string description = 3 [(.android.privacy) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_description(), ptr, ctx, "android.app.NotificationChannelProto.description");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 importance = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_importance(&has_bits);
          importance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool can_bypass_dnd = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_can_bypass_dnd(&has_bits);
          can_bypass_dnd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 lockscreen_visibility = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_lockscreen_visibility(&has_bits);
          lockscreen_visibility_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string sound = 7 [(.android.privacy) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_sound(), ptr, ctx, "android.app.NotificationChannelProto.sound");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool use_lights = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_use_lights(&has_bits);
          use_lights_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 light_color = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_light_color(&has_bits);
          light_color_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 vibration = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ptr -= 1;
          do {
            ptr += 1;
            add_vibration(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 80);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(mutable_vibration(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 user_locked_fields = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_user_locked_fields(&has_bits);
          user_locked_fields_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_vibration_enabled = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_is_vibration_enabled(&has_bits);
          is_vibration_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool show_badge = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_show_badge(&has_bits);
          show_badge_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_deleted = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_is_deleted(&has_bits);
          is_deleted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string group = 15 [(.android.privacy) = {
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_group(), ptr, ctx, "android.app.NotificationChannelProto.group");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.media.AudioAttributesProto audio_attributes = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(mutable_audio_attributes(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_blockable_system = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_is_blockable_system(&has_bits);
          is_blockable_system_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool fg_service_shown = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_fg_service_shown(&has_bits);
          fg_service_shown_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool allow_app_overlay = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          _Internal::set_has_allow_app_overlay(&has_bits);
          allow_app_overlay_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NotificationChannelProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.app.NotificationChannelProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1 [(.android.privacy) = {
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.app.NotificationChannelProto.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2 [(.android.privacy) = {
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.app.NotificationChannelProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 3 [(.android.privacy) = {
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.app.NotificationChannelProto.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 importance = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_importance(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &importance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool can_bypass_dnd = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_can_bypass_dnd(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_bypass_dnd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lockscreen_visibility = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_lockscreen_visibility(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &lockscreen_visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sound = 7 [(.android.privacy) = {
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_sound()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sound().data(), static_cast<int>(this->sound().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.app.NotificationChannelProto.sound");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_lights = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_use_lights(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_lights_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 light_color = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_light_color(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &light_color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 vibration = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 1, 80u, input, this->mutable_vibration())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_vibration())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_locked_fields = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          _Internal::set_has_user_locked_fields(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_locked_fields_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_vibration_enabled = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {
          _Internal::set_has_is_vibration_enabled(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_vibration_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_badge = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (104 & 0xFF)) {
          _Internal::set_has_show_badge(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_badge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_deleted = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          _Internal::set_has_is_deleted(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_deleted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string group = 15 [(.android.privacy) = {
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (122 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group().data(), static_cast<int>(this->group().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.app.NotificationChannelProto.group");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.media.AudioAttributesProto audio_attributes = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (130 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_audio_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_blockable_system = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (136 & 0xFF)) {
          _Internal::set_has_is_blockable_system(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_blockable_system_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool fg_service_shown = 18;
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (144 & 0xFF)) {
          _Internal::set_has_fg_service_shown(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fg_service_shown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool allow_app_overlay = 19;
      case 19: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (152 & 0xFF)) {
          _Internal::set_has_allow_app_overlay(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_app_overlay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.app.NotificationChannelProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.app.NotificationChannelProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NotificationChannelProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.app.NotificationChannelProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.app.NotificationChannelProto.id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string name = 2 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.app.NotificationChannelProto.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string description = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.app.NotificationChannelProto.description");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // optional int32 importance = 4;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->importance(), output);
  }

  // optional bool can_bypass_dnd = 5;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(5, this->can_bypass_dnd(), output);
  }

  // optional int32 lockscreen_visibility = 6;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->lockscreen_visibility(), output);
  }

  // optional string sound = 7 [(.android.privacy) = {
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sound().data(), static_cast<int>(this->sound().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.app.NotificationChannelProto.sound");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sound(), output);
  }

  // optional bool use_lights = 8;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(8, this->use_lights(), output);
  }

  // optional int32 light_color = 9;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(9, this->light_color(), output);
  }

  // repeated int64 vibration = 10;
  for (int i = 0, n = this->vibration_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(
      10, this->vibration(i), output);
  }

  // optional int32 user_locked_fields = 11;
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(11, this->user_locked_fields(), output);
  }

  // optional bool is_vibration_enabled = 12;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(12, this->is_vibration_enabled(), output);
  }

  // optional bool show_badge = 13;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(13, this->show_badge(), output);
  }

  // optional bool is_deleted = 14;
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(14, this->is_deleted(), output);
  }

  // optional string group = 15 [(.android.privacy) = {
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group().data(), static_cast<int>(this->group().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.app.NotificationChannelProto.group");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->group(), output);
  }

  // optional .android.media.AudioAttributesProto audio_attributes = 16;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, _Internal::audio_attributes(this), output);
  }

  // optional bool is_blockable_system = 17;
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(17, this->is_blockable_system(), output);
  }

  // optional bool fg_service_shown = 18;
  if (cached_has_bits & 0x00010000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(18, this->fg_service_shown(), output);
  }

  // optional bool allow_app_overlay = 19;
  if (cached_has_bits & 0x00020000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(19, this->allow_app_overlay(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.app.NotificationChannelProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* NotificationChannelProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.app.NotificationChannelProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.app.NotificationChannelProto.id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string name = 2 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.app.NotificationChannelProto.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string description = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.app.NotificationChannelProto.description");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // optional int32 importance = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->importance(), target);
  }

  // optional bool can_bypass_dnd = 5;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->can_bypass_dnd(), target);
  }

  // optional int32 lockscreen_visibility = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->lockscreen_visibility(), target);
  }

  // optional string sound = 7 [(.android.privacy) = {
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sound().data(), static_cast<int>(this->sound().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.app.NotificationChannelProto.sound");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        7, this->sound(), target);
  }

  // optional bool use_lights = 8;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->use_lights(), target);
  }

  // optional int32 light_color = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->light_color(), target);
  }

  // repeated int64 vibration = 10;
  target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
    WriteInt64ToArray(10, this->vibration_, target);

  // optional int32 user_locked_fields = 11;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->user_locked_fields(), target);
  }

  // optional bool is_vibration_enabled = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->is_vibration_enabled(), target);
  }

  // optional bool show_badge = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(13, this->show_badge(), target);
  }

  // optional bool is_deleted = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->is_deleted(), target);
  }

  // optional string group = 15 [(.android.privacy) = {
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group().data(), static_cast<int>(this->group().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.app.NotificationChannelProto.group");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        15, this->group(), target);
  }

  // optional .android.media.AudioAttributesProto audio_attributes = 16;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, _Internal::audio_attributes(this), target);
  }

  // optional bool is_blockable_system = 17;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->is_blockable_system(), target);
  }

  // optional bool fg_service_shown = 18;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(18, this->fg_service_shown(), target);
  }

  // optional bool allow_app_overlay = 19;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(19, this->allow_app_overlay(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.app.NotificationChannelProto)
  return target;
}

size_t NotificationChannelProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.app.NotificationChannelProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 vibration = 10;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->vibration_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->vibration_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string id = 1 [(.android.privacy) = {
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string name = 2 [(.android.privacy) = {
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string description = 3 [(.android.privacy) = {
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string sound = 7 [(.android.privacy) = {
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->sound());
    }

    // optional string group = 15 [(.android.privacy) = {
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->group());
    }

    // optional .android.media.AudioAttributesProto audio_attributes = 16;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *audio_attributes_);
    }

    // optional int32 importance = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->importance());
    }

    // optional int32 lockscreen_visibility = 6;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->lockscreen_visibility());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int32 light_color = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->light_color());
    }

    // optional bool can_bypass_dnd = 5;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

    // optional bool use_lights = 8;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool is_vibration_enabled = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool show_badge = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional int32 user_locked_fields = 11;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->user_locked_fields());
    }

    // optional bool is_deleted = 14;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 + 1;
    }

    // optional bool is_blockable_system = 17;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00030000u) {
    // optional bool fg_service_shown = 18;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool allow_app_overlay = 19;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotificationChannelProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.app.NotificationChannelProto)
  GOOGLE_DCHECK_NE(&from, this);
  const NotificationChannelProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NotificationChannelProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.app.NotificationChannelProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.app.NotificationChannelProto)
    MergeFrom(*source);
  }
}

void NotificationChannelProto::MergeFrom(const NotificationChannelProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.app.NotificationChannelProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vibration_.MergeFrom(from.vibration_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      sound_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sound_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      group_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.group_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_audio_attributes()->::android::media::AudioAttributesProto::MergeFrom(from.audio_attributes());
    }
    if (cached_has_bits & 0x00000040u) {
      importance_ = from.importance_;
    }
    if (cached_has_bits & 0x00000080u) {
      lockscreen_visibility_ = from.lockscreen_visibility_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      light_color_ = from.light_color_;
    }
    if (cached_has_bits & 0x00000200u) {
      can_bypass_dnd_ = from.can_bypass_dnd_;
    }
    if (cached_has_bits & 0x00000400u) {
      use_lights_ = from.use_lights_;
    }
    if (cached_has_bits & 0x00000800u) {
      is_vibration_enabled_ = from.is_vibration_enabled_;
    }
    if (cached_has_bits & 0x00001000u) {
      show_badge_ = from.show_badge_;
    }
    if (cached_has_bits & 0x00002000u) {
      user_locked_fields_ = from.user_locked_fields_;
    }
    if (cached_has_bits & 0x00004000u) {
      is_deleted_ = from.is_deleted_;
    }
    if (cached_has_bits & 0x00008000u) {
      is_blockable_system_ = from.is_blockable_system_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00030000u) {
    if (cached_has_bits & 0x00010000u) {
      fg_service_shown_ = from.fg_service_shown_;
    }
    if (cached_has_bits & 0x00020000u) {
      allow_app_overlay_ = from.allow_app_overlay_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NotificationChannelProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.app.NotificationChannelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotificationChannelProto::CopyFrom(const NotificationChannelProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.app.NotificationChannelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotificationChannelProto::IsInitialized() const {
  return true;
}

void NotificationChannelProto::InternalSwap(NotificationChannelProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  vibration_.InternalSwap(&other->vibration_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sound_.Swap(&other->sound_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  group_.Swap(&other->group_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(audio_attributes_, other->audio_attributes_);
  swap(importance_, other->importance_);
  swap(lockscreen_visibility_, other->lockscreen_visibility_);
  swap(light_color_, other->light_color_);
  swap(can_bypass_dnd_, other->can_bypass_dnd_);
  swap(use_lights_, other->use_lights_);
  swap(is_vibration_enabled_, other->is_vibration_enabled_);
  swap(show_badge_, other->show_badge_);
  swap(user_locked_fields_, other->user_locked_fields_);
  swap(is_deleted_, other->is_deleted_);
  swap(is_blockable_system_, other->is_blockable_system_);
  swap(fg_service_shown_, other->fg_service_shown_);
  swap(allow_app_overlay_, other->allow_app_overlay_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotificationChannelProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace app
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::app::NotificationChannelProto* Arena::CreateMaybeMessage< ::android::app::NotificationChannelProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::app::NotificationChannelProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
