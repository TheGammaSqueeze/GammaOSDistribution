// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/surfaceanimator.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsurfaceanimator_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsurfaceanimator_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/server/animationadapter.pb.h"
#include "frameworks/base/core/proto/android/view/surfacecontrol.pb.h"
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsurfaceanimator_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsurfaceanimator_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsurfaceanimator_2eproto;
namespace com {
namespace android {
namespace server {
namespace wm {
class SurfaceAnimatorProto;
class SurfaceAnimatorProtoDefaultTypeInternal;
extern SurfaceAnimatorProtoDefaultTypeInternal _SurfaceAnimatorProto_default_instance_;
}  // namespace wm
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::android::server::wm::SurfaceAnimatorProto* Arena::CreateMaybeMessage<::com::android::server::wm::SurfaceAnimatorProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace android {
namespace server {
namespace wm {

// ===================================================================

class SurfaceAnimatorProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.android.server.wm.SurfaceAnimatorProto) */ {
 public:
  SurfaceAnimatorProto();
  virtual ~SurfaceAnimatorProto();

  SurfaceAnimatorProto(const SurfaceAnimatorProto& from);
  SurfaceAnimatorProto(SurfaceAnimatorProto&& from) noexcept
    : SurfaceAnimatorProto() {
    *this = ::std::move(from);
  }

  inline SurfaceAnimatorProto& operator=(const SurfaceAnimatorProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SurfaceAnimatorProto& operator=(SurfaceAnimatorProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SurfaceAnimatorProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SurfaceAnimatorProto* internal_default_instance() {
    return reinterpret_cast<const SurfaceAnimatorProto*>(
               &_SurfaceAnimatorProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SurfaceAnimatorProto& a, SurfaceAnimatorProto& b) {
    a.Swap(&b);
  }
  inline void Swap(SurfaceAnimatorProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SurfaceAnimatorProto* New() const final {
    return CreateMaybeMessage<SurfaceAnimatorProto>(nullptr);
  }

  SurfaceAnimatorProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SurfaceAnimatorProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SurfaceAnimatorProto& from);
  void MergeFrom(const SurfaceAnimatorProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SurfaceAnimatorProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.wm.SurfaceAnimatorProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsurfaceanimator_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsurfaceanimator_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLeashFieldNumber = 1,
    kAnimationAdapterFieldNumber = 3,
    kAnimationStartDelayedFieldNumber = 2,
  };
  // optional .android.view.SurfaceControlProto leash = 1;
  bool has_leash() const;
  void clear_leash();
  const ::android::view::SurfaceControlProto& leash() const;
  ::android::view::SurfaceControlProto* release_leash();
  ::android::view::SurfaceControlProto* mutable_leash();
  void set_allocated_leash(::android::view::SurfaceControlProto* leash);

  // optional .com.android.server.wm.AnimationAdapterProto animation_adapter = 3;
  bool has_animation_adapter() const;
  void clear_animation_adapter();
  const ::com::android::server::wm::AnimationAdapterProto& animation_adapter() const;
  ::com::android::server::wm::AnimationAdapterProto* release_animation_adapter();
  ::com::android::server::wm::AnimationAdapterProto* mutable_animation_adapter();
  void set_allocated_animation_adapter(::com::android::server::wm::AnimationAdapterProto* animation_adapter);

  // optional bool animation_start_delayed = 2;
  bool has_animation_start_delayed() const;
  void clear_animation_start_delayed();
  bool animation_start_delayed() const;
  void set_animation_start_delayed(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.wm.SurfaceAnimatorProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::view::SurfaceControlProto* leash_;
  ::com::android::server::wm::AnimationAdapterProto* animation_adapter_;
  bool animation_start_delayed_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsurfaceanimator_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SurfaceAnimatorProto

// optional .android.view.SurfaceControlProto leash = 1;
inline bool SurfaceAnimatorProto::has_leash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::android::view::SurfaceControlProto& SurfaceAnimatorProto::leash() const {
  const ::android::view::SurfaceControlProto* p = leash_;
  // @@protoc_insertion_point(field_get:com.android.server.wm.SurfaceAnimatorProto.leash)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::view::SurfaceControlProto*>(
      &::android::view::_SurfaceControlProto_default_instance_);
}
inline ::android::view::SurfaceControlProto* SurfaceAnimatorProto::release_leash() {
  // @@protoc_insertion_point(field_release:com.android.server.wm.SurfaceAnimatorProto.leash)
  _has_bits_[0] &= ~0x00000001u;
  ::android::view::SurfaceControlProto* temp = leash_;
  leash_ = nullptr;
  return temp;
}
inline ::android::view::SurfaceControlProto* SurfaceAnimatorProto::mutable_leash() {
  _has_bits_[0] |= 0x00000001u;
  if (leash_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::view::SurfaceControlProto>(GetArenaNoVirtual());
    leash_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.wm.SurfaceAnimatorProto.leash)
  return leash_;
}
inline void SurfaceAnimatorProto::set_allocated_leash(::android::view::SurfaceControlProto* leash) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(leash_);
  }
  if (leash) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      leash = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, leash, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  leash_ = leash;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.wm.SurfaceAnimatorProto.leash)
}

// optional bool animation_start_delayed = 2;
inline bool SurfaceAnimatorProto::has_animation_start_delayed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SurfaceAnimatorProto::clear_animation_start_delayed() {
  animation_start_delayed_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool SurfaceAnimatorProto::animation_start_delayed() const {
  // @@protoc_insertion_point(field_get:com.android.server.wm.SurfaceAnimatorProto.animation_start_delayed)
  return animation_start_delayed_;
}
inline void SurfaceAnimatorProto::set_animation_start_delayed(bool value) {
  _has_bits_[0] |= 0x00000004u;
  animation_start_delayed_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.wm.SurfaceAnimatorProto.animation_start_delayed)
}

// optional .com.android.server.wm.AnimationAdapterProto animation_adapter = 3;
inline bool SurfaceAnimatorProto::has_animation_adapter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::com::android::server::wm::AnimationAdapterProto& SurfaceAnimatorProto::animation_adapter() const {
  const ::com::android::server::wm::AnimationAdapterProto* p = animation_adapter_;
  // @@protoc_insertion_point(field_get:com.android.server.wm.SurfaceAnimatorProto.animation_adapter)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::wm::AnimationAdapterProto*>(
      &::com::android::server::wm::_AnimationAdapterProto_default_instance_);
}
inline ::com::android::server::wm::AnimationAdapterProto* SurfaceAnimatorProto::release_animation_adapter() {
  // @@protoc_insertion_point(field_release:com.android.server.wm.SurfaceAnimatorProto.animation_adapter)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::wm::AnimationAdapterProto* temp = animation_adapter_;
  animation_adapter_ = nullptr;
  return temp;
}
inline ::com::android::server::wm::AnimationAdapterProto* SurfaceAnimatorProto::mutable_animation_adapter() {
  _has_bits_[0] |= 0x00000002u;
  if (animation_adapter_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::wm::AnimationAdapterProto>(GetArenaNoVirtual());
    animation_adapter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.wm.SurfaceAnimatorProto.animation_adapter)
  return animation_adapter_;
}
inline void SurfaceAnimatorProto::set_allocated_animation_adapter(::com::android::server::wm::AnimationAdapterProto* animation_adapter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(animation_adapter_);
  }
  if (animation_adapter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      animation_adapter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, animation_adapter, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  animation_adapter_ = animation_adapter;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.wm.SurfaceAnimatorProto.animation_adapter)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace wm
}  // namespace server
}  // namespace android
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fsurfaceanimator_2eproto
