// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/hardware/location/context_hub_info.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto;
namespace android {
namespace hardware {
namespace location {
class ContextHubInfoProto;
class ContextHubInfoProtoDefaultTypeInternal;
extern ContextHubInfoProtoDefaultTypeInternal _ContextHubInfoProto_default_instance_;
}  // namespace location
}  // namespace hardware
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::hardware::location::ContextHubInfoProto* Arena::CreateMaybeMessage<::android::hardware::location::ContextHubInfoProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace hardware {
namespace location {

// ===================================================================

class ContextHubInfoProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.hardware.location.ContextHubInfoProto) */ {
 public:
  ContextHubInfoProto();
  virtual ~ContextHubInfoProto();

  ContextHubInfoProto(const ContextHubInfoProto& from);
  ContextHubInfoProto(ContextHubInfoProto&& from) noexcept
    : ContextHubInfoProto() {
    *this = ::std::move(from);
  }

  inline ContextHubInfoProto& operator=(const ContextHubInfoProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContextHubInfoProto& operator=(ContextHubInfoProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ContextHubInfoProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContextHubInfoProto* internal_default_instance() {
    return reinterpret_cast<const ContextHubInfoProto*>(
               &_ContextHubInfoProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ContextHubInfoProto& a, ContextHubInfoProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ContextHubInfoProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ContextHubInfoProto* New() const final {
    return CreateMaybeMessage<ContextHubInfoProto>(nullptr);
  }

  ContextHubInfoProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ContextHubInfoProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ContextHubInfoProto& from);
  void MergeFrom(const ContextHubInfoProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContextHubInfoProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.hardware.location.ContextHubInfoProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kVendorFieldNumber = 3,
    kToolchainFieldNumber = 4,
    kIdFieldNumber = 1,
    kPlatformVersionFieldNumber = 5,
    kStaticSwVersionFieldNumber = 6,
    kToolchainVersionFieldNumber = 7,
    kChrePlatformIdFieldNumber = 8,
    kPeakMipsFieldNumber = 9,
    kStoppedPowerDrawMwFieldNumber = 10,
    kSleepPowerDrawMwFieldNumber = 11,
    kPeakPowerDrawMwFieldNumber = 12,
    kMaxPacketLengthBytesFieldNumber = 13,
  };
  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional string vendor = 3;
  bool has_vendor() const;
  void clear_vendor();
  const std::string& vendor() const;
  void set_vendor(const std::string& value);
  void set_vendor(std::string&& value);
  void set_vendor(const char* value);
  void set_vendor(const char* value, size_t size);
  std::string* mutable_vendor();
  std::string* release_vendor();
  void set_allocated_vendor(std::string* vendor);

  // optional string toolchain = 4;
  bool has_toolchain() const;
  void clear_toolchain();
  const std::string& toolchain() const;
  void set_toolchain(const std::string& value);
  void set_toolchain(std::string&& value);
  void set_toolchain(const char* value);
  void set_toolchain(const char* value, size_t size);
  std::string* mutable_toolchain();
  std::string* release_toolchain();
  void set_allocated_toolchain(std::string* toolchain);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 platform_version = 5;
  bool has_platform_version() const;
  void clear_platform_version();
  ::PROTOBUF_NAMESPACE_ID::int32 platform_version() const;
  void set_platform_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 static_sw_version = 6;
  bool has_static_sw_version() const;
  void clear_static_sw_version();
  ::PROTOBUF_NAMESPACE_ID::int32 static_sw_version() const;
  void set_static_sw_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 toolchain_version = 7;
  bool has_toolchain_version() const;
  void clear_toolchain_version();
  ::PROTOBUF_NAMESPACE_ID::int32 toolchain_version() const;
  void set_toolchain_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 chre_platform_id = 8;
  bool has_chre_platform_id() const;
  void clear_chre_platform_id();
  ::PROTOBUF_NAMESPACE_ID::int64 chre_platform_id() const;
  void set_chre_platform_id(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional float peak_mips = 9;
  bool has_peak_mips() const;
  void clear_peak_mips();
  float peak_mips() const;
  void set_peak_mips(float value);

  // optional float stopped_power_draw_mw = 10;
  bool has_stopped_power_draw_mw() const;
  void clear_stopped_power_draw_mw();
  float stopped_power_draw_mw() const;
  void set_stopped_power_draw_mw(float value);

  // optional float sleep_power_draw_mw = 11;
  bool has_sleep_power_draw_mw() const;
  void clear_sleep_power_draw_mw();
  float sleep_power_draw_mw() const;
  void set_sleep_power_draw_mw(float value);

  // optional float peak_power_draw_mw = 12;
  bool has_peak_power_draw_mw() const;
  void clear_peak_power_draw_mw();
  float peak_power_draw_mw() const;
  void set_peak_power_draw_mw(float value);

  // optional int32 max_packet_length_bytes = 13;
  bool has_max_packet_length_bytes() const;
  void clear_max_packet_length_bytes();
  ::PROTOBUF_NAMESPACE_ID::int32 max_packet_length_bytes() const;
  void set_max_packet_length_bytes(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.hardware.location.ContextHubInfoProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vendor_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr toolchain_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 platform_version_;
  ::PROTOBUF_NAMESPACE_ID::int32 static_sw_version_;
  ::PROTOBUF_NAMESPACE_ID::int32 toolchain_version_;
  ::PROTOBUF_NAMESPACE_ID::int64 chre_platform_id_;
  float peak_mips_;
  float stopped_power_draw_mw_;
  float sleep_power_draw_mw_;
  float peak_power_draw_mw_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_packet_length_bytes_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ContextHubInfoProto

// optional int32 id = 1;
inline bool ContextHubInfoProto::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ContextHubInfoProto::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ContextHubInfoProto::id() const {
  // @@protoc_insertion_point(field_get:android.hardware.location.ContextHubInfoProto.id)
  return id_;
}
inline void ContextHubInfoProto::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  id_ = value;
  // @@protoc_insertion_point(field_set:android.hardware.location.ContextHubInfoProto.id)
}

// optional string name = 2;
inline bool ContextHubInfoProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContextHubInfoProto::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ContextHubInfoProto::name() const {
  // @@protoc_insertion_point(field_get:android.hardware.location.ContextHubInfoProto.name)
  return name_.GetNoArena();
}
inline void ContextHubInfoProto::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.hardware.location.ContextHubInfoProto.name)
}
inline void ContextHubInfoProto::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.hardware.location.ContextHubInfoProto.name)
}
inline void ContextHubInfoProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.hardware.location.ContextHubInfoProto.name)
}
inline void ContextHubInfoProto::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.hardware.location.ContextHubInfoProto.name)
}
inline std::string* ContextHubInfoProto::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.hardware.location.ContextHubInfoProto.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ContextHubInfoProto::release_name() {
  // @@protoc_insertion_point(field_release:android.hardware.location.ContextHubInfoProto.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ContextHubInfoProto::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:android.hardware.location.ContextHubInfoProto.name)
}

// optional string vendor = 3;
inline bool ContextHubInfoProto::has_vendor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContextHubInfoProto::clear_vendor() {
  vendor_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ContextHubInfoProto::vendor() const {
  // @@protoc_insertion_point(field_get:android.hardware.location.ContextHubInfoProto.vendor)
  return vendor_.GetNoArena();
}
inline void ContextHubInfoProto::set_vendor(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  vendor_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.hardware.location.ContextHubInfoProto.vendor)
}
inline void ContextHubInfoProto::set_vendor(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  vendor_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.hardware.location.ContextHubInfoProto.vendor)
}
inline void ContextHubInfoProto::set_vendor(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  vendor_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.hardware.location.ContextHubInfoProto.vendor)
}
inline void ContextHubInfoProto::set_vendor(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  vendor_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.hardware.location.ContextHubInfoProto.vendor)
}
inline std::string* ContextHubInfoProto::mutable_vendor() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.hardware.location.ContextHubInfoProto.vendor)
  return vendor_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ContextHubInfoProto::release_vendor() {
  // @@protoc_insertion_point(field_release:android.hardware.location.ContextHubInfoProto.vendor)
  if (!has_vendor()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return vendor_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ContextHubInfoProto::set_allocated_vendor(std::string* vendor) {
  if (vendor != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  vendor_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), vendor);
  // @@protoc_insertion_point(field_set_allocated:android.hardware.location.ContextHubInfoProto.vendor)
}

// optional string toolchain = 4;
inline bool ContextHubInfoProto::has_toolchain() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ContextHubInfoProto::clear_toolchain() {
  toolchain_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ContextHubInfoProto::toolchain() const {
  // @@protoc_insertion_point(field_get:android.hardware.location.ContextHubInfoProto.toolchain)
  return toolchain_.GetNoArena();
}
inline void ContextHubInfoProto::set_toolchain(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  toolchain_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.hardware.location.ContextHubInfoProto.toolchain)
}
inline void ContextHubInfoProto::set_toolchain(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  toolchain_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.hardware.location.ContextHubInfoProto.toolchain)
}
inline void ContextHubInfoProto::set_toolchain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  toolchain_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.hardware.location.ContextHubInfoProto.toolchain)
}
inline void ContextHubInfoProto::set_toolchain(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  toolchain_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.hardware.location.ContextHubInfoProto.toolchain)
}
inline std::string* ContextHubInfoProto::mutable_toolchain() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.hardware.location.ContextHubInfoProto.toolchain)
  return toolchain_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ContextHubInfoProto::release_toolchain() {
  // @@protoc_insertion_point(field_release:android.hardware.location.ContextHubInfoProto.toolchain)
  if (!has_toolchain()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return toolchain_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ContextHubInfoProto::set_allocated_toolchain(std::string* toolchain) {
  if (toolchain != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  toolchain_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), toolchain);
  // @@protoc_insertion_point(field_set_allocated:android.hardware.location.ContextHubInfoProto.toolchain)
}

// optional int32 platform_version = 5;
inline bool ContextHubInfoProto::has_platform_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ContextHubInfoProto::clear_platform_version() {
  platform_version_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ContextHubInfoProto::platform_version() const {
  // @@protoc_insertion_point(field_get:android.hardware.location.ContextHubInfoProto.platform_version)
  return platform_version_;
}
inline void ContextHubInfoProto::set_platform_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  platform_version_ = value;
  // @@protoc_insertion_point(field_set:android.hardware.location.ContextHubInfoProto.platform_version)
}

// optional int32 static_sw_version = 6;
inline bool ContextHubInfoProto::has_static_sw_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ContextHubInfoProto::clear_static_sw_version() {
  static_sw_version_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ContextHubInfoProto::static_sw_version() const {
  // @@protoc_insertion_point(field_get:android.hardware.location.ContextHubInfoProto.static_sw_version)
  return static_sw_version_;
}
inline void ContextHubInfoProto::set_static_sw_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  static_sw_version_ = value;
  // @@protoc_insertion_point(field_set:android.hardware.location.ContextHubInfoProto.static_sw_version)
}

// optional int32 toolchain_version = 7;
inline bool ContextHubInfoProto::has_toolchain_version() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ContextHubInfoProto::clear_toolchain_version() {
  toolchain_version_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ContextHubInfoProto::toolchain_version() const {
  // @@protoc_insertion_point(field_get:android.hardware.location.ContextHubInfoProto.toolchain_version)
  return toolchain_version_;
}
inline void ContextHubInfoProto::set_toolchain_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  toolchain_version_ = value;
  // @@protoc_insertion_point(field_set:android.hardware.location.ContextHubInfoProto.toolchain_version)
}

// optional int64 chre_platform_id = 8;
inline bool ContextHubInfoProto::has_chre_platform_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ContextHubInfoProto::clear_chre_platform_id() {
  chre_platform_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ContextHubInfoProto::chre_platform_id() const {
  // @@protoc_insertion_point(field_get:android.hardware.location.ContextHubInfoProto.chre_platform_id)
  return chre_platform_id_;
}
inline void ContextHubInfoProto::set_chre_platform_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  chre_platform_id_ = value;
  // @@protoc_insertion_point(field_set:android.hardware.location.ContextHubInfoProto.chre_platform_id)
}

// optional float peak_mips = 9;
inline bool ContextHubInfoProto::has_peak_mips() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ContextHubInfoProto::clear_peak_mips() {
  peak_mips_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline float ContextHubInfoProto::peak_mips() const {
  // @@protoc_insertion_point(field_get:android.hardware.location.ContextHubInfoProto.peak_mips)
  return peak_mips_;
}
inline void ContextHubInfoProto::set_peak_mips(float value) {
  _has_bits_[0] |= 0x00000100u;
  peak_mips_ = value;
  // @@protoc_insertion_point(field_set:android.hardware.location.ContextHubInfoProto.peak_mips)
}

// optional float stopped_power_draw_mw = 10;
inline bool ContextHubInfoProto::has_stopped_power_draw_mw() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ContextHubInfoProto::clear_stopped_power_draw_mw() {
  stopped_power_draw_mw_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline float ContextHubInfoProto::stopped_power_draw_mw() const {
  // @@protoc_insertion_point(field_get:android.hardware.location.ContextHubInfoProto.stopped_power_draw_mw)
  return stopped_power_draw_mw_;
}
inline void ContextHubInfoProto::set_stopped_power_draw_mw(float value) {
  _has_bits_[0] |= 0x00000200u;
  stopped_power_draw_mw_ = value;
  // @@protoc_insertion_point(field_set:android.hardware.location.ContextHubInfoProto.stopped_power_draw_mw)
}

// optional float sleep_power_draw_mw = 11;
inline bool ContextHubInfoProto::has_sleep_power_draw_mw() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ContextHubInfoProto::clear_sleep_power_draw_mw() {
  sleep_power_draw_mw_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline float ContextHubInfoProto::sleep_power_draw_mw() const {
  // @@protoc_insertion_point(field_get:android.hardware.location.ContextHubInfoProto.sleep_power_draw_mw)
  return sleep_power_draw_mw_;
}
inline void ContextHubInfoProto::set_sleep_power_draw_mw(float value) {
  _has_bits_[0] |= 0x00000400u;
  sleep_power_draw_mw_ = value;
  // @@protoc_insertion_point(field_set:android.hardware.location.ContextHubInfoProto.sleep_power_draw_mw)
}

// optional float peak_power_draw_mw = 12;
inline bool ContextHubInfoProto::has_peak_power_draw_mw() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ContextHubInfoProto::clear_peak_power_draw_mw() {
  peak_power_draw_mw_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline float ContextHubInfoProto::peak_power_draw_mw() const {
  // @@protoc_insertion_point(field_get:android.hardware.location.ContextHubInfoProto.peak_power_draw_mw)
  return peak_power_draw_mw_;
}
inline void ContextHubInfoProto::set_peak_power_draw_mw(float value) {
  _has_bits_[0] |= 0x00000800u;
  peak_power_draw_mw_ = value;
  // @@protoc_insertion_point(field_set:android.hardware.location.ContextHubInfoProto.peak_power_draw_mw)
}

// optional int32 max_packet_length_bytes = 13;
inline bool ContextHubInfoProto::has_max_packet_length_bytes() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ContextHubInfoProto::clear_max_packet_length_bytes() {
  max_packet_length_bytes_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ContextHubInfoProto::max_packet_length_bytes() const {
  // @@protoc_insertion_point(field_get:android.hardware.location.ContextHubInfoProto.max_packet_length_bytes)
  return max_packet_length_bytes_;
}
inline void ContextHubInfoProto::set_max_packet_length_bytes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  max_packet_length_bytes_ = value;
  // @@protoc_insertion_point(field_set:android.hardware.location.ContextHubInfoProto.max_packet_length_bytes)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace location
}  // namespace hardware
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto
