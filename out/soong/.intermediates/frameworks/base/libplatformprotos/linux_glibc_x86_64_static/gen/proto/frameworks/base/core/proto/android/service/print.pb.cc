// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/service/print.proto

#include "frameworks/base/core/proto/android/service/print.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ComponentNameProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ActivePrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CachedPrintJobProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InstalledPrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MarginsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MediaSizeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PageRangeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PrintAttributesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrintDocumentInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_PrintJobInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PrintSpoolerInternalStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PrintSpoolerStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_PrintUserStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_PrinterCapabilitiesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PrinterDiscoverySessionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PrinterIdProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PrinterInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResolutionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto;
namespace android {
namespace service {
namespace print {
class PrintServiceDumpProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrintServiceDumpProto> _instance;
} _PrintServiceDumpProto_default_instance_;
class PrintUserStateProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrintUserStateProto> _instance;
} _PrintUserStateProto_default_instance_;
class PrintSpoolerStateProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrintSpoolerStateProto> _instance;
} _PrintSpoolerStateProto_default_instance_;
class PrintSpoolerInternalStateProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrintSpoolerInternalStateProto> _instance;
} _PrintSpoolerInternalStateProto_default_instance_;
class PrinterCapabilitiesProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrinterCapabilitiesProto> _instance;
} _PrinterCapabilitiesProto_default_instance_;
class PrinterInfoProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrinterInfoProto> _instance;
} _PrinterInfoProto_default_instance_;
class PrinterDiscoverySessionProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrinterDiscoverySessionProto> _instance;
} _PrinterDiscoverySessionProto_default_instance_;
class InstalledPrintServiceProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InstalledPrintServiceProto> _instance;
} _InstalledPrintServiceProto_default_instance_;
class PrinterIdProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrinterIdProto> _instance;
} _PrinterIdProto_default_instance_;
class ActivePrintServiceProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActivePrintServiceProto> _instance;
} _ActivePrintServiceProto_default_instance_;
class MediaSizeProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MediaSizeProto> _instance;
} _MediaSizeProto_default_instance_;
class ResolutionProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResolutionProto> _instance;
} _ResolutionProto_default_instance_;
class MarginsProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MarginsProto> _instance;
} _MarginsProto_default_instance_;
class PrintAttributesProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrintAttributesProto> _instance;
} _PrintAttributesProto_default_instance_;
class PrintDocumentInfoProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrintDocumentInfoProto> _instance;
} _PrintDocumentInfoProto_default_instance_;
class PageRangeProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PageRangeProto> _instance;
} _PageRangeProto_default_instance_;
class PrintJobInfoProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrintJobInfoProto> _instance;
} _PrintJobInfoProto_default_instance_;
class CachedPrintJobProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CachedPrintJobProto> _instance;
} _CachedPrintJobProto_default_instance_;
}  // namespace print
}  // namespace service
}  // namespace android
static void InitDefaultsscc_info_ActivePrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_ActivePrintServiceProto_default_instance_;
    new (ptr) ::android::service::print::ActivePrintServiceProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::ActivePrintServiceProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ActivePrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_ActivePrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {
      &scc_info_ComponentNameProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto.base,
      &scc_info_PrinterIdProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,}};

static void InitDefaultsscc_info_CachedPrintJobProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_CachedPrintJobProto_default_instance_;
    new (ptr) ::android::service::print::CachedPrintJobProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::CachedPrintJobProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CachedPrintJobProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_CachedPrintJobProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {
      &scc_info_PrintJobInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,}};

static void InitDefaultsscc_info_InstalledPrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_InstalledPrintServiceProto_default_instance_;
    new (ptr) ::android::service::print::InstalledPrintServiceProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::InstalledPrintServiceProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InstalledPrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_InstalledPrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {
      &scc_info_ComponentNameProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto.base,}};

static void InitDefaultsscc_info_MarginsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_MarginsProto_default_instance_;
    new (ptr) ::android::service::print::MarginsProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::MarginsProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MarginsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_MarginsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {}};

static void InitDefaultsscc_info_MediaSizeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_MediaSizeProto_default_instance_;
    new (ptr) ::android::service::print::MediaSizeProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::MediaSizeProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MediaSizeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_MediaSizeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {}};

static void InitDefaultsscc_info_PageRangeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_PageRangeProto_default_instance_;
    new (ptr) ::android::service::print::PageRangeProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::PageRangeProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PageRangeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PageRangeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {}};

static void InitDefaultsscc_info_PrintAttributesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_PrintAttributesProto_default_instance_;
    new (ptr) ::android::service::print::PrintAttributesProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::PrintAttributesProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PrintAttributesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_PrintAttributesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {
      &scc_info_ResolutionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
      &scc_info_MarginsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,}};

static void InitDefaultsscc_info_PrintDocumentInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_PrintDocumentInfoProto_default_instance_;
    new (ptr) ::android::service::print::PrintDocumentInfoProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::PrintDocumentInfoProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrintDocumentInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PrintDocumentInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {}};

static void InitDefaultsscc_info_PrintJobInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_PrintJobInfoProto_default_instance_;
    new (ptr) ::android::service::print::PrintJobInfoProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::PrintJobInfoProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_PrintJobInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsscc_info_PrintJobInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {
      &scc_info_PrinterIdProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
      &scc_info_PrintAttributesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
      &scc_info_PrintDocumentInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
      &scc_info_PageRangeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,}};

static void InitDefaultsscc_info_PrintServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_PrintServiceDumpProto_default_instance_;
    new (ptr) ::android::service::print::PrintServiceDumpProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::PrintServiceDumpProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PrintServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_PrintServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {
      &scc_info_PrintUserStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,}};

static void InitDefaultsscc_info_PrintSpoolerInternalStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_PrintSpoolerInternalStateProto_default_instance_;
    new (ptr) ::android::service::print::PrintSpoolerInternalStateProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::PrintSpoolerInternalStateProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PrintSpoolerInternalStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_PrintSpoolerInternalStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {
      &scc_info_PrintJobInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
      &scc_info_ComponentNameProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto.base,}};

static void InitDefaultsscc_info_PrintSpoolerStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_PrintSpoolerStateProto_default_instance_;
    new (ptr) ::android::service::print::PrintSpoolerStateProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::PrintSpoolerStateProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PrintSpoolerStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_PrintSpoolerStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {
      &scc_info_PrintSpoolerInternalStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,}};

static void InitDefaultsscc_info_PrintUserStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_PrintUserStateProto_default_instance_;
    new (ptr) ::android::service::print::PrintUserStateProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::PrintUserStateProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_PrintUserStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsscc_info_PrintUserStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {
      &scc_info_InstalledPrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
      &scc_info_ComponentNameProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto.base,
      &scc_info_ActivePrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
      &scc_info_CachedPrintJobProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
      &scc_info_PrinterDiscoverySessionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
      &scc_info_PrintSpoolerStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,}};

static void InitDefaultsscc_info_PrinterCapabilitiesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_PrinterCapabilitiesProto_default_instance_;
    new (ptr) ::android::service::print::PrinterCapabilitiesProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::PrinterCapabilitiesProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_PrinterCapabilitiesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_PrinterCapabilitiesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {
      &scc_info_MarginsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
      &scc_info_MediaSizeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
      &scc_info_ResolutionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,}};

static void InitDefaultsscc_info_PrinterDiscoverySessionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_PrinterDiscoverySessionProto_default_instance_;
    new (ptr) ::android::service::print::PrinterDiscoverySessionProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::PrinterDiscoverySessionProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PrinterDiscoverySessionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_PrinterDiscoverySessionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {
      &scc_info_PrinterIdProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
      &scc_info_PrinterInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,}};

static void InitDefaultsscc_info_PrinterIdProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_PrinterIdProto_default_instance_;
    new (ptr) ::android::service::print::PrinterIdProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::PrinterIdProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PrinterIdProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_PrinterIdProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {
      &scc_info_ComponentNameProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto.base,}};

static void InitDefaultsscc_info_PrinterInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_PrinterInfoProto_default_instance_;
    new (ptr) ::android::service::print::PrinterInfoProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::PrinterInfoProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PrinterInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_PrinterInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {
      &scc_info_PrinterIdProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
      &scc_info_PrinterCapabilitiesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,}};

static void InitDefaultsscc_info_ResolutionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::print::_ResolutionProto_default_instance_;
    new (ptr) ::android::service::print::ResolutionProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::print::ResolutionProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResolutionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ResolutionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto[18];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintServiceDumpProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintServiceDumpProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintServiceDumpProto, user_states_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintUserStateProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintUserStateProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintUserStateProto, user_id_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintUserStateProto, installed_services_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintUserStateProto, disabled_services_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintUserStateProto, active_services_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintUserStateProto, cached_print_jobs_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintUserStateProto, discovery_sessions_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintUserStateProto, print_spooler_state_),
  1,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintSpoolerStateProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintSpoolerStateProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintSpoolerStateProto, is_destroyed_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintSpoolerStateProto, is_bound_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintSpoolerStateProto, internal_state_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintSpoolerInternalStateProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintSpoolerInternalStateProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintSpoolerInternalStateProto, print_jobs_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintSpoolerInternalStateProto, print_job_files_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintSpoolerInternalStateProto, approved_services_),
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterCapabilitiesProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterCapabilitiesProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterCapabilitiesProto, min_margins_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterCapabilitiesProto, media_sizes_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterCapabilitiesProto, resolutions_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterCapabilitiesProto, color_modes_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterCapabilitiesProto, duplex_modes_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterInfoProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterInfoProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterInfoProto, id_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterInfoProto, name_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterInfoProto, status_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterInfoProto, description_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterInfoProto, capabilities_),
  2,
  0,
  4,
  1,
  3,
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterDiscoverySessionProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterDiscoverySessionProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterDiscoverySessionProto, is_destroyed_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterDiscoverySessionProto, is_printer_discovery_in_progress_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterDiscoverySessionProto, printer_discovery_observers_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterDiscoverySessionProto, discovery_requests_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterDiscoverySessionProto, tracked_printer_requests_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterDiscoverySessionProto, printer_),
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::service::print::InstalledPrintServiceProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::InstalledPrintServiceProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::InstalledPrintServiceProto, component_name_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::InstalledPrintServiceProto, settings_activity_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::InstalledPrintServiceProto, add_printers_activity_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::InstalledPrintServiceProto, advanced_options_activity_),
  3,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterIdProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterIdProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterIdProto, service_name_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrinterIdProto, local_id_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::android::service::print::ActivePrintServiceProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::ActivePrintServiceProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::ActivePrintServiceProto, component_name_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::ActivePrintServiceProto, is_destroyed_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::ActivePrintServiceProto, is_bound_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::ActivePrintServiceProto, has_discovery_session_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::ActivePrintServiceProto, has_active_print_jobs_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::ActivePrintServiceProto, is_discovering_printers_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::ActivePrintServiceProto, tracked_printers_),
  0,
  1,
  2,
  3,
  4,
  5,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::service::print::MediaSizeProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::MediaSizeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::MediaSizeProto, id_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::MediaSizeProto, label_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::MediaSizeProto, height_mils_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::MediaSizeProto, width_mils_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::android::service::print::ResolutionProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::ResolutionProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::ResolutionProto, id_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::ResolutionProto, label_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::ResolutionProto, horizontal_dpi_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::ResolutionProto, vertical_dpi_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::android::service::print::MarginsProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::MarginsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::MarginsProto, top_mils_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::MarginsProto, left_mils_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::MarginsProto, right_mils_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::MarginsProto, bottom_mils_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintAttributesProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintAttributesProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintAttributesProto, media_size_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintAttributesProto, is_portrait_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintAttributesProto, resolution_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintAttributesProto, min_margins_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintAttributesProto, color_mode_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintAttributesProto, duplex_mode_),
  0,
  3,
  1,
  2,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintDocumentInfoProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintDocumentInfoProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintDocumentInfoProto, name_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintDocumentInfoProto, page_count_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintDocumentInfoProto, content_type_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintDocumentInfoProto, data_size_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::android::service::print::PageRangeProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PageRangeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::PageRangeProto, start_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PageRangeProto, end_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, label_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, print_job_id_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, state_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, printer_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, tag_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, creation_time_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, attributes_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, document_info_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, is_canceling_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, pages_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, has_advanced_options_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, progress_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::PrintJobInfoProto, status_),
  0,
  1,
  8,
  4,
  2,
  7,
  5,
  6,
  9,
  ~0u,
  10,
  11,
  3,
  PROTOBUF_FIELD_OFFSET(::android::service::print::CachedPrintJobProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::CachedPrintJobProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::print::CachedPrintJobProto, app_id_),
  PROTOBUF_FIELD_OFFSET(::android::service::print::CachedPrintJobProto, print_job_),
  1,
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::android::service::print::PrintServiceDumpProto)},
  { 7, 19, sizeof(::android::service::print::PrintUserStateProto)},
  { 26, 34, sizeof(::android::service::print::PrintSpoolerStateProto)},
  { 37, 45, sizeof(::android::service::print::PrintSpoolerInternalStateProto)},
  { 48, 58, sizeof(::android::service::print::PrinterCapabilitiesProto)},
  { 63, 73, sizeof(::android::service::print::PrinterInfoProto)},
  { 78, 89, sizeof(::android::service::print::PrinterDiscoverySessionProto)},
  { 95, 104, sizeof(::android::service::print::InstalledPrintServiceProto)},
  { 108, 115, sizeof(::android::service::print::PrinterIdProto)},
  { 117, 129, sizeof(::android::service::print::ActivePrintServiceProto)},
  { 136, 145, sizeof(::android::service::print::MediaSizeProto)},
  { 149, 158, sizeof(::android::service::print::ResolutionProto)},
  { 162, 171, sizeof(::android::service::print::MarginsProto)},
  { 175, 186, sizeof(::android::service::print::PrintAttributesProto)},
  { 192, 201, sizeof(::android::service::print::PrintDocumentInfoProto)},
  { 205, 212, sizeof(::android::service::print::PageRangeProto)},
  { 214, 232, sizeof(::android::service::print::PrintJobInfoProto)},
  { 245, 252, sizeof(::android::service::print::CachedPrintJobProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_PrintServiceDumpProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_PrintUserStateProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_PrintSpoolerStateProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_PrintSpoolerInternalStateProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_PrinterCapabilitiesProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_PrinterInfoProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_PrinterDiscoverySessionProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_InstalledPrintServiceProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_PrinterIdProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_ActivePrintServiceProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_MediaSizeProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_ResolutionProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_MarginsProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_PrintAttributesProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_PrintDocumentInfoProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_PageRangeProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_PrintJobInfoProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::print::_CachedPrintJobProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n6frameworks/base/core/proto/android/ser"
  "vice/print.proto\022\025android.service.print\032"
  "\?frameworks/base/core/proto/android/cont"
  "ent/component_name.proto\0320frameworks/bas"
  "e/core/proto/android/privacy.proto\"c\n\025Pr"
  "intServiceDumpProto\022\?\n\013user_states\030\001 \003(\013"
  "2*.android.service.print.PrintUserStateP"
  "roto:\t\232\237\325\207\003\003\010\310\001\"\355\003\n\023PrintUserStateProto\022"
  "\017\n\007user_id\030\001 \001(\005\022M\n\022installed_services\030\002"
  " \003(\01321.android.service.print.InstalledPr"
  "intServiceProto\022>\n\021disabled_services\030\003 \003"
  "(\0132#.android.content.ComponentNameProto\022"
  "G\n\017active_services\030\004 \003(\0132..android.servi"
  "ce.print.ActivePrintServiceProto\022E\n\021cach"
  "ed_print_jobs\030\005 \003(\0132*.android.service.pr"
  "int.CachedPrintJobProto\022O\n\022discovery_ses"
  "sions\030\006 \003(\01323.android.service.print.Prin"
  "terDiscoverySessionProto\022J\n\023print_spoole"
  "r_state\030\007 \001(\0132-.android.service.print.Pr"
  "intSpoolerStateProto:\t\232\237\325\207\003\003\010\310\001\"\232\001\n\026Prin"
  "tSpoolerStateProto\022\024\n\014is_destroyed\030\001 \001(\010"
  "\022\020\n\010is_bound\030\002 \001(\010\022M\n\016internal_state\030\003 \001"
  "(\01325.android.service.print.PrintSpoolerI"
  "nternalStateProto:\t\232\237\325\207\003\003\010\310\001\"\314\001\n\036PrintSp"
  "oolerInternalStateProto\022<\n\nprint_jobs\030\001 "
  "\003(\0132(.android.service.print.PrintJobInfo"
  "Proto\022!\n\017print_job_files\030\002 \003(\tB\010\232\237\325\207\003\002\010d"
  "\022>\n\021approved_services\030\003 \003(\0132#.android.co"
  "ntent.ComponentNameProto:\t\232\237\325\207\003\003\010\310\001\"\362\002\n\030"
  "PrinterCapabilitiesProto\0228\n\013min_margins\030"
  "\001 \001(\0132#.android.service.print.MarginsPro"
  "to\022:\n\013media_sizes\030\002 \003(\0132%.android.servic"
  "e.print.MediaSizeProto\022;\n\013resolutions\030\003 "
  "\003(\0132&.android.service.print.ResolutionPr"
  "oto\022J\n\013color_modes\030\004 \003(\01625.android.servi"
  "ce.print.PrintAttributesProto.ColorMode\022"
  "L\n\014duplex_modes\030\005 \003(\01626.android.service."
  "print.PrintAttributesProto.DuplexMode:\t\232"
  "\237\325\207\003\003\010\310\001\"\335\002\n\020PrinterInfoProto\0221\n\002id\030\001 \001("
  "\0132%.android.service.print.PrinterIdProto"
  "\022\014\n\004name\030\002 \001(\t\022I\n\006status\030\003 \001(\0162..android"
  ".service.print.PrinterInfoProto.StatusB\t"
  "\232\237\325\207\003\003\010\310\001\022\023\n\013description\030\004 \001(\t\022E\n\014capabi"
  "lities\030\005 \001(\0132/.android.service.print.Pri"
  "nterCapabilitiesProto\"W\n\006Status\022\023\n\017__STA"
  "TUS_UNUSED\020\000\022\017\n\013STATUS_IDLE\020\001\022\017\n\013STATUS_"
  "BUSY\020\002\022\026\n\022STATUS_UNAVAILABLE\020\003:\010\232\237\325\207\003\002\010d"
  "\"\255\002\n\034PrinterDiscoverySessionProto\022\024\n\014is_"
  "destroyed\030\001 \001(\010\022(\n is_printer_discovery_"
  "in_progress\030\002 \001(\010\022#\n\033printer_discovery_o"
  "bservers\030\003 \003(\t\022\032\n\022discovery_requests\030\004 \003"
  "(\t\022G\n\030tracked_printer_requests\030\005 \003(\0132%.a"
  "ndroid.service.print.PrinterIdProto\0228\n\007p"
  "rinter\030\006 \003(\0132\'.android.service.print.Pri"
  "nterInfoProto:\t\232\237\325\207\003\003\010\310\001\"\301\001\n\032InstalledPr"
  "intServiceProto\022;\n\016component_name\030\001 \001(\0132"
  "#.android.content.ComponentNameProto\022\031\n\021"
  "settings_activity\030\002 \001(\t\022\035\n\025add_printers_"
  "activity\030\003 \001(\t\022!\n\031advanced_options_activ"
  "ity\030\004 \001(\t:\t\232\237\325\207\003\003\010\310\001\"r\n\016PrinterIdProto\022D"
  "\n\014service_name\030\001 \001(\0132#.android.content.C"
  "omponentNameProtoB\t\232\237\325\207\003\003\010\310\001\022\020\n\010local_id"
  "\030\002 \001(\t:\010\232\237\325\207\003\002\010d\"\251\002\n\027ActivePrintServiceP"
  "roto\022;\n\016component_name\030\001 \001(\0132#.android.c"
  "ontent.ComponentNameProto\022\024\n\014is_destroye"
  "d\030\002 \001(\010\022\020\n\010is_bound\030\003 \001(\010\022\035\n\025has_discove"
  "ry_session\030\004 \001(\010\022\035\n\025has_active_print_job"
  "s\030\005 \001(\010\022\037\n\027is_discovering_printers\030\006 \001(\010"
  "\022\?\n\020tracked_printers\030\007 \003(\0132%.android.ser"
  "vice.print.PrinterIdProto:\t\232\237\325\207\003\003\010\310\001\"_\n\016"
  "MediaSizeProto\022\n\n\002id\030\001 \001(\t\022\r\n\005label\030\002 \001("
  "\t\022\023\n\013height_mils\030\003 \001(\005\022\022\n\nwidth_mils\030\004 \001"
  "(\005:\t\232\237\325\207\003\003\010\310\001\"e\n\017ResolutionProto\022\n\n\002id\030\001"
  " \001(\t\022\r\n\005label\030\002 \001(\t\022\026\n\016horizontal_dpi\030\003 "
  "\001(\005\022\024\n\014vertical_dpi\030\004 \001(\005:\t\232\237\325\207\003\003\010\310\001\"g\n\014"
  "MarginsProto\022\020\n\010top_mils\030\001 \001(\005\022\021\n\tleft_m"
  "ils\030\002 \001(\005\022\022\n\nright_mils\030\003 \001(\005\022\023\n\013bottom_"
  "mils\030\004 \001(\005:\t\232\237\325\207\003\003\010\310\001\"\314\004\n\024PrintAttribute"
  "sProto\022:\n\nmedia_size\030\001 \001(\0132&.android.ser"
  "vice.print.ResolutionProto\022\023\n\013is_portrai"
  "t\030\002 \001(\010\022:\n\nresolution\030\003 \001(\0132&.android.se"
  "rvice.print.ResolutionProto\0228\n\013min_margi"
  "ns\030\004 \001(\0132#.android.service.print.Margins"
  "Proto\022I\n\ncolor_mode\030\005 \001(\01625.android.serv"
  "ice.print.PrintAttributesProto.ColorMode"
  "\022K\n\013duplex_mode\030\006 \001(\01626.android.service."
  "print.PrintAttributesProto.DuplexMode\"U\n"
  "\tColorMode\022\027\n\023__COLOR_MODE_UNUSED\020\000\022\031\n\025C"
  "OLOR_MODE_MONOCHROME\020\001\022\024\n\020COLOR_MODE_COL"
  "OR\020\002\"s\n\nDuplexMode\022\030\n\024__DUPLEX_MODE_UNUS"
  "ED\020\000\022\024\n\020DUPLEX_MODE_NONE\020\001\022\031\n\025DUPLEX_MOD"
  "E_LONG_EDGE\020\002\022\032\n\026DUPLEX_MODE_SHORT_EDGE\020"
  "\004:\t\232\237\325\207\003\003\010\310\001\"x\n\026PrintDocumentInfoProto\022\026"
  "\n\004name\030\001 \001(\tB\010\232\237\325\207\003\002\010d\022\022\n\npage_count\030\002 \001"
  "(\005\022\024\n\014content_type\030\003 \001(\005\022\021\n\tdata_size\030\004 "
  "\001(\003:\t\232\237\325\207\003\003\010\310\001\"7\n\016PageRangeProto\022\r\n\005star"
  "t\030\001 \001(\005\022\013\n\003end\030\002 \001(\005:\t\232\237\325\207\003\003\010\310\001\"\262\005\n\021Prin"
  "tJobInfoProto\022\027\n\005label\030\001 \001(\tB\010\232\237\325\207\003\002\010d\022\036"
  "\n\014print_job_id\030\002 \001(\tB\010\232\237\325\207\003\002\010d\022=\n\005state\030"
  "\003 \001(\0162..android.service.print.PrintJobIn"
  "foProto.State\0226\n\007printer\030\004 \001(\0132%.android"
  ".service.print.PrinterIdProto\022\025\n\003tag\030\005 \001"
  "(\tB\010\232\237\325\207\003\002\010d\022\025\n\rcreation_time\030\006 \001(\003\022\?\n\na"
  "ttributes\030\007 \001(\0132+.android.service.print."
  "PrintAttributesProto\022D\n\rdocument_info\030\010 "
  "\001(\0132-.android.service.print.PrintDocumen"
  "tInfoProto\022\024\n\014is_canceling\030\t \001(\010\0224\n\005page"
  "s\030\n \003(\0132%.android.service.print.PageRang"
  "eProto\022\034\n\024has_advanced_options\030\013 \001(\010\022\020\n\010"
  "progress\030\014 \001(\002\022\016\n\006status\030\r \001(\t\"\240\001\n\005State"
  "\022\021\n\rSTATE_UNKNOWN\020\000\022\021\n\rSTATE_CREATED\020\001\022\020"
  "\n\014STATE_QUEUED\020\002\022\021\n\rSTATE_STARTED\020\003\022\021\n\rS"
  "TATE_BLOCKED\020\004\022\023\n\017STATE_COMPLETED\020\005\022\020\n\014S"
  "TATE_FAILED\020\006\022\022\n\016STATE_CANCELED\020\007:\t\232\237\325\207\003"
  "\003\010\310\001\"m\n\023CachedPrintJobProto\022\016\n\006app_id\030\001 "
  "\001(\005\022;\n\tprint_job\030\002 \001(\0132(.android.service"
  ".print.PrintJobInfoProto:\t\232\237\325\207\003\003\010\310\001B\025B\021P"
  "rintServiceProtoP\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto_deps[2] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto_sccs[18] = {
  &scc_info_ActivePrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_CachedPrintJobProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_InstalledPrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_MarginsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_MediaSizeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_PageRangeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_PrintAttributesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_PrintDocumentInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_PrintJobInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_PrintServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_PrintSpoolerInternalStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_PrintSpoolerStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_PrintUserStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_PrinterCapabilitiesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_PrinterDiscoverySessionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_PrinterIdProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_PrinterInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
  &scc_info_ResolutionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto, "frameworks/base/core/proto/android/service/print.proto", 4698,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto_deps, 18, 2,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto, 18, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto), true);
namespace android {
namespace service {
namespace print {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PrinterInfoProto_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto[0];
}
bool PrinterInfoProto_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PrinterInfoProto_Status PrinterInfoProto::__STATUS_UNUSED;
constexpr PrinterInfoProto_Status PrinterInfoProto::STATUS_IDLE;
constexpr PrinterInfoProto_Status PrinterInfoProto::STATUS_BUSY;
constexpr PrinterInfoProto_Status PrinterInfoProto::STATUS_UNAVAILABLE;
constexpr PrinterInfoProto_Status PrinterInfoProto::Status_MIN;
constexpr PrinterInfoProto_Status PrinterInfoProto::Status_MAX;
constexpr int PrinterInfoProto::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PrintAttributesProto_ColorMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto[1];
}
bool PrintAttributesProto_ColorMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PrintAttributesProto_ColorMode PrintAttributesProto::__COLOR_MODE_UNUSED;
constexpr PrintAttributesProto_ColorMode PrintAttributesProto::COLOR_MODE_MONOCHROME;
constexpr PrintAttributesProto_ColorMode PrintAttributesProto::COLOR_MODE_COLOR;
constexpr PrintAttributesProto_ColorMode PrintAttributesProto::ColorMode_MIN;
constexpr PrintAttributesProto_ColorMode PrintAttributesProto::ColorMode_MAX;
constexpr int PrintAttributesProto::ColorMode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PrintAttributesProto_DuplexMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto[2];
}
bool PrintAttributesProto_DuplexMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PrintAttributesProto_DuplexMode PrintAttributesProto::__DUPLEX_MODE_UNUSED;
constexpr PrintAttributesProto_DuplexMode PrintAttributesProto::DUPLEX_MODE_NONE;
constexpr PrintAttributesProto_DuplexMode PrintAttributesProto::DUPLEX_MODE_LONG_EDGE;
constexpr PrintAttributesProto_DuplexMode PrintAttributesProto::DUPLEX_MODE_SHORT_EDGE;
constexpr PrintAttributesProto_DuplexMode PrintAttributesProto::DuplexMode_MIN;
constexpr PrintAttributesProto_DuplexMode PrintAttributesProto::DuplexMode_MAX;
constexpr int PrintAttributesProto::DuplexMode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PrintJobInfoProto_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto[3];
}
bool PrintJobInfoProto_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PrintJobInfoProto_State PrintJobInfoProto::STATE_UNKNOWN;
constexpr PrintJobInfoProto_State PrintJobInfoProto::STATE_CREATED;
constexpr PrintJobInfoProto_State PrintJobInfoProto::STATE_QUEUED;
constexpr PrintJobInfoProto_State PrintJobInfoProto::STATE_STARTED;
constexpr PrintJobInfoProto_State PrintJobInfoProto::STATE_BLOCKED;
constexpr PrintJobInfoProto_State PrintJobInfoProto::STATE_COMPLETED;
constexpr PrintJobInfoProto_State PrintJobInfoProto::STATE_FAILED;
constexpr PrintJobInfoProto_State PrintJobInfoProto::STATE_CANCELED;
constexpr PrintJobInfoProto_State PrintJobInfoProto::State_MIN;
constexpr PrintJobInfoProto_State PrintJobInfoProto::State_MAX;
constexpr int PrintJobInfoProto::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void PrintServiceDumpProto::InitAsDefaultInstance() {
}
class PrintServiceDumpProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PrintServiceDumpProto>()._has_bits_);
};

PrintServiceDumpProto::PrintServiceDumpProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.PrintServiceDumpProto)
}
PrintServiceDumpProto::PrintServiceDumpProto(const PrintServiceDumpProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      user_states_(from.user_states_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:android.service.print.PrintServiceDumpProto)
}

void PrintServiceDumpProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrintServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
}

PrintServiceDumpProto::~PrintServiceDumpProto() {
  // @@protoc_insertion_point(destructor:android.service.print.PrintServiceDumpProto)
  SharedDtor();
}

void PrintServiceDumpProto::SharedDtor() {
}

void PrintServiceDumpProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrintServiceDumpProto& PrintServiceDumpProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrintServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void PrintServiceDumpProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.PrintServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_states_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrintServiceDumpProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.service.print.PrintUserStateProto user_states = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_user_states(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrintServiceDumpProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.PrintServiceDumpProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.service.print.PrintUserStateProto user_states = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_user_states()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.PrintServiceDumpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.PrintServiceDumpProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrintServiceDumpProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.PrintServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.service.print.PrintUserStateProto user_states = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_states_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->user_states(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.PrintServiceDumpProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PrintServiceDumpProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.PrintServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.service.print.PrintUserStateProto user_states = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_states_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->user_states(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.PrintServiceDumpProto)
  return target;
}

size_t PrintServiceDumpProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.PrintServiceDumpProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.print.PrintUserStateProto user_states = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->user_states_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->user_states(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrintServiceDumpProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.PrintServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PrintServiceDumpProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrintServiceDumpProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.PrintServiceDumpProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.PrintServiceDumpProto)
    MergeFrom(*source);
  }
}

void PrintServiceDumpProto::MergeFrom(const PrintServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.PrintServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_states_.MergeFrom(from.user_states_);
}

void PrintServiceDumpProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.PrintServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrintServiceDumpProto::CopyFrom(const PrintServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.PrintServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrintServiceDumpProto::IsInitialized() const {
  return true;
}

void PrintServiceDumpProto::InternalSwap(PrintServiceDumpProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&user_states_)->InternalSwap(CastToBase(&other->user_states_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PrintServiceDumpProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrintUserStateProto::InitAsDefaultInstance() {
  ::android::service::print::_PrintUserStateProto_default_instance_._instance.get_mutable()->print_spooler_state_ = const_cast< ::android::service::print::PrintSpoolerStateProto*>(
      ::android::service::print::PrintSpoolerStateProto::internal_default_instance());
}
class PrintUserStateProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PrintUserStateProto>()._has_bits_);
  static void set_has_user_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::android::service::print::PrintSpoolerStateProto& print_spooler_state(const PrintUserStateProto* msg);
  static void set_has_print_spooler_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::service::print::PrintSpoolerStateProto&
PrintUserStateProto::_Internal::print_spooler_state(const PrintUserStateProto* msg) {
  return *msg->print_spooler_state_;
}
void PrintUserStateProto::clear_disabled_services() {
  disabled_services_.Clear();
}
PrintUserStateProto::PrintUserStateProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.PrintUserStateProto)
}
PrintUserStateProto::PrintUserStateProto(const PrintUserStateProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      installed_services_(from.installed_services_),
      disabled_services_(from.disabled_services_),
      active_services_(from.active_services_),
      cached_print_jobs_(from.cached_print_jobs_),
      discovery_sessions_(from.discovery_sessions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_print_spooler_state()) {
    print_spooler_state_ = new ::android::service::print::PrintSpoolerStateProto(*from.print_spooler_state_);
  } else {
    print_spooler_state_ = nullptr;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:android.service.print.PrintUserStateProto)
}

void PrintUserStateProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrintUserStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  ::memset(&print_spooler_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&print_spooler_state_)) + sizeof(user_id_));
}

PrintUserStateProto::~PrintUserStateProto() {
  // @@protoc_insertion_point(destructor:android.service.print.PrintUserStateProto)
  SharedDtor();
}

void PrintUserStateProto::SharedDtor() {
  if (this != internal_default_instance()) delete print_spooler_state_;
}

void PrintUserStateProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrintUserStateProto& PrintUserStateProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrintUserStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void PrintUserStateProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.PrintUserStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  installed_services_.Clear();
  disabled_services_.Clear();
  active_services_.Clear();
  cached_print_jobs_.Clear();
  discovery_sessions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(print_spooler_state_ != nullptr);
    print_spooler_state_->Clear();
  }
  user_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrintUserStateProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_user_id(&has_bits);
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.print.InstalledPrintServiceProto installed_services = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_installed_services(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // repeated .android.content.ComponentNameProto disabled_services = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_disabled_services(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.print.ActivePrintServiceProto active_services = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_active_services(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.print.CachedPrintJobProto cached_print_jobs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_cached_print_jobs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.print.PrinterDiscoverySessionProto discovery_sessions = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_discovery_sessions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 50);
        } else goto handle_unusual;
        continue;
      // optional .android.service.print.PrintSpoolerStateProto print_spooler_state = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_print_spooler_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrintUserStateProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.PrintUserStateProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 user_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_user_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.print.InstalledPrintServiceProto installed_services = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_installed_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.content.ComponentNameProto disabled_services = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_disabled_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.print.ActivePrintServiceProto active_services = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_active_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.print.CachedPrintJobProto cached_print_jobs = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_cached_print_jobs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.print.PrinterDiscoverySessionProto discovery_sessions = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_discovery_sessions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.print.PrintSpoolerStateProto print_spooler_state = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_print_spooler_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.PrintUserStateProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.PrintUserStateProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrintUserStateProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.PrintUserStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 user_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->user_id(), output);
  }

  // repeated .android.service.print.InstalledPrintServiceProto installed_services = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->installed_services_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->installed_services(static_cast<int>(i)),
      output);
  }

  // repeated .android.content.ComponentNameProto disabled_services = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->disabled_services_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->disabled_services(static_cast<int>(i)),
      output);
  }

  // repeated .android.service.print.ActivePrintServiceProto active_services = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->active_services_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->active_services(static_cast<int>(i)),
      output);
  }

  // repeated .android.service.print.CachedPrintJobProto cached_print_jobs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cached_print_jobs_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->cached_print_jobs(static_cast<int>(i)),
      output);
  }

  // repeated .android.service.print.PrinterDiscoverySessionProto discovery_sessions = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->discovery_sessions_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->discovery_sessions(static_cast<int>(i)),
      output);
  }

  // optional .android.service.print.PrintSpoolerStateProto print_spooler_state = 7;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::print_spooler_state(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.PrintUserStateProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PrintUserStateProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.PrintUserStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 user_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->user_id(), target);
  }

  // repeated .android.service.print.InstalledPrintServiceProto installed_services = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->installed_services_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->installed_services(static_cast<int>(i)), target);
  }

  // repeated .android.content.ComponentNameProto disabled_services = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->disabled_services_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->disabled_services(static_cast<int>(i)), target);
  }

  // repeated .android.service.print.ActivePrintServiceProto active_services = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->active_services_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->active_services(static_cast<int>(i)), target);
  }

  // repeated .android.service.print.CachedPrintJobProto cached_print_jobs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cached_print_jobs_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->cached_print_jobs(static_cast<int>(i)), target);
  }

  // repeated .android.service.print.PrinterDiscoverySessionProto discovery_sessions = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->discovery_sessions_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->discovery_sessions(static_cast<int>(i)), target);
  }

  // optional .android.service.print.PrintSpoolerStateProto print_spooler_state = 7;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::print_spooler_state(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.PrintUserStateProto)
  return target;
}

size_t PrintUserStateProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.PrintUserStateProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.print.InstalledPrintServiceProto installed_services = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->installed_services_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->installed_services(static_cast<int>(i)));
    }
  }

  // repeated .android.content.ComponentNameProto disabled_services = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->disabled_services_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->disabled_services(static_cast<int>(i)));
    }
  }

  // repeated .android.service.print.ActivePrintServiceProto active_services = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->active_services_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->active_services(static_cast<int>(i)));
    }
  }

  // repeated .android.service.print.CachedPrintJobProto cached_print_jobs = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->cached_print_jobs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->cached_print_jobs(static_cast<int>(i)));
    }
  }

  // repeated .android.service.print.PrinterDiscoverySessionProto discovery_sessions = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->discovery_sessions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->discovery_sessions(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .android.service.print.PrintSpoolerStateProto print_spooler_state = 7;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *print_spooler_state_);
    }

    // optional int32 user_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->user_id());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrintUserStateProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.PrintUserStateProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PrintUserStateProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrintUserStateProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.PrintUserStateProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.PrintUserStateProto)
    MergeFrom(*source);
  }
}

void PrintUserStateProto::MergeFrom(const PrintUserStateProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.PrintUserStateProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  installed_services_.MergeFrom(from.installed_services_);
  disabled_services_.MergeFrom(from.disabled_services_);
  active_services_.MergeFrom(from.active_services_);
  cached_print_jobs_.MergeFrom(from.cached_print_jobs_);
  discovery_sessions_.MergeFrom(from.discovery_sessions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_print_spooler_state()->::android::service::print::PrintSpoolerStateProto::MergeFrom(from.print_spooler_state());
    }
    if (cached_has_bits & 0x00000002u) {
      user_id_ = from.user_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrintUserStateProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.PrintUserStateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrintUserStateProto::CopyFrom(const PrintUserStateProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.PrintUserStateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrintUserStateProto::IsInitialized() const {
  return true;
}

void PrintUserStateProto::InternalSwap(PrintUserStateProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&installed_services_)->InternalSwap(CastToBase(&other->installed_services_));
  CastToBase(&disabled_services_)->InternalSwap(CastToBase(&other->disabled_services_));
  CastToBase(&active_services_)->InternalSwap(CastToBase(&other->active_services_));
  CastToBase(&cached_print_jobs_)->InternalSwap(CastToBase(&other->cached_print_jobs_));
  CastToBase(&discovery_sessions_)->InternalSwap(CastToBase(&other->discovery_sessions_));
  swap(print_spooler_state_, other->print_spooler_state_);
  swap(user_id_, other->user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrintUserStateProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrintSpoolerStateProto::InitAsDefaultInstance() {
  ::android::service::print::_PrintSpoolerStateProto_default_instance_._instance.get_mutable()->internal_state_ = const_cast< ::android::service::print::PrintSpoolerInternalStateProto*>(
      ::android::service::print::PrintSpoolerInternalStateProto::internal_default_instance());
}
class PrintSpoolerStateProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PrintSpoolerStateProto>()._has_bits_);
  static void set_has_is_destroyed(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_is_bound(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::android::service::print::PrintSpoolerInternalStateProto& internal_state(const PrintSpoolerStateProto* msg);
  static void set_has_internal_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::service::print::PrintSpoolerInternalStateProto&
PrintSpoolerStateProto::_Internal::internal_state(const PrintSpoolerStateProto* msg) {
  return *msg->internal_state_;
}
PrintSpoolerStateProto::PrintSpoolerStateProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.PrintSpoolerStateProto)
}
PrintSpoolerStateProto::PrintSpoolerStateProto(const PrintSpoolerStateProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_internal_state()) {
    internal_state_ = new ::android::service::print::PrintSpoolerInternalStateProto(*from.internal_state_);
  } else {
    internal_state_ = nullptr;
  }
  ::memcpy(&is_destroyed_, &from.is_destroyed_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_bound_) -
    reinterpret_cast<char*>(&is_destroyed_)) + sizeof(is_bound_));
  // @@protoc_insertion_point(copy_constructor:android.service.print.PrintSpoolerStateProto)
}

void PrintSpoolerStateProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrintSpoolerStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  ::memset(&internal_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_bound_) -
      reinterpret_cast<char*>(&internal_state_)) + sizeof(is_bound_));
}

PrintSpoolerStateProto::~PrintSpoolerStateProto() {
  // @@protoc_insertion_point(destructor:android.service.print.PrintSpoolerStateProto)
  SharedDtor();
}

void PrintSpoolerStateProto::SharedDtor() {
  if (this != internal_default_instance()) delete internal_state_;
}

void PrintSpoolerStateProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrintSpoolerStateProto& PrintSpoolerStateProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrintSpoolerStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void PrintSpoolerStateProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.PrintSpoolerStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(internal_state_ != nullptr);
    internal_state_->Clear();
  }
  ::memset(&is_destroyed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_bound_) -
      reinterpret_cast<char*>(&is_destroyed_)) + sizeof(is_bound_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrintSpoolerStateProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool is_destroyed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_is_destroyed(&has_bits);
          is_destroyed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_bound = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_is_bound(&has_bits);
          is_bound_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.print.PrintSpoolerInternalStateProto internal_state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_internal_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrintSpoolerStateProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.PrintSpoolerStateProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_destroyed = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_is_destroyed(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_destroyed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_bound = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_is_bound(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_bound_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.print.PrintSpoolerInternalStateProto internal_state = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_internal_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.PrintSpoolerStateProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.PrintSpoolerStateProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrintSpoolerStateProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.PrintSpoolerStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_destroyed = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->is_destroyed(), output);
  }

  // optional bool is_bound = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->is_bound(), output);
  }

  // optional .android.service.print.PrintSpoolerInternalStateProto internal_state = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::internal_state(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.PrintSpoolerStateProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PrintSpoolerStateProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.PrintSpoolerStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_destroyed = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->is_destroyed(), target);
  }

  // optional bool is_bound = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->is_bound(), target);
  }

  // optional .android.service.print.PrintSpoolerInternalStateProto internal_state = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::internal_state(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.PrintSpoolerStateProto)
  return target;
}

size_t PrintSpoolerStateProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.PrintSpoolerStateProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .android.service.print.PrintSpoolerInternalStateProto internal_state = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *internal_state_);
    }

    // optional bool is_destroyed = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool is_bound = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrintSpoolerStateProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.PrintSpoolerStateProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PrintSpoolerStateProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrintSpoolerStateProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.PrintSpoolerStateProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.PrintSpoolerStateProto)
    MergeFrom(*source);
  }
}

void PrintSpoolerStateProto::MergeFrom(const PrintSpoolerStateProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.PrintSpoolerStateProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_internal_state()->::android::service::print::PrintSpoolerInternalStateProto::MergeFrom(from.internal_state());
    }
    if (cached_has_bits & 0x00000002u) {
      is_destroyed_ = from.is_destroyed_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_bound_ = from.is_bound_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrintSpoolerStateProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.PrintSpoolerStateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrintSpoolerStateProto::CopyFrom(const PrintSpoolerStateProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.PrintSpoolerStateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrintSpoolerStateProto::IsInitialized() const {
  return true;
}

void PrintSpoolerStateProto::InternalSwap(PrintSpoolerStateProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(internal_state_, other->internal_state_);
  swap(is_destroyed_, other->is_destroyed_);
  swap(is_bound_, other->is_bound_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrintSpoolerStateProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrintSpoolerInternalStateProto::InitAsDefaultInstance() {
}
class PrintSpoolerInternalStateProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PrintSpoolerInternalStateProto>()._has_bits_);
};

void PrintSpoolerInternalStateProto::clear_approved_services() {
  approved_services_.Clear();
}
PrintSpoolerInternalStateProto::PrintSpoolerInternalStateProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.PrintSpoolerInternalStateProto)
}
PrintSpoolerInternalStateProto::PrintSpoolerInternalStateProto(const PrintSpoolerInternalStateProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      print_jobs_(from.print_jobs_),
      print_job_files_(from.print_job_files_),
      approved_services_(from.approved_services_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:android.service.print.PrintSpoolerInternalStateProto)
}

void PrintSpoolerInternalStateProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrintSpoolerInternalStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
}

PrintSpoolerInternalStateProto::~PrintSpoolerInternalStateProto() {
  // @@protoc_insertion_point(destructor:android.service.print.PrintSpoolerInternalStateProto)
  SharedDtor();
}

void PrintSpoolerInternalStateProto::SharedDtor() {
}

void PrintSpoolerInternalStateProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrintSpoolerInternalStateProto& PrintSpoolerInternalStateProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrintSpoolerInternalStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void PrintSpoolerInternalStateProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.PrintSpoolerInternalStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  print_jobs_.Clear();
  print_job_files_.Clear();
  approved_services_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrintSpoolerInternalStateProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.service.print.PrintJobInfoProto print_jobs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_print_jobs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated string print_job_files = 2 [(.android.privacy) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_print_job_files(), ptr, ctx, "android.service.print.PrintSpoolerInternalStateProto.print_job_files");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // repeated .android.content.ComponentNameProto approved_services = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_approved_services(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrintSpoolerInternalStateProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.PrintSpoolerInternalStateProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.service.print.PrintJobInfoProto print_jobs = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_print_jobs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string print_job_files = 2 [(.android.privacy) = {
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_print_job_files()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->print_job_files(this->print_job_files_size() - 1).data(),
            static_cast<int>(this->print_job_files(this->print_job_files_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.PrintSpoolerInternalStateProto.print_job_files");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.content.ComponentNameProto approved_services = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_approved_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.PrintSpoolerInternalStateProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.PrintSpoolerInternalStateProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrintSpoolerInternalStateProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.PrintSpoolerInternalStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.service.print.PrintJobInfoProto print_jobs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->print_jobs_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->print_jobs(static_cast<int>(i)),
      output);
  }

  // repeated string print_job_files = 2 [(.android.privacy) = {
  for (int i = 0, n = this->print_job_files_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->print_job_files(i).data(), static_cast<int>(this->print_job_files(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrintSpoolerInternalStateProto.print_job_files");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      2, this->print_job_files(i), output);
  }

  // repeated .android.content.ComponentNameProto approved_services = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->approved_services_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->approved_services(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.PrintSpoolerInternalStateProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PrintSpoolerInternalStateProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.PrintSpoolerInternalStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.service.print.PrintJobInfoProto print_jobs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->print_jobs_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->print_jobs(static_cast<int>(i)), target);
  }

  // repeated string print_job_files = 2 [(.android.privacy) = {
  for (int i = 0, n = this->print_job_files_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->print_job_files(i).data(), static_cast<int>(this->print_job_files(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrintSpoolerInternalStateProto.print_job_files");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(2, this->print_job_files(i), target);
  }

  // repeated .android.content.ComponentNameProto approved_services = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->approved_services_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->approved_services(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.PrintSpoolerInternalStateProto)
  return target;
}

size_t PrintSpoolerInternalStateProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.PrintSpoolerInternalStateProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.print.PrintJobInfoProto print_jobs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->print_jobs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->print_jobs(static_cast<int>(i)));
    }
  }

  // repeated string print_job_files = 2 [(.android.privacy) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->print_job_files_size());
  for (int i = 0, n = this->print_job_files_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->print_job_files(i));
  }

  // repeated .android.content.ComponentNameProto approved_services = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->approved_services_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->approved_services(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrintSpoolerInternalStateProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.PrintSpoolerInternalStateProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PrintSpoolerInternalStateProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrintSpoolerInternalStateProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.PrintSpoolerInternalStateProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.PrintSpoolerInternalStateProto)
    MergeFrom(*source);
  }
}

void PrintSpoolerInternalStateProto::MergeFrom(const PrintSpoolerInternalStateProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.PrintSpoolerInternalStateProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  print_jobs_.MergeFrom(from.print_jobs_);
  print_job_files_.MergeFrom(from.print_job_files_);
  approved_services_.MergeFrom(from.approved_services_);
}

void PrintSpoolerInternalStateProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.PrintSpoolerInternalStateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrintSpoolerInternalStateProto::CopyFrom(const PrintSpoolerInternalStateProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.PrintSpoolerInternalStateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrintSpoolerInternalStateProto::IsInitialized() const {
  return true;
}

void PrintSpoolerInternalStateProto::InternalSwap(PrintSpoolerInternalStateProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&print_jobs_)->InternalSwap(CastToBase(&other->print_jobs_));
  print_job_files_.InternalSwap(CastToBase(&other->print_job_files_));
  CastToBase(&approved_services_)->InternalSwap(CastToBase(&other->approved_services_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PrintSpoolerInternalStateProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrinterCapabilitiesProto::InitAsDefaultInstance() {
  ::android::service::print::_PrinterCapabilitiesProto_default_instance_._instance.get_mutable()->min_margins_ = const_cast< ::android::service::print::MarginsProto*>(
      ::android::service::print::MarginsProto::internal_default_instance());
}
class PrinterCapabilitiesProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PrinterCapabilitiesProto>()._has_bits_);
  static const ::android::service::print::MarginsProto& min_margins(const PrinterCapabilitiesProto* msg);
  static void set_has_min_margins(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::service::print::MarginsProto&
PrinterCapabilitiesProto::_Internal::min_margins(const PrinterCapabilitiesProto* msg) {
  return *msg->min_margins_;
}
PrinterCapabilitiesProto::PrinterCapabilitiesProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.PrinterCapabilitiesProto)
}
PrinterCapabilitiesProto::PrinterCapabilitiesProto(const PrinterCapabilitiesProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      media_sizes_(from.media_sizes_),
      resolutions_(from.resolutions_),
      color_modes_(from.color_modes_),
      duplex_modes_(from.duplex_modes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min_margins()) {
    min_margins_ = new ::android::service::print::MarginsProto(*from.min_margins_);
  } else {
    min_margins_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:android.service.print.PrinterCapabilitiesProto)
}

void PrinterCapabilitiesProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrinterCapabilitiesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  min_margins_ = nullptr;
}

PrinterCapabilitiesProto::~PrinterCapabilitiesProto() {
  // @@protoc_insertion_point(destructor:android.service.print.PrinterCapabilitiesProto)
  SharedDtor();
}

void PrinterCapabilitiesProto::SharedDtor() {
  if (this != internal_default_instance()) delete min_margins_;
}

void PrinterCapabilitiesProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrinterCapabilitiesProto& PrinterCapabilitiesProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrinterCapabilitiesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void PrinterCapabilitiesProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.PrinterCapabilitiesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  media_sizes_.Clear();
  resolutions_.Clear();
  color_modes_.Clear();
  duplex_modes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(min_margins_ != nullptr);
    min_margins_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrinterCapabilitiesProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.service.print.MarginsProto min_margins = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_min_margins(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.print.MediaSizeProto media_sizes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_media_sizes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.print.ResolutionProto resolutions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_resolutions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.print.PrintAttributesProto.ColorMode color_modes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ptr -= 1;
          do {
            ptr += 1;
            ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::android::service::print::PrintAttributesProto_ColorMode_IsValid(val))) {
              add_color_modes(static_cast<::android::service::print::PrintAttributesProto_ColorMode>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 32);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(mutable_color_modes(), ptr, ctx, ::android::service::print::PrintAttributesProto_ColorMode_IsValid, &_internal_metadata_, 4);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.print.PrintAttributesProto.DuplexMode duplex_modes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ptr -= 1;
          do {
            ptr += 1;
            ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::android::service::print::PrintAttributesProto_DuplexMode_IsValid(val))) {
              add_duplex_modes(static_cast<::android::service::print::PrintAttributesProto_DuplexMode>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 40);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(mutable_duplex_modes(), ptr, ctx, ::android::service::print::PrintAttributesProto_DuplexMode_IsValid, &_internal_metadata_, 5);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrinterCapabilitiesProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.PrinterCapabilitiesProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.service.print.MarginsProto min_margins = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_min_margins()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.print.MediaSizeProto media_sizes = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_media_sizes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.print.ResolutionProto resolutions = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_resolutions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.print.PrintAttributesProto.ColorMode color_modes = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::print::PrintAttributesProto_ColorMode_IsValid(value)) {
            add_color_modes(static_cast< ::android::service::print::PrintAttributesProto_ColorMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 4,
                 ::android::service::print::PrintAttributesProto_ColorMode_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_color_modes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.print.PrintAttributesProto.DuplexMode duplex_modes = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::print::PrintAttributesProto_DuplexMode_IsValid(value)) {
            add_duplex_modes(static_cast< ::android::service::print::PrintAttributesProto_DuplexMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 5,
                 ::android::service::print::PrintAttributesProto_DuplexMode_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_duplex_modes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.PrinterCapabilitiesProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.PrinterCapabilitiesProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrinterCapabilitiesProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.PrinterCapabilitiesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.service.print.MarginsProto min_margins = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::min_margins(this), output);
  }

  // repeated .android.service.print.MediaSizeProto media_sizes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->media_sizes_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->media_sizes(static_cast<int>(i)),
      output);
  }

  // repeated .android.service.print.ResolutionProto resolutions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resolutions_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->resolutions(static_cast<int>(i)),
      output);
  }

  // repeated .android.service.print.PrintAttributesProto.ColorMode color_modes = 4;
  for (int i = 0, n = this->color_modes_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      4, this->color_modes(i), output);
  }

  // repeated .android.service.print.PrintAttributesProto.DuplexMode duplex_modes = 5;
  for (int i = 0, n = this->duplex_modes_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      5, this->duplex_modes(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.PrinterCapabilitiesProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PrinterCapabilitiesProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.PrinterCapabilitiesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.service.print.MarginsProto min_margins = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::min_margins(this), target);
  }

  // repeated .android.service.print.MediaSizeProto media_sizes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->media_sizes_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->media_sizes(static_cast<int>(i)), target);
  }

  // repeated .android.service.print.ResolutionProto resolutions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resolutions_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->resolutions(static_cast<int>(i)), target);
  }

  // repeated .android.service.print.PrintAttributesProto.ColorMode color_modes = 4;
  target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
    4, this->color_modes_, target);

  // repeated .android.service.print.PrintAttributesProto.DuplexMode duplex_modes = 5;
  target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
    5, this->duplex_modes_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.PrinterCapabilitiesProto)
  return target;
}

size_t PrinterCapabilitiesProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.PrinterCapabilitiesProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.print.MediaSizeProto media_sizes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->media_sizes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->media_sizes(static_cast<int>(i)));
    }
  }

  // repeated .android.service.print.ResolutionProto resolutions = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->resolutions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->resolutions(static_cast<int>(i)));
    }
  }

  // repeated .android.service.print.PrintAttributesProto.ColorMode color_modes = 4;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->color_modes_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->color_modes(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .android.service.print.PrintAttributesProto.DuplexMode duplex_modes = 5;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->duplex_modes_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->duplex_modes(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional .android.service.print.MarginsProto min_margins = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *min_margins_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrinterCapabilitiesProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.PrinterCapabilitiesProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PrinterCapabilitiesProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrinterCapabilitiesProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.PrinterCapabilitiesProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.PrinterCapabilitiesProto)
    MergeFrom(*source);
  }
}

void PrinterCapabilitiesProto::MergeFrom(const PrinterCapabilitiesProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.PrinterCapabilitiesProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  media_sizes_.MergeFrom(from.media_sizes_);
  resolutions_.MergeFrom(from.resolutions_);
  color_modes_.MergeFrom(from.color_modes_);
  duplex_modes_.MergeFrom(from.duplex_modes_);
  if (from.has_min_margins()) {
    mutable_min_margins()->::android::service::print::MarginsProto::MergeFrom(from.min_margins());
  }
}

void PrinterCapabilitiesProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.PrinterCapabilitiesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrinterCapabilitiesProto::CopyFrom(const PrinterCapabilitiesProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.PrinterCapabilitiesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrinterCapabilitiesProto::IsInitialized() const {
  return true;
}

void PrinterCapabilitiesProto::InternalSwap(PrinterCapabilitiesProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&media_sizes_)->InternalSwap(CastToBase(&other->media_sizes_));
  CastToBase(&resolutions_)->InternalSwap(CastToBase(&other->resolutions_));
  color_modes_.InternalSwap(&other->color_modes_);
  duplex_modes_.InternalSwap(&other->duplex_modes_);
  swap(min_margins_, other->min_margins_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrinterCapabilitiesProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrinterInfoProto::InitAsDefaultInstance() {
  ::android::service::print::_PrinterInfoProto_default_instance_._instance.get_mutable()->id_ = const_cast< ::android::service::print::PrinterIdProto*>(
      ::android::service::print::PrinterIdProto::internal_default_instance());
  ::android::service::print::_PrinterInfoProto_default_instance_._instance.get_mutable()->capabilities_ = const_cast< ::android::service::print::PrinterCapabilitiesProto*>(
      ::android::service::print::PrinterCapabilitiesProto::internal_default_instance());
}
class PrinterInfoProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PrinterInfoProto>()._has_bits_);
  static const ::android::service::print::PrinterIdProto& id(const PrinterInfoProto* msg);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::android::service::print::PrinterCapabilitiesProto& capabilities(const PrinterInfoProto* msg);
  static void set_has_capabilities(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::android::service::print::PrinterIdProto&
PrinterInfoProto::_Internal::id(const PrinterInfoProto* msg) {
  return *msg->id_;
}
const ::android::service::print::PrinterCapabilitiesProto&
PrinterInfoProto::_Internal::capabilities(const PrinterInfoProto* msg) {
  return *msg->capabilities_;
}
PrinterInfoProto::PrinterInfoProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.PrinterInfoProto)
}
PrinterInfoProto::PrinterInfoProto(const PrinterInfoProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_id()) {
    id_ = new ::android::service::print::PrinterIdProto(*from.id_);
  } else {
    id_ = nullptr;
  }
  if (from.has_capabilities()) {
    capabilities_ = new ::android::service::print::PrinterCapabilitiesProto(*from.capabilities_);
  } else {
    capabilities_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:android.service.print.PrinterInfoProto)
}

void PrinterInfoProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrinterInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
}

PrinterInfoProto::~PrinterInfoProto() {
  // @@protoc_insertion_point(destructor:android.service.print.PrinterInfoProto)
  SharedDtor();
}

void PrinterInfoProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete capabilities_;
}

void PrinterInfoProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrinterInfoProto& PrinterInfoProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrinterInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void PrinterInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.PrinterInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(id_ != nullptr);
      id_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(capabilities_ != nullptr);
      capabilities_->Clear();
    }
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrinterInfoProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.service.print.PrinterIdProto id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_name(), ptr, ctx, "android.service.print.PrinterInfoProto.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.print.PrinterInfoProto.Status status = 3 [(.android.privacy) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::print::PrinterInfoProto_Status_IsValid(val))) {
            set_status(static_cast<::android::service::print::PrinterInfoProto_Status>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional string description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_description(), ptr, ctx, "android.service.print.PrinterInfoProto.description");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.print.PrinterCapabilitiesProto capabilities = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_capabilities(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrinterInfoProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.PrinterInfoProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.service.print.PrinterIdProto id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.PrinterInfoProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.print.PrinterInfoProto.Status status = 3 [(.android.privacy) = {
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::print::PrinterInfoProto_Status_IsValid(value)) {
            set_status(static_cast< ::android::service::print::PrinterInfoProto_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.PrinterInfoProto.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.print.PrinterCapabilitiesProto capabilities = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_capabilities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.PrinterInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.PrinterInfoProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrinterInfoProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.PrinterInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.service.print.PrinterIdProto id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::id(this), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrinterInfoProto.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .android.service.print.PrinterInfoProto.Status status = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  // optional string description = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrinterInfoProto.description");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // optional .android.service.print.PrinterCapabilitiesProto capabilities = 5;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::capabilities(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.PrinterInfoProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PrinterInfoProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.PrinterInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.service.print.PrinterIdProto id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::id(this), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrinterInfoProto.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .android.service.print.PrinterInfoProto.Status status = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  // optional string description = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrinterInfoProto.description");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // optional .android.service.print.PrinterCapabilitiesProto capabilities = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::capabilities(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.PrinterInfoProto)
  return target;
}

size_t PrinterInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.PrinterInfoProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string description = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional .android.service.print.PrinterIdProto id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *id_);
    }

    // optional .android.service.print.PrinterCapabilitiesProto capabilities = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *capabilities_);
    }

    // optional .android.service.print.PrinterInfoProto.Status status = 3 [(.android.privacy) = {
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrinterInfoProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.PrinterInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PrinterInfoProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrinterInfoProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.PrinterInfoProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.PrinterInfoProto)
    MergeFrom(*source);
  }
}

void PrinterInfoProto::MergeFrom(const PrinterInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.PrinterInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_id()->::android::service::print::PrinterIdProto::MergeFrom(from.id());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_capabilities()->::android::service::print::PrinterCapabilitiesProto::MergeFrom(from.capabilities());
    }
    if (cached_has_bits & 0x00000010u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrinterInfoProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.PrinterInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrinterInfoProto::CopyFrom(const PrinterInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.PrinterInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrinterInfoProto::IsInitialized() const {
  return true;
}

void PrinterInfoProto::InternalSwap(PrinterInfoProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(capabilities_, other->capabilities_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrinterInfoProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrinterDiscoverySessionProto::InitAsDefaultInstance() {
}
class PrinterDiscoverySessionProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PrinterDiscoverySessionProto>()._has_bits_);
  static void set_has_is_destroyed(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_printer_discovery_in_progress(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PrinterDiscoverySessionProto::PrinterDiscoverySessionProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.PrinterDiscoverySessionProto)
}
PrinterDiscoverySessionProto::PrinterDiscoverySessionProto(const PrinterDiscoverySessionProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      printer_discovery_observers_(from.printer_discovery_observers_),
      discovery_requests_(from.discovery_requests_),
      tracked_printer_requests_(from.tracked_printer_requests_),
      printer_(from.printer_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_destroyed_, &from.is_destroyed_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_printer_discovery_in_progress_) -
    reinterpret_cast<char*>(&is_destroyed_)) + sizeof(is_printer_discovery_in_progress_));
  // @@protoc_insertion_point(copy_constructor:android.service.print.PrinterDiscoverySessionProto)
}

void PrinterDiscoverySessionProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrinterDiscoverySessionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  ::memset(&is_destroyed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_printer_discovery_in_progress_) -
      reinterpret_cast<char*>(&is_destroyed_)) + sizeof(is_printer_discovery_in_progress_));
}

PrinterDiscoverySessionProto::~PrinterDiscoverySessionProto() {
  // @@protoc_insertion_point(destructor:android.service.print.PrinterDiscoverySessionProto)
  SharedDtor();
}

void PrinterDiscoverySessionProto::SharedDtor() {
}

void PrinterDiscoverySessionProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrinterDiscoverySessionProto& PrinterDiscoverySessionProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrinterDiscoverySessionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void PrinterDiscoverySessionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.PrinterDiscoverySessionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  printer_discovery_observers_.Clear();
  discovery_requests_.Clear();
  tracked_printer_requests_.Clear();
  printer_.Clear();
  ::memset(&is_destroyed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_printer_discovery_in_progress_) -
      reinterpret_cast<char*>(&is_destroyed_)) + sizeof(is_printer_discovery_in_progress_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrinterDiscoverySessionProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool is_destroyed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_is_destroyed(&has_bits);
          is_destroyed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_printer_discovery_in_progress = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_is_printer_discovery_in_progress(&has_bits);
          is_printer_discovery_in_progress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string printer_discovery_observers = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_printer_discovery_observers(), ptr, ctx, "android.service.print.PrinterDiscoverySessionProto.printer_discovery_observers");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // repeated string discovery_requests = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_discovery_requests(), ptr, ctx, "android.service.print.PrinterDiscoverySessionProto.discovery_requests");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.print.PrinterIdProto tracked_printer_requests = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_tracked_printer_requests(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.print.PrinterInfoProto printer = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_printer(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 50);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrinterDiscoverySessionProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.PrinterDiscoverySessionProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_destroyed = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_is_destroyed(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_destroyed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_printer_discovery_in_progress = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_is_printer_discovery_in_progress(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_printer_discovery_in_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string printer_discovery_observers = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_printer_discovery_observers()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->printer_discovery_observers(this->printer_discovery_observers_size() - 1).data(),
            static_cast<int>(this->printer_discovery_observers(this->printer_discovery_observers_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.PrinterDiscoverySessionProto.printer_discovery_observers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string discovery_requests = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_discovery_requests()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->discovery_requests(this->discovery_requests_size() - 1).data(),
            static_cast<int>(this->discovery_requests(this->discovery_requests_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.PrinterDiscoverySessionProto.discovery_requests");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.print.PrinterIdProto tracked_printer_requests = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_tracked_printer_requests()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.print.PrinterInfoProto printer = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_printer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.PrinterDiscoverySessionProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.PrinterDiscoverySessionProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrinterDiscoverySessionProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.PrinterDiscoverySessionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_destroyed = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->is_destroyed(), output);
  }

  // optional bool is_printer_discovery_in_progress = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->is_printer_discovery_in_progress(), output);
  }

  // repeated string printer_discovery_observers = 3;
  for (int i = 0, n = this->printer_discovery_observers_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->printer_discovery_observers(i).data(), static_cast<int>(this->printer_discovery_observers(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrinterDiscoverySessionProto.printer_discovery_observers");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      3, this->printer_discovery_observers(i), output);
  }

  // repeated string discovery_requests = 4;
  for (int i = 0, n = this->discovery_requests_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->discovery_requests(i).data(), static_cast<int>(this->discovery_requests(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrinterDiscoverySessionProto.discovery_requests");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      4, this->discovery_requests(i), output);
  }

  // repeated .android.service.print.PrinterIdProto tracked_printer_requests = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tracked_printer_requests_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->tracked_printer_requests(static_cast<int>(i)),
      output);
  }

  // repeated .android.service.print.PrinterInfoProto printer = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->printer_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->printer(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.PrinterDiscoverySessionProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PrinterDiscoverySessionProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.PrinterDiscoverySessionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_destroyed = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->is_destroyed(), target);
  }

  // optional bool is_printer_discovery_in_progress = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->is_printer_discovery_in_progress(), target);
  }

  // repeated string printer_discovery_observers = 3;
  for (int i = 0, n = this->printer_discovery_observers_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->printer_discovery_observers(i).data(), static_cast<int>(this->printer_discovery_observers(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrinterDiscoverySessionProto.printer_discovery_observers");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(3, this->printer_discovery_observers(i), target);
  }

  // repeated string discovery_requests = 4;
  for (int i = 0, n = this->discovery_requests_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->discovery_requests(i).data(), static_cast<int>(this->discovery_requests(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrinterDiscoverySessionProto.discovery_requests");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(4, this->discovery_requests(i), target);
  }

  // repeated .android.service.print.PrinterIdProto tracked_printer_requests = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tracked_printer_requests_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->tracked_printer_requests(static_cast<int>(i)), target);
  }

  // repeated .android.service.print.PrinterInfoProto printer = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->printer_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->printer(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.PrinterDiscoverySessionProto)
  return target;
}

size_t PrinterDiscoverySessionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.PrinterDiscoverySessionProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string printer_discovery_observers = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->printer_discovery_observers_size());
  for (int i = 0, n = this->printer_discovery_observers_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->printer_discovery_observers(i));
  }

  // repeated string discovery_requests = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->discovery_requests_size());
  for (int i = 0, n = this->discovery_requests_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->discovery_requests(i));
  }

  // repeated .android.service.print.PrinterIdProto tracked_printer_requests = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->tracked_printer_requests_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->tracked_printer_requests(static_cast<int>(i)));
    }
  }

  // repeated .android.service.print.PrinterInfoProto printer = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->printer_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->printer(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool is_destroyed = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool is_printer_discovery_in_progress = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrinterDiscoverySessionProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.PrinterDiscoverySessionProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PrinterDiscoverySessionProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrinterDiscoverySessionProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.PrinterDiscoverySessionProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.PrinterDiscoverySessionProto)
    MergeFrom(*source);
  }
}

void PrinterDiscoverySessionProto::MergeFrom(const PrinterDiscoverySessionProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.PrinterDiscoverySessionProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  printer_discovery_observers_.MergeFrom(from.printer_discovery_observers_);
  discovery_requests_.MergeFrom(from.discovery_requests_);
  tracked_printer_requests_.MergeFrom(from.tracked_printer_requests_);
  printer_.MergeFrom(from.printer_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      is_destroyed_ = from.is_destroyed_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_printer_discovery_in_progress_ = from.is_printer_discovery_in_progress_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrinterDiscoverySessionProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.PrinterDiscoverySessionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrinterDiscoverySessionProto::CopyFrom(const PrinterDiscoverySessionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.PrinterDiscoverySessionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrinterDiscoverySessionProto::IsInitialized() const {
  return true;
}

void PrinterDiscoverySessionProto::InternalSwap(PrinterDiscoverySessionProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  printer_discovery_observers_.InternalSwap(CastToBase(&other->printer_discovery_observers_));
  discovery_requests_.InternalSwap(CastToBase(&other->discovery_requests_));
  CastToBase(&tracked_printer_requests_)->InternalSwap(CastToBase(&other->tracked_printer_requests_));
  CastToBase(&printer_)->InternalSwap(CastToBase(&other->printer_));
  swap(is_destroyed_, other->is_destroyed_);
  swap(is_printer_discovery_in_progress_, other->is_printer_discovery_in_progress_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrinterDiscoverySessionProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InstalledPrintServiceProto::InitAsDefaultInstance() {
  ::android::service::print::_InstalledPrintServiceProto_default_instance_._instance.get_mutable()->component_name_ = const_cast< ::android::content::ComponentNameProto*>(
      ::android::content::ComponentNameProto::internal_default_instance());
}
class InstalledPrintServiceProto::_Internal {
 public:
  using HasBits = decltype(std::declval<InstalledPrintServiceProto>()._has_bits_);
  static const ::android::content::ComponentNameProto& component_name(const InstalledPrintServiceProto* msg);
  static void set_has_component_name(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_settings_activity(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_add_printers_activity(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_advanced_options_activity(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::android::content::ComponentNameProto&
InstalledPrintServiceProto::_Internal::component_name(const InstalledPrintServiceProto* msg) {
  return *msg->component_name_;
}
void InstalledPrintServiceProto::clear_component_name() {
  if (component_name_ != nullptr) component_name_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
InstalledPrintServiceProto::InstalledPrintServiceProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.InstalledPrintServiceProto)
}
InstalledPrintServiceProto::InstalledPrintServiceProto(const InstalledPrintServiceProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  settings_activity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_settings_activity()) {
    settings_activity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.settings_activity_);
  }
  add_printers_activity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_add_printers_activity()) {
    add_printers_activity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.add_printers_activity_);
  }
  advanced_options_activity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_advanced_options_activity()) {
    advanced_options_activity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.advanced_options_activity_);
  }
  if (from.has_component_name()) {
    component_name_ = new ::android::content::ComponentNameProto(*from.component_name_);
  } else {
    component_name_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:android.service.print.InstalledPrintServiceProto)
}

void InstalledPrintServiceProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InstalledPrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  settings_activity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  add_printers_activity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  advanced_options_activity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  component_name_ = nullptr;
}

InstalledPrintServiceProto::~InstalledPrintServiceProto() {
  // @@protoc_insertion_point(destructor:android.service.print.InstalledPrintServiceProto)
  SharedDtor();
}

void InstalledPrintServiceProto::SharedDtor() {
  settings_activity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  add_printers_activity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  advanced_options_activity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete component_name_;
}

void InstalledPrintServiceProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InstalledPrintServiceProto& InstalledPrintServiceProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InstalledPrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void InstalledPrintServiceProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.InstalledPrintServiceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      settings_activity_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      add_printers_activity_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      advanced_options_activity_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(component_name_ != nullptr);
      component_name_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InstalledPrintServiceProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.content.ComponentNameProto component_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_component_name(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string settings_activity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_settings_activity(), ptr, ctx, "android.service.print.InstalledPrintServiceProto.settings_activity");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string add_printers_activity = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_add_printers_activity(), ptr, ctx, "android.service.print.InstalledPrintServiceProto.add_printers_activity");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string advanced_options_activity = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_advanced_options_activity(), ptr, ctx, "android.service.print.InstalledPrintServiceProto.advanced_options_activity");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InstalledPrintServiceProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.InstalledPrintServiceProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.content.ComponentNameProto component_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_component_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string settings_activity = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_settings_activity()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->settings_activity().data(), static_cast<int>(this->settings_activity().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.InstalledPrintServiceProto.settings_activity");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string add_printers_activity = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_add_printers_activity()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->add_printers_activity().data(), static_cast<int>(this->add_printers_activity().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.InstalledPrintServiceProto.add_printers_activity");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string advanced_options_activity = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_advanced_options_activity()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->advanced_options_activity().data(), static_cast<int>(this->advanced_options_activity().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.InstalledPrintServiceProto.advanced_options_activity");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.InstalledPrintServiceProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.InstalledPrintServiceProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InstalledPrintServiceProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.InstalledPrintServiceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.content.ComponentNameProto component_name = 1;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::component_name(this), output);
  }

  // optional string settings_activity = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->settings_activity().data(), static_cast<int>(this->settings_activity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.InstalledPrintServiceProto.settings_activity");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->settings_activity(), output);
  }

  // optional string add_printers_activity = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->add_printers_activity().data(), static_cast<int>(this->add_printers_activity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.InstalledPrintServiceProto.add_printers_activity");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->add_printers_activity(), output);
  }

  // optional string advanced_options_activity = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->advanced_options_activity().data(), static_cast<int>(this->advanced_options_activity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.InstalledPrintServiceProto.advanced_options_activity");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->advanced_options_activity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.InstalledPrintServiceProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* InstalledPrintServiceProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.InstalledPrintServiceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.content.ComponentNameProto component_name = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::component_name(this), target);
  }

  // optional string settings_activity = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->settings_activity().data(), static_cast<int>(this->settings_activity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.InstalledPrintServiceProto.settings_activity");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->settings_activity(), target);
  }

  // optional string add_printers_activity = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->add_printers_activity().data(), static_cast<int>(this->add_printers_activity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.InstalledPrintServiceProto.add_printers_activity");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->add_printers_activity(), target);
  }

  // optional string advanced_options_activity = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->advanced_options_activity().data(), static_cast<int>(this->advanced_options_activity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.InstalledPrintServiceProto.advanced_options_activity");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->advanced_options_activity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.InstalledPrintServiceProto)
  return target;
}

size_t InstalledPrintServiceProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.InstalledPrintServiceProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string settings_activity = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->settings_activity());
    }

    // optional string add_printers_activity = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->add_printers_activity());
    }

    // optional string advanced_options_activity = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->advanced_options_activity());
    }

    // optional .android.content.ComponentNameProto component_name = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *component_name_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstalledPrintServiceProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.InstalledPrintServiceProto)
  GOOGLE_DCHECK_NE(&from, this);
  const InstalledPrintServiceProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InstalledPrintServiceProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.InstalledPrintServiceProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.InstalledPrintServiceProto)
    MergeFrom(*source);
  }
}

void InstalledPrintServiceProto::MergeFrom(const InstalledPrintServiceProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.InstalledPrintServiceProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      settings_activity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.settings_activity_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      add_printers_activity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.add_printers_activity_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      advanced_options_activity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.advanced_options_activity_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_component_name()->::android::content::ComponentNameProto::MergeFrom(from.component_name());
    }
  }
}

void InstalledPrintServiceProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.InstalledPrintServiceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstalledPrintServiceProto::CopyFrom(const InstalledPrintServiceProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.InstalledPrintServiceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstalledPrintServiceProto::IsInitialized() const {
  return true;
}

void InstalledPrintServiceProto::InternalSwap(InstalledPrintServiceProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  settings_activity_.Swap(&other->settings_activity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  add_printers_activity_.Swap(&other->add_printers_activity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  advanced_options_activity_.Swap(&other->advanced_options_activity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(component_name_, other->component_name_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InstalledPrintServiceProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrinterIdProto::InitAsDefaultInstance() {
  ::android::service::print::_PrinterIdProto_default_instance_._instance.get_mutable()->service_name_ = const_cast< ::android::content::ComponentNameProto*>(
      ::android::content::ComponentNameProto::internal_default_instance());
}
class PrinterIdProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PrinterIdProto>()._has_bits_);
  static const ::android::content::ComponentNameProto& service_name(const PrinterIdProto* msg);
  static void set_has_service_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_local_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::content::ComponentNameProto&
PrinterIdProto::_Internal::service_name(const PrinterIdProto* msg) {
  return *msg->service_name_;
}
void PrinterIdProto::clear_service_name() {
  if (service_name_ != nullptr) service_name_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
PrinterIdProto::PrinterIdProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.PrinterIdProto)
}
PrinterIdProto::PrinterIdProto(const PrinterIdProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  local_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_local_id()) {
    local_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.local_id_);
  }
  if (from.has_service_name()) {
    service_name_ = new ::android::content::ComponentNameProto(*from.service_name_);
  } else {
    service_name_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:android.service.print.PrinterIdProto)
}

void PrinterIdProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrinterIdProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  local_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  service_name_ = nullptr;
}

PrinterIdProto::~PrinterIdProto() {
  // @@protoc_insertion_point(destructor:android.service.print.PrinterIdProto)
  SharedDtor();
}

void PrinterIdProto::SharedDtor() {
  local_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete service_name_;
}

void PrinterIdProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrinterIdProto& PrinterIdProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrinterIdProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void PrinterIdProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.PrinterIdProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      local_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(service_name_ != nullptr);
      service_name_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrinterIdProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.content.ComponentNameProto service_name = 1 [(.android.privacy) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_service_name(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string local_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_local_id(), ptr, ctx, "android.service.print.PrinterIdProto.local_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrinterIdProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.PrinterIdProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.content.ComponentNameProto service_name = 1 [(.android.privacy) = {
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_service_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string local_id = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_local_id()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->local_id().data(), static_cast<int>(this->local_id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.PrinterIdProto.local_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.PrinterIdProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.PrinterIdProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrinterIdProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.PrinterIdProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.content.ComponentNameProto service_name = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::service_name(this), output);
  }

  // optional string local_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->local_id().data(), static_cast<int>(this->local_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrinterIdProto.local_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->local_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.PrinterIdProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PrinterIdProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.PrinterIdProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.content.ComponentNameProto service_name = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::service_name(this), target);
  }

  // optional string local_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->local_id().data(), static_cast<int>(this->local_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrinterIdProto.local_id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->local_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.PrinterIdProto)
  return target;
}

size_t PrinterIdProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.PrinterIdProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string local_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->local_id());
    }

    // optional .android.content.ComponentNameProto service_name = 1 [(.android.privacy) = {
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *service_name_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrinterIdProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.PrinterIdProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PrinterIdProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrinterIdProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.PrinterIdProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.PrinterIdProto)
    MergeFrom(*source);
  }
}

void PrinterIdProto::MergeFrom(const PrinterIdProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.PrinterIdProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      local_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.local_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_service_name()->::android::content::ComponentNameProto::MergeFrom(from.service_name());
    }
  }
}

void PrinterIdProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.PrinterIdProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrinterIdProto::CopyFrom(const PrinterIdProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.PrinterIdProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrinterIdProto::IsInitialized() const {
  return true;
}

void PrinterIdProto::InternalSwap(PrinterIdProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  local_id_.Swap(&other->local_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(service_name_, other->service_name_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrinterIdProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActivePrintServiceProto::InitAsDefaultInstance() {
  ::android::service::print::_ActivePrintServiceProto_default_instance_._instance.get_mutable()->component_name_ = const_cast< ::android::content::ComponentNameProto*>(
      ::android::content::ComponentNameProto::internal_default_instance());
}
class ActivePrintServiceProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ActivePrintServiceProto>()._has_bits_);
  static const ::android::content::ComponentNameProto& component_name(const ActivePrintServiceProto* msg);
  static void set_has_component_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_destroyed(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_is_bound(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_has_discovery_session(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_has_active_print_jobs(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_is_discovering_printers(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::android::content::ComponentNameProto&
ActivePrintServiceProto::_Internal::component_name(const ActivePrintServiceProto* msg) {
  return *msg->component_name_;
}
void ActivePrintServiceProto::clear_component_name() {
  if (component_name_ != nullptr) component_name_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
ActivePrintServiceProto::ActivePrintServiceProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.ActivePrintServiceProto)
}
ActivePrintServiceProto::ActivePrintServiceProto(const ActivePrintServiceProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      tracked_printers_(from.tracked_printers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_component_name()) {
    component_name_ = new ::android::content::ComponentNameProto(*from.component_name_);
  } else {
    component_name_ = nullptr;
  }
  ::memcpy(&is_destroyed_, &from.is_destroyed_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_discovering_printers_) -
    reinterpret_cast<char*>(&is_destroyed_)) + sizeof(is_discovering_printers_));
  // @@protoc_insertion_point(copy_constructor:android.service.print.ActivePrintServiceProto)
}

void ActivePrintServiceProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActivePrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  ::memset(&component_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_discovering_printers_) -
      reinterpret_cast<char*>(&component_name_)) + sizeof(is_discovering_printers_));
}

ActivePrintServiceProto::~ActivePrintServiceProto() {
  // @@protoc_insertion_point(destructor:android.service.print.ActivePrintServiceProto)
  SharedDtor();
}

void ActivePrintServiceProto::SharedDtor() {
  if (this != internal_default_instance()) delete component_name_;
}

void ActivePrintServiceProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActivePrintServiceProto& ActivePrintServiceProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActivePrintServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void ActivePrintServiceProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.ActivePrintServiceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tracked_printers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(component_name_ != nullptr);
    component_name_->Clear();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&is_destroyed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_discovering_printers_) -
        reinterpret_cast<char*>(&is_destroyed_)) + sizeof(is_discovering_printers_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ActivePrintServiceProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.content.ComponentNameProto component_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_component_name(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_destroyed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_is_destroyed(&has_bits);
          is_destroyed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_bound = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_is_bound(&has_bits);
          is_bound_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool has_discovery_session = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_has_discovery_session(&has_bits);
          has_discovery_session_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool has_active_print_jobs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_has_active_print_jobs(&has_bits);
          has_active_print_jobs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_discovering_printers = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_is_discovering_printers(&has_bits);
          is_discovering_printers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.print.PrinterIdProto tracked_printers = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_tracked_printers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 58);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ActivePrintServiceProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.ActivePrintServiceProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.content.ComponentNameProto component_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_component_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_destroyed = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_is_destroyed(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_destroyed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_bound = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_is_bound(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_bound_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_discovery_session = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_has_discovery_session(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_discovery_session_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_active_print_jobs = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_has_active_print_jobs(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_active_print_jobs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_discovering_printers = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_is_discovering_printers(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_discovering_printers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.print.PrinterIdProto tracked_printers = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_tracked_printers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.ActivePrintServiceProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.ActivePrintServiceProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ActivePrintServiceProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.ActivePrintServiceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.content.ComponentNameProto component_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::component_name(this), output);
  }

  // optional bool is_destroyed = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->is_destroyed(), output);
  }

  // optional bool is_bound = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->is_bound(), output);
  }

  // optional bool has_discovery_session = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(4, this->has_discovery_session(), output);
  }

  // optional bool has_active_print_jobs = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(5, this->has_active_print_jobs(), output);
  }

  // optional bool is_discovering_printers = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->is_discovering_printers(), output);
  }

  // repeated .android.service.print.PrinterIdProto tracked_printers = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tracked_printers_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->tracked_printers(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.ActivePrintServiceProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ActivePrintServiceProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.ActivePrintServiceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.content.ComponentNameProto component_name = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::component_name(this), target);
  }

  // optional bool is_destroyed = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->is_destroyed(), target);
  }

  // optional bool is_bound = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->is_bound(), target);
  }

  // optional bool has_discovery_session = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->has_discovery_session(), target);
  }

  // optional bool has_active_print_jobs = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->has_active_print_jobs(), target);
  }

  // optional bool is_discovering_printers = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->is_discovering_printers(), target);
  }

  // repeated .android.service.print.PrinterIdProto tracked_printers = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tracked_printers_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->tracked_printers(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.ActivePrintServiceProto)
  return target;
}

size_t ActivePrintServiceProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.ActivePrintServiceProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.print.PrinterIdProto tracked_printers = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->tracked_printers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->tracked_printers(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .android.content.ComponentNameProto component_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *component_name_);
    }

    // optional bool is_destroyed = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool is_bound = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool has_discovery_session = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool has_active_print_jobs = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool is_discovering_printers = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActivePrintServiceProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.ActivePrintServiceProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivePrintServiceProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActivePrintServiceProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.ActivePrintServiceProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.ActivePrintServiceProto)
    MergeFrom(*source);
  }
}

void ActivePrintServiceProto::MergeFrom(const ActivePrintServiceProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.ActivePrintServiceProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tracked_printers_.MergeFrom(from.tracked_printers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_component_name()->::android::content::ComponentNameProto::MergeFrom(from.component_name());
    }
    if (cached_has_bits & 0x00000002u) {
      is_destroyed_ = from.is_destroyed_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_bound_ = from.is_bound_;
    }
    if (cached_has_bits & 0x00000008u) {
      has_discovery_session_ = from.has_discovery_session_;
    }
    if (cached_has_bits & 0x00000010u) {
      has_active_print_jobs_ = from.has_active_print_jobs_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_discovering_printers_ = from.is_discovering_printers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActivePrintServiceProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.ActivePrintServiceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivePrintServiceProto::CopyFrom(const ActivePrintServiceProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.ActivePrintServiceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivePrintServiceProto::IsInitialized() const {
  return true;
}

void ActivePrintServiceProto::InternalSwap(ActivePrintServiceProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&tracked_printers_)->InternalSwap(CastToBase(&other->tracked_printers_));
  swap(component_name_, other->component_name_);
  swap(is_destroyed_, other->is_destroyed_);
  swap(is_bound_, other->is_bound_);
  swap(has_discovery_session_, other->has_discovery_session_);
  swap(has_active_print_jobs_, other->has_active_print_jobs_);
  swap(is_discovering_printers_, other->is_discovering_printers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActivePrintServiceProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MediaSizeProto::InitAsDefaultInstance() {
}
class MediaSizeProto::_Internal {
 public:
  using HasBits = decltype(std::declval<MediaSizeProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_label(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_height_mils(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_width_mils(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

MediaSizeProto::MediaSizeProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.MediaSizeProto)
}
MediaSizeProto::MediaSizeProto(const MediaSizeProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&height_mils_, &from.height_mils_,
    static_cast<size_t>(reinterpret_cast<char*>(&width_mils_) -
    reinterpret_cast<char*>(&height_mils_)) + sizeof(width_mils_));
  // @@protoc_insertion_point(copy_constructor:android.service.print.MediaSizeProto)
}

void MediaSizeProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MediaSizeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&height_mils_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&width_mils_) -
      reinterpret_cast<char*>(&height_mils_)) + sizeof(width_mils_));
}

MediaSizeProto::~MediaSizeProto() {
  // @@protoc_insertion_point(destructor:android.service.print.MediaSizeProto)
  SharedDtor();
}

void MediaSizeProto::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MediaSizeProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MediaSizeProto& MediaSizeProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MediaSizeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void MediaSizeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.MediaSizeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      label_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&height_mils_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&width_mils_) -
        reinterpret_cast<char*>(&height_mils_)) + sizeof(width_mils_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MediaSizeProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_id(), ptr, ctx, "android.service.print.MediaSizeProto.id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string label = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_label(), ptr, ctx, "android.service.print.MediaSizeProto.label");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 height_mils = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_height_mils(&has_bits);
          height_mils_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 width_mils = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_width_mils(&has_bits);
          width_mils_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MediaSizeProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.MediaSizeProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.MediaSizeProto.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string label = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.MediaSizeProto.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 height_mils = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_height_mils(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_mils_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 width_mils = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_width_mils(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_mils_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.MediaSizeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.MediaSizeProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MediaSizeProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.MediaSizeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.MediaSizeProto.id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string label = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.MediaSizeProto.label");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // optional int32 height_mils = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->height_mils(), output);
  }

  // optional int32 width_mils = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->width_mils(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.MediaSizeProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* MediaSizeProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.MediaSizeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.MediaSizeProto.id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string label = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.MediaSizeProto.label");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // optional int32 height_mils = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->height_mils(), target);
  }

  // optional int32 width_mils = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->width_mils(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.MediaSizeProto)
  return target;
}

size_t MediaSizeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.MediaSizeProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string label = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional int32 height_mils = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->height_mils());
    }

    // optional int32 width_mils = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->width_mils());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MediaSizeProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.MediaSizeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MediaSizeProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MediaSizeProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.MediaSizeProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.MediaSizeProto)
    MergeFrom(*source);
  }
}

void MediaSizeProto::MergeFrom(const MediaSizeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.MediaSizeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      label_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000004u) {
      height_mils_ = from.height_mils_;
    }
    if (cached_has_bits & 0x00000008u) {
      width_mils_ = from.width_mils_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MediaSizeProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.MediaSizeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MediaSizeProto::CopyFrom(const MediaSizeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.MediaSizeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MediaSizeProto::IsInitialized() const {
  return true;
}

void MediaSizeProto::InternalSwap(MediaSizeProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_.Swap(&other->label_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(height_mils_, other->height_mils_);
  swap(width_mils_, other->width_mils_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MediaSizeProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResolutionProto::InitAsDefaultInstance() {
}
class ResolutionProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ResolutionProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_label(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_horizontal_dpi(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_vertical_dpi(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

ResolutionProto::ResolutionProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.ResolutionProto)
}
ResolutionProto::ResolutionProto(const ResolutionProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&horizontal_dpi_, &from.horizontal_dpi_,
    static_cast<size_t>(reinterpret_cast<char*>(&vertical_dpi_) -
    reinterpret_cast<char*>(&horizontal_dpi_)) + sizeof(vertical_dpi_));
  // @@protoc_insertion_point(copy_constructor:android.service.print.ResolutionProto)
}

void ResolutionProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResolutionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&horizontal_dpi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vertical_dpi_) -
      reinterpret_cast<char*>(&horizontal_dpi_)) + sizeof(vertical_dpi_));
}

ResolutionProto::~ResolutionProto() {
  // @@protoc_insertion_point(destructor:android.service.print.ResolutionProto)
  SharedDtor();
}

void ResolutionProto::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResolutionProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResolutionProto& ResolutionProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResolutionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void ResolutionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.ResolutionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      label_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&horizontal_dpi_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vertical_dpi_) -
        reinterpret_cast<char*>(&horizontal_dpi_)) + sizeof(vertical_dpi_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResolutionProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_id(), ptr, ctx, "android.service.print.ResolutionProto.id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string label = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_label(), ptr, ctx, "android.service.print.ResolutionProto.label");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 horizontal_dpi = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_horizontal_dpi(&has_bits);
          horizontal_dpi_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vertical_dpi = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_vertical_dpi(&has_bits);
          vertical_dpi_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResolutionProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.ResolutionProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.ResolutionProto.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string label = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.ResolutionProto.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 horizontal_dpi = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_horizontal_dpi(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &horizontal_dpi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vertical_dpi = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_vertical_dpi(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &vertical_dpi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.ResolutionProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.ResolutionProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResolutionProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.ResolutionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.ResolutionProto.id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string label = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.ResolutionProto.label");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // optional int32 horizontal_dpi = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->horizontal_dpi(), output);
  }

  // optional int32 vertical_dpi = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->vertical_dpi(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.ResolutionProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ResolutionProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.ResolutionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.ResolutionProto.id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string label = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.ResolutionProto.label");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // optional int32 horizontal_dpi = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->horizontal_dpi(), target);
  }

  // optional int32 vertical_dpi = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->vertical_dpi(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.ResolutionProto)
  return target;
}

size_t ResolutionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.ResolutionProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string label = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional int32 horizontal_dpi = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->horizontal_dpi());
    }

    // optional int32 vertical_dpi = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->vertical_dpi());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResolutionProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.ResolutionProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ResolutionProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResolutionProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.ResolutionProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.ResolutionProto)
    MergeFrom(*source);
  }
}

void ResolutionProto::MergeFrom(const ResolutionProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.ResolutionProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      label_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000004u) {
      horizontal_dpi_ = from.horizontal_dpi_;
    }
    if (cached_has_bits & 0x00000008u) {
      vertical_dpi_ = from.vertical_dpi_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ResolutionProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.ResolutionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResolutionProto::CopyFrom(const ResolutionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.ResolutionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResolutionProto::IsInitialized() const {
  return true;
}

void ResolutionProto::InternalSwap(ResolutionProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  label_.Swap(&other->label_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(horizontal_dpi_, other->horizontal_dpi_);
  swap(vertical_dpi_, other->vertical_dpi_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResolutionProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MarginsProto::InitAsDefaultInstance() {
}
class MarginsProto::_Internal {
 public:
  using HasBits = decltype(std::declval<MarginsProto>()._has_bits_);
  static void set_has_top_mils(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_left_mils(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_right_mils(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_bottom_mils(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

MarginsProto::MarginsProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.MarginsProto)
}
MarginsProto::MarginsProto(const MarginsProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&top_mils_, &from.top_mils_,
    static_cast<size_t>(reinterpret_cast<char*>(&bottom_mils_) -
    reinterpret_cast<char*>(&top_mils_)) + sizeof(bottom_mils_));
  // @@protoc_insertion_point(copy_constructor:android.service.print.MarginsProto)
}

void MarginsProto::SharedCtor() {
  ::memset(&top_mils_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bottom_mils_) -
      reinterpret_cast<char*>(&top_mils_)) + sizeof(bottom_mils_));
}

MarginsProto::~MarginsProto() {
  // @@protoc_insertion_point(destructor:android.service.print.MarginsProto)
  SharedDtor();
}

void MarginsProto::SharedDtor() {
}

void MarginsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MarginsProto& MarginsProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MarginsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void MarginsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.MarginsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&top_mils_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bottom_mils_) -
        reinterpret_cast<char*>(&top_mils_)) + sizeof(bottom_mils_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MarginsProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 top_mils = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_top_mils(&has_bits);
          top_mils_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 left_mils = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_left_mils(&has_bits);
          left_mils_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 right_mils = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_right_mils(&has_bits);
          right_mils_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 bottom_mils = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_bottom_mils(&has_bits);
          bottom_mils_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MarginsProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.MarginsProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 top_mils = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_top_mils(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_mils_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 left_mils = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_left_mils(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_mils_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 right_mils = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_right_mils(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_mils_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bottom_mils = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_bottom_mils(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottom_mils_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.MarginsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.MarginsProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MarginsProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.MarginsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 top_mils = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->top_mils(), output);
  }

  // optional int32 left_mils = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->left_mils(), output);
  }

  // optional int32 right_mils = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->right_mils(), output);
  }

  // optional int32 bottom_mils = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->bottom_mils(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.MarginsProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* MarginsProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.MarginsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 top_mils = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->top_mils(), target);
  }

  // optional int32 left_mils = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->left_mils(), target);
  }

  // optional int32 right_mils = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->right_mils(), target);
  }

  // optional int32 bottom_mils = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->bottom_mils(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.MarginsProto)
  return target;
}

size_t MarginsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.MarginsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int32 top_mils = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->top_mils());
    }

    // optional int32 left_mils = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->left_mils());
    }

    // optional int32 right_mils = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->right_mils());
    }

    // optional int32 bottom_mils = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->bottom_mils());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MarginsProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.MarginsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MarginsProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MarginsProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.MarginsProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.MarginsProto)
    MergeFrom(*source);
  }
}

void MarginsProto::MergeFrom(const MarginsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.MarginsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      top_mils_ = from.top_mils_;
    }
    if (cached_has_bits & 0x00000002u) {
      left_mils_ = from.left_mils_;
    }
    if (cached_has_bits & 0x00000004u) {
      right_mils_ = from.right_mils_;
    }
    if (cached_has_bits & 0x00000008u) {
      bottom_mils_ = from.bottom_mils_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MarginsProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.MarginsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarginsProto::CopyFrom(const MarginsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.MarginsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarginsProto::IsInitialized() const {
  return true;
}

void MarginsProto::InternalSwap(MarginsProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(top_mils_, other->top_mils_);
  swap(left_mils_, other->left_mils_);
  swap(right_mils_, other->right_mils_);
  swap(bottom_mils_, other->bottom_mils_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MarginsProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrintAttributesProto::InitAsDefaultInstance() {
  ::android::service::print::_PrintAttributesProto_default_instance_._instance.get_mutable()->media_size_ = const_cast< ::android::service::print::ResolutionProto*>(
      ::android::service::print::ResolutionProto::internal_default_instance());
  ::android::service::print::_PrintAttributesProto_default_instance_._instance.get_mutable()->resolution_ = const_cast< ::android::service::print::ResolutionProto*>(
      ::android::service::print::ResolutionProto::internal_default_instance());
  ::android::service::print::_PrintAttributesProto_default_instance_._instance.get_mutable()->min_margins_ = const_cast< ::android::service::print::MarginsProto*>(
      ::android::service::print::MarginsProto::internal_default_instance());
}
class PrintAttributesProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PrintAttributesProto>()._has_bits_);
  static const ::android::service::print::ResolutionProto& media_size(const PrintAttributesProto* msg);
  static void set_has_media_size(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_portrait(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::android::service::print::ResolutionProto& resolution(const PrintAttributesProto* msg);
  static void set_has_resolution(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::android::service::print::MarginsProto& min_margins(const PrintAttributesProto* msg);
  static void set_has_min_margins(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_color_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_duplex_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::android::service::print::ResolutionProto&
PrintAttributesProto::_Internal::media_size(const PrintAttributesProto* msg) {
  return *msg->media_size_;
}
const ::android::service::print::ResolutionProto&
PrintAttributesProto::_Internal::resolution(const PrintAttributesProto* msg) {
  return *msg->resolution_;
}
const ::android::service::print::MarginsProto&
PrintAttributesProto::_Internal::min_margins(const PrintAttributesProto* msg) {
  return *msg->min_margins_;
}
PrintAttributesProto::PrintAttributesProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.PrintAttributesProto)
}
PrintAttributesProto::PrintAttributesProto(const PrintAttributesProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_media_size()) {
    media_size_ = new ::android::service::print::ResolutionProto(*from.media_size_);
  } else {
    media_size_ = nullptr;
  }
  if (from.has_resolution()) {
    resolution_ = new ::android::service::print::ResolutionProto(*from.resolution_);
  } else {
    resolution_ = nullptr;
  }
  if (from.has_min_margins()) {
    min_margins_ = new ::android::service::print::MarginsProto(*from.min_margins_);
  } else {
    min_margins_ = nullptr;
  }
  ::memcpy(&is_portrait_, &from.is_portrait_,
    static_cast<size_t>(reinterpret_cast<char*>(&duplex_mode_) -
    reinterpret_cast<char*>(&is_portrait_)) + sizeof(duplex_mode_));
  // @@protoc_insertion_point(copy_constructor:android.service.print.PrintAttributesProto)
}

void PrintAttributesProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrintAttributesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  ::memset(&media_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duplex_mode_) -
      reinterpret_cast<char*>(&media_size_)) + sizeof(duplex_mode_));
}

PrintAttributesProto::~PrintAttributesProto() {
  // @@protoc_insertion_point(destructor:android.service.print.PrintAttributesProto)
  SharedDtor();
}

void PrintAttributesProto::SharedDtor() {
  if (this != internal_default_instance()) delete media_size_;
  if (this != internal_default_instance()) delete resolution_;
  if (this != internal_default_instance()) delete min_margins_;
}

void PrintAttributesProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrintAttributesProto& PrintAttributesProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrintAttributesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void PrintAttributesProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.PrintAttributesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(media_size_ != nullptr);
      media_size_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(resolution_ != nullptr);
      resolution_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(min_margins_ != nullptr);
      min_margins_->Clear();
    }
  }
  if (cached_has_bits & 0x00000038u) {
    ::memset(&is_portrait_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duplex_mode_) -
        reinterpret_cast<char*>(&is_portrait_)) + sizeof(duplex_mode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrintAttributesProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.service.print.ResolutionProto media_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_media_size(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_portrait = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_is_portrait(&has_bits);
          is_portrait_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.print.ResolutionProto resolution = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_resolution(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.print.MarginsProto min_margins = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_min_margins(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.print.PrintAttributesProto.ColorMode color_mode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::print::PrintAttributesProto_ColorMode_IsValid(val))) {
            set_color_mode(static_cast<::android::service::print::PrintAttributesProto_ColorMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.print.PrintAttributesProto.DuplexMode duplex_mode = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::print::PrintAttributesProto_DuplexMode_IsValid(val))) {
            set_duplex_mode(static_cast<::android::service::print::PrintAttributesProto_DuplexMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrintAttributesProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.PrintAttributesProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.service.print.ResolutionProto media_size = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_media_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_portrait = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_is_portrait(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_portrait_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.print.ResolutionProto resolution = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_resolution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.print.MarginsProto min_margins = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_min_margins()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.print.PrintAttributesProto.ColorMode color_mode = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::print::PrintAttributesProto_ColorMode_IsValid(value)) {
            set_color_mode(static_cast< ::android::service::print::PrintAttributesProto_ColorMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.print.PrintAttributesProto.DuplexMode duplex_mode = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::print::PrintAttributesProto_DuplexMode_IsValid(value)) {
            set_duplex_mode(static_cast< ::android::service::print::PrintAttributesProto_DuplexMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.PrintAttributesProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.PrintAttributesProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrintAttributesProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.PrintAttributesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.service.print.ResolutionProto media_size = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::media_size(this), output);
  }

  // optional bool is_portrait = 2;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->is_portrait(), output);
  }

  // optional .android.service.print.ResolutionProto resolution = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::resolution(this), output);
  }

  // optional .android.service.print.MarginsProto min_margins = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::min_margins(this), output);
  }

  // optional .android.service.print.PrintAttributesProto.ColorMode color_mode = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      5, this->color_mode(), output);
  }

  // optional .android.service.print.PrintAttributesProto.DuplexMode duplex_mode = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      6, this->duplex_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.PrintAttributesProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PrintAttributesProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.PrintAttributesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.service.print.ResolutionProto media_size = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::media_size(this), target);
  }

  // optional bool is_portrait = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->is_portrait(), target);
  }

  // optional .android.service.print.ResolutionProto resolution = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::resolution(this), target);
  }

  // optional .android.service.print.MarginsProto min_margins = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::min_margins(this), target);
  }

  // optional .android.service.print.PrintAttributesProto.ColorMode color_mode = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->color_mode(), target);
  }

  // optional .android.service.print.PrintAttributesProto.DuplexMode duplex_mode = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->duplex_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.PrintAttributesProto)
  return target;
}

size_t PrintAttributesProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.PrintAttributesProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .android.service.print.ResolutionProto media_size = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *media_size_);
    }

    // optional .android.service.print.ResolutionProto resolution = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resolution_);
    }

    // optional .android.service.print.MarginsProto min_margins = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *min_margins_);
    }

    // optional bool is_portrait = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional .android.service.print.PrintAttributesProto.ColorMode color_mode = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->color_mode());
    }

    // optional .android.service.print.PrintAttributesProto.DuplexMode duplex_mode = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->duplex_mode());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrintAttributesProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.PrintAttributesProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PrintAttributesProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrintAttributesProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.PrintAttributesProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.PrintAttributesProto)
    MergeFrom(*source);
  }
}

void PrintAttributesProto::MergeFrom(const PrintAttributesProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.PrintAttributesProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_media_size()->::android::service::print::ResolutionProto::MergeFrom(from.media_size());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_resolution()->::android::service::print::ResolutionProto::MergeFrom(from.resolution());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_min_margins()->::android::service::print::MarginsProto::MergeFrom(from.min_margins());
    }
    if (cached_has_bits & 0x00000008u) {
      is_portrait_ = from.is_portrait_;
    }
    if (cached_has_bits & 0x00000010u) {
      color_mode_ = from.color_mode_;
    }
    if (cached_has_bits & 0x00000020u) {
      duplex_mode_ = from.duplex_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrintAttributesProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.PrintAttributesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrintAttributesProto::CopyFrom(const PrintAttributesProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.PrintAttributesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrintAttributesProto::IsInitialized() const {
  return true;
}

void PrintAttributesProto::InternalSwap(PrintAttributesProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(media_size_, other->media_size_);
  swap(resolution_, other->resolution_);
  swap(min_margins_, other->min_margins_);
  swap(is_portrait_, other->is_portrait_);
  swap(color_mode_, other->color_mode_);
  swap(duplex_mode_, other->duplex_mode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrintAttributesProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrintDocumentInfoProto::InitAsDefaultInstance() {
}
class PrintDocumentInfoProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PrintDocumentInfoProto>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_page_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_content_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_data_size(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

PrintDocumentInfoProto::PrintDocumentInfoProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.PrintDocumentInfoProto)
}
PrintDocumentInfoProto::PrintDocumentInfoProto(const PrintDocumentInfoProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&page_count_, &from.page_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_size_) -
    reinterpret_cast<char*>(&page_count_)) + sizeof(data_size_));
  // @@protoc_insertion_point(copy_constructor:android.service.print.PrintDocumentInfoProto)
}

void PrintDocumentInfoProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrintDocumentInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_size_) -
      reinterpret_cast<char*>(&page_count_)) + sizeof(data_size_));
}

PrintDocumentInfoProto::~PrintDocumentInfoProto() {
  // @@protoc_insertion_point(destructor:android.service.print.PrintDocumentInfoProto)
  SharedDtor();
}

void PrintDocumentInfoProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PrintDocumentInfoProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrintDocumentInfoProto& PrintDocumentInfoProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrintDocumentInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void PrintDocumentInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.PrintDocumentInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&page_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&data_size_) -
        reinterpret_cast<char*>(&page_count_)) + sizeof(data_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrintDocumentInfoProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1 [(.android.privacy) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_name(), ptr, ctx, "android.service.print.PrintDocumentInfoProto.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 page_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_page_count(&has_bits);
          page_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 content_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_content_type(&has_bits);
          content_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 data_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_data_size(&has_bits);
          data_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrintDocumentInfoProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.PrintDocumentInfoProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1 [(.android.privacy) = {
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.PrintDocumentInfoProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 page_count = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_page_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 content_type = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_content_type(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &content_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 data_size = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_data_size(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &data_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.PrintDocumentInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.PrintDocumentInfoProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrintDocumentInfoProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.PrintDocumentInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrintDocumentInfoProto.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 page_count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->page_count(), output);
  }

  // optional int32 content_type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->content_type(), output);
  }

  // optional int64 data_size = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(4, this->data_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.PrintDocumentInfoProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PrintDocumentInfoProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.PrintDocumentInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrintDocumentInfoProto.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 page_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->page_count(), target);
  }

  // optional int32 content_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->content_type(), target);
  }

  // optional int64 data_size = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->data_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.PrintDocumentInfoProto)
  return target;
}

size_t PrintDocumentInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.PrintDocumentInfoProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string name = 1 [(.android.privacy) = {
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 page_count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->page_count());
    }

    // optional int32 content_type = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->content_type());
    }

    // optional int64 data_size = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->data_size());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrintDocumentInfoProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.PrintDocumentInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PrintDocumentInfoProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrintDocumentInfoProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.PrintDocumentInfoProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.PrintDocumentInfoProto)
    MergeFrom(*source);
  }
}

void PrintDocumentInfoProto::MergeFrom(const PrintDocumentInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.PrintDocumentInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      page_count_ = from.page_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      content_type_ = from.content_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      data_size_ = from.data_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrintDocumentInfoProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.PrintDocumentInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrintDocumentInfoProto::CopyFrom(const PrintDocumentInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.PrintDocumentInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrintDocumentInfoProto::IsInitialized() const {
  return true;
}

void PrintDocumentInfoProto::InternalSwap(PrintDocumentInfoProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_count_, other->page_count_);
  swap(content_type_, other->content_type_);
  swap(data_size_, other->data_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrintDocumentInfoProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PageRangeProto::InitAsDefaultInstance() {
}
class PageRangeProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PageRangeProto>()._has_bits_);
  static void set_has_start(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_end(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PageRangeProto::PageRangeProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.PageRangeProto)
}
PageRangeProto::PageRangeProto(const PageRangeProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&start_)) + sizeof(end_));
  // @@protoc_insertion_point(copy_constructor:android.service.print.PageRangeProto)
}

void PageRangeProto::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&start_)) + sizeof(end_));
}

PageRangeProto::~PageRangeProto() {
  // @@protoc_insertion_point(destructor:android.service.print.PageRangeProto)
  SharedDtor();
}

void PageRangeProto::SharedDtor() {
}

void PageRangeProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PageRangeProto& PageRangeProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PageRangeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void PageRangeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.PageRangeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&start_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&end_) -
        reinterpret_cast<char*>(&start_)) + sizeof(end_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PageRangeProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 start = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_start(&has_bits);
          start_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 end = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_end(&has_bits);
          end_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PageRangeProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.PageRangeProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 start = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_start(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 end = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_end(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.PageRangeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.PageRangeProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PageRangeProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.PageRangeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 start = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->start(), output);
  }

  // optional int32 end = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->end(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.PageRangeProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PageRangeProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.PageRangeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 start = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->start(), target);
  }

  // optional int32 end = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->end(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.PageRangeProto)
  return target;
}

size_t PageRangeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.PageRangeProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 start = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->start());
    }

    // optional int32 end = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->end());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PageRangeProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.PageRangeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PageRangeProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PageRangeProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.PageRangeProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.PageRangeProto)
    MergeFrom(*source);
  }
}

void PageRangeProto::MergeFrom(const PageRangeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.PageRangeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      start_ = from.start_;
    }
    if (cached_has_bits & 0x00000002u) {
      end_ = from.end_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PageRangeProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.PageRangeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PageRangeProto::CopyFrom(const PageRangeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.PageRangeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PageRangeProto::IsInitialized() const {
  return true;
}

void PageRangeProto::InternalSwap(PageRangeProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(start_, other->start_);
  swap(end_, other->end_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PageRangeProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrintJobInfoProto::InitAsDefaultInstance() {
  ::android::service::print::_PrintJobInfoProto_default_instance_._instance.get_mutable()->printer_ = const_cast< ::android::service::print::PrinterIdProto*>(
      ::android::service::print::PrinterIdProto::internal_default_instance());
  ::android::service::print::_PrintJobInfoProto_default_instance_._instance.get_mutable()->attributes_ = const_cast< ::android::service::print::PrintAttributesProto*>(
      ::android::service::print::PrintAttributesProto::internal_default_instance());
  ::android::service::print::_PrintJobInfoProto_default_instance_._instance.get_mutable()->document_info_ = const_cast< ::android::service::print::PrintDocumentInfoProto*>(
      ::android::service::print::PrintDocumentInfoProto::internal_default_instance());
}
class PrintJobInfoProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PrintJobInfoProto>()._has_bits_);
  static void set_has_label(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_print_job_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::android::service::print::PrinterIdProto& printer(const PrintJobInfoProto* msg);
  static void set_has_printer(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_creation_time(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::android::service::print::PrintAttributesProto& attributes(const PrintJobInfoProto* msg);
  static void set_has_attributes(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::android::service::print::PrintDocumentInfoProto& document_info(const PrintJobInfoProto* msg);
  static void set_has_document_info(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_is_canceling(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_has_advanced_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_progress(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::android::service::print::PrinterIdProto&
PrintJobInfoProto::_Internal::printer(const PrintJobInfoProto* msg) {
  return *msg->printer_;
}
const ::android::service::print::PrintAttributesProto&
PrintJobInfoProto::_Internal::attributes(const PrintJobInfoProto* msg) {
  return *msg->attributes_;
}
const ::android::service::print::PrintDocumentInfoProto&
PrintJobInfoProto::_Internal::document_info(const PrintJobInfoProto* msg) {
  return *msg->document_info_;
}
PrintJobInfoProto::PrintJobInfoProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.PrintJobInfoProto)
}
PrintJobInfoProto::PrintJobInfoProto(const PrintJobInfoProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      pages_(from.pages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  print_job_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_print_job_id()) {
    print_job_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.print_job_id_);
  }
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag()) {
    tag_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_status()) {
    status_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.has_printer()) {
    printer_ = new ::android::service::print::PrinterIdProto(*from.printer_);
  } else {
    printer_ = nullptr;
  }
  if (from.has_attributes()) {
    attributes_ = new ::android::service::print::PrintAttributesProto(*from.attributes_);
  } else {
    attributes_ = nullptr;
  }
  if (from.has_document_info()) {
    document_info_ = new ::android::service::print::PrintDocumentInfoProto(*from.document_info_);
  } else {
    document_info_ = nullptr;
  }
  ::memcpy(&creation_time_, &from.creation_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&creation_time_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:android.service.print.PrintJobInfoProto)
}

void PrintJobInfoProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrintJobInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  print_job_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&printer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&printer_)) + sizeof(progress_));
}

PrintJobInfoProto::~PrintJobInfoProto() {
  // @@protoc_insertion_point(destructor:android.service.print.PrintJobInfoProto)
  SharedDtor();
}

void PrintJobInfoProto::SharedDtor() {
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  print_job_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete printer_;
  if (this != internal_default_instance()) delete attributes_;
  if (this != internal_default_instance()) delete document_info_;
}

void PrintJobInfoProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrintJobInfoProto& PrintJobInfoProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrintJobInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void PrintJobInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.PrintJobInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pages_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      label_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      print_job_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      tag_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      status_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(printer_ != nullptr);
      printer_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(attributes_ != nullptr);
      attributes_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(document_info_ != nullptr);
      document_info_->Clear();
    }
  }
  creation_time_ = PROTOBUF_LONGLONG(0);
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&progress_) -
        reinterpret_cast<char*>(&state_)) + sizeof(progress_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrintJobInfoProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string label = 1 [(.android.privacy) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_label(), ptr, ctx, "android.service.print.PrintJobInfoProto.label");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string print_job_id = 2 [(.android.privacy) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_print_job_id(), ptr, ctx, "android.service.print.PrintJobInfoProto.print_job_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.print.PrintJobInfoProto.State state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::print::PrintJobInfoProto_State_IsValid(val))) {
            set_state(static_cast<::android::service::print::PrintJobInfoProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.print.PrinterIdProto printer = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_printer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string tag = 5 [(.android.privacy) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_tag(), ptr, ctx, "android.service.print.PrintJobInfoProto.tag");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 creation_time = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_creation_time(&has_bits);
          creation_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.print.PrintAttributesProto attributes = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_attributes(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.print.PrintDocumentInfoProto document_info = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(mutable_document_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_canceling = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_is_canceling(&has_bits);
          is_canceling_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.print.PageRangeProto pages = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_pages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 82);
        } else goto handle_unusual;
        continue;
      // optional bool has_advanced_options = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_has_advanced_options(&has_bits);
          has_advanced_options_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float progress = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          _Internal::set_has_progress(&has_bits);
          progress_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional string status = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_status(), ptr, ctx, "android.service.print.PrintJobInfoProto.status");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrintJobInfoProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.PrintJobInfoProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string label = 1 [(.android.privacy) = {
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.PrintJobInfoProto.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string print_job_id = 2 [(.android.privacy) = {
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_print_job_id()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->print_job_id().data(), static_cast<int>(this->print_job_id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.PrintJobInfoProto.print_job_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.print.PrintJobInfoProto.State state = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::print::PrintJobInfoProto_State_IsValid(value)) {
            set_state(static_cast< ::android::service::print::PrintJobInfoProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.print.PrinterIdProto printer = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_printer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tag = 5 [(.android.privacy) = {
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag().data(), static_cast<int>(this->tag().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.PrintJobInfoProto.tag");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 creation_time = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_creation_time(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &creation_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.print.PrintAttributesProto attributes = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.print.PrintDocumentInfoProto document_info = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_document_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_canceling = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_is_canceling(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_canceling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.print.PageRangeProto pages = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_pages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_advanced_options = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          _Internal::set_has_has_advanced_options(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_advanced_options_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float progress = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (101 & 0xFF)) {
          _Internal::set_has_progress(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string status = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status().data(), static_cast<int>(this->status().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.print.PrintJobInfoProto.status");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.PrintJobInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.PrintJobInfoProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrintJobInfoProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.PrintJobInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrintJobInfoProto.label");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // optional string print_job_id = 2 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->print_job_id().data(), static_cast<int>(this->print_job_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrintJobInfoProto.print_job_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->print_job_id(), output);
  }

  // optional .android.service.print.PrintJobInfoProto.State state = 3;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      3, this->state(), output);
  }

  // optional .android.service.print.PrinterIdProto printer = 4;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::printer(this), output);
  }

  // optional string tag = 5 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrintJobInfoProto.tag");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->tag(), output);
  }

  // optional int64 creation_time = 6;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(6, this->creation_time(), output);
  }

  // optional .android.service.print.PrintAttributesProto attributes = 7;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::attributes(this), output);
  }

  // optional .android.service.print.PrintDocumentInfoProto document_info = 8;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, _Internal::document_info(this), output);
  }

  // optional bool is_canceling = 9;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(9, this->is_canceling(), output);
  }

  // repeated .android.service.print.PageRangeProto pages = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pages_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->pages(static_cast<int>(i)),
      output);
  }

  // optional bool has_advanced_options = 11;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(11, this->has_advanced_options(), output);
  }

  // optional float progress = 12;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(12, this->progress(), output);
  }

  // optional string status = 13;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrintJobInfoProto.status");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.PrintJobInfoProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PrintJobInfoProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.PrintJobInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string label = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrintJobInfoProto.label");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // optional string print_job_id = 2 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->print_job_id().data(), static_cast<int>(this->print_job_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrintJobInfoProto.print_job_id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->print_job_id(), target);
  }

  // optional .android.service.print.PrintJobInfoProto.State state = 3;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->state(), target);
  }

  // optional .android.service.print.PrinterIdProto printer = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::printer(this), target);
  }

  // optional string tag = 5 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrintJobInfoProto.tag");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->tag(), target);
  }

  // optional int64 creation_time = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->creation_time(), target);
  }

  // optional .android.service.print.PrintAttributesProto attributes = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::attributes(this), target);
  }

  // optional .android.service.print.PrintDocumentInfoProto document_info = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::document_info(this), target);
  }

  // optional bool is_canceling = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->is_canceling(), target);
  }

  // repeated .android.service.print.PageRangeProto pages = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pages_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->pages(static_cast<int>(i)), target);
  }

  // optional bool has_advanced_options = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->has_advanced_options(), target);
  }

  // optional float progress = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(12, this->progress(), target);
  }

  // optional string status = 13;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.print.PrintJobInfoProto.status");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        13, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.PrintJobInfoProto)
  return target;
}

size_t PrintJobInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.PrintJobInfoProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.print.PageRangeProto pages = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->pages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->pages(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string label = 1 [(.android.privacy) = {
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional string print_job_id = 2 [(.android.privacy) = {
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->print_job_id());
    }

    // optional string tag = 5 [(.android.privacy) = {
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->tag());
    }

    // optional string status = 13;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->status());
    }

    // optional .android.service.print.PrinterIdProto printer = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *printer_);
    }

    // optional .android.service.print.PrintAttributesProto attributes = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *attributes_);
    }

    // optional .android.service.print.PrintDocumentInfoProto document_info = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *document_info_);
    }

    // optional int64 creation_time = 6;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->creation_time());
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional .android.service.print.PrintJobInfoProto.State state = 3;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->state());
    }

    // optional bool is_canceling = 9;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

    // optional bool has_advanced_options = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional float progress = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrintJobInfoProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.PrintJobInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PrintJobInfoProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrintJobInfoProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.PrintJobInfoProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.PrintJobInfoProto)
    MergeFrom(*source);
  }
}

void PrintJobInfoProto::MergeFrom(const PrintJobInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.PrintJobInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pages_.MergeFrom(from.pages_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      label_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      print_job_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.print_job_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      tag_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tag_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      status_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.status_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_printer()->::android::service::print::PrinterIdProto::MergeFrom(from.printer());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_attributes()->::android::service::print::PrintAttributesProto::MergeFrom(from.attributes());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_document_info()->::android::service::print::PrintDocumentInfoProto::MergeFrom(from.document_info());
    }
    if (cached_has_bits & 0x00000080u) {
      creation_time_ = from.creation_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000200u) {
      is_canceling_ = from.is_canceling_;
    }
    if (cached_has_bits & 0x00000400u) {
      has_advanced_options_ = from.has_advanced_options_;
    }
    if (cached_has_bits & 0x00000800u) {
      progress_ = from.progress_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrintJobInfoProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.PrintJobInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrintJobInfoProto::CopyFrom(const PrintJobInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.PrintJobInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrintJobInfoProto::IsInitialized() const {
  return true;
}

void PrintJobInfoProto::InternalSwap(PrintJobInfoProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&pages_)->InternalSwap(CastToBase(&other->pages_));
  label_.Swap(&other->label_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  print_job_id_.Swap(&other->print_job_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tag_.Swap(&other->tag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(printer_, other->printer_);
  swap(attributes_, other->attributes_);
  swap(document_info_, other->document_info_);
  swap(creation_time_, other->creation_time_);
  swap(state_, other->state_);
  swap(is_canceling_, other->is_canceling_);
  swap(has_advanced_options_, other->has_advanced_options_);
  swap(progress_, other->progress_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrintJobInfoProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CachedPrintJobProto::InitAsDefaultInstance() {
  ::android::service::print::_CachedPrintJobProto_default_instance_._instance.get_mutable()->print_job_ = const_cast< ::android::service::print::PrintJobInfoProto*>(
      ::android::service::print::PrintJobInfoProto::internal_default_instance());
}
class CachedPrintJobProto::_Internal {
 public:
  using HasBits = decltype(std::declval<CachedPrintJobProto>()._has_bits_);
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::android::service::print::PrintJobInfoProto& print_job(const CachedPrintJobProto* msg);
  static void set_has_print_job(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::service::print::PrintJobInfoProto&
CachedPrintJobProto::_Internal::print_job(const CachedPrintJobProto* msg) {
  return *msg->print_job_;
}
CachedPrintJobProto::CachedPrintJobProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.print.CachedPrintJobProto)
}
CachedPrintJobProto::CachedPrintJobProto(const CachedPrintJobProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_print_job()) {
    print_job_ = new ::android::service::print::PrintJobInfoProto(*from.print_job_);
  } else {
    print_job_ = nullptr;
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:android.service.print.CachedPrintJobProto)
}

void CachedPrintJobProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CachedPrintJobProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  ::memset(&print_job_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&print_job_)) + sizeof(app_id_));
}

CachedPrintJobProto::~CachedPrintJobProto() {
  // @@protoc_insertion_point(destructor:android.service.print.CachedPrintJobProto)
  SharedDtor();
}

void CachedPrintJobProto::SharedDtor() {
  if (this != internal_default_instance()) delete print_job_;
}

void CachedPrintJobProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CachedPrintJobProto& CachedPrintJobProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CachedPrintJobProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fprint_2eproto.base);
  return *internal_default_instance();
}


void CachedPrintJobProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.print.CachedPrintJobProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(print_job_ != nullptr);
    print_job_->Clear();
  }
  app_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CachedPrintJobProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.print.PrintJobInfoProto print_job = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_print_job(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CachedPrintJobProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.print.CachedPrintJobProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 app_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_app_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.print.PrintJobInfoProto print_job = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_print_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.print.CachedPrintJobProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.print.CachedPrintJobProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CachedPrintJobProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.print.CachedPrintJobProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->app_id(), output);
  }

  // optional .android.service.print.PrintJobInfoProto print_job = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::print_job(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.print.CachedPrintJobProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* CachedPrintJobProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.print.CachedPrintJobProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->app_id(), target);
  }

  // optional .android.service.print.PrintJobInfoProto print_job = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::print_job(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.print.CachedPrintJobProto)
  return target;
}

size_t CachedPrintJobProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.print.CachedPrintJobProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .android.service.print.PrintJobInfoProto print_job = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *print_job_);
    }

    // optional int32 app_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->app_id());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CachedPrintJobProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.print.CachedPrintJobProto)
  GOOGLE_DCHECK_NE(&from, this);
  const CachedPrintJobProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CachedPrintJobProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.print.CachedPrintJobProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.print.CachedPrintJobProto)
    MergeFrom(*source);
  }
}

void CachedPrintJobProto::MergeFrom(const CachedPrintJobProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.print.CachedPrintJobProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_print_job()->::android::service::print::PrintJobInfoProto::MergeFrom(from.print_job());
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CachedPrintJobProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.print.CachedPrintJobProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CachedPrintJobProto::CopyFrom(const CachedPrintJobProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.print.CachedPrintJobProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CachedPrintJobProto::IsInitialized() const {
  return true;
}

void CachedPrintJobProto::InternalSwap(CachedPrintJobProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(print_job_, other->print_job_);
  swap(app_id_, other->app_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CachedPrintJobProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace print
}  // namespace service
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::service::print::PrintServiceDumpProto* Arena::CreateMaybeMessage< ::android::service::print::PrintServiceDumpProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::PrintServiceDumpProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::PrintUserStateProto* Arena::CreateMaybeMessage< ::android::service::print::PrintUserStateProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::PrintUserStateProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::PrintSpoolerStateProto* Arena::CreateMaybeMessage< ::android::service::print::PrintSpoolerStateProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::PrintSpoolerStateProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::PrintSpoolerInternalStateProto* Arena::CreateMaybeMessage< ::android::service::print::PrintSpoolerInternalStateProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::PrintSpoolerInternalStateProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::PrinterCapabilitiesProto* Arena::CreateMaybeMessage< ::android::service::print::PrinterCapabilitiesProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::PrinterCapabilitiesProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::PrinterInfoProto* Arena::CreateMaybeMessage< ::android::service::print::PrinterInfoProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::PrinterInfoProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::PrinterDiscoverySessionProto* Arena::CreateMaybeMessage< ::android::service::print::PrinterDiscoverySessionProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::PrinterDiscoverySessionProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::InstalledPrintServiceProto* Arena::CreateMaybeMessage< ::android::service::print::InstalledPrintServiceProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::InstalledPrintServiceProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::PrinterIdProto* Arena::CreateMaybeMessage< ::android::service::print::PrinterIdProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::PrinterIdProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::ActivePrintServiceProto* Arena::CreateMaybeMessage< ::android::service::print::ActivePrintServiceProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::ActivePrintServiceProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::MediaSizeProto* Arena::CreateMaybeMessage< ::android::service::print::MediaSizeProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::MediaSizeProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::ResolutionProto* Arena::CreateMaybeMessage< ::android::service::print::ResolutionProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::ResolutionProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::MarginsProto* Arena::CreateMaybeMessage< ::android::service::print::MarginsProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::MarginsProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::PrintAttributesProto* Arena::CreateMaybeMessage< ::android::service::print::PrintAttributesProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::PrintAttributesProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::PrintDocumentInfoProto* Arena::CreateMaybeMessage< ::android::service::print::PrintDocumentInfoProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::PrintDocumentInfoProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::PageRangeProto* Arena::CreateMaybeMessage< ::android::service::print::PageRangeProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::PageRangeProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::PrintJobInfoProto* Arena::CreateMaybeMessage< ::android::service::print::PrintJobInfoProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::PrintJobInfoProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::print::CachedPrintJobProto* Arena::CreateMaybeMessage< ::android::service::print::CachedPrintJobProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::print::CachedPrintJobProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
