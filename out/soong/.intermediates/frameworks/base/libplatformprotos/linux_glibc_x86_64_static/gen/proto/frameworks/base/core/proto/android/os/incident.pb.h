// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/os/incident.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fincident_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fincident_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "frameworks/base/core/proto/android/nfc/nfc_service.pb.h"
#include "frameworks/base/core/proto/android/os/backtrace.pb.h"
#include "frameworks/base/core/proto/android/os/batterytype.pb.h"
#include "frameworks/base/core/proto/android/os/cpufreq.pb.h"
#include "frameworks/base/core/proto/android/os/cpuinfo.pb.h"
#include "frameworks/base/core/proto/android/os/cpu_usage.pb.h"
#include "frameworks/base/core/proto/android/os/data.pb.h"
#include "frameworks/base/core/proto/android/os/header.pb.h"
#include "frameworks/base/core/proto/android/os/kernelwake.pb.h"
#include "frameworks/base/core/proto/android/os/metadata.pb.h"
#include "frameworks/base/core/proto/android/os/pagetypeinfo.pb.h"
#include "frameworks/base/core/proto/android/os/procrank.pb.h"
#include "frameworks/base/core/proto/android/os/ps.pb.h"
#include "frameworks/base/core/proto/android/os/statsdata.pb.h"
#include "frameworks/base/core/proto/android/os/system_properties.pb.h"
#include "frameworks/base/core/proto/android/providers/settings.pb.h"
#include "frameworks/base/core/proto/android/server/activitymanagerservice.pb.h"
#include "frameworks/base/core/proto/android/server/alarm/alarmmanagerservice.pb.h"
#include "frameworks/base/core/proto/android/server/bluetooth_manager_service.pb.h"
#include "frameworks/base/core/proto/android/server/fingerprint.pb.h"
#include "frameworks/base/core/proto/android/server/jobscheduler.pb.h"
#include "frameworks/base/core/proto/android/server/location/context_hub.pb.h"
#include "frameworks/base/core/proto/android/server/powermanagerservice.pb.h"
#include "frameworks/base/core/proto/android/server/powerstatsservice.pb.h"
#include "frameworks/base/core/proto/android/server/windowmanagerservice.pb.h"
#include "frameworks/base/core/proto/android/service/appwidget.pb.h"
#include "frameworks/base/core/proto/android/service/battery.pb.h"
#include "frameworks/base/core/proto/android/service/batterystats.pb.h"
#include "frameworks/base/core/proto/android/service/diskstats.pb.h"
#include "frameworks/base/core/proto/android/service/dropbox.pb.h"
#include "frameworks/base/core/proto/android/service/graphicsstats.pb.h"
#include "frameworks/base/core/proto/android/service/netstats.pb.h"
#include "frameworks/base/core/proto/android/service/notification.pb.h"
#include "frameworks/base/core/proto/android/service/package.pb.h"
#include "frameworks/base/core/proto/android/service/print.pb.h"
#include "frameworks/base/core/proto/android/service/procstats.pb.h"
#include "frameworks/base/core/proto/android/service/restricted_image.pb.h"
#include "frameworks/base/core/proto/android/service/sensor_service.pb.h"
#include "frameworks/base/core/proto/android/service/usb.pb.h"
#include "frameworks/base/core/proto/android/util/event_log_tags.pb.h"
#include "frameworks/base/core/proto/android/util/log.pb.h"
#include "frameworks/base/core/proto/android/util/textdump.pb.h"
#include "frameworks/base/core/proto/android/privacy.pb.h"
#include "frameworks/base/core/proto/android/section.pb.h"
#include "frameworks/base/proto/src/ipconnectivity.pb.h"
#include "packages/modules/Permission/service/proto/com/android/role/roleservice.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fincident_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fincident_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fincident_2eproto;
namespace android {
namespace os {
class IncidentProto;
class IncidentProtoDefaultTypeInternal;
extern IncidentProtoDefaultTypeInternal _IncidentProto_default_instance_;
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::os::IncidentProto* Arena::CreateMaybeMessage<::android::os::IncidentProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace os {

// ===================================================================

class IncidentProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:android.os.IncidentProto) */ {
 public:
  IncidentProto();
  virtual ~IncidentProto();

  IncidentProto(const IncidentProto& from);
  IncidentProto(IncidentProto&& from) noexcept
    : IncidentProto() {
    *this = ::std::move(from);
  }

  inline IncidentProto& operator=(const IncidentProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline IncidentProto& operator=(IncidentProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IncidentProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IncidentProto* internal_default_instance() {
    return reinterpret_cast<const IncidentProto*>(
               &_IncidentProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IncidentProto& a, IncidentProto& b) {
    a.Swap(&b);
  }
  inline void Swap(IncidentProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IncidentProto* New() const final {
    return CreateMaybeMessage<IncidentProto>(nullptr);
  }

  IncidentProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IncidentProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IncidentProto& from);
  void MergeFrom(const IncidentProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IncidentProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.IncidentProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fincident_2eproto);
    return ::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fincident_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderFieldNumber = 1,
    kKernelVersionFieldNumber = 1002,
    kSystemTraceFieldNumber = 3026,
    kMetadataFieldNumber = 2,
    kSystemPropertiesFieldNumber = 1000,
    kEventLogTagMapFieldNumber = 1100,
    kMainLogsFieldNumber = 1101,
    kRadioLogsFieldNumber = 1102,
    kEventsLogsFieldNumber = 1103,
    kSystemLogsFieldNumber = 1104,
    kCrashLogsFieldNumber = 1105,
    kStatsLogsFieldNumber = 1106,
    kSecurityLogsFieldNumber = 1107,
    kKernelLogsFieldNumber = 1108,
    kLastMainLogsFieldNumber = 1109,
    kLastRadioLogsFieldNumber = 1110,
    kLastEventsLogsFieldNumber = 1111,
    kLastSystemLogsFieldNumber = 1112,
    kLastCrashLogsFieldNumber = 1113,
    kLastStatsLogsFieldNumber = 1114,
    kLastSecurityLogsFieldNumber = 1115,
    kPersistedLogsFieldNumber = 1116,
    kNativeTracesFieldNumber = 1200,
    kHalTracesFieldNumber = 1201,
    kJavaTracesFieldNumber = 1202,
    kProcrankFieldNumber = 2000,
    kPageTypeInfoFieldNumber = 2001,
    kKernelWakeSourcesFieldNumber = 2002,
    kCpuInfoFieldNumber = 2003,
    kCpuFreqFieldNumber = 2004,
    kProcessesAndThreadsFieldNumber = 2005,
    kBatteryTypeFieldNumber = 2006,
    kLastKmsgFieldNumber = 2007,
    kFingerprintFieldNumber = 3000,
    kNetstatsFieldNumber = 3001,
    kSettingsFieldNumber = 3002,
    kAppwidgetFieldNumber = 3003,
    kNotificationFieldNumber = 3004,
    kBatterystatsFieldNumber = 3005,
    kBatteryFieldNumber = 3006,
    kDiskstatsFieldNumber = 3007,
    kPackageFieldNumber = 3008,
    kPowerFieldNumber = 3009,
    kPrintFieldNumber = 3010,
    kProcstatsFieldNumber = 3011,
    kActivitiesFieldNumber = 3012,
    kBroadcastsFieldNumber = 3013,
    kAmservicesFieldNumber = 3014,
    kAmprocessesFieldNumber = 3015,
    kAlarmFieldNumber = 3016,
    kWindowFieldNumber = 3017,
    kMeminfoFieldNumber = 3018,
    kGraphicsstatsFieldNumber = 3019,
    kJobschedulerFieldNumber = 3020,
    kUsbFieldNumber = 3021,
    kBatteryHistoryFieldNumber = 3022,
    kStatsDataFieldNumber = 3023,
    kRoleFieldNumber = 3024,
    kRestrictedImagesFieldNumber = 3025,
    kDropboxDataAppCrashFieldNumber = 3027,
    kDropboxDataAppAnrFieldNumber = 3028,
    kDropboxDataAppNativeCrashFieldNumber = 3029,
    kDropboxDataAppStrictmodeFieldNumber = 3030,
    kDropboxDataAppWtfFieldNumber = 3031,
    kDropboxSystemAppCrashFieldNumber = 3032,
    kDropboxSystemAppAnrFieldNumber = 3033,
    kDropboxSystemAppNativeCrashFieldNumber = 3034,
    kDropboxSystemAppStrictmodeFieldNumber = 3035,
    kDropboxSystemAppWtfFieldNumber = 3036,
    kDropboxSystemServerCrashFieldNumber = 3037,
    kDropboxSystemServerAnrFieldNumber = 3038,
    kDropboxSystemServerNativeCrashFieldNumber = 3039,
    kDropboxSystemServerLowmemFieldNumber = 3040,
    kDropboxSystemServerStrictmodeFieldNumber = 3041,
    kDropboxSystemServerWatchdogFieldNumber = 3042,
    kDropboxSystemServerWtfFieldNumber = 3043,
    kDropboxSystemRecoveryLogFieldNumber = 3044,
    kDropboxSystemTombstoneFieldNumber = 3045,
    kDropboxSubsystemRestartFieldNumber = 3046,
    kProcessCpuUsageFieldNumber = 3047,
    kIpConnectivityMetricsFieldNumber = 3049,
    kBluetoothManagerFieldNumber = 3050,
    kContextHubFieldNumber = 3051,
    kNfcServiceFieldNumber = 3052,
    kSensorServiceFieldNumber = 3053,
    kPowerstatsMeterFieldNumber = 3054,
    kPowerstatsModelFieldNumber = 3055,
    kPowerstatsResidencyFieldNumber = 3056,
    kTextdumpWifiFieldNumber = 4000,
    kTextdumpBluetoothFieldNumber = 4001,
  };
  // repeated .android.os.IncidentHeaderProto header = 1;
  int header_size() const;
  void clear_header();
  ::android::os::IncidentHeaderProto* mutable_header(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::IncidentHeaderProto >*
      mutable_header();
  const ::android::os::IncidentHeaderProto& header(int index) const;
  ::android::os::IncidentHeaderProto* add_header();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::IncidentHeaderProto >&
      header() const;

  // optional string kernel_version = 1002 [(.android.privacy) = {
  bool has_kernel_version() const;
  void clear_kernel_version();
  const std::string& kernel_version() const;
  void set_kernel_version(const std::string& value);
  void set_kernel_version(std::string&& value);
  void set_kernel_version(const char* value);
  void set_kernel_version(const char* value, size_t size);
  std::string* mutable_kernel_version();
  std::string* release_kernel_version();
  void set_allocated_kernel_version(std::string* kernel_version);

  // optional bytes system_trace = 3026 [(.android.privacy) = {
  bool has_system_trace() const;
  void clear_system_trace();
  const std::string& system_trace() const;
  void set_system_trace(const std::string& value);
  void set_system_trace(std::string&& value);
  void set_system_trace(const char* value);
  void set_system_trace(const void* value, size_t size);
  std::string* mutable_system_trace();
  std::string* release_system_trace();
  void set_allocated_system_trace(std::string* system_trace);

  // optional .android.os.IncidentMetadata metadata = 2;
  bool has_metadata() const;
  void clear_metadata();
  const ::android::os::IncidentMetadata& metadata() const;
  ::android::os::IncidentMetadata* release_metadata();
  ::android::os::IncidentMetadata* mutable_metadata();
  void set_allocated_metadata(::android::os::IncidentMetadata* metadata);

  // optional .android.os.SystemPropertiesProto system_properties = 1000 [(.android.section) = {
  bool has_system_properties() const;
  void clear_system_properties();
  const ::android::os::SystemPropertiesProto& system_properties() const;
  ::android::os::SystemPropertiesProto* release_system_properties();
  ::android::os::SystemPropertiesProto* mutable_system_properties();
  void set_allocated_system_properties(::android::os::SystemPropertiesProto* system_properties);

  // optional .android.util.EventLogTagMapProto event_log_tag_map = 1100 [(.android.section) = {
  bool has_event_log_tag_map() const;
  void clear_event_log_tag_map();
  const ::android::util::EventLogTagMapProto& event_log_tag_map() const;
  ::android::util::EventLogTagMapProto* release_event_log_tag_map();
  ::android::util::EventLogTagMapProto* mutable_event_log_tag_map();
  void set_allocated_event_log_tag_map(::android::util::EventLogTagMapProto* event_log_tag_map);

  // optional .android.util.LogProto main_logs = 1101 [(.android.section) = {
  bool has_main_logs() const;
  void clear_main_logs();
  const ::android::util::LogProto& main_logs() const;
  ::android::util::LogProto* release_main_logs();
  ::android::util::LogProto* mutable_main_logs();
  void set_allocated_main_logs(::android::util::LogProto* main_logs);

  // optional .android.util.LogProto radio_logs = 1102 [(.android.section) = {
  bool has_radio_logs() const;
  void clear_radio_logs();
  const ::android::util::LogProto& radio_logs() const;
  ::android::util::LogProto* release_radio_logs();
  ::android::util::LogProto* mutable_radio_logs();
  void set_allocated_radio_logs(::android::util::LogProto* radio_logs);

  // optional .android.util.LogProto events_logs = 1103 [(.android.section) = {
  bool has_events_logs() const;
  void clear_events_logs();
  const ::android::util::LogProto& events_logs() const;
  ::android::util::LogProto* release_events_logs();
  ::android::util::LogProto* mutable_events_logs();
  void set_allocated_events_logs(::android::util::LogProto* events_logs);

  // optional .android.util.LogProto system_logs = 1104 [(.android.section) = {
  bool has_system_logs() const;
  void clear_system_logs();
  const ::android::util::LogProto& system_logs() const;
  ::android::util::LogProto* release_system_logs();
  ::android::util::LogProto* mutable_system_logs();
  void set_allocated_system_logs(::android::util::LogProto* system_logs);

  // optional .android.util.LogProto crash_logs = 1105 [(.android.section) = {
  bool has_crash_logs() const;
  void clear_crash_logs();
  const ::android::util::LogProto& crash_logs() const;
  ::android::util::LogProto* release_crash_logs();
  ::android::util::LogProto* mutable_crash_logs();
  void set_allocated_crash_logs(::android::util::LogProto* crash_logs);

  // optional .android.util.LogProto stats_logs = 1106 [(.android.section) = {
  bool has_stats_logs() const;
  void clear_stats_logs();
  const ::android::util::LogProto& stats_logs() const;
  ::android::util::LogProto* release_stats_logs();
  ::android::util::LogProto* mutable_stats_logs();
  void set_allocated_stats_logs(::android::util::LogProto* stats_logs);

  // optional .android.util.LogProto security_logs = 1107 [(.android.section) = {
  bool has_security_logs() const;
  void clear_security_logs();
  const ::android::util::LogProto& security_logs() const;
  ::android::util::LogProto* release_security_logs();
  ::android::util::LogProto* mutable_security_logs();
  void set_allocated_security_logs(::android::util::LogProto* security_logs);

  // optional .android.util.LogProto kernel_logs = 1108 [(.android.section) = {
  bool has_kernel_logs() const;
  void clear_kernel_logs();
  const ::android::util::LogProto& kernel_logs() const;
  ::android::util::LogProto* release_kernel_logs();
  ::android::util::LogProto* mutable_kernel_logs();
  void set_allocated_kernel_logs(::android::util::LogProto* kernel_logs);

  // optional .android.util.LogProto last_main_logs = 1109 [(.android.section) = {
  bool has_last_main_logs() const;
  void clear_last_main_logs();
  const ::android::util::LogProto& last_main_logs() const;
  ::android::util::LogProto* release_last_main_logs();
  ::android::util::LogProto* mutable_last_main_logs();
  void set_allocated_last_main_logs(::android::util::LogProto* last_main_logs);

  // optional .android.util.LogProto last_radio_logs = 1110 [(.android.section) = {
  bool has_last_radio_logs() const;
  void clear_last_radio_logs();
  const ::android::util::LogProto& last_radio_logs() const;
  ::android::util::LogProto* release_last_radio_logs();
  ::android::util::LogProto* mutable_last_radio_logs();
  void set_allocated_last_radio_logs(::android::util::LogProto* last_radio_logs);

  // optional .android.util.LogProto last_events_logs = 1111 [(.android.section) = {
  bool has_last_events_logs() const;
  void clear_last_events_logs();
  const ::android::util::LogProto& last_events_logs() const;
  ::android::util::LogProto* release_last_events_logs();
  ::android::util::LogProto* mutable_last_events_logs();
  void set_allocated_last_events_logs(::android::util::LogProto* last_events_logs);

  // optional .android.util.LogProto last_system_logs = 1112 [(.android.section) = {
  bool has_last_system_logs() const;
  void clear_last_system_logs();
  const ::android::util::LogProto& last_system_logs() const;
  ::android::util::LogProto* release_last_system_logs();
  ::android::util::LogProto* mutable_last_system_logs();
  void set_allocated_last_system_logs(::android::util::LogProto* last_system_logs);

  // optional .android.util.LogProto last_crash_logs = 1113 [(.android.section) = {
  bool has_last_crash_logs() const;
  void clear_last_crash_logs();
  const ::android::util::LogProto& last_crash_logs() const;
  ::android::util::LogProto* release_last_crash_logs();
  ::android::util::LogProto* mutable_last_crash_logs();
  void set_allocated_last_crash_logs(::android::util::LogProto* last_crash_logs);

  // optional .android.util.LogProto last_stats_logs = 1114 [(.android.section) = {
  bool has_last_stats_logs() const;
  void clear_last_stats_logs();
  const ::android::util::LogProto& last_stats_logs() const;
  ::android::util::LogProto* release_last_stats_logs();
  ::android::util::LogProto* mutable_last_stats_logs();
  void set_allocated_last_stats_logs(::android::util::LogProto* last_stats_logs);

  // optional .android.util.LogProto last_security_logs = 1115 [(.android.section) = {
  bool has_last_security_logs() const;
  void clear_last_security_logs();
  const ::android::util::LogProto& last_security_logs() const;
  ::android::util::LogProto* release_last_security_logs();
  ::android::util::LogProto* mutable_last_security_logs();
  void set_allocated_last_security_logs(::android::util::LogProto* last_security_logs);

  // optional .android.util.PersistedLogProto persisted_logs = 1116 [(.android.section) = {
  bool has_persisted_logs() const;
  void clear_persisted_logs();
  const ::android::util::PersistedLogProto& persisted_logs() const;
  ::android::util::PersistedLogProto* release_persisted_logs();
  ::android::util::PersistedLogProto* mutable_persisted_logs();
  void set_allocated_persisted_logs(::android::util::PersistedLogProto* persisted_logs);

  // optional .android.os.BackTraceProto native_traces = 1200 [(.android.section) = {
  bool has_native_traces() const;
  void clear_native_traces();
  const ::android::os::BackTraceProto& native_traces() const;
  ::android::os::BackTraceProto* release_native_traces();
  ::android::os::BackTraceProto* mutable_native_traces();
  void set_allocated_native_traces(::android::os::BackTraceProto* native_traces);

  // optional .android.os.BackTraceProto hal_traces = 1201 [(.android.section) = {
  bool has_hal_traces() const;
  void clear_hal_traces();
  const ::android::os::BackTraceProto& hal_traces() const;
  ::android::os::BackTraceProto* release_hal_traces();
  ::android::os::BackTraceProto* mutable_hal_traces();
  void set_allocated_hal_traces(::android::os::BackTraceProto* hal_traces);

  // optional .android.os.BackTraceProto java_traces = 1202 [(.android.section) = {
  bool has_java_traces() const;
  void clear_java_traces();
  const ::android::os::BackTraceProto& java_traces() const;
  ::android::os::BackTraceProto* release_java_traces();
  ::android::os::BackTraceProto* mutable_java_traces();
  void set_allocated_java_traces(::android::os::BackTraceProto* java_traces);

  // optional .android.os.ProcrankProto procrank = 2000 [(.android.section) = {
  bool has_procrank() const;
  void clear_procrank();
  const ::android::os::ProcrankProto& procrank() const;
  ::android::os::ProcrankProto* release_procrank();
  ::android::os::ProcrankProto* mutable_procrank();
  void set_allocated_procrank(::android::os::ProcrankProto* procrank);

  // optional .android.os.PageTypeInfoProto page_type_info = 2001 [(.android.section) = {
  bool has_page_type_info() const;
  void clear_page_type_info();
  const ::android::os::PageTypeInfoProto& page_type_info() const;
  ::android::os::PageTypeInfoProto* release_page_type_info();
  ::android::os::PageTypeInfoProto* mutable_page_type_info();
  void set_allocated_page_type_info(::android::os::PageTypeInfoProto* page_type_info);

  // optional .android.os.KernelWakeSourcesProto kernel_wake_sources = 2002 [(.android.section) = {
  bool has_kernel_wake_sources() const;
  void clear_kernel_wake_sources();
  const ::android::os::KernelWakeSourcesProto& kernel_wake_sources() const;
  ::android::os::KernelWakeSourcesProto* release_kernel_wake_sources();
  ::android::os::KernelWakeSourcesProto* mutable_kernel_wake_sources();
  void set_allocated_kernel_wake_sources(::android::os::KernelWakeSourcesProto* kernel_wake_sources);

  // optional .android.os.CpuInfoProto cpu_info = 2003 [(.android.section) = {
  bool has_cpu_info() const;
  void clear_cpu_info();
  const ::android::os::CpuInfoProto& cpu_info() const;
  ::android::os::CpuInfoProto* release_cpu_info();
  ::android::os::CpuInfoProto* mutable_cpu_info();
  void set_allocated_cpu_info(::android::os::CpuInfoProto* cpu_info);

  // optional .android.os.CpuFreqProto cpu_freq = 2004 [(.android.section) = {
  bool has_cpu_freq() const;
  void clear_cpu_freq();
  const ::android::os::CpuFreqProto& cpu_freq() const;
  ::android::os::CpuFreqProto* release_cpu_freq();
  ::android::os::CpuFreqProto* mutable_cpu_freq();
  void set_allocated_cpu_freq(::android::os::CpuFreqProto* cpu_freq);

  // optional .android.os.PsProto processes_and_threads = 2005 [(.android.section) = {
  bool has_processes_and_threads() const;
  void clear_processes_and_threads();
  const ::android::os::PsProto& processes_and_threads() const;
  ::android::os::PsProto* release_processes_and_threads();
  ::android::os::PsProto* mutable_processes_and_threads();
  void set_allocated_processes_and_threads(::android::os::PsProto* processes_and_threads);

  // optional .android.os.BatteryTypeProto battery_type = 2006 [(.android.section) = {
  bool has_battery_type() const;
  void clear_battery_type();
  const ::android::os::BatteryTypeProto& battery_type() const;
  ::android::os::BatteryTypeProto* release_battery_type();
  ::android::os::BatteryTypeProto* mutable_battery_type();
  void set_allocated_battery_type(::android::os::BatteryTypeProto* battery_type);

  // optional .android.os.GZippedFileProto last_kmsg = 2007 [(.android.privacy) = {
  bool has_last_kmsg() const;
  void clear_last_kmsg();
  const ::android::os::GZippedFileProto& last_kmsg() const;
  ::android::os::GZippedFileProto* release_last_kmsg();
  ::android::os::GZippedFileProto* mutable_last_kmsg();
  void set_allocated_last_kmsg(::android::os::GZippedFileProto* last_kmsg);

  // optional .com.android.server.biometrics.fingerprint.FingerprintServiceDumpProto fingerprint = 3000 [(.android.section) = {
  bool has_fingerprint() const;
  void clear_fingerprint();
  const ::com::android::server::biometrics::fingerprint::FingerprintServiceDumpProto& fingerprint() const;
  ::com::android::server::biometrics::fingerprint::FingerprintServiceDumpProto* release_fingerprint();
  ::com::android::server::biometrics::fingerprint::FingerprintServiceDumpProto* mutable_fingerprint();
  void set_allocated_fingerprint(::com::android::server::biometrics::fingerprint::FingerprintServiceDumpProto* fingerprint);

  // optional .android.service.NetworkStatsServiceDumpProto netstats = 3001 [(.android.section) = {
  bool has_netstats() const;
  void clear_netstats();
  const ::android::service::NetworkStatsServiceDumpProto& netstats() const;
  ::android::service::NetworkStatsServiceDumpProto* release_netstats();
  ::android::service::NetworkStatsServiceDumpProto* mutable_netstats();
  void set_allocated_netstats(::android::service::NetworkStatsServiceDumpProto* netstats);

  // optional .android.providers.settings.SettingsServiceDumpProto settings = 3002 [(.android.section) = {
  bool has_settings() const;
  void clear_settings();
  const ::android::providers::settings::SettingsServiceDumpProto& settings() const;
  ::android::providers::settings::SettingsServiceDumpProto* release_settings();
  ::android::providers::settings::SettingsServiceDumpProto* mutable_settings();
  void set_allocated_settings(::android::providers::settings::SettingsServiceDumpProto* settings);

  // optional .android.service.appwidget.AppWidgetServiceDumpProto appwidget = 3003;
  bool has_appwidget() const;
  void clear_appwidget();
  const ::android::service::appwidget::AppWidgetServiceDumpProto& appwidget() const;
  ::android::service::appwidget::AppWidgetServiceDumpProto* release_appwidget();
  ::android::service::appwidget::AppWidgetServiceDumpProto* mutable_appwidget();
  void set_allocated_appwidget(::android::service::appwidget::AppWidgetServiceDumpProto* appwidget);

  // optional .android.service.notification.NotificationServiceDumpProto notification = 3004 [(.android.section) = {
  bool has_notification() const;
  void clear_notification();
  const ::android::service::notification::NotificationServiceDumpProto& notification() const;
  ::android::service::notification::NotificationServiceDumpProto* release_notification();
  ::android::service::notification::NotificationServiceDumpProto* mutable_notification();
  void set_allocated_notification(::android::service::notification::NotificationServiceDumpProto* notification);

  // optional .android.service.batterystats.BatteryStatsServiceDumpProto batterystats = 3005 [(.android.section) = {
  bool has_batterystats() const;
  void clear_batterystats();
  const ::android::service::batterystats::BatteryStatsServiceDumpProto& batterystats() const;
  ::android::service::batterystats::BatteryStatsServiceDumpProto* release_batterystats();
  ::android::service::batterystats::BatteryStatsServiceDumpProto* mutable_batterystats();
  void set_allocated_batterystats(::android::service::batterystats::BatteryStatsServiceDumpProto* batterystats);

  // optional .android.service.battery.BatteryServiceDumpProto battery = 3006 [(.android.section) = {
  bool has_battery() const;
  void clear_battery();
  const ::android::service::battery::BatteryServiceDumpProto& battery() const;
  ::android::service::battery::BatteryServiceDumpProto* release_battery();
  ::android::service::battery::BatteryServiceDumpProto* mutable_battery();
  void set_allocated_battery(::android::service::battery::BatteryServiceDumpProto* battery);

  // optional .android.service.diskstats.DiskStatsServiceDumpProto diskstats = 3007 [(.android.section) = {
  bool has_diskstats() const;
  void clear_diskstats();
  const ::android::service::diskstats::DiskStatsServiceDumpProto& diskstats() const;
  ::android::service::diskstats::DiskStatsServiceDumpProto* release_diskstats();
  ::android::service::diskstats::DiskStatsServiceDumpProto* mutable_diskstats();
  void set_allocated_diskstats(::android::service::diskstats::DiskStatsServiceDumpProto* diskstats);

  // optional .android.service.pm.PackageServiceDumpProto package = 3008 [(.android.section) = {
  bool has_package() const;
  void clear_package();
  const ::android::service::pm::PackageServiceDumpProto& package() const;
  ::android::service::pm::PackageServiceDumpProto* release_package();
  ::android::service::pm::PackageServiceDumpProto* mutable_package();
  void set_allocated_package(::android::service::pm::PackageServiceDumpProto* package);

  // optional .com.android.server.power.PowerManagerServiceDumpProto power = 3009 [(.android.section) = {
  bool has_power() const;
  void clear_power();
  const ::com::android::server::power::PowerManagerServiceDumpProto& power() const;
  ::com::android::server::power::PowerManagerServiceDumpProto* release_power();
  ::com::android::server::power::PowerManagerServiceDumpProto* mutable_power();
  void set_allocated_power(::com::android::server::power::PowerManagerServiceDumpProto* power);

  // optional .android.service.print.PrintServiceDumpProto print = 3010 [(.android.section) = {
  bool has_print() const;
  void clear_print();
  const ::android::service::print::PrintServiceDumpProto& print() const;
  ::android::service::print::PrintServiceDumpProto* release_print();
  ::android::service::print::PrintServiceDumpProto* mutable_print();
  void set_allocated_print(::android::service::print::PrintServiceDumpProto* print);

  // optional .android.service.procstats.ProcessStatsServiceDumpProto procstats = 3011 [(.android.section) = {
  bool has_procstats() const;
  void clear_procstats();
  const ::android::service::procstats::ProcessStatsServiceDumpProto& procstats() const;
  ::android::service::procstats::ProcessStatsServiceDumpProto* release_procstats();
  ::android::service::procstats::ProcessStatsServiceDumpProto* mutable_procstats();
  void set_allocated_procstats(::android::service::procstats::ProcessStatsServiceDumpProto* procstats);

  // optional .com.android.server.am.ActivityManagerServiceDumpActivitiesProto activities = 3012 [(.android.section) = {
  bool has_activities() const;
  void clear_activities();
  const ::com::android::server::am::ActivityManagerServiceDumpActivitiesProto& activities() const;
  ::com::android::server::am::ActivityManagerServiceDumpActivitiesProto* release_activities();
  ::com::android::server::am::ActivityManagerServiceDumpActivitiesProto* mutable_activities();
  void set_allocated_activities(::com::android::server::am::ActivityManagerServiceDumpActivitiesProto* activities);

  // optional .com.android.server.am.ActivityManagerServiceDumpBroadcastsProto broadcasts = 3013 [(.android.section) = {
  bool has_broadcasts() const;
  void clear_broadcasts();
  const ::com::android::server::am::ActivityManagerServiceDumpBroadcastsProto& broadcasts() const;
  ::com::android::server::am::ActivityManagerServiceDumpBroadcastsProto* release_broadcasts();
  ::com::android::server::am::ActivityManagerServiceDumpBroadcastsProto* mutable_broadcasts();
  void set_allocated_broadcasts(::com::android::server::am::ActivityManagerServiceDumpBroadcastsProto* broadcasts);

  // optional .com.android.server.am.ActivityManagerServiceDumpServicesProto amservices = 3014 [(.android.section) = {
  bool has_amservices() const;
  void clear_amservices();
  const ::com::android::server::am::ActivityManagerServiceDumpServicesProto& amservices() const;
  ::com::android::server::am::ActivityManagerServiceDumpServicesProto* release_amservices();
  ::com::android::server::am::ActivityManagerServiceDumpServicesProto* mutable_amservices();
  void set_allocated_amservices(::com::android::server::am::ActivityManagerServiceDumpServicesProto* amservices);

  // optional .com.android.server.am.ActivityManagerServiceDumpProcessesProto amprocesses = 3015 [(.android.section) = {
  bool has_amprocesses() const;
  void clear_amprocesses();
  const ::com::android::server::am::ActivityManagerServiceDumpProcessesProto& amprocesses() const;
  ::com::android::server::am::ActivityManagerServiceDumpProcessesProto* release_amprocesses();
  ::com::android::server::am::ActivityManagerServiceDumpProcessesProto* mutable_amprocesses();
  void set_allocated_amprocesses(::com::android::server::am::ActivityManagerServiceDumpProcessesProto* amprocesses);

  // optional .com.android.server.alarm.AlarmManagerServiceDumpProto alarm = 3016 [(.android.section) = {
  bool has_alarm() const;
  void clear_alarm();
  const ::com::android::server::alarm::AlarmManagerServiceDumpProto& alarm() const;
  ::com::android::server::alarm::AlarmManagerServiceDumpProto* release_alarm();
  ::com::android::server::alarm::AlarmManagerServiceDumpProto* mutable_alarm();
  void set_allocated_alarm(::com::android::server::alarm::AlarmManagerServiceDumpProto* alarm);

  // optional .com.android.server.wm.WindowManagerServiceDumpProto window = 3017 [(.android.section) = {
  bool has_window() const;
  void clear_window();
  const ::com::android::server::wm::WindowManagerServiceDumpProto& window() const;
  ::com::android::server::wm::WindowManagerServiceDumpProto* release_window();
  ::com::android::server::wm::WindowManagerServiceDumpProto* mutable_window();
  void set_allocated_window(::com::android::server::wm::WindowManagerServiceDumpProto* window);

  // optional .com.android.server.am.MemInfoDumpProto meminfo = 3018 [(.android.section) = {
  bool has_meminfo() const;
  void clear_meminfo();
  const ::com::android::server::am::MemInfoDumpProto& meminfo() const;
  ::com::android::server::am::MemInfoDumpProto* release_meminfo();
  ::com::android::server::am::MemInfoDumpProto* mutable_meminfo();
  void set_allocated_meminfo(::com::android::server::am::MemInfoDumpProto* meminfo);

  // optional .android.service.GraphicsStatsServiceDumpProto graphicsstats = 3019 [(.android.section) = {
  bool has_graphicsstats() const;
  void clear_graphicsstats();
  const ::android::service::GraphicsStatsServiceDumpProto& graphicsstats() const;
  ::android::service::GraphicsStatsServiceDumpProto* release_graphicsstats();
  ::android::service::GraphicsStatsServiceDumpProto* mutable_graphicsstats();
  void set_allocated_graphicsstats(::android::service::GraphicsStatsServiceDumpProto* graphicsstats);

  // optional .com.android.server.job.JobSchedulerServiceDumpProto jobscheduler = 3020 [(.android.section) = {
  bool has_jobscheduler() const;
  void clear_jobscheduler();
  const ::com::android::server::job::JobSchedulerServiceDumpProto& jobscheduler() const;
  ::com::android::server::job::JobSchedulerServiceDumpProto* release_jobscheduler();
  ::com::android::server::job::JobSchedulerServiceDumpProto* mutable_jobscheduler();
  void set_allocated_jobscheduler(::com::android::server::job::JobSchedulerServiceDumpProto* jobscheduler);

  // optional .android.service.usb.UsbServiceDumpProto usb = 3021 [(.android.section) = {
  bool has_usb() const;
  void clear_usb();
  const ::android::service::usb::UsbServiceDumpProto& usb() const;
  ::android::service::usb::UsbServiceDumpProto* release_usb();
  ::android::service::usb::UsbServiceDumpProto* mutable_usb();
  void set_allocated_usb(::android::service::usb::UsbServiceDumpProto* usb);

  // optional .android.service.batterystats.BatteryStatsServiceDumpHistoryProto battery_history = 3022 [(.android.section) = {
  bool has_battery_history() const;
  void clear_battery_history();
  const ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto& battery_history() const;
  ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto* release_battery_history();
  ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto* mutable_battery_history();
  void set_allocated_battery_history(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto* battery_history);

  // optional .android.os.StatsDataDumpProto stats_data = 3023 [(.android.section) = {
  bool has_stats_data() const;
  void clear_stats_data();
  const ::android::os::StatsDataDumpProto& stats_data() const;
  ::android::os::StatsDataDumpProto* release_stats_data();
  ::android::os::StatsDataDumpProto* mutable_stats_data();
  void set_allocated_stats_data(::android::os::StatsDataDumpProto* stats_data);

  // optional .com.android.role.RoleServiceDumpProto role = 3024 [(.android.section) = {
  bool has_role() const;
  void clear_role();
  const ::com::android::role::RoleServiceDumpProto& role() const;
  ::com::android::role::RoleServiceDumpProto* release_role();
  ::com::android::role::RoleServiceDumpProto* mutable_role();
  void set_allocated_role(::com::android::role::RoleServiceDumpProto* role);

  // optional .android.service.restricted_image.RestrictedImagesDumpProto restricted_images = 3025 [(.android.section) = {
  bool has_restricted_images() const;
  void clear_restricted_images();
  const ::android::service::restricted_image::RestrictedImagesDumpProto& restricted_images() const;
  ::android::service::restricted_image::RestrictedImagesDumpProto* release_restricted_images();
  ::android::service::restricted_image::RestrictedImagesDumpProto* mutable_restricted_images();
  void set_allocated_restricted_images(::android::service::restricted_image::RestrictedImagesDumpProto* restricted_images);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_data_app_crash = 3027 [(.android.section) = {
  bool has_dropbox_data_app_crash() const;
  void clear_dropbox_data_app_crash();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_data_app_crash() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_data_app_crash();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_data_app_crash();
  void set_allocated_dropbox_data_app_crash(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_crash);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_data_app_anr = 3028 [(.android.section) = {
  bool has_dropbox_data_app_anr() const;
  void clear_dropbox_data_app_anr();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_data_app_anr() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_data_app_anr();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_data_app_anr();
  void set_allocated_dropbox_data_app_anr(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_anr);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_data_app_native_crash = 3029 [(.android.section) = {
  bool has_dropbox_data_app_native_crash() const;
  void clear_dropbox_data_app_native_crash();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_data_app_native_crash() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_data_app_native_crash();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_data_app_native_crash();
  void set_allocated_dropbox_data_app_native_crash(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_native_crash);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_data_app_strictmode = 3030 [(.android.section) = {
  bool has_dropbox_data_app_strictmode() const;
  void clear_dropbox_data_app_strictmode();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_data_app_strictmode() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_data_app_strictmode();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_data_app_strictmode();
  void set_allocated_dropbox_data_app_strictmode(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_strictmode);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_data_app_wtf = 3031 [(.android.section) = {
  bool has_dropbox_data_app_wtf() const;
  void clear_dropbox_data_app_wtf();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_data_app_wtf() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_data_app_wtf();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_data_app_wtf();
  void set_allocated_dropbox_data_app_wtf(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_wtf);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_app_crash = 3032 [(.android.section) = {
  bool has_dropbox_system_app_crash() const;
  void clear_dropbox_system_app_crash();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_system_app_crash() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_system_app_crash();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_system_app_crash();
  void set_allocated_dropbox_system_app_crash(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_crash);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_app_anr = 3033 [(.android.section) = {
  bool has_dropbox_system_app_anr() const;
  void clear_dropbox_system_app_anr();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_system_app_anr() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_system_app_anr();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_system_app_anr();
  void set_allocated_dropbox_system_app_anr(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_anr);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_app_native_crash = 3034 [(.android.section) = {
  bool has_dropbox_system_app_native_crash() const;
  void clear_dropbox_system_app_native_crash();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_system_app_native_crash() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_system_app_native_crash();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_system_app_native_crash();
  void set_allocated_dropbox_system_app_native_crash(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_native_crash);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_app_strictmode = 3035 [(.android.section) = {
  bool has_dropbox_system_app_strictmode() const;
  void clear_dropbox_system_app_strictmode();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_system_app_strictmode() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_system_app_strictmode();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_system_app_strictmode();
  void set_allocated_dropbox_system_app_strictmode(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_strictmode);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_app_wtf = 3036 [(.android.section) = {
  bool has_dropbox_system_app_wtf() const;
  void clear_dropbox_system_app_wtf();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_system_app_wtf() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_system_app_wtf();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_system_app_wtf();
  void set_allocated_dropbox_system_app_wtf(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_wtf);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_server_crash = 3037 [(.android.section) = {
  bool has_dropbox_system_server_crash() const;
  void clear_dropbox_system_server_crash();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_system_server_crash() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_system_server_crash();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_system_server_crash();
  void set_allocated_dropbox_system_server_crash(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_crash);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_server_anr = 3038 [(.android.section) = {
  bool has_dropbox_system_server_anr() const;
  void clear_dropbox_system_server_anr();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_system_server_anr() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_system_server_anr();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_system_server_anr();
  void set_allocated_dropbox_system_server_anr(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_anr);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_server_native_crash = 3039 [(.android.section) = {
  bool has_dropbox_system_server_native_crash() const;
  void clear_dropbox_system_server_native_crash();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_system_server_native_crash() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_system_server_native_crash();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_system_server_native_crash();
  void set_allocated_dropbox_system_server_native_crash(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_native_crash);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_server_lowmem = 3040 [(.android.section) = {
  bool has_dropbox_system_server_lowmem() const;
  void clear_dropbox_system_server_lowmem();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_system_server_lowmem() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_system_server_lowmem();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_system_server_lowmem();
  void set_allocated_dropbox_system_server_lowmem(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_lowmem);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_server_strictmode = 3041 [(.android.section) = {
  bool has_dropbox_system_server_strictmode() const;
  void clear_dropbox_system_server_strictmode();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_system_server_strictmode() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_system_server_strictmode();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_system_server_strictmode();
  void set_allocated_dropbox_system_server_strictmode(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_strictmode);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_server_watchdog = 3042 [(.android.section) = {
  bool has_dropbox_system_server_watchdog() const;
  void clear_dropbox_system_server_watchdog();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_system_server_watchdog() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_system_server_watchdog();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_system_server_watchdog();
  void set_allocated_dropbox_system_server_watchdog(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_watchdog);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_server_wtf = 3043 [(.android.section) = {
  bool has_dropbox_system_server_wtf() const;
  void clear_dropbox_system_server_wtf();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_system_server_wtf() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_system_server_wtf();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_system_server_wtf();
  void set_allocated_dropbox_system_server_wtf(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_wtf);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_recovery_log = 3044 [(.android.section) = {
  bool has_dropbox_system_recovery_log() const;
  void clear_dropbox_system_recovery_log();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_system_recovery_log() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_system_recovery_log();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_system_recovery_log();
  void set_allocated_dropbox_system_recovery_log(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_recovery_log);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_tombstone = 3045 [(.android.section) = {
  bool has_dropbox_system_tombstone() const;
  void clear_dropbox_system_tombstone();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_system_tombstone() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_system_tombstone();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_system_tombstone();
  void set_allocated_dropbox_system_tombstone(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_tombstone);

  // optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_subsystem_restart = 3046 [(.android.section) = {
  bool has_dropbox_subsystem_restart() const;
  void clear_dropbox_subsystem_restart();
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto& dropbox_subsystem_restart() const;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* release_dropbox_subsystem_restart();
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* mutable_dropbox_subsystem_restart();
  void set_allocated_dropbox_subsystem_restart(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_subsystem_restart);

  // optional .android.os.CpuUsageProto process_cpu_usage = 3047 [(.android.section) = {
  bool has_process_cpu_usage() const;
  void clear_process_cpu_usage();
  const ::android::os::CpuUsageProto& process_cpu_usage() const;
  ::android::os::CpuUsageProto* release_process_cpu_usage();
  ::android::os::CpuUsageProto* mutable_process_cpu_usage();
  void set_allocated_process_cpu_usage(::android::os::CpuUsageProto* process_cpu_usage);

  // optional .clearcut.connectivity.IpConnectivityLog ip_connectivity_metrics = 3049 [(.android.section) = {
  bool has_ip_connectivity_metrics() const;
  void clear_ip_connectivity_metrics();
  const ::clearcut::connectivity::IpConnectivityLog& ip_connectivity_metrics() const;
  ::clearcut::connectivity::IpConnectivityLog* release_ip_connectivity_metrics();
  ::clearcut::connectivity::IpConnectivityLog* mutable_ip_connectivity_metrics();
  void set_allocated_ip_connectivity_metrics(::clearcut::connectivity::IpConnectivityLog* ip_connectivity_metrics);

  // optional .com.android.server.BluetoothManagerServiceDumpProto bluetooth_manager = 3050 [(.android.section) = {
  bool has_bluetooth_manager() const;
  void clear_bluetooth_manager();
  const ::com::android::server::BluetoothManagerServiceDumpProto& bluetooth_manager() const;
  ::com::android::server::BluetoothManagerServiceDumpProto* release_bluetooth_manager();
  ::com::android::server::BluetoothManagerServiceDumpProto* mutable_bluetooth_manager();
  void set_allocated_bluetooth_manager(::com::android::server::BluetoothManagerServiceDumpProto* bluetooth_manager);

  // optional .com.android.server.location.ContextHubServiceProto context_hub = 3051 [(.android.section) = {
  bool has_context_hub() const;
  void clear_context_hub();
  const ::com::android::server::location::ContextHubServiceProto& context_hub() const;
  ::com::android::server::location::ContextHubServiceProto* release_context_hub();
  ::com::android::server::location::ContextHubServiceProto* mutable_context_hub();
  void set_allocated_context_hub(::com::android::server::location::ContextHubServiceProto* context_hub);

  // optional .com.android.nfc.NfcServiceDumpProto nfc_service = 3052 [(.android.section) = {
  bool has_nfc_service() const;
  void clear_nfc_service();
  const ::com::android::nfc::NfcServiceDumpProto& nfc_service() const;
  ::com::android::nfc::NfcServiceDumpProto* release_nfc_service();
  ::com::android::nfc::NfcServiceDumpProto* mutable_nfc_service();
  void set_allocated_nfc_service(::com::android::nfc::NfcServiceDumpProto* nfc_service);

  // optional .android.service.SensorServiceProto sensor_service = 3053 [(.android.section) = {
  bool has_sensor_service() const;
  void clear_sensor_service();
  const ::android::service::SensorServiceProto& sensor_service() const;
  ::android::service::SensorServiceProto* release_sensor_service();
  ::android::service::SensorServiceProto* mutable_sensor_service();
  void set_allocated_sensor_service(::android::service::SensorServiceProto* sensor_service);

  // optional .com.android.server.powerstats.PowerStatsServiceMeterProto powerstats_meter = 3054 [(.android.section) = {
  bool has_powerstats_meter() const;
  void clear_powerstats_meter();
  const ::com::android::server::powerstats::PowerStatsServiceMeterProto& powerstats_meter() const;
  ::com::android::server::powerstats::PowerStatsServiceMeterProto* release_powerstats_meter();
  ::com::android::server::powerstats::PowerStatsServiceMeterProto* mutable_powerstats_meter();
  void set_allocated_powerstats_meter(::com::android::server::powerstats::PowerStatsServiceMeterProto* powerstats_meter);

  // optional .com.android.server.powerstats.PowerStatsServiceModelProto powerstats_model = 3055 [(.android.section) = {
  bool has_powerstats_model() const;
  void clear_powerstats_model();
  const ::com::android::server::powerstats::PowerStatsServiceModelProto& powerstats_model() const;
  ::com::android::server::powerstats::PowerStatsServiceModelProto* release_powerstats_model();
  ::com::android::server::powerstats::PowerStatsServiceModelProto* mutable_powerstats_model();
  void set_allocated_powerstats_model(::com::android::server::powerstats::PowerStatsServiceModelProto* powerstats_model);

  // optional .com.android.server.powerstats.PowerStatsServiceResidencyProto powerstats_residency = 3056 [(.android.section) = {
  bool has_powerstats_residency() const;
  void clear_powerstats_residency();
  const ::com::android::server::powerstats::PowerStatsServiceResidencyProto& powerstats_residency() const;
  ::com::android::server::powerstats::PowerStatsServiceResidencyProto* release_powerstats_residency();
  ::com::android::server::powerstats::PowerStatsServiceResidencyProto* mutable_powerstats_residency();
  void set_allocated_powerstats_residency(::com::android::server::powerstats::PowerStatsServiceResidencyProto* powerstats_residency);

  // optional .android.util.TextDumpProto textdump_wifi = 4000 [(.android.section) = {
  bool has_textdump_wifi() const;
  void clear_textdump_wifi();
  const ::android::util::TextDumpProto& textdump_wifi() const;
  ::android::util::TextDumpProto* release_textdump_wifi();
  ::android::util::TextDumpProto* mutable_textdump_wifi();
  void set_allocated_textdump_wifi(::android::util::TextDumpProto* textdump_wifi);

  // optional .android.util.TextDumpProto textdump_bluetooth = 4001 [(.android.section) = {
  bool has_textdump_bluetooth() const;
  void clear_textdump_bluetooth();
  const ::android::util::TextDumpProto& textdump_bluetooth() const;
  ::android::util::TextDumpProto* release_textdump_bluetooth();
  ::android::util::TextDumpProto* mutable_textdump_bluetooth();
  void set_allocated_textdump_bluetooth(::android::util::TextDumpProto* textdump_bluetooth);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(IncidentProto)
  // @@protoc_insertion_point(class_scope:android.os.IncidentProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::ExtensionSet _extensions_;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<3> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::IncidentHeaderProto > header_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr kernel_version_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr system_trace_;
  ::android::os::IncidentMetadata* metadata_;
  ::android::os::SystemPropertiesProto* system_properties_;
  ::android::util::EventLogTagMapProto* event_log_tag_map_;
  ::android::util::LogProto* main_logs_;
  ::android::util::LogProto* radio_logs_;
  ::android::util::LogProto* events_logs_;
  ::android::util::LogProto* system_logs_;
  ::android::util::LogProto* crash_logs_;
  ::android::util::LogProto* stats_logs_;
  ::android::util::LogProto* security_logs_;
  ::android::util::LogProto* kernel_logs_;
  ::android::util::LogProto* last_main_logs_;
  ::android::util::LogProto* last_radio_logs_;
  ::android::util::LogProto* last_events_logs_;
  ::android::util::LogProto* last_system_logs_;
  ::android::util::LogProto* last_crash_logs_;
  ::android::util::LogProto* last_stats_logs_;
  ::android::util::LogProto* last_security_logs_;
  ::android::util::PersistedLogProto* persisted_logs_;
  ::android::os::BackTraceProto* native_traces_;
  ::android::os::BackTraceProto* hal_traces_;
  ::android::os::BackTraceProto* java_traces_;
  ::android::os::ProcrankProto* procrank_;
  ::android::os::PageTypeInfoProto* page_type_info_;
  ::android::os::KernelWakeSourcesProto* kernel_wake_sources_;
  ::android::os::CpuInfoProto* cpu_info_;
  ::android::os::CpuFreqProto* cpu_freq_;
  ::android::os::PsProto* processes_and_threads_;
  ::android::os::BatteryTypeProto* battery_type_;
  ::android::os::GZippedFileProto* last_kmsg_;
  ::com::android::server::biometrics::fingerprint::FingerprintServiceDumpProto* fingerprint_;
  ::android::service::NetworkStatsServiceDumpProto* netstats_;
  ::android::providers::settings::SettingsServiceDumpProto* settings_;
  ::android::service::appwidget::AppWidgetServiceDumpProto* appwidget_;
  ::android::service::notification::NotificationServiceDumpProto* notification_;
  ::android::service::batterystats::BatteryStatsServiceDumpProto* batterystats_;
  ::android::service::battery::BatteryServiceDumpProto* battery_;
  ::android::service::diskstats::DiskStatsServiceDumpProto* diskstats_;
  ::android::service::pm::PackageServiceDumpProto* package_;
  ::com::android::server::power::PowerManagerServiceDumpProto* power_;
  ::android::service::print::PrintServiceDumpProto* print_;
  ::android::service::procstats::ProcessStatsServiceDumpProto* procstats_;
  ::com::android::server::am::ActivityManagerServiceDumpActivitiesProto* activities_;
  ::com::android::server::am::ActivityManagerServiceDumpBroadcastsProto* broadcasts_;
  ::com::android::server::am::ActivityManagerServiceDumpServicesProto* amservices_;
  ::com::android::server::am::ActivityManagerServiceDumpProcessesProto* amprocesses_;
  ::com::android::server::alarm::AlarmManagerServiceDumpProto* alarm_;
  ::com::android::server::wm::WindowManagerServiceDumpProto* window_;
  ::com::android::server::am::MemInfoDumpProto* meminfo_;
  ::android::service::GraphicsStatsServiceDumpProto* graphicsstats_;
  ::com::android::server::job::JobSchedulerServiceDumpProto* jobscheduler_;
  ::android::service::usb::UsbServiceDumpProto* usb_;
  ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto* battery_history_;
  ::android::os::StatsDataDumpProto* stats_data_;
  ::com::android::role::RoleServiceDumpProto* role_;
  ::android::service::restricted_image::RestrictedImagesDumpProto* restricted_images_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_crash_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_anr_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_native_crash_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_strictmode_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_wtf_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_crash_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_anr_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_native_crash_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_strictmode_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_wtf_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_crash_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_anr_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_native_crash_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_lowmem_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_strictmode_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_watchdog_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_wtf_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_recovery_log_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_tombstone_;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_subsystem_restart_;
  ::android::os::CpuUsageProto* process_cpu_usage_;
  ::clearcut::connectivity::IpConnectivityLog* ip_connectivity_metrics_;
  ::com::android::server::BluetoothManagerServiceDumpProto* bluetooth_manager_;
  ::com::android::server::location::ContextHubServiceProto* context_hub_;
  ::com::android::nfc::NfcServiceDumpProto* nfc_service_;
  ::android::service::SensorServiceProto* sensor_service_;
  ::com::android::server::powerstats::PowerStatsServiceMeterProto* powerstats_meter_;
  ::com::android::server::powerstats::PowerStatsServiceModelProto* powerstats_model_;
  ::com::android::server::powerstats::PowerStatsServiceResidencyProto* powerstats_residency_;
  ::android::util::TextDumpProto* textdump_wifi_;
  ::android::util::TextDumpProto* textdump_bluetooth_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fincident_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IncidentProto

// repeated .android.os.IncidentHeaderProto header = 1;
inline int IncidentProto::header_size() const {
  return header_.size();
}
inline ::android::os::IncidentHeaderProto* IncidentProto::mutable_header(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.header)
  return header_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::IncidentHeaderProto >*
IncidentProto::mutable_header() {
  // @@protoc_insertion_point(field_mutable_list:android.os.IncidentProto.header)
  return &header_;
}
inline const ::android::os::IncidentHeaderProto& IncidentProto::header(int index) const {
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.header)
  return header_.Get(index);
}
inline ::android::os::IncidentHeaderProto* IncidentProto::add_header() {
  // @@protoc_insertion_point(field_add:android.os.IncidentProto.header)
  return header_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::IncidentHeaderProto >&
IncidentProto::header() const {
  // @@protoc_insertion_point(field_list:android.os.IncidentProto.header)
  return header_;
}

// optional .android.os.IncidentMetadata metadata = 2;
inline bool IncidentProto::has_metadata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline const ::android::os::IncidentMetadata& IncidentProto::metadata() const {
  const ::android::os::IncidentMetadata* p = metadata_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.metadata)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::IncidentMetadata*>(
      &::android::os::_IncidentMetadata_default_instance_);
}
inline ::android::os::IncidentMetadata* IncidentProto::release_metadata() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.metadata)
  _has_bits_[0] &= ~0x00000004u;
  ::android::os::IncidentMetadata* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline ::android::os::IncidentMetadata* IncidentProto::mutable_metadata() {
  _has_bits_[0] |= 0x00000004u;
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::IncidentMetadata>(GetArenaNoVirtual());
    metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.metadata)
  return metadata_;
}
inline void IncidentProto::set_allocated_metadata(::android::os::IncidentMetadata* metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.metadata)
}

// optional .android.os.SystemPropertiesProto system_properties = 1000 [(.android.section) = {
inline bool IncidentProto::has_system_properties() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline const ::android::os::SystemPropertiesProto& IncidentProto::system_properties() const {
  const ::android::os::SystemPropertiesProto* p = system_properties_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.system_properties)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::SystemPropertiesProto*>(
      &::android::os::_SystemPropertiesProto_default_instance_);
}
inline ::android::os::SystemPropertiesProto* IncidentProto::release_system_properties() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.system_properties)
  _has_bits_[0] &= ~0x00000008u;
  ::android::os::SystemPropertiesProto* temp = system_properties_;
  system_properties_ = nullptr;
  return temp;
}
inline ::android::os::SystemPropertiesProto* IncidentProto::mutable_system_properties() {
  _has_bits_[0] |= 0x00000008u;
  if (system_properties_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::SystemPropertiesProto>(GetArenaNoVirtual());
    system_properties_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.system_properties)
  return system_properties_;
}
inline void IncidentProto::set_allocated_system_properties(::android::os::SystemPropertiesProto* system_properties) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(system_properties_);
  }
  if (system_properties) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      system_properties = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, system_properties, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  system_properties_ = system_properties;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.system_properties)
}

// optional string kernel_version = 1002 [(.android.privacy) = {
inline bool IncidentProto::has_kernel_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IncidentProto::clear_kernel_version() {
  kernel_version_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& IncidentProto::kernel_version() const {
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.kernel_version)
  return kernel_version_.GetNoArena();
}
inline void IncidentProto::set_kernel_version(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  kernel_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.IncidentProto.kernel_version)
}
inline void IncidentProto::set_kernel_version(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  kernel_version_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.IncidentProto.kernel_version)
}
inline void IncidentProto::set_kernel_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  kernel_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.IncidentProto.kernel_version)
}
inline void IncidentProto::set_kernel_version(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  kernel_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.IncidentProto.kernel_version)
}
inline std::string* IncidentProto::mutable_kernel_version() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.kernel_version)
  return kernel_version_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* IncidentProto::release_kernel_version() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.kernel_version)
  if (!has_kernel_version()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return kernel_version_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void IncidentProto::set_allocated_kernel_version(std::string* kernel_version) {
  if (kernel_version != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  kernel_version_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), kernel_version);
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.kernel_version)
}

// optional .android.util.EventLogTagMapProto event_log_tag_map = 1100 [(.android.section) = {
inline bool IncidentProto::has_event_log_tag_map() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline const ::android::util::EventLogTagMapProto& IncidentProto::event_log_tag_map() const {
  const ::android::util::EventLogTagMapProto* p = event_log_tag_map_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.event_log_tag_map)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::EventLogTagMapProto*>(
      &::android::util::_EventLogTagMapProto_default_instance_);
}
inline ::android::util::EventLogTagMapProto* IncidentProto::release_event_log_tag_map() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.event_log_tag_map)
  _has_bits_[0] &= ~0x00000010u;
  ::android::util::EventLogTagMapProto* temp = event_log_tag_map_;
  event_log_tag_map_ = nullptr;
  return temp;
}
inline ::android::util::EventLogTagMapProto* IncidentProto::mutable_event_log_tag_map() {
  _has_bits_[0] |= 0x00000010u;
  if (event_log_tag_map_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::EventLogTagMapProto>(GetArenaNoVirtual());
    event_log_tag_map_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.event_log_tag_map)
  return event_log_tag_map_;
}
inline void IncidentProto::set_allocated_event_log_tag_map(::android::util::EventLogTagMapProto* event_log_tag_map) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(event_log_tag_map_);
  }
  if (event_log_tag_map) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      event_log_tag_map = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event_log_tag_map, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  event_log_tag_map_ = event_log_tag_map;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.event_log_tag_map)
}

// optional .android.util.LogProto main_logs = 1101 [(.android.section) = {
inline bool IncidentProto::has_main_logs() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::main_logs() const {
  const ::android::util::LogProto* p = main_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.main_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_main_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.main_logs)
  _has_bits_[0] &= ~0x00000020u;
  ::android::util::LogProto* temp = main_logs_;
  main_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_main_logs() {
  _has_bits_[0] |= 0x00000020u;
  if (main_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    main_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.main_logs)
  return main_logs_;
}
inline void IncidentProto::set_allocated_main_logs(::android::util::LogProto* main_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(main_logs_);
  }
  if (main_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      main_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, main_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  main_logs_ = main_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.main_logs)
}

// optional .android.util.LogProto radio_logs = 1102 [(.android.section) = {
inline bool IncidentProto::has_radio_logs() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::radio_logs() const {
  const ::android::util::LogProto* p = radio_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.radio_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_radio_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.radio_logs)
  _has_bits_[0] &= ~0x00000040u;
  ::android::util::LogProto* temp = radio_logs_;
  radio_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_radio_logs() {
  _has_bits_[0] |= 0x00000040u;
  if (radio_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    radio_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.radio_logs)
  return radio_logs_;
}
inline void IncidentProto::set_allocated_radio_logs(::android::util::LogProto* radio_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(radio_logs_);
  }
  if (radio_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      radio_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, radio_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  radio_logs_ = radio_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.radio_logs)
}

// optional .android.util.LogProto events_logs = 1103 [(.android.section) = {
inline bool IncidentProto::has_events_logs() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::events_logs() const {
  const ::android::util::LogProto* p = events_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.events_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_events_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.events_logs)
  _has_bits_[0] &= ~0x00000080u;
  ::android::util::LogProto* temp = events_logs_;
  events_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_events_logs() {
  _has_bits_[0] |= 0x00000080u;
  if (events_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    events_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.events_logs)
  return events_logs_;
}
inline void IncidentProto::set_allocated_events_logs(::android::util::LogProto* events_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(events_logs_);
  }
  if (events_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      events_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, events_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  events_logs_ = events_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.events_logs)
}

// optional .android.util.LogProto system_logs = 1104 [(.android.section) = {
inline bool IncidentProto::has_system_logs() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::system_logs() const {
  const ::android::util::LogProto* p = system_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.system_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_system_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.system_logs)
  _has_bits_[0] &= ~0x00000100u;
  ::android::util::LogProto* temp = system_logs_;
  system_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_system_logs() {
  _has_bits_[0] |= 0x00000100u;
  if (system_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    system_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.system_logs)
  return system_logs_;
}
inline void IncidentProto::set_allocated_system_logs(::android::util::LogProto* system_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(system_logs_);
  }
  if (system_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      system_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, system_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  system_logs_ = system_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.system_logs)
}

// optional .android.util.LogProto crash_logs = 1105 [(.android.section) = {
inline bool IncidentProto::has_crash_logs() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::crash_logs() const {
  const ::android::util::LogProto* p = crash_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.crash_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_crash_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.crash_logs)
  _has_bits_[0] &= ~0x00000200u;
  ::android::util::LogProto* temp = crash_logs_;
  crash_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_crash_logs() {
  _has_bits_[0] |= 0x00000200u;
  if (crash_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    crash_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.crash_logs)
  return crash_logs_;
}
inline void IncidentProto::set_allocated_crash_logs(::android::util::LogProto* crash_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(crash_logs_);
  }
  if (crash_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      crash_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, crash_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  crash_logs_ = crash_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.crash_logs)
}

// optional .android.util.LogProto stats_logs = 1106 [(.android.section) = {
inline bool IncidentProto::has_stats_logs() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::stats_logs() const {
  const ::android::util::LogProto* p = stats_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.stats_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_stats_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.stats_logs)
  _has_bits_[0] &= ~0x00000400u;
  ::android::util::LogProto* temp = stats_logs_;
  stats_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_stats_logs() {
  _has_bits_[0] |= 0x00000400u;
  if (stats_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    stats_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.stats_logs)
  return stats_logs_;
}
inline void IncidentProto::set_allocated_stats_logs(::android::util::LogProto* stats_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(stats_logs_);
  }
  if (stats_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      stats_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stats_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  stats_logs_ = stats_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.stats_logs)
}

// optional .android.util.LogProto security_logs = 1107 [(.android.section) = {
inline bool IncidentProto::has_security_logs() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::security_logs() const {
  const ::android::util::LogProto* p = security_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.security_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_security_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.security_logs)
  _has_bits_[0] &= ~0x00000800u;
  ::android::util::LogProto* temp = security_logs_;
  security_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_security_logs() {
  _has_bits_[0] |= 0x00000800u;
  if (security_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    security_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.security_logs)
  return security_logs_;
}
inline void IncidentProto::set_allocated_security_logs(::android::util::LogProto* security_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(security_logs_);
  }
  if (security_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      security_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, security_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  security_logs_ = security_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.security_logs)
}

// optional .android.util.LogProto kernel_logs = 1108 [(.android.section) = {
inline bool IncidentProto::has_kernel_logs() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::kernel_logs() const {
  const ::android::util::LogProto* p = kernel_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.kernel_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_kernel_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.kernel_logs)
  _has_bits_[0] &= ~0x00001000u;
  ::android::util::LogProto* temp = kernel_logs_;
  kernel_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_kernel_logs() {
  _has_bits_[0] |= 0x00001000u;
  if (kernel_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    kernel_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.kernel_logs)
  return kernel_logs_;
}
inline void IncidentProto::set_allocated_kernel_logs(::android::util::LogProto* kernel_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(kernel_logs_);
  }
  if (kernel_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      kernel_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, kernel_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  kernel_logs_ = kernel_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.kernel_logs)
}

// optional .android.util.LogProto last_main_logs = 1109 [(.android.section) = {
inline bool IncidentProto::has_last_main_logs() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::last_main_logs() const {
  const ::android::util::LogProto* p = last_main_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.last_main_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_last_main_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.last_main_logs)
  _has_bits_[0] &= ~0x00002000u;
  ::android::util::LogProto* temp = last_main_logs_;
  last_main_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_last_main_logs() {
  _has_bits_[0] |= 0x00002000u;
  if (last_main_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    last_main_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.last_main_logs)
  return last_main_logs_;
}
inline void IncidentProto::set_allocated_last_main_logs(::android::util::LogProto* last_main_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_main_logs_);
  }
  if (last_main_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      last_main_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_main_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00002000u;
  } else {
    _has_bits_[0] &= ~0x00002000u;
  }
  last_main_logs_ = last_main_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.last_main_logs)
}

// optional .android.util.LogProto last_radio_logs = 1110 [(.android.section) = {
inline bool IncidentProto::has_last_radio_logs() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::last_radio_logs() const {
  const ::android::util::LogProto* p = last_radio_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.last_radio_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_last_radio_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.last_radio_logs)
  _has_bits_[0] &= ~0x00004000u;
  ::android::util::LogProto* temp = last_radio_logs_;
  last_radio_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_last_radio_logs() {
  _has_bits_[0] |= 0x00004000u;
  if (last_radio_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    last_radio_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.last_radio_logs)
  return last_radio_logs_;
}
inline void IncidentProto::set_allocated_last_radio_logs(::android::util::LogProto* last_radio_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_radio_logs_);
  }
  if (last_radio_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      last_radio_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_radio_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00004000u;
  } else {
    _has_bits_[0] &= ~0x00004000u;
  }
  last_radio_logs_ = last_radio_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.last_radio_logs)
}

// optional .android.util.LogProto last_events_logs = 1111 [(.android.section) = {
inline bool IncidentProto::has_last_events_logs() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::last_events_logs() const {
  const ::android::util::LogProto* p = last_events_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.last_events_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_last_events_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.last_events_logs)
  _has_bits_[0] &= ~0x00008000u;
  ::android::util::LogProto* temp = last_events_logs_;
  last_events_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_last_events_logs() {
  _has_bits_[0] |= 0x00008000u;
  if (last_events_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    last_events_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.last_events_logs)
  return last_events_logs_;
}
inline void IncidentProto::set_allocated_last_events_logs(::android::util::LogProto* last_events_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_events_logs_);
  }
  if (last_events_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      last_events_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_events_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00008000u;
  } else {
    _has_bits_[0] &= ~0x00008000u;
  }
  last_events_logs_ = last_events_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.last_events_logs)
}

// optional .android.util.LogProto last_system_logs = 1112 [(.android.section) = {
inline bool IncidentProto::has_last_system_logs() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::last_system_logs() const {
  const ::android::util::LogProto* p = last_system_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.last_system_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_last_system_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.last_system_logs)
  _has_bits_[0] &= ~0x00010000u;
  ::android::util::LogProto* temp = last_system_logs_;
  last_system_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_last_system_logs() {
  _has_bits_[0] |= 0x00010000u;
  if (last_system_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    last_system_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.last_system_logs)
  return last_system_logs_;
}
inline void IncidentProto::set_allocated_last_system_logs(::android::util::LogProto* last_system_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_system_logs_);
  }
  if (last_system_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      last_system_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_system_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00010000u;
  } else {
    _has_bits_[0] &= ~0x00010000u;
  }
  last_system_logs_ = last_system_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.last_system_logs)
}

// optional .android.util.LogProto last_crash_logs = 1113 [(.android.section) = {
inline bool IncidentProto::has_last_crash_logs() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::last_crash_logs() const {
  const ::android::util::LogProto* p = last_crash_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.last_crash_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_last_crash_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.last_crash_logs)
  _has_bits_[0] &= ~0x00020000u;
  ::android::util::LogProto* temp = last_crash_logs_;
  last_crash_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_last_crash_logs() {
  _has_bits_[0] |= 0x00020000u;
  if (last_crash_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    last_crash_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.last_crash_logs)
  return last_crash_logs_;
}
inline void IncidentProto::set_allocated_last_crash_logs(::android::util::LogProto* last_crash_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_crash_logs_);
  }
  if (last_crash_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      last_crash_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_crash_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00020000u;
  } else {
    _has_bits_[0] &= ~0x00020000u;
  }
  last_crash_logs_ = last_crash_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.last_crash_logs)
}

// optional .android.util.LogProto last_stats_logs = 1114 [(.android.section) = {
inline bool IncidentProto::has_last_stats_logs() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::last_stats_logs() const {
  const ::android::util::LogProto* p = last_stats_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.last_stats_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_last_stats_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.last_stats_logs)
  _has_bits_[0] &= ~0x00040000u;
  ::android::util::LogProto* temp = last_stats_logs_;
  last_stats_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_last_stats_logs() {
  _has_bits_[0] |= 0x00040000u;
  if (last_stats_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    last_stats_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.last_stats_logs)
  return last_stats_logs_;
}
inline void IncidentProto::set_allocated_last_stats_logs(::android::util::LogProto* last_stats_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_stats_logs_);
  }
  if (last_stats_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      last_stats_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_stats_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00040000u;
  } else {
    _has_bits_[0] &= ~0x00040000u;
  }
  last_stats_logs_ = last_stats_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.last_stats_logs)
}

// optional .android.util.LogProto last_security_logs = 1115 [(.android.section) = {
inline bool IncidentProto::has_last_security_logs() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline const ::android::util::LogProto& IncidentProto::last_security_logs() const {
  const ::android::util::LogProto* p = last_security_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.last_security_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::LogProto*>(
      &::android::util::_LogProto_default_instance_);
}
inline ::android::util::LogProto* IncidentProto::release_last_security_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.last_security_logs)
  _has_bits_[0] &= ~0x00080000u;
  ::android::util::LogProto* temp = last_security_logs_;
  last_security_logs_ = nullptr;
  return temp;
}
inline ::android::util::LogProto* IncidentProto::mutable_last_security_logs() {
  _has_bits_[0] |= 0x00080000u;
  if (last_security_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::LogProto>(GetArenaNoVirtual());
    last_security_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.last_security_logs)
  return last_security_logs_;
}
inline void IncidentProto::set_allocated_last_security_logs(::android::util::LogProto* last_security_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_security_logs_);
  }
  if (last_security_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      last_security_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_security_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00080000u;
  } else {
    _has_bits_[0] &= ~0x00080000u;
  }
  last_security_logs_ = last_security_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.last_security_logs)
}

// optional .android.util.PersistedLogProto persisted_logs = 1116 [(.android.section) = {
inline bool IncidentProto::has_persisted_logs() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline const ::android::util::PersistedLogProto& IncidentProto::persisted_logs() const {
  const ::android::util::PersistedLogProto* p = persisted_logs_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.persisted_logs)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::PersistedLogProto*>(
      &::android::util::_PersistedLogProto_default_instance_);
}
inline ::android::util::PersistedLogProto* IncidentProto::release_persisted_logs() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.persisted_logs)
  _has_bits_[0] &= ~0x00100000u;
  ::android::util::PersistedLogProto* temp = persisted_logs_;
  persisted_logs_ = nullptr;
  return temp;
}
inline ::android::util::PersistedLogProto* IncidentProto::mutable_persisted_logs() {
  _has_bits_[0] |= 0x00100000u;
  if (persisted_logs_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::PersistedLogProto>(GetArenaNoVirtual());
    persisted_logs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.persisted_logs)
  return persisted_logs_;
}
inline void IncidentProto::set_allocated_persisted_logs(::android::util::PersistedLogProto* persisted_logs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(persisted_logs_);
  }
  if (persisted_logs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      persisted_logs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, persisted_logs, submessage_arena);
    }
    _has_bits_[0] |= 0x00100000u;
  } else {
    _has_bits_[0] &= ~0x00100000u;
  }
  persisted_logs_ = persisted_logs;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.persisted_logs)
}

// optional .android.os.BackTraceProto native_traces = 1200 [(.android.section) = {
inline bool IncidentProto::has_native_traces() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline const ::android::os::BackTraceProto& IncidentProto::native_traces() const {
  const ::android::os::BackTraceProto* p = native_traces_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.native_traces)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::BackTraceProto*>(
      &::android::os::_BackTraceProto_default_instance_);
}
inline ::android::os::BackTraceProto* IncidentProto::release_native_traces() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.native_traces)
  _has_bits_[0] &= ~0x00200000u;
  ::android::os::BackTraceProto* temp = native_traces_;
  native_traces_ = nullptr;
  return temp;
}
inline ::android::os::BackTraceProto* IncidentProto::mutable_native_traces() {
  _has_bits_[0] |= 0x00200000u;
  if (native_traces_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::BackTraceProto>(GetArenaNoVirtual());
    native_traces_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.native_traces)
  return native_traces_;
}
inline void IncidentProto::set_allocated_native_traces(::android::os::BackTraceProto* native_traces) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(native_traces_);
  }
  if (native_traces) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      native_traces = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, native_traces, submessage_arena);
    }
    _has_bits_[0] |= 0x00200000u;
  } else {
    _has_bits_[0] &= ~0x00200000u;
  }
  native_traces_ = native_traces;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.native_traces)
}

// optional .android.os.BackTraceProto hal_traces = 1201 [(.android.section) = {
inline bool IncidentProto::has_hal_traces() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline const ::android::os::BackTraceProto& IncidentProto::hal_traces() const {
  const ::android::os::BackTraceProto* p = hal_traces_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.hal_traces)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::BackTraceProto*>(
      &::android::os::_BackTraceProto_default_instance_);
}
inline ::android::os::BackTraceProto* IncidentProto::release_hal_traces() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.hal_traces)
  _has_bits_[0] &= ~0x00400000u;
  ::android::os::BackTraceProto* temp = hal_traces_;
  hal_traces_ = nullptr;
  return temp;
}
inline ::android::os::BackTraceProto* IncidentProto::mutable_hal_traces() {
  _has_bits_[0] |= 0x00400000u;
  if (hal_traces_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::BackTraceProto>(GetArenaNoVirtual());
    hal_traces_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.hal_traces)
  return hal_traces_;
}
inline void IncidentProto::set_allocated_hal_traces(::android::os::BackTraceProto* hal_traces) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(hal_traces_);
  }
  if (hal_traces) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      hal_traces = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hal_traces, submessage_arena);
    }
    _has_bits_[0] |= 0x00400000u;
  } else {
    _has_bits_[0] &= ~0x00400000u;
  }
  hal_traces_ = hal_traces;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.hal_traces)
}

// optional .android.os.BackTraceProto java_traces = 1202 [(.android.section) = {
inline bool IncidentProto::has_java_traces() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline const ::android::os::BackTraceProto& IncidentProto::java_traces() const {
  const ::android::os::BackTraceProto* p = java_traces_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.java_traces)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::BackTraceProto*>(
      &::android::os::_BackTraceProto_default_instance_);
}
inline ::android::os::BackTraceProto* IncidentProto::release_java_traces() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.java_traces)
  _has_bits_[0] &= ~0x00800000u;
  ::android::os::BackTraceProto* temp = java_traces_;
  java_traces_ = nullptr;
  return temp;
}
inline ::android::os::BackTraceProto* IncidentProto::mutable_java_traces() {
  _has_bits_[0] |= 0x00800000u;
  if (java_traces_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::BackTraceProto>(GetArenaNoVirtual());
    java_traces_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.java_traces)
  return java_traces_;
}
inline void IncidentProto::set_allocated_java_traces(::android::os::BackTraceProto* java_traces) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(java_traces_);
  }
  if (java_traces) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      java_traces = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, java_traces, submessage_arena);
    }
    _has_bits_[0] |= 0x00800000u;
  } else {
    _has_bits_[0] &= ~0x00800000u;
  }
  java_traces_ = java_traces;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.java_traces)
}

// optional .android.os.ProcrankProto procrank = 2000 [(.android.section) = {
inline bool IncidentProto::has_procrank() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline const ::android::os::ProcrankProto& IncidentProto::procrank() const {
  const ::android::os::ProcrankProto* p = procrank_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.procrank)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::ProcrankProto*>(
      &::android::os::_ProcrankProto_default_instance_);
}
inline ::android::os::ProcrankProto* IncidentProto::release_procrank() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.procrank)
  _has_bits_[0] &= ~0x01000000u;
  ::android::os::ProcrankProto* temp = procrank_;
  procrank_ = nullptr;
  return temp;
}
inline ::android::os::ProcrankProto* IncidentProto::mutable_procrank() {
  _has_bits_[0] |= 0x01000000u;
  if (procrank_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::ProcrankProto>(GetArenaNoVirtual());
    procrank_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.procrank)
  return procrank_;
}
inline void IncidentProto::set_allocated_procrank(::android::os::ProcrankProto* procrank) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(procrank_);
  }
  if (procrank) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      procrank = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, procrank, submessage_arena);
    }
    _has_bits_[0] |= 0x01000000u;
  } else {
    _has_bits_[0] &= ~0x01000000u;
  }
  procrank_ = procrank;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.procrank)
}

// optional .android.os.PageTypeInfoProto page_type_info = 2001 [(.android.section) = {
inline bool IncidentProto::has_page_type_info() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline const ::android::os::PageTypeInfoProto& IncidentProto::page_type_info() const {
  const ::android::os::PageTypeInfoProto* p = page_type_info_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.page_type_info)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::PageTypeInfoProto*>(
      &::android::os::_PageTypeInfoProto_default_instance_);
}
inline ::android::os::PageTypeInfoProto* IncidentProto::release_page_type_info() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.page_type_info)
  _has_bits_[0] &= ~0x02000000u;
  ::android::os::PageTypeInfoProto* temp = page_type_info_;
  page_type_info_ = nullptr;
  return temp;
}
inline ::android::os::PageTypeInfoProto* IncidentProto::mutable_page_type_info() {
  _has_bits_[0] |= 0x02000000u;
  if (page_type_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::PageTypeInfoProto>(GetArenaNoVirtual());
    page_type_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.page_type_info)
  return page_type_info_;
}
inline void IncidentProto::set_allocated_page_type_info(::android::os::PageTypeInfoProto* page_type_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(page_type_info_);
  }
  if (page_type_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      page_type_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, page_type_info, submessage_arena);
    }
    _has_bits_[0] |= 0x02000000u;
  } else {
    _has_bits_[0] &= ~0x02000000u;
  }
  page_type_info_ = page_type_info;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.page_type_info)
}

// optional .android.os.KernelWakeSourcesProto kernel_wake_sources = 2002 [(.android.section) = {
inline bool IncidentProto::has_kernel_wake_sources() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline const ::android::os::KernelWakeSourcesProto& IncidentProto::kernel_wake_sources() const {
  const ::android::os::KernelWakeSourcesProto* p = kernel_wake_sources_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.kernel_wake_sources)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::KernelWakeSourcesProto*>(
      &::android::os::_KernelWakeSourcesProto_default_instance_);
}
inline ::android::os::KernelWakeSourcesProto* IncidentProto::release_kernel_wake_sources() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.kernel_wake_sources)
  _has_bits_[0] &= ~0x04000000u;
  ::android::os::KernelWakeSourcesProto* temp = kernel_wake_sources_;
  kernel_wake_sources_ = nullptr;
  return temp;
}
inline ::android::os::KernelWakeSourcesProto* IncidentProto::mutable_kernel_wake_sources() {
  _has_bits_[0] |= 0x04000000u;
  if (kernel_wake_sources_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::KernelWakeSourcesProto>(GetArenaNoVirtual());
    kernel_wake_sources_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.kernel_wake_sources)
  return kernel_wake_sources_;
}
inline void IncidentProto::set_allocated_kernel_wake_sources(::android::os::KernelWakeSourcesProto* kernel_wake_sources) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(kernel_wake_sources_);
  }
  if (kernel_wake_sources) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      kernel_wake_sources = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, kernel_wake_sources, submessage_arena);
    }
    _has_bits_[0] |= 0x04000000u;
  } else {
    _has_bits_[0] &= ~0x04000000u;
  }
  kernel_wake_sources_ = kernel_wake_sources;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.kernel_wake_sources)
}

// optional .android.os.CpuInfoProto cpu_info = 2003 [(.android.section) = {
inline bool IncidentProto::has_cpu_info() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline const ::android::os::CpuInfoProto& IncidentProto::cpu_info() const {
  const ::android::os::CpuInfoProto* p = cpu_info_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.cpu_info)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::CpuInfoProto*>(
      &::android::os::_CpuInfoProto_default_instance_);
}
inline ::android::os::CpuInfoProto* IncidentProto::release_cpu_info() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.cpu_info)
  _has_bits_[0] &= ~0x08000000u;
  ::android::os::CpuInfoProto* temp = cpu_info_;
  cpu_info_ = nullptr;
  return temp;
}
inline ::android::os::CpuInfoProto* IncidentProto::mutable_cpu_info() {
  _has_bits_[0] |= 0x08000000u;
  if (cpu_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::CpuInfoProto>(GetArenaNoVirtual());
    cpu_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.cpu_info)
  return cpu_info_;
}
inline void IncidentProto::set_allocated_cpu_info(::android::os::CpuInfoProto* cpu_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cpu_info_);
  }
  if (cpu_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cpu_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cpu_info, submessage_arena);
    }
    _has_bits_[0] |= 0x08000000u;
  } else {
    _has_bits_[0] &= ~0x08000000u;
  }
  cpu_info_ = cpu_info;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.cpu_info)
}

// optional .android.os.CpuFreqProto cpu_freq = 2004 [(.android.section) = {
inline bool IncidentProto::has_cpu_freq() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline const ::android::os::CpuFreqProto& IncidentProto::cpu_freq() const {
  const ::android::os::CpuFreqProto* p = cpu_freq_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.cpu_freq)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::CpuFreqProto*>(
      &::android::os::_CpuFreqProto_default_instance_);
}
inline ::android::os::CpuFreqProto* IncidentProto::release_cpu_freq() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.cpu_freq)
  _has_bits_[0] &= ~0x10000000u;
  ::android::os::CpuFreqProto* temp = cpu_freq_;
  cpu_freq_ = nullptr;
  return temp;
}
inline ::android::os::CpuFreqProto* IncidentProto::mutable_cpu_freq() {
  _has_bits_[0] |= 0x10000000u;
  if (cpu_freq_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::CpuFreqProto>(GetArenaNoVirtual());
    cpu_freq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.cpu_freq)
  return cpu_freq_;
}
inline void IncidentProto::set_allocated_cpu_freq(::android::os::CpuFreqProto* cpu_freq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cpu_freq_);
  }
  if (cpu_freq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cpu_freq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cpu_freq, submessage_arena);
    }
    _has_bits_[0] |= 0x10000000u;
  } else {
    _has_bits_[0] &= ~0x10000000u;
  }
  cpu_freq_ = cpu_freq;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.cpu_freq)
}

// optional .android.os.PsProto processes_and_threads = 2005 [(.android.section) = {
inline bool IncidentProto::has_processes_and_threads() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline const ::android::os::PsProto& IncidentProto::processes_and_threads() const {
  const ::android::os::PsProto* p = processes_and_threads_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.processes_and_threads)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::PsProto*>(
      &::android::os::_PsProto_default_instance_);
}
inline ::android::os::PsProto* IncidentProto::release_processes_and_threads() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.processes_and_threads)
  _has_bits_[0] &= ~0x20000000u;
  ::android::os::PsProto* temp = processes_and_threads_;
  processes_and_threads_ = nullptr;
  return temp;
}
inline ::android::os::PsProto* IncidentProto::mutable_processes_and_threads() {
  _has_bits_[0] |= 0x20000000u;
  if (processes_and_threads_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::PsProto>(GetArenaNoVirtual());
    processes_and_threads_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.processes_and_threads)
  return processes_and_threads_;
}
inline void IncidentProto::set_allocated_processes_and_threads(::android::os::PsProto* processes_and_threads) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(processes_and_threads_);
  }
  if (processes_and_threads) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      processes_and_threads = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, processes_and_threads, submessage_arena);
    }
    _has_bits_[0] |= 0x20000000u;
  } else {
    _has_bits_[0] &= ~0x20000000u;
  }
  processes_and_threads_ = processes_and_threads;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.processes_and_threads)
}

// optional .android.os.BatteryTypeProto battery_type = 2006 [(.android.section) = {
inline bool IncidentProto::has_battery_type() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline const ::android::os::BatteryTypeProto& IncidentProto::battery_type() const {
  const ::android::os::BatteryTypeProto* p = battery_type_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.battery_type)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::BatteryTypeProto*>(
      &::android::os::_BatteryTypeProto_default_instance_);
}
inline ::android::os::BatteryTypeProto* IncidentProto::release_battery_type() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.battery_type)
  _has_bits_[0] &= ~0x40000000u;
  ::android::os::BatteryTypeProto* temp = battery_type_;
  battery_type_ = nullptr;
  return temp;
}
inline ::android::os::BatteryTypeProto* IncidentProto::mutable_battery_type() {
  _has_bits_[0] |= 0x40000000u;
  if (battery_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::BatteryTypeProto>(GetArenaNoVirtual());
    battery_type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.battery_type)
  return battery_type_;
}
inline void IncidentProto::set_allocated_battery_type(::android::os::BatteryTypeProto* battery_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(battery_type_);
  }
  if (battery_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      battery_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, battery_type, submessage_arena);
    }
    _has_bits_[0] |= 0x40000000u;
  } else {
    _has_bits_[0] &= ~0x40000000u;
  }
  battery_type_ = battery_type;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.battery_type)
}

// optional .android.os.GZippedFileProto last_kmsg = 2007 [(.android.privacy) = {
inline bool IncidentProto::has_last_kmsg() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline const ::android::os::GZippedFileProto& IncidentProto::last_kmsg() const {
  const ::android::os::GZippedFileProto* p = last_kmsg_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.last_kmsg)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::GZippedFileProto*>(
      &::android::os::_GZippedFileProto_default_instance_);
}
inline ::android::os::GZippedFileProto* IncidentProto::release_last_kmsg() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.last_kmsg)
  _has_bits_[0] &= ~0x80000000u;
  ::android::os::GZippedFileProto* temp = last_kmsg_;
  last_kmsg_ = nullptr;
  return temp;
}
inline ::android::os::GZippedFileProto* IncidentProto::mutable_last_kmsg() {
  _has_bits_[0] |= 0x80000000u;
  if (last_kmsg_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::GZippedFileProto>(GetArenaNoVirtual());
    last_kmsg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.last_kmsg)
  return last_kmsg_;
}
inline void IncidentProto::set_allocated_last_kmsg(::android::os::GZippedFileProto* last_kmsg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_kmsg_);
  }
  if (last_kmsg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      last_kmsg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_kmsg, submessage_arena);
    }
    _has_bits_[0] |= 0x80000000u;
  } else {
    _has_bits_[0] &= ~0x80000000u;
  }
  last_kmsg_ = last_kmsg;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.last_kmsg)
}

// optional .com.android.server.biometrics.fingerprint.FingerprintServiceDumpProto fingerprint = 3000 [(.android.section) = {
inline bool IncidentProto::has_fingerprint() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline const ::com::android::server::biometrics::fingerprint::FingerprintServiceDumpProto& IncidentProto::fingerprint() const {
  const ::com::android::server::biometrics::fingerprint::FingerprintServiceDumpProto* p = fingerprint_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.fingerprint)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::biometrics::fingerprint::FingerprintServiceDumpProto*>(
      &::com::android::server::biometrics::fingerprint::_FingerprintServiceDumpProto_default_instance_);
}
inline ::com::android::server::biometrics::fingerprint::FingerprintServiceDumpProto* IncidentProto::release_fingerprint() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.fingerprint)
  _has_bits_[1] &= ~0x00000001u;
  ::com::android::server::biometrics::fingerprint::FingerprintServiceDumpProto* temp = fingerprint_;
  fingerprint_ = nullptr;
  return temp;
}
inline ::com::android::server::biometrics::fingerprint::FingerprintServiceDumpProto* IncidentProto::mutable_fingerprint() {
  _has_bits_[1] |= 0x00000001u;
  if (fingerprint_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::biometrics::fingerprint::FingerprintServiceDumpProto>(GetArenaNoVirtual());
    fingerprint_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.fingerprint)
  return fingerprint_;
}
inline void IncidentProto::set_allocated_fingerprint(::com::android::server::biometrics::fingerprint::FingerprintServiceDumpProto* fingerprint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(fingerprint_);
  }
  if (fingerprint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fingerprint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fingerprint, submessage_arena);
    }
    _has_bits_[1] |= 0x00000001u;
  } else {
    _has_bits_[1] &= ~0x00000001u;
  }
  fingerprint_ = fingerprint;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.fingerprint)
}

// optional .android.service.NetworkStatsServiceDumpProto netstats = 3001 [(.android.section) = {
inline bool IncidentProto::has_netstats() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline const ::android::service::NetworkStatsServiceDumpProto& IncidentProto::netstats() const {
  const ::android::service::NetworkStatsServiceDumpProto* p = netstats_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.netstats)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::NetworkStatsServiceDumpProto*>(
      &::android::service::_NetworkStatsServiceDumpProto_default_instance_);
}
inline ::android::service::NetworkStatsServiceDumpProto* IncidentProto::release_netstats() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.netstats)
  _has_bits_[1] &= ~0x00000002u;
  ::android::service::NetworkStatsServiceDumpProto* temp = netstats_;
  netstats_ = nullptr;
  return temp;
}
inline ::android::service::NetworkStatsServiceDumpProto* IncidentProto::mutable_netstats() {
  _has_bits_[1] |= 0x00000002u;
  if (netstats_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::NetworkStatsServiceDumpProto>(GetArenaNoVirtual());
    netstats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.netstats)
  return netstats_;
}
inline void IncidentProto::set_allocated_netstats(::android::service::NetworkStatsServiceDumpProto* netstats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(netstats_);
  }
  if (netstats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      netstats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, netstats, submessage_arena);
    }
    _has_bits_[1] |= 0x00000002u;
  } else {
    _has_bits_[1] &= ~0x00000002u;
  }
  netstats_ = netstats;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.netstats)
}

// optional .android.providers.settings.SettingsServiceDumpProto settings = 3002 [(.android.section) = {
inline bool IncidentProto::has_settings() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline const ::android::providers::settings::SettingsServiceDumpProto& IncidentProto::settings() const {
  const ::android::providers::settings::SettingsServiceDumpProto* p = settings_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.settings)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::providers::settings::SettingsServiceDumpProto*>(
      &::android::providers::settings::_SettingsServiceDumpProto_default_instance_);
}
inline ::android::providers::settings::SettingsServiceDumpProto* IncidentProto::release_settings() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.settings)
  _has_bits_[1] &= ~0x00000004u;
  ::android::providers::settings::SettingsServiceDumpProto* temp = settings_;
  settings_ = nullptr;
  return temp;
}
inline ::android::providers::settings::SettingsServiceDumpProto* IncidentProto::mutable_settings() {
  _has_bits_[1] |= 0x00000004u;
  if (settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::providers::settings::SettingsServiceDumpProto>(GetArenaNoVirtual());
    settings_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.settings)
  return settings_;
}
inline void IncidentProto::set_allocated_settings(::android::providers::settings::SettingsServiceDumpProto* settings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(settings_);
  }
  if (settings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      settings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, settings, submessage_arena);
    }
    _has_bits_[1] |= 0x00000004u;
  } else {
    _has_bits_[1] &= ~0x00000004u;
  }
  settings_ = settings;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.settings)
}

// optional .android.service.appwidget.AppWidgetServiceDumpProto appwidget = 3003;
inline bool IncidentProto::has_appwidget() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline const ::android::service::appwidget::AppWidgetServiceDumpProto& IncidentProto::appwidget() const {
  const ::android::service::appwidget::AppWidgetServiceDumpProto* p = appwidget_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.appwidget)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::appwidget::AppWidgetServiceDumpProto*>(
      &::android::service::appwidget::_AppWidgetServiceDumpProto_default_instance_);
}
inline ::android::service::appwidget::AppWidgetServiceDumpProto* IncidentProto::release_appwidget() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.appwidget)
  _has_bits_[1] &= ~0x00000008u;
  ::android::service::appwidget::AppWidgetServiceDumpProto* temp = appwidget_;
  appwidget_ = nullptr;
  return temp;
}
inline ::android::service::appwidget::AppWidgetServiceDumpProto* IncidentProto::mutable_appwidget() {
  _has_bits_[1] |= 0x00000008u;
  if (appwidget_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::appwidget::AppWidgetServiceDumpProto>(GetArenaNoVirtual());
    appwidget_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.appwidget)
  return appwidget_;
}
inline void IncidentProto::set_allocated_appwidget(::android::service::appwidget::AppWidgetServiceDumpProto* appwidget) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(appwidget_);
  }
  if (appwidget) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      appwidget = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, appwidget, submessage_arena);
    }
    _has_bits_[1] |= 0x00000008u;
  } else {
    _has_bits_[1] &= ~0x00000008u;
  }
  appwidget_ = appwidget;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.appwidget)
}

// optional .android.service.notification.NotificationServiceDumpProto notification = 3004 [(.android.section) = {
inline bool IncidentProto::has_notification() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline const ::android::service::notification::NotificationServiceDumpProto& IncidentProto::notification() const {
  const ::android::service::notification::NotificationServiceDumpProto* p = notification_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.notification)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::notification::NotificationServiceDumpProto*>(
      &::android::service::notification::_NotificationServiceDumpProto_default_instance_);
}
inline ::android::service::notification::NotificationServiceDumpProto* IncidentProto::release_notification() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.notification)
  _has_bits_[1] &= ~0x00000010u;
  ::android::service::notification::NotificationServiceDumpProto* temp = notification_;
  notification_ = nullptr;
  return temp;
}
inline ::android::service::notification::NotificationServiceDumpProto* IncidentProto::mutable_notification() {
  _has_bits_[1] |= 0x00000010u;
  if (notification_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::notification::NotificationServiceDumpProto>(GetArenaNoVirtual());
    notification_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.notification)
  return notification_;
}
inline void IncidentProto::set_allocated_notification(::android::service::notification::NotificationServiceDumpProto* notification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(notification_);
  }
  if (notification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      notification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notification, submessage_arena);
    }
    _has_bits_[1] |= 0x00000010u;
  } else {
    _has_bits_[1] &= ~0x00000010u;
  }
  notification_ = notification;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.notification)
}

// optional .android.service.batterystats.BatteryStatsServiceDumpProto batterystats = 3005 [(.android.section) = {
inline bool IncidentProto::has_batterystats() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline const ::android::service::batterystats::BatteryStatsServiceDumpProto& IncidentProto::batterystats() const {
  const ::android::service::batterystats::BatteryStatsServiceDumpProto* p = batterystats_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.batterystats)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::batterystats::BatteryStatsServiceDumpProto*>(
      &::android::service::batterystats::_BatteryStatsServiceDumpProto_default_instance_);
}
inline ::android::service::batterystats::BatteryStatsServiceDumpProto* IncidentProto::release_batterystats() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.batterystats)
  _has_bits_[1] &= ~0x00000020u;
  ::android::service::batterystats::BatteryStatsServiceDumpProto* temp = batterystats_;
  batterystats_ = nullptr;
  return temp;
}
inline ::android::service::batterystats::BatteryStatsServiceDumpProto* IncidentProto::mutable_batterystats() {
  _has_bits_[1] |= 0x00000020u;
  if (batterystats_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::batterystats::BatteryStatsServiceDumpProto>(GetArenaNoVirtual());
    batterystats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.batterystats)
  return batterystats_;
}
inline void IncidentProto::set_allocated_batterystats(::android::service::batterystats::BatteryStatsServiceDumpProto* batterystats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(batterystats_);
  }
  if (batterystats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      batterystats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, batterystats, submessage_arena);
    }
    _has_bits_[1] |= 0x00000020u;
  } else {
    _has_bits_[1] &= ~0x00000020u;
  }
  batterystats_ = batterystats;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.batterystats)
}

// optional .android.service.battery.BatteryServiceDumpProto battery = 3006 [(.android.section) = {
inline bool IncidentProto::has_battery() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline const ::android::service::battery::BatteryServiceDumpProto& IncidentProto::battery() const {
  const ::android::service::battery::BatteryServiceDumpProto* p = battery_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.battery)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::battery::BatteryServiceDumpProto*>(
      &::android::service::battery::_BatteryServiceDumpProto_default_instance_);
}
inline ::android::service::battery::BatteryServiceDumpProto* IncidentProto::release_battery() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.battery)
  _has_bits_[1] &= ~0x00000040u;
  ::android::service::battery::BatteryServiceDumpProto* temp = battery_;
  battery_ = nullptr;
  return temp;
}
inline ::android::service::battery::BatteryServiceDumpProto* IncidentProto::mutable_battery() {
  _has_bits_[1] |= 0x00000040u;
  if (battery_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::battery::BatteryServiceDumpProto>(GetArenaNoVirtual());
    battery_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.battery)
  return battery_;
}
inline void IncidentProto::set_allocated_battery(::android::service::battery::BatteryServiceDumpProto* battery) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(battery_);
  }
  if (battery) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      battery = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, battery, submessage_arena);
    }
    _has_bits_[1] |= 0x00000040u;
  } else {
    _has_bits_[1] &= ~0x00000040u;
  }
  battery_ = battery;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.battery)
}

// optional .android.service.diskstats.DiskStatsServiceDumpProto diskstats = 3007 [(.android.section) = {
inline bool IncidentProto::has_diskstats() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline const ::android::service::diskstats::DiskStatsServiceDumpProto& IncidentProto::diskstats() const {
  const ::android::service::diskstats::DiskStatsServiceDumpProto* p = diskstats_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.diskstats)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::diskstats::DiskStatsServiceDumpProto*>(
      &::android::service::diskstats::_DiskStatsServiceDumpProto_default_instance_);
}
inline ::android::service::diskstats::DiskStatsServiceDumpProto* IncidentProto::release_diskstats() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.diskstats)
  _has_bits_[1] &= ~0x00000080u;
  ::android::service::diskstats::DiskStatsServiceDumpProto* temp = diskstats_;
  diskstats_ = nullptr;
  return temp;
}
inline ::android::service::diskstats::DiskStatsServiceDumpProto* IncidentProto::mutable_diskstats() {
  _has_bits_[1] |= 0x00000080u;
  if (diskstats_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::diskstats::DiskStatsServiceDumpProto>(GetArenaNoVirtual());
    diskstats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.diskstats)
  return diskstats_;
}
inline void IncidentProto::set_allocated_diskstats(::android::service::diskstats::DiskStatsServiceDumpProto* diskstats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(diskstats_);
  }
  if (diskstats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      diskstats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, diskstats, submessage_arena);
    }
    _has_bits_[1] |= 0x00000080u;
  } else {
    _has_bits_[1] &= ~0x00000080u;
  }
  diskstats_ = diskstats;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.diskstats)
}

// optional .android.service.pm.PackageServiceDumpProto package = 3008 [(.android.section) = {
inline bool IncidentProto::has_package() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline const ::android::service::pm::PackageServiceDumpProto& IncidentProto::package() const {
  const ::android::service::pm::PackageServiceDumpProto* p = package_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.package)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::pm::PackageServiceDumpProto*>(
      &::android::service::pm::_PackageServiceDumpProto_default_instance_);
}
inline ::android::service::pm::PackageServiceDumpProto* IncidentProto::release_package() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.package)
  _has_bits_[1] &= ~0x00000100u;
  ::android::service::pm::PackageServiceDumpProto* temp = package_;
  package_ = nullptr;
  return temp;
}
inline ::android::service::pm::PackageServiceDumpProto* IncidentProto::mutable_package() {
  _has_bits_[1] |= 0x00000100u;
  if (package_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::pm::PackageServiceDumpProto>(GetArenaNoVirtual());
    package_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.package)
  return package_;
}
inline void IncidentProto::set_allocated_package(::android::service::pm::PackageServiceDumpProto* package) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(package_);
  }
  if (package) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      package = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, package, submessage_arena);
    }
    _has_bits_[1] |= 0x00000100u;
  } else {
    _has_bits_[1] &= ~0x00000100u;
  }
  package_ = package;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.package)
}

// optional .com.android.server.power.PowerManagerServiceDumpProto power = 3009 [(.android.section) = {
inline bool IncidentProto::has_power() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline const ::com::android::server::power::PowerManagerServiceDumpProto& IncidentProto::power() const {
  const ::com::android::server::power::PowerManagerServiceDumpProto* p = power_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.power)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::power::PowerManagerServiceDumpProto*>(
      &::com::android::server::power::_PowerManagerServiceDumpProto_default_instance_);
}
inline ::com::android::server::power::PowerManagerServiceDumpProto* IncidentProto::release_power() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.power)
  _has_bits_[1] &= ~0x00000200u;
  ::com::android::server::power::PowerManagerServiceDumpProto* temp = power_;
  power_ = nullptr;
  return temp;
}
inline ::com::android::server::power::PowerManagerServiceDumpProto* IncidentProto::mutable_power() {
  _has_bits_[1] |= 0x00000200u;
  if (power_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::power::PowerManagerServiceDumpProto>(GetArenaNoVirtual());
    power_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.power)
  return power_;
}
inline void IncidentProto::set_allocated_power(::com::android::server::power::PowerManagerServiceDumpProto* power) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(power_);
  }
  if (power) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      power = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, power, submessage_arena);
    }
    _has_bits_[1] |= 0x00000200u;
  } else {
    _has_bits_[1] &= ~0x00000200u;
  }
  power_ = power;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.power)
}

// optional .android.service.print.PrintServiceDumpProto print = 3010 [(.android.section) = {
inline bool IncidentProto::has_print() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline const ::android::service::print::PrintServiceDumpProto& IncidentProto::print() const {
  const ::android::service::print::PrintServiceDumpProto* p = print_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.print)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::print::PrintServiceDumpProto*>(
      &::android::service::print::_PrintServiceDumpProto_default_instance_);
}
inline ::android::service::print::PrintServiceDumpProto* IncidentProto::release_print() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.print)
  _has_bits_[1] &= ~0x00000400u;
  ::android::service::print::PrintServiceDumpProto* temp = print_;
  print_ = nullptr;
  return temp;
}
inline ::android::service::print::PrintServiceDumpProto* IncidentProto::mutable_print() {
  _has_bits_[1] |= 0x00000400u;
  if (print_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::print::PrintServiceDumpProto>(GetArenaNoVirtual());
    print_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.print)
  return print_;
}
inline void IncidentProto::set_allocated_print(::android::service::print::PrintServiceDumpProto* print) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(print_);
  }
  if (print) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      print = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, print, submessage_arena);
    }
    _has_bits_[1] |= 0x00000400u;
  } else {
    _has_bits_[1] &= ~0x00000400u;
  }
  print_ = print;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.print)
}

// optional .android.service.procstats.ProcessStatsServiceDumpProto procstats = 3011 [(.android.section) = {
inline bool IncidentProto::has_procstats() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline const ::android::service::procstats::ProcessStatsServiceDumpProto& IncidentProto::procstats() const {
  const ::android::service::procstats::ProcessStatsServiceDumpProto* p = procstats_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.procstats)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::procstats::ProcessStatsServiceDumpProto*>(
      &::android::service::procstats::_ProcessStatsServiceDumpProto_default_instance_);
}
inline ::android::service::procstats::ProcessStatsServiceDumpProto* IncidentProto::release_procstats() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.procstats)
  _has_bits_[1] &= ~0x00000800u;
  ::android::service::procstats::ProcessStatsServiceDumpProto* temp = procstats_;
  procstats_ = nullptr;
  return temp;
}
inline ::android::service::procstats::ProcessStatsServiceDumpProto* IncidentProto::mutable_procstats() {
  _has_bits_[1] |= 0x00000800u;
  if (procstats_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::procstats::ProcessStatsServiceDumpProto>(GetArenaNoVirtual());
    procstats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.procstats)
  return procstats_;
}
inline void IncidentProto::set_allocated_procstats(::android::service::procstats::ProcessStatsServiceDumpProto* procstats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(procstats_);
  }
  if (procstats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      procstats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, procstats, submessage_arena);
    }
    _has_bits_[1] |= 0x00000800u;
  } else {
    _has_bits_[1] &= ~0x00000800u;
  }
  procstats_ = procstats;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.procstats)
}

// optional .com.android.server.am.ActivityManagerServiceDumpActivitiesProto activities = 3012 [(.android.section) = {
inline bool IncidentProto::has_activities() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline const ::com::android::server::am::ActivityManagerServiceDumpActivitiesProto& IncidentProto::activities() const {
  const ::com::android::server::am::ActivityManagerServiceDumpActivitiesProto* p = activities_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.activities)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::am::ActivityManagerServiceDumpActivitiesProto*>(
      &::com::android::server::am::_ActivityManagerServiceDumpActivitiesProto_default_instance_);
}
inline ::com::android::server::am::ActivityManagerServiceDumpActivitiesProto* IncidentProto::release_activities() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.activities)
  _has_bits_[1] &= ~0x00001000u;
  ::com::android::server::am::ActivityManagerServiceDumpActivitiesProto* temp = activities_;
  activities_ = nullptr;
  return temp;
}
inline ::com::android::server::am::ActivityManagerServiceDumpActivitiesProto* IncidentProto::mutable_activities() {
  _has_bits_[1] |= 0x00001000u;
  if (activities_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::am::ActivityManagerServiceDumpActivitiesProto>(GetArenaNoVirtual());
    activities_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.activities)
  return activities_;
}
inline void IncidentProto::set_allocated_activities(::com::android::server::am::ActivityManagerServiceDumpActivitiesProto* activities) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(activities_);
  }
  if (activities) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      activities = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, activities, submessage_arena);
    }
    _has_bits_[1] |= 0x00001000u;
  } else {
    _has_bits_[1] &= ~0x00001000u;
  }
  activities_ = activities;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.activities)
}

// optional .com.android.server.am.ActivityManagerServiceDumpBroadcastsProto broadcasts = 3013 [(.android.section) = {
inline bool IncidentProto::has_broadcasts() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline const ::com::android::server::am::ActivityManagerServiceDumpBroadcastsProto& IncidentProto::broadcasts() const {
  const ::com::android::server::am::ActivityManagerServiceDumpBroadcastsProto* p = broadcasts_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.broadcasts)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::am::ActivityManagerServiceDumpBroadcastsProto*>(
      &::com::android::server::am::_ActivityManagerServiceDumpBroadcastsProto_default_instance_);
}
inline ::com::android::server::am::ActivityManagerServiceDumpBroadcastsProto* IncidentProto::release_broadcasts() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.broadcasts)
  _has_bits_[1] &= ~0x00002000u;
  ::com::android::server::am::ActivityManagerServiceDumpBroadcastsProto* temp = broadcasts_;
  broadcasts_ = nullptr;
  return temp;
}
inline ::com::android::server::am::ActivityManagerServiceDumpBroadcastsProto* IncidentProto::mutable_broadcasts() {
  _has_bits_[1] |= 0x00002000u;
  if (broadcasts_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::am::ActivityManagerServiceDumpBroadcastsProto>(GetArenaNoVirtual());
    broadcasts_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.broadcasts)
  return broadcasts_;
}
inline void IncidentProto::set_allocated_broadcasts(::com::android::server::am::ActivityManagerServiceDumpBroadcastsProto* broadcasts) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(broadcasts_);
  }
  if (broadcasts) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      broadcasts = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, broadcasts, submessage_arena);
    }
    _has_bits_[1] |= 0x00002000u;
  } else {
    _has_bits_[1] &= ~0x00002000u;
  }
  broadcasts_ = broadcasts;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.broadcasts)
}

// optional .com.android.server.am.ActivityManagerServiceDumpServicesProto amservices = 3014 [(.android.section) = {
inline bool IncidentProto::has_amservices() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline const ::com::android::server::am::ActivityManagerServiceDumpServicesProto& IncidentProto::amservices() const {
  const ::com::android::server::am::ActivityManagerServiceDumpServicesProto* p = amservices_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.amservices)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::am::ActivityManagerServiceDumpServicesProto*>(
      &::com::android::server::am::_ActivityManagerServiceDumpServicesProto_default_instance_);
}
inline ::com::android::server::am::ActivityManagerServiceDumpServicesProto* IncidentProto::release_amservices() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.amservices)
  _has_bits_[1] &= ~0x00004000u;
  ::com::android::server::am::ActivityManagerServiceDumpServicesProto* temp = amservices_;
  amservices_ = nullptr;
  return temp;
}
inline ::com::android::server::am::ActivityManagerServiceDumpServicesProto* IncidentProto::mutable_amservices() {
  _has_bits_[1] |= 0x00004000u;
  if (amservices_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::am::ActivityManagerServiceDumpServicesProto>(GetArenaNoVirtual());
    amservices_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.amservices)
  return amservices_;
}
inline void IncidentProto::set_allocated_amservices(::com::android::server::am::ActivityManagerServiceDumpServicesProto* amservices) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(amservices_);
  }
  if (amservices) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      amservices = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, amservices, submessage_arena);
    }
    _has_bits_[1] |= 0x00004000u;
  } else {
    _has_bits_[1] &= ~0x00004000u;
  }
  amservices_ = amservices;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.amservices)
}

// optional .com.android.server.am.ActivityManagerServiceDumpProcessesProto amprocesses = 3015 [(.android.section) = {
inline bool IncidentProto::has_amprocesses() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline const ::com::android::server::am::ActivityManagerServiceDumpProcessesProto& IncidentProto::amprocesses() const {
  const ::com::android::server::am::ActivityManagerServiceDumpProcessesProto* p = amprocesses_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.amprocesses)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::am::ActivityManagerServiceDumpProcessesProto*>(
      &::com::android::server::am::_ActivityManagerServiceDumpProcessesProto_default_instance_);
}
inline ::com::android::server::am::ActivityManagerServiceDumpProcessesProto* IncidentProto::release_amprocesses() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.amprocesses)
  _has_bits_[1] &= ~0x00008000u;
  ::com::android::server::am::ActivityManagerServiceDumpProcessesProto* temp = amprocesses_;
  amprocesses_ = nullptr;
  return temp;
}
inline ::com::android::server::am::ActivityManagerServiceDumpProcessesProto* IncidentProto::mutable_amprocesses() {
  _has_bits_[1] |= 0x00008000u;
  if (amprocesses_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::am::ActivityManagerServiceDumpProcessesProto>(GetArenaNoVirtual());
    amprocesses_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.amprocesses)
  return amprocesses_;
}
inline void IncidentProto::set_allocated_amprocesses(::com::android::server::am::ActivityManagerServiceDumpProcessesProto* amprocesses) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(amprocesses_);
  }
  if (amprocesses) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      amprocesses = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, amprocesses, submessage_arena);
    }
    _has_bits_[1] |= 0x00008000u;
  } else {
    _has_bits_[1] &= ~0x00008000u;
  }
  amprocesses_ = amprocesses;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.amprocesses)
}

// optional .com.android.server.alarm.AlarmManagerServiceDumpProto alarm = 3016 [(.android.section) = {
inline bool IncidentProto::has_alarm() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline const ::com::android::server::alarm::AlarmManagerServiceDumpProto& IncidentProto::alarm() const {
  const ::com::android::server::alarm::AlarmManagerServiceDumpProto* p = alarm_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.alarm)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::alarm::AlarmManagerServiceDumpProto*>(
      &::com::android::server::alarm::_AlarmManagerServiceDumpProto_default_instance_);
}
inline ::com::android::server::alarm::AlarmManagerServiceDumpProto* IncidentProto::release_alarm() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.alarm)
  _has_bits_[1] &= ~0x00010000u;
  ::com::android::server::alarm::AlarmManagerServiceDumpProto* temp = alarm_;
  alarm_ = nullptr;
  return temp;
}
inline ::com::android::server::alarm::AlarmManagerServiceDumpProto* IncidentProto::mutable_alarm() {
  _has_bits_[1] |= 0x00010000u;
  if (alarm_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::alarm::AlarmManagerServiceDumpProto>(GetArenaNoVirtual());
    alarm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.alarm)
  return alarm_;
}
inline void IncidentProto::set_allocated_alarm(::com::android::server::alarm::AlarmManagerServiceDumpProto* alarm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(alarm_);
  }
  if (alarm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      alarm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, alarm, submessage_arena);
    }
    _has_bits_[1] |= 0x00010000u;
  } else {
    _has_bits_[1] &= ~0x00010000u;
  }
  alarm_ = alarm;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.alarm)
}

// optional .com.android.server.wm.WindowManagerServiceDumpProto window = 3017 [(.android.section) = {
inline bool IncidentProto::has_window() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline const ::com::android::server::wm::WindowManagerServiceDumpProto& IncidentProto::window() const {
  const ::com::android::server::wm::WindowManagerServiceDumpProto* p = window_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.window)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::wm::WindowManagerServiceDumpProto*>(
      &::com::android::server::wm::_WindowManagerServiceDumpProto_default_instance_);
}
inline ::com::android::server::wm::WindowManagerServiceDumpProto* IncidentProto::release_window() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.window)
  _has_bits_[1] &= ~0x00020000u;
  ::com::android::server::wm::WindowManagerServiceDumpProto* temp = window_;
  window_ = nullptr;
  return temp;
}
inline ::com::android::server::wm::WindowManagerServiceDumpProto* IncidentProto::mutable_window() {
  _has_bits_[1] |= 0x00020000u;
  if (window_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::wm::WindowManagerServiceDumpProto>(GetArenaNoVirtual());
    window_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.window)
  return window_;
}
inline void IncidentProto::set_allocated_window(::com::android::server::wm::WindowManagerServiceDumpProto* window) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(window_);
  }
  if (window) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      window = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, window, submessage_arena);
    }
    _has_bits_[1] |= 0x00020000u;
  } else {
    _has_bits_[1] &= ~0x00020000u;
  }
  window_ = window;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.window)
}

// optional .com.android.server.am.MemInfoDumpProto meminfo = 3018 [(.android.section) = {
inline bool IncidentProto::has_meminfo() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline const ::com::android::server::am::MemInfoDumpProto& IncidentProto::meminfo() const {
  const ::com::android::server::am::MemInfoDumpProto* p = meminfo_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.meminfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::am::MemInfoDumpProto*>(
      &::com::android::server::am::_MemInfoDumpProto_default_instance_);
}
inline ::com::android::server::am::MemInfoDumpProto* IncidentProto::release_meminfo() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.meminfo)
  _has_bits_[1] &= ~0x00040000u;
  ::com::android::server::am::MemInfoDumpProto* temp = meminfo_;
  meminfo_ = nullptr;
  return temp;
}
inline ::com::android::server::am::MemInfoDumpProto* IncidentProto::mutable_meminfo() {
  _has_bits_[1] |= 0x00040000u;
  if (meminfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::am::MemInfoDumpProto>(GetArenaNoVirtual());
    meminfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.meminfo)
  return meminfo_;
}
inline void IncidentProto::set_allocated_meminfo(::com::android::server::am::MemInfoDumpProto* meminfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(meminfo_);
  }
  if (meminfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      meminfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, meminfo, submessage_arena);
    }
    _has_bits_[1] |= 0x00040000u;
  } else {
    _has_bits_[1] &= ~0x00040000u;
  }
  meminfo_ = meminfo;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.meminfo)
}

// optional .android.service.GraphicsStatsServiceDumpProto graphicsstats = 3019 [(.android.section) = {
inline bool IncidentProto::has_graphicsstats() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline const ::android::service::GraphicsStatsServiceDumpProto& IncidentProto::graphicsstats() const {
  const ::android::service::GraphicsStatsServiceDumpProto* p = graphicsstats_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.graphicsstats)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::GraphicsStatsServiceDumpProto*>(
      &::android::service::_GraphicsStatsServiceDumpProto_default_instance_);
}
inline ::android::service::GraphicsStatsServiceDumpProto* IncidentProto::release_graphicsstats() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.graphicsstats)
  _has_bits_[1] &= ~0x00080000u;
  ::android::service::GraphicsStatsServiceDumpProto* temp = graphicsstats_;
  graphicsstats_ = nullptr;
  return temp;
}
inline ::android::service::GraphicsStatsServiceDumpProto* IncidentProto::mutable_graphicsstats() {
  _has_bits_[1] |= 0x00080000u;
  if (graphicsstats_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::GraphicsStatsServiceDumpProto>(GetArenaNoVirtual());
    graphicsstats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.graphicsstats)
  return graphicsstats_;
}
inline void IncidentProto::set_allocated_graphicsstats(::android::service::GraphicsStatsServiceDumpProto* graphicsstats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(graphicsstats_);
  }
  if (graphicsstats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      graphicsstats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, graphicsstats, submessage_arena);
    }
    _has_bits_[1] |= 0x00080000u;
  } else {
    _has_bits_[1] &= ~0x00080000u;
  }
  graphicsstats_ = graphicsstats;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.graphicsstats)
}

// optional .com.android.server.job.JobSchedulerServiceDumpProto jobscheduler = 3020 [(.android.section) = {
inline bool IncidentProto::has_jobscheduler() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline const ::com::android::server::job::JobSchedulerServiceDumpProto& IncidentProto::jobscheduler() const {
  const ::com::android::server::job::JobSchedulerServiceDumpProto* p = jobscheduler_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.jobscheduler)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobSchedulerServiceDumpProto*>(
      &::com::android::server::job::_JobSchedulerServiceDumpProto_default_instance_);
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto* IncidentProto::release_jobscheduler() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.jobscheduler)
  _has_bits_[1] &= ~0x00100000u;
  ::com::android::server::job::JobSchedulerServiceDumpProto* temp = jobscheduler_;
  jobscheduler_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto* IncidentProto::mutable_jobscheduler() {
  _has_bits_[1] |= 0x00100000u;
  if (jobscheduler_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobSchedulerServiceDumpProto>(GetArenaNoVirtual());
    jobscheduler_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.jobscheduler)
  return jobscheduler_;
}
inline void IncidentProto::set_allocated_jobscheduler(::com::android::server::job::JobSchedulerServiceDumpProto* jobscheduler) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(jobscheduler_);
  }
  if (jobscheduler) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      jobscheduler = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, jobscheduler, submessage_arena);
    }
    _has_bits_[1] |= 0x00100000u;
  } else {
    _has_bits_[1] &= ~0x00100000u;
  }
  jobscheduler_ = jobscheduler;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.jobscheduler)
}

// optional .android.service.usb.UsbServiceDumpProto usb = 3021 [(.android.section) = {
inline bool IncidentProto::has_usb() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline const ::android::service::usb::UsbServiceDumpProto& IncidentProto::usb() const {
  const ::android::service::usb::UsbServiceDumpProto* p = usb_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.usb)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::usb::UsbServiceDumpProto*>(
      &::android::service::usb::_UsbServiceDumpProto_default_instance_);
}
inline ::android::service::usb::UsbServiceDumpProto* IncidentProto::release_usb() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.usb)
  _has_bits_[1] &= ~0x00200000u;
  ::android::service::usb::UsbServiceDumpProto* temp = usb_;
  usb_ = nullptr;
  return temp;
}
inline ::android::service::usb::UsbServiceDumpProto* IncidentProto::mutable_usb() {
  _has_bits_[1] |= 0x00200000u;
  if (usb_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::usb::UsbServiceDumpProto>(GetArenaNoVirtual());
    usb_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.usb)
  return usb_;
}
inline void IncidentProto::set_allocated_usb(::android::service::usb::UsbServiceDumpProto* usb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(usb_);
  }
  if (usb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      usb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, usb, submessage_arena);
    }
    _has_bits_[1] |= 0x00200000u;
  } else {
    _has_bits_[1] &= ~0x00200000u;
  }
  usb_ = usb;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.usb)
}

// optional .android.service.batterystats.BatteryStatsServiceDumpHistoryProto battery_history = 3022 [(.android.section) = {
inline bool IncidentProto::has_battery_history() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline const ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto& IncidentProto::battery_history() const {
  const ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto* p = battery_history_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.battery_history)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto*>(
      &::android::service::batterystats::_BatteryStatsServiceDumpHistoryProto_default_instance_);
}
inline ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto* IncidentProto::release_battery_history() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.battery_history)
  _has_bits_[1] &= ~0x00400000u;
  ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto* temp = battery_history_;
  battery_history_ = nullptr;
  return temp;
}
inline ::android::service::batterystats::BatteryStatsServiceDumpHistoryProto* IncidentProto::mutable_battery_history() {
  _has_bits_[1] |= 0x00400000u;
  if (battery_history_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::batterystats::BatteryStatsServiceDumpHistoryProto>(GetArenaNoVirtual());
    battery_history_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.battery_history)
  return battery_history_;
}
inline void IncidentProto::set_allocated_battery_history(::android::service::batterystats::BatteryStatsServiceDumpHistoryProto* battery_history) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(battery_history_);
  }
  if (battery_history) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      battery_history = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, battery_history, submessage_arena);
    }
    _has_bits_[1] |= 0x00400000u;
  } else {
    _has_bits_[1] &= ~0x00400000u;
  }
  battery_history_ = battery_history;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.battery_history)
}

// optional .android.os.StatsDataDumpProto stats_data = 3023 [(.android.section) = {
inline bool IncidentProto::has_stats_data() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline const ::android::os::StatsDataDumpProto& IncidentProto::stats_data() const {
  const ::android::os::StatsDataDumpProto* p = stats_data_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.stats_data)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::StatsDataDumpProto*>(
      &::android::os::_StatsDataDumpProto_default_instance_);
}
inline ::android::os::StatsDataDumpProto* IncidentProto::release_stats_data() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.stats_data)
  _has_bits_[1] &= ~0x00800000u;
  ::android::os::StatsDataDumpProto* temp = stats_data_;
  stats_data_ = nullptr;
  return temp;
}
inline ::android::os::StatsDataDumpProto* IncidentProto::mutable_stats_data() {
  _has_bits_[1] |= 0x00800000u;
  if (stats_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::StatsDataDumpProto>(GetArenaNoVirtual());
    stats_data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.stats_data)
  return stats_data_;
}
inline void IncidentProto::set_allocated_stats_data(::android::os::StatsDataDumpProto* stats_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(stats_data_);
  }
  if (stats_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      stats_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stats_data, submessage_arena);
    }
    _has_bits_[1] |= 0x00800000u;
  } else {
    _has_bits_[1] &= ~0x00800000u;
  }
  stats_data_ = stats_data;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.stats_data)
}

// optional .com.android.role.RoleServiceDumpProto role = 3024 [(.android.section) = {
inline bool IncidentProto::has_role() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline const ::com::android::role::RoleServiceDumpProto& IncidentProto::role() const {
  const ::com::android::role::RoleServiceDumpProto* p = role_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.role)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::role::RoleServiceDumpProto*>(
      &::com::android::role::_RoleServiceDumpProto_default_instance_);
}
inline ::com::android::role::RoleServiceDumpProto* IncidentProto::release_role() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.role)
  _has_bits_[1] &= ~0x01000000u;
  ::com::android::role::RoleServiceDumpProto* temp = role_;
  role_ = nullptr;
  return temp;
}
inline ::com::android::role::RoleServiceDumpProto* IncidentProto::mutable_role() {
  _has_bits_[1] |= 0x01000000u;
  if (role_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::role::RoleServiceDumpProto>(GetArenaNoVirtual());
    role_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.role)
  return role_;
}
inline void IncidentProto::set_allocated_role(::com::android::role::RoleServiceDumpProto* role) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(role_);
  }
  if (role) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      role = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, role, submessage_arena);
    }
    _has_bits_[1] |= 0x01000000u;
  } else {
    _has_bits_[1] &= ~0x01000000u;
  }
  role_ = role;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.role)
}

// optional .android.service.restricted_image.RestrictedImagesDumpProto restricted_images = 3025 [(.android.section) = {
inline bool IncidentProto::has_restricted_images() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline const ::android::service::restricted_image::RestrictedImagesDumpProto& IncidentProto::restricted_images() const {
  const ::android::service::restricted_image::RestrictedImagesDumpProto* p = restricted_images_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.restricted_images)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::restricted_image::RestrictedImagesDumpProto*>(
      &::android::service::restricted_image::_RestrictedImagesDumpProto_default_instance_);
}
inline ::android::service::restricted_image::RestrictedImagesDumpProto* IncidentProto::release_restricted_images() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.restricted_images)
  _has_bits_[1] &= ~0x02000000u;
  ::android::service::restricted_image::RestrictedImagesDumpProto* temp = restricted_images_;
  restricted_images_ = nullptr;
  return temp;
}
inline ::android::service::restricted_image::RestrictedImagesDumpProto* IncidentProto::mutable_restricted_images() {
  _has_bits_[1] |= 0x02000000u;
  if (restricted_images_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::restricted_image::RestrictedImagesDumpProto>(GetArenaNoVirtual());
    restricted_images_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.restricted_images)
  return restricted_images_;
}
inline void IncidentProto::set_allocated_restricted_images(::android::service::restricted_image::RestrictedImagesDumpProto* restricted_images) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(restricted_images_);
  }
  if (restricted_images) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      restricted_images = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, restricted_images, submessage_arena);
    }
    _has_bits_[1] |= 0x02000000u;
  } else {
    _has_bits_[1] &= ~0x02000000u;
  }
  restricted_images_ = restricted_images;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.restricted_images)
}

// optional bytes system_trace = 3026 [(.android.privacy) = {
inline bool IncidentProto::has_system_trace() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IncidentProto::clear_system_trace() {
  system_trace_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& IncidentProto::system_trace() const {
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.system_trace)
  return system_trace_.GetNoArena();
}
inline void IncidentProto::set_system_trace(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  system_trace_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.IncidentProto.system_trace)
}
inline void IncidentProto::set_system_trace(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  system_trace_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.IncidentProto.system_trace)
}
inline void IncidentProto::set_system_trace(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  system_trace_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.IncidentProto.system_trace)
}
inline void IncidentProto::set_system_trace(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  system_trace_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.IncidentProto.system_trace)
}
inline std::string* IncidentProto::mutable_system_trace() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.system_trace)
  return system_trace_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* IncidentProto::release_system_trace() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.system_trace)
  if (!has_system_trace()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return system_trace_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void IncidentProto::set_allocated_system_trace(std::string* system_trace) {
  if (system_trace != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  system_trace_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), system_trace);
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.system_trace)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_data_app_crash = 3027 [(.android.section) = {
inline bool IncidentProto::has_dropbox_data_app_crash() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_data_app_crash() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_data_app_crash_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_data_app_crash)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_data_app_crash() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_data_app_crash)
  _has_bits_[1] &= ~0x04000000u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_data_app_crash_;
  dropbox_data_app_crash_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_data_app_crash() {
  _has_bits_[1] |= 0x04000000u;
  if (dropbox_data_app_crash_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_data_app_crash_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_data_app_crash)
  return dropbox_data_app_crash_;
}
inline void IncidentProto::set_allocated_dropbox_data_app_crash(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_crash) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_data_app_crash_);
  }
  if (dropbox_data_app_crash) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_data_app_crash = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_data_app_crash, submessage_arena);
    }
    _has_bits_[1] |= 0x04000000u;
  } else {
    _has_bits_[1] &= ~0x04000000u;
  }
  dropbox_data_app_crash_ = dropbox_data_app_crash;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_data_app_crash)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_data_app_anr = 3028 [(.android.section) = {
inline bool IncidentProto::has_dropbox_data_app_anr() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_data_app_anr() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_data_app_anr_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_data_app_anr)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_data_app_anr() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_data_app_anr)
  _has_bits_[1] &= ~0x08000000u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_data_app_anr_;
  dropbox_data_app_anr_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_data_app_anr() {
  _has_bits_[1] |= 0x08000000u;
  if (dropbox_data_app_anr_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_data_app_anr_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_data_app_anr)
  return dropbox_data_app_anr_;
}
inline void IncidentProto::set_allocated_dropbox_data_app_anr(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_anr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_data_app_anr_);
  }
  if (dropbox_data_app_anr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_data_app_anr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_data_app_anr, submessage_arena);
    }
    _has_bits_[1] |= 0x08000000u;
  } else {
    _has_bits_[1] &= ~0x08000000u;
  }
  dropbox_data_app_anr_ = dropbox_data_app_anr;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_data_app_anr)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_data_app_native_crash = 3029 [(.android.section) = {
inline bool IncidentProto::has_dropbox_data_app_native_crash() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_data_app_native_crash() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_data_app_native_crash_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_data_app_native_crash)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_data_app_native_crash() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_data_app_native_crash)
  _has_bits_[1] &= ~0x10000000u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_data_app_native_crash_;
  dropbox_data_app_native_crash_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_data_app_native_crash() {
  _has_bits_[1] |= 0x10000000u;
  if (dropbox_data_app_native_crash_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_data_app_native_crash_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_data_app_native_crash)
  return dropbox_data_app_native_crash_;
}
inline void IncidentProto::set_allocated_dropbox_data_app_native_crash(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_native_crash) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_data_app_native_crash_);
  }
  if (dropbox_data_app_native_crash) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_data_app_native_crash = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_data_app_native_crash, submessage_arena);
    }
    _has_bits_[1] |= 0x10000000u;
  } else {
    _has_bits_[1] &= ~0x10000000u;
  }
  dropbox_data_app_native_crash_ = dropbox_data_app_native_crash;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_data_app_native_crash)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_data_app_strictmode = 3030 [(.android.section) = {
inline bool IncidentProto::has_dropbox_data_app_strictmode() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_data_app_strictmode() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_data_app_strictmode_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_data_app_strictmode)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_data_app_strictmode() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_data_app_strictmode)
  _has_bits_[1] &= ~0x20000000u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_data_app_strictmode_;
  dropbox_data_app_strictmode_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_data_app_strictmode() {
  _has_bits_[1] |= 0x20000000u;
  if (dropbox_data_app_strictmode_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_data_app_strictmode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_data_app_strictmode)
  return dropbox_data_app_strictmode_;
}
inline void IncidentProto::set_allocated_dropbox_data_app_strictmode(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_strictmode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_data_app_strictmode_);
  }
  if (dropbox_data_app_strictmode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_data_app_strictmode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_data_app_strictmode, submessage_arena);
    }
    _has_bits_[1] |= 0x20000000u;
  } else {
    _has_bits_[1] &= ~0x20000000u;
  }
  dropbox_data_app_strictmode_ = dropbox_data_app_strictmode;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_data_app_strictmode)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_data_app_wtf = 3031 [(.android.section) = {
inline bool IncidentProto::has_dropbox_data_app_wtf() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_data_app_wtf() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_data_app_wtf_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_data_app_wtf)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_data_app_wtf() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_data_app_wtf)
  _has_bits_[1] &= ~0x40000000u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_data_app_wtf_;
  dropbox_data_app_wtf_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_data_app_wtf() {
  _has_bits_[1] |= 0x40000000u;
  if (dropbox_data_app_wtf_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_data_app_wtf_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_data_app_wtf)
  return dropbox_data_app_wtf_;
}
inline void IncidentProto::set_allocated_dropbox_data_app_wtf(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_data_app_wtf) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_data_app_wtf_);
  }
  if (dropbox_data_app_wtf) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_data_app_wtf = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_data_app_wtf, submessage_arena);
    }
    _has_bits_[1] |= 0x40000000u;
  } else {
    _has_bits_[1] &= ~0x40000000u;
  }
  dropbox_data_app_wtf_ = dropbox_data_app_wtf;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_data_app_wtf)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_app_crash = 3032 [(.android.section) = {
inline bool IncidentProto::has_dropbox_system_app_crash() const {
  return (_has_bits_[1] & 0x80000000u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_system_app_crash() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_system_app_crash_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_system_app_crash)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_system_app_crash() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_system_app_crash)
  _has_bits_[1] &= ~0x80000000u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_system_app_crash_;
  dropbox_system_app_crash_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_system_app_crash() {
  _has_bits_[1] |= 0x80000000u;
  if (dropbox_system_app_crash_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_system_app_crash_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_system_app_crash)
  return dropbox_system_app_crash_;
}
inline void IncidentProto::set_allocated_dropbox_system_app_crash(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_crash) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_system_app_crash_);
  }
  if (dropbox_system_app_crash) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_system_app_crash = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_system_app_crash, submessage_arena);
    }
    _has_bits_[1] |= 0x80000000u;
  } else {
    _has_bits_[1] &= ~0x80000000u;
  }
  dropbox_system_app_crash_ = dropbox_system_app_crash;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_system_app_crash)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_app_anr = 3033 [(.android.section) = {
inline bool IncidentProto::has_dropbox_system_app_anr() const {
  return (_has_bits_[2] & 0x00000001u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_system_app_anr() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_system_app_anr_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_system_app_anr)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_system_app_anr() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_system_app_anr)
  _has_bits_[2] &= ~0x00000001u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_system_app_anr_;
  dropbox_system_app_anr_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_system_app_anr() {
  _has_bits_[2] |= 0x00000001u;
  if (dropbox_system_app_anr_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_system_app_anr_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_system_app_anr)
  return dropbox_system_app_anr_;
}
inline void IncidentProto::set_allocated_dropbox_system_app_anr(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_anr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_system_app_anr_);
  }
  if (dropbox_system_app_anr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_system_app_anr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_system_app_anr, submessage_arena);
    }
    _has_bits_[2] |= 0x00000001u;
  } else {
    _has_bits_[2] &= ~0x00000001u;
  }
  dropbox_system_app_anr_ = dropbox_system_app_anr;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_system_app_anr)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_app_native_crash = 3034 [(.android.section) = {
inline bool IncidentProto::has_dropbox_system_app_native_crash() const {
  return (_has_bits_[2] & 0x00000002u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_system_app_native_crash() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_system_app_native_crash_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_system_app_native_crash)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_system_app_native_crash() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_system_app_native_crash)
  _has_bits_[2] &= ~0x00000002u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_system_app_native_crash_;
  dropbox_system_app_native_crash_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_system_app_native_crash() {
  _has_bits_[2] |= 0x00000002u;
  if (dropbox_system_app_native_crash_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_system_app_native_crash_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_system_app_native_crash)
  return dropbox_system_app_native_crash_;
}
inline void IncidentProto::set_allocated_dropbox_system_app_native_crash(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_native_crash) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_system_app_native_crash_);
  }
  if (dropbox_system_app_native_crash) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_system_app_native_crash = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_system_app_native_crash, submessage_arena);
    }
    _has_bits_[2] |= 0x00000002u;
  } else {
    _has_bits_[2] &= ~0x00000002u;
  }
  dropbox_system_app_native_crash_ = dropbox_system_app_native_crash;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_system_app_native_crash)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_app_strictmode = 3035 [(.android.section) = {
inline bool IncidentProto::has_dropbox_system_app_strictmode() const {
  return (_has_bits_[2] & 0x00000004u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_system_app_strictmode() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_system_app_strictmode_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_system_app_strictmode)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_system_app_strictmode() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_system_app_strictmode)
  _has_bits_[2] &= ~0x00000004u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_system_app_strictmode_;
  dropbox_system_app_strictmode_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_system_app_strictmode() {
  _has_bits_[2] |= 0x00000004u;
  if (dropbox_system_app_strictmode_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_system_app_strictmode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_system_app_strictmode)
  return dropbox_system_app_strictmode_;
}
inline void IncidentProto::set_allocated_dropbox_system_app_strictmode(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_strictmode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_system_app_strictmode_);
  }
  if (dropbox_system_app_strictmode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_system_app_strictmode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_system_app_strictmode, submessage_arena);
    }
    _has_bits_[2] |= 0x00000004u;
  } else {
    _has_bits_[2] &= ~0x00000004u;
  }
  dropbox_system_app_strictmode_ = dropbox_system_app_strictmode;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_system_app_strictmode)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_app_wtf = 3036 [(.android.section) = {
inline bool IncidentProto::has_dropbox_system_app_wtf() const {
  return (_has_bits_[2] & 0x00000008u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_system_app_wtf() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_system_app_wtf_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_system_app_wtf)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_system_app_wtf() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_system_app_wtf)
  _has_bits_[2] &= ~0x00000008u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_system_app_wtf_;
  dropbox_system_app_wtf_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_system_app_wtf() {
  _has_bits_[2] |= 0x00000008u;
  if (dropbox_system_app_wtf_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_system_app_wtf_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_system_app_wtf)
  return dropbox_system_app_wtf_;
}
inline void IncidentProto::set_allocated_dropbox_system_app_wtf(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_app_wtf) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_system_app_wtf_);
  }
  if (dropbox_system_app_wtf) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_system_app_wtf = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_system_app_wtf, submessage_arena);
    }
    _has_bits_[2] |= 0x00000008u;
  } else {
    _has_bits_[2] &= ~0x00000008u;
  }
  dropbox_system_app_wtf_ = dropbox_system_app_wtf;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_system_app_wtf)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_server_crash = 3037 [(.android.section) = {
inline bool IncidentProto::has_dropbox_system_server_crash() const {
  return (_has_bits_[2] & 0x00000010u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_system_server_crash() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_system_server_crash_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_system_server_crash)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_system_server_crash() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_system_server_crash)
  _has_bits_[2] &= ~0x00000010u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_system_server_crash_;
  dropbox_system_server_crash_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_system_server_crash() {
  _has_bits_[2] |= 0x00000010u;
  if (dropbox_system_server_crash_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_system_server_crash_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_system_server_crash)
  return dropbox_system_server_crash_;
}
inline void IncidentProto::set_allocated_dropbox_system_server_crash(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_crash) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_system_server_crash_);
  }
  if (dropbox_system_server_crash) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_system_server_crash = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_system_server_crash, submessage_arena);
    }
    _has_bits_[2] |= 0x00000010u;
  } else {
    _has_bits_[2] &= ~0x00000010u;
  }
  dropbox_system_server_crash_ = dropbox_system_server_crash;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_system_server_crash)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_server_anr = 3038 [(.android.section) = {
inline bool IncidentProto::has_dropbox_system_server_anr() const {
  return (_has_bits_[2] & 0x00000020u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_system_server_anr() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_system_server_anr_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_system_server_anr)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_system_server_anr() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_system_server_anr)
  _has_bits_[2] &= ~0x00000020u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_system_server_anr_;
  dropbox_system_server_anr_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_system_server_anr() {
  _has_bits_[2] |= 0x00000020u;
  if (dropbox_system_server_anr_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_system_server_anr_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_system_server_anr)
  return dropbox_system_server_anr_;
}
inline void IncidentProto::set_allocated_dropbox_system_server_anr(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_anr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_system_server_anr_);
  }
  if (dropbox_system_server_anr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_system_server_anr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_system_server_anr, submessage_arena);
    }
    _has_bits_[2] |= 0x00000020u;
  } else {
    _has_bits_[2] &= ~0x00000020u;
  }
  dropbox_system_server_anr_ = dropbox_system_server_anr;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_system_server_anr)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_server_native_crash = 3039 [(.android.section) = {
inline bool IncidentProto::has_dropbox_system_server_native_crash() const {
  return (_has_bits_[2] & 0x00000040u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_system_server_native_crash() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_system_server_native_crash_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_system_server_native_crash)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_system_server_native_crash() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_system_server_native_crash)
  _has_bits_[2] &= ~0x00000040u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_system_server_native_crash_;
  dropbox_system_server_native_crash_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_system_server_native_crash() {
  _has_bits_[2] |= 0x00000040u;
  if (dropbox_system_server_native_crash_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_system_server_native_crash_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_system_server_native_crash)
  return dropbox_system_server_native_crash_;
}
inline void IncidentProto::set_allocated_dropbox_system_server_native_crash(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_native_crash) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_system_server_native_crash_);
  }
  if (dropbox_system_server_native_crash) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_system_server_native_crash = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_system_server_native_crash, submessage_arena);
    }
    _has_bits_[2] |= 0x00000040u;
  } else {
    _has_bits_[2] &= ~0x00000040u;
  }
  dropbox_system_server_native_crash_ = dropbox_system_server_native_crash;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_system_server_native_crash)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_server_lowmem = 3040 [(.android.section) = {
inline bool IncidentProto::has_dropbox_system_server_lowmem() const {
  return (_has_bits_[2] & 0x00000080u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_system_server_lowmem() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_system_server_lowmem_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_system_server_lowmem)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_system_server_lowmem() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_system_server_lowmem)
  _has_bits_[2] &= ~0x00000080u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_system_server_lowmem_;
  dropbox_system_server_lowmem_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_system_server_lowmem() {
  _has_bits_[2] |= 0x00000080u;
  if (dropbox_system_server_lowmem_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_system_server_lowmem_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_system_server_lowmem)
  return dropbox_system_server_lowmem_;
}
inline void IncidentProto::set_allocated_dropbox_system_server_lowmem(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_lowmem) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_system_server_lowmem_);
  }
  if (dropbox_system_server_lowmem) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_system_server_lowmem = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_system_server_lowmem, submessage_arena);
    }
    _has_bits_[2] |= 0x00000080u;
  } else {
    _has_bits_[2] &= ~0x00000080u;
  }
  dropbox_system_server_lowmem_ = dropbox_system_server_lowmem;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_system_server_lowmem)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_server_strictmode = 3041 [(.android.section) = {
inline bool IncidentProto::has_dropbox_system_server_strictmode() const {
  return (_has_bits_[2] & 0x00000100u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_system_server_strictmode() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_system_server_strictmode_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_system_server_strictmode)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_system_server_strictmode() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_system_server_strictmode)
  _has_bits_[2] &= ~0x00000100u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_system_server_strictmode_;
  dropbox_system_server_strictmode_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_system_server_strictmode() {
  _has_bits_[2] |= 0x00000100u;
  if (dropbox_system_server_strictmode_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_system_server_strictmode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_system_server_strictmode)
  return dropbox_system_server_strictmode_;
}
inline void IncidentProto::set_allocated_dropbox_system_server_strictmode(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_strictmode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_system_server_strictmode_);
  }
  if (dropbox_system_server_strictmode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_system_server_strictmode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_system_server_strictmode, submessage_arena);
    }
    _has_bits_[2] |= 0x00000100u;
  } else {
    _has_bits_[2] &= ~0x00000100u;
  }
  dropbox_system_server_strictmode_ = dropbox_system_server_strictmode;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_system_server_strictmode)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_server_watchdog = 3042 [(.android.section) = {
inline bool IncidentProto::has_dropbox_system_server_watchdog() const {
  return (_has_bits_[2] & 0x00000200u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_system_server_watchdog() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_system_server_watchdog_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_system_server_watchdog)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_system_server_watchdog() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_system_server_watchdog)
  _has_bits_[2] &= ~0x00000200u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_system_server_watchdog_;
  dropbox_system_server_watchdog_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_system_server_watchdog() {
  _has_bits_[2] |= 0x00000200u;
  if (dropbox_system_server_watchdog_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_system_server_watchdog_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_system_server_watchdog)
  return dropbox_system_server_watchdog_;
}
inline void IncidentProto::set_allocated_dropbox_system_server_watchdog(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_watchdog) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_system_server_watchdog_);
  }
  if (dropbox_system_server_watchdog) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_system_server_watchdog = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_system_server_watchdog, submessage_arena);
    }
    _has_bits_[2] |= 0x00000200u;
  } else {
    _has_bits_[2] &= ~0x00000200u;
  }
  dropbox_system_server_watchdog_ = dropbox_system_server_watchdog;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_system_server_watchdog)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_server_wtf = 3043 [(.android.section) = {
inline bool IncidentProto::has_dropbox_system_server_wtf() const {
  return (_has_bits_[2] & 0x00000400u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_system_server_wtf() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_system_server_wtf_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_system_server_wtf)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_system_server_wtf() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_system_server_wtf)
  _has_bits_[2] &= ~0x00000400u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_system_server_wtf_;
  dropbox_system_server_wtf_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_system_server_wtf() {
  _has_bits_[2] |= 0x00000400u;
  if (dropbox_system_server_wtf_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_system_server_wtf_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_system_server_wtf)
  return dropbox_system_server_wtf_;
}
inline void IncidentProto::set_allocated_dropbox_system_server_wtf(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_server_wtf) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_system_server_wtf_);
  }
  if (dropbox_system_server_wtf) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_system_server_wtf = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_system_server_wtf, submessage_arena);
    }
    _has_bits_[2] |= 0x00000400u;
  } else {
    _has_bits_[2] &= ~0x00000400u;
  }
  dropbox_system_server_wtf_ = dropbox_system_server_wtf;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_system_server_wtf)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_recovery_log = 3044 [(.android.section) = {
inline bool IncidentProto::has_dropbox_system_recovery_log() const {
  return (_has_bits_[2] & 0x00000800u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_system_recovery_log() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_system_recovery_log_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_system_recovery_log)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_system_recovery_log() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_system_recovery_log)
  _has_bits_[2] &= ~0x00000800u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_system_recovery_log_;
  dropbox_system_recovery_log_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_system_recovery_log() {
  _has_bits_[2] |= 0x00000800u;
  if (dropbox_system_recovery_log_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_system_recovery_log_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_system_recovery_log)
  return dropbox_system_recovery_log_;
}
inline void IncidentProto::set_allocated_dropbox_system_recovery_log(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_recovery_log) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_system_recovery_log_);
  }
  if (dropbox_system_recovery_log) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_system_recovery_log = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_system_recovery_log, submessage_arena);
    }
    _has_bits_[2] |= 0x00000800u;
  } else {
    _has_bits_[2] &= ~0x00000800u;
  }
  dropbox_system_recovery_log_ = dropbox_system_recovery_log;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_system_recovery_log)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_system_tombstone = 3045 [(.android.section) = {
inline bool IncidentProto::has_dropbox_system_tombstone() const {
  return (_has_bits_[2] & 0x00001000u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_system_tombstone() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_system_tombstone_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_system_tombstone)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_system_tombstone() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_system_tombstone)
  _has_bits_[2] &= ~0x00001000u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_system_tombstone_;
  dropbox_system_tombstone_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_system_tombstone() {
  _has_bits_[2] |= 0x00001000u;
  if (dropbox_system_tombstone_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_system_tombstone_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_system_tombstone)
  return dropbox_system_tombstone_;
}
inline void IncidentProto::set_allocated_dropbox_system_tombstone(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_system_tombstone) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_system_tombstone_);
  }
  if (dropbox_system_tombstone) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_system_tombstone = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_system_tombstone, submessage_arena);
    }
    _has_bits_[2] |= 0x00001000u;
  } else {
    _has_bits_[2] &= ~0x00001000u;
  }
  dropbox_system_tombstone_ = dropbox_system_tombstone;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_system_tombstone)
}

// optional .android.service.dropbox.DropBoxManagerServiceDumpProto dropbox_subsystem_restart = 3046 [(.android.section) = {
inline bool IncidentProto::has_dropbox_subsystem_restart() const {
  return (_has_bits_[2] & 0x00002000u) != 0;
}
inline const ::android::service::dropbox::DropBoxManagerServiceDumpProto& IncidentProto::dropbox_subsystem_restart() const {
  const ::android::service::dropbox::DropBoxManagerServiceDumpProto* p = dropbox_subsystem_restart_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.dropbox_subsystem_restart)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::dropbox::DropBoxManagerServiceDumpProto*>(
      &::android::service::dropbox::_DropBoxManagerServiceDumpProto_default_instance_);
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::release_dropbox_subsystem_restart() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.dropbox_subsystem_restart)
  _has_bits_[2] &= ~0x00002000u;
  ::android::service::dropbox::DropBoxManagerServiceDumpProto* temp = dropbox_subsystem_restart_;
  dropbox_subsystem_restart_ = nullptr;
  return temp;
}
inline ::android::service::dropbox::DropBoxManagerServiceDumpProto* IncidentProto::mutable_dropbox_subsystem_restart() {
  _has_bits_[2] |= 0x00002000u;
  if (dropbox_subsystem_restart_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::dropbox::DropBoxManagerServiceDumpProto>(GetArenaNoVirtual());
    dropbox_subsystem_restart_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.dropbox_subsystem_restart)
  return dropbox_subsystem_restart_;
}
inline void IncidentProto::set_allocated_dropbox_subsystem_restart(::android::service::dropbox::DropBoxManagerServiceDumpProto* dropbox_subsystem_restart) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dropbox_subsystem_restart_);
  }
  if (dropbox_subsystem_restart) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dropbox_subsystem_restart = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dropbox_subsystem_restart, submessage_arena);
    }
    _has_bits_[2] |= 0x00002000u;
  } else {
    _has_bits_[2] &= ~0x00002000u;
  }
  dropbox_subsystem_restart_ = dropbox_subsystem_restart;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.dropbox_subsystem_restart)
}

// optional .android.os.CpuUsageProto process_cpu_usage = 3047 [(.android.section) = {
inline bool IncidentProto::has_process_cpu_usage() const {
  return (_has_bits_[2] & 0x00004000u) != 0;
}
inline const ::android::os::CpuUsageProto& IncidentProto::process_cpu_usage() const {
  const ::android::os::CpuUsageProto* p = process_cpu_usage_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.process_cpu_usage)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::CpuUsageProto*>(
      &::android::os::_CpuUsageProto_default_instance_);
}
inline ::android::os::CpuUsageProto* IncidentProto::release_process_cpu_usage() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.process_cpu_usage)
  _has_bits_[2] &= ~0x00004000u;
  ::android::os::CpuUsageProto* temp = process_cpu_usage_;
  process_cpu_usage_ = nullptr;
  return temp;
}
inline ::android::os::CpuUsageProto* IncidentProto::mutable_process_cpu_usage() {
  _has_bits_[2] |= 0x00004000u;
  if (process_cpu_usage_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::CpuUsageProto>(GetArenaNoVirtual());
    process_cpu_usage_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.process_cpu_usage)
  return process_cpu_usage_;
}
inline void IncidentProto::set_allocated_process_cpu_usage(::android::os::CpuUsageProto* process_cpu_usage) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(process_cpu_usage_);
  }
  if (process_cpu_usage) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      process_cpu_usage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, process_cpu_usage, submessage_arena);
    }
    _has_bits_[2] |= 0x00004000u;
  } else {
    _has_bits_[2] &= ~0x00004000u;
  }
  process_cpu_usage_ = process_cpu_usage;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.process_cpu_usage)
}

// optional .clearcut.connectivity.IpConnectivityLog ip_connectivity_metrics = 3049 [(.android.section) = {
inline bool IncidentProto::has_ip_connectivity_metrics() const {
  return (_has_bits_[2] & 0x00008000u) != 0;
}
inline const ::clearcut::connectivity::IpConnectivityLog& IncidentProto::ip_connectivity_metrics() const {
  const ::clearcut::connectivity::IpConnectivityLog* p = ip_connectivity_metrics_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.ip_connectivity_metrics)
  return p != nullptr ? *p : *reinterpret_cast<const ::clearcut::connectivity::IpConnectivityLog*>(
      &::clearcut::connectivity::_IpConnectivityLog_default_instance_);
}
inline ::clearcut::connectivity::IpConnectivityLog* IncidentProto::release_ip_connectivity_metrics() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.ip_connectivity_metrics)
  _has_bits_[2] &= ~0x00008000u;
  ::clearcut::connectivity::IpConnectivityLog* temp = ip_connectivity_metrics_;
  ip_connectivity_metrics_ = nullptr;
  return temp;
}
inline ::clearcut::connectivity::IpConnectivityLog* IncidentProto::mutable_ip_connectivity_metrics() {
  _has_bits_[2] |= 0x00008000u;
  if (ip_connectivity_metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::clearcut::connectivity::IpConnectivityLog>(GetArenaNoVirtual());
    ip_connectivity_metrics_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.ip_connectivity_metrics)
  return ip_connectivity_metrics_;
}
inline void IncidentProto::set_allocated_ip_connectivity_metrics(::clearcut::connectivity::IpConnectivityLog* ip_connectivity_metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ip_connectivity_metrics_);
  }
  if (ip_connectivity_metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ip_connectivity_metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ip_connectivity_metrics, submessage_arena);
    }
    _has_bits_[2] |= 0x00008000u;
  } else {
    _has_bits_[2] &= ~0x00008000u;
  }
  ip_connectivity_metrics_ = ip_connectivity_metrics;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.ip_connectivity_metrics)
}

// optional .com.android.server.BluetoothManagerServiceDumpProto bluetooth_manager = 3050 [(.android.section) = {
inline bool IncidentProto::has_bluetooth_manager() const {
  return (_has_bits_[2] & 0x00010000u) != 0;
}
inline const ::com::android::server::BluetoothManagerServiceDumpProto& IncidentProto::bluetooth_manager() const {
  const ::com::android::server::BluetoothManagerServiceDumpProto* p = bluetooth_manager_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.bluetooth_manager)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::BluetoothManagerServiceDumpProto*>(
      &::com::android::server::_BluetoothManagerServiceDumpProto_default_instance_);
}
inline ::com::android::server::BluetoothManagerServiceDumpProto* IncidentProto::release_bluetooth_manager() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.bluetooth_manager)
  _has_bits_[2] &= ~0x00010000u;
  ::com::android::server::BluetoothManagerServiceDumpProto* temp = bluetooth_manager_;
  bluetooth_manager_ = nullptr;
  return temp;
}
inline ::com::android::server::BluetoothManagerServiceDumpProto* IncidentProto::mutable_bluetooth_manager() {
  _has_bits_[2] |= 0x00010000u;
  if (bluetooth_manager_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::BluetoothManagerServiceDumpProto>(GetArenaNoVirtual());
    bluetooth_manager_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.bluetooth_manager)
  return bluetooth_manager_;
}
inline void IncidentProto::set_allocated_bluetooth_manager(::com::android::server::BluetoothManagerServiceDumpProto* bluetooth_manager) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(bluetooth_manager_);
  }
  if (bluetooth_manager) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bluetooth_manager = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bluetooth_manager, submessage_arena);
    }
    _has_bits_[2] |= 0x00010000u;
  } else {
    _has_bits_[2] &= ~0x00010000u;
  }
  bluetooth_manager_ = bluetooth_manager;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.bluetooth_manager)
}

// optional .com.android.server.location.ContextHubServiceProto context_hub = 3051 [(.android.section) = {
inline bool IncidentProto::has_context_hub() const {
  return (_has_bits_[2] & 0x00020000u) != 0;
}
inline const ::com::android::server::location::ContextHubServiceProto& IncidentProto::context_hub() const {
  const ::com::android::server::location::ContextHubServiceProto* p = context_hub_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.context_hub)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::location::ContextHubServiceProto*>(
      &::com::android::server::location::_ContextHubServiceProto_default_instance_);
}
inline ::com::android::server::location::ContextHubServiceProto* IncidentProto::release_context_hub() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.context_hub)
  _has_bits_[2] &= ~0x00020000u;
  ::com::android::server::location::ContextHubServiceProto* temp = context_hub_;
  context_hub_ = nullptr;
  return temp;
}
inline ::com::android::server::location::ContextHubServiceProto* IncidentProto::mutable_context_hub() {
  _has_bits_[2] |= 0x00020000u;
  if (context_hub_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::location::ContextHubServiceProto>(GetArenaNoVirtual());
    context_hub_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.context_hub)
  return context_hub_;
}
inline void IncidentProto::set_allocated_context_hub(::com::android::server::location::ContextHubServiceProto* context_hub) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(context_hub_);
  }
  if (context_hub) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      context_hub = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, context_hub, submessage_arena);
    }
    _has_bits_[2] |= 0x00020000u;
  } else {
    _has_bits_[2] &= ~0x00020000u;
  }
  context_hub_ = context_hub;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.context_hub)
}

// optional .com.android.nfc.NfcServiceDumpProto nfc_service = 3052 [(.android.section) = {
inline bool IncidentProto::has_nfc_service() const {
  return (_has_bits_[2] & 0x00040000u) != 0;
}
inline const ::com::android::nfc::NfcServiceDumpProto& IncidentProto::nfc_service() const {
  const ::com::android::nfc::NfcServiceDumpProto* p = nfc_service_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.nfc_service)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::nfc::NfcServiceDumpProto*>(
      &::com::android::nfc::_NfcServiceDumpProto_default_instance_);
}
inline ::com::android::nfc::NfcServiceDumpProto* IncidentProto::release_nfc_service() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.nfc_service)
  _has_bits_[2] &= ~0x00040000u;
  ::com::android::nfc::NfcServiceDumpProto* temp = nfc_service_;
  nfc_service_ = nullptr;
  return temp;
}
inline ::com::android::nfc::NfcServiceDumpProto* IncidentProto::mutable_nfc_service() {
  _has_bits_[2] |= 0x00040000u;
  if (nfc_service_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::nfc::NfcServiceDumpProto>(GetArenaNoVirtual());
    nfc_service_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.nfc_service)
  return nfc_service_;
}
inline void IncidentProto::set_allocated_nfc_service(::com::android::nfc::NfcServiceDumpProto* nfc_service) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(nfc_service_);
  }
  if (nfc_service) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      nfc_service = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, nfc_service, submessage_arena);
    }
    _has_bits_[2] |= 0x00040000u;
  } else {
    _has_bits_[2] &= ~0x00040000u;
  }
  nfc_service_ = nfc_service;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.nfc_service)
}

// optional .android.service.SensorServiceProto sensor_service = 3053 [(.android.section) = {
inline bool IncidentProto::has_sensor_service() const {
  return (_has_bits_[2] & 0x00080000u) != 0;
}
inline const ::android::service::SensorServiceProto& IncidentProto::sensor_service() const {
  const ::android::service::SensorServiceProto* p = sensor_service_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.sensor_service)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::SensorServiceProto*>(
      &::android::service::_SensorServiceProto_default_instance_);
}
inline ::android::service::SensorServiceProto* IncidentProto::release_sensor_service() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.sensor_service)
  _has_bits_[2] &= ~0x00080000u;
  ::android::service::SensorServiceProto* temp = sensor_service_;
  sensor_service_ = nullptr;
  return temp;
}
inline ::android::service::SensorServiceProto* IncidentProto::mutable_sensor_service() {
  _has_bits_[2] |= 0x00080000u;
  if (sensor_service_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::SensorServiceProto>(GetArenaNoVirtual());
    sensor_service_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.sensor_service)
  return sensor_service_;
}
inline void IncidentProto::set_allocated_sensor_service(::android::service::SensorServiceProto* sensor_service) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sensor_service_);
  }
  if (sensor_service) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      sensor_service = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sensor_service, submessage_arena);
    }
    _has_bits_[2] |= 0x00080000u;
  } else {
    _has_bits_[2] &= ~0x00080000u;
  }
  sensor_service_ = sensor_service;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.sensor_service)
}

// optional .com.android.server.powerstats.PowerStatsServiceMeterProto powerstats_meter = 3054 [(.android.section) = {
inline bool IncidentProto::has_powerstats_meter() const {
  return (_has_bits_[2] & 0x00100000u) != 0;
}
inline const ::com::android::server::powerstats::PowerStatsServiceMeterProto& IncidentProto::powerstats_meter() const {
  const ::com::android::server::powerstats::PowerStatsServiceMeterProto* p = powerstats_meter_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.powerstats_meter)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::powerstats::PowerStatsServiceMeterProto*>(
      &::com::android::server::powerstats::_PowerStatsServiceMeterProto_default_instance_);
}
inline ::com::android::server::powerstats::PowerStatsServiceMeterProto* IncidentProto::release_powerstats_meter() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.powerstats_meter)
  _has_bits_[2] &= ~0x00100000u;
  ::com::android::server::powerstats::PowerStatsServiceMeterProto* temp = powerstats_meter_;
  powerstats_meter_ = nullptr;
  return temp;
}
inline ::com::android::server::powerstats::PowerStatsServiceMeterProto* IncidentProto::mutable_powerstats_meter() {
  _has_bits_[2] |= 0x00100000u;
  if (powerstats_meter_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::powerstats::PowerStatsServiceMeterProto>(GetArenaNoVirtual());
    powerstats_meter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.powerstats_meter)
  return powerstats_meter_;
}
inline void IncidentProto::set_allocated_powerstats_meter(::com::android::server::powerstats::PowerStatsServiceMeterProto* powerstats_meter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(powerstats_meter_);
  }
  if (powerstats_meter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      powerstats_meter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, powerstats_meter, submessage_arena);
    }
    _has_bits_[2] |= 0x00100000u;
  } else {
    _has_bits_[2] &= ~0x00100000u;
  }
  powerstats_meter_ = powerstats_meter;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.powerstats_meter)
}

// optional .com.android.server.powerstats.PowerStatsServiceModelProto powerstats_model = 3055 [(.android.section) = {
inline bool IncidentProto::has_powerstats_model() const {
  return (_has_bits_[2] & 0x00200000u) != 0;
}
inline const ::com::android::server::powerstats::PowerStatsServiceModelProto& IncidentProto::powerstats_model() const {
  const ::com::android::server::powerstats::PowerStatsServiceModelProto* p = powerstats_model_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.powerstats_model)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::powerstats::PowerStatsServiceModelProto*>(
      &::com::android::server::powerstats::_PowerStatsServiceModelProto_default_instance_);
}
inline ::com::android::server::powerstats::PowerStatsServiceModelProto* IncidentProto::release_powerstats_model() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.powerstats_model)
  _has_bits_[2] &= ~0x00200000u;
  ::com::android::server::powerstats::PowerStatsServiceModelProto* temp = powerstats_model_;
  powerstats_model_ = nullptr;
  return temp;
}
inline ::com::android::server::powerstats::PowerStatsServiceModelProto* IncidentProto::mutable_powerstats_model() {
  _has_bits_[2] |= 0x00200000u;
  if (powerstats_model_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::powerstats::PowerStatsServiceModelProto>(GetArenaNoVirtual());
    powerstats_model_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.powerstats_model)
  return powerstats_model_;
}
inline void IncidentProto::set_allocated_powerstats_model(::com::android::server::powerstats::PowerStatsServiceModelProto* powerstats_model) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(powerstats_model_);
  }
  if (powerstats_model) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      powerstats_model = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, powerstats_model, submessage_arena);
    }
    _has_bits_[2] |= 0x00200000u;
  } else {
    _has_bits_[2] &= ~0x00200000u;
  }
  powerstats_model_ = powerstats_model;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.powerstats_model)
}

// optional .com.android.server.powerstats.PowerStatsServiceResidencyProto powerstats_residency = 3056 [(.android.section) = {
inline bool IncidentProto::has_powerstats_residency() const {
  return (_has_bits_[2] & 0x00400000u) != 0;
}
inline const ::com::android::server::powerstats::PowerStatsServiceResidencyProto& IncidentProto::powerstats_residency() const {
  const ::com::android::server::powerstats::PowerStatsServiceResidencyProto* p = powerstats_residency_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.powerstats_residency)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::powerstats::PowerStatsServiceResidencyProto*>(
      &::com::android::server::powerstats::_PowerStatsServiceResidencyProto_default_instance_);
}
inline ::com::android::server::powerstats::PowerStatsServiceResidencyProto* IncidentProto::release_powerstats_residency() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.powerstats_residency)
  _has_bits_[2] &= ~0x00400000u;
  ::com::android::server::powerstats::PowerStatsServiceResidencyProto* temp = powerstats_residency_;
  powerstats_residency_ = nullptr;
  return temp;
}
inline ::com::android::server::powerstats::PowerStatsServiceResidencyProto* IncidentProto::mutable_powerstats_residency() {
  _has_bits_[2] |= 0x00400000u;
  if (powerstats_residency_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::powerstats::PowerStatsServiceResidencyProto>(GetArenaNoVirtual());
    powerstats_residency_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.powerstats_residency)
  return powerstats_residency_;
}
inline void IncidentProto::set_allocated_powerstats_residency(::com::android::server::powerstats::PowerStatsServiceResidencyProto* powerstats_residency) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(powerstats_residency_);
  }
  if (powerstats_residency) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      powerstats_residency = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, powerstats_residency, submessage_arena);
    }
    _has_bits_[2] |= 0x00400000u;
  } else {
    _has_bits_[2] &= ~0x00400000u;
  }
  powerstats_residency_ = powerstats_residency;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.powerstats_residency)
}

// optional .android.util.TextDumpProto textdump_wifi = 4000 [(.android.section) = {
inline bool IncidentProto::has_textdump_wifi() const {
  return (_has_bits_[2] & 0x00800000u) != 0;
}
inline const ::android::util::TextDumpProto& IncidentProto::textdump_wifi() const {
  const ::android::util::TextDumpProto* p = textdump_wifi_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.textdump_wifi)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::TextDumpProto*>(
      &::android::util::_TextDumpProto_default_instance_);
}
inline ::android::util::TextDumpProto* IncidentProto::release_textdump_wifi() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.textdump_wifi)
  _has_bits_[2] &= ~0x00800000u;
  ::android::util::TextDumpProto* temp = textdump_wifi_;
  textdump_wifi_ = nullptr;
  return temp;
}
inline ::android::util::TextDumpProto* IncidentProto::mutable_textdump_wifi() {
  _has_bits_[2] |= 0x00800000u;
  if (textdump_wifi_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::TextDumpProto>(GetArenaNoVirtual());
    textdump_wifi_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.textdump_wifi)
  return textdump_wifi_;
}
inline void IncidentProto::set_allocated_textdump_wifi(::android::util::TextDumpProto* textdump_wifi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(textdump_wifi_);
  }
  if (textdump_wifi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      textdump_wifi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, textdump_wifi, submessage_arena);
    }
    _has_bits_[2] |= 0x00800000u;
  } else {
    _has_bits_[2] &= ~0x00800000u;
  }
  textdump_wifi_ = textdump_wifi;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.textdump_wifi)
}

// optional .android.util.TextDumpProto textdump_bluetooth = 4001 [(.android.section) = {
inline bool IncidentProto::has_textdump_bluetooth() const {
  return (_has_bits_[2] & 0x01000000u) != 0;
}
inline const ::android::util::TextDumpProto& IncidentProto::textdump_bluetooth() const {
  const ::android::util::TextDumpProto* p = textdump_bluetooth_;
  // @@protoc_insertion_point(field_get:android.os.IncidentProto.textdump_bluetooth)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::TextDumpProto*>(
      &::android::util::_TextDumpProto_default_instance_);
}
inline ::android::util::TextDumpProto* IncidentProto::release_textdump_bluetooth() {
  // @@protoc_insertion_point(field_release:android.os.IncidentProto.textdump_bluetooth)
  _has_bits_[2] &= ~0x01000000u;
  ::android::util::TextDumpProto* temp = textdump_bluetooth_;
  textdump_bluetooth_ = nullptr;
  return temp;
}
inline ::android::util::TextDumpProto* IncidentProto::mutable_textdump_bluetooth() {
  _has_bits_[2] |= 0x01000000u;
  if (textdump_bluetooth_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::TextDumpProto>(GetArenaNoVirtual());
    textdump_bluetooth_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentProto.textdump_bluetooth)
  return textdump_bluetooth_;
}
inline void IncidentProto::set_allocated_textdump_bluetooth(::android::util::TextDumpProto* textdump_bluetooth) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(textdump_bluetooth_);
  }
  if (textdump_bluetooth) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      textdump_bluetooth = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, textdump_bluetooth, submessage_arena);
    }
    _has_bits_[2] |= 0x01000000u;
  } else {
    _has_bits_[2] &= ~0x01000000u;
  }
  textdump_bluetooth_ = textdump_bluetooth;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentProto.textdump_bluetooth)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace os
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fincident_2eproto
