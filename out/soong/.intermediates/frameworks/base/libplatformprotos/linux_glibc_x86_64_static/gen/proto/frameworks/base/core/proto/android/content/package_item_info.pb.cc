// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/content/package_item_info.proto

#include "frameworks/base/core/proto/android/content/package_item_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ApplicationInfoProto_Detail_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ApplicationInfoProto_Version_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageItemInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto;
namespace android {
namespace content {
namespace pm {
class PackageItemInfoProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PackageItemInfoProto> _instance;
} _PackageItemInfoProto_default_instance_;
class ApplicationInfoProto_VersionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ApplicationInfoProto_Version> _instance;
} _ApplicationInfoProto_Version_default_instance_;
class ApplicationInfoProto_DetailDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ApplicationInfoProto_Detail> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  bool is_full_backup_;
} _ApplicationInfoProto_Detail_default_instance_;
class ApplicationInfoProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ApplicationInfoProto> _instance;
} _ApplicationInfoProto_default_instance_;
}  // namespace pm
}  // namespace content
}  // namespace android
static void InitDefaultsscc_info_ApplicationInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::content::pm::_ApplicationInfoProto_default_instance_;
    new (ptr) ::android::content::pm::ApplicationInfoProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::content::pm::ApplicationInfoProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ApplicationInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_ApplicationInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto}, {
      &scc_info_PackageItemInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto.base,
      &scc_info_ApplicationInfoProto_Version_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto.base,
      &scc_info_ApplicationInfoProto_Detail_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto.base,}};

static void InitDefaultsscc_info_ApplicationInfoProto_Detail_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::content::pm::_ApplicationInfoProto_Detail_default_instance_;
    new (ptr) ::android::content::pm::ApplicationInfoProto_Detail();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::content::pm::ApplicationInfoProto_Detail::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ApplicationInfoProto_Detail_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ApplicationInfoProto_Detail_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto}, {}};

static void InitDefaultsscc_info_ApplicationInfoProto_Version_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::content::pm::_ApplicationInfoProto_Version_default_instance_;
    new (ptr) ::android::content::pm::ApplicationInfoProto_Version();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::content::pm::ApplicationInfoProto_Version::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ApplicationInfoProto_Version_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ApplicationInfoProto_Version_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto}, {}};

static void InitDefaultsscc_info_PackageItemInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::content::pm::_PackageItemInfoProto_default_instance_;
    new (ptr) ::android::content::pm::PackageItemInfoProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::content::pm::PackageItemInfoProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageItemInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PackageItemInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::content::pm::PackageItemInfoProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::PackageItemInfoProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::content::pm::PackageItemInfoProto, name_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::PackageItemInfoProto, package_name_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::PackageItemInfoProto, label_res_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::PackageItemInfoProto, non_localized_label_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::PackageItemInfoProto, icon_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::PackageItemInfoProto, banner_),
  0,
  1,
  3,
  2,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Version, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Version, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Version, enabled_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Version, min_sdk_version_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Version, target_sdk_version_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Version, version_code_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Version, target_sandbox_version_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, class_name_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, task_affinity_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, requires_smallest_width_dp_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, compatible_width_limit_dp_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, largest_width_limit_dp_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, seinfo_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, seinfo_user_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, device_protected_data_dir_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, credential_protected_data_dir_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, shared_library_files_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, manage_space_activity_name_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, description_res_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, ui_options_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, supports_rtl_),
  offsetof(::android::content::pm::ApplicationInfoProto_DetailDefaultTypeInternal, content_),
  offsetof(::android::content::pm::ApplicationInfoProto_DetailDefaultTypeInternal, is_full_backup_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, network_security_config_res_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, category_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, enable_gwp_asan_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, enable_memtag_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, native_heap_zero_init_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto_Detail, full_backup_content_),
  0,
  1,
  7,
  8,
  9,
  2,
  3,
  4,
  5,
  ~0u,
  6,
  10,
  11,
  13,
  ~0u,
  ~0u,
  12,
  15,
  16,
  17,
  14,
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, package_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, permission_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, process_name_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, uid_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, flags_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, private_flags_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, theme_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, source_dir_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, public_source_dir_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, split_source_dirs_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, split_public_source_dirs_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, resource_dirs_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, data_dir_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, class_loader_name_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, split_class_loader_names_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, version_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, detail_),
  PROTOBUF_FIELD_OFFSET(::android::content::pm::ApplicationInfoProto, overlay_paths_),
  6,
  0,
  1,
  9,
  10,
  11,
  12,
  2,
  3,
  ~0u,
  ~0u,
  ~0u,
  4,
  5,
  ~0u,
  7,
  8,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::android::content::pm::PackageItemInfoProto)},
  { 17, 27, sizeof(::android::content::pm::ApplicationInfoProto_Version)},
  { 32, 59, sizeof(::android::content::pm::ApplicationInfoProto_Detail)},
  { 80, 103, sizeof(::android::content::pm::ApplicationInfoProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::content::pm::_PackageItemInfoProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::content::pm::_ApplicationInfoProto_Version_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::content::pm::_ApplicationInfoProto_Detail_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::content::pm::_ApplicationInfoProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nBframeworks/base/core/proto/android/con"
  "tent/package_item_info.proto\022\022android.co"
  "ntent.pm\0320frameworks/base/core/proto/and"
  "roid/privacy.proto\"\223\001\n\024PackageItemInfoPr"
  "oto\022\014\n\004name\030\001 \001(\t\022\024\n\014package_name\030\002 \001(\t\022"
  "\021\n\tlabel_res\030\003 \001(\005\022\033\n\023non_localized_labe"
  "l\030\004 \001(\t\022\014\n\004icon\030\005 \001(\005\022\016\n\006banner\030\006 \001(\005:\t\232"
  "\237\325\207\003\003\010\310\001\"\255\n\n\024ApplicationInfoProto\0229\n\007pac"
  "kage\030\001 \001(\0132(.android.content.pm.PackageI"
  "temInfoProto\022\022\n\npermission\030\002 \001(\t\022\024\n\014proc"
  "ess_name\030\003 \001(\t\022\013\n\003uid\030\004 \001(\005\022\r\n\005flags\030\005 \001"
  "(\005\022\025\n\rprivate_flags\030\006 \001(\005\022\r\n\005theme\030\007 \001(\005"
  "\022\022\n\nsource_dir\030\010 \001(\t\022\031\n\021public_source_di"
  "r\030\t \001(\t\022\031\n\021split_source_dirs\030\n \003(\t\022 \n\030sp"
  "lit_public_source_dirs\030\013 \003(\t\022\025\n\rresource"
  "_dirs\030\014 \003(\t\022\020\n\010data_dir\030\r \001(\t\022\031\n\021class_l"
  "oader_name\030\016 \001(\t\022 \n\030split_class_loader_n"
  "ames\030\017 \003(\t\022A\n\007version\030\020 \001(\01320.android.co"
  "ntent.pm.ApplicationInfoProto.Version\022\?\n"
  "\006detail\030\021 \001(\0132/.android.content.pm.Appli"
  "cationInfoProto.Detail\022\025\n\roverlay_paths\030"
  "\022 \003(\t\032\220\001\n\007Version\022\017\n\007enabled\030\001 \001(\010\022\027\n\017mi"
  "n_sdk_version\030\002 \001(\005\022\032\n\022target_sdk_versio"
  "n\030\003 \001(\005\022\024\n\014version_code\030\004 \001(\005\022\036\n\026target_"
  "sandbox_version\030\005 \001(\005:\t\232\237\325\207\003\003\010\310\001\032\342\004\n\006Det"
  "ail\022\022\n\nclass_name\030\001 \001(\t\022\025\n\rtask_affinity"
  "\030\002 \001(\t\022\"\n\032requires_smallest_width_dp\030\003 \001"
  "(\005\022!\n\031compatible_width_limit_dp\030\004 \001(\005\022\036\n"
  "\026largest_width_limit_dp\030\005 \001(\005\022\016\n\006seinfo\030"
  "\006 \001(\t\022\023\n\013seinfo_user\030\007 \001(\t\022!\n\031device_pro"
  "tected_data_dir\030\010 \001(\t\022%\n\035credential_prot"
  "ected_data_dir\030\t \001(\t\022\034\n\024shared_library_f"
  "iles\030\n \003(\t\022\"\n\032manage_space_activity_name"
  "\030\013 \001(\t\022\027\n\017description_res\030\014 \001(\005\022\022\n\nui_op"
  "tions\030\r \001(\005\022\024\n\014supports_rtl\030\016 \001(\010\022\021\n\007con"
  "tent\030\017 \001(\tH\000\022\030\n\016is_full_backup\030\020 \001(\010H\000\022#"
  "\n\033network_security_config_res\030\021 \001(\005\022\020\n\010c"
  "ategory\030\022 \001(\005\022\027\n\017enable_gwp_asan\030\023 \001(\005\022\025"
  "\n\renable_memtag\030\024 \001(\005\022\035\n\025native_heap_zer"
  "o_init\030\025 \001(\010:\010\232\237\325\207\003\002\010dB\025\n\023full_backup_co"
  "ntent:\t\232\237\325\207\003\003\010\310\001B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto_deps[1] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto_sccs[4] = {
  &scc_info_ApplicationInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto.base,
  &scc_info_ApplicationInfoProto_Detail_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto.base,
  &scc_info_ApplicationInfoProto_Version_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto.base,
  &scc_info_PackageItemInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto, "frameworks/base/core/proto/android/content/package_item_info.proto", 1620,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto_deps, 4, 1,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto, 4, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto), true);
namespace android {
namespace content {
namespace pm {

// ===================================================================

void PackageItemInfoProto::InitAsDefaultInstance() {
}
class PackageItemInfoProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PackageItemInfoProto>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_package_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_label_res(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_non_localized_label(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_icon(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_banner(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

PackageItemInfoProto::PackageItemInfoProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.content.pm.PackageItemInfoProto)
}
PackageItemInfoProto::PackageItemInfoProto(const PackageItemInfoProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_package_name()) {
    package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  non_localized_label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_non_localized_label()) {
    non_localized_label_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.non_localized_label_);
  }
  ::memcpy(&label_res_, &from.label_res_,
    static_cast<size_t>(reinterpret_cast<char*>(&banner_) -
    reinterpret_cast<char*>(&label_res_)) + sizeof(banner_));
  // @@protoc_insertion_point(copy_constructor:android.content.pm.PackageItemInfoProto)
}

void PackageItemInfoProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PackageItemInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  non_localized_label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&label_res_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&banner_) -
      reinterpret_cast<char*>(&label_res_)) + sizeof(banner_));
}

PackageItemInfoProto::~PackageItemInfoProto() {
  // @@protoc_insertion_point(destructor:android.content.pm.PackageItemInfoProto)
  SharedDtor();
}

void PackageItemInfoProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  package_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  non_localized_label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PackageItemInfoProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageItemInfoProto& PackageItemInfoProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PackageItemInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto.base);
  return *internal_default_instance();
}


void PackageItemInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.content.pm.PackageItemInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      package_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      non_localized_label_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000038u) {
    ::memset(&label_res_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&banner_) -
        reinterpret_cast<char*>(&label_res_)) + sizeof(banner_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PackageItemInfoProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_name(), ptr, ctx, "android.content.pm.PackageItemInfoProto.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string package_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_package_name(), ptr, ctx, "android.content.pm.PackageItemInfoProto.package_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 label_res = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_label_res(&has_bits);
          label_res_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string non_localized_label = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_non_localized_label(), ptr, ctx, "android.content.pm.PackageItemInfoProto.non_localized_label");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 icon = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_icon(&has_bits);
          icon_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 banner = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_banner(&has_bits);
          banner_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PackageItemInfoProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.content.pm.PackageItemInfoProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.PackageItemInfoProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string package_name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package_name().data(), static_cast<int>(this->package_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.PackageItemInfoProto.package_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 label_res = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_label_res(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string non_localized_label = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_non_localized_label()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->non_localized_label().data(), static_cast<int>(this->non_localized_label().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.PackageItemInfoProto.non_localized_label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 icon = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_icon(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 banner = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_banner(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &banner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.content.pm.PackageItemInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.content.pm.PackageItemInfoProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PackageItemInfoProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.content.pm.PackageItemInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.PackageItemInfoProto.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string package_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.PackageItemInfoProto.package_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->package_name(), output);
  }

  // optional int32 label_res = 3;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->label_res(), output);
  }

  // optional string non_localized_label = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->non_localized_label().data(), static_cast<int>(this->non_localized_label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.PackageItemInfoProto.non_localized_label");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->non_localized_label(), output);
  }

  // optional int32 icon = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->icon(), output);
  }

  // optional int32 banner = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->banner(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.content.pm.PackageItemInfoProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PackageItemInfoProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.content.pm.PackageItemInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.PackageItemInfoProto.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string package_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.PackageItemInfoProto.package_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->package_name(), target);
  }

  // optional int32 label_res = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->label_res(), target);
  }

  // optional string non_localized_label = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->non_localized_label().data(), static_cast<int>(this->non_localized_label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.PackageItemInfoProto.non_localized_label");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->non_localized_label(), target);
  }

  // optional int32 icon = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->icon(), target);
  }

  // optional int32 banner = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->banner(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.content.pm.PackageItemInfoProto)
  return target;
}

size_t PackageItemInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.content.pm.PackageItemInfoProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string package_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // optional string non_localized_label = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->non_localized_label());
    }

    // optional int32 label_res = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->label_res());
    }

    // optional int32 icon = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->icon());
    }

    // optional int32 banner = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->banner());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageItemInfoProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.content.pm.PackageItemInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PackageItemInfoProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PackageItemInfoProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.content.pm.PackageItemInfoProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.content.pm.PackageItemInfoProto)
    MergeFrom(*source);
  }
}

void PackageItemInfoProto::MergeFrom(const PackageItemInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.content.pm.PackageItemInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      non_localized_label_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.non_localized_label_);
    }
    if (cached_has_bits & 0x00000008u) {
      label_res_ = from.label_res_;
    }
    if (cached_has_bits & 0x00000010u) {
      icon_ = from.icon_;
    }
    if (cached_has_bits & 0x00000020u) {
      banner_ = from.banner_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PackageItemInfoProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.content.pm.PackageItemInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageItemInfoProto::CopyFrom(const PackageItemInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.content.pm.PackageItemInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageItemInfoProto::IsInitialized() const {
  return true;
}

void PackageItemInfoProto::InternalSwap(PackageItemInfoProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  package_name_.Swap(&other->package_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  non_localized_label_.Swap(&other->non_localized_label_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(label_res_, other->label_res_);
  swap(icon_, other->icon_);
  swap(banner_, other->banner_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PackageItemInfoProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ApplicationInfoProto_Version::InitAsDefaultInstance() {
}
class ApplicationInfoProto_Version::_Internal {
 public:
  using HasBits = decltype(std::declval<ApplicationInfoProto_Version>()._has_bits_);
  static void set_has_enabled(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_min_sdk_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_target_sdk_version(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_version_code(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_target_sandbox_version(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

ApplicationInfoProto_Version::ApplicationInfoProto_Version()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.content.pm.ApplicationInfoProto.Version)
}
ApplicationInfoProto_Version::ApplicationInfoProto_Version(const ApplicationInfoProto_Version& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&enabled_, &from.enabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_sandbox_version_) -
    reinterpret_cast<char*>(&enabled_)) + sizeof(target_sandbox_version_));
  // @@protoc_insertion_point(copy_constructor:android.content.pm.ApplicationInfoProto.Version)
}

void ApplicationInfoProto_Version::SharedCtor() {
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_sandbox_version_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(target_sandbox_version_));
}

ApplicationInfoProto_Version::~ApplicationInfoProto_Version() {
  // @@protoc_insertion_point(destructor:android.content.pm.ApplicationInfoProto.Version)
  SharedDtor();
}

void ApplicationInfoProto_Version::SharedDtor() {
}

void ApplicationInfoProto_Version::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApplicationInfoProto_Version& ApplicationInfoProto_Version::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ApplicationInfoProto_Version_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto.base);
  return *internal_default_instance();
}


void ApplicationInfoProto_Version::Clear() {
// @@protoc_insertion_point(message_clear_start:android.content.pm.ApplicationInfoProto.Version)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&enabled_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_sandbox_version_) -
        reinterpret_cast<char*>(&enabled_)) + sizeof(target_sandbox_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApplicationInfoProto_Version::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool enabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_enabled(&has_bits);
          enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 min_sdk_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_min_sdk_version(&has_bits);
          min_sdk_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 target_sdk_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_target_sdk_version(&has_bits);
          target_sdk_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 version_code = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_version_code(&has_bits);
          version_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 target_sandbox_version = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_target_sandbox_version(&has_bits);
          target_sandbox_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApplicationInfoProto_Version::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.content.pm.ApplicationInfoProto.Version)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool enabled = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_enabled(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 min_sdk_version = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_min_sdk_version(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_sdk_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target_sdk_version = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_target_sdk_version(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_sdk_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 version_code = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_version_code(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target_sandbox_version = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_target_sandbox_version(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_sandbox_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.content.pm.ApplicationInfoProto.Version)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.content.pm.ApplicationInfoProto.Version)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApplicationInfoProto_Version::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.content.pm.ApplicationInfoProto.Version)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool enabled = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  // optional int32 min_sdk_version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->min_sdk_version(), output);
  }

  // optional int32 target_sdk_version = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->target_sdk_version(), output);
  }

  // optional int32 version_code = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->version_code(), output);
  }

  // optional int32 target_sandbox_version = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->target_sandbox_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.content.pm.ApplicationInfoProto.Version)
}

::PROTOBUF_NAMESPACE_ID::uint8* ApplicationInfoProto_Version::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.content.pm.ApplicationInfoProto.Version)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool enabled = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  // optional int32 min_sdk_version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->min_sdk_version(), target);
  }

  // optional int32 target_sdk_version = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->target_sdk_version(), target);
  }

  // optional int32 version_code = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->version_code(), target);
  }

  // optional int32 target_sandbox_version = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->target_sandbox_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.content.pm.ApplicationInfoProto.Version)
  return target;
}

size_t ApplicationInfoProto_Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.content.pm.ApplicationInfoProto.Version)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional bool enabled = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional int32 min_sdk_version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->min_sdk_version());
    }

    // optional int32 target_sdk_version = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->target_sdk_version());
    }

    // optional int32 version_code = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->version_code());
    }

    // optional int32 target_sandbox_version = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->target_sandbox_version());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplicationInfoProto_Version::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.content.pm.ApplicationInfoProto.Version)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplicationInfoProto_Version* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApplicationInfoProto_Version>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.content.pm.ApplicationInfoProto.Version)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.content.pm.ApplicationInfoProto.Version)
    MergeFrom(*source);
  }
}

void ApplicationInfoProto_Version::MergeFrom(const ApplicationInfoProto_Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.content.pm.ApplicationInfoProto.Version)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      enabled_ = from.enabled_;
    }
    if (cached_has_bits & 0x00000002u) {
      min_sdk_version_ = from.min_sdk_version_;
    }
    if (cached_has_bits & 0x00000004u) {
      target_sdk_version_ = from.target_sdk_version_;
    }
    if (cached_has_bits & 0x00000008u) {
      version_code_ = from.version_code_;
    }
    if (cached_has_bits & 0x00000010u) {
      target_sandbox_version_ = from.target_sandbox_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ApplicationInfoProto_Version::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.content.pm.ApplicationInfoProto.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplicationInfoProto_Version::CopyFrom(const ApplicationInfoProto_Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.content.pm.ApplicationInfoProto.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplicationInfoProto_Version::IsInitialized() const {
  return true;
}

void ApplicationInfoProto_Version::InternalSwap(ApplicationInfoProto_Version* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(enabled_, other->enabled_);
  swap(min_sdk_version_, other->min_sdk_version_);
  swap(target_sdk_version_, other->target_sdk_version_);
  swap(version_code_, other->version_code_);
  swap(target_sandbox_version_, other->target_sandbox_version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ApplicationInfoProto_Version::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ApplicationInfoProto_Detail::InitAsDefaultInstance() {
  ::android::content::pm::_ApplicationInfoProto_Detail_default_instance_.content_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::android::content::pm::_ApplicationInfoProto_Detail_default_instance_.is_full_backup_ = false;
}
class ApplicationInfoProto_Detail::_Internal {
 public:
  using HasBits = decltype(std::declval<ApplicationInfoProto_Detail>()._has_bits_);
  static void set_has_class_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_task_affinity(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_requires_smallest_width_dp(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_compatible_width_limit_dp(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_largest_width_limit_dp(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_seinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_seinfo_user(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_device_protected_data_dir(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_credential_protected_data_dir(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_manage_space_activity_name(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_description_res(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_ui_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_supports_rtl(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_network_security_config_res(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_category(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_enable_gwp_asan(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_enable_memtag(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_native_heap_zero_init(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
};

ApplicationInfoProto_Detail::ApplicationInfoProto_Detail()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.content.pm.ApplicationInfoProto.Detail)
}
ApplicationInfoProto_Detail::ApplicationInfoProto_Detail(const ApplicationInfoProto_Detail& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      shared_library_files_(from.shared_library_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  class_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_class_name()) {
    class_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  task_affinity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_task_affinity()) {
    task_affinity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.task_affinity_);
  }
  seinfo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_seinfo()) {
    seinfo_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.seinfo_);
  }
  seinfo_user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_seinfo_user()) {
    seinfo_user_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.seinfo_user_);
  }
  device_protected_data_dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_protected_data_dir()) {
    device_protected_data_dir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_protected_data_dir_);
  }
  credential_protected_data_dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_credential_protected_data_dir()) {
    credential_protected_data_dir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.credential_protected_data_dir_);
  }
  manage_space_activity_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_manage_space_activity_name()) {
    manage_space_activity_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.manage_space_activity_name_);
  }
  ::memcpy(&requires_smallest_width_dp_, &from.requires_smallest_width_dp_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_memtag_) -
    reinterpret_cast<char*>(&requires_smallest_width_dp_)) + sizeof(enable_memtag_));
  clear_has_full_backup_content();
  switch (from.full_backup_content_case()) {
    case kContent: {
      set_content(from.content());
      break;
    }
    case kIsFullBackup: {
      set_is_full_backup(from.is_full_backup());
      break;
    }
    case FULL_BACKUP_CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:android.content.pm.ApplicationInfoProto.Detail)
}

void ApplicationInfoProto_Detail::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ApplicationInfoProto_Detail_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto.base);
  class_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  task_affinity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  seinfo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  seinfo_user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_protected_data_dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  credential_protected_data_dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  manage_space_activity_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&requires_smallest_width_dp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_memtag_) -
      reinterpret_cast<char*>(&requires_smallest_width_dp_)) + sizeof(enable_memtag_));
  clear_has_full_backup_content();
}

ApplicationInfoProto_Detail::~ApplicationInfoProto_Detail() {
  // @@protoc_insertion_point(destructor:android.content.pm.ApplicationInfoProto.Detail)
  SharedDtor();
}

void ApplicationInfoProto_Detail::SharedDtor() {
  class_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  task_affinity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  seinfo_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  seinfo_user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_protected_data_dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  credential_protected_data_dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  manage_space_activity_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_full_backup_content()) {
    clear_full_backup_content();
  }
}

void ApplicationInfoProto_Detail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApplicationInfoProto_Detail& ApplicationInfoProto_Detail::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ApplicationInfoProto_Detail_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto.base);
  return *internal_default_instance();
}


void ApplicationInfoProto_Detail::clear_full_backup_content() {
// @@protoc_insertion_point(one_of_clear_start:android.content.pm.ApplicationInfoProto.Detail)
  switch (full_backup_content_case()) {
    case kContent: {
      full_backup_content_.content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kIsFullBackup: {
      // No need to clear
      break;
    }
    case FULL_BACKUP_CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FULL_BACKUP_CONTENT_NOT_SET;
}


void ApplicationInfoProto_Detail::Clear() {
// @@protoc_insertion_point(message_clear_start:android.content.pm.ApplicationInfoProto.Detail)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shared_library_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      class_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      task_affinity_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      seinfo_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      seinfo_user_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      device_protected_data_dir_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      credential_protected_data_dir_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      manage_space_activity_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  requires_smallest_width_dp_ = 0;
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&compatible_width_limit_dp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&category_) -
        reinterpret_cast<char*>(&compatible_width_limit_dp_)) + sizeof(category_));
  }
  if (cached_has_bits & 0x00030000u) {
    ::memset(&enable_gwp_asan_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&enable_memtag_) -
        reinterpret_cast<char*>(&enable_gwp_asan_)) + sizeof(enable_memtag_));
  }
  clear_full_backup_content();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApplicationInfoProto_Detail::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string class_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_class_name(), ptr, ctx, "android.content.pm.ApplicationInfoProto.Detail.class_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string task_affinity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_task_affinity(), ptr, ctx, "android.content.pm.ApplicationInfoProto.Detail.task_affinity");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 requires_smallest_width_dp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_requires_smallest_width_dp(&has_bits);
          requires_smallest_width_dp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 compatible_width_limit_dp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_compatible_width_limit_dp(&has_bits);
          compatible_width_limit_dp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 largest_width_limit_dp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_largest_width_limit_dp(&has_bits);
          largest_width_limit_dp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string seinfo = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_seinfo(), ptr, ctx, "android.content.pm.ApplicationInfoProto.Detail.seinfo");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string seinfo_user = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_seinfo_user(), ptr, ctx, "android.content.pm.ApplicationInfoProto.Detail.seinfo_user");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string device_protected_data_dir = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_device_protected_data_dir(), ptr, ctx, "android.content.pm.ApplicationInfoProto.Detail.device_protected_data_dir");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string credential_protected_data_dir = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_credential_protected_data_dir(), ptr, ctx, "android.content.pm.ApplicationInfoProto.Detail.credential_protected_data_dir");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string shared_library_files = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_shared_library_files(), ptr, ctx, "android.content.pm.ApplicationInfoProto.Detail.shared_library_files");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 82);
        } else goto handle_unusual;
        continue;
      // optional string manage_space_activity_name = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_manage_space_activity_name(), ptr, ctx, "android.content.pm.ApplicationInfoProto.Detail.manage_space_activity_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 description_res = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_description_res(&has_bits);
          description_res_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 ui_options = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_ui_options(&has_bits);
          ui_options_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool supports_rtl = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_supports_rtl(&has_bits);
          supports_rtl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string content = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_content(), ptr, ctx, "android.content.pm.ApplicationInfoProto.Detail.content");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_full_backup = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          set_is_full_backup(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 network_security_config_res = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_network_security_config_res(&has_bits);
          network_security_config_res_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 category = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_category(&has_bits);
          category_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 enable_gwp_asan = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          _Internal::set_has_enable_gwp_asan(&has_bits);
          enable_gwp_asan_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 enable_memtag = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_enable_memtag(&has_bits);
          enable_memtag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool native_heap_zero_init = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          _Internal::set_has_native_heap_zero_init(&has_bits);
          native_heap_zero_init_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApplicationInfoProto_Detail::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.content.pm.ApplicationInfoProto.Detail)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string class_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->class_name().data(), static_cast<int>(this->class_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.Detail.class_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string task_affinity = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_task_affinity()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->task_affinity().data(), static_cast<int>(this->task_affinity().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.Detail.task_affinity");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 requires_smallest_width_dp = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_requires_smallest_width_dp(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &requires_smallest_width_dp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 compatible_width_limit_dp = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_compatible_width_limit_dp(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &compatible_width_limit_dp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 largest_width_limit_dp = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_largest_width_limit_dp(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &largest_width_limit_dp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string seinfo = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_seinfo()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->seinfo().data(), static_cast<int>(this->seinfo().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.Detail.seinfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string seinfo_user = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_seinfo_user()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->seinfo_user().data(), static_cast<int>(this->seinfo_user().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.Detail.seinfo_user");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string device_protected_data_dir = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_device_protected_data_dir()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_protected_data_dir().data(), static_cast<int>(this->device_protected_data_dir().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.Detail.device_protected_data_dir");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string credential_protected_data_dir = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_credential_protected_data_dir()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->credential_protected_data_dir().data(), static_cast<int>(this->credential_protected_data_dir().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.Detail.credential_protected_data_dir");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string shared_library_files = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_shared_library_files()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->shared_library_files(this->shared_library_files_size() - 1).data(),
            static_cast<int>(this->shared_library_files(this->shared_library_files_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.Detail.shared_library_files");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string manage_space_activity_name = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_manage_space_activity_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->manage_space_activity_name().data(), static_cast<int>(this->manage_space_activity_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.Detail.manage_space_activity_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 description_res = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {
          _Internal::set_has_description_res(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &description_res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ui_options = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (104 & 0xFF)) {
          _Internal::set_has_ui_options(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &ui_options_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool supports_rtl = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          _Internal::set_has_supports_rtl(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &supports_rtl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string content = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (122 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), static_cast<int>(this->content().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.Detail.content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_full_backup = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (128 & 0xFF)) {
          clear_full_backup_content();
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &full_backup_content_.is_full_backup_)));
          set_has_is_full_backup();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 network_security_config_res = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (136 & 0xFF)) {
          _Internal::set_has_network_security_config_res(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &network_security_config_res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 category = 18;
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (144 & 0xFF)) {
          _Internal::set_has_category(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &category_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 enable_gwp_asan = 19;
      case 19: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (152 & 0xFF)) {
          _Internal::set_has_enable_gwp_asan(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &enable_gwp_asan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 enable_memtag = 20;
      case 20: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (160 & 0xFF)) {
          _Internal::set_has_enable_memtag(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &enable_memtag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool native_heap_zero_init = 21;
      case 21: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (168 & 0xFF)) {
          _Internal::set_has_native_heap_zero_init(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &native_heap_zero_init_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.content.pm.ApplicationInfoProto.Detail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.content.pm.ApplicationInfoProto.Detail)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApplicationInfoProto_Detail::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.content.pm.ApplicationInfoProto.Detail)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string class_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.class_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->class_name(), output);
  }

  // optional string task_affinity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_affinity().data(), static_cast<int>(this->task_affinity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.task_affinity");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_affinity(), output);
  }

  // optional int32 requires_smallest_width_dp = 3;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->requires_smallest_width_dp(), output);
  }

  // optional int32 compatible_width_limit_dp = 4;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->compatible_width_limit_dp(), output);
  }

  // optional int32 largest_width_limit_dp = 5;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->largest_width_limit_dp(), output);
  }

  // optional string seinfo = 6;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->seinfo().data(), static_cast<int>(this->seinfo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.seinfo");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->seinfo(), output);
  }

  // optional string seinfo_user = 7;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->seinfo_user().data(), static_cast<int>(this->seinfo_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.seinfo_user");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->seinfo_user(), output);
  }

  // optional string device_protected_data_dir = 8;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_protected_data_dir().data(), static_cast<int>(this->device_protected_data_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.device_protected_data_dir");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->device_protected_data_dir(), output);
  }

  // optional string credential_protected_data_dir = 9;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->credential_protected_data_dir().data(), static_cast<int>(this->credential_protected_data_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.credential_protected_data_dir");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->credential_protected_data_dir(), output);
  }

  // repeated string shared_library_files = 10;
  for (int i = 0, n = this->shared_library_files_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shared_library_files(i).data(), static_cast<int>(this->shared_library_files(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.shared_library_files");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      10, this->shared_library_files(i), output);
  }

  // optional string manage_space_activity_name = 11;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->manage_space_activity_name().data(), static_cast<int>(this->manage_space_activity_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.manage_space_activity_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->manage_space_activity_name(), output);
  }

  // optional int32 description_res = 12;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(12, this->description_res(), output);
  }

  // optional int32 ui_options = 13;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(13, this->ui_options(), output);
  }

  // optional bool supports_rtl = 14;
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(14, this->supports_rtl(), output);
  }

  switch (full_backup_content_case()) {
    case kContent:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
        this->content().data(), static_cast<int>(this->content().length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
        "android.content.pm.ApplicationInfoProto.Detail.content");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
        15, this->content(), output);
      break;
    case kIsFullBackup:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(16, this->is_full_backup(), output);
      break;
    default: ;
  }
  // optional int32 network_security_config_res = 17;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(17, this->network_security_config_res(), output);
  }

  // optional int32 category = 18;
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(18, this->category(), output);
  }

  // optional int32 enable_gwp_asan = 19;
  if (cached_has_bits & 0x00010000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(19, this->enable_gwp_asan(), output);
  }

  // optional int32 enable_memtag = 20;
  if (cached_has_bits & 0x00020000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(20, this->enable_memtag(), output);
  }

  // optional bool native_heap_zero_init = 21;
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(21, this->native_heap_zero_init(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.content.pm.ApplicationInfoProto.Detail)
}

::PROTOBUF_NAMESPACE_ID::uint8* ApplicationInfoProto_Detail::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.content.pm.ApplicationInfoProto.Detail)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string class_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.class_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->class_name(), target);
  }

  // optional string task_affinity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->task_affinity().data(), static_cast<int>(this->task_affinity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.task_affinity");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->task_affinity(), target);
  }

  // optional int32 requires_smallest_width_dp = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->requires_smallest_width_dp(), target);
  }

  // optional int32 compatible_width_limit_dp = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->compatible_width_limit_dp(), target);
  }

  // optional int32 largest_width_limit_dp = 5;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->largest_width_limit_dp(), target);
  }

  // optional string seinfo = 6;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->seinfo().data(), static_cast<int>(this->seinfo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.seinfo");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        6, this->seinfo(), target);
  }

  // optional string seinfo_user = 7;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->seinfo_user().data(), static_cast<int>(this->seinfo_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.seinfo_user");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        7, this->seinfo_user(), target);
  }

  // optional string device_protected_data_dir = 8;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_protected_data_dir().data(), static_cast<int>(this->device_protected_data_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.device_protected_data_dir");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        8, this->device_protected_data_dir(), target);
  }

  // optional string credential_protected_data_dir = 9;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->credential_protected_data_dir().data(), static_cast<int>(this->credential_protected_data_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.credential_protected_data_dir");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        9, this->credential_protected_data_dir(), target);
  }

  // repeated string shared_library_files = 10;
  for (int i = 0, n = this->shared_library_files_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shared_library_files(i).data(), static_cast<int>(this->shared_library_files(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.shared_library_files");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(10, this->shared_library_files(i), target);
  }

  // optional string manage_space_activity_name = 11;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->manage_space_activity_name().data(), static_cast<int>(this->manage_space_activity_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.Detail.manage_space_activity_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        11, this->manage_space_activity_name(), target);
  }

  // optional int32 description_res = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->description_res(), target);
  }

  // optional int32 ui_options = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->ui_options(), target);
  }

  // optional bool supports_rtl = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->supports_rtl(), target);
  }

  switch (full_backup_content_case()) {
    case kContent:
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
        this->content().data(), static_cast<int>(this->content().length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
        "android.content.pm.ApplicationInfoProto.Detail.content");
      target =
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
          15, this->content(), target);
      break;
    case kIsFullBackup:
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->is_full_backup(), target);
      break;
    default: ;
  }
  // optional int32 network_security_config_res = 17;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(17, this->network_security_config_res(), target);
  }

  // optional int32 category = 18;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(18, this->category(), target);
  }

  // optional int32 enable_gwp_asan = 19;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->enable_gwp_asan(), target);
  }

  // optional int32 enable_memtag = 20;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(20, this->enable_memtag(), target);
  }

  // optional bool native_heap_zero_init = 21;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(21, this->native_heap_zero_init(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.content.pm.ApplicationInfoProto.Detail)
  return target;
}

size_t ApplicationInfoProto_Detail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.content.pm.ApplicationInfoProto.Detail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string shared_library_files = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->shared_library_files_size());
  for (int i = 0, n = this->shared_library_files_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->shared_library_files(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string class_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->class_name());
    }

    // optional string task_affinity = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->task_affinity());
    }

    // optional string seinfo = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->seinfo());
    }

    // optional string seinfo_user = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->seinfo_user());
    }

    // optional string device_protected_data_dir = 8;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->device_protected_data_dir());
    }

    // optional string credential_protected_data_dir = 9;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->credential_protected_data_dir());
    }

    // optional string manage_space_activity_name = 11;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->manage_space_activity_name());
    }

    // optional int32 requires_smallest_width_dp = 3;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->requires_smallest_width_dp());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int32 compatible_width_limit_dp = 4;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->compatible_width_limit_dp());
    }

    // optional int32 largest_width_limit_dp = 5;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->largest_width_limit_dp());
    }

    // optional int32 description_res = 12;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->description_res());
    }

    // optional int32 ui_options = 13;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->ui_options());
    }

    // optional int32 network_security_config_res = 17;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->network_security_config_res());
    }

    // optional bool supports_rtl = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

    // optional bool native_heap_zero_init = 21;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional int32 category = 18;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->category());
    }

  }
  if (cached_has_bits & 0x00030000u) {
    // optional int32 enable_gwp_asan = 19;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->enable_gwp_asan());
    }

    // optional int32 enable_memtag = 20;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->enable_memtag());
    }

  }
  switch (full_backup_content_case()) {
    // optional string content = 15;
    case kContent: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->content());
      break;
    }
    // optional bool is_full_backup = 16;
    case kIsFullBackup: {
      total_size += 2 + 1;
      break;
    }
    case FULL_BACKUP_CONTENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplicationInfoProto_Detail::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.content.pm.ApplicationInfoProto.Detail)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplicationInfoProto_Detail* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApplicationInfoProto_Detail>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.content.pm.ApplicationInfoProto.Detail)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.content.pm.ApplicationInfoProto.Detail)
    MergeFrom(*source);
  }
}

void ApplicationInfoProto_Detail::MergeFrom(const ApplicationInfoProto_Detail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.content.pm.ApplicationInfoProto.Detail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shared_library_files_.MergeFrom(from.shared_library_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      class_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.class_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      task_affinity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.task_affinity_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      seinfo_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.seinfo_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      seinfo_user_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.seinfo_user_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      device_protected_data_dir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_protected_data_dir_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      credential_protected_data_dir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.credential_protected_data_dir_);
    }
    if (cached_has_bits & 0x00000040u) {
      _has_bits_[0] |= 0x00000040u;
      manage_space_activity_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.manage_space_activity_name_);
    }
    if (cached_has_bits & 0x00000080u) {
      requires_smallest_width_dp_ = from.requires_smallest_width_dp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      compatible_width_limit_dp_ = from.compatible_width_limit_dp_;
    }
    if (cached_has_bits & 0x00000200u) {
      largest_width_limit_dp_ = from.largest_width_limit_dp_;
    }
    if (cached_has_bits & 0x00000400u) {
      description_res_ = from.description_res_;
    }
    if (cached_has_bits & 0x00000800u) {
      ui_options_ = from.ui_options_;
    }
    if (cached_has_bits & 0x00001000u) {
      network_security_config_res_ = from.network_security_config_res_;
    }
    if (cached_has_bits & 0x00002000u) {
      supports_rtl_ = from.supports_rtl_;
    }
    if (cached_has_bits & 0x00004000u) {
      native_heap_zero_init_ = from.native_heap_zero_init_;
    }
    if (cached_has_bits & 0x00008000u) {
      category_ = from.category_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00030000u) {
    if (cached_has_bits & 0x00010000u) {
      enable_gwp_asan_ = from.enable_gwp_asan_;
    }
    if (cached_has_bits & 0x00020000u) {
      enable_memtag_ = from.enable_memtag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.full_backup_content_case()) {
    case kContent: {
      set_content(from.content());
      break;
    }
    case kIsFullBackup: {
      set_is_full_backup(from.is_full_backup());
      break;
    }
    case FULL_BACKUP_CONTENT_NOT_SET: {
      break;
    }
  }
}

void ApplicationInfoProto_Detail::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.content.pm.ApplicationInfoProto.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplicationInfoProto_Detail::CopyFrom(const ApplicationInfoProto_Detail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.content.pm.ApplicationInfoProto.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplicationInfoProto_Detail::IsInitialized() const {
  return true;
}

void ApplicationInfoProto_Detail::InternalSwap(ApplicationInfoProto_Detail* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  shared_library_files_.InternalSwap(CastToBase(&other->shared_library_files_));
  class_name_.Swap(&other->class_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  task_affinity_.Swap(&other->task_affinity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  seinfo_.Swap(&other->seinfo_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  seinfo_user_.Swap(&other->seinfo_user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_protected_data_dir_.Swap(&other->device_protected_data_dir_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  credential_protected_data_dir_.Swap(&other->credential_protected_data_dir_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  manage_space_activity_name_.Swap(&other->manage_space_activity_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(requires_smallest_width_dp_, other->requires_smallest_width_dp_);
  swap(compatible_width_limit_dp_, other->compatible_width_limit_dp_);
  swap(largest_width_limit_dp_, other->largest_width_limit_dp_);
  swap(description_res_, other->description_res_);
  swap(ui_options_, other->ui_options_);
  swap(network_security_config_res_, other->network_security_config_res_);
  swap(supports_rtl_, other->supports_rtl_);
  swap(native_heap_zero_init_, other->native_heap_zero_init_);
  swap(category_, other->category_);
  swap(enable_gwp_asan_, other->enable_gwp_asan_);
  swap(enable_memtag_, other->enable_memtag_);
  swap(full_backup_content_, other->full_backup_content_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ApplicationInfoProto_Detail::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ApplicationInfoProto::InitAsDefaultInstance() {
  ::android::content::pm::_ApplicationInfoProto_default_instance_._instance.get_mutable()->package_ = const_cast< ::android::content::pm::PackageItemInfoProto*>(
      ::android::content::pm::PackageItemInfoProto::internal_default_instance());
  ::android::content::pm::_ApplicationInfoProto_default_instance_._instance.get_mutable()->version_ = const_cast< ::android::content::pm::ApplicationInfoProto_Version*>(
      ::android::content::pm::ApplicationInfoProto_Version::internal_default_instance());
  ::android::content::pm::_ApplicationInfoProto_default_instance_._instance.get_mutable()->detail_ = const_cast< ::android::content::pm::ApplicationInfoProto_Detail*>(
      ::android::content::pm::ApplicationInfoProto_Detail::internal_default_instance());
}
class ApplicationInfoProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ApplicationInfoProto>()._has_bits_);
  static const ::android::content::pm::PackageItemInfoProto& package(const ApplicationInfoProto* msg);
  static void set_has_package(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_permission(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_process_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_private_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_theme(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_source_dir(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_public_source_dir(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_data_dir(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_class_loader_name(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::android::content::pm::ApplicationInfoProto_Version& version(const ApplicationInfoProto* msg);
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::android::content::pm::ApplicationInfoProto_Detail& detail(const ApplicationInfoProto* msg);
  static void set_has_detail(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

const ::android::content::pm::PackageItemInfoProto&
ApplicationInfoProto::_Internal::package(const ApplicationInfoProto* msg) {
  return *msg->package_;
}
const ::android::content::pm::ApplicationInfoProto_Version&
ApplicationInfoProto::_Internal::version(const ApplicationInfoProto* msg) {
  return *msg->version_;
}
const ::android::content::pm::ApplicationInfoProto_Detail&
ApplicationInfoProto::_Internal::detail(const ApplicationInfoProto* msg) {
  return *msg->detail_;
}
ApplicationInfoProto::ApplicationInfoProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.content.pm.ApplicationInfoProto)
}
ApplicationInfoProto::ApplicationInfoProto(const ApplicationInfoProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      split_source_dirs_(from.split_source_dirs_),
      split_public_source_dirs_(from.split_public_source_dirs_),
      resource_dirs_(from.resource_dirs_),
      split_class_loader_names_(from.split_class_loader_names_),
      overlay_paths_(from.overlay_paths_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  permission_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_permission()) {
    permission_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.permission_);
  }
  process_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_process_name()) {
    process_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.process_name_);
  }
  source_dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_dir()) {
    source_dir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.source_dir_);
  }
  public_source_dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_source_dir()) {
    public_source_dir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.public_source_dir_);
  }
  data_dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_data_dir()) {
    data_dir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_dir_);
  }
  class_loader_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_class_loader_name()) {
    class_loader_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.class_loader_name_);
  }
  if (from.has_package()) {
    package_ = new ::android::content::pm::PackageItemInfoProto(*from.package_);
  } else {
    package_ = nullptr;
  }
  if (from.has_version()) {
    version_ = new ::android::content::pm::ApplicationInfoProto_Version(*from.version_);
  } else {
    version_ = nullptr;
  }
  if (from.has_detail()) {
    detail_ = new ::android::content::pm::ApplicationInfoProto_Detail(*from.detail_);
  } else {
    detail_ = nullptr;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&theme_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(theme_));
  // @@protoc_insertion_point(copy_constructor:android.content.pm.ApplicationInfoProto)
}

void ApplicationInfoProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ApplicationInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto.base);
  permission_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  process_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  public_source_dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  class_loader_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&package_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&theme_) -
      reinterpret_cast<char*>(&package_)) + sizeof(theme_));
}

ApplicationInfoProto::~ApplicationInfoProto() {
  // @@protoc_insertion_point(destructor:android.content.pm.ApplicationInfoProto)
  SharedDtor();
}

void ApplicationInfoProto::SharedDtor() {
  permission_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  process_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  public_source_dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  class_loader_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete package_;
  if (this != internal_default_instance()) delete version_;
  if (this != internal_default_instance()) delete detail_;
}

void ApplicationInfoProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApplicationInfoProto& ApplicationInfoProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ApplicationInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fpackage_5fitem_5finfo_2eproto.base);
  return *internal_default_instance();
}


void ApplicationInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.content.pm.ApplicationInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  split_source_dirs_.Clear();
  split_public_source_dirs_.Clear();
  resource_dirs_.Clear();
  split_class_loader_names_.Clear();
  overlay_paths_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      permission_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      process_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      source_dir_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      public_source_dir_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      data_dir_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      class_loader_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(package_ != nullptr);
      package_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(version_ != nullptr);
      version_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(detail_ != nullptr);
    detail_->Clear();
  }
  if (cached_has_bits & 0x00001e00u) {
    ::memset(&uid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&theme_) -
        reinterpret_cast<char*>(&uid_)) + sizeof(theme_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApplicationInfoProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.content.pm.PackageItemInfoProto package = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_package(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string permission = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_permission(), ptr, ctx, "android.content.pm.ApplicationInfoProto.permission");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string process_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_process_name(), ptr, ctx, "android.content.pm.ApplicationInfoProto.process_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 uid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_uid(&has_bits);
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 flags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_flags(&has_bits);
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 private_flags = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_private_flags(&has_bits);
          private_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 theme = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_theme(&has_bits);
          theme_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string source_dir = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_source_dir(), ptr, ctx, "android.content.pm.ApplicationInfoProto.source_dir");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string public_source_dir = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_public_source_dir(), ptr, ctx, "android.content.pm.ApplicationInfoProto.public_source_dir");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string split_source_dirs = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_split_source_dirs(), ptr, ctx, "android.content.pm.ApplicationInfoProto.split_source_dirs");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 82);
        } else goto handle_unusual;
        continue;
      // repeated string split_public_source_dirs = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_split_public_source_dirs(), ptr, ctx, "android.content.pm.ApplicationInfoProto.split_public_source_dirs");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 90);
        } else goto handle_unusual;
        continue;
      // repeated string resource_dirs = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_resource_dirs(), ptr, ctx, "android.content.pm.ApplicationInfoProto.resource_dirs");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 98);
        } else goto handle_unusual;
        continue;
      // optional string data_dir = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_data_dir(), ptr, ctx, "android.content.pm.ApplicationInfoProto.data_dir");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string class_loader_name = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_class_loader_name(), ptr, ctx, "android.content.pm.ApplicationInfoProto.class_loader_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string split_class_loader_names = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_split_class_loader_names(), ptr, ctx, "android.content.pm.ApplicationInfoProto.split_class_loader_names");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 122);
        } else goto handle_unusual;
        continue;
      // optional .android.content.pm.ApplicationInfoProto.Version version = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(mutable_version(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.content.pm.ApplicationInfoProto.Detail detail = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(mutable_detail(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string overlay_paths = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_overlay_paths(), ptr, ctx, "android.content.pm.ApplicationInfoProto.overlay_paths");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint16>(ptr) == 402);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApplicationInfoProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.content.pm.ApplicationInfoProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.content.pm.PackageItemInfoProto package = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_package()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string permission = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_permission()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->permission().data(), static_cast<int>(this->permission().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.permission");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string process_name = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_process_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->process_name().data(), static_cast<int>(this->process_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.process_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 uid = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_uid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 private_flags = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_private_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &private_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 theme = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_theme(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &theme_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string source_dir = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_source_dir()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_dir().data(), static_cast<int>(this->source_dir().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.source_dir");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string public_source_dir = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_public_source_dir()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->public_source_dir().data(), static_cast<int>(this->public_source_dir().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.public_source_dir");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string split_source_dirs = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_split_source_dirs()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->split_source_dirs(this->split_source_dirs_size() - 1).data(),
            static_cast<int>(this->split_source_dirs(this->split_source_dirs_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.split_source_dirs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string split_public_source_dirs = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_split_public_source_dirs()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->split_public_source_dirs(this->split_public_source_dirs_size() - 1).data(),
            static_cast<int>(this->split_public_source_dirs(this->split_public_source_dirs_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.split_public_source_dirs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string resource_dirs = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_resource_dirs()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resource_dirs(this->resource_dirs_size() - 1).data(),
            static_cast<int>(this->resource_dirs(this->resource_dirs_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.resource_dirs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string data_dir = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (106 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_data_dir()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data_dir().data(), static_cast<int>(this->data_dir().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.data_dir");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string class_loader_name = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (114 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_class_loader_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->class_loader_name().data(), static_cast<int>(this->class_loader_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.class_loader_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string split_class_loader_names = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (122 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_split_class_loader_names()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->split_class_loader_names(this->split_class_loader_names_size() - 1).data(),
            static_cast<int>(this->split_class_loader_names(this->split_class_loader_names_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.split_class_loader_names");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.content.pm.ApplicationInfoProto.Version version = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (130 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.content.pm.ApplicationInfoProto.Detail detail = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (138 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string overlay_paths = 18;
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (146 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_overlay_paths()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->overlay_paths(this->overlay_paths_size() - 1).data(),
            static_cast<int>(this->overlay_paths(this->overlay_paths_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.content.pm.ApplicationInfoProto.overlay_paths");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.content.pm.ApplicationInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.content.pm.ApplicationInfoProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApplicationInfoProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.content.pm.ApplicationInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.content.pm.PackageItemInfoProto package = 1;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::package(this), output);
  }

  // optional string permission = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->permission().data(), static_cast<int>(this->permission().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.permission");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->permission(), output);
  }

  // optional string process_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->process_name().data(), static_cast<int>(this->process_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.process_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->process_name(), output);
  }

  // optional int32 uid = 4;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->uid(), output);
  }

  // optional int32 flags = 5;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->flags(), output);
  }

  // optional int32 private_flags = 6;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->private_flags(), output);
  }

  // optional int32 theme = 7;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->theme(), output);
  }

  // optional string source_dir = 8;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_dir().data(), static_cast<int>(this->source_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.source_dir");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->source_dir(), output);
  }

  // optional string public_source_dir = 9;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->public_source_dir().data(), static_cast<int>(this->public_source_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.public_source_dir");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->public_source_dir(), output);
  }

  // repeated string split_source_dirs = 10;
  for (int i = 0, n = this->split_source_dirs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->split_source_dirs(i).data(), static_cast<int>(this->split_source_dirs(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.split_source_dirs");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      10, this->split_source_dirs(i), output);
  }

  // repeated string split_public_source_dirs = 11;
  for (int i = 0, n = this->split_public_source_dirs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->split_public_source_dirs(i).data(), static_cast<int>(this->split_public_source_dirs(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.split_public_source_dirs");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      11, this->split_public_source_dirs(i), output);
  }

  // repeated string resource_dirs = 12;
  for (int i = 0, n = this->resource_dirs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resource_dirs(i).data(), static_cast<int>(this->resource_dirs(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.resource_dirs");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      12, this->resource_dirs(i), output);
  }

  // optional string data_dir = 13;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_dir().data(), static_cast<int>(this->data_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.data_dir");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->data_dir(), output);
  }

  // optional string class_loader_name = 14;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->class_loader_name().data(), static_cast<int>(this->class_loader_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.class_loader_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->class_loader_name(), output);
  }

  // repeated string split_class_loader_names = 15;
  for (int i = 0, n = this->split_class_loader_names_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->split_class_loader_names(i).data(), static_cast<int>(this->split_class_loader_names(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.split_class_loader_names");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      15, this->split_class_loader_names(i), output);
  }

  // optional .android.content.pm.ApplicationInfoProto.Version version = 16;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, _Internal::version(this), output);
  }

  // optional .android.content.pm.ApplicationInfoProto.Detail detail = 17;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, _Internal::detail(this), output);
  }

  // repeated string overlay_paths = 18;
  for (int i = 0, n = this->overlay_paths_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->overlay_paths(i).data(), static_cast<int>(this->overlay_paths(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.overlay_paths");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      18, this->overlay_paths(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.content.pm.ApplicationInfoProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ApplicationInfoProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.content.pm.ApplicationInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.content.pm.PackageItemInfoProto package = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::package(this), target);
  }

  // optional string permission = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->permission().data(), static_cast<int>(this->permission().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.permission");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->permission(), target);
  }

  // optional string process_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->process_name().data(), static_cast<int>(this->process_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.process_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->process_name(), target);
  }

  // optional int32 uid = 4;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->uid(), target);
  }

  // optional int32 flags = 5;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->flags(), target);
  }

  // optional int32 private_flags = 6;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->private_flags(), target);
  }

  // optional int32 theme = 7;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->theme(), target);
  }

  // optional string source_dir = 8;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_dir().data(), static_cast<int>(this->source_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.source_dir");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        8, this->source_dir(), target);
  }

  // optional string public_source_dir = 9;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->public_source_dir().data(), static_cast<int>(this->public_source_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.public_source_dir");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        9, this->public_source_dir(), target);
  }

  // repeated string split_source_dirs = 10;
  for (int i = 0, n = this->split_source_dirs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->split_source_dirs(i).data(), static_cast<int>(this->split_source_dirs(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.split_source_dirs");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(10, this->split_source_dirs(i), target);
  }

  // repeated string split_public_source_dirs = 11;
  for (int i = 0, n = this->split_public_source_dirs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->split_public_source_dirs(i).data(), static_cast<int>(this->split_public_source_dirs(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.split_public_source_dirs");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(11, this->split_public_source_dirs(i), target);
  }

  // repeated string resource_dirs = 12;
  for (int i = 0, n = this->resource_dirs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resource_dirs(i).data(), static_cast<int>(this->resource_dirs(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.resource_dirs");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(12, this->resource_dirs(i), target);
  }

  // optional string data_dir = 13;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_dir().data(), static_cast<int>(this->data_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.data_dir");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        13, this->data_dir(), target);
  }

  // optional string class_loader_name = 14;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->class_loader_name().data(), static_cast<int>(this->class_loader_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.class_loader_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        14, this->class_loader_name(), target);
  }

  // repeated string split_class_loader_names = 15;
  for (int i = 0, n = this->split_class_loader_names_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->split_class_loader_names(i).data(), static_cast<int>(this->split_class_loader_names(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.split_class_loader_names");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(15, this->split_class_loader_names(i), target);
  }

  // optional .android.content.pm.ApplicationInfoProto.Version version = 16;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, _Internal::version(this), target);
  }

  // optional .android.content.pm.ApplicationInfoProto.Detail detail = 17;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, _Internal::detail(this), target);
  }

  // repeated string overlay_paths = 18;
  for (int i = 0, n = this->overlay_paths_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->overlay_paths(i).data(), static_cast<int>(this->overlay_paths(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.content.pm.ApplicationInfoProto.overlay_paths");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(18, this->overlay_paths(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.content.pm.ApplicationInfoProto)
  return target;
}

size_t ApplicationInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.content.pm.ApplicationInfoProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string split_source_dirs = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->split_source_dirs_size());
  for (int i = 0, n = this->split_source_dirs_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->split_source_dirs(i));
  }

  // repeated string split_public_source_dirs = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->split_public_source_dirs_size());
  for (int i = 0, n = this->split_public_source_dirs_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->split_public_source_dirs(i));
  }

  // repeated string resource_dirs = 12;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->resource_dirs_size());
  for (int i = 0, n = this->resource_dirs_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->resource_dirs(i));
  }

  // repeated string split_class_loader_names = 15;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->split_class_loader_names_size());
  for (int i = 0, n = this->split_class_loader_names_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->split_class_loader_names(i));
  }

  // repeated string overlay_paths = 18;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->overlay_paths_size());
  for (int i = 0, n = this->overlay_paths_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->overlay_paths(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string permission = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->permission());
    }

    // optional string process_name = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->process_name());
    }

    // optional string source_dir = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->source_dir());
    }

    // optional string public_source_dir = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->public_source_dir());
    }

    // optional string data_dir = 13;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->data_dir());
    }

    // optional string class_loader_name = 14;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->class_loader_name());
    }

    // optional .android.content.pm.PackageItemInfoProto package = 1;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *package_);
    }

    // optional .android.content.pm.ApplicationInfoProto.Version version = 16;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *version_);
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional .android.content.pm.ApplicationInfoProto.Detail detail = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *detail_);
    }

    // optional int32 uid = 4;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->uid());
    }

    // optional int32 flags = 5;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->flags());
    }

    // optional int32 private_flags = 6;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->private_flags());
    }

    // optional int32 theme = 7;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->theme());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplicationInfoProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.content.pm.ApplicationInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplicationInfoProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApplicationInfoProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.content.pm.ApplicationInfoProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.content.pm.ApplicationInfoProto)
    MergeFrom(*source);
  }
}

void ApplicationInfoProto::MergeFrom(const ApplicationInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.content.pm.ApplicationInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  split_source_dirs_.MergeFrom(from.split_source_dirs_);
  split_public_source_dirs_.MergeFrom(from.split_public_source_dirs_);
  resource_dirs_.MergeFrom(from.resource_dirs_);
  split_class_loader_names_.MergeFrom(from.split_class_loader_names_);
  overlay_paths_.MergeFrom(from.overlay_paths_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      permission_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.permission_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      process_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.process_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      source_dir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.source_dir_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      public_source_dir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.public_source_dir_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      data_dir_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_dir_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      class_loader_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.class_loader_name_);
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_package()->::android::content::pm::PackageItemInfoProto::MergeFrom(from.package());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_version()->::android::content::pm::ApplicationInfoProto_Version::MergeFrom(from.version());
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_detail()->::android::content::pm::ApplicationInfoProto_Detail::MergeFrom(from.detail());
    }
    if (cached_has_bits & 0x00000200u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000400u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000800u) {
      private_flags_ = from.private_flags_;
    }
    if (cached_has_bits & 0x00001000u) {
      theme_ = from.theme_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ApplicationInfoProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.content.pm.ApplicationInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplicationInfoProto::CopyFrom(const ApplicationInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.content.pm.ApplicationInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplicationInfoProto::IsInitialized() const {
  return true;
}

void ApplicationInfoProto::InternalSwap(ApplicationInfoProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  split_source_dirs_.InternalSwap(CastToBase(&other->split_source_dirs_));
  split_public_source_dirs_.InternalSwap(CastToBase(&other->split_public_source_dirs_));
  resource_dirs_.InternalSwap(CastToBase(&other->resource_dirs_));
  split_class_loader_names_.InternalSwap(CastToBase(&other->split_class_loader_names_));
  overlay_paths_.InternalSwap(CastToBase(&other->overlay_paths_));
  permission_.Swap(&other->permission_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  process_name_.Swap(&other->process_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_dir_.Swap(&other->source_dir_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  public_source_dir_.Swap(&other->public_source_dir_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_dir_.Swap(&other->data_dir_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  class_loader_name_.Swap(&other->class_loader_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(package_, other->package_);
  swap(version_, other->version_);
  swap(detail_, other->detail_);
  swap(uid_, other->uid_);
  swap(flags_, other->flags_);
  swap(private_flags_, other->private_flags_);
  swap(theme_, other->theme_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ApplicationInfoProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pm
}  // namespace content
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::content::pm::PackageItemInfoProto* Arena::CreateMaybeMessage< ::android::content::pm::PackageItemInfoProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::content::pm::PackageItemInfoProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::content::pm::ApplicationInfoProto_Version* Arena::CreateMaybeMessage< ::android::content::pm::ApplicationInfoProto_Version >(Arena* arena) {
  return Arena::CreateInternal< ::android::content::pm::ApplicationInfoProto_Version >(arena);
}
template<> PROTOBUF_NOINLINE ::android::content::pm::ApplicationInfoProto_Detail* Arena::CreateMaybeMessage< ::android::content::pm::ApplicationInfoProto_Detail >(Arena* arena) {
  return Arena::CreateInternal< ::android::content::pm::ApplicationInfoProto_Detail >(arena);
}
template<> PROTOBUF_NOINLINE ::android::content::pm::ApplicationInfoProto* Arena::CreateMaybeMessage< ::android::content::pm::ApplicationInfoProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::content::pm::ApplicationInfoProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
