// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/providers/settings.proto

#include "frameworks/base/core/proto/android/providers/settings.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ConfigSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fglobal_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<68> scc_info_GlobalSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fglobal_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fsecure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<49> scc_info_SecureSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fsecure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fsystem_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<16> scc_info_SystemSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fsystem_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UserSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto;
namespace android {
namespace providers {
namespace settings {
class SettingsServiceDumpProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SettingsServiceDumpProto> _instance;
} _SettingsServiceDumpProto_default_instance_;
class UserSettingsProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UserSettingsProto> _instance;
} _UserSettingsProto_default_instance_;
class SettingsProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SettingsProto> _instance;
} _SettingsProto_default_instance_;
}  // namespace settings
}  // namespace providers
}  // namespace android
static void InitDefaultsscc_info_SettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::providers::settings::_SettingsProto_default_instance_;
    new (ptr) ::android::providers::settings::SettingsProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::providers::settings::SettingsProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto}, {}};

static void InitDefaultsscc_info_SettingsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::providers::settings::_SettingsServiceDumpProto_default_instance_;
    new (ptr) ::android::providers::settings::SettingsServiceDumpProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::providers::settings::SettingsServiceDumpProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_SettingsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_SettingsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto}, {
      &scc_info_UserSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto.base,
      &scc_info_GlobalSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fglobal_2eproto.base,
      &scc_info_ConfigSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fconfig_2eproto.base,}};

static void InitDefaultsscc_info_UserSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::providers::settings::_UserSettingsProto_default_instance_;
    new (ptr) ::android::providers::settings::UserSettingsProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::providers::settings::UserSettingsProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UserSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_UserSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto}, {
      &scc_info_SecureSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fsecure_2eproto.base,
      &scc_info_SystemSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fsystem_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::providers::settings::SettingsServiceDumpProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::providers::settings::SettingsServiceDumpProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::providers::settings::SettingsServiceDumpProto, user_settings_),
  PROTOBUF_FIELD_OFFSET(::android::providers::settings::SettingsServiceDumpProto, global_settings_),
  PROTOBUF_FIELD_OFFSET(::android::providers::settings::SettingsServiceDumpProto, config_settings_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::android::providers::settings::UserSettingsProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::providers::settings::UserSettingsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::providers::settings::UserSettingsProto, user_id_),
  PROTOBUF_FIELD_OFFSET(::android::providers::settings::UserSettingsProto, secure_settings_),
  PROTOBUF_FIELD_OFFSET(::android::providers::settings::UserSettingsProto, system_settings_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::android::providers::settings::SettingsProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::providers::settings::SettingsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::android::providers::settings::SettingsServiceDumpProto)},
  { 11, 19, sizeof(::android::providers::settings::UserSettingsProto)},
  { 22, 27, sizeof(::android::providers::settings::SettingsProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::providers::settings::_SettingsServiceDumpProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::providers::settings::_UserSettingsProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::providers::settings::_SettingsProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n;frameworks/base/core/proto/android/pro"
  "viders/settings.proto\022\032android.providers"
  ".settings\032Bframeworks/base/core/proto/an"
  "droid/providers/settings/config.proto\032Bf"
  "rameworks/base/core/proto/android/provid"
  "ers/settings/global.proto\032Bframeworks/ba"
  "se/core/proto/android/providers/settings"
  "/secure.proto\032Bframeworks/base/core/prot"
  "o/android/providers/settings/system.prot"
  "o\0320frameworks/base/core/proto/android/pr"
  "ivacy.proto\"\376\001\n\030SettingsServiceDumpProto"
  "\022D\n\ruser_settings\030\001 \003(\0132-.android.provid"
  "ers.settings.UserSettingsProto\022H\n\017global"
  "_settings\030\002 \001(\0132/.android.providers.sett"
  "ings.GlobalSettingsProto\022H\n\017config_setti"
  "ngs\030\003 \001(\0132/.android.providers.settings.C"
  "onfigSettingsProto:\010\232\237\325\207\003\002\010d\"\315\001\n\021UserSet"
  "tingsProto\022\032\n\007user_id\030\001 \001(\005B\t\232\237\325\207\003\003\010\310\001\022H"
  "\n\017secure_settings\030\002 \001(\0132/.android.provid"
  "ers.settings.SecureSettingsProto\022H\n\017syst"
  "em_settings\030\003 \001(\0132/.android.providers.se"
  "ttings.SystemSettingsProto:\010\232\237\325\207\003\002\010d\"p\n\r"
  "SettingsProto\"_\n\024ScreenBrightnessMode\022!\n"
  "\035SCREEN_BRIGHTNESS_MODE_MANUAL\020\000\022$\n SCRE"
  "EN_BRIGHTNESS_MODE_AUTOMATIC\020\001B\030B\024Settin"
  "gsServiceProtoP\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto_deps[5] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fconfig_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fglobal_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fsecure_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2fsystem_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto_sccs[3] = {
  &scc_info_SettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto.base,
  &scc_info_SettingsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto.base,
  &scc_info_UserSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto, "frameworks/base/core/proto/android/providers/settings.proto", 1016,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto_deps, 3, 5,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto, 3, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto), true);
namespace android {
namespace providers {
namespace settings {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SettingsProto_ScreenBrightnessMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto[0];
}
bool SettingsProto_ScreenBrightnessMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SettingsProto_ScreenBrightnessMode SettingsProto::SCREEN_BRIGHTNESS_MODE_MANUAL;
constexpr SettingsProto_ScreenBrightnessMode SettingsProto::SCREEN_BRIGHTNESS_MODE_AUTOMATIC;
constexpr SettingsProto_ScreenBrightnessMode SettingsProto::ScreenBrightnessMode_MIN;
constexpr SettingsProto_ScreenBrightnessMode SettingsProto::ScreenBrightnessMode_MAX;
constexpr int SettingsProto::ScreenBrightnessMode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void SettingsServiceDumpProto::InitAsDefaultInstance() {
  ::android::providers::settings::_SettingsServiceDumpProto_default_instance_._instance.get_mutable()->global_settings_ = const_cast< ::android::providers::settings::GlobalSettingsProto*>(
      ::android::providers::settings::GlobalSettingsProto::internal_default_instance());
  ::android::providers::settings::_SettingsServiceDumpProto_default_instance_._instance.get_mutable()->config_settings_ = const_cast< ::android::providers::settings::ConfigSettingsProto*>(
      ::android::providers::settings::ConfigSettingsProto::internal_default_instance());
}
class SettingsServiceDumpProto::_Internal {
 public:
  using HasBits = decltype(std::declval<SettingsServiceDumpProto>()._has_bits_);
  static const ::android::providers::settings::GlobalSettingsProto& global_settings(const SettingsServiceDumpProto* msg);
  static void set_has_global_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::android::providers::settings::ConfigSettingsProto& config_settings(const SettingsServiceDumpProto* msg);
  static void set_has_config_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::android::providers::settings::GlobalSettingsProto&
SettingsServiceDumpProto::_Internal::global_settings(const SettingsServiceDumpProto* msg) {
  return *msg->global_settings_;
}
const ::android::providers::settings::ConfigSettingsProto&
SettingsServiceDumpProto::_Internal::config_settings(const SettingsServiceDumpProto* msg) {
  return *msg->config_settings_;
}
void SettingsServiceDumpProto::clear_global_settings() {
  if (global_settings_ != nullptr) global_settings_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void SettingsServiceDumpProto::clear_config_settings() {
  if (config_settings_ != nullptr) config_settings_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
SettingsServiceDumpProto::SettingsServiceDumpProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.providers.settings.SettingsServiceDumpProto)
}
SettingsServiceDumpProto::SettingsServiceDumpProto(const SettingsServiceDumpProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      user_settings_(from.user_settings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_global_settings()) {
    global_settings_ = new ::android::providers::settings::GlobalSettingsProto(*from.global_settings_);
  } else {
    global_settings_ = nullptr;
  }
  if (from.has_config_settings()) {
    config_settings_ = new ::android::providers::settings::ConfigSettingsProto(*from.config_settings_);
  } else {
    config_settings_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:android.providers.settings.SettingsServiceDumpProto)
}

void SettingsServiceDumpProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SettingsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto.base);
  ::memset(&global_settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_settings_) -
      reinterpret_cast<char*>(&global_settings_)) + sizeof(config_settings_));
}

SettingsServiceDumpProto::~SettingsServiceDumpProto() {
  // @@protoc_insertion_point(destructor:android.providers.settings.SettingsServiceDumpProto)
  SharedDtor();
}

void SettingsServiceDumpProto::SharedDtor() {
  if (this != internal_default_instance()) delete global_settings_;
  if (this != internal_default_instance()) delete config_settings_;
}

void SettingsServiceDumpProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SettingsServiceDumpProto& SettingsServiceDumpProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SettingsServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto.base);
  return *internal_default_instance();
}


void SettingsServiceDumpProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.providers.settings.SettingsServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_settings_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(global_settings_ != nullptr);
      global_settings_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(config_settings_ != nullptr);
      config_settings_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SettingsServiceDumpProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.providers.settings.UserSettingsProto user_settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_user_settings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // optional .android.providers.settings.GlobalSettingsProto global_settings = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_global_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.providers.settings.ConfigSettingsProto config_settings = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_config_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SettingsServiceDumpProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.providers.settings.SettingsServiceDumpProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.providers.settings.UserSettingsProto user_settings = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_user_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.providers.settings.GlobalSettingsProto global_settings = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_global_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.providers.settings.ConfigSettingsProto config_settings = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_config_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.providers.settings.SettingsServiceDumpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.providers.settings.SettingsServiceDumpProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SettingsServiceDumpProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.providers.settings.SettingsServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.providers.settings.UserSettingsProto user_settings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_settings_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->user_settings(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .android.providers.settings.GlobalSettingsProto global_settings = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::global_settings(this), output);
  }

  // optional .android.providers.settings.ConfigSettingsProto config_settings = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::config_settings(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.providers.settings.SettingsServiceDumpProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* SettingsServiceDumpProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.providers.settings.SettingsServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.providers.settings.UserSettingsProto user_settings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_settings_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->user_settings(static_cast<int>(i)), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .android.providers.settings.GlobalSettingsProto global_settings = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::global_settings(this), target);
  }

  // optional .android.providers.settings.ConfigSettingsProto config_settings = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::config_settings(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.providers.settings.SettingsServiceDumpProto)
  return target;
}

size_t SettingsServiceDumpProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.providers.settings.SettingsServiceDumpProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.providers.settings.UserSettingsProto user_settings = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->user_settings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->user_settings(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .android.providers.settings.GlobalSettingsProto global_settings = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *global_settings_);
    }

    // optional .android.providers.settings.ConfigSettingsProto config_settings = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *config_settings_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SettingsServiceDumpProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.providers.settings.SettingsServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  const SettingsServiceDumpProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SettingsServiceDumpProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.providers.settings.SettingsServiceDumpProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.providers.settings.SettingsServiceDumpProto)
    MergeFrom(*source);
  }
}

void SettingsServiceDumpProto::MergeFrom(const SettingsServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.providers.settings.SettingsServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_settings_.MergeFrom(from.user_settings_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_global_settings()->::android::providers::settings::GlobalSettingsProto::MergeFrom(from.global_settings());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_config_settings()->::android::providers::settings::ConfigSettingsProto::MergeFrom(from.config_settings());
    }
  }
}

void SettingsServiceDumpProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.providers.settings.SettingsServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettingsServiceDumpProto::CopyFrom(const SettingsServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.providers.settings.SettingsServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettingsServiceDumpProto::IsInitialized() const {
  return true;
}

void SettingsServiceDumpProto::InternalSwap(SettingsServiceDumpProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&user_settings_)->InternalSwap(CastToBase(&other->user_settings_));
  swap(global_settings_, other->global_settings_);
  swap(config_settings_, other->config_settings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SettingsServiceDumpProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UserSettingsProto::InitAsDefaultInstance() {
  ::android::providers::settings::_UserSettingsProto_default_instance_._instance.get_mutable()->secure_settings_ = const_cast< ::android::providers::settings::SecureSettingsProto*>(
      ::android::providers::settings::SecureSettingsProto::internal_default_instance());
  ::android::providers::settings::_UserSettingsProto_default_instance_._instance.get_mutable()->system_settings_ = const_cast< ::android::providers::settings::SystemSettingsProto*>(
      ::android::providers::settings::SystemSettingsProto::internal_default_instance());
}
class UserSettingsProto::_Internal {
 public:
  using HasBits = decltype(std::declval<UserSettingsProto>()._has_bits_);
  static void set_has_user_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::android::providers::settings::SecureSettingsProto& secure_settings(const UserSettingsProto* msg);
  static void set_has_secure_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::android::providers::settings::SystemSettingsProto& system_settings(const UserSettingsProto* msg);
  static void set_has_system_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::android::providers::settings::SecureSettingsProto&
UserSettingsProto::_Internal::secure_settings(const UserSettingsProto* msg) {
  return *msg->secure_settings_;
}
const ::android::providers::settings::SystemSettingsProto&
UserSettingsProto::_Internal::system_settings(const UserSettingsProto* msg) {
  return *msg->system_settings_;
}
void UserSettingsProto::clear_secure_settings() {
  if (secure_settings_ != nullptr) secure_settings_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void UserSettingsProto::clear_system_settings() {
  if (system_settings_ != nullptr) system_settings_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
UserSettingsProto::UserSettingsProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.providers.settings.UserSettingsProto)
}
UserSettingsProto::UserSettingsProto(const UserSettingsProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_secure_settings()) {
    secure_settings_ = new ::android::providers::settings::SecureSettingsProto(*from.secure_settings_);
  } else {
    secure_settings_ = nullptr;
  }
  if (from.has_system_settings()) {
    system_settings_ = new ::android::providers::settings::SystemSettingsProto(*from.system_settings_);
  } else {
    system_settings_ = nullptr;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:android.providers.settings.UserSettingsProto)
}

void UserSettingsProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UserSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto.base);
  ::memset(&secure_settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&secure_settings_)) + sizeof(user_id_));
}

UserSettingsProto::~UserSettingsProto() {
  // @@protoc_insertion_point(destructor:android.providers.settings.UserSettingsProto)
  SharedDtor();
}

void UserSettingsProto::SharedDtor() {
  if (this != internal_default_instance()) delete secure_settings_;
  if (this != internal_default_instance()) delete system_settings_;
}

void UserSettingsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserSettingsProto& UserSettingsProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UserSettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto.base);
  return *internal_default_instance();
}


void UserSettingsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.providers.settings.UserSettingsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(secure_settings_ != nullptr);
      secure_settings_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(system_settings_ != nullptr);
      system_settings_->Clear();
    }
  }
  user_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserSettingsProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 user_id = 1 [(.android.privacy) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_user_id(&has_bits);
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.providers.settings.SecureSettingsProto secure_settings = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_secure_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.providers.settings.SystemSettingsProto system_settings = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_system_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserSettingsProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.providers.settings.UserSettingsProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 user_id = 1 [(.android.privacy) = {
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_user_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.providers.settings.SecureSettingsProto secure_settings = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_secure_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.providers.settings.SystemSettingsProto system_settings = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_system_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.providers.settings.UserSettingsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.providers.settings.UserSettingsProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserSettingsProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.providers.settings.UserSettingsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 user_id = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->user_id(), output);
  }

  // optional .android.providers.settings.SecureSettingsProto secure_settings = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::secure_settings(this), output);
  }

  // optional .android.providers.settings.SystemSettingsProto system_settings = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::system_settings(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.providers.settings.UserSettingsProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* UserSettingsProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.providers.settings.UserSettingsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 user_id = 1 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->user_id(), target);
  }

  // optional .android.providers.settings.SecureSettingsProto secure_settings = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::secure_settings(this), target);
  }

  // optional .android.providers.settings.SystemSettingsProto system_settings = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::system_settings(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.providers.settings.UserSettingsProto)
  return target;
}

size_t UserSettingsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.providers.settings.UserSettingsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .android.providers.settings.SecureSettingsProto secure_settings = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *secure_settings_);
    }

    // optional .android.providers.settings.SystemSettingsProto system_settings = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *system_settings_);
    }

    // optional int32 user_id = 1 [(.android.privacy) = {
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->user_id());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserSettingsProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.providers.settings.UserSettingsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const UserSettingsProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UserSettingsProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.providers.settings.UserSettingsProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.providers.settings.UserSettingsProto)
    MergeFrom(*source);
  }
}

void UserSettingsProto::MergeFrom(const UserSettingsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.providers.settings.UserSettingsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_secure_settings()->::android::providers::settings::SecureSettingsProto::MergeFrom(from.secure_settings());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_system_settings()->::android::providers::settings::SystemSettingsProto::MergeFrom(from.system_settings());
    }
    if (cached_has_bits & 0x00000004u) {
      user_id_ = from.user_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserSettingsProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.providers.settings.UserSettingsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserSettingsProto::CopyFrom(const UserSettingsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.providers.settings.UserSettingsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSettingsProto::IsInitialized() const {
  return true;
}

void UserSettingsProto::InternalSwap(UserSettingsProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(secure_settings_, other->secure_settings_);
  swap(system_settings_, other->system_settings_);
  swap(user_id_, other->user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserSettingsProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SettingsProto::InitAsDefaultInstance() {
}
class SettingsProto::_Internal {
 public:
  using HasBits = decltype(std::declval<SettingsProto>()._has_bits_);
};

SettingsProto::SettingsProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.providers.settings.SettingsProto)
}
SettingsProto::SettingsProto(const SettingsProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:android.providers.settings.SettingsProto)
}

void SettingsProto::SharedCtor() {
}

SettingsProto::~SettingsProto() {
  // @@protoc_insertion_point(destructor:android.providers.settings.SettingsProto)
  SharedDtor();
}

void SettingsProto::SharedDtor() {
}

void SettingsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SettingsProto& SettingsProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SettingsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fproviders_2fsettings_2eproto.base);
  return *internal_default_instance();
}


void SettingsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.providers.settings.SettingsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SettingsProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SettingsProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.providers.settings.SettingsProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:android.providers.settings.SettingsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.providers.settings.SettingsProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SettingsProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.providers.settings.SettingsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.providers.settings.SettingsProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* SettingsProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.providers.settings.SettingsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.providers.settings.SettingsProto)
  return target;
}

size_t SettingsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.providers.settings.SettingsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SettingsProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.providers.settings.SettingsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const SettingsProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SettingsProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.providers.settings.SettingsProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.providers.settings.SettingsProto)
    MergeFrom(*source);
  }
}

void SettingsProto::MergeFrom(const SettingsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.providers.settings.SettingsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SettingsProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.providers.settings.SettingsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettingsProto::CopyFrom(const SettingsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.providers.settings.SettingsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettingsProto::IsInitialized() const {
  return true;
}

void SettingsProto::InternalSwap(SettingsProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SettingsProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace settings
}  // namespace providers
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::providers::settings::SettingsServiceDumpProto* Arena::CreateMaybeMessage< ::android::providers::settings::SettingsServiceDumpProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::providers::settings::SettingsServiceDumpProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::providers::settings::UserSettingsProto* Arena::CreateMaybeMessage< ::android::providers::settings::UserSettingsProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::providers::settings::UserSettingsProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::providers::settings::SettingsProto* Arena::CreateMaybeMessage< ::android::providers::settings::SettingsProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::providers::settings::SettingsProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
