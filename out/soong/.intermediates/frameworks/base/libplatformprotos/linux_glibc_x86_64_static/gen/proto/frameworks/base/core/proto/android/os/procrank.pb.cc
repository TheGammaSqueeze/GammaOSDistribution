// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/os/procrank.proto

#include "frameworks/base/core/proto/android/os/procrank.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcrankProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ProcrankProto_Summary_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcrankProto_Summary_Ram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcrankProto_Summary_Zram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto;
namespace android {
namespace os {
class ProcrankProto_ProcessDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcrankProto_Process> _instance;
} _ProcrankProto_Process_default_instance_;
class ProcrankProto_Summary_ZramDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcrankProto_Summary_Zram> _instance;
} _ProcrankProto_Summary_Zram_default_instance_;
class ProcrankProto_Summary_RamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcrankProto_Summary_Ram> _instance;
} _ProcrankProto_Summary_Ram_default_instance_;
class ProcrankProto_SummaryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcrankProto_Summary> _instance;
} _ProcrankProto_Summary_default_instance_;
class ProcrankProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcrankProto> _instance;
} _ProcrankProto_default_instance_;
}  // namespace os
}  // namespace android
static void InitDefaultsscc_info_ProcrankProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::_ProcrankProto_default_instance_;
    new (ptr) ::android::os::ProcrankProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::ProcrankProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProcrankProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_ProcrankProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto}, {
      &scc_info_ProcrankProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base,
      &scc_info_ProcrankProto_Summary_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base,}};

static void InitDefaultsscc_info_ProcrankProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::_ProcrankProto_Process_default_instance_;
    new (ptr) ::android::os::ProcrankProto_Process();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::ProcrankProto_Process::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcrankProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ProcrankProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto}, {}};

static void InitDefaultsscc_info_ProcrankProto_Summary_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::_ProcrankProto_Summary_default_instance_;
    new (ptr) ::android::os::ProcrankProto_Summary();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::ProcrankProto_Summary::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ProcrankProto_Summary_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_ProcrankProto_Summary_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto}, {
      &scc_info_ProcrankProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base,
      &scc_info_ProcrankProto_Summary_Zram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base,
      &scc_info_ProcrankProto_Summary_Ram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base,}};

static void InitDefaultsscc_info_ProcrankProto_Summary_Ram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::_ProcrankProto_Summary_Ram_default_instance_;
    new (ptr) ::android::os::ProcrankProto_Summary_Ram();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::ProcrankProto_Summary_Ram::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcrankProto_Summary_Ram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ProcrankProto_Summary_Ram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto}, {}};

static void InitDefaultsscc_info_ProcrankProto_Summary_Zram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::_ProcrankProto_Summary_Zram_default_instance_;
    new (ptr) ::android::os::ProcrankProto_Summary_Zram();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::ProcrankProto_Summary_Zram::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcrankProto_Summary_Zram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ProcrankProto_Summary_Zram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Process, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Process, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Process, pid_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Process, vss_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Process, rss_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Process, pss_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Process, uss_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Process, swap_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Process, pswap_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Process, uswap_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Process, zswap_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Process, cmdline_),
  9,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  0,
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Summary_Zram, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Summary_Zram, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Summary_Zram, raw_text_),
  0,
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Summary_Ram, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Summary_Ram, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Summary_Ram, raw_text_),
  0,
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Summary, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Summary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Summary, total_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Summary, zram_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto_Summary, ram_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto, processes_),
  PROTOBUF_FIELD_OFFSET(::android::os::ProcrankProto, summary_),
  ~0u,
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::android::os::ProcrankProto_Process)},
  { 25, 31, sizeof(::android::os::ProcrankProto_Summary_Zram)},
  { 32, 38, sizeof(::android::os::ProcrankProto_Summary_Ram)},
  { 39, 47, sizeof(::android::os::ProcrankProto_Summary)},
  { 50, 57, sizeof(::android::os::ProcrankProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::os::_ProcrankProto_Process_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::os::_ProcrankProto_Summary_Zram_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::os::_ProcrankProto_Summary_Ram_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::os::_ProcrankProto_Summary_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::os::_ProcrankProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n4frameworks/base/core/proto/android/os/"
  "procrank.proto\022\nandroid.os\0320frameworks/b"
  "ase/core/proto/android/privacy.proto\"\244\004\n"
  "\rProcrankProto\0224\n\tprocesses\030\001 \003(\0132!.andr"
  "oid.os.ProcrankProto.Process\0222\n\007summary\030"
  "\002 \001(\0132!.android.os.ProcrankProto.Summary"
  "\032\241\001\n\007Process\022\013\n\003pid\030\001 \001(\005\022\013\n\003vss\030\002 \001(\003\022\013"
  "\n\003rss\030\003 \001(\003\022\013\n\003pss\030\004 \001(\003\022\013\n\003uss\030\005 \001(\003\022\014\n"
  "\004swap\030\006 \001(\003\022\r\n\005pswap\030\007 \001(\003\022\r\n\005uswap\030\010 \001("
  "\003\022\r\n\005zswap\030\t \001(\003\022\017\n\007cmdline\030\n \001(\t:\t\232\237\325\207\003"
  "\003\010\310\001\032\371\001\n\007Summary\0220\n\005total\030\001 \001(\0132!.androi"
  "d.os.ProcrankProto.Process\0224\n\004zram\030\002 \001(\013"
  "2&.android.os.ProcrankProto.Summary.Zram"
  "\0222\n\003ram\030\003 \001(\0132%.android.os.ProcrankProto"
  ".Summary.Ram\032#\n\004Zram\022\020\n\010raw_text\030\001 \001(\t:\t"
  "\232\237\325\207\003\003\010\310\001\032\"\n\003Ram\022\020\n\010raw_text\030\001 \001(\t:\t\232\237\325\207"
  "\003\003\010\310\001:\t\232\237\325\207\003\003\010\310\001:\t\232\237\325\207\003\003\010\310\001B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto_deps[1] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto_sccs[5] = {
  &scc_info_ProcrankProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base,
  &scc_info_ProcrankProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base,
  &scc_info_ProcrankProto_Summary_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base,
  &scc_info_ProcrankProto_Summary_Ram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base,
  &scc_info_ProcrankProto_Summary_Zram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto, "frameworks/base/core/proto/android/os/procrank.proto", 671,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto_deps, 5, 1,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto, 5, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto), true);
namespace android {
namespace os {

// ===================================================================

void ProcrankProto_Process::InitAsDefaultInstance() {
}
class ProcrankProto_Process::_Internal {
 public:
  using HasBits = decltype(std::declval<ProcrankProto_Process>()._has_bits_);
  static void set_has_pid(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_vss(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_rss(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_pss(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_uss(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_swap(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_pswap(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_uswap(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_zswap(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_cmdline(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ProcrankProto_Process::ProcrankProto_Process()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.ProcrankProto.Process)
}
ProcrankProto_Process::ProcrankProto_Process(const ProcrankProto_Process& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmdline_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_cmdline()) {
    cmdline_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cmdline_);
  }
  ::memcpy(&vss_, &from.vss_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&vss_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:android.os.ProcrankProto.Process)
}

void ProcrankProto_Process::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProcrankProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base);
  cmdline_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&vss_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&vss_)) + sizeof(pid_));
}

ProcrankProto_Process::~ProcrankProto_Process() {
  // @@protoc_insertion_point(destructor:android.os.ProcrankProto.Process)
  SharedDtor();
}

void ProcrankProto_Process::SharedDtor() {
  cmdline_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProcrankProto_Process::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcrankProto_Process& ProcrankProto_Process::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcrankProto_Process_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base);
  return *internal_default_instance();
}


void ProcrankProto_Process::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.ProcrankProto.Process)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    cmdline_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&vss_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uswap_) -
        reinterpret_cast<char*>(&vss_)) + sizeof(uswap_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&zswap_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&zswap_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProcrankProto_Process::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 pid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_pid(&has_bits);
          pid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 vss = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_vss(&has_bits);
          vss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 rss = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_rss(&has_bits);
          rss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 pss = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_pss(&has_bits);
          pss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 uss = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_uss(&has_bits);
          uss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 swap = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_swap(&has_bits);
          swap_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 pswap = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_pswap(&has_bits);
          pswap_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 uswap = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_uswap(&has_bits);
          uswap_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 zswap = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_zswap(&has_bits);
          zswap_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string cmdline = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_cmdline(), ptr, ctx, "android.os.ProcrankProto.Process.cmdline");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProcrankProto_Process::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.os.ProcrankProto.Process)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pid = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_pid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 vss = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_vss(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &vss_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 rss = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_rss(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &rss_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 pss = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_pss(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &pss_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 uss = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_uss(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &uss_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 swap = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_swap(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &swap_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 pswap = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_pswap(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &pswap_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 uswap = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_uswap(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &uswap_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 zswap = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          _Internal::set_has_zswap(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &zswap_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cmdline = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_cmdline()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cmdline().data(), static_cast<int>(this->cmdline().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.os.ProcrankProto.Process.cmdline");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.ProcrankProto.Process)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.ProcrankProto.Process)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProcrankProto_Process::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.ProcrankProto.Process)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 pid = 1;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->pid(), output);
  }

  // optional int64 vss = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(2, this->vss(), output);
  }

  // optional int64 rss = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->rss(), output);
  }

  // optional int64 pss = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(4, this->pss(), output);
  }

  // optional int64 uss = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(5, this->uss(), output);
  }

  // optional int64 swap = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(6, this->swap(), output);
  }

  // optional int64 pswap = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(7, this->pswap(), output);
  }

  // optional int64 uswap = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(8, this->uswap(), output);
  }

  // optional int64 zswap = 9;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(9, this->zswap(), output);
  }

  // optional string cmdline = 10;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmdline().data(), static_cast<int>(this->cmdline().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.ProcrankProto.Process.cmdline");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->cmdline(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.os.ProcrankProto.Process)
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcrankProto_Process::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.os.ProcrankProto.Process)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 pid = 1;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->pid(), target);
  }

  // optional int64 vss = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->vss(), target);
  }

  // optional int64 rss = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->rss(), target);
  }

  // optional int64 pss = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->pss(), target);
  }

  // optional int64 uss = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->uss(), target);
  }

  // optional int64 swap = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->swap(), target);
  }

  // optional int64 pswap = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->pswap(), target);
  }

  // optional int64 uswap = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->uswap(), target);
  }

  // optional int64 zswap = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(9, this->zswap(), target);
  }

  // optional string cmdline = 10;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmdline().data(), static_cast<int>(this->cmdline().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.ProcrankProto.Process.cmdline");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        10, this->cmdline(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.os.ProcrankProto.Process)
  return target;
}

size_t ProcrankProto_Process::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.ProcrankProto.Process)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string cmdline = 10;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->cmdline());
    }

    // optional int64 vss = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->vss());
    }

    // optional int64 rss = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->rss());
    }

    // optional int64 pss = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->pss());
    }

    // optional int64 uss = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->uss());
    }

    // optional int64 swap = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->swap());
    }

    // optional int64 pswap = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->pswap());
    }

    // optional int64 uswap = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->uswap());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional int64 zswap = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->zswap());
    }

    // optional int32 pid = 1;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->pid());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcrankProto_Process::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.os.ProcrankProto.Process)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcrankProto_Process* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcrankProto_Process>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.os.ProcrankProto.Process)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.os.ProcrankProto.Process)
    MergeFrom(*source);
  }
}

void ProcrankProto_Process::MergeFrom(const ProcrankProto_Process& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.ProcrankProto.Process)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      cmdline_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cmdline_);
    }
    if (cached_has_bits & 0x00000002u) {
      vss_ = from.vss_;
    }
    if (cached_has_bits & 0x00000004u) {
      rss_ = from.rss_;
    }
    if (cached_has_bits & 0x00000008u) {
      pss_ = from.pss_;
    }
    if (cached_has_bits & 0x00000010u) {
      uss_ = from.uss_;
    }
    if (cached_has_bits & 0x00000020u) {
      swap_ = from.swap_;
    }
    if (cached_has_bits & 0x00000040u) {
      pswap_ = from.pswap_;
    }
    if (cached_has_bits & 0x00000080u) {
      uswap_ = from.uswap_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      zswap_ = from.zswap_;
    }
    if (cached_has_bits & 0x00000200u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProcrankProto_Process::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.os.ProcrankProto.Process)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcrankProto_Process::CopyFrom(const ProcrankProto_Process& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.ProcrankProto.Process)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcrankProto_Process::IsInitialized() const {
  return true;
}

void ProcrankProto_Process::InternalSwap(ProcrankProto_Process* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  cmdline_.Swap(&other->cmdline_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(vss_, other->vss_);
  swap(rss_, other->rss_);
  swap(pss_, other->pss_);
  swap(uss_, other->uss_);
  swap(swap_, other->swap_);
  swap(pswap_, other->pswap_);
  swap(uswap_, other->uswap_);
  swap(zswap_, other->zswap_);
  swap(pid_, other->pid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcrankProto_Process::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProcrankProto_Summary_Zram::InitAsDefaultInstance() {
}
class ProcrankProto_Summary_Zram::_Internal {
 public:
  using HasBits = decltype(std::declval<ProcrankProto_Summary_Zram>()._has_bits_);
  static void set_has_raw_text(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ProcrankProto_Summary_Zram::ProcrankProto_Summary_Zram()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.ProcrankProto.Summary.Zram)
}
ProcrankProto_Summary_Zram::ProcrankProto_Summary_Zram(const ProcrankProto_Summary_Zram& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  raw_text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_raw_text()) {
    raw_text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.raw_text_);
  }
  // @@protoc_insertion_point(copy_constructor:android.os.ProcrankProto.Summary.Zram)
}

void ProcrankProto_Summary_Zram::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProcrankProto_Summary_Zram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base);
  raw_text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProcrankProto_Summary_Zram::~ProcrankProto_Summary_Zram() {
  // @@protoc_insertion_point(destructor:android.os.ProcrankProto.Summary.Zram)
  SharedDtor();
}

void ProcrankProto_Summary_Zram::SharedDtor() {
  raw_text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProcrankProto_Summary_Zram::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcrankProto_Summary_Zram& ProcrankProto_Summary_Zram::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcrankProto_Summary_Zram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base);
  return *internal_default_instance();
}


void ProcrankProto_Summary_Zram::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.ProcrankProto.Summary.Zram)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    raw_text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProcrankProto_Summary_Zram::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string raw_text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_raw_text(), ptr, ctx, "android.os.ProcrankProto.Summary.Zram.raw_text");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProcrankProto_Summary_Zram::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.os.ProcrankProto.Summary.Zram)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string raw_text = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_raw_text()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->raw_text().data(), static_cast<int>(this->raw_text().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.os.ProcrankProto.Summary.Zram.raw_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.ProcrankProto.Summary.Zram)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.ProcrankProto.Summary.Zram)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProcrankProto_Summary_Zram::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.ProcrankProto.Summary.Zram)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string raw_text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raw_text().data(), static_cast<int>(this->raw_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.ProcrankProto.Summary.Zram.raw_text");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->raw_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.os.ProcrankProto.Summary.Zram)
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcrankProto_Summary_Zram::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.os.ProcrankProto.Summary.Zram)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string raw_text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raw_text().data(), static_cast<int>(this->raw_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.ProcrankProto.Summary.Zram.raw_text");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->raw_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.os.ProcrankProto.Summary.Zram)
  return target;
}

size_t ProcrankProto_Summary_Zram::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.ProcrankProto.Summary.Zram)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string raw_text = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->raw_text());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcrankProto_Summary_Zram::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.os.ProcrankProto.Summary.Zram)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcrankProto_Summary_Zram* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcrankProto_Summary_Zram>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.os.ProcrankProto.Summary.Zram)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.os.ProcrankProto.Summary.Zram)
    MergeFrom(*source);
  }
}

void ProcrankProto_Summary_Zram::MergeFrom(const ProcrankProto_Summary_Zram& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.ProcrankProto.Summary.Zram)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_raw_text()) {
    _has_bits_[0] |= 0x00000001u;
    raw_text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.raw_text_);
  }
}

void ProcrankProto_Summary_Zram::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.os.ProcrankProto.Summary.Zram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcrankProto_Summary_Zram::CopyFrom(const ProcrankProto_Summary_Zram& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.ProcrankProto.Summary.Zram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcrankProto_Summary_Zram::IsInitialized() const {
  return true;
}

void ProcrankProto_Summary_Zram::InternalSwap(ProcrankProto_Summary_Zram* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  raw_text_.Swap(&other->raw_text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcrankProto_Summary_Zram::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProcrankProto_Summary_Ram::InitAsDefaultInstance() {
}
class ProcrankProto_Summary_Ram::_Internal {
 public:
  using HasBits = decltype(std::declval<ProcrankProto_Summary_Ram>()._has_bits_);
  static void set_has_raw_text(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ProcrankProto_Summary_Ram::ProcrankProto_Summary_Ram()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.ProcrankProto.Summary.Ram)
}
ProcrankProto_Summary_Ram::ProcrankProto_Summary_Ram(const ProcrankProto_Summary_Ram& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  raw_text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_raw_text()) {
    raw_text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.raw_text_);
  }
  // @@protoc_insertion_point(copy_constructor:android.os.ProcrankProto.Summary.Ram)
}

void ProcrankProto_Summary_Ram::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProcrankProto_Summary_Ram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base);
  raw_text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProcrankProto_Summary_Ram::~ProcrankProto_Summary_Ram() {
  // @@protoc_insertion_point(destructor:android.os.ProcrankProto.Summary.Ram)
  SharedDtor();
}

void ProcrankProto_Summary_Ram::SharedDtor() {
  raw_text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProcrankProto_Summary_Ram::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcrankProto_Summary_Ram& ProcrankProto_Summary_Ram::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcrankProto_Summary_Ram_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base);
  return *internal_default_instance();
}


void ProcrankProto_Summary_Ram::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.ProcrankProto.Summary.Ram)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    raw_text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProcrankProto_Summary_Ram::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string raw_text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_raw_text(), ptr, ctx, "android.os.ProcrankProto.Summary.Ram.raw_text");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProcrankProto_Summary_Ram::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.os.ProcrankProto.Summary.Ram)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string raw_text = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_raw_text()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->raw_text().data(), static_cast<int>(this->raw_text().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.os.ProcrankProto.Summary.Ram.raw_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.ProcrankProto.Summary.Ram)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.ProcrankProto.Summary.Ram)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProcrankProto_Summary_Ram::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.ProcrankProto.Summary.Ram)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string raw_text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raw_text().data(), static_cast<int>(this->raw_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.ProcrankProto.Summary.Ram.raw_text");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->raw_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.os.ProcrankProto.Summary.Ram)
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcrankProto_Summary_Ram::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.os.ProcrankProto.Summary.Ram)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string raw_text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->raw_text().data(), static_cast<int>(this->raw_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.os.ProcrankProto.Summary.Ram.raw_text");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->raw_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.os.ProcrankProto.Summary.Ram)
  return target;
}

size_t ProcrankProto_Summary_Ram::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.ProcrankProto.Summary.Ram)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string raw_text = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->raw_text());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcrankProto_Summary_Ram::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.os.ProcrankProto.Summary.Ram)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcrankProto_Summary_Ram* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcrankProto_Summary_Ram>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.os.ProcrankProto.Summary.Ram)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.os.ProcrankProto.Summary.Ram)
    MergeFrom(*source);
  }
}

void ProcrankProto_Summary_Ram::MergeFrom(const ProcrankProto_Summary_Ram& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.ProcrankProto.Summary.Ram)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_raw_text()) {
    _has_bits_[0] |= 0x00000001u;
    raw_text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.raw_text_);
  }
}

void ProcrankProto_Summary_Ram::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.os.ProcrankProto.Summary.Ram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcrankProto_Summary_Ram::CopyFrom(const ProcrankProto_Summary_Ram& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.ProcrankProto.Summary.Ram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcrankProto_Summary_Ram::IsInitialized() const {
  return true;
}

void ProcrankProto_Summary_Ram::InternalSwap(ProcrankProto_Summary_Ram* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  raw_text_.Swap(&other->raw_text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcrankProto_Summary_Ram::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProcrankProto_Summary::InitAsDefaultInstance() {
  ::android::os::_ProcrankProto_Summary_default_instance_._instance.get_mutable()->total_ = const_cast< ::android::os::ProcrankProto_Process*>(
      ::android::os::ProcrankProto_Process::internal_default_instance());
  ::android::os::_ProcrankProto_Summary_default_instance_._instance.get_mutable()->zram_ = const_cast< ::android::os::ProcrankProto_Summary_Zram*>(
      ::android::os::ProcrankProto_Summary_Zram::internal_default_instance());
  ::android::os::_ProcrankProto_Summary_default_instance_._instance.get_mutable()->ram_ = const_cast< ::android::os::ProcrankProto_Summary_Ram*>(
      ::android::os::ProcrankProto_Summary_Ram::internal_default_instance());
}
class ProcrankProto_Summary::_Internal {
 public:
  using HasBits = decltype(std::declval<ProcrankProto_Summary>()._has_bits_);
  static const ::android::os::ProcrankProto_Process& total(const ProcrankProto_Summary* msg);
  static void set_has_total(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::android::os::ProcrankProto_Summary_Zram& zram(const ProcrankProto_Summary* msg);
  static void set_has_zram(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::android::os::ProcrankProto_Summary_Ram& ram(const ProcrankProto_Summary* msg);
  static void set_has_ram(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::android::os::ProcrankProto_Process&
ProcrankProto_Summary::_Internal::total(const ProcrankProto_Summary* msg) {
  return *msg->total_;
}
const ::android::os::ProcrankProto_Summary_Zram&
ProcrankProto_Summary::_Internal::zram(const ProcrankProto_Summary* msg) {
  return *msg->zram_;
}
const ::android::os::ProcrankProto_Summary_Ram&
ProcrankProto_Summary::_Internal::ram(const ProcrankProto_Summary* msg) {
  return *msg->ram_;
}
ProcrankProto_Summary::ProcrankProto_Summary()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.ProcrankProto.Summary)
}
ProcrankProto_Summary::ProcrankProto_Summary(const ProcrankProto_Summary& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_total()) {
    total_ = new ::android::os::ProcrankProto_Process(*from.total_);
  } else {
    total_ = nullptr;
  }
  if (from.has_zram()) {
    zram_ = new ::android::os::ProcrankProto_Summary_Zram(*from.zram_);
  } else {
    zram_ = nullptr;
  }
  if (from.has_ram()) {
    ram_ = new ::android::os::ProcrankProto_Summary_Ram(*from.ram_);
  } else {
    ram_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:android.os.ProcrankProto.Summary)
}

void ProcrankProto_Summary::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProcrankProto_Summary_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base);
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ram_) -
      reinterpret_cast<char*>(&total_)) + sizeof(ram_));
}

ProcrankProto_Summary::~ProcrankProto_Summary() {
  // @@protoc_insertion_point(destructor:android.os.ProcrankProto.Summary)
  SharedDtor();
}

void ProcrankProto_Summary::SharedDtor() {
  if (this != internal_default_instance()) delete total_;
  if (this != internal_default_instance()) delete zram_;
  if (this != internal_default_instance()) delete ram_;
}

void ProcrankProto_Summary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcrankProto_Summary& ProcrankProto_Summary::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcrankProto_Summary_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base);
  return *internal_default_instance();
}


void ProcrankProto_Summary::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.ProcrankProto.Summary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(total_ != nullptr);
      total_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(zram_ != nullptr);
      zram_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(ram_ != nullptr);
      ram_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProcrankProto_Summary::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.os.ProcrankProto.Process total = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_total(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.os.ProcrankProto.Summary.Zram zram = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_zram(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.os.ProcrankProto.Summary.Ram ram = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_ram(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProcrankProto_Summary::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.os.ProcrankProto.Summary)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.os.ProcrankProto.Process total = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_total()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.os.ProcrankProto.Summary.Zram zram = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_zram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.os.ProcrankProto.Summary.Ram ram = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_ram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.ProcrankProto.Summary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.ProcrankProto.Summary)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProcrankProto_Summary::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.ProcrankProto.Summary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.os.ProcrankProto.Process total = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::total(this), output);
  }

  // optional .android.os.ProcrankProto.Summary.Zram zram = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::zram(this), output);
  }

  // optional .android.os.ProcrankProto.Summary.Ram ram = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::ram(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.os.ProcrankProto.Summary)
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcrankProto_Summary::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.os.ProcrankProto.Summary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.os.ProcrankProto.Process total = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::total(this), target);
  }

  // optional .android.os.ProcrankProto.Summary.Zram zram = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::zram(this), target);
  }

  // optional .android.os.ProcrankProto.Summary.Ram ram = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::ram(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.os.ProcrankProto.Summary)
  return target;
}

size_t ProcrankProto_Summary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.ProcrankProto.Summary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .android.os.ProcrankProto.Process total = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *total_);
    }

    // optional .android.os.ProcrankProto.Summary.Zram zram = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *zram_);
    }

    // optional .android.os.ProcrankProto.Summary.Ram ram = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ram_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcrankProto_Summary::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.os.ProcrankProto.Summary)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcrankProto_Summary* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcrankProto_Summary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.os.ProcrankProto.Summary)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.os.ProcrankProto.Summary)
    MergeFrom(*source);
  }
}

void ProcrankProto_Summary::MergeFrom(const ProcrankProto_Summary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.ProcrankProto.Summary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_total()->::android::os::ProcrankProto_Process::MergeFrom(from.total());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_zram()->::android::os::ProcrankProto_Summary_Zram::MergeFrom(from.zram());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_ram()->::android::os::ProcrankProto_Summary_Ram::MergeFrom(from.ram());
    }
  }
}

void ProcrankProto_Summary::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.os.ProcrankProto.Summary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcrankProto_Summary::CopyFrom(const ProcrankProto_Summary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.ProcrankProto.Summary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcrankProto_Summary::IsInitialized() const {
  return true;
}

void ProcrankProto_Summary::InternalSwap(ProcrankProto_Summary* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(total_, other->total_);
  swap(zram_, other->zram_);
  swap(ram_, other->ram_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcrankProto_Summary::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProcrankProto::InitAsDefaultInstance() {
  ::android::os::_ProcrankProto_default_instance_._instance.get_mutable()->summary_ = const_cast< ::android::os::ProcrankProto_Summary*>(
      ::android::os::ProcrankProto_Summary::internal_default_instance());
}
class ProcrankProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ProcrankProto>()._has_bits_);
  static const ::android::os::ProcrankProto_Summary& summary(const ProcrankProto* msg);
  static void set_has_summary(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::os::ProcrankProto_Summary&
ProcrankProto::_Internal::summary(const ProcrankProto* msg) {
  return *msg->summary_;
}
ProcrankProto::ProcrankProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.ProcrankProto)
}
ProcrankProto::ProcrankProto(const ProcrankProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      processes_(from.processes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_summary()) {
    summary_ = new ::android::os::ProcrankProto_Summary(*from.summary_);
  } else {
    summary_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:android.os.ProcrankProto)
}

void ProcrankProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProcrankProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base);
  summary_ = nullptr;
}

ProcrankProto::~ProcrankProto() {
  // @@protoc_insertion_point(destructor:android.os.ProcrankProto)
  SharedDtor();
}

void ProcrankProto::SharedDtor() {
  if (this != internal_default_instance()) delete summary_;
}

void ProcrankProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcrankProto& ProcrankProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcrankProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fprocrank_2eproto.base);
  return *internal_default_instance();
}


void ProcrankProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.ProcrankProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  processes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(summary_ != nullptr);
    summary_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProcrankProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.os.ProcrankProto.Process processes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_processes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // optional .android.os.ProcrankProto.Summary summary = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_summary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProcrankProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.os.ProcrankProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.os.ProcrankProto.Process processes = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_processes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.os.ProcrankProto.Summary summary = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.ProcrankProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.ProcrankProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProcrankProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.ProcrankProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.os.ProcrankProto.Process processes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->processes_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->processes(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .android.os.ProcrankProto.Summary summary = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::summary(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.os.ProcrankProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcrankProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.os.ProcrankProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.os.ProcrankProto.Process processes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->processes_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->processes(static_cast<int>(i)), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .android.os.ProcrankProto.Summary summary = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::summary(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.os.ProcrankProto)
  return target;
}

size_t ProcrankProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.ProcrankProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.os.ProcrankProto.Process processes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->processes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->processes(static_cast<int>(i)));
    }
  }

  // optional .android.os.ProcrankProto.Summary summary = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *summary_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcrankProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.os.ProcrankProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcrankProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcrankProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.os.ProcrankProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.os.ProcrankProto)
    MergeFrom(*source);
  }
}

void ProcrankProto::MergeFrom(const ProcrankProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.ProcrankProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  processes_.MergeFrom(from.processes_);
  if (from.has_summary()) {
    mutable_summary()->::android::os::ProcrankProto_Summary::MergeFrom(from.summary());
  }
}

void ProcrankProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.os.ProcrankProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcrankProto::CopyFrom(const ProcrankProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.ProcrankProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcrankProto::IsInitialized() const {
  return true;
}

void ProcrankProto::InternalSwap(ProcrankProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&processes_)->InternalSwap(CastToBase(&other->processes_));
  swap(summary_, other->summary_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcrankProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::os::ProcrankProto_Process* Arena::CreateMaybeMessage< ::android::os::ProcrankProto_Process >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::ProcrankProto_Process >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::ProcrankProto_Summary_Zram* Arena::CreateMaybeMessage< ::android::os::ProcrankProto_Summary_Zram >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::ProcrankProto_Summary_Zram >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::ProcrankProto_Summary_Ram* Arena::CreateMaybeMessage< ::android::os::ProcrankProto_Summary_Ram >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::ProcrankProto_Summary_Ram >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::ProcrankProto_Summary* Arena::CreateMaybeMessage< ::android::os::ProcrankProto_Summary >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::ProcrankProto_Summary >(arena);
}
template<> PROTOBUF_NOINLINE ::android::os::ProcrankProto* Arena::CreateMaybeMessage< ::android::os::ProcrankProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::ProcrankProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
