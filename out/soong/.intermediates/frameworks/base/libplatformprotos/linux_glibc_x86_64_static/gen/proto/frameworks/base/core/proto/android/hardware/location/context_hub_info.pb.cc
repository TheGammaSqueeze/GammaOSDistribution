// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/hardware/location/context_hub_info.proto

#include "frameworks/base/core/proto/android/hardware/location/context_hub_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace android {
namespace hardware {
namespace location {
class ContextHubInfoProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ContextHubInfoProto> _instance;
} _ContextHubInfoProto_default_instance_;
}  // namespace location
}  // namespace hardware
}  // namespace android
static void InitDefaultsscc_info_ContextHubInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::hardware::location::_ContextHubInfoProto_default_instance_;
    new (ptr) ::android::hardware::location::ContextHubInfoProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::hardware::location::ContextHubInfoProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ContextHubInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ContextHubInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, id_),
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, name_),
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, vendor_),
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, toolchain_),
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, platform_version_),
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, static_sw_version_),
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, toolchain_version_),
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, chre_platform_id_),
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, peak_mips_),
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, stopped_power_draw_mw_),
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, sleep_power_draw_mw_),
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, peak_power_draw_mw_),
  PROTOBUF_FIELD_OFFSET(::android::hardware::location::ContextHubInfoProto, max_packet_length_bytes_),
  3,
  0,
  1,
  2,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 18, sizeof(::android::hardware::location::ContextHubInfoProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::hardware::location::_ContextHubInfoProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nKframeworks/base/core/proto/android/har"
  "dware/location/context_hub_info.proto\022\031a"
  "ndroid.hardware.location\0320frameworks/bas"
  "e/core/proto/android/privacy.proto\"\323\002\n\023C"
  "ontextHubInfoProto\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002"
  " \001(\t\022\016\n\006vendor\030\003 \001(\t\022\021\n\ttoolchain\030\004 \001(\t\022"
  "\030\n\020platform_version\030\005 \001(\005\022\031\n\021static_sw_v"
  "ersion\030\006 \001(\005\022\031\n\021toolchain_version\030\007 \001(\005\022"
  "\030\n\020chre_platform_id\030\010 \001(\003\022\021\n\tpeak_mips\030\t"
  " \001(\002\022\035\n\025stopped_power_draw_mw\030\n \001(\002\022\033\n\023s"
  "leep_power_draw_mw\030\013 \001(\002\022\032\n\022peak_power_d"
  "raw_mw\030\014 \001(\002\022\037\n\027max_packet_length_bytes\030"
  "\r \001(\005:\t\232\237\325\207\003\003\010\310\001B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto_deps[1] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto_sccs[1] = {
  &scc_info_ContextHubInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto, "frameworks/base/core/proto/android/hardware/location/context_hub_info.proto", 500,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto, 1, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto), true);
namespace android {
namespace hardware {
namespace location {

// ===================================================================

void ContextHubInfoProto::InitAsDefaultInstance() {
}
class ContextHubInfoProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ContextHubInfoProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_vendor(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_toolchain(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_platform_version(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_static_sw_version(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_toolchain_version(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_chre_platform_id(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_peak_mips(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_stopped_power_draw_mw(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_sleep_power_draw_mw(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_peak_power_draw_mw(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_max_packet_length_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
};

ContextHubInfoProto::ContextHubInfoProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.hardware.location.ContextHubInfoProto)
}
ContextHubInfoProto::ContextHubInfoProto(const ContextHubInfoProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  vendor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_vendor()) {
    vendor_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.vendor_);
  }
  toolchain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_toolchain()) {
    toolchain_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.toolchain_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_packet_length_bytes_) -
    reinterpret_cast<char*>(&id_)) + sizeof(max_packet_length_bytes_));
  // @@protoc_insertion_point(copy_constructor:android.hardware.location.ContextHubInfoProto)
}

void ContextHubInfoProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ContextHubInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vendor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  toolchain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_packet_length_bytes_) -
      reinterpret_cast<char*>(&id_)) + sizeof(max_packet_length_bytes_));
}

ContextHubInfoProto::~ContextHubInfoProto() {
  // @@protoc_insertion_point(destructor:android.hardware.location.ContextHubInfoProto)
  SharedDtor();
}

void ContextHubInfoProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vendor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  toolchain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ContextHubInfoProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ContextHubInfoProto& ContextHubInfoProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ContextHubInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto.base);
  return *internal_default_instance();
}


void ContextHubInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.hardware.location.ContextHubInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      vendor_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      toolchain_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&chre_platform_id_) -
        reinterpret_cast<char*>(&id_)) + sizeof(chre_platform_id_));
  }
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&peak_mips_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_packet_length_bytes_) -
        reinterpret_cast<char*>(&peak_mips_)) + sizeof(max_packet_length_bytes_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ContextHubInfoProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_name(), ptr, ctx, "android.hardware.location.ContextHubInfoProto.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string vendor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_vendor(), ptr, ctx, "android.hardware.location.ContextHubInfoProto.vendor");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string toolchain = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_toolchain(), ptr, ctx, "android.hardware.location.ContextHubInfoProto.toolchain");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 platform_version = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_platform_version(&has_bits);
          platform_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 static_sw_version = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_static_sw_version(&has_bits);
          static_sw_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 toolchain_version = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_toolchain_version(&has_bits);
          toolchain_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 chre_platform_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_chre_platform_id(&has_bits);
          chre_platform_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float peak_mips = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          _Internal::set_has_peak_mips(&has_bits);
          peak_mips_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float stopped_power_draw_mw = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 85)) {
          _Internal::set_has_stopped_power_draw_mw(&has_bits);
          stopped_power_draw_mw_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float sleep_power_draw_mw = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 93)) {
          _Internal::set_has_sleep_power_draw_mw(&has_bits);
          sleep_power_draw_mw_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float peak_power_draw_mw = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          _Internal::set_has_peak_power_draw_mw(&has_bits);
          peak_power_draw_mw_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional int32 max_packet_length_bytes = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_max_packet_length_bytes(&has_bits);
          max_packet_length_bytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ContextHubInfoProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.hardware.location.ContextHubInfoProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.hardware.location.ContextHubInfoProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string vendor = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_vendor()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vendor().data(), static_cast<int>(this->vendor().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.hardware.location.ContextHubInfoProto.vendor");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string toolchain = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_toolchain()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->toolchain().data(), static_cast<int>(this->toolchain().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.hardware.location.ContextHubInfoProto.toolchain");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 platform_version = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_platform_version(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &platform_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 static_sw_version = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_static_sw_version(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &static_sw_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 toolchain_version = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_toolchain_version(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &toolchain_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 chre_platform_id = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_chre_platform_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &chre_platform_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float peak_mips = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (77 & 0xFF)) {
          _Internal::set_has_peak_mips(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &peak_mips_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float stopped_power_draw_mw = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (85 & 0xFF)) {
          _Internal::set_has_stopped_power_draw_mw(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &stopped_power_draw_mw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float sleep_power_draw_mw = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (93 & 0xFF)) {
          _Internal::set_has_sleep_power_draw_mw(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sleep_power_draw_mw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float peak_power_draw_mw = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (101 & 0xFF)) {
          _Internal::set_has_peak_power_draw_mw(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &peak_power_draw_mw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_packet_length_bytes = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (104 & 0xFF)) {
          _Internal::set_has_max_packet_length_bytes(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_packet_length_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.hardware.location.ContextHubInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.hardware.location.ContextHubInfoProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ContextHubInfoProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.hardware.location.ContextHubInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.hardware.location.ContextHubInfoProto.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string vendor = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vendor().data(), static_cast<int>(this->vendor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.hardware.location.ContextHubInfoProto.vendor");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vendor(), output);
  }

  // optional string toolchain = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->toolchain().data(), static_cast<int>(this->toolchain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.hardware.location.ContextHubInfoProto.toolchain");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->toolchain(), output);
  }

  // optional int32 platform_version = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->platform_version(), output);
  }

  // optional int32 static_sw_version = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->static_sw_version(), output);
  }

  // optional int32 toolchain_version = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->toolchain_version(), output);
  }

  // optional int64 chre_platform_id = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(8, this->chre_platform_id(), output);
  }

  // optional float peak_mips = 9;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(9, this->peak_mips(), output);
  }

  // optional float stopped_power_draw_mw = 10;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(10, this->stopped_power_draw_mw(), output);
  }

  // optional float sleep_power_draw_mw = 11;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(11, this->sleep_power_draw_mw(), output);
  }

  // optional float peak_power_draw_mw = 12;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(12, this->peak_power_draw_mw(), output);
  }

  // optional int32 max_packet_length_bytes = 13;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(13, this->max_packet_length_bytes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.hardware.location.ContextHubInfoProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ContextHubInfoProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.hardware.location.ContextHubInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.hardware.location.ContextHubInfoProto.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string vendor = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vendor().data(), static_cast<int>(this->vendor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.hardware.location.ContextHubInfoProto.vendor");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->vendor(), target);
  }

  // optional string toolchain = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->toolchain().data(), static_cast<int>(this->toolchain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.hardware.location.ContextHubInfoProto.toolchain");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->toolchain(), target);
  }

  // optional int32 platform_version = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->platform_version(), target);
  }

  // optional int32 static_sw_version = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->static_sw_version(), target);
  }

  // optional int32 toolchain_version = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->toolchain_version(), target);
  }

  // optional int64 chre_platform_id = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->chre_platform_id(), target);
  }

  // optional float peak_mips = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(9, this->peak_mips(), target);
  }

  // optional float stopped_power_draw_mw = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(10, this->stopped_power_draw_mw(), target);
  }

  // optional float sleep_power_draw_mw = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(11, this->sleep_power_draw_mw(), target);
  }

  // optional float peak_power_draw_mw = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(12, this->peak_power_draw_mw(), target);
  }

  // optional int32 max_packet_length_bytes = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->max_packet_length_bytes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.hardware.location.ContextHubInfoProto)
  return target;
}

size_t ContextHubInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.hardware.location.ContextHubInfoProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string vendor = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->vendor());
    }

    // optional string toolchain = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->toolchain());
    }

    // optional int32 id = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 platform_version = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->platform_version());
    }

    // optional int32 static_sw_version = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->static_sw_version());
    }

    // optional int32 toolchain_version = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->toolchain_version());
    }

    // optional int64 chre_platform_id = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->chre_platform_id());
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional float peak_mips = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 4;
    }

    // optional float stopped_power_draw_mw = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 4;
    }

    // optional float sleep_power_draw_mw = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 4;
    }

    // optional float peak_power_draw_mw = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 4;
    }

    // optional int32 max_packet_length_bytes = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->max_packet_length_bytes());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContextHubInfoProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.hardware.location.ContextHubInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ContextHubInfoProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ContextHubInfoProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.hardware.location.ContextHubInfoProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.hardware.location.ContextHubInfoProto)
    MergeFrom(*source);
  }
}

void ContextHubInfoProto::MergeFrom(const ContextHubInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.hardware.location.ContextHubInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      vendor_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.vendor_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      toolchain_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.toolchain_);
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      platform_version_ = from.platform_version_;
    }
    if (cached_has_bits & 0x00000020u) {
      static_sw_version_ = from.static_sw_version_;
    }
    if (cached_has_bits & 0x00000040u) {
      toolchain_version_ = from.toolchain_version_;
    }
    if (cached_has_bits & 0x00000080u) {
      chre_platform_id_ = from.chre_platform_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      peak_mips_ = from.peak_mips_;
    }
    if (cached_has_bits & 0x00000200u) {
      stopped_power_draw_mw_ = from.stopped_power_draw_mw_;
    }
    if (cached_has_bits & 0x00000400u) {
      sleep_power_draw_mw_ = from.sleep_power_draw_mw_;
    }
    if (cached_has_bits & 0x00000800u) {
      peak_power_draw_mw_ = from.peak_power_draw_mw_;
    }
    if (cached_has_bits & 0x00001000u) {
      max_packet_length_bytes_ = from.max_packet_length_bytes_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ContextHubInfoProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.hardware.location.ContextHubInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContextHubInfoProto::CopyFrom(const ContextHubInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.hardware.location.ContextHubInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContextHubInfoProto::IsInitialized() const {
  return true;
}

void ContextHubInfoProto::InternalSwap(ContextHubInfoProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vendor_.Swap(&other->vendor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  toolchain_.Swap(&other->toolchain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(platform_version_, other->platform_version_);
  swap(static_sw_version_, other->static_sw_version_);
  swap(toolchain_version_, other->toolchain_version_);
  swap(chre_platform_id_, other->chre_platform_id_);
  swap(peak_mips_, other->peak_mips_);
  swap(stopped_power_draw_mw_, other->stopped_power_draw_mw_);
  swap(sleep_power_draw_mw_, other->sleep_power_draw_mw_);
  swap(peak_power_draw_mw_, other->peak_power_draw_mw_);
  swap(max_packet_length_bytes_, other->max_packet_length_bytes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ContextHubInfoProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace location
}  // namespace hardware
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::hardware::location::ContextHubInfoProto* Arena::CreateMaybeMessage< ::android::hardware::location::ContextHubInfoProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::hardware::location::ContextHubInfoProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
