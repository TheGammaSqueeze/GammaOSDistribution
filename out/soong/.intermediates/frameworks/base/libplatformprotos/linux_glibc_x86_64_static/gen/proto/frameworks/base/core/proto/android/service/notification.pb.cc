// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/service/notification.proto

#include "frameworks/base/core/proto/android/service/notification.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_5fgroup_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NotificationChannelGroupProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_5fgroup_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NotificationChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotificationmanager_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotificationmanager_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ComponentNameProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fmedia_2faudioattributes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AudioAttributesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fmedia_2faudioattributes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConditionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DNDPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListenersDisablingEffectsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ManagedServiceInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ManagedServicesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ManagedServicesProto_ServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NotificationRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageRemoteViewInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RankingHelperProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RankingHelperProto_RecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ZenModeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ZenPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ZenRuleProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto;
namespace android {
namespace service {
namespace notification {
class NotificationServiceDumpProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NotificationServiceDumpProto> _instance;
} _NotificationServiceDumpProto_default_instance_;
class NotificationRecordProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NotificationRecordProto> _instance;
} _NotificationRecordProto_default_instance_;
class ListenersDisablingEffectsProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListenersDisablingEffectsProto> _instance;
} _ListenersDisablingEffectsProto_default_instance_;
class ManagedServiceInfoProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ManagedServiceInfoProto> _instance;
} _ManagedServiceInfoProto_default_instance_;
class ManagedServicesProto_ServiceProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ManagedServicesProto_ServiceProto> _instance;
} _ManagedServicesProto_ServiceProto_default_instance_;
class ManagedServicesProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ManagedServicesProto> _instance;
} _ManagedServicesProto_default_instance_;
class RankingHelperProto_RecordProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RankingHelperProto_RecordProto> _instance;
} _RankingHelperProto_RecordProto_default_instance_;
class RankingHelperProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RankingHelperProto> _instance;
} _RankingHelperProto_default_instance_;
class ConditionProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConditionProto> _instance;
} _ConditionProto_default_instance_;
class ZenRuleProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ZenRuleProto> _instance;
} _ZenRuleProto_default_instance_;
class ZenModeProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ZenModeProto> _instance;
} _ZenModeProto_default_instance_;
class ZenPolicyProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ZenPolicyProto> _instance;
} _ZenPolicyProto_default_instance_;
class PackageRemoteViewInfoProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PackageRemoteViewInfoProto> _instance;
} _PackageRemoteViewInfoProto_default_instance_;
class NotificationRemoteViewsProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NotificationRemoteViewsProto> _instance;
} _NotificationRemoteViewsProto_default_instance_;
class DNDModeProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DNDModeProto> _instance;
} _DNDModeProto_default_instance_;
class DNDPolicyProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DNDPolicyProto> _instance;
} _DNDPolicyProto_default_instance_;
}  // namespace notification
}  // namespace service
}  // namespace android
static void InitDefaultsscc_info_ConditionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_ConditionProto_default_instance_;
    new (ptr) ::android::service::notification::ConditionProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::ConditionProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConditionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ConditionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {}};

static void InitDefaultsscc_info_DNDModeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_DNDModeProto_default_instance_;
    new (ptr) ::android::service::notification::DNDModeProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::DNDModeProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DNDModeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_DNDModeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {
      &scc_info_DNDPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,}};

static void InitDefaultsscc_info_DNDPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_DNDPolicyProto_default_instance_;
    new (ptr) ::android::service::notification::DNDPolicyProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::DNDPolicyProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DNDPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_DNDPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {}};

static void InitDefaultsscc_info_ListenersDisablingEffectsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_ListenersDisablingEffectsProto_default_instance_;
    new (ptr) ::android::service::notification::ListenersDisablingEffectsProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::ListenersDisablingEffectsProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListenersDisablingEffectsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ListenersDisablingEffectsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {
      &scc_info_ComponentNameProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto.base,}};

static void InitDefaultsscc_info_ManagedServiceInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_ManagedServiceInfoProto_default_instance_;
    new (ptr) ::android::service::notification::ManagedServiceInfoProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::ManagedServiceInfoProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ManagedServiceInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ManagedServiceInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {
      &scc_info_ComponentNameProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto.base,}};

static void InitDefaultsscc_info_ManagedServicesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_ManagedServicesProto_default_instance_;
    new (ptr) ::android::service::notification::ManagedServicesProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::ManagedServicesProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ManagedServicesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_ManagedServicesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {
      &scc_info_ManagedServicesProto_ServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
      &scc_info_ComponentNameProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto.base,
      &scc_info_ManagedServiceInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,}};

static void InitDefaultsscc_info_ManagedServicesProto_ServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_ManagedServicesProto_ServiceProto_default_instance_;
    new (ptr) ::android::service::notification::ManagedServicesProto_ServiceProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::ManagedServicesProto_ServiceProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ManagedServicesProto_ServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ManagedServicesProto_ServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {}};

static void InitDefaultsscc_info_NotificationRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_NotificationRecordProto_default_instance_;
    new (ptr) ::android::service::notification::NotificationRecordProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::NotificationRecordProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NotificationRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_NotificationRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {
      &scc_info_AudioAttributesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fmedia_2faudioattributes_2eproto.base,}};

static void InitDefaultsscc_info_NotificationRemoteViewsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_NotificationRemoteViewsProto_default_instance_;
    new (ptr) ::android::service::notification::NotificationRemoteViewsProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::NotificationRemoteViewsProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_NotificationRemoteViewsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_NotificationRemoteViewsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {
      &scc_info_PackageRemoteViewInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,}};

static void InitDefaultsscc_info_NotificationServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_NotificationServiceDumpProto_default_instance_;
    new (ptr) ::android::service::notification::NotificationServiceDumpProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::NotificationServiceDumpProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_NotificationServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsscc_info_NotificationServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {
      &scc_info_NotificationRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
      &scc_info_ZenModeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
      &scc_info_ManagedServicesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
      &scc_info_ListenersDisablingEffectsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
      &scc_info_RankingHelperProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,}};

static void InitDefaultsscc_info_PackageRemoteViewInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_PackageRemoteViewInfoProto_default_instance_;
    new (ptr) ::android::service::notification::PackageRemoteViewInfoProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::PackageRemoteViewInfoProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageRemoteViewInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PackageRemoteViewInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {}};

static void InitDefaultsscc_info_RankingHelperProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_RankingHelperProto_default_instance_;
    new (ptr) ::android::service::notification::RankingHelperProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::RankingHelperProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RankingHelperProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_RankingHelperProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {
      &scc_info_RankingHelperProto_RecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,}};

static void InitDefaultsscc_info_RankingHelperProto_RecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_RankingHelperProto_RecordProto_default_instance_;
    new (ptr) ::android::service::notification::RankingHelperProto_RecordProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::RankingHelperProto_RecordProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RankingHelperProto_RecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_RankingHelperProto_RecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {
      &scc_info_NotificationChannelProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto.base,
      &scc_info_NotificationChannelGroupProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_5fgroup_2eproto.base,}};

static void InitDefaultsscc_info_ZenModeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_ZenModeProto_default_instance_;
    new (ptr) ::android::service::notification::ZenModeProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::ZenModeProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ZenModeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_ZenModeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {
      &scc_info_ZenRuleProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
      &scc_info_ComponentNameProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto.base,
      &scc_info_PolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotificationmanager_2eproto.base,}};

static void InitDefaultsscc_info_ZenPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_ZenPolicyProto_default_instance_;
    new (ptr) ::android::service::notification::ZenPolicyProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::ZenPolicyProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ZenPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ZenPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {}};

static void InitDefaultsscc_info_ZenRuleProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::notification::_ZenRuleProto_default_instance_;
    new (ptr) ::android::service::notification::ZenRuleProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::notification::ZenRuleProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ZenRuleProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_ZenRuleProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto}, {
      &scc_info_ConditionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
      &scc_info_ComponentNameProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto.base,
      &scc_info_ZenPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto[16];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto[9];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationServiceDumpProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationServiceDumpProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationServiceDumpProto, records_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationServiceDumpProto, zen_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationServiceDumpProto, notification_listeners_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationServiceDumpProto, listener_hints_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationServiceDumpProto, listeners_disabling_effects_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationServiceDumpProto, notification_assistants_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationServiceDumpProto, condition_providers_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationServiceDumpProto, ranking_config_),
  ~0u,
  0,
  1,
  5,
  ~0u,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRecordProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRecordProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRecordProto, key_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRecordProto, state_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRecordProto, flags_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRecordProto, channel_id_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRecordProto, sound_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRecordProto, audio_attributes_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRecordProto, can_vibrate_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRecordProto, can_show_light_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRecordProto, group_key_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRecordProto, importance_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRecordProto, package_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRecordProto, delegate_package_),
  0,
  7,
  8,
  1,
  2,
  6,
  9,
  10,
  3,
  11,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ListenersDisablingEffectsProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ListenersDisablingEffectsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ListenersDisablingEffectsProto, hint_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ListenersDisablingEffectsProto, listener_components_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServiceInfoProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServiceInfoProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServiceInfoProto, component_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServiceInfoProto, user_id_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServiceInfoProto, service_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServiceInfoProto, is_system_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServiceInfoProto, is_guest_),
  1,
  2,
  0,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServicesProto_ServiceProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServicesProto_ServiceProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServicesProto_ServiceProto, name_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServicesProto_ServiceProto, user_id_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServicesProto_ServiceProto, is_primary_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServicesProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServicesProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServicesProto, caption_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServicesProto, approved_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServicesProto, enabled_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServicesProto, live_services_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ManagedServicesProto, snoozed_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto_RecordProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto_RecordProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto_RecordProto, package_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto_RecordProto, uid_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto_RecordProto, importance_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto_RecordProto, priority_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto_RecordProto, visibility_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto_RecordProto, show_badge_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto_RecordProto, channels_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto_RecordProto, channel_groups_),
  0,
  1,
  2,
  3,
  4,
  5,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto, notification_signal_extractors_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto, records_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::RankingHelperProto, records_restored_without_uid_),
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ConditionProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ConditionProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ConditionProto, id_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ConditionProto, summary_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ConditionProto, line_1_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ConditionProto, line_2_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ConditionProto, icon_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ConditionProto, state_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ConditionProto, flags_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenRuleProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenRuleProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenRuleProto, id_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenRuleProto, name_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenRuleProto, creation_time_ms_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenRuleProto, enabled_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenRuleProto, enabler_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenRuleProto, is_snoozing_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenRuleProto, zen_mode_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenRuleProto, condition_id_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenRuleProto, condition_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenRuleProto, component_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenRuleProto, zenpolicy_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenRuleProto, modified_),
  0,
  1,
  7,
  9,
  2,
  10,
  8,
  3,
  4,
  5,
  6,
  11,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenModeProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenModeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenModeProto, zen_mode_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenModeProto, enabled_active_conditions_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenModeProto, suppressed_effects_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenModeProto, suppressors_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenModeProto, policy_),
  1,
  ~0u,
  2,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, reminders_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, events_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, messages_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, calls_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, repeat_callers_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, alarms_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, media_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, system_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, full_screen_intent_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, lights_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, peek_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, status_bar_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, badge_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, ambient_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, notification_list_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, priority_calls_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::ZenPolicyProto, priority_messages_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::PackageRemoteViewInfoProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::PackageRemoteViewInfoProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::PackageRemoteViewInfoProto, package_name_),
  0,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRemoteViewsProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRemoteViewsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::NotificationRemoteViewsProto, package_remote_view_info_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDModeProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDModeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDModeProto, user_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDModeProto, enabled_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDModeProto, channels_bypassing_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDModeProto, zen_mode_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDModeProto, id_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDModeProto, uid_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDModeProto, policy_),
  2,
  3,
  4,
  6,
  0,
  5,
  1,
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, calls_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, repeat_callers_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, messages_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, conversations_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, reminders_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, events_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, alarms_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, media_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, system_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, fullscreen_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, lights_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, peek_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, status_bar_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, badge_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, ambient_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, notification_list_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, allow_calls_from_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, allow_messages_from_),
  PROTOBUF_FIELD_OFFSET(::android::service::notification::DNDPolicyProto, allow_conversations_from_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::android::service::notification::NotificationServiceDumpProto)},
  { 21, 38, sizeof(::android::service::notification::NotificationRecordProto)},
  { 50, 57, sizeof(::android::service::notification::ListenersDisablingEffectsProto)},
  { 59, 69, sizeof(::android::service::notification::ManagedServiceInfoProto)},
  { 74, 82, sizeof(::android::service::notification::ManagedServicesProto_ServiceProto)},
  { 85, 95, sizeof(::android::service::notification::ManagedServicesProto)},
  { 100, 113, sizeof(::android::service::notification::RankingHelperProto_RecordProto)},
  { 121, 129, sizeof(::android::service::notification::RankingHelperProto)},
  { 132, 144, sizeof(::android::service::notification::ConditionProto)},
  { 151, 168, sizeof(::android::service::notification::ZenRuleProto)},
  { 180, 190, sizeof(::android::service::notification::ZenModeProto)},
  { 195, 217, sizeof(::android::service::notification::ZenPolicyProto)},
  { 234, 240, sizeof(::android::service::notification::PackageRemoteViewInfoProto)},
  { 241, 247, sizeof(::android::service::notification::NotificationRemoteViewsProto)},
  { 248, 260, sizeof(::android::service::notification::DNDModeProto)},
  { 267, 291, sizeof(::android::service::notification::DNDPolicyProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_NotificationServiceDumpProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_NotificationRecordProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_ListenersDisablingEffectsProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_ManagedServiceInfoProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_ManagedServicesProto_ServiceProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_ManagedServicesProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_RankingHelperProto_RecordProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_RankingHelperProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_ConditionProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_ZenRuleProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_ZenModeProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_ZenPolicyProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_PackageRemoteViewInfoProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_NotificationRemoteViewsProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_DNDModeProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::service::notification::_DNDPolicyProto_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n=frameworks/base/core/proto/android/ser"
  "vice/notification.proto\022\034android.service"
  ".notification\032Aframeworks/base/core/prot"
  "o/android/app/notification_channel.proto"
  "\032Gframeworks/base/core/proto/android/app"
  "/notification_channel_group.proto\032@frame"
  "works/base/core/proto/android/app/notifi"
  "cationmanager.proto\032\?frameworks/base/cor"
  "e/proto/android/content/component_name.p"
  "roto\032>frameworks/base/core/proto/android"
  "/media/audioattributes.proto\0320frameworks"
  "/base/core/proto/android/privacy.proto\"\351"
  "\004\n\034NotificationServiceDumpProto\022F\n\007recor"
  "ds\030\001 \003(\01325.android.service.notification."
  "NotificationRecordProto\0227\n\003zen\030\002 \001(\0132*.a"
  "ndroid.service.notification.ZenModeProto"
  "\022R\n\026notification_listeners\030\003 \001(\01322.andro"
  "id.service.notification.ManagedServicesP"
  "roto\022\026\n\016listener_hints\030\004 \001(\005\022a\n\033listener"
  "s_disabling_effects\030\005 \003(\0132<.android.serv"
  "ice.notification.ListenersDisablingEffec"
  "tsProto\022S\n\027notification_assistants\030\006 \001(\013"
  "22.android.service.notification.ManagedS"
  "ervicesProto\022O\n\023condition_providers\030\007 \001("
  "\01322.android.service.notification.Managed"
  "ServicesProto\022H\n\016ranking_config\030\010 \001(\01320."
  "android.service.notification.RankingHelp"
  "erProto:\t\232\237\325\207\003\003\010\310\001\"\273\003\n\027NotificationRecor"
  "dProto\022\013\n\003key\030\001 \001(\t\022J\n\005state\030\002 \001(\0162;.and"
  "roid.service.notification.NotificationRe"
  "cordProto.State\022\r\n\005flags\030\003 \001(\005\022\034\n\nchanne"
  "l_id\030\004 \001(\tB\010\232\237\325\207\003\002\010d\022\027\n\005sound\030\005 \001(\tB\010\232\237\325"
  "\207\003\002\010d\022=\n\020audio_attributes\030\006 \001(\0132#.androi"
  "d.media.AudioAttributesProto\022\023\n\013can_vibr"
  "ate\030\007 \001(\010\022\026\n\016can_show_light\030\010 \001(\010\022\033\n\tgro"
  "up_key\030\t \001(\tB\010\232\237\325\207\003\002\010d\022\022\n\nimportance\030\n \001"
  "(\021\022\017\n\007package\030\013 \001(\t\022\030\n\020delegate_package\030"
  "\014 \001(\t\".\n\005State\022\014\n\010ENQUEUED\020\000\022\n\n\006POSTED\020\001"
  "\022\013\n\007SNOOZED\020\002:\t\232\237\325\207\003\003\010\310\001\"\201\001\n\036ListenersDi"
  "sablingEffectsProto\022\014\n\004hint\030\001 \001(\005\022@\n\023lis"
  "tener_components\030\003 \003(\0132#.android.content"
  ".ComponentNameProto:\t\232\237\325\207\003\003\010\310\001J\004\010\002\020\003\"\243\001\n"
  "\027ManagedServiceInfoProto\0226\n\tcomponent\030\001 "
  "\001(\0132#.android.content.ComponentNameProto"
  "\022\017\n\007user_id\030\002 \001(\005\022\017\n\007service\030\003 \001(\t\022\021\n\tis"
  "_system\030\004 \001(\010\022\020\n\010is_guest\030\005 \001(\010:\t\232\237\325\207\003\003\010"
  "\310\001\"\215\003\n\024ManagedServicesProto\022\017\n\007caption\030\001"
  " \001(\t\022Q\n\010approved\030\002 \003(\0132\?.android.service"
  ".notification.ManagedServicesProto.Servi"
  "ceProto\0224\n\007enabled\030\003 \003(\0132#.android.conte"
  "nt.ComponentNameProto\022L\n\rlive_services\030\004"
  " \003(\01325.android.service.notification.Mana"
  "gedServiceInfoProto\0224\n\007snoozed\030\005 \003(\0132#.a"
  "ndroid.content.ComponentNameProto\032L\n\014Ser"
  "viceProto\022\014\n\004name\030\001 \003(\t\022\017\n\007user_id\030\002 \001(\005"
  "\022\022\n\nis_primary\030\003 \001(\010:\t\232\237\325\207\003\003\010\310\001:\t\232\237\325\207\003\003\010"
  "\310\001\"\376\003\n\022RankingHelperProto\022&\n\036notificatio"
  "n_signal_extractors\030\001 \003(\t\022M\n\007records\030\002 \003"
  "(\0132<.android.service.notification.Rankin"
  "gHelperProto.RecordProto\022b\n\034records_rest"
  "ored_without_uid\030\003 \003(\0132<.android.service"
  ".notification.RankingHelperProto.RecordP"
  "roto\032\201\002\n\013RecordProto\022\017\n\007package\030\001 \001(\t\022\013\n"
  "\003uid\030\002 \001(\005\022\022\n\nimportance\030\003 \001(\021\022\020\n\010priori"
  "ty\030\004 \001(\005\022\022\n\nvisibility\030\005 \001(\021\022\022\n\nshow_bad"
  "ge\030\006 \001(\010\0227\n\010channels\030\007 \003(\0132%.android.app"
  ".NotificationChannelProto\022B\n\016channel_gro"
  "ups\030\010 \003(\0132*.android.app.NotificationChan"
  "nelGroupProto:\t\232\237\325\207\003\003\010\310\001:\t\232\237\325\207\003\003\010\310\001\"\246\002\n\016"
  "ConditionProto\022\n\n\002id\030\001 \001(\t\022\017\n\007summary\030\002 "
  "\001(\t\022\016\n\006line_1\030\003 \001(\t\022\016\n\006line_2\030\004 \001(\t\022\027\n\004i"
  "con\030\005 \001(\005B\t\232\237\325\207\003\003\010\310\001\022L\n\005state\030\006 \001(\01622.an"
  "droid.service.notification.ConditionProt"
  "o.StateB\t\232\237\325\207\003\003\010\310\001\022\030\n\005flags\030\007 \001(\005B\t\232\237\325\207\003"
  "\003\010\310\001\"L\n\005State\022\017\n\013STATE_FALSE\020\000\022\016\n\nSTATE_"
  "TRUE\020\001\022\021\n\rSTATE_UNKNOWN\020\002\022\017\n\013STATE_ERROR"
  "\020\003:\010\232\237\325\207\003\002\010d\"\340\003\n\014ZenRuleProto\022\n\n\002id\030\001 \001("
  "\t\022\014\n\004name\030\002 \001(\t\022#\n\020creation_time_ms\030\003 \001("
  "\003B\t\232\237\325\207\003\003\010\310\001\022\032\n\007enabled\030\004 \001(\010B\t\232\237\325\207\003\003\010\310\001"
  "\022\032\n\007enabler\030\005 \001(\tB\t\232\237\325\207\003\003\010\310\001\022\036\n\013is_snooz"
  "ing\030\006 \001(\010B\t\232\237\325\207\003\003\010\310\001\022B\n\010zen_mode\030\007 \001(\0162%"
  ".android.service.notification.ZenModeB\t\232"
  "\237\325\207\003\003\010\310\001\022\024\n\014condition_id\030\010 \001(\t\022\?\n\tcondit"
  "ion\030\t \001(\0132,.android.service.notification"
  ".ConditionProto\0226\n\tcomponent\030\n \001(\0132#.and"
  "roid.content.ComponentNameProto\022\?\n\tzenPo"
  "licy\030\013 \001(\0132,.android.service.notificatio"
  "n.ZenPolicyProto\022\033\n\010modified\030\014 \001(\010B\t\232\237\325\207"
  "\003\003\010\310\001:\010\232\237\325\207\003\002\010d\"\241\002\n\014ZenModeProto\0227\n\010zen_"
  "mode\030\001 \001(\0162%.android.service.notificatio"
  "n.ZenMode\022M\n\031enabled_active_conditions\030\002"
  " \003(\0132*.android.service.notification.ZenR"
  "uleProto\022\032\n\022suppressed_effects\030\003 \001(\005\0228\n\013"
  "suppressors\030\004 \003(\0132#.android.content.Comp"
  "onentNameProto\022(\n\006policy\030\005 \001(\0132\030.android"
  ".app.PolicyProto:\t\232\237\325\207\003\003\010\310\001\"\375\n\n\016ZenPolic"
  "yProto\022E\n\treminders\030\001 \001(\01622.android.serv"
  "ice.notification.ZenPolicyProto.State\022B\n"
  "\006events\030\002 \001(\01622.android.service.notifica"
  "tion.ZenPolicyProto.State\022D\n\010messages\030\003 "
  "\001(\01622.android.service.notification.ZenPo"
  "licyProto.State\022A\n\005calls\030\004 \001(\01622.android"
  ".service.notification.ZenPolicyProto.Sta"
  "te\022J\n\016repeat_callers\030\005 \001(\01622.android.ser"
  "vice.notification.ZenPolicyProto.State\022B"
  "\n\006alarms\030\006 \001(\01622.android.service.notific"
  "ation.ZenPolicyProto.State\022A\n\005media\030\007 \001("
  "\01622.android.service.notification.ZenPoli"
  "cyProto.State\022B\n\006system\030\010 \001(\01622.android."
  "service.notification.ZenPolicyProto.Stat"
  "e\022N\n\022full_screen_intent\030\t \001(\01622.android."
  "service.notification.ZenPolicyProto.Stat"
  "e\022B\n\006lights\030\n \001(\01622.android.service.noti"
  "fication.ZenPolicyProto.State\022@\n\004peek\030\013 "
  "\001(\01622.android.service.notification.ZenPo"
  "licyProto.State\022F\n\nstatus_bar\030\014 \001(\01622.an"
  "droid.service.notification.ZenPolicyProt"
  "o.State\022A\n\005badge\030\r \001(\01622.android.service"
  ".notification.ZenPolicyProto.State\022C\n\007am"
  "bient\030\016 \001(\01622.android.service.notificati"
  "on.ZenPolicyProto.State\022M\n\021notification_"
  "list\030\017 \001(\01622.android.service.notificatio"
  "n.ZenPolicyProto.State\022K\n\016priority_calls"
  "\030\020 \001(\01623.android.service.notification.Ze"
  "nPolicyProto.Sender\022N\n\021priority_messages"
  "\030\021 \001(\01623.android.service.notification.Ze"
  "nPolicyProto.Sender\"=\n\005State\022\017\n\013STATE_UN"
  "SET\020\000\022\017\n\013STATE_ALLOW\020\001\022\022\n\016STATE_DISALLOW"
  "\020\002\"d\n\006Sender\022\020\n\014SENDER_UNSET\020\000\022\016\n\nSENDER"
  "_ANY\020\001\022\023\n\017SENDER_CONTACTS\020\002\022\022\n\016SENDER_ST"
  "ARRED\020\003\022\017\n\013SENDER_NONE\020\004:\t\232\237\325\207\003\003\010\310\001\"2\n\032P"
  "ackageRemoteViewInfoProto\022\024\n\014package_nam"
  "e\030\001 \001(\t\"z\n\034NotificationRemoteViewsProto\022"
  "Z\n\030package_remote_view_info\030\001 \003(\01328.andr"
  "oid.service.notification.PackageRemoteVi"
  "ewInfoProto\"\362\002\n\014DNDModeProto\022\014\n\004user\030\001 \001"
  "(\005\022\017\n\007enabled\030\002 \001(\010\022\032\n\022channels_bypassin"
  "g\030\003 \001(\010\022A\n\010zen_mode\030\004 \001(\0162/.android.serv"
  "ice.notification.DNDModeProto.Mode\022\n\n\002id"
  "\030\005 \001(\t\022\013\n\003uid\030\006 \001(\005\022<\n\006policy\030\007 \001(\0132,.an"
  "droid.service.notification.DNDPolicyProt"
  "o\"\214\001\n\004Mode\022\030\n\013ROOT_CONFIG\020\377\377\377\377\377\377\377\377\377\001\022\020\n\014"
  "ZEN_MODE_OFF\020\000\022$\n ZEN_MODE_IMPORTANT_INT"
  "ERRUPTIONS\020\001\022\035\n\031ZEN_MODE_NO_INTERRUPTION"
  "S\020\002\022\023\n\017ZEN_MODE_ALARMS\020\003\"\201\r\n\016DNDPolicyPr"
  "oto\022A\n\005calls\030\001 \001(\01622.android.service.not"
  "ification.DNDPolicyProto.State\022J\n\016repeat"
  "_callers\030\002 \001(\01622.android.service.notific"
  "ation.DNDPolicyProto.State\022D\n\010messages\030\003"
  " \001(\01622.android.service.notification.DNDP"
  "olicyProto.State\022I\n\rconversations\030\004 \001(\0162"
  "2.android.service.notification.DNDPolicy"
  "Proto.State\022E\n\treminders\030\005 \001(\01622.android"
  ".service.notification.DNDPolicyProto.Sta"
  "te\022B\n\006events\030\006 \001(\01622.android.service.not"
  "ification.DNDPolicyProto.State\022B\n\006alarms"
  "\030\007 \001(\01622.android.service.notification.DN"
  "DPolicyProto.State\022A\n\005media\030\010 \001(\01622.andr"
  "oid.service.notification.DNDPolicyProto."
  "State\022B\n\006system\030\t \001(\01622.android.service."
  "notification.DNDPolicyProto.State\022F\n\nful"
  "lscreen\030\n \001(\01622.android.service.notifica"
  "tion.DNDPolicyProto.State\022B\n\006lights\030\013 \001("
  "\01622.android.service.notification.DNDPoli"
  "cyProto.State\022@\n\004peek\030\014 \001(\01622.android.se"
  "rvice.notification.DNDPolicyProto.State\022"
  "F\n\nstatus_bar\030\r \001(\01622.android.service.no"
  "tification.DNDPolicyProto.State\022A\n\005badge"
  "\030\016 \001(\01622.android.service.notification.DN"
  "DPolicyProto.State\022C\n\007ambient\030\017 \001(\01622.an"
  "droid.service.notification.DNDPolicyProt"
  "o.State\022M\n\021notification_list\030\020 \001(\01622.and"
  "roid.service.notification.DNDPolicyProto"
  ".State\022Q\n\020allow_calls_from\030\021 \001(\01627.andro"
  "id.service.notification.DNDPolicyProto.P"
  "eopleType\022T\n\023allow_messages_from\030\022 \001(\01627"
  ".android.service.notification.DNDPolicyP"
  "roto.PeopleType\022_\n\030allow_conversations_f"
  "rom\030\023 \001(\0162=.android.service.notification"
  ".DNDPolicyProto.ConversationType\"=\n\005Stat"
  "e\022\017\n\013STATE_UNSET\020\000\022\017\n\013STATE_ALLOW\020\001\022\022\n\016S"
  "TATE_DISALLOW\020\002\"k\n\nPeopleType\022\020\n\014PEOPLE_"
  "UNSET\020\000\022\021\n\rPEOPLE_ANYONE\020\001\022\023\n\017PEOPLE_CON"
  "TACTS\020\002\022\022\n\016PEOPLE_STARRED\020\003\022\017\n\013PEOPLE_NO"
  "NE\020\004\"V\n\020ConversationType\022\016\n\nCONV_UNSET\020\000"
  "\022\017\n\013CONV_ANYONE\020\001\022\022\n\016CONV_IMPORTANT\020\002\022\r\n"
  "\tCONV_NONE\020\003*u\n\007ZenMode\022\020\n\014ZEN_MODE_OFF\020"
  "\000\022$\n ZEN_MODE_IMPORTANT_INTERRUPTIONS\020\001\022"
  "\035\n\031ZEN_MODE_NO_INTERRUPTIONS\020\002\022\023\n\017ZEN_MO"
  "DE_ALARMS\020\003B\034B\030NotificationServiceProtoP"
  "\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto_deps[6] = {
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotification_5fchannel_5fgroup_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fnotificationmanager_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2fcomponent_5fname_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fmedia_2faudioattributes_2eproto,
  &::descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fprivacy_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto_sccs[16] = {
  &scc_info_ConditionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_DNDModeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_DNDPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_ListenersDisablingEffectsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_ManagedServiceInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_ManagedServicesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_ManagedServicesProto_ServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_NotificationRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_NotificationRemoteViewsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_NotificationServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_PackageRemoteViewInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_RankingHelperProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_RankingHelperProto_RecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_ZenModeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_ZenPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
  &scc_info_ZenRuleProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto = {
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto, "frameworks/base/core/proto/android/service/notification.proto", 7601,
  &descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto_once, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto_sccs, descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto_deps, 16, 6,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto, 16, file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto, file_level_service_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto), true);
namespace android {
namespace service {
namespace notification {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* NotificationRecordProto_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto[0];
}
bool NotificationRecordProto_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr NotificationRecordProto_State NotificationRecordProto::ENQUEUED;
constexpr NotificationRecordProto_State NotificationRecordProto::POSTED;
constexpr NotificationRecordProto_State NotificationRecordProto::SNOOZED;
constexpr NotificationRecordProto_State NotificationRecordProto::State_MIN;
constexpr NotificationRecordProto_State NotificationRecordProto::State_MAX;
constexpr int NotificationRecordProto::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ConditionProto_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto[1];
}
bool ConditionProto_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ConditionProto_State ConditionProto::STATE_FALSE;
constexpr ConditionProto_State ConditionProto::STATE_TRUE;
constexpr ConditionProto_State ConditionProto::STATE_UNKNOWN;
constexpr ConditionProto_State ConditionProto::STATE_ERROR;
constexpr ConditionProto_State ConditionProto::State_MIN;
constexpr ConditionProto_State ConditionProto::State_MAX;
constexpr int ConditionProto::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ZenPolicyProto_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto[2];
}
bool ZenPolicyProto_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ZenPolicyProto_State ZenPolicyProto::STATE_UNSET;
constexpr ZenPolicyProto_State ZenPolicyProto::STATE_ALLOW;
constexpr ZenPolicyProto_State ZenPolicyProto::STATE_DISALLOW;
constexpr ZenPolicyProto_State ZenPolicyProto::State_MIN;
constexpr ZenPolicyProto_State ZenPolicyProto::State_MAX;
constexpr int ZenPolicyProto::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ZenPolicyProto_Sender_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto[3];
}
bool ZenPolicyProto_Sender_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ZenPolicyProto_Sender ZenPolicyProto::SENDER_UNSET;
constexpr ZenPolicyProto_Sender ZenPolicyProto::SENDER_ANY;
constexpr ZenPolicyProto_Sender ZenPolicyProto::SENDER_CONTACTS;
constexpr ZenPolicyProto_Sender ZenPolicyProto::SENDER_STARRED;
constexpr ZenPolicyProto_Sender ZenPolicyProto::SENDER_NONE;
constexpr ZenPolicyProto_Sender ZenPolicyProto::Sender_MIN;
constexpr ZenPolicyProto_Sender ZenPolicyProto::Sender_MAX;
constexpr int ZenPolicyProto::Sender_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DNDModeProto_Mode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto[4];
}
bool DNDModeProto_Mode_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr DNDModeProto_Mode DNDModeProto::ROOT_CONFIG;
constexpr DNDModeProto_Mode DNDModeProto::ZEN_MODE_OFF;
constexpr DNDModeProto_Mode DNDModeProto::ZEN_MODE_IMPORTANT_INTERRUPTIONS;
constexpr DNDModeProto_Mode DNDModeProto::ZEN_MODE_NO_INTERRUPTIONS;
constexpr DNDModeProto_Mode DNDModeProto::ZEN_MODE_ALARMS;
constexpr DNDModeProto_Mode DNDModeProto::Mode_MIN;
constexpr DNDModeProto_Mode DNDModeProto::Mode_MAX;
constexpr int DNDModeProto::Mode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DNDPolicyProto_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto[5];
}
bool DNDPolicyProto_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr DNDPolicyProto_State DNDPolicyProto::STATE_UNSET;
constexpr DNDPolicyProto_State DNDPolicyProto::STATE_ALLOW;
constexpr DNDPolicyProto_State DNDPolicyProto::STATE_DISALLOW;
constexpr DNDPolicyProto_State DNDPolicyProto::State_MIN;
constexpr DNDPolicyProto_State DNDPolicyProto::State_MAX;
constexpr int DNDPolicyProto::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DNDPolicyProto_PeopleType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto[6];
}
bool DNDPolicyProto_PeopleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr DNDPolicyProto_PeopleType DNDPolicyProto::PEOPLE_UNSET;
constexpr DNDPolicyProto_PeopleType DNDPolicyProto::PEOPLE_ANYONE;
constexpr DNDPolicyProto_PeopleType DNDPolicyProto::PEOPLE_CONTACTS;
constexpr DNDPolicyProto_PeopleType DNDPolicyProto::PEOPLE_STARRED;
constexpr DNDPolicyProto_PeopleType DNDPolicyProto::PEOPLE_NONE;
constexpr DNDPolicyProto_PeopleType DNDPolicyProto::PeopleType_MIN;
constexpr DNDPolicyProto_PeopleType DNDPolicyProto::PeopleType_MAX;
constexpr int DNDPolicyProto::PeopleType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DNDPolicyProto_ConversationType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto[7];
}
bool DNDPolicyProto_ConversationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr DNDPolicyProto_ConversationType DNDPolicyProto::CONV_UNSET;
constexpr DNDPolicyProto_ConversationType DNDPolicyProto::CONV_ANYONE;
constexpr DNDPolicyProto_ConversationType DNDPolicyProto::CONV_IMPORTANT;
constexpr DNDPolicyProto_ConversationType DNDPolicyProto::CONV_NONE;
constexpr DNDPolicyProto_ConversationType DNDPolicyProto::ConversationType_MIN;
constexpr DNDPolicyProto_ConversationType DNDPolicyProto::ConversationType_MAX;
constexpr int DNDPolicyProto::ConversationType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ZenMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto);
  return file_level_enum_descriptors_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto[8];
}
bool ZenMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void NotificationServiceDumpProto::InitAsDefaultInstance() {
  ::android::service::notification::_NotificationServiceDumpProto_default_instance_._instance.get_mutable()->zen_ = const_cast< ::android::service::notification::ZenModeProto*>(
      ::android::service::notification::ZenModeProto::internal_default_instance());
  ::android::service::notification::_NotificationServiceDumpProto_default_instance_._instance.get_mutable()->notification_listeners_ = const_cast< ::android::service::notification::ManagedServicesProto*>(
      ::android::service::notification::ManagedServicesProto::internal_default_instance());
  ::android::service::notification::_NotificationServiceDumpProto_default_instance_._instance.get_mutable()->notification_assistants_ = const_cast< ::android::service::notification::ManagedServicesProto*>(
      ::android::service::notification::ManagedServicesProto::internal_default_instance());
  ::android::service::notification::_NotificationServiceDumpProto_default_instance_._instance.get_mutable()->condition_providers_ = const_cast< ::android::service::notification::ManagedServicesProto*>(
      ::android::service::notification::ManagedServicesProto::internal_default_instance());
  ::android::service::notification::_NotificationServiceDumpProto_default_instance_._instance.get_mutable()->ranking_config_ = const_cast< ::android::service::notification::RankingHelperProto*>(
      ::android::service::notification::RankingHelperProto::internal_default_instance());
}
class NotificationServiceDumpProto::_Internal {
 public:
  using HasBits = decltype(std::declval<NotificationServiceDumpProto>()._has_bits_);
  static const ::android::service::notification::ZenModeProto& zen(const NotificationServiceDumpProto* msg);
  static void set_has_zen(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::android::service::notification::ManagedServicesProto& notification_listeners(const NotificationServiceDumpProto* msg);
  static void set_has_notification_listeners(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_listener_hints(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::android::service::notification::ManagedServicesProto& notification_assistants(const NotificationServiceDumpProto* msg);
  static void set_has_notification_assistants(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::android::service::notification::ManagedServicesProto& condition_providers(const NotificationServiceDumpProto* msg);
  static void set_has_condition_providers(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::android::service::notification::RankingHelperProto& ranking_config(const NotificationServiceDumpProto* msg);
  static void set_has_ranking_config(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::android::service::notification::ZenModeProto&
NotificationServiceDumpProto::_Internal::zen(const NotificationServiceDumpProto* msg) {
  return *msg->zen_;
}
const ::android::service::notification::ManagedServicesProto&
NotificationServiceDumpProto::_Internal::notification_listeners(const NotificationServiceDumpProto* msg) {
  return *msg->notification_listeners_;
}
const ::android::service::notification::ManagedServicesProto&
NotificationServiceDumpProto::_Internal::notification_assistants(const NotificationServiceDumpProto* msg) {
  return *msg->notification_assistants_;
}
const ::android::service::notification::ManagedServicesProto&
NotificationServiceDumpProto::_Internal::condition_providers(const NotificationServiceDumpProto* msg) {
  return *msg->condition_providers_;
}
const ::android::service::notification::RankingHelperProto&
NotificationServiceDumpProto::_Internal::ranking_config(const NotificationServiceDumpProto* msg) {
  return *msg->ranking_config_;
}
NotificationServiceDumpProto::NotificationServiceDumpProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.NotificationServiceDumpProto)
}
NotificationServiceDumpProto::NotificationServiceDumpProto(const NotificationServiceDumpProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      records_(from.records_),
      listeners_disabling_effects_(from.listeners_disabling_effects_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_zen()) {
    zen_ = new ::android::service::notification::ZenModeProto(*from.zen_);
  } else {
    zen_ = nullptr;
  }
  if (from.has_notification_listeners()) {
    notification_listeners_ = new ::android::service::notification::ManagedServicesProto(*from.notification_listeners_);
  } else {
    notification_listeners_ = nullptr;
  }
  if (from.has_notification_assistants()) {
    notification_assistants_ = new ::android::service::notification::ManagedServicesProto(*from.notification_assistants_);
  } else {
    notification_assistants_ = nullptr;
  }
  if (from.has_condition_providers()) {
    condition_providers_ = new ::android::service::notification::ManagedServicesProto(*from.condition_providers_);
  } else {
    condition_providers_ = nullptr;
  }
  if (from.has_ranking_config()) {
    ranking_config_ = new ::android::service::notification::RankingHelperProto(*from.ranking_config_);
  } else {
    ranking_config_ = nullptr;
  }
  listener_hints_ = from.listener_hints_;
  // @@protoc_insertion_point(copy_constructor:android.service.notification.NotificationServiceDumpProto)
}

void NotificationServiceDumpProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NotificationServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  ::memset(&zen_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&listener_hints_) -
      reinterpret_cast<char*>(&zen_)) + sizeof(listener_hints_));
}

NotificationServiceDumpProto::~NotificationServiceDumpProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.NotificationServiceDumpProto)
  SharedDtor();
}

void NotificationServiceDumpProto::SharedDtor() {
  if (this != internal_default_instance()) delete zen_;
  if (this != internal_default_instance()) delete notification_listeners_;
  if (this != internal_default_instance()) delete notification_assistants_;
  if (this != internal_default_instance()) delete condition_providers_;
  if (this != internal_default_instance()) delete ranking_config_;
}

void NotificationServiceDumpProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotificationServiceDumpProto& NotificationServiceDumpProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NotificationServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void NotificationServiceDumpProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.NotificationServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  records_.Clear();
  listeners_disabling_effects_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(zen_ != nullptr);
      zen_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(notification_listeners_ != nullptr);
      notification_listeners_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(notification_assistants_ != nullptr);
      notification_assistants_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(condition_providers_ != nullptr);
      condition_providers_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(ranking_config_ != nullptr);
      ranking_config_->Clear();
    }
  }
  listener_hints_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NotificationServiceDumpProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.service.notification.NotificationRecordProto records = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_records(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenModeProto zen = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_zen(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ManagedServicesProto notification_listeners = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_notification_listeners(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 listener_hints = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_listener_hints(&has_bits);
          listener_hints_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.notification.ListenersDisablingEffectsProto listeners_disabling_effects = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_listeners_disabling_effects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ManagedServicesProto notification_assistants = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_notification_assistants(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ManagedServicesProto condition_providers = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_condition_providers(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.RankingHelperProto ranking_config = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(mutable_ranking_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NotificationServiceDumpProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.NotificationServiceDumpProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.service.notification.NotificationRecordProto records = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenModeProto zen = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_zen()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ManagedServicesProto notification_listeners = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_notification_listeners()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 listener_hints = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_listener_hints(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &listener_hints_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.notification.ListenersDisablingEffectsProto listeners_disabling_effects = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_listeners_disabling_effects()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ManagedServicesProto notification_assistants = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_notification_assistants()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ManagedServicesProto condition_providers = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_condition_providers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.RankingHelperProto ranking_config = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_ranking_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.NotificationServiceDumpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.NotificationServiceDumpProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NotificationServiceDumpProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.NotificationServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.service.notification.NotificationRecordProto records = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->records(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .android.service.notification.ZenModeProto zen = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::zen(this), output);
  }

  // optional .android.service.notification.ManagedServicesProto notification_listeners = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::notification_listeners(this), output);
  }

  // optional int32 listener_hints = 4;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->listener_hints(), output);
  }

  // repeated .android.service.notification.ListenersDisablingEffectsProto listeners_disabling_effects = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listeners_disabling_effects_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->listeners_disabling_effects(static_cast<int>(i)),
      output);
  }

  // optional .android.service.notification.ManagedServicesProto notification_assistants = 6;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::notification_assistants(this), output);
  }

  // optional .android.service.notification.ManagedServicesProto condition_providers = 7;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::condition_providers(this), output);
  }

  // optional .android.service.notification.RankingHelperProto ranking_config = 8;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, _Internal::ranking_config(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.NotificationServiceDumpProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* NotificationServiceDumpProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.NotificationServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.service.notification.NotificationRecordProto records = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->records(static_cast<int>(i)), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .android.service.notification.ZenModeProto zen = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::zen(this), target);
  }

  // optional .android.service.notification.ManagedServicesProto notification_listeners = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::notification_listeners(this), target);
  }

  // optional int32 listener_hints = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->listener_hints(), target);
  }

  // repeated .android.service.notification.ListenersDisablingEffectsProto listeners_disabling_effects = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listeners_disabling_effects_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->listeners_disabling_effects(static_cast<int>(i)), target);
  }

  // optional .android.service.notification.ManagedServicesProto notification_assistants = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::notification_assistants(this), target);
  }

  // optional .android.service.notification.ManagedServicesProto condition_providers = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::condition_providers(this), target);
  }

  // optional .android.service.notification.RankingHelperProto ranking_config = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::ranking_config(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.NotificationServiceDumpProto)
  return target;
}

size_t NotificationServiceDumpProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.NotificationServiceDumpProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.notification.NotificationRecordProto records = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->records_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->records(static_cast<int>(i)));
    }
  }

  // repeated .android.service.notification.ListenersDisablingEffectsProto listeners_disabling_effects = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->listeners_disabling_effects_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->listeners_disabling_effects(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .android.service.notification.ZenModeProto zen = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *zen_);
    }

    // optional .android.service.notification.ManagedServicesProto notification_listeners = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *notification_listeners_);
    }

    // optional .android.service.notification.ManagedServicesProto notification_assistants = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *notification_assistants_);
    }

    // optional .android.service.notification.ManagedServicesProto condition_providers = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *condition_providers_);
    }

    // optional .android.service.notification.RankingHelperProto ranking_config = 8;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ranking_config_);
    }

    // optional int32 listener_hints = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->listener_hints());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotificationServiceDumpProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.NotificationServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  const NotificationServiceDumpProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NotificationServiceDumpProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.NotificationServiceDumpProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.NotificationServiceDumpProto)
    MergeFrom(*source);
  }
}

void NotificationServiceDumpProto::MergeFrom(const NotificationServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.NotificationServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  records_.MergeFrom(from.records_);
  listeners_disabling_effects_.MergeFrom(from.listeners_disabling_effects_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_zen()->::android::service::notification::ZenModeProto::MergeFrom(from.zen());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_notification_listeners()->::android::service::notification::ManagedServicesProto::MergeFrom(from.notification_listeners());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_notification_assistants()->::android::service::notification::ManagedServicesProto::MergeFrom(from.notification_assistants());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_condition_providers()->::android::service::notification::ManagedServicesProto::MergeFrom(from.condition_providers());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_ranking_config()->::android::service::notification::RankingHelperProto::MergeFrom(from.ranking_config());
    }
    if (cached_has_bits & 0x00000020u) {
      listener_hints_ = from.listener_hints_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NotificationServiceDumpProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.NotificationServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotificationServiceDumpProto::CopyFrom(const NotificationServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.NotificationServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotificationServiceDumpProto::IsInitialized() const {
  return true;
}

void NotificationServiceDumpProto::InternalSwap(NotificationServiceDumpProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&records_)->InternalSwap(CastToBase(&other->records_));
  CastToBase(&listeners_disabling_effects_)->InternalSwap(CastToBase(&other->listeners_disabling_effects_));
  swap(zen_, other->zen_);
  swap(notification_listeners_, other->notification_listeners_);
  swap(notification_assistants_, other->notification_assistants_);
  swap(condition_providers_, other->condition_providers_);
  swap(ranking_config_, other->ranking_config_);
  swap(listener_hints_, other->listener_hints_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotificationServiceDumpProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NotificationRecordProto::InitAsDefaultInstance() {
  ::android::service::notification::_NotificationRecordProto_default_instance_._instance.get_mutable()->audio_attributes_ = const_cast< ::android::media::AudioAttributesProto*>(
      ::android::media::AudioAttributesProto::internal_default_instance());
}
class NotificationRecordProto::_Internal {
 public:
  using HasBits = decltype(std::declval<NotificationRecordProto>()._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_channel_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_sound(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::android::media::AudioAttributesProto& audio_attributes(const NotificationRecordProto* msg);
  static void set_has_audio_attributes(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_can_vibrate(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_can_show_light(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_group_key(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_importance(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_package(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_delegate_package(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::android::media::AudioAttributesProto&
NotificationRecordProto::_Internal::audio_attributes(const NotificationRecordProto* msg) {
  return *msg->audio_attributes_;
}
void NotificationRecordProto::clear_audio_attributes() {
  if (audio_attributes_ != nullptr) audio_attributes_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
NotificationRecordProto::NotificationRecordProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.NotificationRecordProto)
}
NotificationRecordProto::NotificationRecordProto(const NotificationRecordProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  channel_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel_id()) {
    channel_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
  }
  sound_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_sound()) {
    sound_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sound_);
  }
  group_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_key()) {
    group_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.group_key_);
  }
  package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_package()) {
    package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  delegate_package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_delegate_package()) {
    delegate_package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.delegate_package_);
  }
  if (from.has_audio_attributes()) {
    audio_attributes_ = new ::android::media::AudioAttributesProto(*from.audio_attributes_);
  } else {
    audio_attributes_ = nullptr;
  }
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&importance_) -
    reinterpret_cast<char*>(&state_)) + sizeof(importance_));
  // @@protoc_insertion_point(copy_constructor:android.service.notification.NotificationRecordProto)
}

void NotificationRecordProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NotificationRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sound_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  delegate_package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&audio_attributes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&importance_) -
      reinterpret_cast<char*>(&audio_attributes_)) + sizeof(importance_));
}

NotificationRecordProto::~NotificationRecordProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.NotificationRecordProto)
  SharedDtor();
}

void NotificationRecordProto::SharedDtor() {
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sound_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  package_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  delegate_package_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete audio_attributes_;
}

void NotificationRecordProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotificationRecordProto& NotificationRecordProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NotificationRecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void NotificationRecordProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.NotificationRecordProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      channel_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      sound_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      group_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      package_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      delegate_package_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(audio_attributes_ != nullptr);
      audio_attributes_->Clear();
    }
  }
  state_ = 0;
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&flags_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&importance_) -
        reinterpret_cast<char*>(&flags_)) + sizeof(importance_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NotificationRecordProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_key(), ptr, ctx, "android.service.notification.NotificationRecordProto.key");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.NotificationRecordProto.State state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::NotificationRecordProto_State_IsValid(val))) {
            set_state(static_cast<::android::service::notification::NotificationRecordProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_flags(&has_bits);
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string channel_id = 4 [(.android.privacy) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_channel_id(), ptr, ctx, "android.service.notification.NotificationRecordProto.channel_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string sound = 5 [(.android.privacy) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_sound(), ptr, ctx, "android.service.notification.NotificationRecordProto.sound");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.media.AudioAttributesProto audio_attributes = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_audio_attributes(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool can_vibrate = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_can_vibrate(&has_bits);
          can_vibrate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool can_show_light = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_can_show_light(&has_bits);
          can_show_light_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string group_key = 9 [(.android.privacy) = {
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_group_key(), ptr, ctx, "android.service.notification.NotificationRecordProto.group_key");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional sint32 importance = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_importance(&has_bits);
          importance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string package = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_package(), ptr, ctx, "android.service.notification.NotificationRecordProto.package");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string delegate_package = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_delegate_package(), ptr, ctx, "android.service.notification.NotificationRecordProto.delegate_package");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NotificationRecordProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.NotificationRecordProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.NotificationRecordProto.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.NotificationRecordProto.State state = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::NotificationRecordProto_State_IsValid(value)) {
            set_state(static_cast< ::android::service::notification::NotificationRecordProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel_id = 4 [(.android.privacy) = {
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_id()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel_id().data(), static_cast<int>(this->channel_id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.NotificationRecordProto.channel_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sound = 5 [(.android.privacy) = {
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_sound()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sound().data(), static_cast<int>(this->sound().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.NotificationRecordProto.sound");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.media.AudioAttributesProto audio_attributes = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_audio_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool can_vibrate = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_can_vibrate(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_vibrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool can_show_light = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_can_show_light(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_show_light_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string group_key = 9 [(.android.privacy) = {
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_group_key()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_key().data(), static_cast<int>(this->group_key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.NotificationRecordProto.group_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 importance = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          _Internal::set_has_importance(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32>(
                 input, &importance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string package = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package().data(), static_cast<int>(this->package().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.NotificationRecordProto.package");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string delegate_package = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_delegate_package()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->delegate_package().data(), static_cast<int>(this->delegate_package().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.NotificationRecordProto.delegate_package");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.NotificationRecordProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.NotificationRecordProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NotificationRecordProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.NotificationRecordProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.NotificationRecordProto.key");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional .android.service.notification.NotificationRecordProto.State state = 2;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // optional int32 flags = 3;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->flags(), output);
  }

  // optional string channel_id = 4 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_id().data(), static_cast<int>(this->channel_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.NotificationRecordProto.channel_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->channel_id(), output);
  }

  // optional string sound = 5 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sound().data(), static_cast<int>(this->sound().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.NotificationRecordProto.sound");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sound(), output);
  }

  // optional .android.media.AudioAttributesProto audio_attributes = 6;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::audio_attributes(this), output);
  }

  // optional bool can_vibrate = 7;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(7, this->can_vibrate(), output);
  }

  // optional bool can_show_light = 8;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(8, this->can_show_light(), output);
  }

  // optional string group_key = 9 [(.android.privacy) = {
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_key().data(), static_cast<int>(this->group_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.NotificationRecordProto.group_key");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->group_key(), output);
  }

  // optional sint32 importance = 10;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32(10, this->importance(), output);
  }

  // optional string package = 11;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package().data(), static_cast<int>(this->package().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.NotificationRecordProto.package");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->package(), output);
  }

  // optional string delegate_package = 12;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->delegate_package().data(), static_cast<int>(this->delegate_package().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.NotificationRecordProto.delegate_package");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->delegate_package(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.NotificationRecordProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* NotificationRecordProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.NotificationRecordProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.NotificationRecordProto.key");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional .android.service.notification.NotificationRecordProto.State state = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // optional int32 flags = 3;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->flags(), target);
  }

  // optional string channel_id = 4 [(.android.privacy) = {
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_id().data(), static_cast<int>(this->channel_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.NotificationRecordProto.channel_id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->channel_id(), target);
  }

  // optional string sound = 5 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sound().data(), static_cast<int>(this->sound().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.NotificationRecordProto.sound");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->sound(), target);
  }

  // optional .android.media.AudioAttributesProto audio_attributes = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::audio_attributes(this), target);
  }

  // optional bool can_vibrate = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->can_vibrate(), target);
  }

  // optional bool can_show_light = 8;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->can_show_light(), target);
  }

  // optional string group_key = 9 [(.android.privacy) = {
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_key().data(), static_cast<int>(this->group_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.NotificationRecordProto.group_key");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        9, this->group_key(), target);
  }

  // optional sint32 importance = 10;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(10, this->importance(), target);
  }

  // optional string package = 11;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package().data(), static_cast<int>(this->package().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.NotificationRecordProto.package");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        11, this->package(), target);
  }

  // optional string delegate_package = 12;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->delegate_package().data(), static_cast<int>(this->delegate_package().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.NotificationRecordProto.delegate_package");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        12, this->delegate_package(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.NotificationRecordProto)
  return target;
}

size_t NotificationRecordProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.NotificationRecordProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string channel_id = 4 [(.android.privacy) = {
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->channel_id());
    }

    // optional string sound = 5 [(.android.privacy) = {
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->sound());
    }

    // optional string group_key = 9 [(.android.privacy) = {
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->group_key());
    }

    // optional string package = 11;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->package());
    }

    // optional string delegate_package = 12;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->delegate_package());
    }

    // optional .android.media.AudioAttributesProto audio_attributes = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *audio_attributes_);
    }

    // optional .android.service.notification.NotificationRecordProto.State state = 2;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->state());
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional int32 flags = 3;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->flags());
    }

    // optional bool can_vibrate = 7;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

    // optional bool can_show_light = 8;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional sint32 importance = 10;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
          this->importance());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotificationRecordProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.NotificationRecordProto)
  GOOGLE_DCHECK_NE(&from, this);
  const NotificationRecordProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NotificationRecordProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.NotificationRecordProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.NotificationRecordProto)
    MergeFrom(*source);
  }
}

void NotificationRecordProto::MergeFrom(const NotificationRecordProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.NotificationRecordProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      channel_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      sound_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sound_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      group_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.group_key_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      delegate_package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.delegate_package_);
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_audio_attributes()->::android::media::AudioAttributesProto::MergeFrom(from.audio_attributes());
    }
    if (cached_has_bits & 0x00000080u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000200u) {
      can_vibrate_ = from.can_vibrate_;
    }
    if (cached_has_bits & 0x00000400u) {
      can_show_light_ = from.can_show_light_;
    }
    if (cached_has_bits & 0x00000800u) {
      importance_ = from.importance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NotificationRecordProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.NotificationRecordProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotificationRecordProto::CopyFrom(const NotificationRecordProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.NotificationRecordProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotificationRecordProto::IsInitialized() const {
  return true;
}

void NotificationRecordProto::InternalSwap(NotificationRecordProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_id_.Swap(&other->channel_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sound_.Swap(&other->sound_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  group_key_.Swap(&other->group_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  package_.Swap(&other->package_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  delegate_package_.Swap(&other->delegate_package_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(audio_attributes_, other->audio_attributes_);
  swap(state_, other->state_);
  swap(flags_, other->flags_);
  swap(can_vibrate_, other->can_vibrate_);
  swap(can_show_light_, other->can_show_light_);
  swap(importance_, other->importance_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotificationRecordProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListenersDisablingEffectsProto::InitAsDefaultInstance() {
}
class ListenersDisablingEffectsProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ListenersDisablingEffectsProto>()._has_bits_);
  static void set_has_hint(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void ListenersDisablingEffectsProto::clear_listener_components() {
  listener_components_.Clear();
}
ListenersDisablingEffectsProto::ListenersDisablingEffectsProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.ListenersDisablingEffectsProto)
}
ListenersDisablingEffectsProto::ListenersDisablingEffectsProto(const ListenersDisablingEffectsProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      listener_components_(from.listener_components_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hint_ = from.hint_;
  // @@protoc_insertion_point(copy_constructor:android.service.notification.ListenersDisablingEffectsProto)
}

void ListenersDisablingEffectsProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListenersDisablingEffectsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  hint_ = 0;
}

ListenersDisablingEffectsProto::~ListenersDisablingEffectsProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.ListenersDisablingEffectsProto)
  SharedDtor();
}

void ListenersDisablingEffectsProto::SharedDtor() {
}

void ListenersDisablingEffectsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListenersDisablingEffectsProto& ListenersDisablingEffectsProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListenersDisablingEffectsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void ListenersDisablingEffectsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.ListenersDisablingEffectsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  listener_components_.Clear();
  hint_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListenersDisablingEffectsProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 hint = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_hint(&has_bits);
          hint_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.content.ComponentNameProto listener_components = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_listener_components(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListenersDisablingEffectsProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.ListenersDisablingEffectsProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hint = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_hint(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &hint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.content.ComponentNameProto listener_components = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_listener_components()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.ListenersDisablingEffectsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.ListenersDisablingEffectsProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListenersDisablingEffectsProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.ListenersDisablingEffectsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 hint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->hint(), output);
  }

  // repeated .android.content.ComponentNameProto listener_components = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listener_components_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->listener_components(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.ListenersDisablingEffectsProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ListenersDisablingEffectsProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.ListenersDisablingEffectsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 hint = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->hint(), target);
  }

  // repeated .android.content.ComponentNameProto listener_components = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listener_components_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->listener_components(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.ListenersDisablingEffectsProto)
  return target;
}

size_t ListenersDisablingEffectsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.ListenersDisablingEffectsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.content.ComponentNameProto listener_components = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->listener_components_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->listener_components(static_cast<int>(i)));
    }
  }

  // optional int32 hint = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->hint());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListenersDisablingEffectsProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.ListenersDisablingEffectsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ListenersDisablingEffectsProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListenersDisablingEffectsProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.ListenersDisablingEffectsProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.ListenersDisablingEffectsProto)
    MergeFrom(*source);
  }
}

void ListenersDisablingEffectsProto::MergeFrom(const ListenersDisablingEffectsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.ListenersDisablingEffectsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  listener_components_.MergeFrom(from.listener_components_);
  if (from.has_hint()) {
    set_hint(from.hint());
  }
}

void ListenersDisablingEffectsProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.ListenersDisablingEffectsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListenersDisablingEffectsProto::CopyFrom(const ListenersDisablingEffectsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.ListenersDisablingEffectsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListenersDisablingEffectsProto::IsInitialized() const {
  return true;
}

void ListenersDisablingEffectsProto::InternalSwap(ListenersDisablingEffectsProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&listener_components_)->InternalSwap(CastToBase(&other->listener_components_));
  swap(hint_, other->hint_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListenersDisablingEffectsProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ManagedServiceInfoProto::InitAsDefaultInstance() {
  ::android::service::notification::_ManagedServiceInfoProto_default_instance_._instance.get_mutable()->component_ = const_cast< ::android::content::ComponentNameProto*>(
      ::android::content::ComponentNameProto::internal_default_instance());
}
class ManagedServiceInfoProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ManagedServiceInfoProto>()._has_bits_);
  static const ::android::content::ComponentNameProto& component(const ManagedServiceInfoProto* msg);
  static void set_has_component(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_user_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_service(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_system(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_is_guest(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::android::content::ComponentNameProto&
ManagedServiceInfoProto::_Internal::component(const ManagedServiceInfoProto* msg) {
  return *msg->component_;
}
void ManagedServiceInfoProto::clear_component() {
  if (component_ != nullptr) component_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
ManagedServiceInfoProto::ManagedServiceInfoProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.ManagedServiceInfoProto)
}
ManagedServiceInfoProto::ManagedServiceInfoProto(const ManagedServiceInfoProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_service()) {
    service_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.has_component()) {
    component_ = new ::android::content::ComponentNameProto(*from.component_);
  } else {
    component_ = nullptr;
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_guest_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(is_guest_));
  // @@protoc_insertion_point(copy_constructor:android.service.notification.ManagedServiceInfoProto)
}

void ManagedServiceInfoProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ManagedServiceInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  service_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&component_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_guest_) -
      reinterpret_cast<char*>(&component_)) + sizeof(is_guest_));
}

ManagedServiceInfoProto::~ManagedServiceInfoProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.ManagedServiceInfoProto)
  SharedDtor();
}

void ManagedServiceInfoProto::SharedDtor() {
  service_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete component_;
}

void ManagedServiceInfoProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ManagedServiceInfoProto& ManagedServiceInfoProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ManagedServiceInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void ManagedServiceInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.ManagedServiceInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      service_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(component_ != nullptr);
      component_->Clear();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&user_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_guest_) -
        reinterpret_cast<char*>(&user_id_)) + sizeof(is_guest_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ManagedServiceInfoProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.content.ComponentNameProto component = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_component(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_user_id(&has_bits);
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string service = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_service(), ptr, ctx, "android.service.notification.ManagedServiceInfoProto.service");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_system = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_is_system(&has_bits);
          is_system_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_guest = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_is_guest(&has_bits);
          is_guest_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ManagedServiceInfoProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.ManagedServiceInfoProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.content.ComponentNameProto component = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_component()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_id = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_user_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string service = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->service().data(), static_cast<int>(this->service().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.ManagedServiceInfoProto.service");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_system = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_is_system(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_system_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_guest = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_is_guest(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_guest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.ManagedServiceInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.ManagedServiceInfoProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ManagedServiceInfoProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.ManagedServiceInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.content.ComponentNameProto component = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::component(this), output);
  }

  // optional int32 user_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->user_id(), output);
  }

  // optional string service = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->service().data(), static_cast<int>(this->service().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ManagedServiceInfoProto.service");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->service(), output);
  }

  // optional bool is_system = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(4, this->is_system(), output);
  }

  // optional bool is_guest = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(5, this->is_guest(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.ManagedServiceInfoProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ManagedServiceInfoProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.ManagedServiceInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.content.ComponentNameProto component = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::component(this), target);
  }

  // optional int32 user_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->user_id(), target);
  }

  // optional string service = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->service().data(), static_cast<int>(this->service().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ManagedServiceInfoProto.service");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->service(), target);
  }

  // optional bool is_system = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->is_system(), target);
  }

  // optional bool is_guest = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->is_guest(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.ManagedServiceInfoProto)
  return target;
}

size_t ManagedServiceInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.ManagedServiceInfoProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string service = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->service());
    }

    // optional .android.content.ComponentNameProto component = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *component_);
    }

    // optional int32 user_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->user_id());
    }

    // optional bool is_system = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool is_guest = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManagedServiceInfoProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.ManagedServiceInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ManagedServiceInfoProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ManagedServiceInfoProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.ManagedServiceInfoProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.ManagedServiceInfoProto)
    MergeFrom(*source);
  }
}

void ManagedServiceInfoProto::MergeFrom(const ManagedServiceInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.ManagedServiceInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      service_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_component()->::android::content::ComponentNameProto::MergeFrom(from.component());
    }
    if (cached_has_bits & 0x00000004u) {
      user_id_ = from.user_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_system_ = from.is_system_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_guest_ = from.is_guest_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ManagedServiceInfoProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.ManagedServiceInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManagedServiceInfoProto::CopyFrom(const ManagedServiceInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.ManagedServiceInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManagedServiceInfoProto::IsInitialized() const {
  return true;
}

void ManagedServiceInfoProto::InternalSwap(ManagedServiceInfoProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  service_.Swap(&other->service_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(component_, other->component_);
  swap(user_id_, other->user_id_);
  swap(is_system_, other->is_system_);
  swap(is_guest_, other->is_guest_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ManagedServiceInfoProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ManagedServicesProto_ServiceProto::InitAsDefaultInstance() {
}
class ManagedServicesProto_ServiceProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ManagedServicesProto_ServiceProto>()._has_bits_);
  static void set_has_user_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_primary(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ManagedServicesProto_ServiceProto::ManagedServicesProto_ServiceProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.ManagedServicesProto.ServiceProto)
}
ManagedServicesProto_ServiceProto::ManagedServicesProto_ServiceProto(const ManagedServicesProto_ServiceProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      name_(from.name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_primary_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(is_primary_));
  // @@protoc_insertion_point(copy_constructor:android.service.notification.ManagedServicesProto.ServiceProto)
}

void ManagedServicesProto_ServiceProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ManagedServicesProto_ServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_primary_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(is_primary_));
}

ManagedServicesProto_ServiceProto::~ManagedServicesProto_ServiceProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.ManagedServicesProto.ServiceProto)
  SharedDtor();
}

void ManagedServicesProto_ServiceProto::SharedDtor() {
}

void ManagedServicesProto_ServiceProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ManagedServicesProto_ServiceProto& ManagedServicesProto_ServiceProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ManagedServicesProto_ServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void ManagedServicesProto_ServiceProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.ManagedServicesProto.ServiceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&user_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_primary_) -
        reinterpret_cast<char*>(&user_id_)) + sizeof(is_primary_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ManagedServicesProto_ServiceProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_name(), ptr, ctx, "android.service.notification.ManagedServicesProto.ServiceProto.name");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // optional int32 user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_user_id(&has_bits);
          user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_primary = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_is_primary(&has_bits);
          is_primary_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ManagedServicesProto_ServiceProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.ManagedServicesProto.ServiceProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name(this->name_size() - 1).data(),
            static_cast<int>(this->name(this->name_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.ManagedServicesProto.ServiceProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_id = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_user_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_primary = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_is_primary(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_primary_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.ManagedServicesProto.ServiceProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.ManagedServicesProto.ServiceProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ManagedServicesProto_ServiceProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.ManagedServicesProto.ServiceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string name = 1;
  for (int i = 0, n = this->name_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name(i).data(), static_cast<int>(this->name(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ManagedServicesProto.ServiceProto.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      1, this->name(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 user_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->user_id(), output);
  }

  // optional bool is_primary = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->is_primary(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.ManagedServicesProto.ServiceProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ManagedServicesProto_ServiceProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.ManagedServicesProto.ServiceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string name = 1;
  for (int i = 0, n = this->name_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name(i).data(), static_cast<int>(this->name(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ManagedServicesProto.ServiceProto.name");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(1, this->name(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 user_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->user_id(), target);
  }

  // optional bool is_primary = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->is_primary(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.ManagedServicesProto.ServiceProto)
  return target;
}

size_t ManagedServicesProto_ServiceProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.ManagedServicesProto.ServiceProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string name = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->name_size());
  for (int i = 0, n = this->name_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->name(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 user_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->user_id());
    }

    // optional bool is_primary = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManagedServicesProto_ServiceProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.ManagedServicesProto.ServiceProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ManagedServicesProto_ServiceProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ManagedServicesProto_ServiceProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.ManagedServicesProto.ServiceProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.ManagedServicesProto.ServiceProto)
    MergeFrom(*source);
  }
}

void ManagedServicesProto_ServiceProto::MergeFrom(const ManagedServicesProto_ServiceProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.ManagedServicesProto.ServiceProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  name_.MergeFrom(from.name_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      user_id_ = from.user_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_primary_ = from.is_primary_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ManagedServicesProto_ServiceProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.ManagedServicesProto.ServiceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManagedServicesProto_ServiceProto::CopyFrom(const ManagedServicesProto_ServiceProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.ManagedServicesProto.ServiceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManagedServicesProto_ServiceProto::IsInitialized() const {
  return true;
}

void ManagedServicesProto_ServiceProto::InternalSwap(ManagedServicesProto_ServiceProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.InternalSwap(CastToBase(&other->name_));
  swap(user_id_, other->user_id_);
  swap(is_primary_, other->is_primary_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ManagedServicesProto_ServiceProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ManagedServicesProto::InitAsDefaultInstance() {
}
class ManagedServicesProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ManagedServicesProto>()._has_bits_);
  static void set_has_caption(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void ManagedServicesProto::clear_enabled() {
  enabled_.Clear();
}
void ManagedServicesProto::clear_snoozed() {
  snoozed_.Clear();
}
ManagedServicesProto::ManagedServicesProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.ManagedServicesProto)
}
ManagedServicesProto::ManagedServicesProto(const ManagedServicesProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      approved_(from.approved_),
      enabled_(from.enabled_),
      live_services_(from.live_services_),
      snoozed_(from.snoozed_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  caption_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_caption()) {
    caption_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.caption_);
  }
  // @@protoc_insertion_point(copy_constructor:android.service.notification.ManagedServicesProto)
}

void ManagedServicesProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ManagedServicesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  caption_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ManagedServicesProto::~ManagedServicesProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.ManagedServicesProto)
  SharedDtor();
}

void ManagedServicesProto::SharedDtor() {
  caption_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ManagedServicesProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ManagedServicesProto& ManagedServicesProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ManagedServicesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void ManagedServicesProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.ManagedServicesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  approved_.Clear();
  enabled_.Clear();
  live_services_.Clear();
  snoozed_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    caption_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ManagedServicesProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string caption = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_caption(), ptr, ctx, "android.service.notification.ManagedServicesProto.caption");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.notification.ManagedServicesProto.ServiceProto approved = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_approved(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // repeated .android.content.ComponentNameProto enabled = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_enabled(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.notification.ManagedServiceInfoProto live_services = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_live_services(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // repeated .android.content.ComponentNameProto snoozed = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_snoozed(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ManagedServicesProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.ManagedServicesProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string caption = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_caption()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->caption().data(), static_cast<int>(this->caption().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.ManagedServicesProto.caption");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.notification.ManagedServicesProto.ServiceProto approved = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_approved()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.content.ComponentNameProto enabled = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.notification.ManagedServiceInfoProto live_services = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_live_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.content.ComponentNameProto snoozed = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_snoozed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.ManagedServicesProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.ManagedServicesProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ManagedServicesProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.ManagedServicesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string caption = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->caption().data(), static_cast<int>(this->caption().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ManagedServicesProto.caption");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->caption(), output);
  }

  // repeated .android.service.notification.ManagedServicesProto.ServiceProto approved = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->approved_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->approved(static_cast<int>(i)),
      output);
  }

  // repeated .android.content.ComponentNameProto enabled = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enabled_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->enabled(static_cast<int>(i)),
      output);
  }

  // repeated .android.service.notification.ManagedServiceInfoProto live_services = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->live_services_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->live_services(static_cast<int>(i)),
      output);
  }

  // repeated .android.content.ComponentNameProto snoozed = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->snoozed_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->snoozed(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.ManagedServicesProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ManagedServicesProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.ManagedServicesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string caption = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->caption().data(), static_cast<int>(this->caption().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ManagedServicesProto.caption");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->caption(), target);
  }

  // repeated .android.service.notification.ManagedServicesProto.ServiceProto approved = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->approved_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->approved(static_cast<int>(i)), target);
  }

  // repeated .android.content.ComponentNameProto enabled = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enabled_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->enabled(static_cast<int>(i)), target);
  }

  // repeated .android.service.notification.ManagedServiceInfoProto live_services = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->live_services_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->live_services(static_cast<int>(i)), target);
  }

  // repeated .android.content.ComponentNameProto snoozed = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->snoozed_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->snoozed(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.ManagedServicesProto)
  return target;
}

size_t ManagedServicesProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.ManagedServicesProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.notification.ManagedServicesProto.ServiceProto approved = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->approved_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->approved(static_cast<int>(i)));
    }
  }

  // repeated .android.content.ComponentNameProto enabled = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->enabled_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->enabled(static_cast<int>(i)));
    }
  }

  // repeated .android.service.notification.ManagedServiceInfoProto live_services = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->live_services_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->live_services(static_cast<int>(i)));
    }
  }

  // repeated .android.content.ComponentNameProto snoozed = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->snoozed_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->snoozed(static_cast<int>(i)));
    }
  }

  // optional string caption = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->caption());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManagedServicesProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.ManagedServicesProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ManagedServicesProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ManagedServicesProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.ManagedServicesProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.ManagedServicesProto)
    MergeFrom(*source);
  }
}

void ManagedServicesProto::MergeFrom(const ManagedServicesProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.ManagedServicesProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  approved_.MergeFrom(from.approved_);
  enabled_.MergeFrom(from.enabled_);
  live_services_.MergeFrom(from.live_services_);
  snoozed_.MergeFrom(from.snoozed_);
  if (from.has_caption()) {
    _has_bits_[0] |= 0x00000001u;
    caption_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.caption_);
  }
}

void ManagedServicesProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.ManagedServicesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManagedServicesProto::CopyFrom(const ManagedServicesProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.ManagedServicesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManagedServicesProto::IsInitialized() const {
  return true;
}

void ManagedServicesProto::InternalSwap(ManagedServicesProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&approved_)->InternalSwap(CastToBase(&other->approved_));
  CastToBase(&enabled_)->InternalSwap(CastToBase(&other->enabled_));
  CastToBase(&live_services_)->InternalSwap(CastToBase(&other->live_services_));
  CastToBase(&snoozed_)->InternalSwap(CastToBase(&other->snoozed_));
  caption_.Swap(&other->caption_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ManagedServicesProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RankingHelperProto_RecordProto::InitAsDefaultInstance() {
}
class RankingHelperProto_RecordProto::_Internal {
 public:
  using HasBits = decltype(std::declval<RankingHelperProto_RecordProto>()._has_bits_);
  static void set_has_package(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_importance(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_priority(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_visibility(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_show_badge(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

void RankingHelperProto_RecordProto::clear_channels() {
  channels_.Clear();
}
void RankingHelperProto_RecordProto::clear_channel_groups() {
  channel_groups_.Clear();
}
RankingHelperProto_RecordProto::RankingHelperProto_RecordProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.RankingHelperProto.RecordProto)
}
RankingHelperProto_RecordProto::RankingHelperProto_RecordProto(const RankingHelperProto_RecordProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      channels_(from.channels_),
      channel_groups_(from.channel_groups_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_package()) {
    package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&show_badge_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(show_badge_));
  // @@protoc_insertion_point(copy_constructor:android.service.notification.RankingHelperProto.RecordProto)
}

void RankingHelperProto_RecordProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RankingHelperProto_RecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&show_badge_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(show_badge_));
}

RankingHelperProto_RecordProto::~RankingHelperProto_RecordProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.RankingHelperProto.RecordProto)
  SharedDtor();
}

void RankingHelperProto_RecordProto::SharedDtor() {
  package_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RankingHelperProto_RecordProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RankingHelperProto_RecordProto& RankingHelperProto_RecordProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RankingHelperProto_RecordProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void RankingHelperProto_RecordProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.RankingHelperProto.RecordProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channels_.Clear();
  channel_groups_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    package_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&uid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&show_badge_) -
        reinterpret_cast<char*>(&uid_)) + sizeof(show_badge_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RankingHelperProto_RecordProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string package = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_package(), ptr, ctx, "android.service.notification.RankingHelperProto.RecordProto.package");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_uid(&has_bits);
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional sint32 importance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_importance(&has_bits);
          importance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 priority = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_priority(&has_bits);
          priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional sint32 visibility = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_visibility(&has_bits);
          visibility_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool show_badge = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_show_badge(&has_bits);
          show_badge_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.app.NotificationChannelProto channels = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_channels(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 58);
        } else goto handle_unusual;
        continue;
      // repeated .android.app.NotificationChannelGroupProto channel_groups = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_channel_groups(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 66);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RankingHelperProto_RecordProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.RankingHelperProto.RecordProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string package = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package().data(), static_cast<int>(this->package().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.RankingHelperProto.RecordProto.package");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 uid = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_uid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 importance = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_importance(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32>(
                 input, &importance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 priority = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_priority(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 visibility = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_visibility(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32>(
                 input, &visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_badge = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_show_badge(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_badge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.app.NotificationChannelProto channels = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.app.NotificationChannelGroupProto channel_groups = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_channel_groups()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.RankingHelperProto.RecordProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.RankingHelperProto.RecordProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RankingHelperProto_RecordProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.RankingHelperProto.RecordProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string package = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package().data(), static_cast<int>(this->package().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.RankingHelperProto.RecordProto.package");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->package(), output);
  }

  // optional int32 uid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->uid(), output);
  }

  // optional sint32 importance = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32(3, this->importance(), output);
  }

  // optional int32 priority = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->priority(), output);
  }

  // optional sint32 visibility = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32(5, this->visibility(), output);
  }

  // optional bool show_badge = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->show_badge(), output);
  }

  // repeated .android.app.NotificationChannelProto channels = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->channels(static_cast<int>(i)),
      output);
  }

  // repeated .android.app.NotificationChannelGroupProto channel_groups = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_groups_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->channel_groups(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.RankingHelperProto.RecordProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* RankingHelperProto_RecordProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.RankingHelperProto.RecordProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string package = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package().data(), static_cast<int>(this->package().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.RankingHelperProto.RecordProto.package");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->package(), target);
  }

  // optional int32 uid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->uid(), target);
  }

  // optional sint32 importance = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(3, this->importance(), target);
  }

  // optional int32 priority = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->priority(), target);
  }

  // optional sint32 visibility = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(5, this->visibility(), target);
  }

  // optional bool show_badge = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->show_badge(), target);
  }

  // repeated .android.app.NotificationChannelProto channels = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->channels(static_cast<int>(i)), target);
  }

  // repeated .android.app.NotificationChannelGroupProto channel_groups = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_groups_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->channel_groups(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.RankingHelperProto.RecordProto)
  return target;
}

size_t RankingHelperProto_RecordProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.RankingHelperProto.RecordProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.app.NotificationChannelProto channels = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->channels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->channels(static_cast<int>(i)));
    }
  }

  // repeated .android.app.NotificationChannelGroupProto channel_groups = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->channel_groups_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->channel_groups(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string package = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->package());
    }

    // optional int32 uid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->uid());
    }

    // optional sint32 importance = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
          this->importance());
    }

    // optional int32 priority = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->priority());
    }

    // optional sint32 visibility = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
          this->visibility());
    }

    // optional bool show_badge = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankingHelperProto_RecordProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.RankingHelperProto.RecordProto)
  GOOGLE_DCHECK_NE(&from, this);
  const RankingHelperProto_RecordProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RankingHelperProto_RecordProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.RankingHelperProto.RecordProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.RankingHelperProto.RecordProto)
    MergeFrom(*source);
  }
}

void RankingHelperProto_RecordProto::MergeFrom(const RankingHelperProto_RecordProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.RankingHelperProto.RecordProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channels_.MergeFrom(from.channels_);
  channel_groups_.MergeFrom(from.channel_groups_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_);
    }
    if (cached_has_bits & 0x00000002u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000004u) {
      importance_ = from.importance_;
    }
    if (cached_has_bits & 0x00000008u) {
      priority_ = from.priority_;
    }
    if (cached_has_bits & 0x00000010u) {
      visibility_ = from.visibility_;
    }
    if (cached_has_bits & 0x00000020u) {
      show_badge_ = from.show_badge_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RankingHelperProto_RecordProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.RankingHelperProto.RecordProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankingHelperProto_RecordProto::CopyFrom(const RankingHelperProto_RecordProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.RankingHelperProto.RecordProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankingHelperProto_RecordProto::IsInitialized() const {
  return true;
}

void RankingHelperProto_RecordProto::InternalSwap(RankingHelperProto_RecordProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&channels_)->InternalSwap(CastToBase(&other->channels_));
  CastToBase(&channel_groups_)->InternalSwap(CastToBase(&other->channel_groups_));
  package_.Swap(&other->package_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(uid_, other->uid_);
  swap(importance_, other->importance_);
  swap(priority_, other->priority_);
  swap(visibility_, other->visibility_);
  swap(show_badge_, other->show_badge_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RankingHelperProto_RecordProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RankingHelperProto::InitAsDefaultInstance() {
}
class RankingHelperProto::_Internal {
 public:
  using HasBits = decltype(std::declval<RankingHelperProto>()._has_bits_);
};

RankingHelperProto::RankingHelperProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.RankingHelperProto)
}
RankingHelperProto::RankingHelperProto(const RankingHelperProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      notification_signal_extractors_(from.notification_signal_extractors_),
      records_(from.records_),
      records_restored_without_uid_(from.records_restored_without_uid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:android.service.notification.RankingHelperProto)
}

void RankingHelperProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RankingHelperProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
}

RankingHelperProto::~RankingHelperProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.RankingHelperProto)
  SharedDtor();
}

void RankingHelperProto::SharedDtor() {
}

void RankingHelperProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RankingHelperProto& RankingHelperProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RankingHelperProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void RankingHelperProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.RankingHelperProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notification_signal_extractors_.Clear();
  records_.Clear();
  records_restored_without_uid_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RankingHelperProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string notification_signal_extractors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(add_notification_signal_extractors(), ptr, ctx, "android.service.notification.RankingHelperProto.notification_signal_extractors");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.notification.RankingHelperProto.RecordProto records = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_records(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.notification.RankingHelperProto.RecordProto records_restored_without_uid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_records_restored_without_uid(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RankingHelperProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.RankingHelperProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string notification_signal_extractors = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_notification_signal_extractors()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->notification_signal_extractors(this->notification_signal_extractors_size() - 1).data(),
            static_cast<int>(this->notification_signal_extractors(this->notification_signal_extractors_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.RankingHelperProto.notification_signal_extractors");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.notification.RankingHelperProto.RecordProto records = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_records()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.notification.RankingHelperProto.RecordProto records_restored_without_uid = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_records_restored_without_uid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.RankingHelperProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.RankingHelperProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RankingHelperProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.RankingHelperProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string notification_signal_extractors = 1;
  for (int i = 0, n = this->notification_signal_extractors_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->notification_signal_extractors(i).data(), static_cast<int>(this->notification_signal_extractors(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.RankingHelperProto.notification_signal_extractors");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      1, this->notification_signal_extractors(i), output);
  }

  // repeated .android.service.notification.RankingHelperProto.RecordProto records = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->records(static_cast<int>(i)),
      output);
  }

  // repeated .android.service.notification.RankingHelperProto.RecordProto records_restored_without_uid = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_restored_without_uid_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->records_restored_without_uid(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.RankingHelperProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* RankingHelperProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.RankingHelperProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string notification_signal_extractors = 1;
  for (int i = 0, n = this->notification_signal_extractors_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->notification_signal_extractors(i).data(), static_cast<int>(this->notification_signal_extractors(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.RankingHelperProto.notification_signal_extractors");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(1, this->notification_signal_extractors(i), target);
  }

  // repeated .android.service.notification.RankingHelperProto.RecordProto records = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->records(static_cast<int>(i)), target);
  }

  // repeated .android.service.notification.RankingHelperProto.RecordProto records_restored_without_uid = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->records_restored_without_uid_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->records_restored_without_uid(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.RankingHelperProto)
  return target;
}

size_t RankingHelperProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.RankingHelperProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string notification_signal_extractors = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->notification_signal_extractors_size());
  for (int i = 0, n = this->notification_signal_extractors_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->notification_signal_extractors(i));
  }

  // repeated .android.service.notification.RankingHelperProto.RecordProto records = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->records_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->records(static_cast<int>(i)));
    }
  }

  // repeated .android.service.notification.RankingHelperProto.RecordProto records_restored_without_uid = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->records_restored_without_uid_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->records_restored_without_uid(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankingHelperProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.RankingHelperProto)
  GOOGLE_DCHECK_NE(&from, this);
  const RankingHelperProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RankingHelperProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.RankingHelperProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.RankingHelperProto)
    MergeFrom(*source);
  }
}

void RankingHelperProto::MergeFrom(const RankingHelperProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.RankingHelperProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notification_signal_extractors_.MergeFrom(from.notification_signal_extractors_);
  records_.MergeFrom(from.records_);
  records_restored_without_uid_.MergeFrom(from.records_restored_without_uid_);
}

void RankingHelperProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.RankingHelperProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankingHelperProto::CopyFrom(const RankingHelperProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.RankingHelperProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankingHelperProto::IsInitialized() const {
  return true;
}

void RankingHelperProto::InternalSwap(RankingHelperProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  notification_signal_extractors_.InternalSwap(CastToBase(&other->notification_signal_extractors_));
  CastToBase(&records_)->InternalSwap(CastToBase(&other->records_));
  CastToBase(&records_restored_without_uid_)->InternalSwap(CastToBase(&other->records_restored_without_uid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RankingHelperProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConditionProto::InitAsDefaultInstance() {
}
class ConditionProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ConditionProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_summary(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_line_1(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_line_2(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_icon(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

ConditionProto::ConditionProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.ConditionProto)
}
ConditionProto::ConditionProto(const ConditionProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  summary_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_summary()) {
    summary_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.summary_);
  }
  line_1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_line_1()) {
    line_1_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.line_1_);
  }
  line_2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_line_2()) {
    line_2_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.line_2_);
  }
  ::memcpy(&icon_, &from.icon_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&icon_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:android.service.notification.ConditionProto)
}

void ConditionProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConditionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  summary_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  line_1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  line_2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&icon_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&icon_)) + sizeof(flags_));
}

ConditionProto::~ConditionProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.ConditionProto)
  SharedDtor();
}

void ConditionProto::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  summary_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  line_1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  line_2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConditionProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConditionProto& ConditionProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConditionProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void ConditionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.ConditionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      summary_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      line_1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      line_2_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000070u) {
    ::memset(&icon_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&icon_)) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConditionProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_id(), ptr, ctx, "android.service.notification.ConditionProto.id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string summary = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_summary(), ptr, ctx, "android.service.notification.ConditionProto.summary");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string line_1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_line_1(), ptr, ctx, "android.service.notification.ConditionProto.line_1");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string line_2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_line_2(), ptr, ctx, "android.service.notification.ConditionProto.line_2");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 icon = 5 [(.android.privacy) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_icon(&has_bits);
          icon_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ConditionProto.State state = 6 [(.android.privacy) = {
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ConditionProto_State_IsValid(val))) {
            set_state(static_cast<::android::service::notification::ConditionProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 flags = 7 [(.android.privacy) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_flags(&has_bits);
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConditionProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.ConditionProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.ConditionProto.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string summary = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_summary()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->summary().data(), static_cast<int>(this->summary().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.ConditionProto.summary");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string line_1 = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_line_1()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->line_1().data(), static_cast<int>(this->line_1().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.ConditionProto.line_1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string line_2 = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_line_2()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->line_2().data(), static_cast<int>(this->line_2().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.ConditionProto.line_2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 icon = 5 [(.android.privacy) = {
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_icon(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ConditionProto.State state = 6 [(.android.privacy) = {
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ConditionProto_State_IsValid(value)) {
            set_state(static_cast< ::android::service::notification::ConditionProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 7 [(.android.privacy) = {
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.ConditionProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.ConditionProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConditionProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.ConditionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ConditionProto.id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string summary = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->summary().data(), static_cast<int>(this->summary().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ConditionProto.summary");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->summary(), output);
  }

  // optional string line_1 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->line_1().data(), static_cast<int>(this->line_1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ConditionProto.line_1");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->line_1(), output);
  }

  // optional string line_2 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->line_2().data(), static_cast<int>(this->line_2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ConditionProto.line_2");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->line_2(), output);
  }

  // optional int32 icon = 5 [(.android.privacy) = {
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->icon(), output);
  }

  // optional .android.service.notification.ConditionProto.State state = 6 [(.android.privacy) = {
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      6, this->state(), output);
  }

  // optional int32 flags = 7 [(.android.privacy) = {
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->flags(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.ConditionProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ConditionProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.ConditionProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ConditionProto.id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string summary = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->summary().data(), static_cast<int>(this->summary().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ConditionProto.summary");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->summary(), target);
  }

  // optional string line_1 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->line_1().data(), static_cast<int>(this->line_1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ConditionProto.line_1");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->line_1(), target);
  }

  // optional string line_2 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->line_2().data(), static_cast<int>(this->line_2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ConditionProto.line_2");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->line_2(), target);
  }

  // optional int32 icon = 5 [(.android.privacy) = {
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->icon(), target);
  }

  // optional .android.service.notification.ConditionProto.State state = 6 [(.android.privacy) = {
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->state(), target);
  }

  // optional int32 flags = 7 [(.android.privacy) = {
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->flags(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.ConditionProto)
  return target;
}

size_t ConditionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.ConditionProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string summary = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->summary());
    }

    // optional string line_1 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->line_1());
    }

    // optional string line_2 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->line_2());
    }

    // optional int32 icon = 5 [(.android.privacy) = {
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->icon());
    }

    // optional .android.service.notification.ConditionProto.State state = 6 [(.android.privacy) = {
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->state());
    }

    // optional int32 flags = 7 [(.android.privacy) = {
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->flags());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConditionProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.ConditionProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ConditionProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConditionProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.ConditionProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.ConditionProto)
    MergeFrom(*source);
  }
}

void ConditionProto::MergeFrom(const ConditionProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.ConditionProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      summary_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.summary_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      line_1_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.line_1_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      line_2_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.line_2_);
    }
    if (cached_has_bits & 0x00000010u) {
      icon_ = from.icon_;
    }
    if (cached_has_bits & 0x00000020u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000040u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConditionProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.ConditionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConditionProto::CopyFrom(const ConditionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.ConditionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConditionProto::IsInitialized() const {
  return true;
}

void ConditionProto::InternalSwap(ConditionProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  summary_.Swap(&other->summary_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  line_1_.Swap(&other->line_1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  line_2_.Swap(&other->line_2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(icon_, other->icon_);
  swap(state_, other->state_);
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConditionProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ZenRuleProto::InitAsDefaultInstance() {
  ::android::service::notification::_ZenRuleProto_default_instance_._instance.get_mutable()->condition_ = const_cast< ::android::service::notification::ConditionProto*>(
      ::android::service::notification::ConditionProto::internal_default_instance());
  ::android::service::notification::_ZenRuleProto_default_instance_._instance.get_mutable()->component_ = const_cast< ::android::content::ComponentNameProto*>(
      ::android::content::ComponentNameProto::internal_default_instance());
  ::android::service::notification::_ZenRuleProto_default_instance_._instance.get_mutable()->zenpolicy_ = const_cast< ::android::service::notification::ZenPolicyProto*>(
      ::android::service::notification::ZenPolicyProto::internal_default_instance());
}
class ZenRuleProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ZenRuleProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_creation_time_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_enabled(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_enabler(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_is_snoozing(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_zen_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_condition_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::android::service::notification::ConditionProto& condition(const ZenRuleProto* msg);
  static void set_has_condition(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::android::content::ComponentNameProto& component(const ZenRuleProto* msg);
  static void set_has_component(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::android::service::notification::ZenPolicyProto& zenpolicy(const ZenRuleProto* msg);
  static void set_has_zenpolicy(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_modified(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
};

const ::android::service::notification::ConditionProto&
ZenRuleProto::_Internal::condition(const ZenRuleProto* msg) {
  return *msg->condition_;
}
const ::android::content::ComponentNameProto&
ZenRuleProto::_Internal::component(const ZenRuleProto* msg) {
  return *msg->component_;
}
const ::android::service::notification::ZenPolicyProto&
ZenRuleProto::_Internal::zenpolicy(const ZenRuleProto* msg) {
  return *msg->zenpolicy_;
}
void ZenRuleProto::clear_component() {
  if (component_ != nullptr) component_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
ZenRuleProto::ZenRuleProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.ZenRuleProto)
}
ZenRuleProto::ZenRuleProto(const ZenRuleProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  enabler_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_enabler()) {
    enabler_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.enabler_);
  }
  condition_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_condition_id()) {
    condition_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.condition_id_);
  }
  if (from.has_condition()) {
    condition_ = new ::android::service::notification::ConditionProto(*from.condition_);
  } else {
    condition_ = nullptr;
  }
  if (from.has_component()) {
    component_ = new ::android::content::ComponentNameProto(*from.component_);
  } else {
    component_ = nullptr;
  }
  if (from.has_zenpolicy()) {
    zenpolicy_ = new ::android::service::notification::ZenPolicyProto(*from.zenpolicy_);
  } else {
    zenpolicy_ = nullptr;
  }
  ::memcpy(&creation_time_ms_, &from.creation_time_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&modified_) -
    reinterpret_cast<char*>(&creation_time_ms_)) + sizeof(modified_));
  // @@protoc_insertion_point(copy_constructor:android.service.notification.ZenRuleProto)
}

void ZenRuleProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ZenRuleProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  enabler_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  condition_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&condition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modified_) -
      reinterpret_cast<char*>(&condition_)) + sizeof(modified_));
}

ZenRuleProto::~ZenRuleProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.ZenRuleProto)
  SharedDtor();
}

void ZenRuleProto::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  enabler_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  condition_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete condition_;
  if (this != internal_default_instance()) delete component_;
  if (this != internal_default_instance()) delete zenpolicy_;
}

void ZenRuleProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ZenRuleProto& ZenRuleProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ZenRuleProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void ZenRuleProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.ZenRuleProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      enabler_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      condition_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(condition_ != nullptr);
      condition_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(component_ != nullptr);
      component_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(zenpolicy_ != nullptr);
      zenpolicy_->Clear();
    }
  }
  creation_time_ms_ = PROTOBUF_LONGLONG(0);
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&zen_mode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&modified_) -
        reinterpret_cast<char*>(&zen_mode_)) + sizeof(modified_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ZenRuleProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_id(), ptr, ctx, "android.service.notification.ZenRuleProto.id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_name(), ptr, ctx, "android.service.notification.ZenRuleProto.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 creation_time_ms = 3 [(.android.privacy) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_creation_time_ms(&has_bits);
          creation_time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool enabled = 4 [(.android.privacy) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_enabled(&has_bits);
          enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string enabler = 5 [(.android.privacy) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_enabler(), ptr, ctx, "android.service.notification.ZenRuleProto.enabler");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_snoozing = 6 [(.android.privacy) = {
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_is_snoozing(&has_bits);
          is_snoozing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenMode zen_mode = 7 [(.android.privacy) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenMode_IsValid(val))) {
            set_zen_mode(static_cast<::android::service::notification::ZenMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional string condition_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_condition_id(), ptr, ctx, "android.service.notification.ZenRuleProto.condition_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ConditionProto condition = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_condition(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.content.ComponentNameProto component = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_component(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto zenPolicy = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(mutable_zenpolicy(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool modified = 12 [(.android.privacy) = {
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_modified(&has_bits);
          modified_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ZenRuleProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.ZenRuleProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.ZenRuleProto.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.ZenRuleProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 creation_time_ms = 3 [(.android.privacy) = {
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_creation_time_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &creation_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enabled = 4 [(.android.privacy) = {
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_enabled(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string enabler = 5 [(.android.privacy) = {
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_enabler()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->enabler().data(), static_cast<int>(this->enabler().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.ZenRuleProto.enabler");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_snoozing = 6 [(.android.privacy) = {
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_is_snoozing(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_snoozing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenMode zen_mode = 7 [(.android.privacy) = {
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenMode_IsValid(value)) {
            set_zen_mode(static_cast< ::android::service::notification::ZenMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string condition_id = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_condition_id()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->condition_id().data(), static_cast<int>(this->condition_id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.ZenRuleProto.condition_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ConditionProto condition = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.content.ComponentNameProto component = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_component()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto zenPolicy = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_zenpolicy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool modified = 12 [(.android.privacy) = {
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {
          _Internal::set_has_modified(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.ZenRuleProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.ZenRuleProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ZenRuleProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.ZenRuleProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ZenRuleProto.id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ZenRuleProto.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional int64 creation_time_ms = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->creation_time_ms(), output);
  }

  // optional bool enabled = 4 [(.android.privacy) = {
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(4, this->enabled(), output);
  }

  // optional string enabler = 5 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->enabler().data(), static_cast<int>(this->enabler().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ZenRuleProto.enabler");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->enabler(), output);
  }

  // optional bool is_snoozing = 6 [(.android.privacy) = {
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->is_snoozing(), output);
  }

  // optional .android.service.notification.ZenMode zen_mode = 7 [(.android.privacy) = {
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      7, this->zen_mode(), output);
  }

  // optional string condition_id = 8;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->condition_id().data(), static_cast<int>(this->condition_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ZenRuleProto.condition_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->condition_id(), output);
  }

  // optional .android.service.notification.ConditionProto condition = 9;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, _Internal::condition(this), output);
  }

  // optional .android.content.ComponentNameProto component = 10;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, _Internal::component(this), output);
  }

  // optional .android.service.notification.ZenPolicyProto zenPolicy = 11;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, _Internal::zenpolicy(this), output);
  }

  // optional bool modified = 12 [(.android.privacy) = {
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(12, this->modified(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.ZenRuleProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ZenRuleProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.ZenRuleProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ZenRuleProto.id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ZenRuleProto.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int64 creation_time_ms = 3 [(.android.privacy) = {
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->creation_time_ms(), target);
  }

  // optional bool enabled = 4 [(.android.privacy) = {
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->enabled(), target);
  }

  // optional string enabler = 5 [(.android.privacy) = {
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->enabler().data(), static_cast<int>(this->enabler().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ZenRuleProto.enabler");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->enabler(), target);
  }

  // optional bool is_snoozing = 6 [(.android.privacy) = {
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->is_snoozing(), target);
  }

  // optional .android.service.notification.ZenMode zen_mode = 7 [(.android.privacy) = {
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->zen_mode(), target);
  }

  // optional string condition_id = 8;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->condition_id().data(), static_cast<int>(this->condition_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.ZenRuleProto.condition_id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        8, this->condition_id(), target);
  }

  // optional .android.service.notification.ConditionProto condition = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::condition(this), target);
  }

  // optional .android.content.ComponentNameProto component = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, _Internal::component(this), target);
  }

  // optional .android.service.notification.ZenPolicyProto zenPolicy = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, _Internal::zenpolicy(this), target);
  }

  // optional bool modified = 12 [(.android.privacy) = {
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->modified(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.ZenRuleProto)
  return target;
}

size_t ZenRuleProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.ZenRuleProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string enabler = 5 [(.android.privacy) = {
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->enabler());
    }

    // optional string condition_id = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->condition_id());
    }

    // optional .android.service.notification.ConditionProto condition = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *condition_);
    }

    // optional .android.content.ComponentNameProto component = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *component_);
    }

    // optional .android.service.notification.ZenPolicyProto zenPolicy = 11;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *zenpolicy_);
    }

    // optional int64 creation_time_ms = 3 [(.android.privacy) = {
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->creation_time_ms());
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional .android.service.notification.ZenMode zen_mode = 7 [(.android.privacy) = {
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->zen_mode());
    }

    // optional bool enabled = 4 [(.android.privacy) = {
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

    // optional bool is_snoozing = 6 [(.android.privacy) = {
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool modified = 12 [(.android.privacy) = {
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ZenRuleProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.ZenRuleProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ZenRuleProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ZenRuleProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.ZenRuleProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.ZenRuleProto)
    MergeFrom(*source);
  }
}

void ZenRuleProto::MergeFrom(const ZenRuleProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.ZenRuleProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      enabler_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.enabler_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      condition_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.condition_id_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_condition()->::android::service::notification::ConditionProto::MergeFrom(from.condition());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_component()->::android::content::ComponentNameProto::MergeFrom(from.component());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_zenpolicy()->::android::service::notification::ZenPolicyProto::MergeFrom(from.zenpolicy());
    }
    if (cached_has_bits & 0x00000080u) {
      creation_time_ms_ = from.creation_time_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      zen_mode_ = from.zen_mode_;
    }
    if (cached_has_bits & 0x00000200u) {
      enabled_ = from.enabled_;
    }
    if (cached_has_bits & 0x00000400u) {
      is_snoozing_ = from.is_snoozing_;
    }
    if (cached_has_bits & 0x00000800u) {
      modified_ = from.modified_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ZenRuleProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.ZenRuleProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZenRuleProto::CopyFrom(const ZenRuleProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.ZenRuleProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZenRuleProto::IsInitialized() const {
  return true;
}

void ZenRuleProto::InternalSwap(ZenRuleProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  enabler_.Swap(&other->enabler_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  condition_id_.Swap(&other->condition_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(condition_, other->condition_);
  swap(component_, other->component_);
  swap(zenpolicy_, other->zenpolicy_);
  swap(creation_time_ms_, other->creation_time_ms_);
  swap(zen_mode_, other->zen_mode_);
  swap(enabled_, other->enabled_);
  swap(is_snoozing_, other->is_snoozing_);
  swap(modified_, other->modified_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ZenRuleProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ZenModeProto::InitAsDefaultInstance() {
  ::android::service::notification::_ZenModeProto_default_instance_._instance.get_mutable()->policy_ = const_cast< ::android::app::PolicyProto*>(
      ::android::app::PolicyProto::internal_default_instance());
}
class ZenModeProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ZenModeProto>()._has_bits_);
  static void set_has_zen_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_suppressed_effects(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::android::app::PolicyProto& policy(const ZenModeProto* msg);
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::app::PolicyProto&
ZenModeProto::_Internal::policy(const ZenModeProto* msg) {
  return *msg->policy_;
}
void ZenModeProto::clear_suppressors() {
  suppressors_.Clear();
}
void ZenModeProto::clear_policy() {
  if (policy_ != nullptr) policy_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
ZenModeProto::ZenModeProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.ZenModeProto)
}
ZenModeProto::ZenModeProto(const ZenModeProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      enabled_active_conditions_(from.enabled_active_conditions_),
      suppressors_(from.suppressors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_policy()) {
    policy_ = new ::android::app::PolicyProto(*from.policy_);
  } else {
    policy_ = nullptr;
  }
  ::memcpy(&zen_mode_, &from.zen_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&suppressed_effects_) -
    reinterpret_cast<char*>(&zen_mode_)) + sizeof(suppressed_effects_));
  // @@protoc_insertion_point(copy_constructor:android.service.notification.ZenModeProto)
}

void ZenModeProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ZenModeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  ::memset(&policy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suppressed_effects_) -
      reinterpret_cast<char*>(&policy_)) + sizeof(suppressed_effects_));
}

ZenModeProto::~ZenModeProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.ZenModeProto)
  SharedDtor();
}

void ZenModeProto::SharedDtor() {
  if (this != internal_default_instance()) delete policy_;
}

void ZenModeProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ZenModeProto& ZenModeProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ZenModeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void ZenModeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.ZenModeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_active_conditions_.Clear();
  suppressors_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(policy_ != nullptr);
    policy_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&zen_mode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&suppressed_effects_) -
        reinterpret_cast<char*>(&zen_mode_)) + sizeof(suppressed_effects_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ZenModeProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.service.notification.ZenMode zen_mode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenMode_IsValid(val))) {
            set_zen_mode(static_cast<::android::service::notification::ZenMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated .android.service.notification.ZenRuleProto enabled_active_conditions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_enabled_active_conditions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // optional int32 suppressed_effects = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_suppressed_effects(&has_bits);
          suppressed_effects_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.content.ComponentNameProto suppressors = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_suppressors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // optional .android.app.PolicyProto policy = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_policy(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ZenModeProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.ZenModeProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.service.notification.ZenMode zen_mode = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenMode_IsValid(value)) {
            set_zen_mode(static_cast< ::android::service::notification::ZenMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.notification.ZenRuleProto enabled_active_conditions = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_enabled_active_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 suppressed_effects = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_suppressed_effects(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &suppressed_effects_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.content.ComponentNameProto suppressors = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_suppressors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.app.PolicyProto policy = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.ZenModeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.ZenModeProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ZenModeProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.ZenModeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.service.notification.ZenMode zen_mode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->zen_mode(), output);
  }

  // repeated .android.service.notification.ZenRuleProto enabled_active_conditions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enabled_active_conditions_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->enabled_active_conditions(static_cast<int>(i)),
      output);
  }

  // optional int32 suppressed_effects = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->suppressed_effects(), output);
  }

  // repeated .android.content.ComponentNameProto suppressors = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suppressors_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->suppressors(static_cast<int>(i)),
      output);
  }

  // optional .android.app.PolicyProto policy = 5;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, _Internal::policy(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.ZenModeProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ZenModeProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.ZenModeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.service.notification.ZenMode zen_mode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->zen_mode(), target);
  }

  // repeated .android.service.notification.ZenRuleProto enabled_active_conditions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enabled_active_conditions_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->enabled_active_conditions(static_cast<int>(i)), target);
  }

  // optional int32 suppressed_effects = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->suppressed_effects(), target);
  }

  // repeated .android.content.ComponentNameProto suppressors = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suppressors_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->suppressors(static_cast<int>(i)), target);
  }

  // optional .android.app.PolicyProto policy = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::policy(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.ZenModeProto)
  return target;
}

size_t ZenModeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.ZenModeProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.notification.ZenRuleProto enabled_active_conditions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->enabled_active_conditions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->enabled_active_conditions(static_cast<int>(i)));
    }
  }

  // repeated .android.content.ComponentNameProto suppressors = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->suppressors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->suppressors(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .android.app.PolicyProto policy = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *policy_);
    }

    // optional .android.service.notification.ZenMode zen_mode = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->zen_mode());
    }

    // optional int32 suppressed_effects = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->suppressed_effects());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ZenModeProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.ZenModeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ZenModeProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ZenModeProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.ZenModeProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.ZenModeProto)
    MergeFrom(*source);
  }
}

void ZenModeProto::MergeFrom(const ZenModeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.ZenModeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  enabled_active_conditions_.MergeFrom(from.enabled_active_conditions_);
  suppressors_.MergeFrom(from.suppressors_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_policy()->::android::app::PolicyProto::MergeFrom(from.policy());
    }
    if (cached_has_bits & 0x00000002u) {
      zen_mode_ = from.zen_mode_;
    }
    if (cached_has_bits & 0x00000004u) {
      suppressed_effects_ = from.suppressed_effects_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ZenModeProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.ZenModeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZenModeProto::CopyFrom(const ZenModeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.ZenModeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZenModeProto::IsInitialized() const {
  return true;
}

void ZenModeProto::InternalSwap(ZenModeProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&enabled_active_conditions_)->InternalSwap(CastToBase(&other->enabled_active_conditions_));
  CastToBase(&suppressors_)->InternalSwap(CastToBase(&other->suppressors_));
  swap(policy_, other->policy_);
  swap(zen_mode_, other->zen_mode_);
  swap(suppressed_effects_, other->suppressed_effects_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ZenModeProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ZenPolicyProto::InitAsDefaultInstance() {
}
class ZenPolicyProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ZenPolicyProto>()._has_bits_);
  static void set_has_reminders(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_events(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_messages(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_calls(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_repeat_callers(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_alarms(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_media(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_system(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_full_screen_intent(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_lights(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_peek(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_status_bar(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_badge(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_ambient(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_notification_list(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_priority_calls(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_priority_messages(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
};

ZenPolicyProto::ZenPolicyProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.ZenPolicyProto)
}
ZenPolicyProto::ZenPolicyProto(const ZenPolicyProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&reminders_, &from.reminders_,
    static_cast<size_t>(reinterpret_cast<char*>(&priority_messages_) -
    reinterpret_cast<char*>(&reminders_)) + sizeof(priority_messages_));
  // @@protoc_insertion_point(copy_constructor:android.service.notification.ZenPolicyProto)
}

void ZenPolicyProto::SharedCtor() {
  ::memset(&reminders_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&priority_messages_) -
      reinterpret_cast<char*>(&reminders_)) + sizeof(priority_messages_));
}

ZenPolicyProto::~ZenPolicyProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.ZenPolicyProto)
  SharedDtor();
}

void ZenPolicyProto::SharedDtor() {
}

void ZenPolicyProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ZenPolicyProto& ZenPolicyProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ZenPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void ZenPolicyProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.ZenPolicyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&reminders_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&system_) -
        reinterpret_cast<char*>(&reminders_)) + sizeof(system_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&full_screen_intent_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&priority_calls_) -
        reinterpret_cast<char*>(&full_screen_intent_)) + sizeof(priority_calls_));
  }
  priority_messages_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ZenPolicyProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.service.notification.ZenPolicyProto.State reminders = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_reminders(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.State events = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_events(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.State messages = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_messages(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.State calls = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_calls(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.State repeat_callers = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_repeat_callers(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.State alarms = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_alarms(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.State media = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_media(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.State system = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_system(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.State full_screen_intent = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_full_screen_intent(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.State lights = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_lights(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.State peek = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_peek(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(11, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.State status_bar = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_status_bar(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(12, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.State badge = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_badge(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(13, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.State ambient = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_ambient(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(14, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.State notification_list = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_State_IsValid(val))) {
            set_notification_list(static_cast<::android::service::notification::ZenPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(15, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.Sender priority_calls = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_Sender_IsValid(val))) {
            set_priority_calls(static_cast<::android::service::notification::ZenPolicyProto_Sender>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(16, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.ZenPolicyProto.Sender priority_messages = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::ZenPolicyProto_Sender_IsValid(val))) {
            set_priority_messages(static_cast<::android::service::notification::ZenPolicyProto_Sender>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(17, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ZenPolicyProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.ZenPolicyProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.service.notification.ZenPolicyProto.State reminders = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_reminders(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.State events = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_events(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.State messages = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_messages(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.State calls = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_calls(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.State repeat_callers = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_repeat_callers(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.State alarms = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_alarms(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.State media = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_media(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.State system = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_system(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                8, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.State full_screen_intent = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_full_screen_intent(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                9, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.State lights = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_lights(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.State peek = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_peek(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                11, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.State status_bar = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_status_bar(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                12, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.State badge = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (104 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_badge(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                13, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.State ambient = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_ambient(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                14, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.State notification_list = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (120 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_State_IsValid(value)) {
            set_notification_list(static_cast< ::android::service::notification::ZenPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                15, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.Sender priority_calls = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (128 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_Sender_IsValid(value)) {
            set_priority_calls(static_cast< ::android::service::notification::ZenPolicyProto_Sender >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                16, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.ZenPolicyProto.Sender priority_messages = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (136 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::ZenPolicyProto_Sender_IsValid(value)) {
            set_priority_messages(static_cast< ::android::service::notification::ZenPolicyProto_Sender >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                17, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.ZenPolicyProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.ZenPolicyProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ZenPolicyProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.ZenPolicyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.service.notification.ZenPolicyProto.State reminders = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->reminders(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.State events = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->events(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.State messages = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      3, this->messages(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.State calls = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      4, this->calls(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.State repeat_callers = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      5, this->repeat_callers(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.State alarms = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      6, this->alarms(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.State media = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      7, this->media(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.State system = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      8, this->system(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.State full_screen_intent = 9;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      9, this->full_screen_intent(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.State lights = 10;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      10, this->lights(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.State peek = 11;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      11, this->peek(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.State status_bar = 12;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      12, this->status_bar(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.State badge = 13;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      13, this->badge(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.State ambient = 14;
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      14, this->ambient(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.State notification_list = 15;
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      15, this->notification_list(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.Sender priority_calls = 16;
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      16, this->priority_calls(), output);
  }

  // optional .android.service.notification.ZenPolicyProto.Sender priority_messages = 17;
  if (cached_has_bits & 0x00010000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      17, this->priority_messages(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.ZenPolicyProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* ZenPolicyProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.ZenPolicyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.service.notification.ZenPolicyProto.State reminders = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->reminders(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.State events = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->events(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.State messages = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->messages(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.State calls = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->calls(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.State repeat_callers = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->repeat_callers(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.State alarms = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->alarms(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.State media = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->media(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.State system = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->system(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.State full_screen_intent = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->full_screen_intent(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.State lights = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->lights(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.State peek = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->peek(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.State status_bar = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->status_bar(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.State badge = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      13, this->badge(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.State ambient = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      14, this->ambient(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.State notification_list = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      15, this->notification_list(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.Sender priority_calls = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      16, this->priority_calls(), target);
  }

  // optional .android.service.notification.ZenPolicyProto.Sender priority_messages = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      17, this->priority_messages(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.ZenPolicyProto)
  return target;
}

size_t ZenPolicyProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.ZenPolicyProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .android.service.notification.ZenPolicyProto.State reminders = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->reminders());
    }

    // optional .android.service.notification.ZenPolicyProto.State events = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->events());
    }

    // optional .android.service.notification.ZenPolicyProto.State messages = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->messages());
    }

    // optional .android.service.notification.ZenPolicyProto.State calls = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->calls());
    }

    // optional .android.service.notification.ZenPolicyProto.State repeat_callers = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->repeat_callers());
    }

    // optional .android.service.notification.ZenPolicyProto.State alarms = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->alarms());
    }

    // optional .android.service.notification.ZenPolicyProto.State media = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->media());
    }

    // optional .android.service.notification.ZenPolicyProto.State system = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->system());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .android.service.notification.ZenPolicyProto.State full_screen_intent = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->full_screen_intent());
    }

    // optional .android.service.notification.ZenPolicyProto.State lights = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->lights());
    }

    // optional .android.service.notification.ZenPolicyProto.State peek = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->peek());
    }

    // optional .android.service.notification.ZenPolicyProto.State status_bar = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->status_bar());
    }

    // optional .android.service.notification.ZenPolicyProto.State badge = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->badge());
    }

    // optional .android.service.notification.ZenPolicyProto.State ambient = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->ambient());
    }

    // optional .android.service.notification.ZenPolicyProto.State notification_list = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->notification_list());
    }

    // optional .android.service.notification.ZenPolicyProto.Sender priority_calls = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->priority_calls());
    }

  }
  // optional .android.service.notification.ZenPolicyProto.Sender priority_messages = 17;
  if (cached_has_bits & 0x00010000u) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->priority_messages());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ZenPolicyProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.ZenPolicyProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ZenPolicyProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ZenPolicyProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.ZenPolicyProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.ZenPolicyProto)
    MergeFrom(*source);
  }
}

void ZenPolicyProto::MergeFrom(const ZenPolicyProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.ZenPolicyProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      reminders_ = from.reminders_;
    }
    if (cached_has_bits & 0x00000002u) {
      events_ = from.events_;
    }
    if (cached_has_bits & 0x00000004u) {
      messages_ = from.messages_;
    }
    if (cached_has_bits & 0x00000008u) {
      calls_ = from.calls_;
    }
    if (cached_has_bits & 0x00000010u) {
      repeat_callers_ = from.repeat_callers_;
    }
    if (cached_has_bits & 0x00000020u) {
      alarms_ = from.alarms_;
    }
    if (cached_has_bits & 0x00000040u) {
      media_ = from.media_;
    }
    if (cached_has_bits & 0x00000080u) {
      system_ = from.system_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      full_screen_intent_ = from.full_screen_intent_;
    }
    if (cached_has_bits & 0x00000200u) {
      lights_ = from.lights_;
    }
    if (cached_has_bits & 0x00000400u) {
      peek_ = from.peek_;
    }
    if (cached_has_bits & 0x00000800u) {
      status_bar_ = from.status_bar_;
    }
    if (cached_has_bits & 0x00001000u) {
      badge_ = from.badge_;
    }
    if (cached_has_bits & 0x00002000u) {
      ambient_ = from.ambient_;
    }
    if (cached_has_bits & 0x00004000u) {
      notification_list_ = from.notification_list_;
    }
    if (cached_has_bits & 0x00008000u) {
      priority_calls_ = from.priority_calls_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_priority_messages(from.priority_messages());
  }
}

void ZenPolicyProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.ZenPolicyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZenPolicyProto::CopyFrom(const ZenPolicyProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.ZenPolicyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZenPolicyProto::IsInitialized() const {
  return true;
}

void ZenPolicyProto::InternalSwap(ZenPolicyProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(reminders_, other->reminders_);
  swap(events_, other->events_);
  swap(messages_, other->messages_);
  swap(calls_, other->calls_);
  swap(repeat_callers_, other->repeat_callers_);
  swap(alarms_, other->alarms_);
  swap(media_, other->media_);
  swap(system_, other->system_);
  swap(full_screen_intent_, other->full_screen_intent_);
  swap(lights_, other->lights_);
  swap(peek_, other->peek_);
  swap(status_bar_, other->status_bar_);
  swap(badge_, other->badge_);
  swap(ambient_, other->ambient_);
  swap(notification_list_, other->notification_list_);
  swap(priority_calls_, other->priority_calls_);
  swap(priority_messages_, other->priority_messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ZenPolicyProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PackageRemoteViewInfoProto::InitAsDefaultInstance() {
}
class PackageRemoteViewInfoProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PackageRemoteViewInfoProto>()._has_bits_);
  static void set_has_package_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PackageRemoteViewInfoProto::PackageRemoteViewInfoProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.PackageRemoteViewInfoProto)
}
PackageRemoteViewInfoProto::PackageRemoteViewInfoProto(const PackageRemoteViewInfoProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_package_name()) {
    package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  // @@protoc_insertion_point(copy_constructor:android.service.notification.PackageRemoteViewInfoProto)
}

void PackageRemoteViewInfoProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PackageRemoteViewInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PackageRemoteViewInfoProto::~PackageRemoteViewInfoProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.PackageRemoteViewInfoProto)
  SharedDtor();
}

void PackageRemoteViewInfoProto::SharedDtor() {
  package_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PackageRemoteViewInfoProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageRemoteViewInfoProto& PackageRemoteViewInfoProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PackageRemoteViewInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void PackageRemoteViewInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.PackageRemoteViewInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    package_name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PackageRemoteViewInfoProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string package_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_package_name(), ptr, ctx, "android.service.notification.PackageRemoteViewInfoProto.package_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PackageRemoteViewInfoProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.PackageRemoteViewInfoProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string package_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package_name().data(), static_cast<int>(this->package_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.PackageRemoteViewInfoProto.package_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.PackageRemoteViewInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.PackageRemoteViewInfoProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PackageRemoteViewInfoProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.PackageRemoteViewInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string package_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.PackageRemoteViewInfoProto.package_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->package_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.PackageRemoteViewInfoProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* PackageRemoteViewInfoProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.PackageRemoteViewInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string package_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), static_cast<int>(this->package_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.PackageRemoteViewInfoProto.package_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->package_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.PackageRemoteViewInfoProto)
  return target;
}

size_t PackageRemoteViewInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.PackageRemoteViewInfoProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string package_name = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->package_name());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageRemoteViewInfoProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.PackageRemoteViewInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PackageRemoteViewInfoProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PackageRemoteViewInfoProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.PackageRemoteViewInfoProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.PackageRemoteViewInfoProto)
    MergeFrom(*source);
  }
}

void PackageRemoteViewInfoProto::MergeFrom(const PackageRemoteViewInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.PackageRemoteViewInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_package_name()) {
    _has_bits_[0] |= 0x00000001u;
    package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
}

void PackageRemoteViewInfoProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.PackageRemoteViewInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackageRemoteViewInfoProto::CopyFrom(const PackageRemoteViewInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.PackageRemoteViewInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageRemoteViewInfoProto::IsInitialized() const {
  return true;
}

void PackageRemoteViewInfoProto::InternalSwap(PackageRemoteViewInfoProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  package_name_.Swap(&other->package_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata PackageRemoteViewInfoProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NotificationRemoteViewsProto::InitAsDefaultInstance() {
}
class NotificationRemoteViewsProto::_Internal {
 public:
  using HasBits = decltype(std::declval<NotificationRemoteViewsProto>()._has_bits_);
};

NotificationRemoteViewsProto::NotificationRemoteViewsProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.NotificationRemoteViewsProto)
}
NotificationRemoteViewsProto::NotificationRemoteViewsProto(const NotificationRemoteViewsProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      package_remote_view_info_(from.package_remote_view_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:android.service.notification.NotificationRemoteViewsProto)
}

void NotificationRemoteViewsProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NotificationRemoteViewsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
}

NotificationRemoteViewsProto::~NotificationRemoteViewsProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.NotificationRemoteViewsProto)
  SharedDtor();
}

void NotificationRemoteViewsProto::SharedDtor() {
}

void NotificationRemoteViewsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotificationRemoteViewsProto& NotificationRemoteViewsProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NotificationRemoteViewsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void NotificationRemoteViewsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.NotificationRemoteViewsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  package_remote_view_info_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NotificationRemoteViewsProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.service.notification.PackageRemoteViewInfoProto package_remote_view_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_package_remote_view_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NotificationRemoteViewsProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.NotificationRemoteViewsProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.service.notification.PackageRemoteViewInfoProto package_remote_view_info = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_package_remote_view_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.NotificationRemoteViewsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.NotificationRemoteViewsProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NotificationRemoteViewsProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.NotificationRemoteViewsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.service.notification.PackageRemoteViewInfoProto package_remote_view_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->package_remote_view_info_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->package_remote_view_info(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.NotificationRemoteViewsProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* NotificationRemoteViewsProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.NotificationRemoteViewsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.service.notification.PackageRemoteViewInfoProto package_remote_view_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->package_remote_view_info_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->package_remote_view_info(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.NotificationRemoteViewsProto)
  return target;
}

size_t NotificationRemoteViewsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.NotificationRemoteViewsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.notification.PackageRemoteViewInfoProto package_remote_view_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->package_remote_view_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->package_remote_view_info(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotificationRemoteViewsProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.NotificationRemoteViewsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const NotificationRemoteViewsProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NotificationRemoteViewsProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.NotificationRemoteViewsProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.NotificationRemoteViewsProto)
    MergeFrom(*source);
  }
}

void NotificationRemoteViewsProto::MergeFrom(const NotificationRemoteViewsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.NotificationRemoteViewsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  package_remote_view_info_.MergeFrom(from.package_remote_view_info_);
}

void NotificationRemoteViewsProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.NotificationRemoteViewsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotificationRemoteViewsProto::CopyFrom(const NotificationRemoteViewsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.NotificationRemoteViewsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotificationRemoteViewsProto::IsInitialized() const {
  return true;
}

void NotificationRemoteViewsProto::InternalSwap(NotificationRemoteViewsProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&package_remote_view_info_)->InternalSwap(CastToBase(&other->package_remote_view_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotificationRemoteViewsProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DNDModeProto::InitAsDefaultInstance() {
  ::android::service::notification::_DNDModeProto_default_instance_._instance.get_mutable()->policy_ = const_cast< ::android::service::notification::DNDPolicyProto*>(
      ::android::service::notification::DNDPolicyProto::internal_default_instance());
}
class DNDModeProto::_Internal {
 public:
  using HasBits = decltype(std::declval<DNDModeProto>()._has_bits_);
  static void set_has_user(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_enabled(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_channels_bypassing(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_zen_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::android::service::notification::DNDPolicyProto& policy(const DNDModeProto* msg);
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::android::service::notification::DNDPolicyProto&
DNDModeProto::_Internal::policy(const DNDModeProto* msg) {
  return *msg->policy_;
}
DNDModeProto::DNDModeProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.DNDModeProto)
}
DNDModeProto::DNDModeProto(const DNDModeProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_policy()) {
    policy_ = new ::android::service::notification::DNDPolicyProto(*from.policy_);
  } else {
    policy_ = nullptr;
  }
  ::memcpy(&user_, &from.user_,
    static_cast<size_t>(reinterpret_cast<char*>(&zen_mode_) -
    reinterpret_cast<char*>(&user_)) + sizeof(zen_mode_));
  // @@protoc_insertion_point(copy_constructor:android.service.notification.DNDModeProto)
}

void DNDModeProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DNDModeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&policy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&policy_)) + sizeof(uid_));
  zen_mode_ = -1;
}

DNDModeProto::~DNDModeProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.DNDModeProto)
  SharedDtor();
}

void DNDModeProto::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete policy_;
}

void DNDModeProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DNDModeProto& DNDModeProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DNDModeProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void DNDModeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.DNDModeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(policy_ != nullptr);
      policy_->Clear();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&user_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uid_) -
        reinterpret_cast<char*>(&user_)) + sizeof(uid_));
    zen_mode_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DNDModeProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 user = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_user(&has_bits);
          user_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool enabled = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_enabled(&has_bits);
          enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool channels_bypassing = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_channels_bypassing(&has_bits);
          channels_bypassing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDModeProto.Mode zen_mode = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDModeProto_Mode_IsValid(val))) {
            set_zen_mode(static_cast<::android::service::notification::DNDModeProto_Mode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional string id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_id(), ptr, ctx, "android.service.notification.DNDModeProto.id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 uid = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_uid(&has_bits);
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto policy = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_policy(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DNDModeProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.DNDModeProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 user = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_user(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enabled = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_enabled(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool channels_bypassing = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_channels_bypassing(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &channels_bypassing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDModeProto.Mode zen_mode = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDModeProto_Mode_IsValid(value)) {
            set_zen_mode(static_cast< ::android::service::notification::DNDModeProto_Mode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string id = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.service.notification.DNDModeProto.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 uid = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_uid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto policy = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.DNDModeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.DNDModeProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DNDModeProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.DNDModeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 user = 1;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->user(), output);
  }

  // optional bool enabled = 2;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->enabled(), output);
  }

  // optional bool channels_bypassing = 3;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->channels_bypassing(), output);
  }

  // optional .android.service.notification.DNDModeProto.Mode zen_mode = 4;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      4, this->zen_mode(), output);
  }

  // optional string id = 5;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.DNDModeProto.id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->id(), output);
  }

  // optional int32 uid = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->uid(), output);
  }

  // optional .android.service.notification.DNDPolicyProto policy = 7;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, _Internal::policy(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.DNDModeProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* DNDModeProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.DNDModeProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 user = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->user(), target);
  }

  // optional bool enabled = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->enabled(), target);
  }

  // optional bool channels_bypassing = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->channels_bypassing(), target);
  }

  // optional .android.service.notification.DNDModeProto.Mode zen_mode = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->zen_mode(), target);
  }

  // optional string id = 5;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "android.service.notification.DNDModeProto.id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->id(), target);
  }

  // optional int32 uid = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->uid(), target);
  }

  // optional .android.service.notification.DNDPolicyProto policy = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::policy(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.DNDModeProto)
  return target;
}

size_t DNDModeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.DNDModeProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string id = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional .android.service.notification.DNDPolicyProto policy = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *policy_);
    }

    // optional int32 user = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->user());
    }

    // optional bool enabled = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool channels_bypassing = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional int32 uid = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->uid());
    }

    // optional .android.service.notification.DNDModeProto.Mode zen_mode = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->zen_mode());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DNDModeProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.DNDModeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DNDModeProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DNDModeProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.DNDModeProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.DNDModeProto)
    MergeFrom(*source);
  }
}

void DNDModeProto::MergeFrom(const DNDModeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.DNDModeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_policy()->::android::service::notification::DNDPolicyProto::MergeFrom(from.policy());
    }
    if (cached_has_bits & 0x00000004u) {
      user_ = from.user_;
    }
    if (cached_has_bits & 0x00000008u) {
      enabled_ = from.enabled_;
    }
    if (cached_has_bits & 0x00000010u) {
      channels_bypassing_ = from.channels_bypassing_;
    }
    if (cached_has_bits & 0x00000020u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000040u) {
      zen_mode_ = from.zen_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DNDModeProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.DNDModeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DNDModeProto::CopyFrom(const DNDModeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.DNDModeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DNDModeProto::IsInitialized() const {
  return true;
}

void DNDModeProto::InternalSwap(DNDModeProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(policy_, other->policy_);
  swap(user_, other->user_);
  swap(enabled_, other->enabled_);
  swap(channels_bypassing_, other->channels_bypassing_);
  swap(uid_, other->uid_);
  swap(zen_mode_, other->zen_mode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DNDModeProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DNDPolicyProto::InitAsDefaultInstance() {
}
class DNDPolicyProto::_Internal {
 public:
  using HasBits = decltype(std::declval<DNDPolicyProto>()._has_bits_);
  static void set_has_calls(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_repeat_callers(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_messages(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_conversations(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_reminders(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_events(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_alarms(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_media(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_system(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_fullscreen(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_lights(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_peek(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_status_bar(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_badge(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_ambient(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_notification_list(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_allow_calls_from(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_allow_messages_from(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_allow_conversations_from(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
};

DNDPolicyProto::DNDPolicyProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.notification.DNDPolicyProto)
}
DNDPolicyProto::DNDPolicyProto(const DNDPolicyProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&calls_, &from.calls_,
    static_cast<size_t>(reinterpret_cast<char*>(&allow_conversations_from_) -
    reinterpret_cast<char*>(&calls_)) + sizeof(allow_conversations_from_));
  // @@protoc_insertion_point(copy_constructor:android.service.notification.DNDPolicyProto)
}

void DNDPolicyProto::SharedCtor() {
  ::memset(&calls_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_conversations_from_) -
      reinterpret_cast<char*>(&calls_)) + sizeof(allow_conversations_from_));
}

DNDPolicyProto::~DNDPolicyProto() {
  // @@protoc_insertion_point(destructor:android.service.notification.DNDPolicyProto)
  SharedDtor();
}

void DNDPolicyProto::SharedDtor() {
}

void DNDPolicyProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DNDPolicyProto& DNDPolicyProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DNDPolicyProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnotification_2eproto.base);
  return *internal_default_instance();
}


void DNDPolicyProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.notification.DNDPolicyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&calls_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&media_) -
        reinterpret_cast<char*>(&calls_)) + sizeof(media_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&system_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&notification_list_) -
        reinterpret_cast<char*>(&system_)) + sizeof(notification_list_));
  }
  if (cached_has_bits & 0x00070000u) {
    ::memset(&allow_calls_from_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&allow_conversations_from_) -
        reinterpret_cast<char*>(&allow_calls_from_)) + sizeof(allow_conversations_from_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DNDPolicyProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.service.notification.DNDPolicyProto.State calls = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_calls(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State repeat_callers = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_repeat_callers(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State messages = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_messages(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State conversations = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_conversations(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State reminders = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_reminders(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State events = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_events(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State alarms = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_alarms(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State media = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_media(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State system = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_system(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State fullscreen = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_fullscreen(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State lights = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_lights(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(11, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State peek = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_peek(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(12, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State status_bar = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_status_bar(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(13, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State badge = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_badge(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(14, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State ambient = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_ambient(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(15, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.State notification_list = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_State_IsValid(val))) {
            set_notification_list(static_cast<::android::service::notification::DNDPolicyProto_State>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(16, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.PeopleType allow_calls_from = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_PeopleType_IsValid(val))) {
            set_allow_calls_from(static_cast<::android::service::notification::DNDPolicyProto_PeopleType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(17, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.PeopleType allow_messages_from = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_PeopleType_IsValid(val))) {
            set_allow_messages_from(static_cast<::android::service::notification::DNDPolicyProto_PeopleType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(18, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.service.notification.DNDPolicyProto.ConversationType allow_conversations_from = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::notification::DNDPolicyProto_ConversationType_IsValid(val))) {
            set_allow_conversations_from(static_cast<::android::service::notification::DNDPolicyProto_ConversationType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(19, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DNDPolicyProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.service.notification.DNDPolicyProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.service.notification.DNDPolicyProto.State calls = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_calls(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State repeat_callers = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_repeat_callers(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State messages = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_messages(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State conversations = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_conversations(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State reminders = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_reminders(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State events = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_events(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State alarms = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_alarms(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State media = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_media(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                8, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State system = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (72 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_system(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                9, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State fullscreen = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_fullscreen(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State lights = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (88 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_lights(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                11, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State peek = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (96 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_peek(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                12, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State status_bar = 13;
      case 13: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (104 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_status_bar(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                13, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State badge = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_badge(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                14, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State ambient = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (120 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_ambient(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                15, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.State notification_list = 16;
      case 16: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (128 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_State_IsValid(value)) {
            set_notification_list(static_cast< ::android::service::notification::DNDPolicyProto_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                16, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.PeopleType allow_calls_from = 17;
      case 17: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (136 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_PeopleType_IsValid(value)) {
            set_allow_calls_from(static_cast< ::android::service::notification::DNDPolicyProto_PeopleType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                17, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.PeopleType allow_messages_from = 18;
      case 18: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (144 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_PeopleType_IsValid(value)) {
            set_allow_messages_from(static_cast< ::android::service::notification::DNDPolicyProto_PeopleType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                18, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.notification.DNDPolicyProto.ConversationType allow_conversations_from = 19;
      case 19: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (152 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::notification::DNDPolicyProto_ConversationType_IsValid(value)) {
            set_allow_conversations_from(static_cast< ::android::service::notification::DNDPolicyProto_ConversationType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                19, static_cast<::PROTOBUF_NAMESPACE_ID::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.notification.DNDPolicyProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.notification.DNDPolicyProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DNDPolicyProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.notification.DNDPolicyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.service.notification.DNDPolicyProto.State calls = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->calls(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State repeat_callers = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->repeat_callers(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State messages = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      3, this->messages(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State conversations = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      4, this->conversations(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State reminders = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      5, this->reminders(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State events = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      6, this->events(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State alarms = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      7, this->alarms(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State media = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      8, this->media(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State system = 9;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      9, this->system(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State fullscreen = 10;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      10, this->fullscreen(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State lights = 11;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      11, this->lights(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State peek = 12;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      12, this->peek(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State status_bar = 13;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      13, this->status_bar(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State badge = 14;
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      14, this->badge(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State ambient = 15;
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      15, this->ambient(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.State notification_list = 16;
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      16, this->notification_list(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.PeopleType allow_calls_from = 17;
  if (cached_has_bits & 0x00010000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      17, this->allow_calls_from(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.PeopleType allow_messages_from = 18;
  if (cached_has_bits & 0x00020000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      18, this->allow_messages_from(), output);
  }

  // optional .android.service.notification.DNDPolicyProto.ConversationType allow_conversations_from = 19;
  if (cached_has_bits & 0x00040000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      19, this->allow_conversations_from(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.service.notification.DNDPolicyProto)
}

::PROTOBUF_NAMESPACE_ID::uint8* DNDPolicyProto::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.service.notification.DNDPolicyProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.service.notification.DNDPolicyProto.State calls = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->calls(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State repeat_callers = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->repeat_callers(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State messages = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->messages(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State conversations = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->conversations(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State reminders = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->reminders(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State events = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->events(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State alarms = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->alarms(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State media = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->media(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State system = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->system(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State fullscreen = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->fullscreen(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State lights = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->lights(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State peek = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->peek(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State status_bar = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      13, this->status_bar(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State badge = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      14, this->badge(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State ambient = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      15, this->ambient(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.State notification_list = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      16, this->notification_list(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.PeopleType allow_calls_from = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      17, this->allow_calls_from(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.PeopleType allow_messages_from = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      18, this->allow_messages_from(), target);
  }

  // optional .android.service.notification.DNDPolicyProto.ConversationType allow_conversations_from = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      19, this->allow_conversations_from(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.service.notification.DNDPolicyProto)
  return target;
}

size_t DNDPolicyProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.notification.DNDPolicyProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .android.service.notification.DNDPolicyProto.State calls = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->calls());
    }

    // optional .android.service.notification.DNDPolicyProto.State repeat_callers = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->repeat_callers());
    }

    // optional .android.service.notification.DNDPolicyProto.State messages = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->messages());
    }

    // optional .android.service.notification.DNDPolicyProto.State conversations = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->conversations());
    }

    // optional .android.service.notification.DNDPolicyProto.State reminders = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->reminders());
    }

    // optional .android.service.notification.DNDPolicyProto.State events = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->events());
    }

    // optional .android.service.notification.DNDPolicyProto.State alarms = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->alarms());
    }

    // optional .android.service.notification.DNDPolicyProto.State media = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->media());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .android.service.notification.DNDPolicyProto.State system = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->system());
    }

    // optional .android.service.notification.DNDPolicyProto.State fullscreen = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->fullscreen());
    }

    // optional .android.service.notification.DNDPolicyProto.State lights = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->lights());
    }

    // optional .android.service.notification.DNDPolicyProto.State peek = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->peek());
    }

    // optional .android.service.notification.DNDPolicyProto.State status_bar = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->status_bar());
    }

    // optional .android.service.notification.DNDPolicyProto.State badge = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->badge());
    }

    // optional .android.service.notification.DNDPolicyProto.State ambient = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->ambient());
    }

    // optional .android.service.notification.DNDPolicyProto.State notification_list = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->notification_list());
    }

  }
  if (cached_has_bits & 0x00070000u) {
    // optional .android.service.notification.DNDPolicyProto.PeopleType allow_calls_from = 17;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->allow_calls_from());
    }

    // optional .android.service.notification.DNDPolicyProto.PeopleType allow_messages_from = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->allow_messages_from());
    }

    // optional .android.service.notification.DNDPolicyProto.ConversationType allow_conversations_from = 19;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->allow_conversations_from());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DNDPolicyProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.service.notification.DNDPolicyProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DNDPolicyProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DNDPolicyProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.service.notification.DNDPolicyProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.service.notification.DNDPolicyProto)
    MergeFrom(*source);
  }
}

void DNDPolicyProto::MergeFrom(const DNDPolicyProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.notification.DNDPolicyProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      calls_ = from.calls_;
    }
    if (cached_has_bits & 0x00000002u) {
      repeat_callers_ = from.repeat_callers_;
    }
    if (cached_has_bits & 0x00000004u) {
      messages_ = from.messages_;
    }
    if (cached_has_bits & 0x00000008u) {
      conversations_ = from.conversations_;
    }
    if (cached_has_bits & 0x00000010u) {
      reminders_ = from.reminders_;
    }
    if (cached_has_bits & 0x00000020u) {
      events_ = from.events_;
    }
    if (cached_has_bits & 0x00000040u) {
      alarms_ = from.alarms_;
    }
    if (cached_has_bits & 0x00000080u) {
      media_ = from.media_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      system_ = from.system_;
    }
    if (cached_has_bits & 0x00000200u) {
      fullscreen_ = from.fullscreen_;
    }
    if (cached_has_bits & 0x00000400u) {
      lights_ = from.lights_;
    }
    if (cached_has_bits & 0x00000800u) {
      peek_ = from.peek_;
    }
    if (cached_has_bits & 0x00001000u) {
      status_bar_ = from.status_bar_;
    }
    if (cached_has_bits & 0x00002000u) {
      badge_ = from.badge_;
    }
    if (cached_has_bits & 0x00004000u) {
      ambient_ = from.ambient_;
    }
    if (cached_has_bits & 0x00008000u) {
      notification_list_ = from.notification_list_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00070000u) {
    if (cached_has_bits & 0x00010000u) {
      allow_calls_from_ = from.allow_calls_from_;
    }
    if (cached_has_bits & 0x00020000u) {
      allow_messages_from_ = from.allow_messages_from_;
    }
    if (cached_has_bits & 0x00040000u) {
      allow_conversations_from_ = from.allow_conversations_from_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DNDPolicyProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.service.notification.DNDPolicyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DNDPolicyProto::CopyFrom(const DNDPolicyProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.notification.DNDPolicyProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DNDPolicyProto::IsInitialized() const {
  return true;
}

void DNDPolicyProto::InternalSwap(DNDPolicyProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(calls_, other->calls_);
  swap(repeat_callers_, other->repeat_callers_);
  swap(messages_, other->messages_);
  swap(conversations_, other->conversations_);
  swap(reminders_, other->reminders_);
  swap(events_, other->events_);
  swap(alarms_, other->alarms_);
  swap(media_, other->media_);
  swap(system_, other->system_);
  swap(fullscreen_, other->fullscreen_);
  swap(lights_, other->lights_);
  swap(peek_, other->peek_);
  swap(status_bar_, other->status_bar_);
  swap(badge_, other->badge_);
  swap(ambient_, other->ambient_);
  swap(notification_list_, other->notification_list_);
  swap(allow_calls_from_, other->allow_calls_from_);
  swap(allow_messages_from_, other->allow_messages_from_);
  swap(allow_conversations_from_, other->allow_conversations_from_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DNDPolicyProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace notification
}  // namespace service
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::service::notification::NotificationServiceDumpProto* Arena::CreateMaybeMessage< ::android::service::notification::NotificationServiceDumpProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::NotificationServiceDumpProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::NotificationRecordProto* Arena::CreateMaybeMessage< ::android::service::notification::NotificationRecordProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::NotificationRecordProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::ListenersDisablingEffectsProto* Arena::CreateMaybeMessage< ::android::service::notification::ListenersDisablingEffectsProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::ListenersDisablingEffectsProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::ManagedServiceInfoProto* Arena::CreateMaybeMessage< ::android::service::notification::ManagedServiceInfoProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::ManagedServiceInfoProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::ManagedServicesProto_ServiceProto* Arena::CreateMaybeMessage< ::android::service::notification::ManagedServicesProto_ServiceProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::ManagedServicesProto_ServiceProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::ManagedServicesProto* Arena::CreateMaybeMessage< ::android::service::notification::ManagedServicesProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::ManagedServicesProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::RankingHelperProto_RecordProto* Arena::CreateMaybeMessage< ::android::service::notification::RankingHelperProto_RecordProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::RankingHelperProto_RecordProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::RankingHelperProto* Arena::CreateMaybeMessage< ::android::service::notification::RankingHelperProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::RankingHelperProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::ConditionProto* Arena::CreateMaybeMessage< ::android::service::notification::ConditionProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::ConditionProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::ZenRuleProto* Arena::CreateMaybeMessage< ::android::service::notification::ZenRuleProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::ZenRuleProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::ZenModeProto* Arena::CreateMaybeMessage< ::android::service::notification::ZenModeProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::ZenModeProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::ZenPolicyProto* Arena::CreateMaybeMessage< ::android::service::notification::ZenPolicyProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::ZenPolicyProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::PackageRemoteViewInfoProto* Arena::CreateMaybeMessage< ::android::service::notification::PackageRemoteViewInfoProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::PackageRemoteViewInfoProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::NotificationRemoteViewsProto* Arena::CreateMaybeMessage< ::android::service::notification::NotificationRemoteViewsProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::NotificationRemoteViewsProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::DNDModeProto* Arena::CreateMaybeMessage< ::android::service::notification::DNDModeProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::DNDModeProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::notification::DNDPolicyProto* Arena::CreateMaybeMessage< ::android::service::notification::DNDPolicyProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::notification::DNDPolicyProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
