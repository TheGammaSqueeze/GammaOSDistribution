// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/os/header.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fheader_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fheader_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fheader_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fheader_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace os {
class IncidentHeaderProto;
class IncidentHeaderProtoDefaultTypeInternal;
extern IncidentHeaderProtoDefaultTypeInternal _IncidentHeaderProto_default_instance_;
class IncidentHeaderProto_StatsdConfigKey;
class IncidentHeaderProto_StatsdConfigKeyDefaultTypeInternal;
extern IncidentHeaderProto_StatsdConfigKeyDefaultTypeInternal _IncidentHeaderProto_StatsdConfigKey_default_instance_;
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::os::IncidentHeaderProto* Arena::CreateMaybeMessage<::android::os::IncidentHeaderProto>(Arena*);
template<> ::android::os::IncidentHeaderProto_StatsdConfigKey* Arena::CreateMaybeMessage<::android::os::IncidentHeaderProto_StatsdConfigKey>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace os {

// ===================================================================

class IncidentHeaderProto_StatsdConfigKey :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.IncidentHeaderProto.StatsdConfigKey) */ {
 public:
  IncidentHeaderProto_StatsdConfigKey();
  virtual ~IncidentHeaderProto_StatsdConfigKey();

  IncidentHeaderProto_StatsdConfigKey(const IncidentHeaderProto_StatsdConfigKey& from);
  IncidentHeaderProto_StatsdConfigKey(IncidentHeaderProto_StatsdConfigKey&& from) noexcept
    : IncidentHeaderProto_StatsdConfigKey() {
    *this = ::std::move(from);
  }

  inline IncidentHeaderProto_StatsdConfigKey& operator=(const IncidentHeaderProto_StatsdConfigKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline IncidentHeaderProto_StatsdConfigKey& operator=(IncidentHeaderProto_StatsdConfigKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const IncidentHeaderProto_StatsdConfigKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IncidentHeaderProto_StatsdConfigKey* internal_default_instance() {
    return reinterpret_cast<const IncidentHeaderProto_StatsdConfigKey*>(
               &_IncidentHeaderProto_StatsdConfigKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IncidentHeaderProto_StatsdConfigKey& a, IncidentHeaderProto_StatsdConfigKey& b) {
    a.Swap(&b);
  }
  inline void Swap(IncidentHeaderProto_StatsdConfigKey* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IncidentHeaderProto_StatsdConfigKey* New() const final {
    return CreateMaybeMessage<IncidentHeaderProto_StatsdConfigKey>(nullptr);
  }

  IncidentHeaderProto_StatsdConfigKey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IncidentHeaderProto_StatsdConfigKey>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const IncidentHeaderProto_StatsdConfigKey& from);
  void MergeFrom(const IncidentHeaderProto_StatsdConfigKey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IncidentHeaderProto_StatsdConfigKey* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.IncidentHeaderProto.StatsdConfigKey";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 2,
    kUidFieldNumber = 1,
  };
  // optional int64 id = 2;
  bool has_id() const;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.IncidentHeaderProto.StatsdConfigKey)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fheader_2eproto;
};
// -------------------------------------------------------------------

class IncidentHeaderProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.IncidentHeaderProto) */ {
 public:
  IncidentHeaderProto();
  virtual ~IncidentHeaderProto();

  IncidentHeaderProto(const IncidentHeaderProto& from);
  IncidentHeaderProto(IncidentHeaderProto&& from) noexcept
    : IncidentHeaderProto() {
    *this = ::std::move(from);
  }

  inline IncidentHeaderProto& operator=(const IncidentHeaderProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline IncidentHeaderProto& operator=(IncidentHeaderProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const IncidentHeaderProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IncidentHeaderProto* internal_default_instance() {
    return reinterpret_cast<const IncidentHeaderProto*>(
               &_IncidentHeaderProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(IncidentHeaderProto& a, IncidentHeaderProto& b) {
    a.Swap(&b);
  }
  inline void Swap(IncidentHeaderProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IncidentHeaderProto* New() const final {
    return CreateMaybeMessage<IncidentHeaderProto>(nullptr);
  }

  IncidentHeaderProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IncidentHeaderProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const IncidentHeaderProto& from);
  void MergeFrom(const IncidentHeaderProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IncidentHeaderProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.IncidentHeaderProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef IncidentHeaderProto_StatsdConfigKey StatsdConfigKey;

  // accessors -------------------------------------------------------

  enum : int {
    kReasonFieldNumber = 2,
    kTriggerDetailsFieldNumber = 4,
    kConfigKeyFieldNumber = 3,
    kAlertIdFieldNumber = 1,
  };
  // optional string reason = 2;
  bool has_reason() const;
  void clear_reason();
  const std::string& reason() const;
  void set_reason(const std::string& value);
  void set_reason(std::string&& value);
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  std::string* mutable_reason();
  std::string* release_reason();
  void set_allocated_reason(std::string* reason);

  // optional bytes trigger_details = 4;
  bool has_trigger_details() const;
  void clear_trigger_details();
  const std::string& trigger_details() const;
  void set_trigger_details(const std::string& value);
  void set_trigger_details(std::string&& value);
  void set_trigger_details(const char* value);
  void set_trigger_details(const void* value, size_t size);
  std::string* mutable_trigger_details();
  std::string* release_trigger_details();
  void set_allocated_trigger_details(std::string* trigger_details);

  // optional .android.os.IncidentHeaderProto.StatsdConfigKey config_key = 3;
  bool has_config_key() const;
  void clear_config_key();
  const ::android::os::IncidentHeaderProto_StatsdConfigKey& config_key() const;
  ::android::os::IncidentHeaderProto_StatsdConfigKey* release_config_key();
  ::android::os::IncidentHeaderProto_StatsdConfigKey* mutable_config_key();
  void set_allocated_config_key(::android::os::IncidentHeaderProto_StatsdConfigKey* config_key);

  // optional int64 alert_id = 1;
  bool has_alert_id() const;
  void clear_alert_id();
  ::PROTOBUF_NAMESPACE_ID::int64 alert_id() const;
  void set_alert_id(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:android.os.IncidentHeaderProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reason_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr trigger_details_;
  ::android::os::IncidentHeaderProto_StatsdConfigKey* config_key_;
  ::PROTOBUF_NAMESPACE_ID::int64 alert_id_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fheader_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IncidentHeaderProto_StatsdConfigKey

// optional int32 uid = 1;
inline bool IncidentHeaderProto_StatsdConfigKey::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IncidentHeaderProto_StatsdConfigKey::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IncidentHeaderProto_StatsdConfigKey::uid() const {
  // @@protoc_insertion_point(field_get:android.os.IncidentHeaderProto.StatsdConfigKey.uid)
  return uid_;
}
inline void IncidentHeaderProto_StatsdConfigKey::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:android.os.IncidentHeaderProto.StatsdConfigKey.uid)
}

// optional int64 id = 2;
inline bool IncidentHeaderProto_StatsdConfigKey::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IncidentHeaderProto_StatsdConfigKey::clear_id() {
  id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 IncidentHeaderProto_StatsdConfigKey::id() const {
  // @@protoc_insertion_point(field_get:android.os.IncidentHeaderProto.StatsdConfigKey.id)
  return id_;
}
inline void IncidentHeaderProto_StatsdConfigKey::set_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
  // @@protoc_insertion_point(field_set:android.os.IncidentHeaderProto.StatsdConfigKey.id)
}

// -------------------------------------------------------------------

// IncidentHeaderProto

// optional int64 alert_id = 1;
inline bool IncidentHeaderProto::has_alert_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IncidentHeaderProto::clear_alert_id() {
  alert_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 IncidentHeaderProto::alert_id() const {
  // @@protoc_insertion_point(field_get:android.os.IncidentHeaderProto.alert_id)
  return alert_id_;
}
inline void IncidentHeaderProto::set_alert_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  alert_id_ = value;
  // @@protoc_insertion_point(field_set:android.os.IncidentHeaderProto.alert_id)
}

// optional string reason = 2;
inline bool IncidentHeaderProto::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IncidentHeaderProto::clear_reason() {
  reason_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& IncidentHeaderProto::reason() const {
  // @@protoc_insertion_point(field_get:android.os.IncidentHeaderProto.reason)
  return reason_.GetNoArena();
}
inline void IncidentHeaderProto::set_reason(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  reason_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.IncidentHeaderProto.reason)
}
inline void IncidentHeaderProto::set_reason(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  reason_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.IncidentHeaderProto.reason)
}
inline void IncidentHeaderProto::set_reason(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  reason_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.IncidentHeaderProto.reason)
}
inline void IncidentHeaderProto::set_reason(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  reason_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.IncidentHeaderProto.reason)
}
inline std::string* IncidentHeaderProto::mutable_reason() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.IncidentHeaderProto.reason)
  return reason_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* IncidentHeaderProto::release_reason() {
  // @@protoc_insertion_point(field_release:android.os.IncidentHeaderProto.reason)
  if (!has_reason()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return reason_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void IncidentHeaderProto::set_allocated_reason(std::string* reason) {
  if (reason != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  reason_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentHeaderProto.reason)
}

// optional .android.os.IncidentHeaderProto.StatsdConfigKey config_key = 3;
inline bool IncidentHeaderProto::has_config_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IncidentHeaderProto::clear_config_key() {
  if (config_key_ != nullptr) config_key_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::android::os::IncidentHeaderProto_StatsdConfigKey& IncidentHeaderProto::config_key() const {
  const ::android::os::IncidentHeaderProto_StatsdConfigKey* p = config_key_;
  // @@protoc_insertion_point(field_get:android.os.IncidentHeaderProto.config_key)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::IncidentHeaderProto_StatsdConfigKey*>(
      &::android::os::_IncidentHeaderProto_StatsdConfigKey_default_instance_);
}
inline ::android::os::IncidentHeaderProto_StatsdConfigKey* IncidentHeaderProto::release_config_key() {
  // @@protoc_insertion_point(field_release:android.os.IncidentHeaderProto.config_key)
  _has_bits_[0] &= ~0x00000004u;
  ::android::os::IncidentHeaderProto_StatsdConfigKey* temp = config_key_;
  config_key_ = nullptr;
  return temp;
}
inline ::android::os::IncidentHeaderProto_StatsdConfigKey* IncidentHeaderProto::mutable_config_key() {
  _has_bits_[0] |= 0x00000004u;
  if (config_key_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::IncidentHeaderProto_StatsdConfigKey>(GetArenaNoVirtual());
    config_key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.os.IncidentHeaderProto.config_key)
  return config_key_;
}
inline void IncidentHeaderProto::set_allocated_config_key(::android::os::IncidentHeaderProto_StatsdConfigKey* config_key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete config_key_;
  }
  if (config_key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      config_key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config_key, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  config_key_ = config_key;
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentHeaderProto.config_key)
}

// optional bytes trigger_details = 4;
inline bool IncidentHeaderProto::has_trigger_details() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IncidentHeaderProto::clear_trigger_details() {
  trigger_details_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& IncidentHeaderProto::trigger_details() const {
  // @@protoc_insertion_point(field_get:android.os.IncidentHeaderProto.trigger_details)
  return trigger_details_.GetNoArena();
}
inline void IncidentHeaderProto::set_trigger_details(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  trigger_details_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.IncidentHeaderProto.trigger_details)
}
inline void IncidentHeaderProto::set_trigger_details(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  trigger_details_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.IncidentHeaderProto.trigger_details)
}
inline void IncidentHeaderProto::set_trigger_details(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  trigger_details_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.IncidentHeaderProto.trigger_details)
}
inline void IncidentHeaderProto::set_trigger_details(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  trigger_details_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.IncidentHeaderProto.trigger_details)
}
inline std::string* IncidentHeaderProto::mutable_trigger_details() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.os.IncidentHeaderProto.trigger_details)
  return trigger_details_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* IncidentHeaderProto::release_trigger_details() {
  // @@protoc_insertion_point(field_release:android.os.IncidentHeaderProto.trigger_details)
  if (!has_trigger_details()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return trigger_details_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void IncidentHeaderProto::set_allocated_trigger_details(std::string* trigger_details) {
  if (trigger_details != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  trigger_details_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), trigger_details);
  // @@protoc_insertion_point(field_set_allocated:android.os.IncidentHeaderProto.trigger_details)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace os
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fheader_2eproto
