// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/app/appexitinfo.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fappexitinfo_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fappexitinfo_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "frameworks/base/core/proto/android/privacy.pb.h"
#include "frameworks/proto_logging/stats/enums/app/enums.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fappexitinfo_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fappexitinfo_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace app {
class ApplicationExitInfoProto;
class ApplicationExitInfoProtoDefaultTypeInternal;
extern ApplicationExitInfoProtoDefaultTypeInternal _ApplicationExitInfoProto_default_instance_;
}  // namespace app
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::app::ApplicationExitInfoProto* Arena::CreateMaybeMessage<::android::app::ApplicationExitInfoProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace app {

// ===================================================================

class ApplicationExitInfoProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.app.ApplicationExitInfoProto) */ {
 public:
  ApplicationExitInfoProto();
  virtual ~ApplicationExitInfoProto();

  ApplicationExitInfoProto(const ApplicationExitInfoProto& from);
  ApplicationExitInfoProto(ApplicationExitInfoProto&& from) noexcept
    : ApplicationExitInfoProto() {
    *this = ::std::move(from);
  }

  inline ApplicationExitInfoProto& operator=(const ApplicationExitInfoProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApplicationExitInfoProto& operator=(ApplicationExitInfoProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ApplicationExitInfoProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplicationExitInfoProto* internal_default_instance() {
    return reinterpret_cast<const ApplicationExitInfoProto*>(
               &_ApplicationExitInfoProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ApplicationExitInfoProto& a, ApplicationExitInfoProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ApplicationExitInfoProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ApplicationExitInfoProto* New() const final {
    return CreateMaybeMessage<ApplicationExitInfoProto>(nullptr);
  }

  ApplicationExitInfoProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ApplicationExitInfoProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ApplicationExitInfoProto& from);
  void MergeFrom(const ApplicationExitInfoProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ApplicationExitInfoProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.app.ApplicationExitInfoProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProcessNameFieldNumber = 5,
    kDescriptionFieldNumber = 14,
    kStateFieldNumber = 15,
    kTraceFileFieldNumber = 16,
    kPidFieldNumber = 1,
    kRealUidFieldNumber = 2,
    kPackageUidFieldNumber = 3,
    kDefiningUidFieldNumber = 4,
    kConnectionGroupFieldNumber = 6,
    kReasonFieldNumber = 7,
    kSubReasonFieldNumber = 8,
    kStatusFieldNumber = 9,
    kPssFieldNumber = 11,
    kRssFieldNumber = 12,
    kTimestampFieldNumber = 13,
    kImportanceFieldNumber = 10,
  };
  // optional string process_name = 5;
  bool has_process_name() const;
  void clear_process_name();
  const std::string& process_name() const;
  void set_process_name(const std::string& value);
  void set_process_name(std::string&& value);
  void set_process_name(const char* value);
  void set_process_name(const char* value, size_t size);
  std::string* mutable_process_name();
  std::string* release_process_name();
  void set_allocated_process_name(std::string* process_name);

  // optional string description = 14 [(.android.privacy) = {
  bool has_description() const;
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);

  // optional bytes state = 15;
  bool has_state() const;
  void clear_state();
  const std::string& state() const;
  void set_state(const std::string& value);
  void set_state(std::string&& value);
  void set_state(const char* value);
  void set_state(const void* value, size_t size);
  std::string* mutable_state();
  std::string* release_state();
  void set_allocated_state(std::string* state);

  // optional string trace_file = 16;
  bool has_trace_file() const;
  void clear_trace_file();
  const std::string& trace_file() const;
  void set_trace_file(const std::string& value);
  void set_trace_file(std::string&& value);
  void set_trace_file(const char* value);
  void set_trace_file(const char* value, size_t size);
  std::string* mutable_trace_file();
  std::string* release_trace_file();
  void set_allocated_trace_file(std::string* trace_file);

  // optional int32 pid = 1;
  bool has_pid() const;
  void clear_pid();
  ::PROTOBUF_NAMESPACE_ID::int32 pid() const;
  void set_pid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 real_uid = 2;
  bool has_real_uid() const;
  void clear_real_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 real_uid() const;
  void set_real_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 package_uid = 3;
  bool has_package_uid() const;
  void clear_package_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 package_uid() const;
  void set_package_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 defining_uid = 4;
  bool has_defining_uid() const;
  void clear_defining_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 defining_uid() const;
  void set_defining_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 connection_group = 6;
  bool has_connection_group() const;
  void clear_connection_group();
  ::PROTOBUF_NAMESPACE_ID::int32 connection_group() const;
  void set_connection_group(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional .android.app.AppExitReasonCode reason = 7;
  bool has_reason() const;
  void clear_reason();
  ::android::app::AppExitReasonCode reason() const;
  void set_reason(::android::app::AppExitReasonCode value);

  // optional .android.app.AppExitSubReasonCode sub_reason = 8;
  bool has_sub_reason() const;
  void clear_sub_reason();
  ::android::app::AppExitSubReasonCode sub_reason() const;
  void set_sub_reason(::android::app::AppExitSubReasonCode value);

  // optional int32 status = 9;
  bool has_status() const;
  void clear_status();
  ::PROTOBUF_NAMESPACE_ID::int32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 pss = 11;
  bool has_pss() const;
  void clear_pss();
  ::PROTOBUF_NAMESPACE_ID::int64 pss() const;
  void set_pss(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 rss = 12;
  bool has_rss() const;
  void clear_rss();
  ::PROTOBUF_NAMESPACE_ID::int64 rss() const;
  void set_rss(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 timestamp = 13;
  bool has_timestamp() const;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional .android.app.Importance importance = 10;
  bool has_importance() const;
  void clear_importance();
  ::android::app::Importance importance() const;
  void set_importance(::android::app::Importance value);

  // @@protoc_insertion_point(class_scope:android.app.ApplicationExitInfoProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr process_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr state_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr trace_file_;
  ::PROTOBUF_NAMESPACE_ID::int32 pid_;
  ::PROTOBUF_NAMESPACE_ID::int32 real_uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 package_uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 defining_uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 connection_group_;
  int reason_;
  int sub_reason_;
  ::PROTOBUF_NAMESPACE_ID::int32 status_;
  ::PROTOBUF_NAMESPACE_ID::int64 pss_;
  ::PROTOBUF_NAMESPACE_ID::int64 rss_;
  ::PROTOBUF_NAMESPACE_ID::int64 timestamp_;
  int importance_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fappexitinfo_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ApplicationExitInfoProto

// optional int32 pid = 1;
inline bool ApplicationExitInfoProto::has_pid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ApplicationExitInfoProto::clear_pid() {
  pid_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplicationExitInfoProto::pid() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.pid)
  return pid_;
}
inline void ApplicationExitInfoProto::set_pid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  pid_ = value;
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.pid)
}

// optional int32 real_uid = 2;
inline bool ApplicationExitInfoProto::has_real_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ApplicationExitInfoProto::clear_real_uid() {
  real_uid_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplicationExitInfoProto::real_uid() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.real_uid)
  return real_uid_;
}
inline void ApplicationExitInfoProto::set_real_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  real_uid_ = value;
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.real_uid)
}

// optional int32 package_uid = 3;
inline bool ApplicationExitInfoProto::has_package_uid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ApplicationExitInfoProto::clear_package_uid() {
  package_uid_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplicationExitInfoProto::package_uid() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.package_uid)
  return package_uid_;
}
inline void ApplicationExitInfoProto::set_package_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  package_uid_ = value;
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.package_uid)
}

// optional int32 defining_uid = 4;
inline bool ApplicationExitInfoProto::has_defining_uid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ApplicationExitInfoProto::clear_defining_uid() {
  defining_uid_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplicationExitInfoProto::defining_uid() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.defining_uid)
  return defining_uid_;
}
inline void ApplicationExitInfoProto::set_defining_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  defining_uid_ = value;
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.defining_uid)
}

// optional string process_name = 5;
inline bool ApplicationExitInfoProto::has_process_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplicationExitInfoProto::clear_process_name() {
  process_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ApplicationExitInfoProto::process_name() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.process_name)
  return process_name_.GetNoArena();
}
inline void ApplicationExitInfoProto::set_process_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  process_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.process_name)
}
inline void ApplicationExitInfoProto::set_process_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  process_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.app.ApplicationExitInfoProto.process_name)
}
inline void ApplicationExitInfoProto::set_process_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  process_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.app.ApplicationExitInfoProto.process_name)
}
inline void ApplicationExitInfoProto::set_process_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  process_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.app.ApplicationExitInfoProto.process_name)
}
inline std::string* ApplicationExitInfoProto::mutable_process_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.app.ApplicationExitInfoProto.process_name)
  return process_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ApplicationExitInfoProto::release_process_name() {
  // @@protoc_insertion_point(field_release:android.app.ApplicationExitInfoProto.process_name)
  if (!has_process_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return process_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ApplicationExitInfoProto::set_allocated_process_name(std::string* process_name) {
  if (process_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  process_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), process_name);
  // @@protoc_insertion_point(field_set_allocated:android.app.ApplicationExitInfoProto.process_name)
}

// optional int32 connection_group = 6;
inline bool ApplicationExitInfoProto::has_connection_group() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ApplicationExitInfoProto::clear_connection_group() {
  connection_group_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplicationExitInfoProto::connection_group() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.connection_group)
  return connection_group_;
}
inline void ApplicationExitInfoProto::set_connection_group(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  connection_group_ = value;
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.connection_group)
}

// optional .android.app.AppExitReasonCode reason = 7;
inline bool ApplicationExitInfoProto::has_reason() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ApplicationExitInfoProto::clear_reason() {
  reason_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::android::app::AppExitReasonCode ApplicationExitInfoProto::reason() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.reason)
  return static_cast< ::android::app::AppExitReasonCode >(reason_);
}
inline void ApplicationExitInfoProto::set_reason(::android::app::AppExitReasonCode value) {
  assert(::android::app::AppExitReasonCode_IsValid(value));
  _has_bits_[0] |= 0x00000200u;
  reason_ = value;
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.reason)
}

// optional .android.app.AppExitSubReasonCode sub_reason = 8;
inline bool ApplicationExitInfoProto::has_sub_reason() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ApplicationExitInfoProto::clear_sub_reason() {
  sub_reason_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::android::app::AppExitSubReasonCode ApplicationExitInfoProto::sub_reason() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.sub_reason)
  return static_cast< ::android::app::AppExitSubReasonCode >(sub_reason_);
}
inline void ApplicationExitInfoProto::set_sub_reason(::android::app::AppExitSubReasonCode value) {
  assert(::android::app::AppExitSubReasonCode_IsValid(value));
  _has_bits_[0] |= 0x00000400u;
  sub_reason_ = value;
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.sub_reason)
}

// optional int32 status = 9;
inline bool ApplicationExitInfoProto::has_status() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ApplicationExitInfoProto::clear_status() {
  status_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplicationExitInfoProto::status() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.status)
  return status_;
}
inline void ApplicationExitInfoProto::set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  status_ = value;
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.status)
}

// optional .android.app.Importance importance = 10;
inline bool ApplicationExitInfoProto::has_importance() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ApplicationExitInfoProto::clear_importance() {
  importance_ = 100;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::android::app::Importance ApplicationExitInfoProto::importance() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.importance)
  return static_cast< ::android::app::Importance >(importance_);
}
inline void ApplicationExitInfoProto::set_importance(::android::app::Importance value) {
  assert(::android::app::Importance_IsValid(value));
  _has_bits_[0] |= 0x00008000u;
  importance_ = value;
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.importance)
}

// optional int64 pss = 11;
inline bool ApplicationExitInfoProto::has_pss() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ApplicationExitInfoProto::clear_pss() {
  pss_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ApplicationExitInfoProto::pss() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.pss)
  return pss_;
}
inline void ApplicationExitInfoProto::set_pss(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00001000u;
  pss_ = value;
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.pss)
}

// optional int64 rss = 12;
inline bool ApplicationExitInfoProto::has_rss() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ApplicationExitInfoProto::clear_rss() {
  rss_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ApplicationExitInfoProto::rss() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.rss)
  return rss_;
}
inline void ApplicationExitInfoProto::set_rss(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00002000u;
  rss_ = value;
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.rss)
}

// optional int64 timestamp = 13;
inline bool ApplicationExitInfoProto::has_timestamp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ApplicationExitInfoProto::clear_timestamp() {
  timestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ApplicationExitInfoProto::timestamp() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.timestamp)
  return timestamp_;
}
inline void ApplicationExitInfoProto::set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00004000u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.timestamp)
}

// optional string description = 14 [(.android.privacy) = {
inline bool ApplicationExitInfoProto::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplicationExitInfoProto::clear_description() {
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ApplicationExitInfoProto::description() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.description)
  return description_.GetNoArena();
}
inline void ApplicationExitInfoProto::set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.description)
}
inline void ApplicationExitInfoProto::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.app.ApplicationExitInfoProto.description)
}
inline void ApplicationExitInfoProto::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.app.ApplicationExitInfoProto.description)
}
inline void ApplicationExitInfoProto::set_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.app.ApplicationExitInfoProto.description)
}
inline std::string* ApplicationExitInfoProto::mutable_description() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.app.ApplicationExitInfoProto.description)
  return description_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ApplicationExitInfoProto::release_description() {
  // @@protoc_insertion_point(field_release:android.app.ApplicationExitInfoProto.description)
  if (!has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return description_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ApplicationExitInfoProto::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  description_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:android.app.ApplicationExitInfoProto.description)
}

// optional bytes state = 15;
inline bool ApplicationExitInfoProto::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplicationExitInfoProto::clear_state() {
  state_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ApplicationExitInfoProto::state() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.state)
  return state_.GetNoArena();
}
inline void ApplicationExitInfoProto::set_state(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  state_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.state)
}
inline void ApplicationExitInfoProto::set_state(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  state_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.app.ApplicationExitInfoProto.state)
}
inline void ApplicationExitInfoProto::set_state(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  state_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.app.ApplicationExitInfoProto.state)
}
inline void ApplicationExitInfoProto::set_state(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  state_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.app.ApplicationExitInfoProto.state)
}
inline std::string* ApplicationExitInfoProto::mutable_state() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.app.ApplicationExitInfoProto.state)
  return state_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ApplicationExitInfoProto::release_state() {
  // @@protoc_insertion_point(field_release:android.app.ApplicationExitInfoProto.state)
  if (!has_state()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return state_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ApplicationExitInfoProto::set_allocated_state(std::string* state) {
  if (state != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  state_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:android.app.ApplicationExitInfoProto.state)
}

// optional string trace_file = 16;
inline bool ApplicationExitInfoProto::has_trace_file() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ApplicationExitInfoProto::clear_trace_file() {
  trace_file_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& ApplicationExitInfoProto::trace_file() const {
  // @@protoc_insertion_point(field_get:android.app.ApplicationExitInfoProto.trace_file)
  return trace_file_.GetNoArena();
}
inline void ApplicationExitInfoProto::set_trace_file(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  trace_file_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.app.ApplicationExitInfoProto.trace_file)
}
inline void ApplicationExitInfoProto::set_trace_file(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  trace_file_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.app.ApplicationExitInfoProto.trace_file)
}
inline void ApplicationExitInfoProto::set_trace_file(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  trace_file_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.app.ApplicationExitInfoProto.trace_file)
}
inline void ApplicationExitInfoProto::set_trace_file(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  trace_file_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.app.ApplicationExitInfoProto.trace_file)
}
inline std::string* ApplicationExitInfoProto::mutable_trace_file() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.app.ApplicationExitInfoProto.trace_file)
  return trace_file_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ApplicationExitInfoProto::release_trace_file() {
  // @@protoc_insertion_point(field_release:android.app.ApplicationExitInfoProto.trace_file)
  if (!has_trace_file()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return trace_file_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ApplicationExitInfoProto::set_allocated_trace_file(std::string* trace_file) {
  if (trace_file != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  trace_file_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), trace_file);
  // @@protoc_insertion_point(field_set_allocated:android.app.ApplicationExitInfoProto.trace_file)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace app
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fapp_2fappexitinfo_2eproto
