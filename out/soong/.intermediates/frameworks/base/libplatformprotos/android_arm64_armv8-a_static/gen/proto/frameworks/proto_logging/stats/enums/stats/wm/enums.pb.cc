// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/proto_logging/stats/enums/stats/wm/enums.proto

#include "frameworks/proto_logging/stats/enums/stats/wm/enums.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace android {
namespace stats {
namespace wm {
}  // namespace wm
}  // namespace stats
}  // namespace android
namespace android {
namespace stats {
namespace wm {
bool Orientation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> Orientation_strings[5] = {};

static const char Orientation_names[] =
  "ROTATION_0"
  "ROTATION_180"
  "ROTATION_270"
  "ROTATION_90"
  "UNKNOWN";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry Orientation_entries[] = {
  { {Orientation_names + 0, 10}, 1 },
  { {Orientation_names + 10, 12}, 3 },
  { {Orientation_names + 22, 12}, 4 },
  { {Orientation_names + 34, 11}, 2 },
  { {Orientation_names + 45, 7}, 0 },
};

static const int Orientation_entries_by_number[] = {
  4, // 0 -> UNKNOWN
  0, // 1 -> ROTATION_0
  3, // 2 -> ROTATION_90
  1, // 3 -> ROTATION_180
  2, // 4 -> ROTATION_270
};

const std::string& Orientation_Name(
    Orientation value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          Orientation_entries,
          Orientation_entries_by_number,
          5, Orientation_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      Orientation_entries,
      Orientation_entries_by_number,
      5, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     Orientation_strings[idx].get();
}
bool Orientation_Parse(
    const std::string& name, Orientation* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      Orientation_entries, 5, name, &int_value);
  if (success) {
    *value = static_cast<Orientation>(int_value);
  }
  return success;
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace wm
}  // namespace stats
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
