// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/service/graphicsstats.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace service {
class GraphicsStatsHistogramBucketProto;
class GraphicsStatsHistogramBucketProtoDefaultTypeInternal;
extern GraphicsStatsHistogramBucketProtoDefaultTypeInternal _GraphicsStatsHistogramBucketProto_default_instance_;
class GraphicsStatsJankSummaryProto;
class GraphicsStatsJankSummaryProtoDefaultTypeInternal;
extern GraphicsStatsJankSummaryProtoDefaultTypeInternal _GraphicsStatsJankSummaryProto_default_instance_;
class GraphicsStatsProto;
class GraphicsStatsProtoDefaultTypeInternal;
extern GraphicsStatsProtoDefaultTypeInternal _GraphicsStatsProto_default_instance_;
class GraphicsStatsServiceDumpProto;
class GraphicsStatsServiceDumpProtoDefaultTypeInternal;
extern GraphicsStatsServiceDumpProtoDefaultTypeInternal _GraphicsStatsServiceDumpProto_default_instance_;
}  // namespace service
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::service::GraphicsStatsHistogramBucketProto* Arena::CreateMaybeMessage<::android::service::GraphicsStatsHistogramBucketProto>(Arena*);
template<> ::android::service::GraphicsStatsJankSummaryProto* Arena::CreateMaybeMessage<::android::service::GraphicsStatsJankSummaryProto>(Arena*);
template<> ::android::service::GraphicsStatsProto* Arena::CreateMaybeMessage<::android::service::GraphicsStatsProto>(Arena*);
template<> ::android::service::GraphicsStatsServiceDumpProto* Arena::CreateMaybeMessage<::android::service::GraphicsStatsServiceDumpProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace service {

enum GraphicsStatsProto_PipelineType : int {
  GraphicsStatsProto_PipelineType_UNKNOWN = 0,
  GraphicsStatsProto_PipelineType_GL = 1,
  GraphicsStatsProto_PipelineType_VULKAN = 2
};
bool GraphicsStatsProto_PipelineType_IsValid(int value);
constexpr GraphicsStatsProto_PipelineType GraphicsStatsProto_PipelineType_PipelineType_MIN = GraphicsStatsProto_PipelineType_UNKNOWN;
constexpr GraphicsStatsProto_PipelineType GraphicsStatsProto_PipelineType_PipelineType_MAX = GraphicsStatsProto_PipelineType_VULKAN;
constexpr int GraphicsStatsProto_PipelineType_PipelineType_ARRAYSIZE = GraphicsStatsProto_PipelineType_PipelineType_MAX + 1;

const std::string& GraphicsStatsProto_PipelineType_Name(GraphicsStatsProto_PipelineType value);
template<typename T>
inline const std::string& GraphicsStatsProto_PipelineType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GraphicsStatsProto_PipelineType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GraphicsStatsProto_PipelineType_Name.");
  return GraphicsStatsProto_PipelineType_Name(static_cast<GraphicsStatsProto_PipelineType>(enum_t_value));
}
bool GraphicsStatsProto_PipelineType_Parse(
    const std::string& name, GraphicsStatsProto_PipelineType* value);
// ===================================================================

class GraphicsStatsServiceDumpProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.GraphicsStatsServiceDumpProto) */ {
 public:
  GraphicsStatsServiceDumpProto();
  virtual ~GraphicsStatsServiceDumpProto();

  GraphicsStatsServiceDumpProto(const GraphicsStatsServiceDumpProto& from);
  GraphicsStatsServiceDumpProto(GraphicsStatsServiceDumpProto&& from) noexcept
    : GraphicsStatsServiceDumpProto() {
    *this = ::std::move(from);
  }

  inline GraphicsStatsServiceDumpProto& operator=(const GraphicsStatsServiceDumpProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphicsStatsServiceDumpProto& operator=(GraphicsStatsServiceDumpProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GraphicsStatsServiceDumpProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GraphicsStatsServiceDumpProto* internal_default_instance() {
    return reinterpret_cast<const GraphicsStatsServiceDumpProto*>(
               &_GraphicsStatsServiceDumpProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GraphicsStatsServiceDumpProto& a, GraphicsStatsServiceDumpProto& b) {
    a.Swap(&b);
  }
  inline void Swap(GraphicsStatsServiceDumpProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GraphicsStatsServiceDumpProto* New() const final {
    return CreateMaybeMessage<GraphicsStatsServiceDumpProto>(nullptr);
  }

  GraphicsStatsServiceDumpProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GraphicsStatsServiceDumpProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const GraphicsStatsServiceDumpProto& from);
  void MergeFrom(const GraphicsStatsServiceDumpProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GraphicsStatsServiceDumpProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.GraphicsStatsServiceDumpProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatsFieldNumber = 1,
  };
  // repeated .android.service.GraphicsStatsProto stats = 1;
  int stats_size() const;
  void clear_stats();
  ::android::service::GraphicsStatsProto* mutable_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsProto >*
      mutable_stats();
  const ::android::service::GraphicsStatsProto& stats(int index) const;
  ::android::service::GraphicsStatsProto* add_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsProto >&
      stats() const;

  // @@protoc_insertion_point(class_scope:android.service.GraphicsStatsServiceDumpProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsProto > stats_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto;
};
// -------------------------------------------------------------------

class GraphicsStatsProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.GraphicsStatsProto) */ {
 public:
  GraphicsStatsProto();
  virtual ~GraphicsStatsProto();

  GraphicsStatsProto(const GraphicsStatsProto& from);
  GraphicsStatsProto(GraphicsStatsProto&& from) noexcept
    : GraphicsStatsProto() {
    *this = ::std::move(from);
  }

  inline GraphicsStatsProto& operator=(const GraphicsStatsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphicsStatsProto& operator=(GraphicsStatsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GraphicsStatsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GraphicsStatsProto* internal_default_instance() {
    return reinterpret_cast<const GraphicsStatsProto*>(
               &_GraphicsStatsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GraphicsStatsProto& a, GraphicsStatsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(GraphicsStatsProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GraphicsStatsProto* New() const final {
    return CreateMaybeMessage<GraphicsStatsProto>(nullptr);
  }

  GraphicsStatsProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GraphicsStatsProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const GraphicsStatsProto& from);
  void MergeFrom(const GraphicsStatsProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GraphicsStatsProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.GraphicsStatsProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef GraphicsStatsProto_PipelineType PipelineType;
  static constexpr PipelineType UNKNOWN =
    GraphicsStatsProto_PipelineType_UNKNOWN;
  static constexpr PipelineType GL =
    GraphicsStatsProto_PipelineType_GL;
  static constexpr PipelineType VULKAN =
    GraphicsStatsProto_PipelineType_VULKAN;
  static inline bool PipelineType_IsValid(int value) {
    return GraphicsStatsProto_PipelineType_IsValid(value);
  }
  static constexpr PipelineType PipelineType_MIN =
    GraphicsStatsProto_PipelineType_PipelineType_MIN;
  static constexpr PipelineType PipelineType_MAX =
    GraphicsStatsProto_PipelineType_PipelineType_MAX;
  static constexpr int PipelineType_ARRAYSIZE =
    GraphicsStatsProto_PipelineType_PipelineType_ARRAYSIZE;
  template<typename T>
  static inline const std::string& PipelineType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, PipelineType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function PipelineType_Name.");
    return GraphicsStatsProto_PipelineType_Name(enum_t_value);
  }
  static inline bool PipelineType_Parse(const std::string& name,
      PipelineType* value) {
    return GraphicsStatsProto_PipelineType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kHistogramFieldNumber = 6,
    kGpuHistogramFieldNumber = 7,
    kPackageNameFieldNumber = 1,
    kSummaryFieldNumber = 5,
    kVersionCodeFieldNumber = 2,
    kStatsStartFieldNumber = 3,
    kStatsEndFieldNumber = 4,
    kPipelineFieldNumber = 8,
  };
  // repeated .android.service.GraphicsStatsHistogramBucketProto histogram = 6;
  int histogram_size() const;
  void clear_histogram();
  ::android::service::GraphicsStatsHistogramBucketProto* mutable_histogram(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsHistogramBucketProto >*
      mutable_histogram();
  const ::android::service::GraphicsStatsHistogramBucketProto& histogram(int index) const;
  ::android::service::GraphicsStatsHistogramBucketProto* add_histogram();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsHistogramBucketProto >&
      histogram() const;

  // repeated .android.service.GraphicsStatsHistogramBucketProto gpu_histogram = 7;
  int gpu_histogram_size() const;
  void clear_gpu_histogram();
  ::android::service::GraphicsStatsHistogramBucketProto* mutable_gpu_histogram(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsHistogramBucketProto >*
      mutable_gpu_histogram();
  const ::android::service::GraphicsStatsHistogramBucketProto& gpu_histogram(int index) const;
  ::android::service::GraphicsStatsHistogramBucketProto* add_gpu_histogram();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsHistogramBucketProto >&
      gpu_histogram() const;

  // optional string package_name = 1;
  bool has_package_name() const;
  void clear_package_name();
  const std::string& package_name() const;
  void set_package_name(const std::string& value);
  void set_package_name(std::string&& value);
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  std::string* mutable_package_name();
  std::string* release_package_name();
  void set_allocated_package_name(std::string* package_name);

  // optional .android.service.GraphicsStatsJankSummaryProto summary = 5;
  bool has_summary() const;
  void clear_summary();
  const ::android::service::GraphicsStatsJankSummaryProto& summary() const;
  ::android::service::GraphicsStatsJankSummaryProto* release_summary();
  ::android::service::GraphicsStatsJankSummaryProto* mutable_summary();
  void set_allocated_summary(::android::service::GraphicsStatsJankSummaryProto* summary);

  // optional int64 version_code = 2;
  bool has_version_code() const;
  void clear_version_code();
  ::PROTOBUF_NAMESPACE_ID::int64 version_code() const;
  void set_version_code(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 stats_start = 3;
  bool has_stats_start() const;
  void clear_stats_start();
  ::PROTOBUF_NAMESPACE_ID::int64 stats_start() const;
  void set_stats_start(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 stats_end = 4;
  bool has_stats_end() const;
  void clear_stats_end();
  ::PROTOBUF_NAMESPACE_ID::int64 stats_end() const;
  void set_stats_end(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional .android.service.GraphicsStatsProto.PipelineType pipeline = 8;
  bool has_pipeline() const;
  void clear_pipeline();
  ::android::service::GraphicsStatsProto_PipelineType pipeline() const;
  void set_pipeline(::android::service::GraphicsStatsProto_PipelineType value);

  // @@protoc_insertion_point(class_scope:android.service.GraphicsStatsProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsHistogramBucketProto > histogram_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsHistogramBucketProto > gpu_histogram_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr package_name_;
  ::android::service::GraphicsStatsJankSummaryProto* summary_;
  ::PROTOBUF_NAMESPACE_ID::int64 version_code_;
  ::PROTOBUF_NAMESPACE_ID::int64 stats_start_;
  ::PROTOBUF_NAMESPACE_ID::int64 stats_end_;
  int pipeline_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto;
};
// -------------------------------------------------------------------

class GraphicsStatsJankSummaryProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.GraphicsStatsJankSummaryProto) */ {
 public:
  GraphicsStatsJankSummaryProto();
  virtual ~GraphicsStatsJankSummaryProto();

  GraphicsStatsJankSummaryProto(const GraphicsStatsJankSummaryProto& from);
  GraphicsStatsJankSummaryProto(GraphicsStatsJankSummaryProto&& from) noexcept
    : GraphicsStatsJankSummaryProto() {
    *this = ::std::move(from);
  }

  inline GraphicsStatsJankSummaryProto& operator=(const GraphicsStatsJankSummaryProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphicsStatsJankSummaryProto& operator=(GraphicsStatsJankSummaryProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GraphicsStatsJankSummaryProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GraphicsStatsJankSummaryProto* internal_default_instance() {
    return reinterpret_cast<const GraphicsStatsJankSummaryProto*>(
               &_GraphicsStatsJankSummaryProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GraphicsStatsJankSummaryProto& a, GraphicsStatsJankSummaryProto& b) {
    a.Swap(&b);
  }
  inline void Swap(GraphicsStatsJankSummaryProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GraphicsStatsJankSummaryProto* New() const final {
    return CreateMaybeMessage<GraphicsStatsJankSummaryProto>(nullptr);
  }

  GraphicsStatsJankSummaryProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GraphicsStatsJankSummaryProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const GraphicsStatsJankSummaryProto& from);
  void MergeFrom(const GraphicsStatsJankSummaryProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GraphicsStatsJankSummaryProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.GraphicsStatsJankSummaryProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTotalFramesFieldNumber = 1,
    kJankyFramesFieldNumber = 2,
    kMissedVsyncCountFieldNumber = 3,
    kHighInputLatencyCountFieldNumber = 4,
    kSlowUiThreadCountFieldNumber = 5,
    kSlowBitmapUploadCountFieldNumber = 6,
    kSlowDrawCountFieldNumber = 7,
    kMissedDeadlineCountFieldNumber = 8,
  };
  // optional int32 total_frames = 1;
  bool has_total_frames() const;
  void clear_total_frames();
  ::PROTOBUF_NAMESPACE_ID::int32 total_frames() const;
  void set_total_frames(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 janky_frames = 2;
  bool has_janky_frames() const;
  void clear_janky_frames();
  ::PROTOBUF_NAMESPACE_ID::int32 janky_frames() const;
  void set_janky_frames(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 missed_vsync_count = 3;
  bool has_missed_vsync_count() const;
  void clear_missed_vsync_count();
  ::PROTOBUF_NAMESPACE_ID::int32 missed_vsync_count() const;
  void set_missed_vsync_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 high_input_latency_count = 4;
  bool has_high_input_latency_count() const;
  void clear_high_input_latency_count();
  ::PROTOBUF_NAMESPACE_ID::int32 high_input_latency_count() const;
  void set_high_input_latency_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 slow_ui_thread_count = 5;
  bool has_slow_ui_thread_count() const;
  void clear_slow_ui_thread_count();
  ::PROTOBUF_NAMESPACE_ID::int32 slow_ui_thread_count() const;
  void set_slow_ui_thread_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 slow_bitmap_upload_count = 6;
  bool has_slow_bitmap_upload_count() const;
  void clear_slow_bitmap_upload_count();
  ::PROTOBUF_NAMESPACE_ID::int32 slow_bitmap_upload_count() const;
  void set_slow_bitmap_upload_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 slow_draw_count = 7;
  bool has_slow_draw_count() const;
  void clear_slow_draw_count();
  ::PROTOBUF_NAMESPACE_ID::int32 slow_draw_count() const;
  void set_slow_draw_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 missed_deadline_count = 8;
  bool has_missed_deadline_count() const;
  void clear_missed_deadline_count();
  ::PROTOBUF_NAMESPACE_ID::int32 missed_deadline_count() const;
  void set_missed_deadline_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.service.GraphicsStatsJankSummaryProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_frames_;
  ::PROTOBUF_NAMESPACE_ID::int32 janky_frames_;
  ::PROTOBUF_NAMESPACE_ID::int32 missed_vsync_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 high_input_latency_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 slow_ui_thread_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 slow_bitmap_upload_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 slow_draw_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 missed_deadline_count_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto;
};
// -------------------------------------------------------------------

class GraphicsStatsHistogramBucketProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.GraphicsStatsHistogramBucketProto) */ {
 public:
  GraphicsStatsHistogramBucketProto();
  virtual ~GraphicsStatsHistogramBucketProto();

  GraphicsStatsHistogramBucketProto(const GraphicsStatsHistogramBucketProto& from);
  GraphicsStatsHistogramBucketProto(GraphicsStatsHistogramBucketProto&& from) noexcept
    : GraphicsStatsHistogramBucketProto() {
    *this = ::std::move(from);
  }

  inline GraphicsStatsHistogramBucketProto& operator=(const GraphicsStatsHistogramBucketProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphicsStatsHistogramBucketProto& operator=(GraphicsStatsHistogramBucketProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GraphicsStatsHistogramBucketProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GraphicsStatsHistogramBucketProto* internal_default_instance() {
    return reinterpret_cast<const GraphicsStatsHistogramBucketProto*>(
               &_GraphicsStatsHistogramBucketProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GraphicsStatsHistogramBucketProto& a, GraphicsStatsHistogramBucketProto& b) {
    a.Swap(&b);
  }
  inline void Swap(GraphicsStatsHistogramBucketProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GraphicsStatsHistogramBucketProto* New() const final {
    return CreateMaybeMessage<GraphicsStatsHistogramBucketProto>(nullptr);
  }

  GraphicsStatsHistogramBucketProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GraphicsStatsHistogramBucketProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const GraphicsStatsHistogramBucketProto& from);
  void MergeFrom(const GraphicsStatsHistogramBucketProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GraphicsStatsHistogramBucketProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.GraphicsStatsHistogramBucketProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRenderMillisFieldNumber = 1,
    kFrameCountFieldNumber = 2,
  };
  // optional int32 render_millis = 1;
  bool has_render_millis() const;
  void clear_render_millis();
  ::PROTOBUF_NAMESPACE_ID::int32 render_millis() const;
  void set_render_millis(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 frame_count = 2;
  bool has_frame_count() const;
  void clear_frame_count();
  ::PROTOBUF_NAMESPACE_ID::int32 frame_count() const;
  void set_frame_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.service.GraphicsStatsHistogramBucketProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 render_millis_;
  ::PROTOBUF_NAMESPACE_ID::int32 frame_count_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GraphicsStatsServiceDumpProto

// repeated .android.service.GraphicsStatsProto stats = 1;
inline int GraphicsStatsServiceDumpProto::stats_size() const {
  return stats_.size();
}
inline void GraphicsStatsServiceDumpProto::clear_stats() {
  stats_.Clear();
}
inline ::android::service::GraphicsStatsProto* GraphicsStatsServiceDumpProto::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.GraphicsStatsServiceDumpProto.stats)
  return stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsProto >*
GraphicsStatsServiceDumpProto::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:android.service.GraphicsStatsServiceDumpProto.stats)
  return &stats_;
}
inline const ::android::service::GraphicsStatsProto& GraphicsStatsServiceDumpProto::stats(int index) const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsServiceDumpProto.stats)
  return stats_.Get(index);
}
inline ::android::service::GraphicsStatsProto* GraphicsStatsServiceDumpProto::add_stats() {
  // @@protoc_insertion_point(field_add:android.service.GraphicsStatsServiceDumpProto.stats)
  return stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsProto >&
GraphicsStatsServiceDumpProto::stats() const {
  // @@protoc_insertion_point(field_list:android.service.GraphicsStatsServiceDumpProto.stats)
  return stats_;
}

// -------------------------------------------------------------------

// GraphicsStatsProto

// optional string package_name = 1;
inline bool GraphicsStatsProto::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GraphicsStatsProto::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GraphicsStatsProto::package_name() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsProto.package_name)
  return package_name_.GetNoArena();
}
inline void GraphicsStatsProto::set_package_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsProto.package_name)
}
inline void GraphicsStatsProto::set_package_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.GraphicsStatsProto.package_name)
}
inline void GraphicsStatsProto::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.GraphicsStatsProto.package_name)
}
inline void GraphicsStatsProto::set_package_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.GraphicsStatsProto.package_name)
}
inline std::string* GraphicsStatsProto::mutable_package_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.service.GraphicsStatsProto.package_name)
  return package_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GraphicsStatsProto::release_package_name() {
  // @@protoc_insertion_point(field_release:android.service.GraphicsStatsProto.package_name)
  if (!has_package_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return package_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GraphicsStatsProto::set_allocated_package_name(std::string* package_name) {
  if (package_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  package_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:android.service.GraphicsStatsProto.package_name)
}

// optional int64 version_code = 2;
inline bool GraphicsStatsProto::has_version_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GraphicsStatsProto::clear_version_code() {
  version_code_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GraphicsStatsProto::version_code() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsProto.version_code)
  return version_code_;
}
inline void GraphicsStatsProto::set_version_code(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  version_code_ = value;
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsProto.version_code)
}

// optional int64 stats_start = 3;
inline bool GraphicsStatsProto::has_stats_start() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GraphicsStatsProto::clear_stats_start() {
  stats_start_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GraphicsStatsProto::stats_start() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsProto.stats_start)
  return stats_start_;
}
inline void GraphicsStatsProto::set_stats_start(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  stats_start_ = value;
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsProto.stats_start)
}

// optional int64 stats_end = 4;
inline bool GraphicsStatsProto::has_stats_end() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GraphicsStatsProto::clear_stats_end() {
  stats_end_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GraphicsStatsProto::stats_end() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsProto.stats_end)
  return stats_end_;
}
inline void GraphicsStatsProto::set_stats_end(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  stats_end_ = value;
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsProto.stats_end)
}

// optional .android.service.GraphicsStatsJankSummaryProto summary = 5;
inline bool GraphicsStatsProto::has_summary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GraphicsStatsProto::clear_summary() {
  if (summary_ != nullptr) summary_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::android::service::GraphicsStatsJankSummaryProto& GraphicsStatsProto::summary() const {
  const ::android::service::GraphicsStatsJankSummaryProto* p = summary_;
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsProto.summary)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::service::GraphicsStatsJankSummaryProto*>(
      &::android::service::_GraphicsStatsJankSummaryProto_default_instance_);
}
inline ::android::service::GraphicsStatsJankSummaryProto* GraphicsStatsProto::release_summary() {
  // @@protoc_insertion_point(field_release:android.service.GraphicsStatsProto.summary)
  _has_bits_[0] &= ~0x00000002u;
  ::android::service::GraphicsStatsJankSummaryProto* temp = summary_;
  summary_ = nullptr;
  return temp;
}
inline ::android::service::GraphicsStatsJankSummaryProto* GraphicsStatsProto::mutable_summary() {
  _has_bits_[0] |= 0x00000002u;
  if (summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::service::GraphicsStatsJankSummaryProto>(GetArenaNoVirtual());
    summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.service.GraphicsStatsProto.summary)
  return summary_;
}
inline void GraphicsStatsProto::set_allocated_summary(::android::service::GraphicsStatsJankSummaryProto* summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete summary_;
  }
  if (summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, summary, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  summary_ = summary;
  // @@protoc_insertion_point(field_set_allocated:android.service.GraphicsStatsProto.summary)
}

// repeated .android.service.GraphicsStatsHistogramBucketProto histogram = 6;
inline int GraphicsStatsProto::histogram_size() const {
  return histogram_.size();
}
inline void GraphicsStatsProto::clear_histogram() {
  histogram_.Clear();
}
inline ::android::service::GraphicsStatsHistogramBucketProto* GraphicsStatsProto::mutable_histogram(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.GraphicsStatsProto.histogram)
  return histogram_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsHistogramBucketProto >*
GraphicsStatsProto::mutable_histogram() {
  // @@protoc_insertion_point(field_mutable_list:android.service.GraphicsStatsProto.histogram)
  return &histogram_;
}
inline const ::android::service::GraphicsStatsHistogramBucketProto& GraphicsStatsProto::histogram(int index) const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsProto.histogram)
  return histogram_.Get(index);
}
inline ::android::service::GraphicsStatsHistogramBucketProto* GraphicsStatsProto::add_histogram() {
  // @@protoc_insertion_point(field_add:android.service.GraphicsStatsProto.histogram)
  return histogram_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsHistogramBucketProto >&
GraphicsStatsProto::histogram() const {
  // @@protoc_insertion_point(field_list:android.service.GraphicsStatsProto.histogram)
  return histogram_;
}

// repeated .android.service.GraphicsStatsHistogramBucketProto gpu_histogram = 7;
inline int GraphicsStatsProto::gpu_histogram_size() const {
  return gpu_histogram_.size();
}
inline void GraphicsStatsProto::clear_gpu_histogram() {
  gpu_histogram_.Clear();
}
inline ::android::service::GraphicsStatsHistogramBucketProto* GraphicsStatsProto::mutable_gpu_histogram(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.GraphicsStatsProto.gpu_histogram)
  return gpu_histogram_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsHistogramBucketProto >*
GraphicsStatsProto::mutable_gpu_histogram() {
  // @@protoc_insertion_point(field_mutable_list:android.service.GraphicsStatsProto.gpu_histogram)
  return &gpu_histogram_;
}
inline const ::android::service::GraphicsStatsHistogramBucketProto& GraphicsStatsProto::gpu_histogram(int index) const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsProto.gpu_histogram)
  return gpu_histogram_.Get(index);
}
inline ::android::service::GraphicsStatsHistogramBucketProto* GraphicsStatsProto::add_gpu_histogram() {
  // @@protoc_insertion_point(field_add:android.service.GraphicsStatsProto.gpu_histogram)
  return gpu_histogram_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::GraphicsStatsHistogramBucketProto >&
GraphicsStatsProto::gpu_histogram() const {
  // @@protoc_insertion_point(field_list:android.service.GraphicsStatsProto.gpu_histogram)
  return gpu_histogram_;
}

// optional .android.service.GraphicsStatsProto.PipelineType pipeline = 8;
inline bool GraphicsStatsProto::has_pipeline() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GraphicsStatsProto::clear_pipeline() {
  pipeline_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::android::service::GraphicsStatsProto_PipelineType GraphicsStatsProto::pipeline() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsProto.pipeline)
  return static_cast< ::android::service::GraphicsStatsProto_PipelineType >(pipeline_);
}
inline void GraphicsStatsProto::set_pipeline(::android::service::GraphicsStatsProto_PipelineType value) {
  assert(::android::service::GraphicsStatsProto_PipelineType_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  pipeline_ = value;
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsProto.pipeline)
}

// -------------------------------------------------------------------

// GraphicsStatsJankSummaryProto

// optional int32 total_frames = 1;
inline bool GraphicsStatsJankSummaryProto::has_total_frames() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GraphicsStatsJankSummaryProto::clear_total_frames() {
  total_frames_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GraphicsStatsJankSummaryProto::total_frames() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsJankSummaryProto.total_frames)
  return total_frames_;
}
inline void GraphicsStatsJankSummaryProto::set_total_frames(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  total_frames_ = value;
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsJankSummaryProto.total_frames)
}

// optional int32 janky_frames = 2;
inline bool GraphicsStatsJankSummaryProto::has_janky_frames() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GraphicsStatsJankSummaryProto::clear_janky_frames() {
  janky_frames_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GraphicsStatsJankSummaryProto::janky_frames() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsJankSummaryProto.janky_frames)
  return janky_frames_;
}
inline void GraphicsStatsJankSummaryProto::set_janky_frames(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  janky_frames_ = value;
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsJankSummaryProto.janky_frames)
}

// optional int32 missed_vsync_count = 3;
inline bool GraphicsStatsJankSummaryProto::has_missed_vsync_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GraphicsStatsJankSummaryProto::clear_missed_vsync_count() {
  missed_vsync_count_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GraphicsStatsJankSummaryProto::missed_vsync_count() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsJankSummaryProto.missed_vsync_count)
  return missed_vsync_count_;
}
inline void GraphicsStatsJankSummaryProto::set_missed_vsync_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  missed_vsync_count_ = value;
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsJankSummaryProto.missed_vsync_count)
}

// optional int32 high_input_latency_count = 4;
inline bool GraphicsStatsJankSummaryProto::has_high_input_latency_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GraphicsStatsJankSummaryProto::clear_high_input_latency_count() {
  high_input_latency_count_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GraphicsStatsJankSummaryProto::high_input_latency_count() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsJankSummaryProto.high_input_latency_count)
  return high_input_latency_count_;
}
inline void GraphicsStatsJankSummaryProto::set_high_input_latency_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  high_input_latency_count_ = value;
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsJankSummaryProto.high_input_latency_count)
}

// optional int32 slow_ui_thread_count = 5;
inline bool GraphicsStatsJankSummaryProto::has_slow_ui_thread_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GraphicsStatsJankSummaryProto::clear_slow_ui_thread_count() {
  slow_ui_thread_count_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GraphicsStatsJankSummaryProto::slow_ui_thread_count() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsJankSummaryProto.slow_ui_thread_count)
  return slow_ui_thread_count_;
}
inline void GraphicsStatsJankSummaryProto::set_slow_ui_thread_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  slow_ui_thread_count_ = value;
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsJankSummaryProto.slow_ui_thread_count)
}

// optional int32 slow_bitmap_upload_count = 6;
inline bool GraphicsStatsJankSummaryProto::has_slow_bitmap_upload_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GraphicsStatsJankSummaryProto::clear_slow_bitmap_upload_count() {
  slow_bitmap_upload_count_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GraphicsStatsJankSummaryProto::slow_bitmap_upload_count() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsJankSummaryProto.slow_bitmap_upload_count)
  return slow_bitmap_upload_count_;
}
inline void GraphicsStatsJankSummaryProto::set_slow_bitmap_upload_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  slow_bitmap_upload_count_ = value;
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsJankSummaryProto.slow_bitmap_upload_count)
}

// optional int32 slow_draw_count = 7;
inline bool GraphicsStatsJankSummaryProto::has_slow_draw_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GraphicsStatsJankSummaryProto::clear_slow_draw_count() {
  slow_draw_count_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GraphicsStatsJankSummaryProto::slow_draw_count() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsJankSummaryProto.slow_draw_count)
  return slow_draw_count_;
}
inline void GraphicsStatsJankSummaryProto::set_slow_draw_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  slow_draw_count_ = value;
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsJankSummaryProto.slow_draw_count)
}

// optional int32 missed_deadline_count = 8;
inline bool GraphicsStatsJankSummaryProto::has_missed_deadline_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GraphicsStatsJankSummaryProto::clear_missed_deadline_count() {
  missed_deadline_count_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GraphicsStatsJankSummaryProto::missed_deadline_count() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsJankSummaryProto.missed_deadline_count)
  return missed_deadline_count_;
}
inline void GraphicsStatsJankSummaryProto::set_missed_deadline_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  missed_deadline_count_ = value;
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsJankSummaryProto.missed_deadline_count)
}

// -------------------------------------------------------------------

// GraphicsStatsHistogramBucketProto

// optional int32 render_millis = 1;
inline bool GraphicsStatsHistogramBucketProto::has_render_millis() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GraphicsStatsHistogramBucketProto::clear_render_millis() {
  render_millis_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GraphicsStatsHistogramBucketProto::render_millis() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsHistogramBucketProto.render_millis)
  return render_millis_;
}
inline void GraphicsStatsHistogramBucketProto::set_render_millis(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  render_millis_ = value;
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsHistogramBucketProto.render_millis)
}

// optional int32 frame_count = 2;
inline bool GraphicsStatsHistogramBucketProto::has_frame_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GraphicsStatsHistogramBucketProto::clear_frame_count() {
  frame_count_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GraphicsStatsHistogramBucketProto::frame_count() const {
  // @@protoc_insertion_point(field_get:android.service.GraphicsStatsHistogramBucketProto.frame_count)
  return frame_count_;
}
inline void GraphicsStatsHistogramBucketProto::set_frame_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  frame_count_ = value;
  // @@protoc_insertion_point(field_set:android.service.GraphicsStatsHistogramBucketProto.frame_count)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace service
}  // namespace android

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::android::service::GraphicsStatsProto_PipelineType> : ::std::true_type {};

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fgraphicsstats_2eproto
