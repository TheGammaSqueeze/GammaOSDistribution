// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/internal/powerprofile.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fpowerprofile_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fpowerprofile_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fpowerprofile_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fpowerprofile_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace com {
namespace android {
namespace internal {
namespace os {
class PowerProfileProto;
class PowerProfileProtoDefaultTypeInternal;
extern PowerProfileProtoDefaultTypeInternal _PowerProfileProto_default_instance_;
class PowerProfileProto_CpuCluster;
class PowerProfileProto_CpuClusterDefaultTypeInternal;
extern PowerProfileProto_CpuClusterDefaultTypeInternal _PowerProfileProto_CpuCluster_default_instance_;
}  // namespace os
}  // namespace internal
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::android::internal::os::PowerProfileProto* Arena::CreateMaybeMessage<::com::android::internal::os::PowerProfileProto>(Arena*);
template<> ::com::android::internal::os::PowerProfileProto_CpuCluster* Arena::CreateMaybeMessage<::com::android::internal::os::PowerProfileProto_CpuCluster>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace android {
namespace internal {
namespace os {

// ===================================================================

class PowerProfileProto_CpuCluster :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.internal.os.PowerProfileProto.CpuCluster) */ {
 public:
  PowerProfileProto_CpuCluster();
  virtual ~PowerProfileProto_CpuCluster();

  PowerProfileProto_CpuCluster(const PowerProfileProto_CpuCluster& from);
  PowerProfileProto_CpuCluster(PowerProfileProto_CpuCluster&& from) noexcept
    : PowerProfileProto_CpuCluster() {
    *this = ::std::move(from);
  }

  inline PowerProfileProto_CpuCluster& operator=(const PowerProfileProto_CpuCluster& from) {
    CopyFrom(from);
    return *this;
  }
  inline PowerProfileProto_CpuCluster& operator=(PowerProfileProto_CpuCluster&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PowerProfileProto_CpuCluster& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PowerProfileProto_CpuCluster* internal_default_instance() {
    return reinterpret_cast<const PowerProfileProto_CpuCluster*>(
               &_PowerProfileProto_CpuCluster_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PowerProfileProto_CpuCluster& a, PowerProfileProto_CpuCluster& b) {
    a.Swap(&b);
  }
  inline void Swap(PowerProfileProto_CpuCluster* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PowerProfileProto_CpuCluster* New() const final {
    return CreateMaybeMessage<PowerProfileProto_CpuCluster>(nullptr);
  }

  PowerProfileProto_CpuCluster* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PowerProfileProto_CpuCluster>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const PowerProfileProto_CpuCluster& from);
  void MergeFrom(const PowerProfileProto_CpuCluster& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PowerProfileProto_CpuCluster* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.internal.os.PowerProfileProto.CpuCluster";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpeedFieldNumber = 4,
    kCorePowerFieldNumber = 5,
    kClusterPowerFieldNumber = 2,
    kIdFieldNumber = 1,
    kCoresFieldNumber = 3,
  };
  // repeated int64 speed = 4;
  int speed_size() const;
  void clear_speed();
  ::PROTOBUF_NAMESPACE_ID::int64 speed(int index) const;
  void set_speed(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_speed(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      speed() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_speed();

  // repeated double core_power = 5;
  int core_power_size() const;
  void clear_core_power();
  double core_power(int index) const;
  void set_core_power(int index, double value);
  void add_core_power(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      core_power() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_core_power();

  // optional double cluster_power = 2;
  bool has_cluster_power() const;
  void clear_cluster_power();
  double cluster_power() const;
  void set_cluster_power(double value);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 cores = 3;
  bool has_cores() const;
  void clear_cores();
  ::PROTOBUF_NAMESPACE_ID::int32 cores() const;
  void set_cores(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.internal.os.PowerProfileProto.CpuCluster)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > speed_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > core_power_;
  double cluster_power_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 cores_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fpowerprofile_2eproto;
};
// -------------------------------------------------------------------

class PowerProfileProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.internal.os.PowerProfileProto) */ {
 public:
  PowerProfileProto();
  virtual ~PowerProfileProto();

  PowerProfileProto(const PowerProfileProto& from);
  PowerProfileProto(PowerProfileProto&& from) noexcept
    : PowerProfileProto() {
    *this = ::std::move(from);
  }

  inline PowerProfileProto& operator=(const PowerProfileProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline PowerProfileProto& operator=(PowerProfileProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PowerProfileProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PowerProfileProto* internal_default_instance() {
    return reinterpret_cast<const PowerProfileProto*>(
               &_PowerProfileProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PowerProfileProto& a, PowerProfileProto& b) {
    a.Swap(&b);
  }
  inline void Swap(PowerProfileProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PowerProfileProto* New() const final {
    return CreateMaybeMessage<PowerProfileProto>(nullptr);
  }

  PowerProfileProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PowerProfileProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const PowerProfileProto& from);
  void MergeFrom(const PowerProfileProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PowerProfileProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.internal.os.PowerProfileProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef PowerProfileProto_CpuCluster CpuCluster;

  // accessors -------------------------------------------------------

  enum : int {
    kWifiControllerTxLevelsFieldNumber = 10,
    kModemControllerTxFieldNumber = 19,
    kGpsSignalQualityBasedFieldNumber = 22,
    kCpuClusterFieldNumber = 40,
    kCpuSuspendFieldNumber = 1,
    kCpuIdleFieldNumber = 2,
    kCpuActiveFieldNumber = 3,
    kWifiScanFieldNumber = 4,
    kWifiOnFieldNumber = 5,
    kWifiActiveFieldNumber = 6,
    kWifiControllerIdleFieldNumber = 7,
    kWifiControllerRxFieldNumber = 8,
    kWifiControllerTxFieldNumber = 9,
    kWifiControllerOperatingVoltageFieldNumber = 11,
    kBluetoothControllerIdleFieldNumber = 12,
    kBluetoothControllerRxFieldNumber = 13,
    kBluetoothControllerTxFieldNumber = 14,
    kBluetoothControllerOperatingVoltageFieldNumber = 15,
    kModemControllerSleepFieldNumber = 16,
    kModemControllerIdleFieldNumber = 17,
    kModemControllerRxFieldNumber = 18,
    kModemControllerOperatingVoltageFieldNumber = 20,
    kGpsOnFieldNumber = 21,
    kGpsOperatingVoltageFieldNumber = 23,
    kBluetoothOnFieldNumber = 24,
    kBluetoothActiveFieldNumber = 25,
    kBluetoothAtCmdFieldNumber = 26,
    kAmbientDisplayFieldNumber = 27,
    kScreenOnFieldNumber = 28,
    kRadioOnFieldNumber = 29,
    kRadioScanningFieldNumber = 30,
    kRadioActiveFieldNumber = 31,
    kScreenFullFieldNumber = 32,
    kAudioFieldNumber = 33,
    kVideoFieldNumber = 34,
    kFlashlightFieldNumber = 35,
    kMemoryFieldNumber = 36,
    kCameraFieldNumber = 37,
    kWifiBatchedScanFieldNumber = 38,
    kBatteryCapacityFieldNumber = 39,
  };
  // repeated double wifi_controller_tx_levels = 10;
  int wifi_controller_tx_levels_size() const;
  void clear_wifi_controller_tx_levels();
  double wifi_controller_tx_levels(int index) const;
  void set_wifi_controller_tx_levels(int index, double value);
  void add_wifi_controller_tx_levels(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      wifi_controller_tx_levels() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_wifi_controller_tx_levels();

  // repeated double modem_controller_tx = 19;
  int modem_controller_tx_size() const;
  void clear_modem_controller_tx();
  double modem_controller_tx(int index) const;
  void set_modem_controller_tx(int index, double value);
  void add_modem_controller_tx(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      modem_controller_tx() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_modem_controller_tx();

  // repeated double gps_signal_quality_based = 22;
  int gps_signal_quality_based_size() const;
  void clear_gps_signal_quality_based();
  double gps_signal_quality_based(int index) const;
  void set_gps_signal_quality_based(int index, double value);
  void add_gps_signal_quality_based(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      gps_signal_quality_based() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_gps_signal_quality_based();

  // repeated .com.android.internal.os.PowerProfileProto.CpuCluster cpu_cluster = 40;
  int cpu_cluster_size() const;
  void clear_cpu_cluster();
  ::com::android::internal::os::PowerProfileProto_CpuCluster* mutable_cpu_cluster(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::internal::os::PowerProfileProto_CpuCluster >*
      mutable_cpu_cluster();
  const ::com::android::internal::os::PowerProfileProto_CpuCluster& cpu_cluster(int index) const;
  ::com::android::internal::os::PowerProfileProto_CpuCluster* add_cpu_cluster();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::internal::os::PowerProfileProto_CpuCluster >&
      cpu_cluster() const;

  // optional double cpu_suspend = 1;
  bool has_cpu_suspend() const;
  void clear_cpu_suspend();
  double cpu_suspend() const;
  void set_cpu_suspend(double value);

  // optional double cpu_idle = 2;
  bool has_cpu_idle() const;
  void clear_cpu_idle();
  double cpu_idle() const;
  void set_cpu_idle(double value);

  // optional double cpu_active = 3;
  bool has_cpu_active() const;
  void clear_cpu_active();
  double cpu_active() const;
  void set_cpu_active(double value);

  // optional double wifi_scan = 4;
  bool has_wifi_scan() const;
  void clear_wifi_scan();
  double wifi_scan() const;
  void set_wifi_scan(double value);

  // optional double wifi_on = 5;
  bool has_wifi_on() const;
  void clear_wifi_on();
  double wifi_on() const;
  void set_wifi_on(double value);

  // optional double wifi_active = 6;
  bool has_wifi_active() const;
  void clear_wifi_active();
  double wifi_active() const;
  void set_wifi_active(double value);

  // optional double wifi_controller_idle = 7;
  bool has_wifi_controller_idle() const;
  void clear_wifi_controller_idle();
  double wifi_controller_idle() const;
  void set_wifi_controller_idle(double value);

  // optional double wifi_controller_rx = 8;
  bool has_wifi_controller_rx() const;
  void clear_wifi_controller_rx();
  double wifi_controller_rx() const;
  void set_wifi_controller_rx(double value);

  // optional double wifi_controller_tx = 9;
  bool has_wifi_controller_tx() const;
  void clear_wifi_controller_tx();
  double wifi_controller_tx() const;
  void set_wifi_controller_tx(double value);

  // optional double wifi_controller_operating_voltage = 11;
  bool has_wifi_controller_operating_voltage() const;
  void clear_wifi_controller_operating_voltage();
  double wifi_controller_operating_voltage() const;
  void set_wifi_controller_operating_voltage(double value);

  // optional double bluetooth_controller_idle = 12;
  bool has_bluetooth_controller_idle() const;
  void clear_bluetooth_controller_idle();
  double bluetooth_controller_idle() const;
  void set_bluetooth_controller_idle(double value);

  // optional double bluetooth_controller_rx = 13;
  bool has_bluetooth_controller_rx() const;
  void clear_bluetooth_controller_rx();
  double bluetooth_controller_rx() const;
  void set_bluetooth_controller_rx(double value);

  // optional double bluetooth_controller_tx = 14;
  bool has_bluetooth_controller_tx() const;
  void clear_bluetooth_controller_tx();
  double bluetooth_controller_tx() const;
  void set_bluetooth_controller_tx(double value);

  // optional double bluetooth_controller_operating_voltage = 15;
  bool has_bluetooth_controller_operating_voltage() const;
  void clear_bluetooth_controller_operating_voltage();
  double bluetooth_controller_operating_voltage() const;
  void set_bluetooth_controller_operating_voltage(double value);

  // optional double modem_controller_sleep = 16;
  bool has_modem_controller_sleep() const;
  void clear_modem_controller_sleep();
  double modem_controller_sleep() const;
  void set_modem_controller_sleep(double value);

  // optional double modem_controller_idle = 17;
  bool has_modem_controller_idle() const;
  void clear_modem_controller_idle();
  double modem_controller_idle() const;
  void set_modem_controller_idle(double value);

  // optional double modem_controller_rx = 18;
  bool has_modem_controller_rx() const;
  void clear_modem_controller_rx();
  double modem_controller_rx() const;
  void set_modem_controller_rx(double value);

  // optional double modem_controller_operating_voltage = 20;
  bool has_modem_controller_operating_voltage() const;
  void clear_modem_controller_operating_voltage();
  double modem_controller_operating_voltage() const;
  void set_modem_controller_operating_voltage(double value);

  // optional double gps_on = 21;
  bool has_gps_on() const;
  void clear_gps_on();
  double gps_on() const;
  void set_gps_on(double value);

  // optional double gps_operating_voltage = 23;
  bool has_gps_operating_voltage() const;
  void clear_gps_operating_voltage();
  double gps_operating_voltage() const;
  void set_gps_operating_voltage(double value);

  // optional double bluetooth_on = 24;
  bool has_bluetooth_on() const;
  void clear_bluetooth_on();
  double bluetooth_on() const;
  void set_bluetooth_on(double value);

  // optional double bluetooth_active = 25;
  bool has_bluetooth_active() const;
  void clear_bluetooth_active();
  double bluetooth_active() const;
  void set_bluetooth_active(double value);

  // optional double bluetooth_at_cmd = 26;
  bool has_bluetooth_at_cmd() const;
  void clear_bluetooth_at_cmd();
  double bluetooth_at_cmd() const;
  void set_bluetooth_at_cmd(double value);

  // optional double ambient_display = 27;
  bool has_ambient_display() const;
  void clear_ambient_display();
  double ambient_display() const;
  void set_ambient_display(double value);

  // optional double screen_on = 28;
  bool has_screen_on() const;
  void clear_screen_on();
  double screen_on() const;
  void set_screen_on(double value);

  // optional double radio_on = 29;
  bool has_radio_on() const;
  void clear_radio_on();
  double radio_on() const;
  void set_radio_on(double value);

  // optional double radio_scanning = 30;
  bool has_radio_scanning() const;
  void clear_radio_scanning();
  double radio_scanning() const;
  void set_radio_scanning(double value);

  // optional double radio_active = 31;
  bool has_radio_active() const;
  void clear_radio_active();
  double radio_active() const;
  void set_radio_active(double value);

  // optional double screen_full = 32;
  bool has_screen_full() const;
  void clear_screen_full();
  double screen_full() const;
  void set_screen_full(double value);

  // optional double audio = 33;
  bool has_audio() const;
  void clear_audio();
  double audio() const;
  void set_audio(double value);

  // optional double video = 34;
  bool has_video() const;
  void clear_video();
  double video() const;
  void set_video(double value);

  // optional double flashlight = 35;
  bool has_flashlight() const;
  void clear_flashlight();
  double flashlight() const;
  void set_flashlight(double value);

  // optional double memory = 36;
  bool has_memory() const;
  void clear_memory();
  double memory() const;
  void set_memory(double value);

  // optional double camera = 37;
  bool has_camera() const;
  void clear_camera();
  double camera() const;
  void set_camera(double value);

  // optional double wifi_batched_scan = 38;
  bool has_wifi_batched_scan() const;
  void clear_wifi_batched_scan();
  double wifi_batched_scan() const;
  void set_wifi_batched_scan(double value);

  // optional double battery_capacity = 39;
  bool has_battery_capacity() const;
  void clear_battery_capacity();
  double battery_capacity() const;
  void set_battery_capacity(double value);

  // @@protoc_insertion_point(class_scope:com.android.internal.os.PowerProfileProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<2> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > wifi_controller_tx_levels_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > modem_controller_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > gps_signal_quality_based_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::internal::os::PowerProfileProto_CpuCluster > cpu_cluster_;
  double cpu_suspend_;
  double cpu_idle_;
  double cpu_active_;
  double wifi_scan_;
  double wifi_on_;
  double wifi_active_;
  double wifi_controller_idle_;
  double wifi_controller_rx_;
  double wifi_controller_tx_;
  double wifi_controller_operating_voltage_;
  double bluetooth_controller_idle_;
  double bluetooth_controller_rx_;
  double bluetooth_controller_tx_;
  double bluetooth_controller_operating_voltage_;
  double modem_controller_sleep_;
  double modem_controller_idle_;
  double modem_controller_rx_;
  double modem_controller_operating_voltage_;
  double gps_on_;
  double gps_operating_voltage_;
  double bluetooth_on_;
  double bluetooth_active_;
  double bluetooth_at_cmd_;
  double ambient_display_;
  double screen_on_;
  double radio_on_;
  double radio_scanning_;
  double radio_active_;
  double screen_full_;
  double audio_;
  double video_;
  double flashlight_;
  double memory_;
  double camera_;
  double wifi_batched_scan_;
  double battery_capacity_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fpowerprofile_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PowerProfileProto_CpuCluster

// optional int32 id = 1;
inline bool PowerProfileProto_CpuCluster::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PowerProfileProto_CpuCluster::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PowerProfileProto_CpuCluster::id() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.CpuCluster.id)
  return id_;
}
inline void PowerProfileProto_CpuCluster::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.CpuCluster.id)
}

// optional double cluster_power = 2;
inline bool PowerProfileProto_CpuCluster::has_cluster_power() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PowerProfileProto_CpuCluster::clear_cluster_power() {
  cluster_power_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double PowerProfileProto_CpuCluster::cluster_power() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.CpuCluster.cluster_power)
  return cluster_power_;
}
inline void PowerProfileProto_CpuCluster::set_cluster_power(double value) {
  _has_bits_[0] |= 0x00000001u;
  cluster_power_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.CpuCluster.cluster_power)
}

// optional int32 cores = 3;
inline bool PowerProfileProto_CpuCluster::has_cores() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PowerProfileProto_CpuCluster::clear_cores() {
  cores_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PowerProfileProto_CpuCluster::cores() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.CpuCluster.cores)
  return cores_;
}
inline void PowerProfileProto_CpuCluster::set_cores(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  cores_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.CpuCluster.cores)
}

// repeated int64 speed = 4;
inline int PowerProfileProto_CpuCluster::speed_size() const {
  return speed_.size();
}
inline void PowerProfileProto_CpuCluster::clear_speed() {
  speed_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PowerProfileProto_CpuCluster::speed(int index) const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.CpuCluster.speed)
  return speed_.Get(index);
}
inline void PowerProfileProto_CpuCluster::set_speed(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  speed_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.CpuCluster.speed)
}
inline void PowerProfileProto_CpuCluster::add_speed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  speed_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.internal.os.PowerProfileProto.CpuCluster.speed)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
PowerProfileProto_CpuCluster::speed() const {
  // @@protoc_insertion_point(field_list:com.android.internal.os.PowerProfileProto.CpuCluster.speed)
  return speed_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
PowerProfileProto_CpuCluster::mutable_speed() {
  // @@protoc_insertion_point(field_mutable_list:com.android.internal.os.PowerProfileProto.CpuCluster.speed)
  return &speed_;
}

// repeated double core_power = 5;
inline int PowerProfileProto_CpuCluster::core_power_size() const {
  return core_power_.size();
}
inline void PowerProfileProto_CpuCluster::clear_core_power() {
  core_power_.Clear();
}
inline double PowerProfileProto_CpuCluster::core_power(int index) const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.CpuCluster.core_power)
  return core_power_.Get(index);
}
inline void PowerProfileProto_CpuCluster::set_core_power(int index, double value) {
  core_power_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.CpuCluster.core_power)
}
inline void PowerProfileProto_CpuCluster::add_core_power(double value) {
  core_power_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.internal.os.PowerProfileProto.CpuCluster.core_power)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
PowerProfileProto_CpuCluster::core_power() const {
  // @@protoc_insertion_point(field_list:com.android.internal.os.PowerProfileProto.CpuCluster.core_power)
  return core_power_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
PowerProfileProto_CpuCluster::mutable_core_power() {
  // @@protoc_insertion_point(field_mutable_list:com.android.internal.os.PowerProfileProto.CpuCluster.core_power)
  return &core_power_;
}

// -------------------------------------------------------------------

// PowerProfileProto

// optional double cpu_suspend = 1;
inline bool PowerProfileProto::has_cpu_suspend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PowerProfileProto::clear_cpu_suspend() {
  cpu_suspend_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double PowerProfileProto::cpu_suspend() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.cpu_suspend)
  return cpu_suspend_;
}
inline void PowerProfileProto::set_cpu_suspend(double value) {
  _has_bits_[0] |= 0x00000001u;
  cpu_suspend_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.cpu_suspend)
}

// optional double cpu_idle = 2;
inline bool PowerProfileProto::has_cpu_idle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PowerProfileProto::clear_cpu_idle() {
  cpu_idle_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double PowerProfileProto::cpu_idle() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.cpu_idle)
  return cpu_idle_;
}
inline void PowerProfileProto::set_cpu_idle(double value) {
  _has_bits_[0] |= 0x00000002u;
  cpu_idle_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.cpu_idle)
}

// optional double cpu_active = 3;
inline bool PowerProfileProto::has_cpu_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PowerProfileProto::clear_cpu_active() {
  cpu_active_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline double PowerProfileProto::cpu_active() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.cpu_active)
  return cpu_active_;
}
inline void PowerProfileProto::set_cpu_active(double value) {
  _has_bits_[0] |= 0x00000004u;
  cpu_active_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.cpu_active)
}

// repeated .com.android.internal.os.PowerProfileProto.CpuCluster cpu_cluster = 40;
inline int PowerProfileProto::cpu_cluster_size() const {
  return cpu_cluster_.size();
}
inline void PowerProfileProto::clear_cpu_cluster() {
  cpu_cluster_.Clear();
}
inline ::com::android::internal::os::PowerProfileProto_CpuCluster* PowerProfileProto::mutable_cpu_cluster(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.internal.os.PowerProfileProto.cpu_cluster)
  return cpu_cluster_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::internal::os::PowerProfileProto_CpuCluster >*
PowerProfileProto::mutable_cpu_cluster() {
  // @@protoc_insertion_point(field_mutable_list:com.android.internal.os.PowerProfileProto.cpu_cluster)
  return &cpu_cluster_;
}
inline const ::com::android::internal::os::PowerProfileProto_CpuCluster& PowerProfileProto::cpu_cluster(int index) const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.cpu_cluster)
  return cpu_cluster_.Get(index);
}
inline ::com::android::internal::os::PowerProfileProto_CpuCluster* PowerProfileProto::add_cpu_cluster() {
  // @@protoc_insertion_point(field_add:com.android.internal.os.PowerProfileProto.cpu_cluster)
  return cpu_cluster_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::internal::os::PowerProfileProto_CpuCluster >&
PowerProfileProto::cpu_cluster() const {
  // @@protoc_insertion_point(field_list:com.android.internal.os.PowerProfileProto.cpu_cluster)
  return cpu_cluster_;
}

// optional double wifi_scan = 4;
inline bool PowerProfileProto::has_wifi_scan() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PowerProfileProto::clear_wifi_scan() {
  wifi_scan_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline double PowerProfileProto::wifi_scan() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.wifi_scan)
  return wifi_scan_;
}
inline void PowerProfileProto::set_wifi_scan(double value) {
  _has_bits_[0] |= 0x00000008u;
  wifi_scan_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.wifi_scan)
}

// optional double wifi_on = 5;
inline bool PowerProfileProto::has_wifi_on() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PowerProfileProto::clear_wifi_on() {
  wifi_on_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline double PowerProfileProto::wifi_on() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.wifi_on)
  return wifi_on_;
}
inline void PowerProfileProto::set_wifi_on(double value) {
  _has_bits_[0] |= 0x00000010u;
  wifi_on_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.wifi_on)
}

// optional double wifi_active = 6;
inline bool PowerProfileProto::has_wifi_active() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PowerProfileProto::clear_wifi_active() {
  wifi_active_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline double PowerProfileProto::wifi_active() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.wifi_active)
  return wifi_active_;
}
inline void PowerProfileProto::set_wifi_active(double value) {
  _has_bits_[0] |= 0x00000020u;
  wifi_active_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.wifi_active)
}

// optional double wifi_controller_idle = 7;
inline bool PowerProfileProto::has_wifi_controller_idle() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PowerProfileProto::clear_wifi_controller_idle() {
  wifi_controller_idle_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline double PowerProfileProto::wifi_controller_idle() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.wifi_controller_idle)
  return wifi_controller_idle_;
}
inline void PowerProfileProto::set_wifi_controller_idle(double value) {
  _has_bits_[0] |= 0x00000040u;
  wifi_controller_idle_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.wifi_controller_idle)
}

// optional double wifi_controller_rx = 8;
inline bool PowerProfileProto::has_wifi_controller_rx() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PowerProfileProto::clear_wifi_controller_rx() {
  wifi_controller_rx_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline double PowerProfileProto::wifi_controller_rx() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.wifi_controller_rx)
  return wifi_controller_rx_;
}
inline void PowerProfileProto::set_wifi_controller_rx(double value) {
  _has_bits_[0] |= 0x00000080u;
  wifi_controller_rx_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.wifi_controller_rx)
}

// optional double wifi_controller_tx = 9;
inline bool PowerProfileProto::has_wifi_controller_tx() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PowerProfileProto::clear_wifi_controller_tx() {
  wifi_controller_tx_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline double PowerProfileProto::wifi_controller_tx() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.wifi_controller_tx)
  return wifi_controller_tx_;
}
inline void PowerProfileProto::set_wifi_controller_tx(double value) {
  _has_bits_[0] |= 0x00000100u;
  wifi_controller_tx_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.wifi_controller_tx)
}

// repeated double wifi_controller_tx_levels = 10;
inline int PowerProfileProto::wifi_controller_tx_levels_size() const {
  return wifi_controller_tx_levels_.size();
}
inline void PowerProfileProto::clear_wifi_controller_tx_levels() {
  wifi_controller_tx_levels_.Clear();
}
inline double PowerProfileProto::wifi_controller_tx_levels(int index) const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.wifi_controller_tx_levels)
  return wifi_controller_tx_levels_.Get(index);
}
inline void PowerProfileProto::set_wifi_controller_tx_levels(int index, double value) {
  wifi_controller_tx_levels_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.wifi_controller_tx_levels)
}
inline void PowerProfileProto::add_wifi_controller_tx_levels(double value) {
  wifi_controller_tx_levels_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.internal.os.PowerProfileProto.wifi_controller_tx_levels)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
PowerProfileProto::wifi_controller_tx_levels() const {
  // @@protoc_insertion_point(field_list:com.android.internal.os.PowerProfileProto.wifi_controller_tx_levels)
  return wifi_controller_tx_levels_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
PowerProfileProto::mutable_wifi_controller_tx_levels() {
  // @@protoc_insertion_point(field_mutable_list:com.android.internal.os.PowerProfileProto.wifi_controller_tx_levels)
  return &wifi_controller_tx_levels_;
}

// optional double wifi_controller_operating_voltage = 11;
inline bool PowerProfileProto::has_wifi_controller_operating_voltage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PowerProfileProto::clear_wifi_controller_operating_voltage() {
  wifi_controller_operating_voltage_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline double PowerProfileProto::wifi_controller_operating_voltage() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.wifi_controller_operating_voltage)
  return wifi_controller_operating_voltage_;
}
inline void PowerProfileProto::set_wifi_controller_operating_voltage(double value) {
  _has_bits_[0] |= 0x00000200u;
  wifi_controller_operating_voltage_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.wifi_controller_operating_voltage)
}

// optional double bluetooth_controller_idle = 12;
inline bool PowerProfileProto::has_bluetooth_controller_idle() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PowerProfileProto::clear_bluetooth_controller_idle() {
  bluetooth_controller_idle_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline double PowerProfileProto::bluetooth_controller_idle() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.bluetooth_controller_idle)
  return bluetooth_controller_idle_;
}
inline void PowerProfileProto::set_bluetooth_controller_idle(double value) {
  _has_bits_[0] |= 0x00000400u;
  bluetooth_controller_idle_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.bluetooth_controller_idle)
}

// optional double bluetooth_controller_rx = 13;
inline bool PowerProfileProto::has_bluetooth_controller_rx() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PowerProfileProto::clear_bluetooth_controller_rx() {
  bluetooth_controller_rx_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline double PowerProfileProto::bluetooth_controller_rx() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.bluetooth_controller_rx)
  return bluetooth_controller_rx_;
}
inline void PowerProfileProto::set_bluetooth_controller_rx(double value) {
  _has_bits_[0] |= 0x00000800u;
  bluetooth_controller_rx_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.bluetooth_controller_rx)
}

// optional double bluetooth_controller_tx = 14;
inline bool PowerProfileProto::has_bluetooth_controller_tx() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PowerProfileProto::clear_bluetooth_controller_tx() {
  bluetooth_controller_tx_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline double PowerProfileProto::bluetooth_controller_tx() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.bluetooth_controller_tx)
  return bluetooth_controller_tx_;
}
inline void PowerProfileProto::set_bluetooth_controller_tx(double value) {
  _has_bits_[0] |= 0x00001000u;
  bluetooth_controller_tx_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.bluetooth_controller_tx)
}

// optional double bluetooth_controller_operating_voltage = 15;
inline bool PowerProfileProto::has_bluetooth_controller_operating_voltage() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PowerProfileProto::clear_bluetooth_controller_operating_voltage() {
  bluetooth_controller_operating_voltage_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline double PowerProfileProto::bluetooth_controller_operating_voltage() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.bluetooth_controller_operating_voltage)
  return bluetooth_controller_operating_voltage_;
}
inline void PowerProfileProto::set_bluetooth_controller_operating_voltage(double value) {
  _has_bits_[0] |= 0x00002000u;
  bluetooth_controller_operating_voltage_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.bluetooth_controller_operating_voltage)
}

// optional double modem_controller_sleep = 16;
inline bool PowerProfileProto::has_modem_controller_sleep() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PowerProfileProto::clear_modem_controller_sleep() {
  modem_controller_sleep_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline double PowerProfileProto::modem_controller_sleep() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.modem_controller_sleep)
  return modem_controller_sleep_;
}
inline void PowerProfileProto::set_modem_controller_sleep(double value) {
  _has_bits_[0] |= 0x00004000u;
  modem_controller_sleep_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.modem_controller_sleep)
}

// optional double modem_controller_idle = 17;
inline bool PowerProfileProto::has_modem_controller_idle() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PowerProfileProto::clear_modem_controller_idle() {
  modem_controller_idle_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline double PowerProfileProto::modem_controller_idle() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.modem_controller_idle)
  return modem_controller_idle_;
}
inline void PowerProfileProto::set_modem_controller_idle(double value) {
  _has_bits_[0] |= 0x00008000u;
  modem_controller_idle_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.modem_controller_idle)
}

// optional double modem_controller_rx = 18;
inline bool PowerProfileProto::has_modem_controller_rx() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PowerProfileProto::clear_modem_controller_rx() {
  modem_controller_rx_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline double PowerProfileProto::modem_controller_rx() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.modem_controller_rx)
  return modem_controller_rx_;
}
inline void PowerProfileProto::set_modem_controller_rx(double value) {
  _has_bits_[0] |= 0x00010000u;
  modem_controller_rx_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.modem_controller_rx)
}

// repeated double modem_controller_tx = 19;
inline int PowerProfileProto::modem_controller_tx_size() const {
  return modem_controller_tx_.size();
}
inline void PowerProfileProto::clear_modem_controller_tx() {
  modem_controller_tx_.Clear();
}
inline double PowerProfileProto::modem_controller_tx(int index) const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.modem_controller_tx)
  return modem_controller_tx_.Get(index);
}
inline void PowerProfileProto::set_modem_controller_tx(int index, double value) {
  modem_controller_tx_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.modem_controller_tx)
}
inline void PowerProfileProto::add_modem_controller_tx(double value) {
  modem_controller_tx_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.internal.os.PowerProfileProto.modem_controller_tx)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
PowerProfileProto::modem_controller_tx() const {
  // @@protoc_insertion_point(field_list:com.android.internal.os.PowerProfileProto.modem_controller_tx)
  return modem_controller_tx_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
PowerProfileProto::mutable_modem_controller_tx() {
  // @@protoc_insertion_point(field_mutable_list:com.android.internal.os.PowerProfileProto.modem_controller_tx)
  return &modem_controller_tx_;
}

// optional double modem_controller_operating_voltage = 20;
inline bool PowerProfileProto::has_modem_controller_operating_voltage() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PowerProfileProto::clear_modem_controller_operating_voltage() {
  modem_controller_operating_voltage_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline double PowerProfileProto::modem_controller_operating_voltage() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.modem_controller_operating_voltage)
  return modem_controller_operating_voltage_;
}
inline void PowerProfileProto::set_modem_controller_operating_voltage(double value) {
  _has_bits_[0] |= 0x00020000u;
  modem_controller_operating_voltage_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.modem_controller_operating_voltage)
}

// optional double gps_on = 21;
inline bool PowerProfileProto::has_gps_on() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PowerProfileProto::clear_gps_on() {
  gps_on_ = 0;
  _has_bits_[0] &= ~0x00040000u;
}
inline double PowerProfileProto::gps_on() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.gps_on)
  return gps_on_;
}
inline void PowerProfileProto::set_gps_on(double value) {
  _has_bits_[0] |= 0x00040000u;
  gps_on_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.gps_on)
}

// repeated double gps_signal_quality_based = 22;
inline int PowerProfileProto::gps_signal_quality_based_size() const {
  return gps_signal_quality_based_.size();
}
inline void PowerProfileProto::clear_gps_signal_quality_based() {
  gps_signal_quality_based_.Clear();
}
inline double PowerProfileProto::gps_signal_quality_based(int index) const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.gps_signal_quality_based)
  return gps_signal_quality_based_.Get(index);
}
inline void PowerProfileProto::set_gps_signal_quality_based(int index, double value) {
  gps_signal_quality_based_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.gps_signal_quality_based)
}
inline void PowerProfileProto::add_gps_signal_quality_based(double value) {
  gps_signal_quality_based_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.internal.os.PowerProfileProto.gps_signal_quality_based)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
PowerProfileProto::gps_signal_quality_based() const {
  // @@protoc_insertion_point(field_list:com.android.internal.os.PowerProfileProto.gps_signal_quality_based)
  return gps_signal_quality_based_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
PowerProfileProto::mutable_gps_signal_quality_based() {
  // @@protoc_insertion_point(field_mutable_list:com.android.internal.os.PowerProfileProto.gps_signal_quality_based)
  return &gps_signal_quality_based_;
}

// optional double gps_operating_voltage = 23;
inline bool PowerProfileProto::has_gps_operating_voltage() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void PowerProfileProto::clear_gps_operating_voltage() {
  gps_operating_voltage_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline double PowerProfileProto::gps_operating_voltage() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.gps_operating_voltage)
  return gps_operating_voltage_;
}
inline void PowerProfileProto::set_gps_operating_voltage(double value) {
  _has_bits_[0] |= 0x00080000u;
  gps_operating_voltage_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.gps_operating_voltage)
}

// optional double bluetooth_on = 24;
inline bool PowerProfileProto::has_bluetooth_on() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void PowerProfileProto::clear_bluetooth_on() {
  bluetooth_on_ = 0;
  _has_bits_[0] &= ~0x00100000u;
}
inline double PowerProfileProto::bluetooth_on() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.bluetooth_on)
  return bluetooth_on_;
}
inline void PowerProfileProto::set_bluetooth_on(double value) {
  _has_bits_[0] |= 0x00100000u;
  bluetooth_on_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.bluetooth_on)
}

// optional double bluetooth_active = 25;
inline bool PowerProfileProto::has_bluetooth_active() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PowerProfileProto::clear_bluetooth_active() {
  bluetooth_active_ = 0;
  _has_bits_[0] &= ~0x00200000u;
}
inline double PowerProfileProto::bluetooth_active() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.bluetooth_active)
  return bluetooth_active_;
}
inline void PowerProfileProto::set_bluetooth_active(double value) {
  _has_bits_[0] |= 0x00200000u;
  bluetooth_active_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.bluetooth_active)
}

// optional double bluetooth_at_cmd = 26;
inline bool PowerProfileProto::has_bluetooth_at_cmd() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void PowerProfileProto::clear_bluetooth_at_cmd() {
  bluetooth_at_cmd_ = 0;
  _has_bits_[0] &= ~0x00400000u;
}
inline double PowerProfileProto::bluetooth_at_cmd() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.bluetooth_at_cmd)
  return bluetooth_at_cmd_;
}
inline void PowerProfileProto::set_bluetooth_at_cmd(double value) {
  _has_bits_[0] |= 0x00400000u;
  bluetooth_at_cmd_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.bluetooth_at_cmd)
}

// optional double ambient_display = 27;
inline bool PowerProfileProto::has_ambient_display() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void PowerProfileProto::clear_ambient_display() {
  ambient_display_ = 0;
  _has_bits_[0] &= ~0x00800000u;
}
inline double PowerProfileProto::ambient_display() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.ambient_display)
  return ambient_display_;
}
inline void PowerProfileProto::set_ambient_display(double value) {
  _has_bits_[0] |= 0x00800000u;
  ambient_display_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.ambient_display)
}

// optional double screen_on = 28;
inline bool PowerProfileProto::has_screen_on() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void PowerProfileProto::clear_screen_on() {
  screen_on_ = 0;
  _has_bits_[0] &= ~0x01000000u;
}
inline double PowerProfileProto::screen_on() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.screen_on)
  return screen_on_;
}
inline void PowerProfileProto::set_screen_on(double value) {
  _has_bits_[0] |= 0x01000000u;
  screen_on_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.screen_on)
}

// optional double radio_on = 29;
inline bool PowerProfileProto::has_radio_on() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void PowerProfileProto::clear_radio_on() {
  radio_on_ = 0;
  _has_bits_[0] &= ~0x02000000u;
}
inline double PowerProfileProto::radio_on() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.radio_on)
  return radio_on_;
}
inline void PowerProfileProto::set_radio_on(double value) {
  _has_bits_[0] |= 0x02000000u;
  radio_on_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.radio_on)
}

// optional double radio_scanning = 30;
inline bool PowerProfileProto::has_radio_scanning() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void PowerProfileProto::clear_radio_scanning() {
  radio_scanning_ = 0;
  _has_bits_[0] &= ~0x04000000u;
}
inline double PowerProfileProto::radio_scanning() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.radio_scanning)
  return radio_scanning_;
}
inline void PowerProfileProto::set_radio_scanning(double value) {
  _has_bits_[0] |= 0x04000000u;
  radio_scanning_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.radio_scanning)
}

// optional double radio_active = 31;
inline bool PowerProfileProto::has_radio_active() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void PowerProfileProto::clear_radio_active() {
  radio_active_ = 0;
  _has_bits_[0] &= ~0x08000000u;
}
inline double PowerProfileProto::radio_active() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.radio_active)
  return radio_active_;
}
inline void PowerProfileProto::set_radio_active(double value) {
  _has_bits_[0] |= 0x08000000u;
  radio_active_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.radio_active)
}

// optional double screen_full = 32;
inline bool PowerProfileProto::has_screen_full() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void PowerProfileProto::clear_screen_full() {
  screen_full_ = 0;
  _has_bits_[0] &= ~0x10000000u;
}
inline double PowerProfileProto::screen_full() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.screen_full)
  return screen_full_;
}
inline void PowerProfileProto::set_screen_full(double value) {
  _has_bits_[0] |= 0x10000000u;
  screen_full_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.screen_full)
}

// optional double audio = 33;
inline bool PowerProfileProto::has_audio() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void PowerProfileProto::clear_audio() {
  audio_ = 0;
  _has_bits_[0] &= ~0x20000000u;
}
inline double PowerProfileProto::audio() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.audio)
  return audio_;
}
inline void PowerProfileProto::set_audio(double value) {
  _has_bits_[0] |= 0x20000000u;
  audio_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.audio)
}

// optional double video = 34;
inline bool PowerProfileProto::has_video() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void PowerProfileProto::clear_video() {
  video_ = 0;
  _has_bits_[0] &= ~0x40000000u;
}
inline double PowerProfileProto::video() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.video)
  return video_;
}
inline void PowerProfileProto::set_video(double value) {
  _has_bits_[0] |= 0x40000000u;
  video_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.video)
}

// optional double flashlight = 35;
inline bool PowerProfileProto::has_flashlight() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void PowerProfileProto::clear_flashlight() {
  flashlight_ = 0;
  _has_bits_[0] &= ~0x80000000u;
}
inline double PowerProfileProto::flashlight() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.flashlight)
  return flashlight_;
}
inline void PowerProfileProto::set_flashlight(double value) {
  _has_bits_[0] |= 0x80000000u;
  flashlight_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.flashlight)
}

// optional double memory = 36;
inline bool PowerProfileProto::has_memory() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void PowerProfileProto::clear_memory() {
  memory_ = 0;
  _has_bits_[1] &= ~0x00000001u;
}
inline double PowerProfileProto::memory() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.memory)
  return memory_;
}
inline void PowerProfileProto::set_memory(double value) {
  _has_bits_[1] |= 0x00000001u;
  memory_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.memory)
}

// optional double camera = 37;
inline bool PowerProfileProto::has_camera() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void PowerProfileProto::clear_camera() {
  camera_ = 0;
  _has_bits_[1] &= ~0x00000002u;
}
inline double PowerProfileProto::camera() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.camera)
  return camera_;
}
inline void PowerProfileProto::set_camera(double value) {
  _has_bits_[1] |= 0x00000002u;
  camera_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.camera)
}

// optional double wifi_batched_scan = 38;
inline bool PowerProfileProto::has_wifi_batched_scan() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void PowerProfileProto::clear_wifi_batched_scan() {
  wifi_batched_scan_ = 0;
  _has_bits_[1] &= ~0x00000004u;
}
inline double PowerProfileProto::wifi_batched_scan() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.wifi_batched_scan)
  return wifi_batched_scan_;
}
inline void PowerProfileProto::set_wifi_batched_scan(double value) {
  _has_bits_[1] |= 0x00000004u;
  wifi_batched_scan_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.wifi_batched_scan)
}

// optional double battery_capacity = 39;
inline bool PowerProfileProto::has_battery_capacity() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void PowerProfileProto::clear_battery_capacity() {
  battery_capacity_ = 0;
  _has_bits_[1] &= ~0x00000008u;
}
inline double PowerProfileProto::battery_capacity() const {
  // @@protoc_insertion_point(field_get:com.android.internal.os.PowerProfileProto.battery_capacity)
  return battery_capacity_;
}
inline void PowerProfileProto::set_battery_capacity(double value) {
  _has_bits_[1] |= 0x00000008u;
  battery_capacity_ = value;
  // @@protoc_insertion_point(field_set:com.android.internal.os.PowerProfileProto.battery_capacity)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace os
}  // namespace internal
}  // namespace android
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2finternal_2fpowerprofile_2eproto
