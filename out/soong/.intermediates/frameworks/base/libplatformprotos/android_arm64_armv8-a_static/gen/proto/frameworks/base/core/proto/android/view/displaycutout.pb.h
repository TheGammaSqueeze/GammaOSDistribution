// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/displaycutout.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "frameworks/base/core/proto/android/graphics/rect.pb.h"
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace view {
class DisplayCutoutProto;
class DisplayCutoutProtoDefaultTypeInternal;
extern DisplayCutoutProtoDefaultTypeInternal _DisplayCutoutProto_default_instance_;
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::view::DisplayCutoutProto* Arena::CreateMaybeMessage<::android::view::DisplayCutoutProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace view {

// ===================================================================

class DisplayCutoutProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.view.DisplayCutoutProto) */ {
 public:
  DisplayCutoutProto();
  virtual ~DisplayCutoutProto();

  DisplayCutoutProto(const DisplayCutoutProto& from);
  DisplayCutoutProto(DisplayCutoutProto&& from) noexcept
    : DisplayCutoutProto() {
    *this = ::std::move(from);
  }

  inline DisplayCutoutProto& operator=(const DisplayCutoutProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline DisplayCutoutProto& operator=(DisplayCutoutProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DisplayCutoutProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DisplayCutoutProto* internal_default_instance() {
    return reinterpret_cast<const DisplayCutoutProto*>(
               &_DisplayCutoutProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DisplayCutoutProto& a, DisplayCutoutProto& b) {
    a.Swap(&b);
  }
  inline void Swap(DisplayCutoutProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DisplayCutoutProto* New() const final {
    return CreateMaybeMessage<DisplayCutoutProto>(nullptr);
  }

  DisplayCutoutProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DisplayCutoutProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const DisplayCutoutProto& from);
  void MergeFrom(const DisplayCutoutProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisplayCutoutProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.DisplayCutoutProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInsetsFieldNumber = 1,
    kBoundLeftFieldNumber = 3,
    kBoundTopFieldNumber = 4,
    kBoundRightFieldNumber = 5,
    kBoundBottomFieldNumber = 6,
  };
  // optional .android.graphics.RectProto insets = 1;
  bool has_insets() const;
  void clear_insets();
  const ::android::graphics::RectProto& insets() const;
  ::android::graphics::RectProto* release_insets();
  ::android::graphics::RectProto* mutable_insets();
  void set_allocated_insets(::android::graphics::RectProto* insets);

  // optional .android.graphics.RectProto bound_left = 3;
  bool has_bound_left() const;
  void clear_bound_left();
  const ::android::graphics::RectProto& bound_left() const;
  ::android::graphics::RectProto* release_bound_left();
  ::android::graphics::RectProto* mutable_bound_left();
  void set_allocated_bound_left(::android::graphics::RectProto* bound_left);

  // optional .android.graphics.RectProto bound_top = 4;
  bool has_bound_top() const;
  void clear_bound_top();
  const ::android::graphics::RectProto& bound_top() const;
  ::android::graphics::RectProto* release_bound_top();
  ::android::graphics::RectProto* mutable_bound_top();
  void set_allocated_bound_top(::android::graphics::RectProto* bound_top);

  // optional .android.graphics.RectProto bound_right = 5;
  bool has_bound_right() const;
  void clear_bound_right();
  const ::android::graphics::RectProto& bound_right() const;
  ::android::graphics::RectProto* release_bound_right();
  ::android::graphics::RectProto* mutable_bound_right();
  void set_allocated_bound_right(::android::graphics::RectProto* bound_right);

  // optional .android.graphics.RectProto bound_bottom = 6;
  bool has_bound_bottom() const;
  void clear_bound_bottom();
  const ::android::graphics::RectProto& bound_bottom() const;
  ::android::graphics::RectProto* release_bound_bottom();
  ::android::graphics::RectProto* mutable_bound_bottom();
  void set_allocated_bound_bottom(::android::graphics::RectProto* bound_bottom);

  // @@protoc_insertion_point(class_scope:android.view.DisplayCutoutProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::graphics::RectProto* insets_;
  ::android::graphics::RectProto* bound_left_;
  ::android::graphics::RectProto* bound_top_;
  ::android::graphics::RectProto* bound_right_;
  ::android::graphics::RectProto* bound_bottom_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DisplayCutoutProto

// optional .android.graphics.RectProto insets = 1;
inline bool DisplayCutoutProto::has_insets() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::android::graphics::RectProto& DisplayCutoutProto::insets() const {
  const ::android::graphics::RectProto* p = insets_;
  // @@protoc_insertion_point(field_get:android.view.DisplayCutoutProto.insets)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::graphics::RectProto*>(
      &::android::graphics::_RectProto_default_instance_);
}
inline ::android::graphics::RectProto* DisplayCutoutProto::release_insets() {
  // @@protoc_insertion_point(field_release:android.view.DisplayCutoutProto.insets)
  _has_bits_[0] &= ~0x00000001u;
  ::android::graphics::RectProto* temp = insets_;
  insets_ = nullptr;
  return temp;
}
inline ::android::graphics::RectProto* DisplayCutoutProto::mutable_insets() {
  _has_bits_[0] |= 0x00000001u;
  if (insets_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::graphics::RectProto>(GetArenaNoVirtual());
    insets_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.DisplayCutoutProto.insets)
  return insets_;
}
inline void DisplayCutoutProto::set_allocated_insets(::android::graphics::RectProto* insets) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(insets_);
  }
  if (insets) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      insets = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insets, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  insets_ = insets;
  // @@protoc_insertion_point(field_set_allocated:android.view.DisplayCutoutProto.insets)
}

// optional .android.graphics.RectProto bound_left = 3;
inline bool DisplayCutoutProto::has_bound_left() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::android::graphics::RectProto& DisplayCutoutProto::bound_left() const {
  const ::android::graphics::RectProto* p = bound_left_;
  // @@protoc_insertion_point(field_get:android.view.DisplayCutoutProto.bound_left)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::graphics::RectProto*>(
      &::android::graphics::_RectProto_default_instance_);
}
inline ::android::graphics::RectProto* DisplayCutoutProto::release_bound_left() {
  // @@protoc_insertion_point(field_release:android.view.DisplayCutoutProto.bound_left)
  _has_bits_[0] &= ~0x00000002u;
  ::android::graphics::RectProto* temp = bound_left_;
  bound_left_ = nullptr;
  return temp;
}
inline ::android::graphics::RectProto* DisplayCutoutProto::mutable_bound_left() {
  _has_bits_[0] |= 0x00000002u;
  if (bound_left_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::graphics::RectProto>(GetArenaNoVirtual());
    bound_left_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.DisplayCutoutProto.bound_left)
  return bound_left_;
}
inline void DisplayCutoutProto::set_allocated_bound_left(::android::graphics::RectProto* bound_left) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(bound_left_);
  }
  if (bound_left) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bound_left = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bound_left, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  bound_left_ = bound_left;
  // @@protoc_insertion_point(field_set_allocated:android.view.DisplayCutoutProto.bound_left)
}

// optional .android.graphics.RectProto bound_top = 4;
inline bool DisplayCutoutProto::has_bound_top() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline const ::android::graphics::RectProto& DisplayCutoutProto::bound_top() const {
  const ::android::graphics::RectProto* p = bound_top_;
  // @@protoc_insertion_point(field_get:android.view.DisplayCutoutProto.bound_top)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::graphics::RectProto*>(
      &::android::graphics::_RectProto_default_instance_);
}
inline ::android::graphics::RectProto* DisplayCutoutProto::release_bound_top() {
  // @@protoc_insertion_point(field_release:android.view.DisplayCutoutProto.bound_top)
  _has_bits_[0] &= ~0x00000004u;
  ::android::graphics::RectProto* temp = bound_top_;
  bound_top_ = nullptr;
  return temp;
}
inline ::android::graphics::RectProto* DisplayCutoutProto::mutable_bound_top() {
  _has_bits_[0] |= 0x00000004u;
  if (bound_top_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::graphics::RectProto>(GetArenaNoVirtual());
    bound_top_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.DisplayCutoutProto.bound_top)
  return bound_top_;
}
inline void DisplayCutoutProto::set_allocated_bound_top(::android::graphics::RectProto* bound_top) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(bound_top_);
  }
  if (bound_top) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bound_top = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bound_top, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  bound_top_ = bound_top;
  // @@protoc_insertion_point(field_set_allocated:android.view.DisplayCutoutProto.bound_top)
}

// optional .android.graphics.RectProto bound_right = 5;
inline bool DisplayCutoutProto::has_bound_right() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline const ::android::graphics::RectProto& DisplayCutoutProto::bound_right() const {
  const ::android::graphics::RectProto* p = bound_right_;
  // @@protoc_insertion_point(field_get:android.view.DisplayCutoutProto.bound_right)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::graphics::RectProto*>(
      &::android::graphics::_RectProto_default_instance_);
}
inline ::android::graphics::RectProto* DisplayCutoutProto::release_bound_right() {
  // @@protoc_insertion_point(field_release:android.view.DisplayCutoutProto.bound_right)
  _has_bits_[0] &= ~0x00000008u;
  ::android::graphics::RectProto* temp = bound_right_;
  bound_right_ = nullptr;
  return temp;
}
inline ::android::graphics::RectProto* DisplayCutoutProto::mutable_bound_right() {
  _has_bits_[0] |= 0x00000008u;
  if (bound_right_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::graphics::RectProto>(GetArenaNoVirtual());
    bound_right_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.DisplayCutoutProto.bound_right)
  return bound_right_;
}
inline void DisplayCutoutProto::set_allocated_bound_right(::android::graphics::RectProto* bound_right) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(bound_right_);
  }
  if (bound_right) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bound_right = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bound_right, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  bound_right_ = bound_right;
  // @@protoc_insertion_point(field_set_allocated:android.view.DisplayCutoutProto.bound_right)
}

// optional .android.graphics.RectProto bound_bottom = 6;
inline bool DisplayCutoutProto::has_bound_bottom() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline const ::android::graphics::RectProto& DisplayCutoutProto::bound_bottom() const {
  const ::android::graphics::RectProto* p = bound_bottom_;
  // @@protoc_insertion_point(field_get:android.view.DisplayCutoutProto.bound_bottom)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::graphics::RectProto*>(
      &::android::graphics::_RectProto_default_instance_);
}
inline ::android::graphics::RectProto* DisplayCutoutProto::release_bound_bottom() {
  // @@protoc_insertion_point(field_release:android.view.DisplayCutoutProto.bound_bottom)
  _has_bits_[0] &= ~0x00000010u;
  ::android::graphics::RectProto* temp = bound_bottom_;
  bound_bottom_ = nullptr;
  return temp;
}
inline ::android::graphics::RectProto* DisplayCutoutProto::mutable_bound_bottom() {
  _has_bits_[0] |= 0x00000010u;
  if (bound_bottom_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::graphics::RectProto>(GetArenaNoVirtual());
    bound_bottom_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.view.DisplayCutoutProto.bound_bottom)
  return bound_bottom_;
}
inline void DisplayCutoutProto::set_allocated_bound_bottom(::android::graphics::RectProto* bound_bottom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(bound_bottom_);
  }
  if (bound_bottom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bound_bottom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bound_bottom, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  bound_bottom_ = bound_bottom;
  // @@protoc_insertion_point(field_set_allocated:android.view.DisplayCutoutProto.bound_bottom)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace view
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto
