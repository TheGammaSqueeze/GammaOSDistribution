// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/wirelesschargerdetector.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace com {
namespace android {
namespace server {
namespace power {
class WirelessChargerDetectorProto;
class WirelessChargerDetectorProtoDefaultTypeInternal;
extern WirelessChargerDetectorProtoDefaultTypeInternal _WirelessChargerDetectorProto_default_instance_;
class WirelessChargerDetectorProto_VectorProto;
class WirelessChargerDetectorProto_VectorProtoDefaultTypeInternal;
extern WirelessChargerDetectorProto_VectorProtoDefaultTypeInternal _WirelessChargerDetectorProto_VectorProto_default_instance_;
}  // namespace power
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::android::server::power::WirelessChargerDetectorProto* Arena::CreateMaybeMessage<::com::android::server::power::WirelessChargerDetectorProto>(Arena*);
template<> ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* Arena::CreateMaybeMessage<::com::android::server::power::WirelessChargerDetectorProto_VectorProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace android {
namespace server {
namespace power {

// ===================================================================

class WirelessChargerDetectorProto_VectorProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.power.WirelessChargerDetectorProto.VectorProto) */ {
 public:
  WirelessChargerDetectorProto_VectorProto();
  virtual ~WirelessChargerDetectorProto_VectorProto();

  WirelessChargerDetectorProto_VectorProto(const WirelessChargerDetectorProto_VectorProto& from);
  WirelessChargerDetectorProto_VectorProto(WirelessChargerDetectorProto_VectorProto&& from) noexcept
    : WirelessChargerDetectorProto_VectorProto() {
    *this = ::std::move(from);
  }

  inline WirelessChargerDetectorProto_VectorProto& operator=(const WirelessChargerDetectorProto_VectorProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline WirelessChargerDetectorProto_VectorProto& operator=(WirelessChargerDetectorProto_VectorProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const WirelessChargerDetectorProto_VectorProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WirelessChargerDetectorProto_VectorProto* internal_default_instance() {
    return reinterpret_cast<const WirelessChargerDetectorProto_VectorProto*>(
               &_WirelessChargerDetectorProto_VectorProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(WirelessChargerDetectorProto_VectorProto& a, WirelessChargerDetectorProto_VectorProto& b) {
    a.Swap(&b);
  }
  inline void Swap(WirelessChargerDetectorProto_VectorProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WirelessChargerDetectorProto_VectorProto* New() const final {
    return CreateMaybeMessage<WirelessChargerDetectorProto_VectorProto>(nullptr);
  }

  WirelessChargerDetectorProto_VectorProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WirelessChargerDetectorProto_VectorProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const WirelessChargerDetectorProto_VectorProto& from);
  void MergeFrom(const WirelessChargerDetectorProto_VectorProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WirelessChargerDetectorProto_VectorProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.power.WirelessChargerDetectorProto.VectorProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // optional float x = 1;
  bool has_x() const;
  void clear_x();
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  bool has_y() const;
  void clear_y();
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  bool has_z() const;
  void clear_z();
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:com.android.server.power.WirelessChargerDetectorProto.VectorProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float x_;
  float y_;
  float z_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto;
};
// -------------------------------------------------------------------

class WirelessChargerDetectorProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.power.WirelessChargerDetectorProto) */ {
 public:
  WirelessChargerDetectorProto();
  virtual ~WirelessChargerDetectorProto();

  WirelessChargerDetectorProto(const WirelessChargerDetectorProto& from);
  WirelessChargerDetectorProto(WirelessChargerDetectorProto&& from) noexcept
    : WirelessChargerDetectorProto() {
    *this = ::std::move(from);
  }

  inline WirelessChargerDetectorProto& operator=(const WirelessChargerDetectorProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline WirelessChargerDetectorProto& operator=(WirelessChargerDetectorProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const WirelessChargerDetectorProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WirelessChargerDetectorProto* internal_default_instance() {
    return reinterpret_cast<const WirelessChargerDetectorProto*>(
               &_WirelessChargerDetectorProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(WirelessChargerDetectorProto& a, WirelessChargerDetectorProto& b) {
    a.Swap(&b);
  }
  inline void Swap(WirelessChargerDetectorProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WirelessChargerDetectorProto* New() const final {
    return CreateMaybeMessage<WirelessChargerDetectorProto>(nullptr);
  }

  WirelessChargerDetectorProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WirelessChargerDetectorProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const WirelessChargerDetectorProto& from);
  void MergeFrom(const WirelessChargerDetectorProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WirelessChargerDetectorProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.power.WirelessChargerDetectorProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef WirelessChargerDetectorProto_VectorProto VectorProto;

  // accessors -------------------------------------------------------

  enum : int {
    kRestFieldNumber = 3,
    kFirstSampleFieldNumber = 9,
    kLastSampleFieldNumber = 10,
    kIsPoweredWirelesslyFieldNumber = 1,
    kIsAtRestFieldNumber = 2,
    kIsDetectionInProgressFieldNumber = 4,
    kIsMustUpdateRestPositionFieldNumber = 6,
    kTotalSamplesFieldNumber = 7,
    kDetectionStartTimeMsFieldNumber = 5,
    kMovingSamplesFieldNumber = 8,
  };
  // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto rest = 3;
  bool has_rest() const;
  void clear_rest();
  const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto& rest() const;
  ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* release_rest();
  ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* mutable_rest();
  void set_allocated_rest(::com::android::server::power::WirelessChargerDetectorProto_VectorProto* rest);

  // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto first_sample = 9;
  bool has_first_sample() const;
  void clear_first_sample();
  const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto& first_sample() const;
  ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* release_first_sample();
  ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* mutable_first_sample();
  void set_allocated_first_sample(::com::android::server::power::WirelessChargerDetectorProto_VectorProto* first_sample);

  // optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto last_sample = 10;
  bool has_last_sample() const;
  void clear_last_sample();
  const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto& last_sample() const;
  ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* release_last_sample();
  ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* mutable_last_sample();
  void set_allocated_last_sample(::com::android::server::power::WirelessChargerDetectorProto_VectorProto* last_sample);

  // optional bool is_powered_wirelessly = 1;
  bool has_is_powered_wirelessly() const;
  void clear_is_powered_wirelessly();
  bool is_powered_wirelessly() const;
  void set_is_powered_wirelessly(bool value);

  // optional bool is_at_rest = 2;
  bool has_is_at_rest() const;
  void clear_is_at_rest();
  bool is_at_rest() const;
  void set_is_at_rest(bool value);

  // optional bool is_detection_in_progress = 4;
  bool has_is_detection_in_progress() const;
  void clear_is_detection_in_progress();
  bool is_detection_in_progress() const;
  void set_is_detection_in_progress(bool value);

  // optional bool is_must_update_rest_position = 6;
  bool has_is_must_update_rest_position() const;
  void clear_is_must_update_rest_position();
  bool is_must_update_rest_position() const;
  void set_is_must_update_rest_position(bool value);

  // optional int32 total_samples = 7;
  bool has_total_samples() const;
  void clear_total_samples();
  ::PROTOBUF_NAMESPACE_ID::int32 total_samples() const;
  void set_total_samples(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 detection_start_time_ms = 5;
  bool has_detection_start_time_ms() const;
  void clear_detection_start_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 detection_start_time_ms() const;
  void set_detection_start_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 moving_samples = 8;
  bool has_moving_samples() const;
  void clear_moving_samples();
  ::PROTOBUF_NAMESPACE_ID::int32 moving_samples() const;
  void set_moving_samples(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.power.WirelessChargerDetectorProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* rest_;
  ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* first_sample_;
  ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* last_sample_;
  bool is_powered_wirelessly_;
  bool is_at_rest_;
  bool is_detection_in_progress_;
  bool is_must_update_rest_position_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_samples_;
  ::PROTOBUF_NAMESPACE_ID::int64 detection_start_time_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 moving_samples_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WirelessChargerDetectorProto_VectorProto

// optional float x = 1;
inline bool WirelessChargerDetectorProto_VectorProto::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WirelessChargerDetectorProto_VectorProto::clear_x() {
  x_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float WirelessChargerDetectorProto_VectorProto::x() const {
  // @@protoc_insertion_point(field_get:com.android.server.power.WirelessChargerDetectorProto.VectorProto.x)
  return x_;
}
inline void WirelessChargerDetectorProto_VectorProto::set_x(float value) {
  _has_bits_[0] |= 0x00000001u;
  x_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.power.WirelessChargerDetectorProto.VectorProto.x)
}

// optional float y = 2;
inline bool WirelessChargerDetectorProto_VectorProto::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WirelessChargerDetectorProto_VectorProto::clear_y() {
  y_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float WirelessChargerDetectorProto_VectorProto::y() const {
  // @@protoc_insertion_point(field_get:com.android.server.power.WirelessChargerDetectorProto.VectorProto.y)
  return y_;
}
inline void WirelessChargerDetectorProto_VectorProto::set_y(float value) {
  _has_bits_[0] |= 0x00000002u;
  y_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.power.WirelessChargerDetectorProto.VectorProto.y)
}

// optional float z = 3;
inline bool WirelessChargerDetectorProto_VectorProto::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WirelessChargerDetectorProto_VectorProto::clear_z() {
  z_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float WirelessChargerDetectorProto_VectorProto::z() const {
  // @@protoc_insertion_point(field_get:com.android.server.power.WirelessChargerDetectorProto.VectorProto.z)
  return z_;
}
inline void WirelessChargerDetectorProto_VectorProto::set_z(float value) {
  _has_bits_[0] |= 0x00000004u;
  z_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.power.WirelessChargerDetectorProto.VectorProto.z)
}

// -------------------------------------------------------------------

// WirelessChargerDetectorProto

// optional bool is_powered_wirelessly = 1;
inline bool WirelessChargerDetectorProto::has_is_powered_wirelessly() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WirelessChargerDetectorProto::clear_is_powered_wirelessly() {
  is_powered_wirelessly_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool WirelessChargerDetectorProto::is_powered_wirelessly() const {
  // @@protoc_insertion_point(field_get:com.android.server.power.WirelessChargerDetectorProto.is_powered_wirelessly)
  return is_powered_wirelessly_;
}
inline void WirelessChargerDetectorProto::set_is_powered_wirelessly(bool value) {
  _has_bits_[0] |= 0x00000008u;
  is_powered_wirelessly_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.power.WirelessChargerDetectorProto.is_powered_wirelessly)
}

// optional bool is_at_rest = 2;
inline bool WirelessChargerDetectorProto::has_is_at_rest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WirelessChargerDetectorProto::clear_is_at_rest() {
  is_at_rest_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool WirelessChargerDetectorProto::is_at_rest() const {
  // @@protoc_insertion_point(field_get:com.android.server.power.WirelessChargerDetectorProto.is_at_rest)
  return is_at_rest_;
}
inline void WirelessChargerDetectorProto::set_is_at_rest(bool value) {
  _has_bits_[0] |= 0x00000010u;
  is_at_rest_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.power.WirelessChargerDetectorProto.is_at_rest)
}

// optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto rest = 3;
inline bool WirelessChargerDetectorProto::has_rest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WirelessChargerDetectorProto::clear_rest() {
  if (rest_ != nullptr) rest_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto& WirelessChargerDetectorProto::rest() const {
  const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* p = rest_;
  // @@protoc_insertion_point(field_get:com.android.server.power.WirelessChargerDetectorProto.rest)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto*>(
      &::com::android::server::power::_WirelessChargerDetectorProto_VectorProto_default_instance_);
}
inline ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* WirelessChargerDetectorProto::release_rest() {
  // @@protoc_insertion_point(field_release:com.android.server.power.WirelessChargerDetectorProto.rest)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* temp = rest_;
  rest_ = nullptr;
  return temp;
}
inline ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* WirelessChargerDetectorProto::mutable_rest() {
  _has_bits_[0] |= 0x00000001u;
  if (rest_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::power::WirelessChargerDetectorProto_VectorProto>(GetArenaNoVirtual());
    rest_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.power.WirelessChargerDetectorProto.rest)
  return rest_;
}
inline void WirelessChargerDetectorProto::set_allocated_rest(::com::android::server::power::WirelessChargerDetectorProto_VectorProto* rest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete rest_;
  }
  if (rest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rest, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  rest_ = rest;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.power.WirelessChargerDetectorProto.rest)
}

// optional bool is_detection_in_progress = 4;
inline bool WirelessChargerDetectorProto::has_is_detection_in_progress() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WirelessChargerDetectorProto::clear_is_detection_in_progress() {
  is_detection_in_progress_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool WirelessChargerDetectorProto::is_detection_in_progress() const {
  // @@protoc_insertion_point(field_get:com.android.server.power.WirelessChargerDetectorProto.is_detection_in_progress)
  return is_detection_in_progress_;
}
inline void WirelessChargerDetectorProto::set_is_detection_in_progress(bool value) {
  _has_bits_[0] |= 0x00000020u;
  is_detection_in_progress_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.power.WirelessChargerDetectorProto.is_detection_in_progress)
}

// optional int64 detection_start_time_ms = 5;
inline bool WirelessChargerDetectorProto::has_detection_start_time_ms() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WirelessChargerDetectorProto::clear_detection_start_time_ms() {
  detection_start_time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WirelessChargerDetectorProto::detection_start_time_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.power.WirelessChargerDetectorProto.detection_start_time_ms)
  return detection_start_time_ms_;
}
inline void WirelessChargerDetectorProto::set_detection_start_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  detection_start_time_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.power.WirelessChargerDetectorProto.detection_start_time_ms)
}

// optional bool is_must_update_rest_position = 6;
inline bool WirelessChargerDetectorProto::has_is_must_update_rest_position() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WirelessChargerDetectorProto::clear_is_must_update_rest_position() {
  is_must_update_rest_position_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool WirelessChargerDetectorProto::is_must_update_rest_position() const {
  // @@protoc_insertion_point(field_get:com.android.server.power.WirelessChargerDetectorProto.is_must_update_rest_position)
  return is_must_update_rest_position_;
}
inline void WirelessChargerDetectorProto::set_is_must_update_rest_position(bool value) {
  _has_bits_[0] |= 0x00000040u;
  is_must_update_rest_position_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.power.WirelessChargerDetectorProto.is_must_update_rest_position)
}

// optional int32 total_samples = 7;
inline bool WirelessChargerDetectorProto::has_total_samples() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WirelessChargerDetectorProto::clear_total_samples() {
  total_samples_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WirelessChargerDetectorProto::total_samples() const {
  // @@protoc_insertion_point(field_get:com.android.server.power.WirelessChargerDetectorProto.total_samples)
  return total_samples_;
}
inline void WirelessChargerDetectorProto::set_total_samples(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  total_samples_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.power.WirelessChargerDetectorProto.total_samples)
}

// optional int32 moving_samples = 8;
inline bool WirelessChargerDetectorProto::has_moving_samples() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WirelessChargerDetectorProto::clear_moving_samples() {
  moving_samples_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WirelessChargerDetectorProto::moving_samples() const {
  // @@protoc_insertion_point(field_get:com.android.server.power.WirelessChargerDetectorProto.moving_samples)
  return moving_samples_;
}
inline void WirelessChargerDetectorProto::set_moving_samples(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  moving_samples_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.power.WirelessChargerDetectorProto.moving_samples)
}

// optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto first_sample = 9;
inline bool WirelessChargerDetectorProto::has_first_sample() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WirelessChargerDetectorProto::clear_first_sample() {
  if (first_sample_ != nullptr) first_sample_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto& WirelessChargerDetectorProto::first_sample() const {
  const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* p = first_sample_;
  // @@protoc_insertion_point(field_get:com.android.server.power.WirelessChargerDetectorProto.first_sample)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto*>(
      &::com::android::server::power::_WirelessChargerDetectorProto_VectorProto_default_instance_);
}
inline ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* WirelessChargerDetectorProto::release_first_sample() {
  // @@protoc_insertion_point(field_release:com.android.server.power.WirelessChargerDetectorProto.first_sample)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* temp = first_sample_;
  first_sample_ = nullptr;
  return temp;
}
inline ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* WirelessChargerDetectorProto::mutable_first_sample() {
  _has_bits_[0] |= 0x00000002u;
  if (first_sample_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::power::WirelessChargerDetectorProto_VectorProto>(GetArenaNoVirtual());
    first_sample_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.power.WirelessChargerDetectorProto.first_sample)
  return first_sample_;
}
inline void WirelessChargerDetectorProto::set_allocated_first_sample(::com::android::server::power::WirelessChargerDetectorProto_VectorProto* first_sample) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete first_sample_;
  }
  if (first_sample) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      first_sample = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, first_sample, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  first_sample_ = first_sample;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.power.WirelessChargerDetectorProto.first_sample)
}

// optional .com.android.server.power.WirelessChargerDetectorProto.VectorProto last_sample = 10;
inline bool WirelessChargerDetectorProto::has_last_sample() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WirelessChargerDetectorProto::clear_last_sample() {
  if (last_sample_ != nullptr) last_sample_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto& WirelessChargerDetectorProto::last_sample() const {
  const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* p = last_sample_;
  // @@protoc_insertion_point(field_get:com.android.server.power.WirelessChargerDetectorProto.last_sample)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::power::WirelessChargerDetectorProto_VectorProto*>(
      &::com::android::server::power::_WirelessChargerDetectorProto_VectorProto_default_instance_);
}
inline ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* WirelessChargerDetectorProto::release_last_sample() {
  // @@protoc_insertion_point(field_release:com.android.server.power.WirelessChargerDetectorProto.last_sample)
  _has_bits_[0] &= ~0x00000004u;
  ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* temp = last_sample_;
  last_sample_ = nullptr;
  return temp;
}
inline ::com::android::server::power::WirelessChargerDetectorProto_VectorProto* WirelessChargerDetectorProto::mutable_last_sample() {
  _has_bits_[0] |= 0x00000004u;
  if (last_sample_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::power::WirelessChargerDetectorProto_VectorProto>(GetArenaNoVirtual());
    last_sample_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.power.WirelessChargerDetectorProto.last_sample)
  return last_sample_;
}
inline void WirelessChargerDetectorProto::set_allocated_last_sample(::com::android::server::power::WirelessChargerDetectorProto_VectorProto* last_sample) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete last_sample_;
  }
  if (last_sample) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      last_sample = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_sample, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  last_sample_ = last_sample;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.power.WirelessChargerDetectorProto.last_sample)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace power
}  // namespace server
}  // namespace android
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fwirelesschargerdetector_2eproto
