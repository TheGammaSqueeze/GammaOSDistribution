// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/jobscheduler.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "frameworks/base/core/proto/android/content/clipdata.pb.h"
#include "frameworks/base/core/proto/android/content/component_name.pb.h"
#include "frameworks/base/core/proto/android/content/intent.pb.h"
#include "frameworks/base/core/proto/android/net/network.pb.h"
#include "frameworks/base/core/proto/android/net/networkrequest.pb.h"
#include "frameworks/base/core/proto/android/os/bundle.pb.h"
#include "frameworks/base/core/proto/android/os/persistablebundle.pb.h"
#include "frameworks/base/core/proto/android/server/appstatetracker.pb.h"
#include "frameworks/base/core/proto/android/server/statlogger.pb.h"
#include "frameworks/base/core/proto/android/privacy.pb.h"
#include "frameworks/base/core/proto/android/util/quotatracker.pb.h"
#include "frameworks/proto_logging/stats/enums/app/job/enums.pb.h"
#include "frameworks/proto_logging/stats/enums/server/job/enums.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[67]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace com {
namespace android {
namespace server {
namespace job {
class ConstantsProto;
class ConstantsProtoDefaultTypeInternal;
extern ConstantsProtoDefaultTypeInternal _ConstantsProto_default_instance_;
class ConstantsProto_QuotaController;
class ConstantsProto_QuotaControllerDefaultTypeInternal;
extern ConstantsProto_QuotaControllerDefaultTypeInternal _ConstantsProto_QuotaController_default_instance_;
class ConstantsProto_TimeController;
class ConstantsProto_TimeControllerDefaultTypeInternal;
extern ConstantsProto_TimeControllerDefaultTypeInternal _ConstantsProto_TimeController_default_instance_;
class DataSetProto;
class DataSetProtoDefaultTypeInternal;
extern DataSetProtoDefaultTypeInternal _DataSetProto_default_instance_;
class DataSetProto_PackageEntryProto;
class DataSetProto_PackageEntryProtoDefaultTypeInternal;
extern DataSetProto_PackageEntryProtoDefaultTypeInternal _DataSetProto_PackageEntryProto_default_instance_;
class DataSetProto_PackageEntryProto_State;
class DataSetProto_PackageEntryProto_StateDefaultTypeInternal;
extern DataSetProto_PackageEntryProto_StateDefaultTypeInternal _DataSetProto_PackageEntryProto_State_default_instance_;
class DataSetProto_PackageEntryProto_StopReasonCount;
class DataSetProto_PackageEntryProto_StopReasonCountDefaultTypeInternal;
extern DataSetProto_PackageEntryProto_StopReasonCountDefaultTypeInternal _DataSetProto_PackageEntryProto_StopReasonCount_default_instance_;
class GrantedUriPermissionsDumpProto;
class GrantedUriPermissionsDumpProtoDefaultTypeInternal;
extern GrantedUriPermissionsDumpProtoDefaultTypeInternal _GrantedUriPermissionsDumpProto_default_instance_;
class JobConcurrencyManagerProto;
class JobConcurrencyManagerProtoDefaultTypeInternal;
extern JobConcurrencyManagerProtoDefaultTypeInternal _JobConcurrencyManagerProto_default_instance_;
class JobCountTrackerProto;
class JobCountTrackerProtoDefaultTypeInternal;
extern JobCountTrackerProtoDefaultTypeInternal _JobCountTrackerProto_default_instance_;
class JobPackageHistoryProto;
class JobPackageHistoryProtoDefaultTypeInternal;
extern JobPackageHistoryProtoDefaultTypeInternal _JobPackageHistoryProto_default_instance_;
class JobPackageHistoryProto_HistoryEvent;
class JobPackageHistoryProto_HistoryEventDefaultTypeInternal;
extern JobPackageHistoryProto_HistoryEventDefaultTypeInternal _JobPackageHistoryProto_HistoryEvent_default_instance_;
class JobPackageTrackerDumpProto;
class JobPackageTrackerDumpProtoDefaultTypeInternal;
extern JobPackageTrackerDumpProtoDefaultTypeInternal _JobPackageTrackerDumpProto_default_instance_;
class JobSchedulerServiceDumpProto;
class JobSchedulerServiceDumpProtoDefaultTypeInternal;
extern JobSchedulerServiceDumpProtoDefaultTypeInternal _JobSchedulerServiceDumpProto_default_instance_;
class JobSchedulerServiceDumpProto_ActiveJob;
class JobSchedulerServiceDumpProto_ActiveJobDefaultTypeInternal;
extern JobSchedulerServiceDumpProto_ActiveJobDefaultTypeInternal _JobSchedulerServiceDumpProto_ActiveJob_default_instance_;
class JobSchedulerServiceDumpProto_ActiveJob_InactiveJob;
class JobSchedulerServiceDumpProto_ActiveJob_InactiveJobDefaultTypeInternal;
extern JobSchedulerServiceDumpProto_ActiveJob_InactiveJobDefaultTypeInternal _JobSchedulerServiceDumpProto_ActiveJob_InactiveJob_default_instance_;
class JobSchedulerServiceDumpProto_ActiveJob_RunningJob;
class JobSchedulerServiceDumpProto_ActiveJob_RunningJobDefaultTypeInternal;
extern JobSchedulerServiceDumpProto_ActiveJob_RunningJobDefaultTypeInternal _JobSchedulerServiceDumpProto_ActiveJob_RunningJob_default_instance_;
class JobSchedulerServiceDumpProto_JobRestriction;
class JobSchedulerServiceDumpProto_JobRestrictionDefaultTypeInternal;
extern JobSchedulerServiceDumpProto_JobRestrictionDefaultTypeInternal _JobSchedulerServiceDumpProto_JobRestriction_default_instance_;
class JobSchedulerServiceDumpProto_PendingJob;
class JobSchedulerServiceDumpProto_PendingJobDefaultTypeInternal;
extern JobSchedulerServiceDumpProto_PendingJobDefaultTypeInternal _JobSchedulerServiceDumpProto_PendingJob_default_instance_;
class JobSchedulerServiceDumpProto_PriorityOverride;
class JobSchedulerServiceDumpProto_PriorityOverrideDefaultTypeInternal;
extern JobSchedulerServiceDumpProto_PriorityOverrideDefaultTypeInternal _JobSchedulerServiceDumpProto_PriorityOverride_default_instance_;
class JobSchedulerServiceDumpProto_RegisteredJob;
class JobSchedulerServiceDumpProto_RegisteredJobDefaultTypeInternal;
extern JobSchedulerServiceDumpProto_RegisteredJobDefaultTypeInternal _JobSchedulerServiceDumpProto_RegisteredJob_default_instance_;
class JobStatusDumpProto;
class JobStatusDumpProtoDefaultTypeInternal;
extern JobStatusDumpProtoDefaultTypeInternal _JobStatusDumpProto_default_instance_;
class JobStatusDumpProto_ImplicitConstraints;
class JobStatusDumpProto_ImplicitConstraintsDefaultTypeInternal;
extern JobStatusDumpProto_ImplicitConstraintsDefaultTypeInternal _JobStatusDumpProto_ImplicitConstraints_default_instance_;
class JobStatusDumpProto_JobInfo;
class JobStatusDumpProto_JobInfoDefaultTypeInternal;
extern JobStatusDumpProto_JobInfoDefaultTypeInternal _JobStatusDumpProto_JobInfo_default_instance_;
class JobStatusDumpProto_JobInfo_Backoff;
class JobStatusDumpProto_JobInfo_BackoffDefaultTypeInternal;
extern JobStatusDumpProto_JobInfo_BackoffDefaultTypeInternal _JobStatusDumpProto_JobInfo_Backoff_default_instance_;
class JobStatusDumpProto_JobInfo_TriggerContentUri;
class JobStatusDumpProto_JobInfo_TriggerContentUriDefaultTypeInternal;
extern JobStatusDumpProto_JobInfo_TriggerContentUriDefaultTypeInternal _JobStatusDumpProto_JobInfo_TriggerContentUri_default_instance_;
class JobStatusDumpProto_JobWorkItem;
class JobStatusDumpProto_JobWorkItemDefaultTypeInternal;
extern JobStatusDumpProto_JobWorkItemDefaultTypeInternal _JobStatusDumpProto_JobWorkItem_default_instance_;
class JobStatusShortInfoProto;
class JobStatusShortInfoProtoDefaultTypeInternal;
extern JobStatusShortInfoProtoDefaultTypeInternal _JobStatusShortInfoProto_default_instance_;
class JobStorePersistStatsProto;
class JobStorePersistStatsProtoDefaultTypeInternal;
extern JobStorePersistStatsProtoDefaultTypeInternal _JobStorePersistStatsProto_default_instance_;
class JobStorePersistStatsProto_Stats;
class JobStorePersistStatsProto_StatsDefaultTypeInternal;
extern JobStorePersistStatsProto_StatsDefaultTypeInternal _JobStorePersistStatsProto_Stats_default_instance_;
class MaxJobCountsPerMemoryTrimLevelProto;
class MaxJobCountsPerMemoryTrimLevelProtoDefaultTypeInternal;
extern MaxJobCountsPerMemoryTrimLevelProtoDefaultTypeInternal _MaxJobCountsPerMemoryTrimLevelProto_default_instance_;
class MaxJobCountsProto;
class MaxJobCountsProtoDefaultTypeInternal;
extern MaxJobCountsProtoDefaultTypeInternal _MaxJobCountsProto_default_instance_;
class StateControllerProto;
class StateControllerProtoDefaultTypeInternal;
extern StateControllerProtoDefaultTypeInternal _StateControllerProto_default_instance_;
class StateControllerProto_BackgroundJobsController;
class StateControllerProto_BackgroundJobsControllerDefaultTypeInternal;
extern StateControllerProto_BackgroundJobsControllerDefaultTypeInternal _StateControllerProto_BackgroundJobsController_default_instance_;
class StateControllerProto_BackgroundJobsController_TrackedJob;
class StateControllerProto_BackgroundJobsController_TrackedJobDefaultTypeInternal;
extern StateControllerProto_BackgroundJobsController_TrackedJobDefaultTypeInternal _StateControllerProto_BackgroundJobsController_TrackedJob_default_instance_;
class StateControllerProto_BatteryController;
class StateControllerProto_BatteryControllerDefaultTypeInternal;
extern StateControllerProto_BatteryControllerDefaultTypeInternal _StateControllerProto_BatteryController_default_instance_;
class StateControllerProto_BatteryController_TrackedJob;
class StateControllerProto_BatteryController_TrackedJobDefaultTypeInternal;
extern StateControllerProto_BatteryController_TrackedJobDefaultTypeInternal _StateControllerProto_BatteryController_TrackedJob_default_instance_;
class StateControllerProto_ConnectivityController;
class StateControllerProto_ConnectivityControllerDefaultTypeInternal;
extern StateControllerProto_ConnectivityControllerDefaultTypeInternal _StateControllerProto_ConnectivityController_default_instance_;
class StateControllerProto_ConnectivityController_TrackedJob;
class StateControllerProto_ConnectivityController_TrackedJobDefaultTypeInternal;
extern StateControllerProto_ConnectivityController_TrackedJobDefaultTypeInternal _StateControllerProto_ConnectivityController_TrackedJob_default_instance_;
class StateControllerProto_ContentObserverController;
class StateControllerProto_ContentObserverControllerDefaultTypeInternal;
extern StateControllerProto_ContentObserverControllerDefaultTypeInternal _StateControllerProto_ContentObserverController_default_instance_;
class StateControllerProto_ContentObserverController_Observer;
class StateControllerProto_ContentObserverController_ObserverDefaultTypeInternal;
extern StateControllerProto_ContentObserverController_ObserverDefaultTypeInternal _StateControllerProto_ContentObserverController_Observer_default_instance_;
class StateControllerProto_ContentObserverController_Observer_TriggerContentData;
class StateControllerProto_ContentObserverController_Observer_TriggerContentDataDefaultTypeInternal;
extern StateControllerProto_ContentObserverController_Observer_TriggerContentDataDefaultTypeInternal _StateControllerProto_ContentObserverController_Observer_TriggerContentData_default_instance_;
class StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance;
class StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstanceDefaultTypeInternal;
extern StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstanceDefaultTypeInternal _StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance_default_instance_;
class StateControllerProto_ContentObserverController_TrackedJob;
class StateControllerProto_ContentObserverController_TrackedJobDefaultTypeInternal;
extern StateControllerProto_ContentObserverController_TrackedJobDefaultTypeInternal _StateControllerProto_ContentObserverController_TrackedJob_default_instance_;
class StateControllerProto_DeviceIdleJobsController;
class StateControllerProto_DeviceIdleJobsControllerDefaultTypeInternal;
extern StateControllerProto_DeviceIdleJobsControllerDefaultTypeInternal _StateControllerProto_DeviceIdleJobsController_default_instance_;
class StateControllerProto_DeviceIdleJobsController_TrackedJob;
class StateControllerProto_DeviceIdleJobsController_TrackedJobDefaultTypeInternal;
extern StateControllerProto_DeviceIdleJobsController_TrackedJobDefaultTypeInternal _StateControllerProto_DeviceIdleJobsController_TrackedJob_default_instance_;
class StateControllerProto_IdleController;
class StateControllerProto_IdleControllerDefaultTypeInternal;
extern StateControllerProto_IdleControllerDefaultTypeInternal _StateControllerProto_IdleController_default_instance_;
class StateControllerProto_IdleController_IdlenessTracker;
class StateControllerProto_IdleController_IdlenessTrackerDefaultTypeInternal;
extern StateControllerProto_IdleController_IdlenessTrackerDefaultTypeInternal _StateControllerProto_IdleController_IdlenessTracker_default_instance_;
class StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker;
class StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTrackerDefaultTypeInternal;
extern StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTrackerDefaultTypeInternal _StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker_default_instance_;
class StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker;
class StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTrackerDefaultTypeInternal;
extern StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTrackerDefaultTypeInternal _StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker_default_instance_;
class StateControllerProto_IdleController_TrackedJob;
class StateControllerProto_IdleController_TrackedJobDefaultTypeInternal;
extern StateControllerProto_IdleController_TrackedJobDefaultTypeInternal _StateControllerProto_IdleController_TrackedJob_default_instance_;
class StateControllerProto_QuotaController;
class StateControllerProto_QuotaControllerDefaultTypeInternal;
extern StateControllerProto_QuotaControllerDefaultTypeInternal _StateControllerProto_QuotaController_default_instance_;
class StateControllerProto_QuotaController_AlarmListener;
class StateControllerProto_QuotaController_AlarmListenerDefaultTypeInternal;
extern StateControllerProto_QuotaController_AlarmListenerDefaultTypeInternal _StateControllerProto_QuotaController_AlarmListener_default_instance_;
class StateControllerProto_QuotaController_ExecutionStats;
class StateControllerProto_QuotaController_ExecutionStatsDefaultTypeInternal;
extern StateControllerProto_QuotaController_ExecutionStatsDefaultTypeInternal _StateControllerProto_QuotaController_ExecutionStats_default_instance_;
class StateControllerProto_QuotaController_InQuotaAlarmListener;
class StateControllerProto_QuotaController_InQuotaAlarmListenerDefaultTypeInternal;
extern StateControllerProto_QuotaController_InQuotaAlarmListenerDefaultTypeInternal _StateControllerProto_QuotaController_InQuotaAlarmListener_default_instance_;
class StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm;
class StateControllerProto_QuotaController_InQuotaAlarmListener_AlarmDefaultTypeInternal;
extern StateControllerProto_QuotaController_InQuotaAlarmListener_AlarmDefaultTypeInternal _StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm_default_instance_;
class StateControllerProto_QuotaController_Package;
class StateControllerProto_QuotaController_PackageDefaultTypeInternal;
extern StateControllerProto_QuotaController_PackageDefaultTypeInternal _StateControllerProto_QuotaController_Package_default_instance_;
class StateControllerProto_QuotaController_PackageStats;
class StateControllerProto_QuotaController_PackageStatsDefaultTypeInternal;
extern StateControllerProto_QuotaController_PackageStatsDefaultTypeInternal _StateControllerProto_QuotaController_PackageStats_default_instance_;
class StateControllerProto_QuotaController_Timer;
class StateControllerProto_QuotaController_TimerDefaultTypeInternal;
extern StateControllerProto_QuotaController_TimerDefaultTypeInternal _StateControllerProto_QuotaController_Timer_default_instance_;
class StateControllerProto_QuotaController_TimingSession;
class StateControllerProto_QuotaController_TimingSessionDefaultTypeInternal;
extern StateControllerProto_QuotaController_TimingSessionDefaultTypeInternal _StateControllerProto_QuotaController_TimingSession_default_instance_;
class StateControllerProto_QuotaController_TopAppTimer;
class StateControllerProto_QuotaController_TopAppTimerDefaultTypeInternal;
extern StateControllerProto_QuotaController_TopAppTimerDefaultTypeInternal _StateControllerProto_QuotaController_TopAppTimer_default_instance_;
class StateControllerProto_QuotaController_TrackedJob;
class StateControllerProto_QuotaController_TrackedJobDefaultTypeInternal;
extern StateControllerProto_QuotaController_TrackedJobDefaultTypeInternal _StateControllerProto_QuotaController_TrackedJob_default_instance_;
class StateControllerProto_QuotaController_UidPackageMapping;
class StateControllerProto_QuotaController_UidPackageMappingDefaultTypeInternal;
extern StateControllerProto_QuotaController_UidPackageMappingDefaultTypeInternal _StateControllerProto_QuotaController_UidPackageMapping_default_instance_;
class StateControllerProto_StorageController;
class StateControllerProto_StorageControllerDefaultTypeInternal;
extern StateControllerProto_StorageControllerDefaultTypeInternal _StateControllerProto_StorageController_default_instance_;
class StateControllerProto_StorageController_TrackedJob;
class StateControllerProto_StorageController_TrackedJobDefaultTypeInternal;
extern StateControllerProto_StorageController_TrackedJobDefaultTypeInternal _StateControllerProto_StorageController_TrackedJob_default_instance_;
class StateControllerProto_TimeController;
class StateControllerProto_TimeControllerDefaultTypeInternal;
extern StateControllerProto_TimeControllerDefaultTypeInternal _StateControllerProto_TimeController_default_instance_;
class StateControllerProto_TimeController_TrackedJob;
class StateControllerProto_TimeController_TrackedJobDefaultTypeInternal;
extern StateControllerProto_TimeController_TrackedJobDefaultTypeInternal _StateControllerProto_TimeController_TrackedJob_default_instance_;
}  // namespace job
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::android::server::job::ConstantsProto* Arena::CreateMaybeMessage<::com::android::server::job::ConstantsProto>(Arena*);
template<> ::com::android::server::job::ConstantsProto_QuotaController* Arena::CreateMaybeMessage<::com::android::server::job::ConstantsProto_QuotaController>(Arena*);
template<> ::com::android::server::job::ConstantsProto_TimeController* Arena::CreateMaybeMessage<::com::android::server::job::ConstantsProto_TimeController>(Arena*);
template<> ::com::android::server::job::DataSetProto* Arena::CreateMaybeMessage<::com::android::server::job::DataSetProto>(Arena*);
template<> ::com::android::server::job::DataSetProto_PackageEntryProto* Arena::CreateMaybeMessage<::com::android::server::job::DataSetProto_PackageEntryProto>(Arena*);
template<> ::com::android::server::job::DataSetProto_PackageEntryProto_State* Arena::CreateMaybeMessage<::com::android::server::job::DataSetProto_PackageEntryProto_State>(Arena*);
template<> ::com::android::server::job::DataSetProto_PackageEntryProto_StopReasonCount* Arena::CreateMaybeMessage<::com::android::server::job::DataSetProto_PackageEntryProto_StopReasonCount>(Arena*);
template<> ::com::android::server::job::GrantedUriPermissionsDumpProto* Arena::CreateMaybeMessage<::com::android::server::job::GrantedUriPermissionsDumpProto>(Arena*);
template<> ::com::android::server::job::JobConcurrencyManagerProto* Arena::CreateMaybeMessage<::com::android::server::job::JobConcurrencyManagerProto>(Arena*);
template<> ::com::android::server::job::JobCountTrackerProto* Arena::CreateMaybeMessage<::com::android::server::job::JobCountTrackerProto>(Arena*);
template<> ::com::android::server::job::JobPackageHistoryProto* Arena::CreateMaybeMessage<::com::android::server::job::JobPackageHistoryProto>(Arena*);
template<> ::com::android::server::job::JobPackageHistoryProto_HistoryEvent* Arena::CreateMaybeMessage<::com::android::server::job::JobPackageHistoryProto_HistoryEvent>(Arena*);
template<> ::com::android::server::job::JobPackageTrackerDumpProto* Arena::CreateMaybeMessage<::com::android::server::job::JobPackageTrackerDumpProto>(Arena*);
template<> ::com::android::server::job::JobSchedulerServiceDumpProto* Arena::CreateMaybeMessage<::com::android::server::job::JobSchedulerServiceDumpProto>(Arena*);
template<> ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob* Arena::CreateMaybeMessage<::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob>(Arena*);
template<> ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_InactiveJob* Arena::CreateMaybeMessage<::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_InactiveJob>(Arena*);
template<> ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_RunningJob* Arena::CreateMaybeMessage<::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_RunningJob>(Arena*);
template<> ::com::android::server::job::JobSchedulerServiceDumpProto_JobRestriction* Arena::CreateMaybeMessage<::com::android::server::job::JobSchedulerServiceDumpProto_JobRestriction>(Arena*);
template<> ::com::android::server::job::JobSchedulerServiceDumpProto_PendingJob* Arena::CreateMaybeMessage<::com::android::server::job::JobSchedulerServiceDumpProto_PendingJob>(Arena*);
template<> ::com::android::server::job::JobSchedulerServiceDumpProto_PriorityOverride* Arena::CreateMaybeMessage<::com::android::server::job::JobSchedulerServiceDumpProto_PriorityOverride>(Arena*);
template<> ::com::android::server::job::JobSchedulerServiceDumpProto_RegisteredJob* Arena::CreateMaybeMessage<::com::android::server::job::JobSchedulerServiceDumpProto_RegisteredJob>(Arena*);
template<> ::com::android::server::job::JobStatusDumpProto* Arena::CreateMaybeMessage<::com::android::server::job::JobStatusDumpProto>(Arena*);
template<> ::com::android::server::job::JobStatusDumpProto_ImplicitConstraints* Arena::CreateMaybeMessage<::com::android::server::job::JobStatusDumpProto_ImplicitConstraints>(Arena*);
template<> ::com::android::server::job::JobStatusDumpProto_JobInfo* Arena::CreateMaybeMessage<::com::android::server::job::JobStatusDumpProto_JobInfo>(Arena*);
template<> ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff* Arena::CreateMaybeMessage<::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff>(Arena*);
template<> ::com::android::server::job::JobStatusDumpProto_JobInfo_TriggerContentUri* Arena::CreateMaybeMessage<::com::android::server::job::JobStatusDumpProto_JobInfo_TriggerContentUri>(Arena*);
template<> ::com::android::server::job::JobStatusDumpProto_JobWorkItem* Arena::CreateMaybeMessage<::com::android::server::job::JobStatusDumpProto_JobWorkItem>(Arena*);
template<> ::com::android::server::job::JobStatusShortInfoProto* Arena::CreateMaybeMessage<::com::android::server::job::JobStatusShortInfoProto>(Arena*);
template<> ::com::android::server::job::JobStorePersistStatsProto* Arena::CreateMaybeMessage<::com::android::server::job::JobStorePersistStatsProto>(Arena*);
template<> ::com::android::server::job::JobStorePersistStatsProto_Stats* Arena::CreateMaybeMessage<::com::android::server::job::JobStorePersistStatsProto_Stats>(Arena*);
template<> ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* Arena::CreateMaybeMessage<::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto>(Arena*);
template<> ::com::android::server::job::MaxJobCountsProto* Arena::CreateMaybeMessage<::com::android::server::job::MaxJobCountsProto>(Arena*);
template<> ::com::android::server::job::StateControllerProto* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto>(Arena*);
template<> ::com::android::server::job::StateControllerProto_BackgroundJobsController* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_BackgroundJobsController>(Arena*);
template<> ::com::android::server::job::StateControllerProto_BackgroundJobsController_TrackedJob* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_BackgroundJobsController_TrackedJob>(Arena*);
template<> ::com::android::server::job::StateControllerProto_BatteryController* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_BatteryController>(Arena*);
template<> ::com::android::server::job::StateControllerProto_BatteryController_TrackedJob* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_BatteryController_TrackedJob>(Arena*);
template<> ::com::android::server::job::StateControllerProto_ConnectivityController* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_ConnectivityController>(Arena*);
template<> ::com::android::server::job::StateControllerProto_ConnectivityController_TrackedJob* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_ConnectivityController_TrackedJob>(Arena*);
template<> ::com::android::server::job::StateControllerProto_ContentObserverController* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_ContentObserverController>(Arena*);
template<> ::com::android::server::job::StateControllerProto_ContentObserverController_Observer* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_ContentObserverController_Observer>(Arena*);
template<> ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData>(Arena*);
template<> ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance>(Arena*);
template<> ::com::android::server::job::StateControllerProto_ContentObserverController_TrackedJob* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_ContentObserverController_TrackedJob>(Arena*);
template<> ::com::android::server::job::StateControllerProto_DeviceIdleJobsController* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_DeviceIdleJobsController>(Arena*);
template<> ::com::android::server::job::StateControllerProto_DeviceIdleJobsController_TrackedJob* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_DeviceIdleJobsController_TrackedJob>(Arena*);
template<> ::com::android::server::job::StateControllerProto_IdleController* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_IdleController>(Arena*);
template<> ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker>(Arena*);
template<> ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker>(Arena*);
template<> ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker>(Arena*);
template<> ::com::android::server::job::StateControllerProto_IdleController_TrackedJob* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_IdleController_TrackedJob>(Arena*);
template<> ::com::android::server::job::StateControllerProto_QuotaController* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController>(Arena*);
template<> ::com::android::server::job::StateControllerProto_QuotaController_AlarmListener* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_AlarmListener>(Arena*);
template<> ::com::android::server::job::StateControllerProto_QuotaController_ExecutionStats* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_ExecutionStats>(Arena*);
template<> ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener>(Arena*);
template<> ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm>(Arena*);
template<> ::com::android::server::job::StateControllerProto_QuotaController_Package* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_Package>(Arena*);
template<> ::com::android::server::job::StateControllerProto_QuotaController_PackageStats* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_PackageStats>(Arena*);
template<> ::com::android::server::job::StateControllerProto_QuotaController_Timer* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_Timer>(Arena*);
template<> ::com::android::server::job::StateControllerProto_QuotaController_TimingSession* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_TimingSession>(Arena*);
template<> ::com::android::server::job::StateControllerProto_QuotaController_TopAppTimer* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_TopAppTimer>(Arena*);
template<> ::com::android::server::job::StateControllerProto_QuotaController_TrackedJob* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_TrackedJob>(Arena*);
template<> ::com::android::server::job::StateControllerProto_QuotaController_UidPackageMapping* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_UidPackageMapping>(Arena*);
template<> ::com::android::server::job::StateControllerProto_StorageController* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_StorageController>(Arena*);
template<> ::com::android::server::job::StateControllerProto_StorageController_TrackedJob* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_StorageController_TrackedJob>(Arena*);
template<> ::com::android::server::job::StateControllerProto_TimeController* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_TimeController>(Arena*);
template<> ::com::android::server::job::StateControllerProto_TimeController_TrackedJob* Arena::CreateMaybeMessage<::com::android::server::job::StateControllerProto_TimeController_TrackedJob>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace android {
namespace server {
namespace job {

enum JobPackageHistoryProto_Event : int {
  JobPackageHistoryProto_Event_UNKNOWN = 0,
  JobPackageHistoryProto_Event_START_JOB = 1,
  JobPackageHistoryProto_Event_STOP_JOB = 2,
  JobPackageHistoryProto_Event_START_PERIODIC_JOB = 3,
  JobPackageHistoryProto_Event_STOP_PERIODIC_JOB = 4
};
bool JobPackageHistoryProto_Event_IsValid(int value);
constexpr JobPackageHistoryProto_Event JobPackageHistoryProto_Event_Event_MIN = JobPackageHistoryProto_Event_UNKNOWN;
constexpr JobPackageHistoryProto_Event JobPackageHistoryProto_Event_Event_MAX = JobPackageHistoryProto_Event_STOP_PERIODIC_JOB;
constexpr int JobPackageHistoryProto_Event_Event_ARRAYSIZE = JobPackageHistoryProto_Event_Event_MAX + 1;

const std::string& JobPackageHistoryProto_Event_Name(JobPackageHistoryProto_Event value);
template<typename T>
inline const std::string& JobPackageHistoryProto_Event_Name(T enum_t_value) {
  static_assert(::std::is_same<T, JobPackageHistoryProto_Event>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function JobPackageHistoryProto_Event_Name.");
  return JobPackageHistoryProto_Event_Name(static_cast<JobPackageHistoryProto_Event>(enum_t_value));
}
bool JobPackageHistoryProto_Event_Parse(
    const std::string& name, JobPackageHistoryProto_Event* value);
enum JobStatusDumpProto_JobInfo_Backoff_Policy : int {
  JobStatusDumpProto_JobInfo_Backoff_Policy_BACKOFF_POLICY_LINEAR = 0,
  JobStatusDumpProto_JobInfo_Backoff_Policy_BACKOFF_POLICY_EXPONENTIAL = 1
};
bool JobStatusDumpProto_JobInfo_Backoff_Policy_IsValid(int value);
constexpr JobStatusDumpProto_JobInfo_Backoff_Policy JobStatusDumpProto_JobInfo_Backoff_Policy_Policy_MIN = JobStatusDumpProto_JobInfo_Backoff_Policy_BACKOFF_POLICY_LINEAR;
constexpr JobStatusDumpProto_JobInfo_Backoff_Policy JobStatusDumpProto_JobInfo_Backoff_Policy_Policy_MAX = JobStatusDumpProto_JobInfo_Backoff_Policy_BACKOFF_POLICY_EXPONENTIAL;
constexpr int JobStatusDumpProto_JobInfo_Backoff_Policy_Policy_ARRAYSIZE = JobStatusDumpProto_JobInfo_Backoff_Policy_Policy_MAX + 1;

const std::string& JobStatusDumpProto_JobInfo_Backoff_Policy_Name(JobStatusDumpProto_JobInfo_Backoff_Policy value);
template<typename T>
inline const std::string& JobStatusDumpProto_JobInfo_Backoff_Policy_Name(T enum_t_value) {
  static_assert(::std::is_same<T, JobStatusDumpProto_JobInfo_Backoff_Policy>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function JobStatusDumpProto_JobInfo_Backoff_Policy_Name.");
  return JobStatusDumpProto_JobInfo_Backoff_Policy_Name(static_cast<JobStatusDumpProto_JobInfo_Backoff_Policy>(enum_t_value));
}
bool JobStatusDumpProto_JobInfo_Backoff_Policy_Parse(
    const std::string& name, JobStatusDumpProto_JobInfo_Backoff_Policy* value);
enum JobStatusDumpProto_TrackingController : int {
  JobStatusDumpProto_TrackingController_TRACKING_BATTERY = 0,
  JobStatusDumpProto_TrackingController_TRACKING_CONNECTIVITY = 1,
  JobStatusDumpProto_TrackingController_TRACKING_CONTENT = 2,
  JobStatusDumpProto_TrackingController_TRACKING_IDLE = 3,
  JobStatusDumpProto_TrackingController_TRACKING_STORAGE = 4,
  JobStatusDumpProto_TrackingController_TRACKING_TIME = 5,
  JobStatusDumpProto_TrackingController_TRACKING_QUOTA = 6
};
bool JobStatusDumpProto_TrackingController_IsValid(int value);
constexpr JobStatusDumpProto_TrackingController JobStatusDumpProto_TrackingController_TrackingController_MIN = JobStatusDumpProto_TrackingController_TRACKING_BATTERY;
constexpr JobStatusDumpProto_TrackingController JobStatusDumpProto_TrackingController_TrackingController_MAX = JobStatusDumpProto_TrackingController_TRACKING_QUOTA;
constexpr int JobStatusDumpProto_TrackingController_TrackingController_ARRAYSIZE = JobStatusDumpProto_TrackingController_TrackingController_MAX + 1;

const std::string& JobStatusDumpProto_TrackingController_Name(JobStatusDumpProto_TrackingController value);
template<typename T>
inline const std::string& JobStatusDumpProto_TrackingController_Name(T enum_t_value) {
  static_assert(::std::is_same<T, JobStatusDumpProto_TrackingController>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function JobStatusDumpProto_TrackingController_Name.");
  return JobStatusDumpProto_TrackingController_Name(static_cast<JobStatusDumpProto_TrackingController>(enum_t_value));
}
bool JobStatusDumpProto_TrackingController_Parse(
    const std::string& name, JobStatusDumpProto_TrackingController* value);
enum JobStatusDumpProto_Bucket : int {
  JobStatusDumpProto_Bucket_ACTIVE = 0,
  JobStatusDumpProto_Bucket_WORKING_SET = 1,
  JobStatusDumpProto_Bucket_FREQUENT = 2,
  JobStatusDumpProto_Bucket_RARE = 3,
  JobStatusDumpProto_Bucket_NEVER = 4,
  JobStatusDumpProto_Bucket_RESTRICTED = 5
};
bool JobStatusDumpProto_Bucket_IsValid(int value);
constexpr JobStatusDumpProto_Bucket JobStatusDumpProto_Bucket_Bucket_MIN = JobStatusDumpProto_Bucket_ACTIVE;
constexpr JobStatusDumpProto_Bucket JobStatusDumpProto_Bucket_Bucket_MAX = JobStatusDumpProto_Bucket_RESTRICTED;
constexpr int JobStatusDumpProto_Bucket_Bucket_ARRAYSIZE = JobStatusDumpProto_Bucket_Bucket_MAX + 1;

const std::string& JobStatusDumpProto_Bucket_Name(JobStatusDumpProto_Bucket value);
template<typename T>
inline const std::string& JobStatusDumpProto_Bucket_Name(T enum_t_value) {
  static_assert(::std::is_same<T, JobStatusDumpProto_Bucket>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function JobStatusDumpProto_Bucket_Name.");
  return JobStatusDumpProto_Bucket_Name(static_cast<JobStatusDumpProto_Bucket>(enum_t_value));
}
bool JobStatusDumpProto_Bucket_Parse(
    const std::string& name, JobStatusDumpProto_Bucket* value);
// ===================================================================

class JobSchedulerServiceDumpProto_JobRestriction :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobSchedulerServiceDumpProto.JobRestriction) */ {
 public:
  JobSchedulerServiceDumpProto_JobRestriction();
  virtual ~JobSchedulerServiceDumpProto_JobRestriction();

  JobSchedulerServiceDumpProto_JobRestriction(const JobSchedulerServiceDumpProto_JobRestriction& from);
  JobSchedulerServiceDumpProto_JobRestriction(JobSchedulerServiceDumpProto_JobRestriction&& from) noexcept
    : JobSchedulerServiceDumpProto_JobRestriction() {
    *this = ::std::move(from);
  }

  inline JobSchedulerServiceDumpProto_JobRestriction& operator=(const JobSchedulerServiceDumpProto_JobRestriction& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobSchedulerServiceDumpProto_JobRestriction& operator=(JobSchedulerServiceDumpProto_JobRestriction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobSchedulerServiceDumpProto_JobRestriction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobSchedulerServiceDumpProto_JobRestriction* internal_default_instance() {
    return reinterpret_cast<const JobSchedulerServiceDumpProto_JobRestriction*>(
               &_JobSchedulerServiceDumpProto_JobRestriction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(JobSchedulerServiceDumpProto_JobRestriction& a, JobSchedulerServiceDumpProto_JobRestriction& b) {
    a.Swap(&b);
  }
  inline void Swap(JobSchedulerServiceDumpProto_JobRestriction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobSchedulerServiceDumpProto_JobRestriction* New() const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto_JobRestriction>(nullptr);
  }

  JobSchedulerServiceDumpProto_JobRestriction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto_JobRestriction>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobSchedulerServiceDumpProto_JobRestriction& from);
  void MergeFrom(const JobSchedulerServiceDumpProto_JobRestriction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobSchedulerServiceDumpProto_JobRestriction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobSchedulerServiceDumpProto.JobRestriction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsRestrictingFieldNumber = 2,
    kReasonFieldNumber = 1,
  };
  // optional bool is_restricting = 2;
  bool has_is_restricting() const;
  void clear_is_restricting();
  bool is_restricting() const;
  void set_is_restricting(bool value);

  // optional .android.app.job.InternalStopReasonEnum reason = 1;
  bool has_reason() const;
  void clear_reason();
  ::android::app::job::InternalStopReasonEnum reason() const;
  void set_reason(::android::app::job::InternalStopReasonEnum value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobSchedulerServiceDumpProto.JobRestriction)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool is_restricting_;
  int reason_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobSchedulerServiceDumpProto_RegisteredJob :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob) */ {
 public:
  JobSchedulerServiceDumpProto_RegisteredJob();
  virtual ~JobSchedulerServiceDumpProto_RegisteredJob();

  JobSchedulerServiceDumpProto_RegisteredJob(const JobSchedulerServiceDumpProto_RegisteredJob& from);
  JobSchedulerServiceDumpProto_RegisteredJob(JobSchedulerServiceDumpProto_RegisteredJob&& from) noexcept
    : JobSchedulerServiceDumpProto_RegisteredJob() {
    *this = ::std::move(from);
  }

  inline JobSchedulerServiceDumpProto_RegisteredJob& operator=(const JobSchedulerServiceDumpProto_RegisteredJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobSchedulerServiceDumpProto_RegisteredJob& operator=(JobSchedulerServiceDumpProto_RegisteredJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobSchedulerServiceDumpProto_RegisteredJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobSchedulerServiceDumpProto_RegisteredJob* internal_default_instance() {
    return reinterpret_cast<const JobSchedulerServiceDumpProto_RegisteredJob*>(
               &_JobSchedulerServiceDumpProto_RegisteredJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(JobSchedulerServiceDumpProto_RegisteredJob& a, JobSchedulerServiceDumpProto_RegisteredJob& b) {
    a.Swap(&b);
  }
  inline void Swap(JobSchedulerServiceDumpProto_RegisteredJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobSchedulerServiceDumpProto_RegisteredJob* New() const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto_RegisteredJob>(nullptr);
  }

  JobSchedulerServiceDumpProto_RegisteredJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto_RegisteredJob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobSchedulerServiceDumpProto_RegisteredJob& from);
  void MergeFrom(const JobSchedulerServiceDumpProto_RegisteredJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobSchedulerServiceDumpProto_RegisteredJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRestrictionsFieldNumber = 12,
    kInfoFieldNumber = 1,
    kDumpFieldNumber = 2,
    kIsJobPendingFieldNumber = 5,
    kIsJobCurrentlyActiveFieldNumber = 6,
    kIsUidBackingUpFieldNumber = 7,
    kIsComponentUsableFieldNumber = 8,
    kIsJobReadyToBeExecutedFieldNumber = 10,
    kIsJobReadyFieldNumber = 3,
    kAreUsersStartedFieldNumber = 4,
    kIsJobRestrictedFieldNumber = 11,
  };
  // repeated .com.android.server.job.JobSchedulerServiceDumpProto.JobRestriction restrictions = 12;
  int restrictions_size() const;
  void clear_restrictions();
  ::com::android::server::job::JobSchedulerServiceDumpProto_JobRestriction* mutable_restrictions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_JobRestriction >*
      mutable_restrictions();
  const ::com::android::server::job::JobSchedulerServiceDumpProto_JobRestriction& restrictions(int index) const;
  ::com::android::server::job::JobSchedulerServiceDumpProto_JobRestriction* add_restrictions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_JobRestriction >&
      restrictions() const;

  // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
  bool has_info() const;
  void clear_info();
  const ::com::android::server::job::JobStatusShortInfoProto& info() const;
  ::com::android::server::job::JobStatusShortInfoProto* release_info();
  ::com::android::server::job::JobStatusShortInfoProto* mutable_info();
  void set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info);

  // optional .com.android.server.job.JobStatusDumpProto dump = 2;
  bool has_dump() const;
  void clear_dump();
  const ::com::android::server::job::JobStatusDumpProto& dump() const;
  ::com::android::server::job::JobStatusDumpProto* release_dump();
  ::com::android::server::job::JobStatusDumpProto* mutable_dump();
  void set_allocated_dump(::com::android::server::job::JobStatusDumpProto* dump);

  // optional bool is_job_pending = 5;
  bool has_is_job_pending() const;
  void clear_is_job_pending();
  bool is_job_pending() const;
  void set_is_job_pending(bool value);

  // optional bool is_job_currently_active = 6;
  bool has_is_job_currently_active() const;
  void clear_is_job_currently_active();
  bool is_job_currently_active() const;
  void set_is_job_currently_active(bool value);

  // optional bool is_uid_backing_up = 7;
  bool has_is_uid_backing_up() const;
  void clear_is_uid_backing_up();
  bool is_uid_backing_up() const;
  void set_is_uid_backing_up(bool value);

  // optional bool is_component_usable = 8;
  bool has_is_component_usable() const;
  void clear_is_component_usable();
  bool is_component_usable() const;
  void set_is_component_usable(bool value);

  // optional bool is_job_ready_to_be_executed = 10;
  bool has_is_job_ready_to_be_executed() const;
  void clear_is_job_ready_to_be_executed();
  bool is_job_ready_to_be_executed() const;
  void set_is_job_ready_to_be_executed(bool value);

  // optional bool is_job_ready = 3;
  bool has_is_job_ready() const;
  void clear_is_job_ready();
  bool is_job_ready() const;
  void set_is_job_ready(bool value);

  // optional bool are_users_started = 4;
  bool has_are_users_started() const;
  void clear_are_users_started();
  bool are_users_started() const;
  void set_are_users_started(bool value);

  // optional bool is_job_restricted = 11;
  bool has_is_job_restricted() const;
  void clear_is_job_restricted();
  bool is_job_restricted() const;
  void set_is_job_restricted(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_JobRestriction > restrictions_;
  ::com::android::server::job::JobStatusShortInfoProto* info_;
  ::com::android::server::job::JobStatusDumpProto* dump_;
  bool is_job_pending_;
  bool is_job_currently_active_;
  bool is_uid_backing_up_;
  bool is_component_usable_;
  bool is_job_ready_to_be_executed_;
  bool is_job_ready_;
  bool are_users_started_;
  bool is_job_restricted_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobSchedulerServiceDumpProto_PriorityOverride :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobSchedulerServiceDumpProto.PriorityOverride) */ {
 public:
  JobSchedulerServiceDumpProto_PriorityOverride();
  virtual ~JobSchedulerServiceDumpProto_PriorityOverride();

  JobSchedulerServiceDumpProto_PriorityOverride(const JobSchedulerServiceDumpProto_PriorityOverride& from);
  JobSchedulerServiceDumpProto_PriorityOverride(JobSchedulerServiceDumpProto_PriorityOverride&& from) noexcept
    : JobSchedulerServiceDumpProto_PriorityOverride() {
    *this = ::std::move(from);
  }

  inline JobSchedulerServiceDumpProto_PriorityOverride& operator=(const JobSchedulerServiceDumpProto_PriorityOverride& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobSchedulerServiceDumpProto_PriorityOverride& operator=(JobSchedulerServiceDumpProto_PriorityOverride&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobSchedulerServiceDumpProto_PriorityOverride& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobSchedulerServiceDumpProto_PriorityOverride* internal_default_instance() {
    return reinterpret_cast<const JobSchedulerServiceDumpProto_PriorityOverride*>(
               &_JobSchedulerServiceDumpProto_PriorityOverride_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(JobSchedulerServiceDumpProto_PriorityOverride& a, JobSchedulerServiceDumpProto_PriorityOverride& b) {
    a.Swap(&b);
  }
  inline void Swap(JobSchedulerServiceDumpProto_PriorityOverride* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobSchedulerServiceDumpProto_PriorityOverride* New() const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto_PriorityOverride>(nullptr);
  }

  JobSchedulerServiceDumpProto_PriorityOverride* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto_PriorityOverride>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobSchedulerServiceDumpProto_PriorityOverride& from);
  void MergeFrom(const JobSchedulerServiceDumpProto_PriorityOverride& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobSchedulerServiceDumpProto_PriorityOverride* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobSchedulerServiceDumpProto.PriorityOverride";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
    kOverrideValueFieldNumber = 2,
  };
  // optional int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional sint32 override_value = 2;
  bool has_override_value() const;
  void clear_override_value();
  ::PROTOBUF_NAMESPACE_ID::int32 override_value() const;
  void set_override_value(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobSchedulerServiceDumpProto.PriorityOverride)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 override_value_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobSchedulerServiceDumpProto_PendingJob :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobSchedulerServiceDumpProto.PendingJob) */ {
 public:
  JobSchedulerServiceDumpProto_PendingJob();
  virtual ~JobSchedulerServiceDumpProto_PendingJob();

  JobSchedulerServiceDumpProto_PendingJob(const JobSchedulerServiceDumpProto_PendingJob& from);
  JobSchedulerServiceDumpProto_PendingJob(JobSchedulerServiceDumpProto_PendingJob&& from) noexcept
    : JobSchedulerServiceDumpProto_PendingJob() {
    *this = ::std::move(from);
  }

  inline JobSchedulerServiceDumpProto_PendingJob& operator=(const JobSchedulerServiceDumpProto_PendingJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobSchedulerServiceDumpProto_PendingJob& operator=(JobSchedulerServiceDumpProto_PendingJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobSchedulerServiceDumpProto_PendingJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobSchedulerServiceDumpProto_PendingJob* internal_default_instance() {
    return reinterpret_cast<const JobSchedulerServiceDumpProto_PendingJob*>(
               &_JobSchedulerServiceDumpProto_PendingJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(JobSchedulerServiceDumpProto_PendingJob& a, JobSchedulerServiceDumpProto_PendingJob& b) {
    a.Swap(&b);
  }
  inline void Swap(JobSchedulerServiceDumpProto_PendingJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobSchedulerServiceDumpProto_PendingJob* New() const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto_PendingJob>(nullptr);
  }

  JobSchedulerServiceDumpProto_PendingJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto_PendingJob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobSchedulerServiceDumpProto_PendingJob& from);
  void MergeFrom(const JobSchedulerServiceDumpProto_PendingJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobSchedulerServiceDumpProto_PendingJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobSchedulerServiceDumpProto.PendingJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
    kDumpFieldNumber = 2,
    kPendingDurationMsFieldNumber = 4,
    kEvaluatedPriorityFieldNumber = 3,
  };
  // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
  bool has_info() const;
  void clear_info();
  const ::com::android::server::job::JobStatusShortInfoProto& info() const;
  ::com::android::server::job::JobStatusShortInfoProto* release_info();
  ::com::android::server::job::JobStatusShortInfoProto* mutable_info();
  void set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info);

  // optional .com.android.server.job.JobStatusDumpProto dump = 2;
  bool has_dump() const;
  void clear_dump();
  const ::com::android::server::job::JobStatusDumpProto& dump() const;
  ::com::android::server::job::JobStatusDumpProto* release_dump();
  ::com::android::server::job::JobStatusDumpProto* mutable_dump();
  void set_allocated_dump(::com::android::server::job::JobStatusDumpProto* dump);

  // optional int64 pending_duration_ms = 4;
  bool has_pending_duration_ms() const;
  void clear_pending_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 pending_duration_ms() const;
  void set_pending_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional sint32 evaluated_priority = 3;
  bool has_evaluated_priority() const;
  void clear_evaluated_priority();
  ::PROTOBUF_NAMESPACE_ID::int32 evaluated_priority() const;
  void set_evaluated_priority(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobSchedulerServiceDumpProto.PendingJob)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::JobStatusShortInfoProto* info_;
  ::com::android::server::job::JobStatusDumpProto* dump_;
  ::PROTOBUF_NAMESPACE_ID::int64 pending_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 evaluated_priority_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobSchedulerServiceDumpProto_ActiveJob_InactiveJob :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob) */ {
 public:
  JobSchedulerServiceDumpProto_ActiveJob_InactiveJob();
  virtual ~JobSchedulerServiceDumpProto_ActiveJob_InactiveJob();

  JobSchedulerServiceDumpProto_ActiveJob_InactiveJob(const JobSchedulerServiceDumpProto_ActiveJob_InactiveJob& from);
  JobSchedulerServiceDumpProto_ActiveJob_InactiveJob(JobSchedulerServiceDumpProto_ActiveJob_InactiveJob&& from) noexcept
    : JobSchedulerServiceDumpProto_ActiveJob_InactiveJob() {
    *this = ::std::move(from);
  }

  inline JobSchedulerServiceDumpProto_ActiveJob_InactiveJob& operator=(const JobSchedulerServiceDumpProto_ActiveJob_InactiveJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobSchedulerServiceDumpProto_ActiveJob_InactiveJob& operator=(JobSchedulerServiceDumpProto_ActiveJob_InactiveJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobSchedulerServiceDumpProto_ActiveJob_InactiveJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobSchedulerServiceDumpProto_ActiveJob_InactiveJob* internal_default_instance() {
    return reinterpret_cast<const JobSchedulerServiceDumpProto_ActiveJob_InactiveJob*>(
               &_JobSchedulerServiceDumpProto_ActiveJob_InactiveJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(JobSchedulerServiceDumpProto_ActiveJob_InactiveJob& a, JobSchedulerServiceDumpProto_ActiveJob_InactiveJob& b) {
    a.Swap(&b);
  }
  inline void Swap(JobSchedulerServiceDumpProto_ActiveJob_InactiveJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobSchedulerServiceDumpProto_ActiveJob_InactiveJob* New() const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto_ActiveJob_InactiveJob>(nullptr);
  }

  JobSchedulerServiceDumpProto_ActiveJob_InactiveJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto_ActiveJob_InactiveJob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobSchedulerServiceDumpProto_ActiveJob_InactiveJob& from);
  void MergeFrom(const JobSchedulerServiceDumpProto_ActiveJob_InactiveJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobSchedulerServiceDumpProto_ActiveJob_InactiveJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStoppedReasonFieldNumber = 2,
    kTimeSinceStoppedMsFieldNumber = 1,
  };
  // optional string stopped_reason = 2;
  bool has_stopped_reason() const;
  void clear_stopped_reason();
  const std::string& stopped_reason() const;
  void set_stopped_reason(const std::string& value);
  void set_stopped_reason(std::string&& value);
  void set_stopped_reason(const char* value);
  void set_stopped_reason(const char* value, size_t size);
  std::string* mutable_stopped_reason();
  std::string* release_stopped_reason();
  void set_allocated_stopped_reason(std::string* stopped_reason);

  // optional int64 time_since_stopped_ms = 1;
  bool has_time_since_stopped_ms() const;
  void clear_time_since_stopped_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_stopped_ms() const;
  void set_time_since_stopped_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stopped_reason_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_stopped_ms_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobSchedulerServiceDumpProto_ActiveJob_RunningJob :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob) */ {
 public:
  JobSchedulerServiceDumpProto_ActiveJob_RunningJob();
  virtual ~JobSchedulerServiceDumpProto_ActiveJob_RunningJob();

  JobSchedulerServiceDumpProto_ActiveJob_RunningJob(const JobSchedulerServiceDumpProto_ActiveJob_RunningJob& from);
  JobSchedulerServiceDumpProto_ActiveJob_RunningJob(JobSchedulerServiceDumpProto_ActiveJob_RunningJob&& from) noexcept
    : JobSchedulerServiceDumpProto_ActiveJob_RunningJob() {
    *this = ::std::move(from);
  }

  inline JobSchedulerServiceDumpProto_ActiveJob_RunningJob& operator=(const JobSchedulerServiceDumpProto_ActiveJob_RunningJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobSchedulerServiceDumpProto_ActiveJob_RunningJob& operator=(JobSchedulerServiceDumpProto_ActiveJob_RunningJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobSchedulerServiceDumpProto_ActiveJob_RunningJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobSchedulerServiceDumpProto_ActiveJob_RunningJob* internal_default_instance() {
    return reinterpret_cast<const JobSchedulerServiceDumpProto_ActiveJob_RunningJob*>(
               &_JobSchedulerServiceDumpProto_ActiveJob_RunningJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(JobSchedulerServiceDumpProto_ActiveJob_RunningJob& a, JobSchedulerServiceDumpProto_ActiveJob_RunningJob& b) {
    a.Swap(&b);
  }
  inline void Swap(JobSchedulerServiceDumpProto_ActiveJob_RunningJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobSchedulerServiceDumpProto_ActiveJob_RunningJob* New() const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto_ActiveJob_RunningJob>(nullptr);
  }

  JobSchedulerServiceDumpProto_ActiveJob_RunningJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto_ActiveJob_RunningJob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobSchedulerServiceDumpProto_ActiveJob_RunningJob& from);
  void MergeFrom(const JobSchedulerServiceDumpProto_ActiveJob_RunningJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobSchedulerServiceDumpProto_ActiveJob_RunningJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
    kDumpFieldNumber = 4,
    kRunningDurationMsFieldNumber = 2,
    kTimeUntilTimeoutMsFieldNumber = 3,
    kTimeSinceMadeActiveMsFieldNumber = 6,
    kPendingDurationMsFieldNumber = 7,
    kEvaluatedPriorityFieldNumber = 5,
  };
  // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
  bool has_info() const;
  void clear_info();
  const ::com::android::server::job::JobStatusShortInfoProto& info() const;
  ::com::android::server::job::JobStatusShortInfoProto* release_info();
  ::com::android::server::job::JobStatusShortInfoProto* mutable_info();
  void set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info);

  // optional .com.android.server.job.JobStatusDumpProto dump = 4;
  bool has_dump() const;
  void clear_dump();
  const ::com::android::server::job::JobStatusDumpProto& dump() const;
  ::com::android::server::job::JobStatusDumpProto* release_dump();
  ::com::android::server::job::JobStatusDumpProto* mutable_dump();
  void set_allocated_dump(::com::android::server::job::JobStatusDumpProto* dump);

  // optional int64 running_duration_ms = 2;
  bool has_running_duration_ms() const;
  void clear_running_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 running_duration_ms() const;
  void set_running_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_until_timeout_ms = 3;
  bool has_time_until_timeout_ms() const;
  void clear_time_until_timeout_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_timeout_ms() const;
  void set_time_until_timeout_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_since_made_active_ms = 6;
  bool has_time_since_made_active_ms() const;
  void clear_time_since_made_active_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_made_active_ms() const;
  void set_time_since_made_active_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 pending_duration_ms = 7;
  bool has_pending_duration_ms() const;
  void clear_pending_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 pending_duration_ms() const;
  void set_pending_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional sint32 evaluated_priority = 5;
  bool has_evaluated_priority() const;
  void clear_evaluated_priority();
  ::PROTOBUF_NAMESPACE_ID::int32 evaluated_priority() const;
  void set_evaluated_priority(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::JobStatusShortInfoProto* info_;
  ::com::android::server::job::JobStatusDumpProto* dump_;
  ::PROTOBUF_NAMESPACE_ID::int64 running_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_timeout_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_made_active_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 pending_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 evaluated_priority_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobSchedulerServiceDumpProto_ActiveJob :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob) */ {
 public:
  JobSchedulerServiceDumpProto_ActiveJob();
  virtual ~JobSchedulerServiceDumpProto_ActiveJob();

  JobSchedulerServiceDumpProto_ActiveJob(const JobSchedulerServiceDumpProto_ActiveJob& from);
  JobSchedulerServiceDumpProto_ActiveJob(JobSchedulerServiceDumpProto_ActiveJob&& from) noexcept
    : JobSchedulerServiceDumpProto_ActiveJob() {
    *this = ::std::move(from);
  }

  inline JobSchedulerServiceDumpProto_ActiveJob& operator=(const JobSchedulerServiceDumpProto_ActiveJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobSchedulerServiceDumpProto_ActiveJob& operator=(JobSchedulerServiceDumpProto_ActiveJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobSchedulerServiceDumpProto_ActiveJob& default_instance();

  enum JobCase {
    kInactive = 1,
    kRunning = 2,
    JOB_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobSchedulerServiceDumpProto_ActiveJob* internal_default_instance() {
    return reinterpret_cast<const JobSchedulerServiceDumpProto_ActiveJob*>(
               &_JobSchedulerServiceDumpProto_ActiveJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(JobSchedulerServiceDumpProto_ActiveJob& a, JobSchedulerServiceDumpProto_ActiveJob& b) {
    a.Swap(&b);
  }
  inline void Swap(JobSchedulerServiceDumpProto_ActiveJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobSchedulerServiceDumpProto_ActiveJob* New() const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto_ActiveJob>(nullptr);
  }

  JobSchedulerServiceDumpProto_ActiveJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto_ActiveJob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobSchedulerServiceDumpProto_ActiveJob& from);
  void MergeFrom(const JobSchedulerServiceDumpProto_ActiveJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobSchedulerServiceDumpProto_ActiveJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef JobSchedulerServiceDumpProto_ActiveJob_InactiveJob InactiveJob;
  typedef JobSchedulerServiceDumpProto_ActiveJob_RunningJob RunningJob;

  // accessors -------------------------------------------------------

  enum : int {
    kInactiveFieldNumber = 1,
    kRunningFieldNumber = 2,
  };
  // optional .com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob inactive = 1;
  bool has_inactive() const;
  void clear_inactive();
  const ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_InactiveJob& inactive() const;
  ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_InactiveJob* release_inactive();
  ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_InactiveJob* mutable_inactive();
  void set_allocated_inactive(::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_InactiveJob* inactive);

  // optional .com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob running = 2;
  bool has_running() const;
  void clear_running();
  const ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_RunningJob& running() const;
  ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_RunningJob* release_running();
  ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_RunningJob* mutable_running();
  void set_allocated_running(::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_RunningJob* running);

  void clear_job();
  JobCase job_case() const;
  // @@protoc_insertion_point(class_scope:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob)
 private:
  class _Internal;
  void set_has_inactive();
  void set_has_running();

  inline bool has_job() const;
  inline void clear_has_job();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  union JobUnion {
    JobUnion() {}
    ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_InactiveJob* inactive_;
    ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_RunningJob* running_;
  } job_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobSchedulerServiceDumpProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobSchedulerServiceDumpProto) */ {
 public:
  JobSchedulerServiceDumpProto();
  virtual ~JobSchedulerServiceDumpProto();

  JobSchedulerServiceDumpProto(const JobSchedulerServiceDumpProto& from);
  JobSchedulerServiceDumpProto(JobSchedulerServiceDumpProto&& from) noexcept
    : JobSchedulerServiceDumpProto() {
    *this = ::std::move(from);
  }

  inline JobSchedulerServiceDumpProto& operator=(const JobSchedulerServiceDumpProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobSchedulerServiceDumpProto& operator=(JobSchedulerServiceDumpProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobSchedulerServiceDumpProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobSchedulerServiceDumpProto* internal_default_instance() {
    return reinterpret_cast<const JobSchedulerServiceDumpProto*>(
               &_JobSchedulerServiceDumpProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(JobSchedulerServiceDumpProto& a, JobSchedulerServiceDumpProto& b) {
    a.Swap(&b);
  }
  inline void Swap(JobSchedulerServiceDumpProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobSchedulerServiceDumpProto* New() const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto>(nullptr);
  }

  JobSchedulerServiceDumpProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobSchedulerServiceDumpProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobSchedulerServiceDumpProto& from);
  void MergeFrom(const JobSchedulerServiceDumpProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobSchedulerServiceDumpProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobSchedulerServiceDumpProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef JobSchedulerServiceDumpProto_JobRestriction JobRestriction;
  typedef JobSchedulerServiceDumpProto_RegisteredJob RegisteredJob;
  typedef JobSchedulerServiceDumpProto_PriorityOverride PriorityOverride;
  typedef JobSchedulerServiceDumpProto_PendingJob PendingJob;
  typedef JobSchedulerServiceDumpProto_ActiveJob ActiveJob;

  // accessors -------------------------------------------------------

  enum : int {
    kStartedUsersFieldNumber = 2,
    kRegisteredJobsFieldNumber = 3,
    kControllersFieldNumber = 4,
    kPriorityOverridesFieldNumber = 5,
    kBackingUpUidsFieldNumber = 6,
    kPendingJobsFieldNumber = 9,
    kActiveJobsFieldNumber = 10,
    kSettingsFieldNumber = 1,
    kHistoryFieldNumber = 7,
    kPackageTrackerFieldNumber = 8,
    kConcurrencyManagerFieldNumber = 20,
    kPersistStatsFieldNumber = 21,
    kQuotaTrackerFieldNumber = 22,
    kMaxActiveJobsFieldNumber = 13,
    kInThermalFieldNumber = 19,
    kIsReadyToRockFieldNumber = 11,
    kReportedActiveFieldNumber = 12,
  };
  // repeated int32 started_users = 2;
  int started_users_size() const;
  void clear_started_users();
  ::PROTOBUF_NAMESPACE_ID::int32 started_users(int index) const;
  void set_started_users(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_started_users(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      started_users() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_started_users();

  // repeated .com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob registered_jobs = 3;
  int registered_jobs_size() const;
  void clear_registered_jobs();
  ::com::android::server::job::JobSchedulerServiceDumpProto_RegisteredJob* mutable_registered_jobs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_RegisteredJob >*
      mutable_registered_jobs();
  const ::com::android::server::job::JobSchedulerServiceDumpProto_RegisteredJob& registered_jobs(int index) const;
  ::com::android::server::job::JobSchedulerServiceDumpProto_RegisteredJob* add_registered_jobs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_RegisteredJob >&
      registered_jobs() const;

  // repeated .com.android.server.job.StateControllerProto controllers = 4;
  int controllers_size() const;
  void clear_controllers();
  ::com::android::server::job::StateControllerProto* mutable_controllers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto >*
      mutable_controllers();
  const ::com::android::server::job::StateControllerProto& controllers(int index) const;
  ::com::android::server::job::StateControllerProto* add_controllers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto >&
      controllers() const;

  // repeated .com.android.server.job.JobSchedulerServiceDumpProto.PriorityOverride priority_overrides = 5;
  int priority_overrides_size() const;
  void clear_priority_overrides();
  ::com::android::server::job::JobSchedulerServiceDumpProto_PriorityOverride* mutable_priority_overrides(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_PriorityOverride >*
      mutable_priority_overrides();
  const ::com::android::server::job::JobSchedulerServiceDumpProto_PriorityOverride& priority_overrides(int index) const;
  ::com::android::server::job::JobSchedulerServiceDumpProto_PriorityOverride* add_priority_overrides();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_PriorityOverride >&
      priority_overrides() const;

  // repeated int32 backing_up_uids = 6;
  int backing_up_uids_size() const;
  void clear_backing_up_uids();
  ::PROTOBUF_NAMESPACE_ID::int32 backing_up_uids(int index) const;
  void set_backing_up_uids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_backing_up_uids(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      backing_up_uids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_backing_up_uids();

  // repeated .com.android.server.job.JobSchedulerServiceDumpProto.PendingJob pending_jobs = 9;
  int pending_jobs_size() const;
  void clear_pending_jobs();
  ::com::android::server::job::JobSchedulerServiceDumpProto_PendingJob* mutable_pending_jobs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_PendingJob >*
      mutable_pending_jobs();
  const ::com::android::server::job::JobSchedulerServiceDumpProto_PendingJob& pending_jobs(int index) const;
  ::com::android::server::job::JobSchedulerServiceDumpProto_PendingJob* add_pending_jobs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_PendingJob >&
      pending_jobs() const;

  // repeated .com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob active_jobs = 10;
  int active_jobs_size() const;
  void clear_active_jobs();
  ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob* mutable_active_jobs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob >*
      mutable_active_jobs();
  const ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob& active_jobs(int index) const;
  ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob* add_active_jobs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob >&
      active_jobs() const;

  // optional .com.android.server.job.ConstantsProto settings = 1;
  bool has_settings() const;
  void clear_settings();
  const ::com::android::server::job::ConstantsProto& settings() const;
  ::com::android::server::job::ConstantsProto* release_settings();
  ::com::android::server::job::ConstantsProto* mutable_settings();
  void set_allocated_settings(::com::android::server::job::ConstantsProto* settings);

  // optional .com.android.server.job.JobPackageHistoryProto history = 7;
  bool has_history() const;
  void clear_history();
  const ::com::android::server::job::JobPackageHistoryProto& history() const;
  ::com::android::server::job::JobPackageHistoryProto* release_history();
  ::com::android::server::job::JobPackageHistoryProto* mutable_history();
  void set_allocated_history(::com::android::server::job::JobPackageHistoryProto* history);

  // optional .com.android.server.job.JobPackageTrackerDumpProto package_tracker = 8;
  bool has_package_tracker() const;
  void clear_package_tracker();
  const ::com::android::server::job::JobPackageTrackerDumpProto& package_tracker() const;
  ::com::android::server::job::JobPackageTrackerDumpProto* release_package_tracker();
  ::com::android::server::job::JobPackageTrackerDumpProto* mutable_package_tracker();
  void set_allocated_package_tracker(::com::android::server::job::JobPackageTrackerDumpProto* package_tracker);

  // optional .com.android.server.job.JobConcurrencyManagerProto concurrency_manager = 20;
  bool has_concurrency_manager() const;
  void clear_concurrency_manager();
  const ::com::android::server::job::JobConcurrencyManagerProto& concurrency_manager() const;
  ::com::android::server::job::JobConcurrencyManagerProto* release_concurrency_manager();
  ::com::android::server::job::JobConcurrencyManagerProto* mutable_concurrency_manager();
  void set_allocated_concurrency_manager(::com::android::server::job::JobConcurrencyManagerProto* concurrency_manager);

  // optional .com.android.server.job.JobStorePersistStatsProto persist_stats = 21;
  bool has_persist_stats() const;
  void clear_persist_stats();
  const ::com::android::server::job::JobStorePersistStatsProto& persist_stats() const;
  ::com::android::server::job::JobStorePersistStatsProto* release_persist_stats();
  ::com::android::server::job::JobStorePersistStatsProto* mutable_persist_stats();
  void set_allocated_persist_stats(::com::android::server::job::JobStorePersistStatsProto* persist_stats);

  // optional .android.util.quota.CountQuotaTrackerProto quota_tracker = 22;
  bool has_quota_tracker() const;
  void clear_quota_tracker();
  const ::android::util::quota::CountQuotaTrackerProto& quota_tracker() const;
  ::android::util::quota::CountQuotaTrackerProto* release_quota_tracker();
  ::android::util::quota::CountQuotaTrackerProto* mutable_quota_tracker();
  void set_allocated_quota_tracker(::android::util::quota::CountQuotaTrackerProto* quota_tracker);

  // optional int32 max_active_jobs = 13;
  bool has_max_active_jobs() const;
  void clear_max_active_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 max_active_jobs() const;
  void set_max_active_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool in_thermal = 19;
  bool has_in_thermal() const;
  void clear_in_thermal();
  bool in_thermal() const;
  void set_in_thermal(bool value);

  // optional bool is_ready_to_rock = 11;
  bool has_is_ready_to_rock() const;
  void clear_is_ready_to_rock();
  bool is_ready_to_rock() const;
  void set_is_ready_to_rock(bool value);

  // optional bool reported_active = 12;
  bool has_reported_active() const;
  void clear_reported_active();
  bool reported_active() const;
  void set_reported_active(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobSchedulerServiceDumpProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > started_users_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_RegisteredJob > registered_jobs_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto > controllers_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_PriorityOverride > priority_overrides_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > backing_up_uids_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_PendingJob > pending_jobs_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob > active_jobs_;
  ::com::android::server::job::ConstantsProto* settings_;
  ::com::android::server::job::JobPackageHistoryProto* history_;
  ::com::android::server::job::JobPackageTrackerDumpProto* package_tracker_;
  ::com::android::server::job::JobConcurrencyManagerProto* concurrency_manager_;
  ::com::android::server::job::JobStorePersistStatsProto* persist_stats_;
  ::android::util::quota::CountQuotaTrackerProto* quota_tracker_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_active_jobs_;
  bool in_thermal_;
  bool is_ready_to_rock_;
  bool reported_active_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class ConstantsProto_QuotaController :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.ConstantsProto.QuotaController) */ {
 public:
  ConstantsProto_QuotaController();
  virtual ~ConstantsProto_QuotaController();

  ConstantsProto_QuotaController(const ConstantsProto_QuotaController& from);
  ConstantsProto_QuotaController(ConstantsProto_QuotaController&& from) noexcept
    : ConstantsProto_QuotaController() {
    *this = ::std::move(from);
  }

  inline ConstantsProto_QuotaController& operator=(const ConstantsProto_QuotaController& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConstantsProto_QuotaController& operator=(ConstantsProto_QuotaController&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ConstantsProto_QuotaController& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConstantsProto_QuotaController* internal_default_instance() {
    return reinterpret_cast<const ConstantsProto_QuotaController*>(
               &_ConstantsProto_QuotaController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ConstantsProto_QuotaController& a, ConstantsProto_QuotaController& b) {
    a.Swap(&b);
  }
  inline void Swap(ConstantsProto_QuotaController* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConstantsProto_QuotaController* New() const final {
    return CreateMaybeMessage<ConstantsProto_QuotaController>(nullptr);
  }

  ConstantsProto_QuotaController* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConstantsProto_QuotaController>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ConstantsProto_QuotaController& from);
  void MergeFrom(const ConstantsProto_QuotaController& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConstantsProto_QuotaController* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.ConstantsProto.QuotaController";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAllowedTimePerPeriodMsFieldNumber = 1,
    kInQuotaBufferMsFieldNumber = 2,
    kActiveWindowSizeMsFieldNumber = 3,
    kWorkingWindowSizeMsFieldNumber = 4,
    kFrequentWindowSizeMsFieldNumber = 5,
    kRareWindowSizeMsFieldNumber = 6,
    kMaxExecutionTimeMsFieldNumber = 7,
    kMaxJobCountActiveFieldNumber = 8,
    kMaxJobCountWorkingFieldNumber = 9,
    kMaxJobCountFrequentFieldNumber = 10,
    kMaxJobCountRareFieldNumber = 11,
    kMaxJobCountPerRateLimitingWindowFieldNumber = 12,
    kMaxSessionCountActiveFieldNumber = 13,
    kMaxSessionCountWorkingFieldNumber = 14,
    kMaxSessionCountFrequentFieldNumber = 15,
    kMaxSessionCountRareFieldNumber = 16,
    kMaxSessionCountPerRateLimitingWindowFieldNumber = 17,
    kTimingSessionCoalescingDurationMsFieldNumber = 18,
    kRestrictedWindowSizeMsFieldNumber = 20,
    kRateLimitingWindowMsFieldNumber = 19,
    kMaxJobCountRestrictedFieldNumber = 21,
    kMinQuotaCheckDelayMsFieldNumber = 23,
    kExpeditedJobLimitActiveMsFieldNumber = 24,
    kExpeditedJobLimitWorkingMsFieldNumber = 25,
    kExpeditedJobLimitFrequentMsFieldNumber = 26,
    kExpeditedJobLimitRareMsFieldNumber = 27,
    kExpeditedJobLimitRestrictedMsFieldNumber = 28,
    kExpeditedJobWindowSizeMsFieldNumber = 29,
    kExpeditedJobTopAppTimeChunkSizeMsFieldNumber = 30,
    kExpeditedJobRewardTopAppMsFieldNumber = 31,
    kExpeditedJobRewardInteractionMsFieldNumber = 32,
    kExpeditedJobRewardNotificationSeenMsFieldNumber = 33,
    kMaxSessionCountRestrictedFieldNumber = 22,
  };
  // optional int64 allowed_time_per_period_ms = 1;
  bool has_allowed_time_per_period_ms() const;
  void clear_allowed_time_per_period_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 allowed_time_per_period_ms() const;
  void set_allowed_time_per_period_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 in_quota_buffer_ms = 2;
  bool has_in_quota_buffer_ms() const;
  void clear_in_quota_buffer_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 in_quota_buffer_ms() const;
  void set_in_quota_buffer_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 active_window_size_ms = 3;
  bool has_active_window_size_ms() const;
  void clear_active_window_size_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 active_window_size_ms() const;
  void set_active_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 working_window_size_ms = 4;
  bool has_working_window_size_ms() const;
  void clear_working_window_size_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 working_window_size_ms() const;
  void set_working_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 frequent_window_size_ms = 5;
  bool has_frequent_window_size_ms() const;
  void clear_frequent_window_size_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 frequent_window_size_ms() const;
  void set_frequent_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 rare_window_size_ms = 6;
  bool has_rare_window_size_ms() const;
  void clear_rare_window_size_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 rare_window_size_ms() const;
  void set_rare_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 max_execution_time_ms = 7;
  bool has_max_execution_time_ms() const;
  void clear_max_execution_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 max_execution_time_ms() const;
  void set_max_execution_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 max_job_count_active = 8;
  bool has_max_job_count_active() const;
  void clear_max_job_count_active();
  ::PROTOBUF_NAMESPACE_ID::int32 max_job_count_active() const;
  void set_max_job_count_active(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_job_count_working = 9;
  bool has_max_job_count_working() const;
  void clear_max_job_count_working();
  ::PROTOBUF_NAMESPACE_ID::int32 max_job_count_working() const;
  void set_max_job_count_working(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_job_count_frequent = 10;
  bool has_max_job_count_frequent() const;
  void clear_max_job_count_frequent();
  ::PROTOBUF_NAMESPACE_ID::int32 max_job_count_frequent() const;
  void set_max_job_count_frequent(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_job_count_rare = 11;
  bool has_max_job_count_rare() const;
  void clear_max_job_count_rare();
  ::PROTOBUF_NAMESPACE_ID::int32 max_job_count_rare() const;
  void set_max_job_count_rare(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_job_count_per_rate_limiting_window = 12;
  bool has_max_job_count_per_rate_limiting_window() const;
  void clear_max_job_count_per_rate_limiting_window();
  ::PROTOBUF_NAMESPACE_ID::int32 max_job_count_per_rate_limiting_window() const;
  void set_max_job_count_per_rate_limiting_window(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_session_count_active = 13;
  bool has_max_session_count_active() const;
  void clear_max_session_count_active();
  ::PROTOBUF_NAMESPACE_ID::int32 max_session_count_active() const;
  void set_max_session_count_active(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_session_count_working = 14;
  bool has_max_session_count_working() const;
  void clear_max_session_count_working();
  ::PROTOBUF_NAMESPACE_ID::int32 max_session_count_working() const;
  void set_max_session_count_working(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_session_count_frequent = 15;
  bool has_max_session_count_frequent() const;
  void clear_max_session_count_frequent();
  ::PROTOBUF_NAMESPACE_ID::int32 max_session_count_frequent() const;
  void set_max_session_count_frequent(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_session_count_rare = 16;
  bool has_max_session_count_rare() const;
  void clear_max_session_count_rare();
  ::PROTOBUF_NAMESPACE_ID::int32 max_session_count_rare() const;
  void set_max_session_count_rare(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_session_count_per_rate_limiting_window = 17;
  bool has_max_session_count_per_rate_limiting_window() const;
  void clear_max_session_count_per_rate_limiting_window();
  ::PROTOBUF_NAMESPACE_ID::int32 max_session_count_per_rate_limiting_window() const;
  void set_max_session_count_per_rate_limiting_window(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 timing_session_coalescing_duration_ms = 18;
  bool has_timing_session_coalescing_duration_ms() const;
  void clear_timing_session_coalescing_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 timing_session_coalescing_duration_ms() const;
  void set_timing_session_coalescing_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 restricted_window_size_ms = 20;
  bool has_restricted_window_size_ms() const;
  void clear_restricted_window_size_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 restricted_window_size_ms() const;
  void set_restricted_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 rate_limiting_window_ms = 19;
  bool has_rate_limiting_window_ms() const;
  void clear_rate_limiting_window_ms();
  ::PROTOBUF_NAMESPACE_ID::int32 rate_limiting_window_ms() const;
  void set_rate_limiting_window_ms(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_job_count_restricted = 21;
  bool has_max_job_count_restricted() const;
  void clear_max_job_count_restricted();
  ::PROTOBUF_NAMESPACE_ID::int32 max_job_count_restricted() const;
  void set_max_job_count_restricted(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 min_quota_check_delay_ms = 23;
  bool has_min_quota_check_delay_ms() const;
  void clear_min_quota_check_delay_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 min_quota_check_delay_ms() const;
  void set_min_quota_check_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 expedited_job_limit_active_ms = 24;
  bool has_expedited_job_limit_active_ms() const;
  void clear_expedited_job_limit_active_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_limit_active_ms() const;
  void set_expedited_job_limit_active_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 expedited_job_limit_working_ms = 25;
  bool has_expedited_job_limit_working_ms() const;
  void clear_expedited_job_limit_working_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_limit_working_ms() const;
  void set_expedited_job_limit_working_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 expedited_job_limit_frequent_ms = 26;
  bool has_expedited_job_limit_frequent_ms() const;
  void clear_expedited_job_limit_frequent_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_limit_frequent_ms() const;
  void set_expedited_job_limit_frequent_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 expedited_job_limit_rare_ms = 27;
  bool has_expedited_job_limit_rare_ms() const;
  void clear_expedited_job_limit_rare_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_limit_rare_ms() const;
  void set_expedited_job_limit_rare_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 expedited_job_limit_restricted_ms = 28;
  bool has_expedited_job_limit_restricted_ms() const;
  void clear_expedited_job_limit_restricted_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_limit_restricted_ms() const;
  void set_expedited_job_limit_restricted_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 expedited_job_window_size_ms = 29;
  bool has_expedited_job_window_size_ms() const;
  void clear_expedited_job_window_size_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_window_size_ms() const;
  void set_expedited_job_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 expedited_job_top_app_time_chunk_size_ms = 30;
  bool has_expedited_job_top_app_time_chunk_size_ms() const;
  void clear_expedited_job_top_app_time_chunk_size_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_top_app_time_chunk_size_ms() const;
  void set_expedited_job_top_app_time_chunk_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 expedited_job_reward_top_app_ms = 31;
  bool has_expedited_job_reward_top_app_ms() const;
  void clear_expedited_job_reward_top_app_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_reward_top_app_ms() const;
  void set_expedited_job_reward_top_app_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 expedited_job_reward_interaction_ms = 32;
  bool has_expedited_job_reward_interaction_ms() const;
  void clear_expedited_job_reward_interaction_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_reward_interaction_ms() const;
  void set_expedited_job_reward_interaction_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 expedited_job_reward_notification_seen_ms = 33;
  bool has_expedited_job_reward_notification_seen_ms() const;
  void clear_expedited_job_reward_notification_seen_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_reward_notification_seen_ms() const;
  void set_expedited_job_reward_notification_seen_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 max_session_count_restricted = 22;
  bool has_max_session_count_restricted() const;
  void clear_max_session_count_restricted();
  ::PROTOBUF_NAMESPACE_ID::int32 max_session_count_restricted() const;
  void set_max_session_count_restricted(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.ConstantsProto.QuotaController)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<2> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 allowed_time_per_period_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 in_quota_buffer_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 active_window_size_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 working_window_size_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 frequent_window_size_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 rare_window_size_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_execution_time_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_job_count_active_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_job_count_working_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_job_count_frequent_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_job_count_rare_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_job_count_per_rate_limiting_window_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_session_count_active_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_session_count_working_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_session_count_frequent_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_session_count_rare_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_session_count_per_rate_limiting_window_;
  ::PROTOBUF_NAMESPACE_ID::int64 timing_session_coalescing_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 restricted_window_size_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 rate_limiting_window_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_job_count_restricted_;
  ::PROTOBUF_NAMESPACE_ID::int64 min_quota_check_delay_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_limit_active_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_limit_working_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_limit_frequent_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_limit_rare_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_limit_restricted_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_window_size_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_top_app_time_chunk_size_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_reward_top_app_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_reward_interaction_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 expedited_job_reward_notification_seen_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_session_count_restricted_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class ConstantsProto_TimeController :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.ConstantsProto.TimeController) */ {
 public:
  ConstantsProto_TimeController();
  virtual ~ConstantsProto_TimeController();

  ConstantsProto_TimeController(const ConstantsProto_TimeController& from);
  ConstantsProto_TimeController(ConstantsProto_TimeController&& from) noexcept
    : ConstantsProto_TimeController() {
    *this = ::std::move(from);
  }

  inline ConstantsProto_TimeController& operator=(const ConstantsProto_TimeController& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConstantsProto_TimeController& operator=(ConstantsProto_TimeController&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ConstantsProto_TimeController& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConstantsProto_TimeController* internal_default_instance() {
    return reinterpret_cast<const ConstantsProto_TimeController*>(
               &_ConstantsProto_TimeController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ConstantsProto_TimeController& a, ConstantsProto_TimeController& b) {
    a.Swap(&b);
  }
  inline void Swap(ConstantsProto_TimeController* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConstantsProto_TimeController* New() const final {
    return CreateMaybeMessage<ConstantsProto_TimeController>(nullptr);
  }

  ConstantsProto_TimeController* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConstantsProto_TimeController>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ConstantsProto_TimeController& from);
  void MergeFrom(const ConstantsProto_TimeController& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConstantsProto_TimeController* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.ConstantsProto.TimeController";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.android.server.job.ConstantsProto.TimeController)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class ConstantsProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.ConstantsProto) */ {
 public:
  ConstantsProto();
  virtual ~ConstantsProto();

  ConstantsProto(const ConstantsProto& from);
  ConstantsProto(ConstantsProto&& from) noexcept
    : ConstantsProto() {
    *this = ::std::move(from);
  }

  inline ConstantsProto& operator=(const ConstantsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConstantsProto& operator=(ConstantsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ConstantsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConstantsProto* internal_default_instance() {
    return reinterpret_cast<const ConstantsProto*>(
               &_ConstantsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ConstantsProto& a, ConstantsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ConstantsProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConstantsProto* New() const final {
    return CreateMaybeMessage<ConstantsProto>(nullptr);
  }

  ConstantsProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConstantsProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ConstantsProto& from);
  void MergeFrom(const ConstantsProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConstantsProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.ConstantsProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef ConstantsProto_QuotaController QuotaController;
  typedef ConstantsProto_TimeController TimeController;

  // accessors -------------------------------------------------------

  enum : int {
    kQuotaControllerFieldNumber = 24,
    kTimeControllerFieldNumber = 25,
    kMaxJobCountsScreenOnFieldNumber = 26,
    kMaxJobCountsScreenOffFieldNumber = 27,
    kHeavyUseFactorFieldNumber = 8,
    kModerateUseFactorFieldNumber = 9,
    kFgJobCountFieldNumber = 10,
    kBgNormalJobCountFieldNumber = 11,
    kBgModerateJobCountFieldNumber = 12,
    kBgLowJobCountFieldNumber = 13,
    kMinLinearBackoffTimeMsFieldNumber = 17,
    kMinExpBackoffTimeMsFieldNumber = 18,
    kConnCongestionDelayFracFieldNumber = 21,
    kBgCriticalJobCountFieldNumber = 14,
    kScreenOffJobConcurrencyIncreaseDelayMsFieldNumber = 28,
    kConnPrefetchRelaxFracFieldNumber = 22,
    kEnableApiQuotasFieldNumber = 31,
    kApiQuotaScheduleThrowExceptionFieldNumber = 34,
    kApiQuotaScheduleReturnFailureResultFieldNumber = 35,
    kMaxNonActiveJobBatchDelayMsFieldNumber = 30,
    kMinReadyNonActiveJobsCountFieldNumber = 29,
    kApiQuotaScheduleCountFieldNumber = 32,
    kApiQuotaScheduleWindowMsFieldNumber = 33,
  };
  // optional .com.android.server.job.ConstantsProto.QuotaController quota_controller = 24;
  bool has_quota_controller() const;
  void clear_quota_controller();
  const ::com::android::server::job::ConstantsProto_QuotaController& quota_controller() const;
  ::com::android::server::job::ConstantsProto_QuotaController* release_quota_controller();
  ::com::android::server::job::ConstantsProto_QuotaController* mutable_quota_controller();
  void set_allocated_quota_controller(::com::android::server::job::ConstantsProto_QuotaController* quota_controller);

  // optional .com.android.server.job.ConstantsProto.TimeController time_controller = 25;
  bool has_time_controller() const;
  void clear_time_controller();
  const ::com::android::server::job::ConstantsProto_TimeController& time_controller() const;
  ::com::android::server::job::ConstantsProto_TimeController* release_time_controller();
  ::com::android::server::job::ConstantsProto_TimeController* mutable_time_controller();
  void set_allocated_time_controller(::com::android::server::job::ConstantsProto_TimeController* time_controller);

  // optional .com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto max_job_counts_screen_on = 26;
  bool has_max_job_counts_screen_on() const;
  void clear_max_job_counts_screen_on();
  const ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto& max_job_counts_screen_on() const;
  ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* release_max_job_counts_screen_on();
  ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* mutable_max_job_counts_screen_on();
  void set_allocated_max_job_counts_screen_on(::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* max_job_counts_screen_on);

  // optional .com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto max_job_counts_screen_off = 27;
  bool has_max_job_counts_screen_off() const;
  void clear_max_job_counts_screen_off();
  const ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto& max_job_counts_screen_off() const;
  ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* release_max_job_counts_screen_off();
  ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* mutable_max_job_counts_screen_off();
  void set_allocated_max_job_counts_screen_off(::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* max_job_counts_screen_off);

  // optional double heavy_use_factor = 8;
  bool has_heavy_use_factor() const;
  void clear_heavy_use_factor();
  double heavy_use_factor() const;
  void set_heavy_use_factor(double value);

  // optional double moderate_use_factor = 9;
  bool has_moderate_use_factor() const;
  void clear_moderate_use_factor();
  double moderate_use_factor() const;
  void set_moderate_use_factor(double value);

  // optional int32 fg_job_count = 10;
  bool has_fg_job_count() const;
  void clear_fg_job_count();
  ::PROTOBUF_NAMESPACE_ID::int32 fg_job_count() const;
  void set_fg_job_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 bg_normal_job_count = 11;
  bool has_bg_normal_job_count() const;
  void clear_bg_normal_job_count();
  ::PROTOBUF_NAMESPACE_ID::int32 bg_normal_job_count() const;
  void set_bg_normal_job_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 bg_moderate_job_count = 12;
  bool has_bg_moderate_job_count() const;
  void clear_bg_moderate_job_count();
  ::PROTOBUF_NAMESPACE_ID::int32 bg_moderate_job_count() const;
  void set_bg_moderate_job_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 bg_low_job_count = 13;
  bool has_bg_low_job_count() const;
  void clear_bg_low_job_count();
  ::PROTOBUF_NAMESPACE_ID::int32 bg_low_job_count() const;
  void set_bg_low_job_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 min_linear_backoff_time_ms = 17;
  bool has_min_linear_backoff_time_ms() const;
  void clear_min_linear_backoff_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 min_linear_backoff_time_ms() const;
  void set_min_linear_backoff_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 min_exp_backoff_time_ms = 18;
  bool has_min_exp_backoff_time_ms() const;
  void clear_min_exp_backoff_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 min_exp_backoff_time_ms() const;
  void set_min_exp_backoff_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional double conn_congestion_delay_frac = 21;
  bool has_conn_congestion_delay_frac() const;
  void clear_conn_congestion_delay_frac();
  double conn_congestion_delay_frac() const;
  void set_conn_congestion_delay_frac(double value);

  // optional int32 bg_critical_job_count = 14;
  bool has_bg_critical_job_count() const;
  void clear_bg_critical_job_count();
  ::PROTOBUF_NAMESPACE_ID::int32 bg_critical_job_count() const;
  void set_bg_critical_job_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 screen_off_job_concurrency_increase_delay_ms = 28;
  bool has_screen_off_job_concurrency_increase_delay_ms() const;
  void clear_screen_off_job_concurrency_increase_delay_ms();
  ::PROTOBUF_NAMESPACE_ID::int32 screen_off_job_concurrency_increase_delay_ms() const;
  void set_screen_off_job_concurrency_increase_delay_ms(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional double conn_prefetch_relax_frac = 22;
  bool has_conn_prefetch_relax_frac() const;
  void clear_conn_prefetch_relax_frac();
  double conn_prefetch_relax_frac() const;
  void set_conn_prefetch_relax_frac(double value);

  // optional bool enable_api_quotas = 31;
  bool has_enable_api_quotas() const;
  void clear_enable_api_quotas();
  bool enable_api_quotas() const;
  void set_enable_api_quotas(bool value);

  // optional bool api_quota_schedule_throw_exception = 34;
  bool has_api_quota_schedule_throw_exception() const;
  void clear_api_quota_schedule_throw_exception();
  bool api_quota_schedule_throw_exception() const;
  void set_api_quota_schedule_throw_exception(bool value);

  // optional bool api_quota_schedule_return_failure_result = 35;
  bool has_api_quota_schedule_return_failure_result() const;
  void clear_api_quota_schedule_return_failure_result();
  bool api_quota_schedule_return_failure_result() const;
  void set_api_quota_schedule_return_failure_result(bool value);

  // optional int64 max_non_active_job_batch_delay_ms = 30;
  bool has_max_non_active_job_batch_delay_ms() const;
  void clear_max_non_active_job_batch_delay_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 max_non_active_job_batch_delay_ms() const;
  void set_max_non_active_job_batch_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 min_ready_non_active_jobs_count = 29;
  bool has_min_ready_non_active_jobs_count() const;
  void clear_min_ready_non_active_jobs_count();
  ::PROTOBUF_NAMESPACE_ID::int32 min_ready_non_active_jobs_count() const;
  void set_min_ready_non_active_jobs_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 api_quota_schedule_count = 32;
  bool has_api_quota_schedule_count() const;
  void clear_api_quota_schedule_count();
  ::PROTOBUF_NAMESPACE_ID::int32 api_quota_schedule_count() const;
  void set_api_quota_schedule_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 api_quota_schedule_window_ms = 33;
  bool has_api_quota_schedule_window_ms() const;
  void clear_api_quota_schedule_window_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 api_quota_schedule_window_ms() const;
  void set_api_quota_schedule_window_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.ConstantsProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::ConstantsProto_QuotaController* quota_controller_;
  ::com::android::server::job::ConstantsProto_TimeController* time_controller_;
  ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* max_job_counts_screen_on_;
  ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* max_job_counts_screen_off_;
  double heavy_use_factor_;
  double moderate_use_factor_;
  ::PROTOBUF_NAMESPACE_ID::int32 fg_job_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 bg_normal_job_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 bg_moderate_job_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 bg_low_job_count_;
  ::PROTOBUF_NAMESPACE_ID::int64 min_linear_backoff_time_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 min_exp_backoff_time_ms_;
  double conn_congestion_delay_frac_;
  ::PROTOBUF_NAMESPACE_ID::int32 bg_critical_job_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 screen_off_job_concurrency_increase_delay_ms_;
  double conn_prefetch_relax_frac_;
  bool enable_api_quotas_;
  bool api_quota_schedule_throw_exception_;
  bool api_quota_schedule_return_failure_result_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_non_active_job_batch_delay_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 min_ready_non_active_jobs_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 api_quota_schedule_count_;
  ::PROTOBUF_NAMESPACE_ID::int64 api_quota_schedule_window_ms_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class MaxJobCountsProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.MaxJobCountsProto) */ {
 public:
  MaxJobCountsProto();
  virtual ~MaxJobCountsProto();

  MaxJobCountsProto(const MaxJobCountsProto& from);
  MaxJobCountsProto(MaxJobCountsProto&& from) noexcept
    : MaxJobCountsProto() {
    *this = ::std::move(from);
  }

  inline MaxJobCountsProto& operator=(const MaxJobCountsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline MaxJobCountsProto& operator=(MaxJobCountsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MaxJobCountsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MaxJobCountsProto* internal_default_instance() {
    return reinterpret_cast<const MaxJobCountsProto*>(
               &_MaxJobCountsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MaxJobCountsProto& a, MaxJobCountsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(MaxJobCountsProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MaxJobCountsProto* New() const final {
    return CreateMaybeMessage<MaxJobCountsProto>(nullptr);
  }

  MaxJobCountsProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MaxJobCountsProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const MaxJobCountsProto& from);
  void MergeFrom(const MaxJobCountsProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MaxJobCountsProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.MaxJobCountsProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTotalJobsFieldNumber = 1,
    kMaxBgFieldNumber = 2,
    kMinBgFieldNumber = 3,
  };
  // optional int32 total_jobs = 1;
  bool has_total_jobs() const;
  void clear_total_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 total_jobs() const;
  void set_total_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_bg = 2;
  bool has_max_bg() const;
  void clear_max_bg();
  ::PROTOBUF_NAMESPACE_ID::int32 max_bg() const;
  void set_max_bg(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 min_bg = 3;
  bool has_min_bg() const;
  void clear_min_bg();
  ::PROTOBUF_NAMESPACE_ID::int32 min_bg() const;
  void set_min_bg(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.MaxJobCountsProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_jobs_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_bg_;
  ::PROTOBUF_NAMESPACE_ID::int32 min_bg_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class MaxJobCountsPerMemoryTrimLevelProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto) */ {
 public:
  MaxJobCountsPerMemoryTrimLevelProto();
  virtual ~MaxJobCountsPerMemoryTrimLevelProto();

  MaxJobCountsPerMemoryTrimLevelProto(const MaxJobCountsPerMemoryTrimLevelProto& from);
  MaxJobCountsPerMemoryTrimLevelProto(MaxJobCountsPerMemoryTrimLevelProto&& from) noexcept
    : MaxJobCountsPerMemoryTrimLevelProto() {
    *this = ::std::move(from);
  }

  inline MaxJobCountsPerMemoryTrimLevelProto& operator=(const MaxJobCountsPerMemoryTrimLevelProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline MaxJobCountsPerMemoryTrimLevelProto& operator=(MaxJobCountsPerMemoryTrimLevelProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MaxJobCountsPerMemoryTrimLevelProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MaxJobCountsPerMemoryTrimLevelProto* internal_default_instance() {
    return reinterpret_cast<const MaxJobCountsPerMemoryTrimLevelProto*>(
               &_MaxJobCountsPerMemoryTrimLevelProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MaxJobCountsPerMemoryTrimLevelProto& a, MaxJobCountsPerMemoryTrimLevelProto& b) {
    a.Swap(&b);
  }
  inline void Swap(MaxJobCountsPerMemoryTrimLevelProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MaxJobCountsPerMemoryTrimLevelProto* New() const final {
    return CreateMaybeMessage<MaxJobCountsPerMemoryTrimLevelProto>(nullptr);
  }

  MaxJobCountsPerMemoryTrimLevelProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MaxJobCountsPerMemoryTrimLevelProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const MaxJobCountsPerMemoryTrimLevelProto& from);
  void MergeFrom(const MaxJobCountsPerMemoryTrimLevelProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MaxJobCountsPerMemoryTrimLevelProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNormalFieldNumber = 1,
    kModerateFieldNumber = 2,
    kLowFieldNumber = 3,
    kCriticalFieldNumber = 4,
  };
  // optional .com.android.server.job.MaxJobCountsProto normal = 1;
  bool has_normal() const;
  void clear_normal();
  const ::com::android::server::job::MaxJobCountsProto& normal() const;
  ::com::android::server::job::MaxJobCountsProto* release_normal();
  ::com::android::server::job::MaxJobCountsProto* mutable_normal();
  void set_allocated_normal(::com::android::server::job::MaxJobCountsProto* normal);

  // optional .com.android.server.job.MaxJobCountsProto moderate = 2;
  bool has_moderate() const;
  void clear_moderate();
  const ::com::android::server::job::MaxJobCountsProto& moderate() const;
  ::com::android::server::job::MaxJobCountsProto* release_moderate();
  ::com::android::server::job::MaxJobCountsProto* mutable_moderate();
  void set_allocated_moderate(::com::android::server::job::MaxJobCountsProto* moderate);

  // optional .com.android.server.job.MaxJobCountsProto low = 3;
  bool has_low() const;
  void clear_low();
  const ::com::android::server::job::MaxJobCountsProto& low() const;
  ::com::android::server::job::MaxJobCountsProto* release_low();
  ::com::android::server::job::MaxJobCountsProto* mutable_low();
  void set_allocated_low(::com::android::server::job::MaxJobCountsProto* low);

  // optional .com.android.server.job.MaxJobCountsProto critical = 4;
  bool has_critical() const;
  void clear_critical();
  const ::com::android::server::job::MaxJobCountsProto& critical() const;
  ::com::android::server::job::MaxJobCountsProto* release_critical();
  ::com::android::server::job::MaxJobCountsProto* mutable_critical();
  void set_allocated_critical(::com::android::server::job::MaxJobCountsProto* critical);

  // @@protoc_insertion_point(class_scope:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::MaxJobCountsProto* normal_;
  ::com::android::server::job::MaxJobCountsProto* moderate_;
  ::com::android::server::job::MaxJobCountsProto* low_;
  ::com::android::server::job::MaxJobCountsProto* critical_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_BackgroundJobsController_TrackedJob :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob) */ {
 public:
  StateControllerProto_BackgroundJobsController_TrackedJob();
  virtual ~StateControllerProto_BackgroundJobsController_TrackedJob();

  StateControllerProto_BackgroundJobsController_TrackedJob(const StateControllerProto_BackgroundJobsController_TrackedJob& from);
  StateControllerProto_BackgroundJobsController_TrackedJob(StateControllerProto_BackgroundJobsController_TrackedJob&& from) noexcept
    : StateControllerProto_BackgroundJobsController_TrackedJob() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_BackgroundJobsController_TrackedJob& operator=(const StateControllerProto_BackgroundJobsController_TrackedJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_BackgroundJobsController_TrackedJob& operator=(StateControllerProto_BackgroundJobsController_TrackedJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_BackgroundJobsController_TrackedJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_BackgroundJobsController_TrackedJob* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_BackgroundJobsController_TrackedJob*>(
               &_StateControllerProto_BackgroundJobsController_TrackedJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(StateControllerProto_BackgroundJobsController_TrackedJob& a, StateControllerProto_BackgroundJobsController_TrackedJob& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_BackgroundJobsController_TrackedJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_BackgroundJobsController_TrackedJob* New() const final {
    return CreateMaybeMessage<StateControllerProto_BackgroundJobsController_TrackedJob>(nullptr);
  }

  StateControllerProto_BackgroundJobsController_TrackedJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_BackgroundJobsController_TrackedJob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_BackgroundJobsController_TrackedJob& from);
  void MergeFrom(const StateControllerProto_BackgroundJobsController_TrackedJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_BackgroundJobsController_TrackedJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourcePackageNameFieldNumber = 3,
    kInfoFieldNumber = 1,
    kSourceUidFieldNumber = 2,
    kIsInForegroundFieldNumber = 4,
    kIsWhitelistedFieldNumber = 5,
    kCanRunAnyInBackgroundFieldNumber = 6,
    kAreConstraintsSatisfiedFieldNumber = 7,
  };
  // optional string source_package_name = 3;
  bool has_source_package_name() const;
  void clear_source_package_name();
  const std::string& source_package_name() const;
  void set_source_package_name(const std::string& value);
  void set_source_package_name(std::string&& value);
  void set_source_package_name(const char* value);
  void set_source_package_name(const char* value, size_t size);
  std::string* mutable_source_package_name();
  std::string* release_source_package_name();
  void set_allocated_source_package_name(std::string* source_package_name);

  // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
  bool has_info() const;
  void clear_info();
  const ::com::android::server::job::JobStatusShortInfoProto& info() const;
  ::com::android::server::job::JobStatusShortInfoProto* release_info();
  ::com::android::server::job::JobStatusShortInfoProto* mutable_info();
  void set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info);

  // optional int32 source_uid = 2;
  bool has_source_uid() const;
  void clear_source_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid() const;
  void set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool is_in_foreground = 4;
  bool has_is_in_foreground() const;
  void clear_is_in_foreground();
  bool is_in_foreground() const;
  void set_is_in_foreground(bool value);

  // optional bool is_whitelisted = 5;
  bool has_is_whitelisted() const;
  void clear_is_whitelisted();
  bool is_whitelisted() const;
  void set_is_whitelisted(bool value);

  // optional bool can_run_any_in_background = 6;
  bool has_can_run_any_in_background() const;
  void clear_can_run_any_in_background();
  bool can_run_any_in_background() const;
  void set_can_run_any_in_background(bool value);

  // optional bool are_constraints_satisfied = 7;
  bool has_are_constraints_satisfied() const;
  void clear_are_constraints_satisfied();
  bool are_constraints_satisfied() const;
  void set_are_constraints_satisfied(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr source_package_name_;
  ::com::android::server::job::JobStatusShortInfoProto* info_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid_;
  bool is_in_foreground_;
  bool is_whitelisted_;
  bool can_run_any_in_background_;
  bool are_constraints_satisfied_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_BackgroundJobsController :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.BackgroundJobsController) */ {
 public:
  StateControllerProto_BackgroundJobsController();
  virtual ~StateControllerProto_BackgroundJobsController();

  StateControllerProto_BackgroundJobsController(const StateControllerProto_BackgroundJobsController& from);
  StateControllerProto_BackgroundJobsController(StateControllerProto_BackgroundJobsController&& from) noexcept
    : StateControllerProto_BackgroundJobsController() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_BackgroundJobsController& operator=(const StateControllerProto_BackgroundJobsController& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_BackgroundJobsController& operator=(StateControllerProto_BackgroundJobsController&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_BackgroundJobsController& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_BackgroundJobsController* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_BackgroundJobsController*>(
               &_StateControllerProto_BackgroundJobsController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(StateControllerProto_BackgroundJobsController& a, StateControllerProto_BackgroundJobsController& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_BackgroundJobsController* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_BackgroundJobsController* New() const final {
    return CreateMaybeMessage<StateControllerProto_BackgroundJobsController>(nullptr);
  }

  StateControllerProto_BackgroundJobsController* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_BackgroundJobsController>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_BackgroundJobsController& from);
  void MergeFrom(const StateControllerProto_BackgroundJobsController& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_BackgroundJobsController* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.BackgroundJobsController";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StateControllerProto_BackgroundJobsController_TrackedJob TrackedJob;

  // accessors -------------------------------------------------------

  enum : int {
    kTrackedJobsFieldNumber = 2,
    kAppStateTrackerFieldNumber = 1,
  };
  // repeated .com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob tracked_jobs = 2;
  int tracked_jobs_size() const;
  void clear_tracked_jobs();
  ::com::android::server::job::StateControllerProto_BackgroundJobsController_TrackedJob* mutable_tracked_jobs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_BackgroundJobsController_TrackedJob >*
      mutable_tracked_jobs();
  const ::com::android::server::job::StateControllerProto_BackgroundJobsController_TrackedJob& tracked_jobs(int index) const;
  ::com::android::server::job::StateControllerProto_BackgroundJobsController_TrackedJob* add_tracked_jobs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_BackgroundJobsController_TrackedJob >&
      tracked_jobs() const;

  // optional .com.android.server.AppStateTrackerProto app_state_tracker = 1;
  bool has_app_state_tracker() const;
  void clear_app_state_tracker();
  const ::com::android::server::AppStateTrackerProto& app_state_tracker() const;
  ::com::android::server::AppStateTrackerProto* release_app_state_tracker();
  ::com::android::server::AppStateTrackerProto* mutable_app_state_tracker();
  void set_allocated_app_state_tracker(::com::android::server::AppStateTrackerProto* app_state_tracker);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.BackgroundJobsController)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_BackgroundJobsController_TrackedJob > tracked_jobs_;
  ::com::android::server::AppStateTrackerProto* app_state_tracker_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_BatteryController_TrackedJob :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.BatteryController.TrackedJob) */ {
 public:
  StateControllerProto_BatteryController_TrackedJob();
  virtual ~StateControllerProto_BatteryController_TrackedJob();

  StateControllerProto_BatteryController_TrackedJob(const StateControllerProto_BatteryController_TrackedJob& from);
  StateControllerProto_BatteryController_TrackedJob(StateControllerProto_BatteryController_TrackedJob&& from) noexcept
    : StateControllerProto_BatteryController_TrackedJob() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_BatteryController_TrackedJob& operator=(const StateControllerProto_BatteryController_TrackedJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_BatteryController_TrackedJob& operator=(StateControllerProto_BatteryController_TrackedJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_BatteryController_TrackedJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_BatteryController_TrackedJob* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_BatteryController_TrackedJob*>(
               &_StateControllerProto_BatteryController_TrackedJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(StateControllerProto_BatteryController_TrackedJob& a, StateControllerProto_BatteryController_TrackedJob& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_BatteryController_TrackedJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_BatteryController_TrackedJob* New() const final {
    return CreateMaybeMessage<StateControllerProto_BatteryController_TrackedJob>(nullptr);
  }

  StateControllerProto_BatteryController_TrackedJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_BatteryController_TrackedJob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_BatteryController_TrackedJob& from);
  void MergeFrom(const StateControllerProto_BatteryController_TrackedJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_BatteryController_TrackedJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.BatteryController.TrackedJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
    kSourceUidFieldNumber = 2,
  };
  // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
  bool has_info() const;
  void clear_info();
  const ::com::android::server::job::JobStatusShortInfoProto& info() const;
  ::com::android::server::job::JobStatusShortInfoProto* release_info();
  ::com::android::server::job::JobStatusShortInfoProto* mutable_info();
  void set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info);

  // optional int32 source_uid = 2;
  bool has_source_uid() const;
  void clear_source_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid() const;
  void set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.BatteryController.TrackedJob)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::JobStatusShortInfoProto* info_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_BatteryController :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.BatteryController) */ {
 public:
  StateControllerProto_BatteryController();
  virtual ~StateControllerProto_BatteryController();

  StateControllerProto_BatteryController(const StateControllerProto_BatteryController& from);
  StateControllerProto_BatteryController(StateControllerProto_BatteryController&& from) noexcept
    : StateControllerProto_BatteryController() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_BatteryController& operator=(const StateControllerProto_BatteryController& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_BatteryController& operator=(StateControllerProto_BatteryController&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_BatteryController& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_BatteryController* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_BatteryController*>(
               &_StateControllerProto_BatteryController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(StateControllerProto_BatteryController& a, StateControllerProto_BatteryController& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_BatteryController* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_BatteryController* New() const final {
    return CreateMaybeMessage<StateControllerProto_BatteryController>(nullptr);
  }

  StateControllerProto_BatteryController* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_BatteryController>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_BatteryController& from);
  void MergeFrom(const StateControllerProto_BatteryController& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_BatteryController* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.BatteryController";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StateControllerProto_BatteryController_TrackedJob TrackedJob;

  // accessors -------------------------------------------------------

  enum : int {
    kTrackedJobsFieldNumber = 5,
    kIsOnStablePowerFieldNumber = 1,
    kIsBatteryNotLowFieldNumber = 2,
    kIsMonitoringFieldNumber = 3,
    kLastBroadcastSequenceNumberFieldNumber = 4,
  };
  // repeated .com.android.server.job.StateControllerProto.BatteryController.TrackedJob tracked_jobs = 5;
  int tracked_jobs_size() const;
  void clear_tracked_jobs();
  ::com::android::server::job::StateControllerProto_BatteryController_TrackedJob* mutable_tracked_jobs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_BatteryController_TrackedJob >*
      mutable_tracked_jobs();
  const ::com::android::server::job::StateControllerProto_BatteryController_TrackedJob& tracked_jobs(int index) const;
  ::com::android::server::job::StateControllerProto_BatteryController_TrackedJob* add_tracked_jobs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_BatteryController_TrackedJob >&
      tracked_jobs() const;

  // optional bool is_on_stable_power = 1;
  bool has_is_on_stable_power() const;
  void clear_is_on_stable_power();
  bool is_on_stable_power() const;
  void set_is_on_stable_power(bool value);

  // optional bool is_battery_not_low = 2;
  bool has_is_battery_not_low() const;
  void clear_is_battery_not_low();
  bool is_battery_not_low() const;
  void set_is_battery_not_low(bool value);

  // optional bool is_monitoring = 3;
  bool has_is_monitoring() const;
  void clear_is_monitoring();
  bool is_monitoring() const;
  void set_is_monitoring(bool value);

  // optional int32 last_broadcast_sequence_number = 4;
  bool has_last_broadcast_sequence_number() const;
  void clear_last_broadcast_sequence_number();
  ::PROTOBUF_NAMESPACE_ID::int32 last_broadcast_sequence_number() const;
  void set_last_broadcast_sequence_number(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.BatteryController)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_BatteryController_TrackedJob > tracked_jobs_;
  bool is_on_stable_power_;
  bool is_battery_not_low_;
  bool is_monitoring_;
  ::PROTOBUF_NAMESPACE_ID::int32 last_broadcast_sequence_number_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_ConnectivityController_TrackedJob :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob) */ {
 public:
  StateControllerProto_ConnectivityController_TrackedJob();
  virtual ~StateControllerProto_ConnectivityController_TrackedJob();

  StateControllerProto_ConnectivityController_TrackedJob(const StateControllerProto_ConnectivityController_TrackedJob& from);
  StateControllerProto_ConnectivityController_TrackedJob(StateControllerProto_ConnectivityController_TrackedJob&& from) noexcept
    : StateControllerProto_ConnectivityController_TrackedJob() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_ConnectivityController_TrackedJob& operator=(const StateControllerProto_ConnectivityController_TrackedJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_ConnectivityController_TrackedJob& operator=(StateControllerProto_ConnectivityController_TrackedJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_ConnectivityController_TrackedJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_ConnectivityController_TrackedJob* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_ConnectivityController_TrackedJob*>(
               &_StateControllerProto_ConnectivityController_TrackedJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(StateControllerProto_ConnectivityController_TrackedJob& a, StateControllerProto_ConnectivityController_TrackedJob& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_ConnectivityController_TrackedJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_ConnectivityController_TrackedJob* New() const final {
    return CreateMaybeMessage<StateControllerProto_ConnectivityController_TrackedJob>(nullptr);
  }

  StateControllerProto_ConnectivityController_TrackedJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_ConnectivityController_TrackedJob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_ConnectivityController_TrackedJob& from);
  void MergeFrom(const StateControllerProto_ConnectivityController_TrackedJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_ConnectivityController_TrackedJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
    kRequiredNetworkFieldNumber = 3,
    kSourceUidFieldNumber = 2,
  };
  // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
  bool has_info() const;
  void clear_info();
  const ::com::android::server::job::JobStatusShortInfoProto& info() const;
  ::com::android::server::job::JobStatusShortInfoProto* release_info();
  ::com::android::server::job::JobStatusShortInfoProto* mutable_info();
  void set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info);

  // optional .android.net.NetworkRequestProto required_network = 3;
  bool has_required_network() const;
  void clear_required_network();
  const ::android::net::NetworkRequestProto& required_network() const;
  ::android::net::NetworkRequestProto* release_required_network();
  ::android::net::NetworkRequestProto* mutable_required_network();
  void set_allocated_required_network(::android::net::NetworkRequestProto* required_network);

  // optional int32 source_uid = 2;
  bool has_source_uid() const;
  void clear_source_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid() const;
  void set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::JobStatusShortInfoProto* info_;
  ::android::net::NetworkRequestProto* required_network_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_ConnectivityController :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.ConnectivityController) */ {
 public:
  StateControllerProto_ConnectivityController();
  virtual ~StateControllerProto_ConnectivityController();

  StateControllerProto_ConnectivityController(const StateControllerProto_ConnectivityController& from);
  StateControllerProto_ConnectivityController(StateControllerProto_ConnectivityController&& from) noexcept
    : StateControllerProto_ConnectivityController() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_ConnectivityController& operator=(const StateControllerProto_ConnectivityController& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_ConnectivityController& operator=(StateControllerProto_ConnectivityController&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_ConnectivityController& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_ConnectivityController* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_ConnectivityController*>(
               &_StateControllerProto_ConnectivityController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(StateControllerProto_ConnectivityController& a, StateControllerProto_ConnectivityController& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_ConnectivityController* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_ConnectivityController* New() const final {
    return CreateMaybeMessage<StateControllerProto_ConnectivityController>(nullptr);
  }

  StateControllerProto_ConnectivityController* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_ConnectivityController>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_ConnectivityController& from);
  void MergeFrom(const StateControllerProto_ConnectivityController& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_ConnectivityController* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.ConnectivityController";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StateControllerProto_ConnectivityController_TrackedJob TrackedJob;

  // accessors -------------------------------------------------------

  enum : int {
    kTrackedJobsFieldNumber = 2,
    kRequestedStandbyExceptionUidsFieldNumber = 3,
    kAvailableNetworksFieldNumber = 4,
  };
  // repeated .com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob tracked_jobs = 2;
  int tracked_jobs_size() const;
  void clear_tracked_jobs();
  ::com::android::server::job::StateControllerProto_ConnectivityController_TrackedJob* mutable_tracked_jobs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ConnectivityController_TrackedJob >*
      mutable_tracked_jobs();
  const ::com::android::server::job::StateControllerProto_ConnectivityController_TrackedJob& tracked_jobs(int index) const;
  ::com::android::server::job::StateControllerProto_ConnectivityController_TrackedJob* add_tracked_jobs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ConnectivityController_TrackedJob >&
      tracked_jobs() const;

  // repeated int32 requested_standby_exception_uids = 3;
  int requested_standby_exception_uids_size() const;
  void clear_requested_standby_exception_uids();
  ::PROTOBUF_NAMESPACE_ID::int32 requested_standby_exception_uids(int index) const;
  void set_requested_standby_exception_uids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_requested_standby_exception_uids(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      requested_standby_exception_uids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_requested_standby_exception_uids();

  // repeated .android.net.NetworkProto available_networks = 4;
  int available_networks_size() const;
  void clear_available_networks();
  ::android::net::NetworkProto* mutable_available_networks(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::net::NetworkProto >*
      mutable_available_networks();
  const ::android::net::NetworkProto& available_networks(int index) const;
  ::android::net::NetworkProto* add_available_networks();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::net::NetworkProto >&
      available_networks() const;

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.ConnectivityController)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ConnectivityController_TrackedJob > tracked_jobs_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > requested_standby_exception_uids_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::net::NetworkProto > available_networks_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_ContentObserverController_TrackedJob :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.ContentObserverController.TrackedJob) */ {
 public:
  StateControllerProto_ContentObserverController_TrackedJob();
  virtual ~StateControllerProto_ContentObserverController_TrackedJob();

  StateControllerProto_ContentObserverController_TrackedJob(const StateControllerProto_ContentObserverController_TrackedJob& from);
  StateControllerProto_ContentObserverController_TrackedJob(StateControllerProto_ContentObserverController_TrackedJob&& from) noexcept
    : StateControllerProto_ContentObserverController_TrackedJob() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_ContentObserverController_TrackedJob& operator=(const StateControllerProto_ContentObserverController_TrackedJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_ContentObserverController_TrackedJob& operator=(StateControllerProto_ContentObserverController_TrackedJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_ContentObserverController_TrackedJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_ContentObserverController_TrackedJob* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_ContentObserverController_TrackedJob*>(
               &_StateControllerProto_ContentObserverController_TrackedJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(StateControllerProto_ContentObserverController_TrackedJob& a, StateControllerProto_ContentObserverController_TrackedJob& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_ContentObserverController_TrackedJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_ContentObserverController_TrackedJob* New() const final {
    return CreateMaybeMessage<StateControllerProto_ContentObserverController_TrackedJob>(nullptr);
  }

  StateControllerProto_ContentObserverController_TrackedJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_ContentObserverController_TrackedJob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_ContentObserverController_TrackedJob& from);
  void MergeFrom(const StateControllerProto_ContentObserverController_TrackedJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_ContentObserverController_TrackedJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.ContentObserverController.TrackedJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
    kSourceUidFieldNumber = 2,
  };
  // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
  bool has_info() const;
  void clear_info();
  const ::com::android::server::job::JobStatusShortInfoProto& info() const;
  ::com::android::server::job::JobStatusShortInfoProto* release_info();
  ::com::android::server::job::JobStatusShortInfoProto* mutable_info();
  void set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info);

  // optional int32 source_uid = 2;
  bool has_source_uid() const;
  void clear_source_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid() const;
  void set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.ContentObserverController.TrackedJob)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::JobStatusShortInfoProto* info_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance) */ {
 public:
  StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance();
  virtual ~StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance();

  StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance(const StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance& from);
  StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance(StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance&& from) noexcept
    : StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance& operator=(const StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance& operator=(StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance*>(
               &_StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance& a, StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance* New() const final {
    return CreateMaybeMessage<StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance>(nullptr);
  }

  StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance& from);
  void MergeFrom(const StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChangedAuthoritiesFieldNumber = 5,
    kChangedUrisFieldNumber = 6,
    kInfoFieldNumber = 1,
    kTriggerContentUpdateDelayMsFieldNumber = 3,
    kTriggerContentMaxDelayMsFieldNumber = 4,
    kSourceUidFieldNumber = 2,
  };
  // repeated string changed_authorities = 5 [(.android.privacy) = {
  int changed_authorities_size() const;
  void clear_changed_authorities();
  const std::string& changed_authorities(int index) const;
  std::string* mutable_changed_authorities(int index);
  void set_changed_authorities(int index, const std::string& value);
  void set_changed_authorities(int index, std::string&& value);
  void set_changed_authorities(int index, const char* value);
  void set_changed_authorities(int index, const char* value, size_t size);
  std::string* add_changed_authorities();
  void add_changed_authorities(const std::string& value);
  void add_changed_authorities(std::string&& value);
  void add_changed_authorities(const char* value);
  void add_changed_authorities(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& changed_authorities() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_changed_authorities();

  // repeated string changed_uris = 6 [(.android.privacy) = {
  int changed_uris_size() const;
  void clear_changed_uris();
  const std::string& changed_uris(int index) const;
  std::string* mutable_changed_uris(int index);
  void set_changed_uris(int index, const std::string& value);
  void set_changed_uris(int index, std::string&& value);
  void set_changed_uris(int index, const char* value);
  void set_changed_uris(int index, const char* value, size_t size);
  std::string* add_changed_uris();
  void add_changed_uris(const std::string& value);
  void add_changed_uris(std::string&& value);
  void add_changed_uris(const char* value);
  void add_changed_uris(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& changed_uris() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_changed_uris();

  // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
  bool has_info() const;
  void clear_info();
  const ::com::android::server::job::JobStatusShortInfoProto& info() const;
  ::com::android::server::job::JobStatusShortInfoProto* release_info();
  ::com::android::server::job::JobStatusShortInfoProto* mutable_info();
  void set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info);

  // optional int64 trigger_content_update_delay_ms = 3;
  bool has_trigger_content_update_delay_ms() const;
  void clear_trigger_content_update_delay_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_content_update_delay_ms() const;
  void set_trigger_content_update_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 trigger_content_max_delay_ms = 4;
  bool has_trigger_content_max_delay_ms() const;
  void clear_trigger_content_max_delay_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_content_max_delay_ms() const;
  void set_trigger_content_max_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 source_uid = 2;
  bool has_source_uid() const;
  void clear_source_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid() const;
  void set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> changed_authorities_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> changed_uris_;
  ::com::android::server::job::JobStatusShortInfoProto* info_;
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_content_update_delay_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_content_max_delay_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_ContentObserverController_Observer_TriggerContentData :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData) */ {
 public:
  StateControllerProto_ContentObserverController_Observer_TriggerContentData();
  virtual ~StateControllerProto_ContentObserverController_Observer_TriggerContentData();

  StateControllerProto_ContentObserverController_Observer_TriggerContentData(const StateControllerProto_ContentObserverController_Observer_TriggerContentData& from);
  StateControllerProto_ContentObserverController_Observer_TriggerContentData(StateControllerProto_ContentObserverController_Observer_TriggerContentData&& from) noexcept
    : StateControllerProto_ContentObserverController_Observer_TriggerContentData() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_ContentObserverController_Observer_TriggerContentData& operator=(const StateControllerProto_ContentObserverController_Observer_TriggerContentData& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_ContentObserverController_Observer_TriggerContentData& operator=(StateControllerProto_ContentObserverController_Observer_TriggerContentData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_ContentObserverController_Observer_TriggerContentData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_ContentObserverController_Observer_TriggerContentData* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_ContentObserverController_Observer_TriggerContentData*>(
               &_StateControllerProto_ContentObserverController_Observer_TriggerContentData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(StateControllerProto_ContentObserverController_Observer_TriggerContentData& a, StateControllerProto_ContentObserverController_Observer_TriggerContentData& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_ContentObserverController_Observer_TriggerContentData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_ContentObserverController_Observer_TriggerContentData* New() const final {
    return CreateMaybeMessage<StateControllerProto_ContentObserverController_Observer_TriggerContentData>(nullptr);
  }

  StateControllerProto_ContentObserverController_Observer_TriggerContentData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_ContentObserverController_Observer_TriggerContentData>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_ContentObserverController_Observer_TriggerContentData& from);
  void MergeFrom(const StateControllerProto_ContentObserverController_Observer_TriggerContentData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_ContentObserverController_Observer_TriggerContentData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance JobInstance;

  // accessors -------------------------------------------------------

  enum : int {
    kJobsFieldNumber = 3,
    kUriFieldNumber = 1,
    kFlagsFieldNumber = 2,
  };
  // repeated .com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance jobs = 3;
  int jobs_size() const;
  void clear_jobs();
  ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance* mutable_jobs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance >*
      mutable_jobs();
  const ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance& jobs(int index) const;
  ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance* add_jobs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance >&
      jobs() const;

  // optional string uri = 1 [(.android.privacy) = {
  bool has_uri() const;
  void clear_uri();
  const std::string& uri() const;
  void set_uri(const std::string& value);
  void set_uri(std::string&& value);
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  std::string* mutable_uri();
  std::string* release_uri();
  void set_allocated_uri(std::string* uri);

  // optional int32 flags = 2;
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance > jobs_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr uri_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_ContentObserverController_Observer :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.ContentObserverController.Observer) */ {
 public:
  StateControllerProto_ContentObserverController_Observer();
  virtual ~StateControllerProto_ContentObserverController_Observer();

  StateControllerProto_ContentObserverController_Observer(const StateControllerProto_ContentObserverController_Observer& from);
  StateControllerProto_ContentObserverController_Observer(StateControllerProto_ContentObserverController_Observer&& from) noexcept
    : StateControllerProto_ContentObserverController_Observer() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_ContentObserverController_Observer& operator=(const StateControllerProto_ContentObserverController_Observer& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_ContentObserverController_Observer& operator=(StateControllerProto_ContentObserverController_Observer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_ContentObserverController_Observer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_ContentObserverController_Observer* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_ContentObserverController_Observer*>(
               &_StateControllerProto_ContentObserverController_Observer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(StateControllerProto_ContentObserverController_Observer& a, StateControllerProto_ContentObserverController_Observer& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_ContentObserverController_Observer* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_ContentObserverController_Observer* New() const final {
    return CreateMaybeMessage<StateControllerProto_ContentObserverController_Observer>(nullptr);
  }

  StateControllerProto_ContentObserverController_Observer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_ContentObserverController_Observer>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_ContentObserverController_Observer& from);
  void MergeFrom(const StateControllerProto_ContentObserverController_Observer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_ContentObserverController_Observer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.ContentObserverController.Observer";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StateControllerProto_ContentObserverController_Observer_TriggerContentData TriggerContentData;

  // accessors -------------------------------------------------------

  enum : int {
    kTriggersFieldNumber = 2,
    kUserIdFieldNumber = 1,
  };
  // repeated .com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData triggers = 2;
  int triggers_size() const;
  void clear_triggers();
  ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData* mutable_triggers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData >*
      mutable_triggers();
  const ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData& triggers(int index) const;
  ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData* add_triggers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData >&
      triggers() const;

  // optional int32 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.ContentObserverController.Observer)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData > triggers_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_ContentObserverController :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.ContentObserverController) */ {
 public:
  StateControllerProto_ContentObserverController();
  virtual ~StateControllerProto_ContentObserverController();

  StateControllerProto_ContentObserverController(const StateControllerProto_ContentObserverController& from);
  StateControllerProto_ContentObserverController(StateControllerProto_ContentObserverController&& from) noexcept
    : StateControllerProto_ContentObserverController() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_ContentObserverController& operator=(const StateControllerProto_ContentObserverController& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_ContentObserverController& operator=(StateControllerProto_ContentObserverController&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_ContentObserverController& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_ContentObserverController* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_ContentObserverController*>(
               &_StateControllerProto_ContentObserverController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(StateControllerProto_ContentObserverController& a, StateControllerProto_ContentObserverController& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_ContentObserverController* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_ContentObserverController* New() const final {
    return CreateMaybeMessage<StateControllerProto_ContentObserverController>(nullptr);
  }

  StateControllerProto_ContentObserverController* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_ContentObserverController>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_ContentObserverController& from);
  void MergeFrom(const StateControllerProto_ContentObserverController& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_ContentObserverController* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.ContentObserverController";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StateControllerProto_ContentObserverController_TrackedJob TrackedJob;
  typedef StateControllerProto_ContentObserverController_Observer Observer;

  // accessors -------------------------------------------------------

  enum : int {
    kTrackedJobsFieldNumber = 1,
    kObserversFieldNumber = 2,
  };
  // repeated .com.android.server.job.StateControllerProto.ContentObserverController.TrackedJob tracked_jobs = 1;
  int tracked_jobs_size() const;
  void clear_tracked_jobs();
  ::com::android::server::job::StateControllerProto_ContentObserverController_TrackedJob* mutable_tracked_jobs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_TrackedJob >*
      mutable_tracked_jobs();
  const ::com::android::server::job::StateControllerProto_ContentObserverController_TrackedJob& tracked_jobs(int index) const;
  ::com::android::server::job::StateControllerProto_ContentObserverController_TrackedJob* add_tracked_jobs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_TrackedJob >&
      tracked_jobs() const;

  // repeated .com.android.server.job.StateControllerProto.ContentObserverController.Observer observers = 2;
  int observers_size() const;
  void clear_observers();
  ::com::android::server::job::StateControllerProto_ContentObserverController_Observer* mutable_observers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer >*
      mutable_observers();
  const ::com::android::server::job::StateControllerProto_ContentObserverController_Observer& observers(int index) const;
  ::com::android::server::job::StateControllerProto_ContentObserverController_Observer* add_observers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer >&
      observers() const;

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.ContentObserverController)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_TrackedJob > tracked_jobs_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer > observers_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_DeviceIdleJobsController_TrackedJob :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob) */ {
 public:
  StateControllerProto_DeviceIdleJobsController_TrackedJob();
  virtual ~StateControllerProto_DeviceIdleJobsController_TrackedJob();

  StateControllerProto_DeviceIdleJobsController_TrackedJob(const StateControllerProto_DeviceIdleJobsController_TrackedJob& from);
  StateControllerProto_DeviceIdleJobsController_TrackedJob(StateControllerProto_DeviceIdleJobsController_TrackedJob&& from) noexcept
    : StateControllerProto_DeviceIdleJobsController_TrackedJob() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_DeviceIdleJobsController_TrackedJob& operator=(const StateControllerProto_DeviceIdleJobsController_TrackedJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_DeviceIdleJobsController_TrackedJob& operator=(StateControllerProto_DeviceIdleJobsController_TrackedJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_DeviceIdleJobsController_TrackedJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_DeviceIdleJobsController_TrackedJob* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_DeviceIdleJobsController_TrackedJob*>(
               &_StateControllerProto_DeviceIdleJobsController_TrackedJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(StateControllerProto_DeviceIdleJobsController_TrackedJob& a, StateControllerProto_DeviceIdleJobsController_TrackedJob& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_DeviceIdleJobsController_TrackedJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_DeviceIdleJobsController_TrackedJob* New() const final {
    return CreateMaybeMessage<StateControllerProto_DeviceIdleJobsController_TrackedJob>(nullptr);
  }

  StateControllerProto_DeviceIdleJobsController_TrackedJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_DeviceIdleJobsController_TrackedJob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_DeviceIdleJobsController_TrackedJob& from);
  void MergeFrom(const StateControllerProto_DeviceIdleJobsController_TrackedJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_DeviceIdleJobsController_TrackedJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourcePackageNameFieldNumber = 3,
    kInfoFieldNumber = 1,
    kSourceUidFieldNumber = 2,
    kAreConstraintsSatisfiedFieldNumber = 4,
    kIsDozeWhitelistedFieldNumber = 5,
    kIsAllowedInDozeFieldNumber = 6,
  };
  // optional string source_package_name = 3;
  bool has_source_package_name() const;
  void clear_source_package_name();
  const std::string& source_package_name() const;
  void set_source_package_name(const std::string& value);
  void set_source_package_name(std::string&& value);
  void set_source_package_name(const char* value);
  void set_source_package_name(const char* value, size_t size);
  std::string* mutable_source_package_name();
  std::string* release_source_package_name();
  void set_allocated_source_package_name(std::string* source_package_name);

  // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
  bool has_info() const;
  void clear_info();
  const ::com::android::server::job::JobStatusShortInfoProto& info() const;
  ::com::android::server::job::JobStatusShortInfoProto* release_info();
  ::com::android::server::job::JobStatusShortInfoProto* mutable_info();
  void set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info);

  // optional int32 source_uid = 2;
  bool has_source_uid() const;
  void clear_source_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid() const;
  void set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool are_constraints_satisfied = 4;
  bool has_are_constraints_satisfied() const;
  void clear_are_constraints_satisfied();
  bool are_constraints_satisfied() const;
  void set_are_constraints_satisfied(bool value);

  // optional bool is_doze_whitelisted = 5;
  bool has_is_doze_whitelisted() const;
  void clear_is_doze_whitelisted();
  bool is_doze_whitelisted() const;
  void set_is_doze_whitelisted(bool value);

  // optional bool is_allowed_in_doze = 6;
  bool has_is_allowed_in_doze() const;
  void clear_is_allowed_in_doze();
  bool is_allowed_in_doze() const;
  void set_is_allowed_in_doze(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr source_package_name_;
  ::com::android::server::job::JobStatusShortInfoProto* info_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid_;
  bool are_constraints_satisfied_;
  bool is_doze_whitelisted_;
  bool is_allowed_in_doze_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_DeviceIdleJobsController :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.DeviceIdleJobsController) */ {
 public:
  StateControllerProto_DeviceIdleJobsController();
  virtual ~StateControllerProto_DeviceIdleJobsController();

  StateControllerProto_DeviceIdleJobsController(const StateControllerProto_DeviceIdleJobsController& from);
  StateControllerProto_DeviceIdleJobsController(StateControllerProto_DeviceIdleJobsController&& from) noexcept
    : StateControllerProto_DeviceIdleJobsController() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_DeviceIdleJobsController& operator=(const StateControllerProto_DeviceIdleJobsController& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_DeviceIdleJobsController& operator=(StateControllerProto_DeviceIdleJobsController&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_DeviceIdleJobsController& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_DeviceIdleJobsController* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_DeviceIdleJobsController*>(
               &_StateControllerProto_DeviceIdleJobsController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(StateControllerProto_DeviceIdleJobsController& a, StateControllerProto_DeviceIdleJobsController& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_DeviceIdleJobsController* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_DeviceIdleJobsController* New() const final {
    return CreateMaybeMessage<StateControllerProto_DeviceIdleJobsController>(nullptr);
  }

  StateControllerProto_DeviceIdleJobsController* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_DeviceIdleJobsController>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_DeviceIdleJobsController& from);
  void MergeFrom(const StateControllerProto_DeviceIdleJobsController& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_DeviceIdleJobsController* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.DeviceIdleJobsController";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StateControllerProto_DeviceIdleJobsController_TrackedJob TrackedJob;

  // accessors -------------------------------------------------------

  enum : int {
    kTrackedJobsFieldNumber = 2,
    kIsDeviceIdleModeFieldNumber = 1,
  };
  // repeated .com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob tracked_jobs = 2;
  int tracked_jobs_size() const;
  void clear_tracked_jobs();
  ::com::android::server::job::StateControllerProto_DeviceIdleJobsController_TrackedJob* mutable_tracked_jobs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_DeviceIdleJobsController_TrackedJob >*
      mutable_tracked_jobs();
  const ::com::android::server::job::StateControllerProto_DeviceIdleJobsController_TrackedJob& tracked_jobs(int index) const;
  ::com::android::server::job::StateControllerProto_DeviceIdleJobsController_TrackedJob* add_tracked_jobs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_DeviceIdleJobsController_TrackedJob >&
      tracked_jobs() const;

  // optional bool is_device_idle_mode = 1;
  bool has_is_device_idle_mode() const;
  void clear_is_device_idle_mode();
  bool is_device_idle_mode() const;
  void set_is_device_idle_mode(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.DeviceIdleJobsController)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_DeviceIdleJobsController_TrackedJob > tracked_jobs_;
  bool is_device_idle_mode_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_IdleController_TrackedJob :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.IdleController.TrackedJob) */ {
 public:
  StateControllerProto_IdleController_TrackedJob();
  virtual ~StateControllerProto_IdleController_TrackedJob();

  StateControllerProto_IdleController_TrackedJob(const StateControllerProto_IdleController_TrackedJob& from);
  StateControllerProto_IdleController_TrackedJob(StateControllerProto_IdleController_TrackedJob&& from) noexcept
    : StateControllerProto_IdleController_TrackedJob() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_IdleController_TrackedJob& operator=(const StateControllerProto_IdleController_TrackedJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_IdleController_TrackedJob& operator=(StateControllerProto_IdleController_TrackedJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_IdleController_TrackedJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_IdleController_TrackedJob* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_IdleController_TrackedJob*>(
               &_StateControllerProto_IdleController_TrackedJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(StateControllerProto_IdleController_TrackedJob& a, StateControllerProto_IdleController_TrackedJob& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_IdleController_TrackedJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_IdleController_TrackedJob* New() const final {
    return CreateMaybeMessage<StateControllerProto_IdleController_TrackedJob>(nullptr);
  }

  StateControllerProto_IdleController_TrackedJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_IdleController_TrackedJob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_IdleController_TrackedJob& from);
  void MergeFrom(const StateControllerProto_IdleController_TrackedJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_IdleController_TrackedJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.IdleController.TrackedJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
    kSourceUidFieldNumber = 2,
  };
  // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
  bool has_info() const;
  void clear_info();
  const ::com::android::server::job::JobStatusShortInfoProto& info() const;
  ::com::android::server::job::JobStatusShortInfoProto* release_info();
  ::com::android::server::job::JobStatusShortInfoProto* mutable_info();
  void set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info);

  // optional int32 source_uid = 2;
  bool has_source_uid() const;
  void clear_source_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid() const;
  void set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.IdleController.TrackedJob)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::JobStatusShortInfoProto* info_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.CarIdlenessTracker) */ {
 public:
  StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker();
  virtual ~StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker();

  StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker(const StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker& from);
  StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker(StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker&& from) noexcept
    : StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker& operator=(const StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker& operator=(StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker*>(
               &_StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker& a, StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker* New() const final {
    return CreateMaybeMessage<StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker>(nullptr);
  }

  StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker& from);
  void MergeFrom(const StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.CarIdlenessTracker";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsIdleFieldNumber = 1,
    kIsGarageModeOnFieldNumber = 2,
  };
  // optional bool is_idle = 1;
  bool has_is_idle() const;
  void clear_is_idle();
  bool is_idle() const;
  void set_is_idle(bool value);

  // optional bool is_garage_mode_on = 2;
  bool has_is_garage_mode_on() const;
  void clear_is_garage_mode_on();
  bool is_garage_mode_on() const;
  void set_is_garage_mode_on(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.CarIdlenessTracker)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool is_idle_;
  bool is_garage_mode_on_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.DeviceIdlenessTracker) */ {
 public:
  StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker();
  virtual ~StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker();

  StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker(const StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker& from);
  StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker(StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker&& from) noexcept
    : StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker& operator=(const StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker& operator=(StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker*>(
               &_StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker& a, StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker* New() const final {
    return CreateMaybeMessage<StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker>(nullptr);
  }

  StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker& from);
  void MergeFrom(const StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.DeviceIdlenessTracker";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsIdleFieldNumber = 1,
    kIsScreenOnFieldNumber = 2,
    kIsDockIdleFieldNumber = 3,
    kProjectionActiveFieldNumber = 5,
  };
  // optional bool is_idle = 1;
  bool has_is_idle() const;
  void clear_is_idle();
  bool is_idle() const;
  void set_is_idle(bool value);

  // optional bool is_screen_on = 2;
  bool has_is_screen_on() const;
  void clear_is_screen_on();
  bool is_screen_on() const;
  void set_is_screen_on(bool value);

  // optional bool is_dock_idle = 3;
  bool has_is_dock_idle() const;
  void clear_is_dock_idle();
  bool is_dock_idle() const;
  void set_is_dock_idle(bool value);

  // optional bool projection_active = 5;
  bool has_projection_active() const;
  void clear_projection_active();
  bool projection_active() const;
  void set_projection_active(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.DeviceIdlenessTracker)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool is_idle_;
  bool is_screen_on_;
  bool is_dock_idle_;
  bool projection_active_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_IdleController_IdlenessTracker :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker) */ {
 public:
  StateControllerProto_IdleController_IdlenessTracker();
  virtual ~StateControllerProto_IdleController_IdlenessTracker();

  StateControllerProto_IdleController_IdlenessTracker(const StateControllerProto_IdleController_IdlenessTracker& from);
  StateControllerProto_IdleController_IdlenessTracker(StateControllerProto_IdleController_IdlenessTracker&& from) noexcept
    : StateControllerProto_IdleController_IdlenessTracker() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_IdleController_IdlenessTracker& operator=(const StateControllerProto_IdleController_IdlenessTracker& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_IdleController_IdlenessTracker& operator=(StateControllerProto_IdleController_IdlenessTracker&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_IdleController_IdlenessTracker& default_instance();

  enum ActiveTrackerCase {
    kDeviceIdlenessTracker = 1,
    kCarIdlenessTracker = 2,
    ACTIVE_TRACKER_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_IdleController_IdlenessTracker* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_IdleController_IdlenessTracker*>(
               &_StateControllerProto_IdleController_IdlenessTracker_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(StateControllerProto_IdleController_IdlenessTracker& a, StateControllerProto_IdleController_IdlenessTracker& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_IdleController_IdlenessTracker* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_IdleController_IdlenessTracker* New() const final {
    return CreateMaybeMessage<StateControllerProto_IdleController_IdlenessTracker>(nullptr);
  }

  StateControllerProto_IdleController_IdlenessTracker* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_IdleController_IdlenessTracker>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_IdleController_IdlenessTracker& from);
  void MergeFrom(const StateControllerProto_IdleController_IdlenessTracker& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_IdleController_IdlenessTracker* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.IdleController.IdlenessTracker";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker CarIdlenessTracker;
  typedef StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker DeviceIdlenessTracker;

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceIdlenessTrackerFieldNumber = 1,
    kCarIdlenessTrackerFieldNumber = 2,
  };
  // optional .com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.DeviceIdlenessTracker device_idleness_tracker = 1;
  bool has_device_idleness_tracker() const;
  void clear_device_idleness_tracker();
  const ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker& device_idleness_tracker() const;
  ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker* release_device_idleness_tracker();
  ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker* mutable_device_idleness_tracker();
  void set_allocated_device_idleness_tracker(::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker* device_idleness_tracker);

  // optional .com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.CarIdlenessTracker car_idleness_tracker = 2;
  bool has_car_idleness_tracker() const;
  void clear_car_idleness_tracker();
  const ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker& car_idleness_tracker() const;
  ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker* release_car_idleness_tracker();
  ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker* mutable_car_idleness_tracker();
  void set_allocated_car_idleness_tracker(::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker* car_idleness_tracker);

  void clear_active_tracker();
  ActiveTrackerCase active_tracker_case() const;
  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker)
 private:
  class _Internal;
  void set_has_device_idleness_tracker();
  void set_has_car_idleness_tracker();

  inline bool has_active_tracker() const;
  inline void clear_has_active_tracker();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  union ActiveTrackerUnion {
    ActiveTrackerUnion() {}
    ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker* device_idleness_tracker_;
    ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker* car_idleness_tracker_;
  } active_tracker_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_IdleController :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.IdleController) */ {
 public:
  StateControllerProto_IdleController();
  virtual ~StateControllerProto_IdleController();

  StateControllerProto_IdleController(const StateControllerProto_IdleController& from);
  StateControllerProto_IdleController(StateControllerProto_IdleController&& from) noexcept
    : StateControllerProto_IdleController() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_IdleController& operator=(const StateControllerProto_IdleController& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_IdleController& operator=(StateControllerProto_IdleController&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_IdleController& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_IdleController* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_IdleController*>(
               &_StateControllerProto_IdleController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(StateControllerProto_IdleController& a, StateControllerProto_IdleController& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_IdleController* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_IdleController* New() const final {
    return CreateMaybeMessage<StateControllerProto_IdleController>(nullptr);
  }

  StateControllerProto_IdleController* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_IdleController>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_IdleController& from);
  void MergeFrom(const StateControllerProto_IdleController& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_IdleController* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.IdleController";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StateControllerProto_IdleController_TrackedJob TrackedJob;
  typedef StateControllerProto_IdleController_IdlenessTracker IdlenessTracker;

  // accessors -------------------------------------------------------

  enum : int {
    kTrackedJobsFieldNumber = 2,
    kIdlenessTrackerFieldNumber = 3,
    kIsIdleFieldNumber = 1,
  };
  // repeated .com.android.server.job.StateControllerProto.IdleController.TrackedJob tracked_jobs = 2;
  int tracked_jobs_size() const;
  void clear_tracked_jobs();
  ::com::android::server::job::StateControllerProto_IdleController_TrackedJob* mutable_tracked_jobs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_IdleController_TrackedJob >*
      mutable_tracked_jobs();
  const ::com::android::server::job::StateControllerProto_IdleController_TrackedJob& tracked_jobs(int index) const;
  ::com::android::server::job::StateControllerProto_IdleController_TrackedJob* add_tracked_jobs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_IdleController_TrackedJob >&
      tracked_jobs() const;

  // optional .com.android.server.job.StateControllerProto.IdleController.IdlenessTracker idleness_tracker = 3;
  bool has_idleness_tracker() const;
  void clear_idleness_tracker();
  const ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker& idleness_tracker() const;
  ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker* release_idleness_tracker();
  ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker* mutable_idleness_tracker();
  void set_allocated_idleness_tracker(::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker* idleness_tracker);

  // optional bool is_idle = 1;
  bool has_is_idle() const;
  void clear_is_idle();
  bool is_idle() const;
  void set_is_idle(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.IdleController)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_IdleController_TrackedJob > tracked_jobs_;
  ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker* idleness_tracker_;
  bool is_idle_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_QuotaController_TrackedJob :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.QuotaController.TrackedJob) */ {
 public:
  StateControllerProto_QuotaController_TrackedJob();
  virtual ~StateControllerProto_QuotaController_TrackedJob();

  StateControllerProto_QuotaController_TrackedJob(const StateControllerProto_QuotaController_TrackedJob& from);
  StateControllerProto_QuotaController_TrackedJob(StateControllerProto_QuotaController_TrackedJob&& from) noexcept
    : StateControllerProto_QuotaController_TrackedJob() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_QuotaController_TrackedJob& operator=(const StateControllerProto_QuotaController_TrackedJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_QuotaController_TrackedJob& operator=(StateControllerProto_QuotaController_TrackedJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_QuotaController_TrackedJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_QuotaController_TrackedJob* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_QuotaController_TrackedJob*>(
               &_StateControllerProto_QuotaController_TrackedJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(StateControllerProto_QuotaController_TrackedJob& a, StateControllerProto_QuotaController_TrackedJob& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_QuotaController_TrackedJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_QuotaController_TrackedJob* New() const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_TrackedJob>(nullptr);
  }

  StateControllerProto_QuotaController_TrackedJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_TrackedJob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_QuotaController_TrackedJob& from);
  void MergeFrom(const StateControllerProto_QuotaController_TrackedJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_QuotaController_TrackedJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.QuotaController.TrackedJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
    kSourceUidFieldNumber = 2,
    kEffectiveStandbyBucketFieldNumber = 3,
    kRemainingQuotaMsFieldNumber = 6,
    kIsTopStartedJobFieldNumber = 4,
    kHasQuotaFieldNumber = 5,
    kIsRequestedForegroundJobFieldNumber = 7,
    kIsWithinFgJobQuotaFieldNumber = 8,
  };
  // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
  bool has_info() const;
  void clear_info();
  const ::com::android::server::job::JobStatusShortInfoProto& info() const;
  ::com::android::server::job::JobStatusShortInfoProto* release_info();
  ::com::android::server::job::JobStatusShortInfoProto* mutable_info();
  void set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info);

  // optional int32 source_uid = 2;
  bool has_source_uid() const;
  void clear_source_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid() const;
  void set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional .com.android.server.job.JobStatusDumpProto.Bucket effective_standby_bucket = 3;
  bool has_effective_standby_bucket() const;
  void clear_effective_standby_bucket();
  ::com::android::server::job::JobStatusDumpProto_Bucket effective_standby_bucket() const;
  void set_effective_standby_bucket(::com::android::server::job::JobStatusDumpProto_Bucket value);

  // optional int64 remaining_quota_ms = 6;
  bool has_remaining_quota_ms() const;
  void clear_remaining_quota_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 remaining_quota_ms() const;
  void set_remaining_quota_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional bool is_top_started_job = 4;
  bool has_is_top_started_job() const;
  void clear_is_top_started_job();
  bool is_top_started_job() const;
  void set_is_top_started_job(bool value);

  // optional bool has_quota = 5;
  bool has_has_quota() const;
  void clear_has_quota();
  bool has_quota() const;
  void set_has_quota(bool value);

  // optional bool is_requested_foreground_job = 7;
  bool has_is_requested_foreground_job() const;
  void clear_is_requested_foreground_job();
  bool is_requested_foreground_job() const;
  void set_is_requested_foreground_job(bool value);

  // optional bool is_within_fg_job_quota = 8;
  bool has_is_within_fg_job_quota() const;
  void clear_is_within_fg_job_quota();
  bool is_within_fg_job_quota() const;
  void set_is_within_fg_job_quota(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.QuotaController.TrackedJob)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::JobStatusShortInfoProto* info_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid_;
  int effective_standby_bucket_;
  ::PROTOBUF_NAMESPACE_ID::int64 remaining_quota_ms_;
  bool is_top_started_job_;
  bool has_quota_;
  bool is_requested_foreground_job_;
  bool is_within_fg_job_quota_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_QuotaController_AlarmListener :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.QuotaController.AlarmListener) */ {
 public:
  StateControllerProto_QuotaController_AlarmListener();
  virtual ~StateControllerProto_QuotaController_AlarmListener();

  StateControllerProto_QuotaController_AlarmListener(const StateControllerProto_QuotaController_AlarmListener& from);
  StateControllerProto_QuotaController_AlarmListener(StateControllerProto_QuotaController_AlarmListener&& from) noexcept
    : StateControllerProto_QuotaController_AlarmListener() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_QuotaController_AlarmListener& operator=(const StateControllerProto_QuotaController_AlarmListener& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_QuotaController_AlarmListener& operator=(StateControllerProto_QuotaController_AlarmListener&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_QuotaController_AlarmListener& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_QuotaController_AlarmListener* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_QuotaController_AlarmListener*>(
               &_StateControllerProto_QuotaController_AlarmListener_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(StateControllerProto_QuotaController_AlarmListener& a, StateControllerProto_QuotaController_AlarmListener& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_QuotaController_AlarmListener* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_QuotaController_AlarmListener* New() const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_AlarmListener>(nullptr);
  }

  StateControllerProto_QuotaController_AlarmListener* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_AlarmListener>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_QuotaController_AlarmListener& from);
  void MergeFrom(const StateControllerProto_QuotaController_AlarmListener& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_QuotaController_AlarmListener* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.QuotaController.AlarmListener";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTriggerTimeElapsedFieldNumber = 2,
    kIsWaitingFieldNumber = 1,
  };
  // optional int64 trigger_time_elapsed = 2;
  bool has_trigger_time_elapsed() const;
  void clear_trigger_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_time_elapsed() const;
  void set_trigger_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional bool is_waiting = 1;
  bool has_is_waiting() const;
  void clear_is_waiting();
  bool is_waiting() const;
  void set_is_waiting(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.QuotaController.AlarmListener)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_time_elapsed_;
  bool is_waiting_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_QuotaController_ExecutionStats :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats) */ {
 public:
  StateControllerProto_QuotaController_ExecutionStats();
  virtual ~StateControllerProto_QuotaController_ExecutionStats();

  StateControllerProto_QuotaController_ExecutionStats(const StateControllerProto_QuotaController_ExecutionStats& from);
  StateControllerProto_QuotaController_ExecutionStats(StateControllerProto_QuotaController_ExecutionStats&& from) noexcept
    : StateControllerProto_QuotaController_ExecutionStats() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_QuotaController_ExecutionStats& operator=(const StateControllerProto_QuotaController_ExecutionStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_QuotaController_ExecutionStats& operator=(StateControllerProto_QuotaController_ExecutionStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_QuotaController_ExecutionStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_QuotaController_ExecutionStats* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_QuotaController_ExecutionStats*>(
               &_StateControllerProto_QuotaController_ExecutionStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(StateControllerProto_QuotaController_ExecutionStats& a, StateControllerProto_QuotaController_ExecutionStats& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_QuotaController_ExecutionStats* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_QuotaController_ExecutionStats* New() const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_ExecutionStats>(nullptr);
  }

  StateControllerProto_QuotaController_ExecutionStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_ExecutionStats>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_QuotaController_ExecutionStats& from);
  void MergeFrom(const StateControllerProto_QuotaController_ExecutionStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_QuotaController_ExecutionStats* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.QuotaController.ExecutionStats";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExpirationTimeElapsedFieldNumber = 2,
    kWindowSizeMsFieldNumber = 3,
    kStandbyBucketFieldNumber = 1,
    kBgJobCountInWindowFieldNumber = 5,
    kExecutionTimeInWindowMsFieldNumber = 4,
    kExecutionTimeInMaxPeriodMsFieldNumber = 6,
    kInQuotaTimeElapsedFieldNumber = 8,
    kBgJobCountInMaxPeriodFieldNumber = 7,
    kJobCountInRateLimitingWindowFieldNumber = 10,
    kJobCountExpirationTimeElapsedFieldNumber = 9,
    kSessionCountExpirationTimeElapsedFieldNumber = 12,
    kSessionCountInWindowFieldNumber = 11,
    kSessionCountInRateLimitingWindowFieldNumber = 13,
    kJobCountLimitFieldNumber = 14,
    kSessionCountLimitFieldNumber = 15,
  };
  // optional int64 expiration_time_elapsed = 2;
  bool has_expiration_time_elapsed() const;
  void clear_expiration_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 expiration_time_elapsed() const;
  void set_expiration_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 window_size_ms = 3;
  bool has_window_size_ms() const;
  void clear_window_size_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 window_size_ms() const;
  void set_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional .com.android.server.job.JobStatusDumpProto.Bucket standby_bucket = 1;
  bool has_standby_bucket() const;
  void clear_standby_bucket();
  ::com::android::server::job::JobStatusDumpProto_Bucket standby_bucket() const;
  void set_standby_bucket(::com::android::server::job::JobStatusDumpProto_Bucket value);

  // optional int32 bg_job_count_in_window = 5;
  bool has_bg_job_count_in_window() const;
  void clear_bg_job_count_in_window();
  ::PROTOBUF_NAMESPACE_ID::int32 bg_job_count_in_window() const;
  void set_bg_job_count_in_window(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 execution_time_in_window_ms = 4;
  bool has_execution_time_in_window_ms() const;
  void clear_execution_time_in_window_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 execution_time_in_window_ms() const;
  void set_execution_time_in_window_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 execution_time_in_max_period_ms = 6;
  bool has_execution_time_in_max_period_ms() const;
  void clear_execution_time_in_max_period_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 execution_time_in_max_period_ms() const;
  void set_execution_time_in_max_period_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 in_quota_time_elapsed = 8;
  bool has_in_quota_time_elapsed() const;
  void clear_in_quota_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 in_quota_time_elapsed() const;
  void set_in_quota_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 bg_job_count_in_max_period = 7;
  bool has_bg_job_count_in_max_period() const;
  void clear_bg_job_count_in_max_period();
  ::PROTOBUF_NAMESPACE_ID::int32 bg_job_count_in_max_period() const;
  void set_bg_job_count_in_max_period(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 job_count_in_rate_limiting_window = 10;
  bool has_job_count_in_rate_limiting_window() const;
  void clear_job_count_in_rate_limiting_window();
  ::PROTOBUF_NAMESPACE_ID::int32 job_count_in_rate_limiting_window() const;
  void set_job_count_in_rate_limiting_window(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 job_count_expiration_time_elapsed = 9;
  bool has_job_count_expiration_time_elapsed() const;
  void clear_job_count_expiration_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 job_count_expiration_time_elapsed() const;
  void set_job_count_expiration_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 session_count_expiration_time_elapsed = 12;
  bool has_session_count_expiration_time_elapsed() const;
  void clear_session_count_expiration_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 session_count_expiration_time_elapsed() const;
  void set_session_count_expiration_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 session_count_in_window = 11;
  bool has_session_count_in_window() const;
  void clear_session_count_in_window();
  ::PROTOBUF_NAMESPACE_ID::int32 session_count_in_window() const;
  void set_session_count_in_window(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 session_count_in_rate_limiting_window = 13;
  bool has_session_count_in_rate_limiting_window() const;
  void clear_session_count_in_rate_limiting_window();
  ::PROTOBUF_NAMESPACE_ID::int32 session_count_in_rate_limiting_window() const;
  void set_session_count_in_rate_limiting_window(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 job_count_limit = 14;
  bool has_job_count_limit() const;
  void clear_job_count_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 job_count_limit() const;
  void set_job_count_limit(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 session_count_limit = 15;
  bool has_session_count_limit() const;
  void clear_session_count_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 session_count_limit() const;
  void set_session_count_limit(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 expiration_time_elapsed_;
  ::PROTOBUF_NAMESPACE_ID::int64 window_size_ms_;
  int standby_bucket_;
  ::PROTOBUF_NAMESPACE_ID::int32 bg_job_count_in_window_;
  ::PROTOBUF_NAMESPACE_ID::int64 execution_time_in_window_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 execution_time_in_max_period_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 in_quota_time_elapsed_;
  ::PROTOBUF_NAMESPACE_ID::int32 bg_job_count_in_max_period_;
  ::PROTOBUF_NAMESPACE_ID::int32 job_count_in_rate_limiting_window_;
  ::PROTOBUF_NAMESPACE_ID::int64 job_count_expiration_time_elapsed_;
  ::PROTOBUF_NAMESPACE_ID::int64 session_count_expiration_time_elapsed_;
  ::PROTOBUF_NAMESPACE_ID::int32 session_count_in_window_;
  ::PROTOBUF_NAMESPACE_ID::int32 session_count_in_rate_limiting_window_;
  ::PROTOBUF_NAMESPACE_ID::int32 job_count_limit_;
  ::PROTOBUF_NAMESPACE_ID::int32 session_count_limit_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_QuotaController_Package :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.QuotaController.Package) */ {
 public:
  StateControllerProto_QuotaController_Package();
  virtual ~StateControllerProto_QuotaController_Package();

  StateControllerProto_QuotaController_Package(const StateControllerProto_QuotaController_Package& from);
  StateControllerProto_QuotaController_Package(StateControllerProto_QuotaController_Package&& from) noexcept
    : StateControllerProto_QuotaController_Package() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_QuotaController_Package& operator=(const StateControllerProto_QuotaController_Package& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_QuotaController_Package& operator=(StateControllerProto_QuotaController_Package&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_QuotaController_Package& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_QuotaController_Package* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_QuotaController_Package*>(
               &_StateControllerProto_QuotaController_Package_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(StateControllerProto_QuotaController_Package& a, StateControllerProto_QuotaController_Package& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_QuotaController_Package* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_QuotaController_Package* New() const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_Package>(nullptr);
  }

  StateControllerProto_QuotaController_Package* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_Package>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_QuotaController_Package& from);
  void MergeFrom(const StateControllerProto_QuotaController_Package& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_QuotaController_Package* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.QuotaController.Package";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kUserIdFieldNumber = 1,
  };
  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional int32 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.QuotaController.Package)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_QuotaController_TimingSession :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.QuotaController.TimingSession) */ {
 public:
  StateControllerProto_QuotaController_TimingSession();
  virtual ~StateControllerProto_QuotaController_TimingSession();

  StateControllerProto_QuotaController_TimingSession(const StateControllerProto_QuotaController_TimingSession& from);
  StateControllerProto_QuotaController_TimingSession(StateControllerProto_QuotaController_TimingSession&& from) noexcept
    : StateControllerProto_QuotaController_TimingSession() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_QuotaController_TimingSession& operator=(const StateControllerProto_QuotaController_TimingSession& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_QuotaController_TimingSession& operator=(StateControllerProto_QuotaController_TimingSession&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_QuotaController_TimingSession& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_QuotaController_TimingSession* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_QuotaController_TimingSession*>(
               &_StateControllerProto_QuotaController_TimingSession_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(StateControllerProto_QuotaController_TimingSession& a, StateControllerProto_QuotaController_TimingSession& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_QuotaController_TimingSession* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_QuotaController_TimingSession* New() const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_TimingSession>(nullptr);
  }

  StateControllerProto_QuotaController_TimingSession* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_TimingSession>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_QuotaController_TimingSession& from);
  void MergeFrom(const StateControllerProto_QuotaController_TimingSession& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_QuotaController_TimingSession* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.QuotaController.TimingSession";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartTimeElapsedFieldNumber = 1,
    kEndTimeElapsedFieldNumber = 2,
    kBgJobCountFieldNumber = 3,
  };
  // optional int64 start_time_elapsed = 1;
  bool has_start_time_elapsed() const;
  void clear_start_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 start_time_elapsed() const;
  void set_start_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 end_time_elapsed = 2;
  bool has_end_time_elapsed() const;
  void clear_end_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 end_time_elapsed() const;
  void set_end_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 bg_job_count = 3;
  bool has_bg_job_count() const;
  void clear_bg_job_count();
  ::PROTOBUF_NAMESPACE_ID::int32 bg_job_count() const;
  void set_bg_job_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.QuotaController.TimingSession)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 start_time_elapsed_;
  ::PROTOBUF_NAMESPACE_ID::int64 end_time_elapsed_;
  ::PROTOBUF_NAMESPACE_ID::int32 bg_job_count_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_QuotaController_Timer :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.QuotaController.Timer) */ {
 public:
  StateControllerProto_QuotaController_Timer();
  virtual ~StateControllerProto_QuotaController_Timer();

  StateControllerProto_QuotaController_Timer(const StateControllerProto_QuotaController_Timer& from);
  StateControllerProto_QuotaController_Timer(StateControllerProto_QuotaController_Timer&& from) noexcept
    : StateControllerProto_QuotaController_Timer() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_QuotaController_Timer& operator=(const StateControllerProto_QuotaController_Timer& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_QuotaController_Timer& operator=(StateControllerProto_QuotaController_Timer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_QuotaController_Timer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_QuotaController_Timer* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_QuotaController_Timer*>(
               &_StateControllerProto_QuotaController_Timer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(StateControllerProto_QuotaController_Timer& a, StateControllerProto_QuotaController_Timer& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_QuotaController_Timer* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_QuotaController_Timer* New() const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_Timer>(nullptr);
  }

  StateControllerProto_QuotaController_Timer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_Timer>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_QuotaController_Timer& from);
  void MergeFrom(const StateControllerProto_QuotaController_Timer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_QuotaController_Timer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.QuotaController.Timer";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRunningJobsFieldNumber = 5,
    kPkgFieldNumber = 1,
    kStartTimeElapsedFieldNumber = 3,
    kIsActiveFieldNumber = 2,
    kBgJobCountFieldNumber = 4,
  };
  // repeated .com.android.server.job.JobStatusShortInfoProto running_jobs = 5;
  int running_jobs_size() const;
  void clear_running_jobs();
  ::com::android::server::job::JobStatusShortInfoProto* mutable_running_jobs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusShortInfoProto >*
      mutable_running_jobs();
  const ::com::android::server::job::JobStatusShortInfoProto& running_jobs(int index) const;
  ::com::android::server::job::JobStatusShortInfoProto* add_running_jobs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusShortInfoProto >&
      running_jobs() const;

  // optional .com.android.server.job.StateControllerProto.QuotaController.Package pkg = 1;
  bool has_pkg() const;
  void clear_pkg();
  const ::com::android::server::job::StateControllerProto_QuotaController_Package& pkg() const;
  ::com::android::server::job::StateControllerProto_QuotaController_Package* release_pkg();
  ::com::android::server::job::StateControllerProto_QuotaController_Package* mutable_pkg();
  void set_allocated_pkg(::com::android::server::job::StateControllerProto_QuotaController_Package* pkg);

  // optional int64 start_time_elapsed = 3;
  bool has_start_time_elapsed() const;
  void clear_start_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 start_time_elapsed() const;
  void set_start_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional bool is_active = 2;
  bool has_is_active() const;
  void clear_is_active();
  bool is_active() const;
  void set_is_active(bool value);

  // optional int32 bg_job_count = 4;
  bool has_bg_job_count() const;
  void clear_bg_job_count();
  ::PROTOBUF_NAMESPACE_ID::int32 bg_job_count() const;
  void set_bg_job_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.QuotaController.Timer)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusShortInfoProto > running_jobs_;
  ::com::android::server::job::StateControllerProto_QuotaController_Package* pkg_;
  ::PROTOBUF_NAMESPACE_ID::int64 start_time_elapsed_;
  bool is_active_;
  ::PROTOBUF_NAMESPACE_ID::int32 bg_job_count_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_QuotaController_TopAppTimer :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.QuotaController.TopAppTimer) */ {
 public:
  StateControllerProto_QuotaController_TopAppTimer();
  virtual ~StateControllerProto_QuotaController_TopAppTimer();

  StateControllerProto_QuotaController_TopAppTimer(const StateControllerProto_QuotaController_TopAppTimer& from);
  StateControllerProto_QuotaController_TopAppTimer(StateControllerProto_QuotaController_TopAppTimer&& from) noexcept
    : StateControllerProto_QuotaController_TopAppTimer() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_QuotaController_TopAppTimer& operator=(const StateControllerProto_QuotaController_TopAppTimer& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_QuotaController_TopAppTimer& operator=(StateControllerProto_QuotaController_TopAppTimer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_QuotaController_TopAppTimer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_QuotaController_TopAppTimer* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_QuotaController_TopAppTimer*>(
               &_StateControllerProto_QuotaController_TopAppTimer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(StateControllerProto_QuotaController_TopAppTimer& a, StateControllerProto_QuotaController_TopAppTimer& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_QuotaController_TopAppTimer* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_QuotaController_TopAppTimer* New() const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_TopAppTimer>(nullptr);
  }

  StateControllerProto_QuotaController_TopAppTimer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_TopAppTimer>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_QuotaController_TopAppTimer& from);
  void MergeFrom(const StateControllerProto_QuotaController_TopAppTimer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_QuotaController_TopAppTimer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.QuotaController.TopAppTimer";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPkgFieldNumber = 1,
    kStartTimeElapsedFieldNumber = 3,
    kIsActiveFieldNumber = 2,
    kActivityCountFieldNumber = 4,
  };
  // optional .com.android.server.job.StateControllerProto.QuotaController.Package pkg = 1;
  bool has_pkg() const;
  void clear_pkg();
  const ::com::android::server::job::StateControllerProto_QuotaController_Package& pkg() const;
  ::com::android::server::job::StateControllerProto_QuotaController_Package* release_pkg();
  ::com::android::server::job::StateControllerProto_QuotaController_Package* mutable_pkg();
  void set_allocated_pkg(::com::android::server::job::StateControllerProto_QuotaController_Package* pkg);

  // optional int64 start_time_elapsed = 3;
  bool has_start_time_elapsed() const;
  void clear_start_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 start_time_elapsed() const;
  void set_start_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional bool is_active = 2;
  bool has_is_active() const;
  void clear_is_active();
  bool is_active() const;
  void set_is_active(bool value);

  // optional int32 activity_count = 4;
  bool has_activity_count() const;
  void clear_activity_count();
  ::PROTOBUF_NAMESPACE_ID::int32 activity_count() const;
  void set_activity_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.QuotaController.TopAppTimer)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::StateControllerProto_QuotaController_Package* pkg_;
  ::PROTOBUF_NAMESPACE_ID::int64 start_time_elapsed_;
  bool is_active_;
  ::PROTOBUF_NAMESPACE_ID::int32 activity_count_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_QuotaController_PackageStats :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.QuotaController.PackageStats) */ {
 public:
  StateControllerProto_QuotaController_PackageStats();
  virtual ~StateControllerProto_QuotaController_PackageStats();

  StateControllerProto_QuotaController_PackageStats(const StateControllerProto_QuotaController_PackageStats& from);
  StateControllerProto_QuotaController_PackageStats(StateControllerProto_QuotaController_PackageStats&& from) noexcept
    : StateControllerProto_QuotaController_PackageStats() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_QuotaController_PackageStats& operator=(const StateControllerProto_QuotaController_PackageStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_QuotaController_PackageStats& operator=(StateControllerProto_QuotaController_PackageStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_QuotaController_PackageStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_QuotaController_PackageStats* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_QuotaController_PackageStats*>(
               &_StateControllerProto_QuotaController_PackageStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(StateControllerProto_QuotaController_PackageStats& a, StateControllerProto_QuotaController_PackageStats& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_QuotaController_PackageStats* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_QuotaController_PackageStats* New() const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_PackageStats>(nullptr);
  }

  StateControllerProto_QuotaController_PackageStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_PackageStats>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_QuotaController_PackageStats& from);
  void MergeFrom(const StateControllerProto_QuotaController_PackageStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_QuotaController_PackageStats* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.QuotaController.PackageStats";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSavedSessionsFieldNumber = 3,
    kExecutionStatsFieldNumber = 4,
    kPkgFieldNumber = 1,
    kTimerFieldNumber = 2,
    kFgJobTimerFieldNumber = 6,
  };
  // repeated .com.android.server.job.StateControllerProto.QuotaController.TimingSession saved_sessions = 3;
  int saved_sessions_size() const;
  void clear_saved_sessions();
  ::com::android::server::job::StateControllerProto_QuotaController_TimingSession* mutable_saved_sessions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_TimingSession >*
      mutable_saved_sessions();
  const ::com::android::server::job::StateControllerProto_QuotaController_TimingSession& saved_sessions(int index) const;
  ::com::android::server::job::StateControllerProto_QuotaController_TimingSession* add_saved_sessions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_TimingSession >&
      saved_sessions() const;

  // repeated .com.android.server.job.StateControllerProto.QuotaController.ExecutionStats execution_stats = 4;
  int execution_stats_size() const;
  void clear_execution_stats();
  ::com::android::server::job::StateControllerProto_QuotaController_ExecutionStats* mutable_execution_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_ExecutionStats >*
      mutable_execution_stats();
  const ::com::android::server::job::StateControllerProto_QuotaController_ExecutionStats& execution_stats(int index) const;
  ::com::android::server::job::StateControllerProto_QuotaController_ExecutionStats* add_execution_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_ExecutionStats >&
      execution_stats() const;

  // optional .com.android.server.job.StateControllerProto.QuotaController.Package pkg = 1;
  bool has_pkg() const;
  void clear_pkg();
  const ::com::android::server::job::StateControllerProto_QuotaController_Package& pkg() const;
  ::com::android::server::job::StateControllerProto_QuotaController_Package* release_pkg();
  ::com::android::server::job::StateControllerProto_QuotaController_Package* mutable_pkg();
  void set_allocated_pkg(::com::android::server::job::StateControllerProto_QuotaController_Package* pkg);

  // optional .com.android.server.job.StateControllerProto.QuotaController.Timer timer = 2;
  bool has_timer() const;
  void clear_timer();
  const ::com::android::server::job::StateControllerProto_QuotaController_Timer& timer() const;
  ::com::android::server::job::StateControllerProto_QuotaController_Timer* release_timer();
  ::com::android::server::job::StateControllerProto_QuotaController_Timer* mutable_timer();
  void set_allocated_timer(::com::android::server::job::StateControllerProto_QuotaController_Timer* timer);

  // optional .com.android.server.job.StateControllerProto.QuotaController.Timer fg_job_timer = 6;
  bool has_fg_job_timer() const;
  void clear_fg_job_timer();
  const ::com::android::server::job::StateControllerProto_QuotaController_Timer& fg_job_timer() const;
  ::com::android::server::job::StateControllerProto_QuotaController_Timer* release_fg_job_timer();
  ::com::android::server::job::StateControllerProto_QuotaController_Timer* mutable_fg_job_timer();
  void set_allocated_fg_job_timer(::com::android::server::job::StateControllerProto_QuotaController_Timer* fg_job_timer);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.QuotaController.PackageStats)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_TimingSession > saved_sessions_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_ExecutionStats > execution_stats_;
  ::com::android::server::job::StateControllerProto_QuotaController_Package* pkg_;
  ::com::android::server::job::StateControllerProto_QuotaController_Timer* timer_;
  ::com::android::server::job::StateControllerProto_QuotaController_Timer* fg_job_timer_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_QuotaController_UidPackageMapping :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping) */ {
 public:
  StateControllerProto_QuotaController_UidPackageMapping();
  virtual ~StateControllerProto_QuotaController_UidPackageMapping();

  StateControllerProto_QuotaController_UidPackageMapping(const StateControllerProto_QuotaController_UidPackageMapping& from);
  StateControllerProto_QuotaController_UidPackageMapping(StateControllerProto_QuotaController_UidPackageMapping&& from) noexcept
    : StateControllerProto_QuotaController_UidPackageMapping() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_QuotaController_UidPackageMapping& operator=(const StateControllerProto_QuotaController_UidPackageMapping& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_QuotaController_UidPackageMapping& operator=(StateControllerProto_QuotaController_UidPackageMapping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_QuotaController_UidPackageMapping& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_QuotaController_UidPackageMapping* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_QuotaController_UidPackageMapping*>(
               &_StateControllerProto_QuotaController_UidPackageMapping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(StateControllerProto_QuotaController_UidPackageMapping& a, StateControllerProto_QuotaController_UidPackageMapping& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_QuotaController_UidPackageMapping* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_QuotaController_UidPackageMapping* New() const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_UidPackageMapping>(nullptr);
  }

  StateControllerProto_QuotaController_UidPackageMapping* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_UidPackageMapping>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_QuotaController_UidPackageMapping& from);
  void MergeFrom(const StateControllerProto_QuotaController_UidPackageMapping& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_QuotaController_UidPackageMapping* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPackageNamesFieldNumber = 2,
    kUidFieldNumber = 1,
  };
  // repeated string package_names = 2;
  int package_names_size() const;
  void clear_package_names();
  const std::string& package_names(int index) const;
  std::string* mutable_package_names(int index);
  void set_package_names(int index, const std::string& value);
  void set_package_names(int index, std::string&& value);
  void set_package_names(int index, const char* value);
  void set_package_names(int index, const char* value, size_t size);
  std::string* add_package_names();
  void add_package_names(const std::string& value);
  void add_package_names(std::string&& value);
  void add_package_names(const char* value);
  void add_package_names(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& package_names() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_package_names();

  // optional int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> package_names_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.Alarm) */ {
 public:
  StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm();
  virtual ~StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm();

  StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm(const StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm& from);
  StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm(StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm&& from) noexcept
    : StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm& operator=(const StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm& operator=(StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm*>(
               &_StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm& a, StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm* New() const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm>(nullptr);
  }

  StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm& from);
  void MergeFrom(const StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.Alarm";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPkgFieldNumber = 1,
    kInQuotaTimeElapsedFieldNumber = 2,
  };
  // optional .com.android.server.job.StateControllerProto.QuotaController.Package pkg = 1;
  bool has_pkg() const;
  void clear_pkg();
  const ::com::android::server::job::StateControllerProto_QuotaController_Package& pkg() const;
  ::com::android::server::job::StateControllerProto_QuotaController_Package* release_pkg();
  ::com::android::server::job::StateControllerProto_QuotaController_Package* mutable_pkg();
  void set_allocated_pkg(::com::android::server::job::StateControllerProto_QuotaController_Package* pkg);

  // optional int64 in_quota_time_elapsed = 2;
  bool has_in_quota_time_elapsed() const;
  void clear_in_quota_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 in_quota_time_elapsed() const;
  void set_in_quota_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.Alarm)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::StateControllerProto_QuotaController_Package* pkg_;
  ::PROTOBUF_NAMESPACE_ID::int64 in_quota_time_elapsed_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_QuotaController_InQuotaAlarmListener :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener) */ {
 public:
  StateControllerProto_QuotaController_InQuotaAlarmListener();
  virtual ~StateControllerProto_QuotaController_InQuotaAlarmListener();

  StateControllerProto_QuotaController_InQuotaAlarmListener(const StateControllerProto_QuotaController_InQuotaAlarmListener& from);
  StateControllerProto_QuotaController_InQuotaAlarmListener(StateControllerProto_QuotaController_InQuotaAlarmListener&& from) noexcept
    : StateControllerProto_QuotaController_InQuotaAlarmListener() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_QuotaController_InQuotaAlarmListener& operator=(const StateControllerProto_QuotaController_InQuotaAlarmListener& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_QuotaController_InQuotaAlarmListener& operator=(StateControllerProto_QuotaController_InQuotaAlarmListener&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_QuotaController_InQuotaAlarmListener& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_QuotaController_InQuotaAlarmListener* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_QuotaController_InQuotaAlarmListener*>(
               &_StateControllerProto_QuotaController_InQuotaAlarmListener_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(StateControllerProto_QuotaController_InQuotaAlarmListener& a, StateControllerProto_QuotaController_InQuotaAlarmListener& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_QuotaController_InQuotaAlarmListener* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_QuotaController_InQuotaAlarmListener* New() const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_InQuotaAlarmListener>(nullptr);
  }

  StateControllerProto_QuotaController_InQuotaAlarmListener* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController_InQuotaAlarmListener>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_QuotaController_InQuotaAlarmListener& from);
  void MergeFrom(const StateControllerProto_QuotaController_InQuotaAlarmListener& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_QuotaController_InQuotaAlarmListener* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm Alarm;

  // accessors -------------------------------------------------------

  enum : int {
    kAlarmsFieldNumber = 2,
    kTriggerTimeElapsedFieldNumber = 1,
  };
  // repeated .com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.Alarm alarms = 2;
  int alarms_size() const;
  void clear_alarms();
  ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm* mutable_alarms(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm >*
      mutable_alarms();
  const ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm& alarms(int index) const;
  ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm* add_alarms();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm >&
      alarms() const;

  // optional int64 trigger_time_elapsed = 1;
  bool has_trigger_time_elapsed() const;
  void clear_trigger_time_elapsed();
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_time_elapsed() const;
  void set_trigger_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm > alarms_;
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_time_elapsed_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_QuotaController :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.QuotaController) */ {
 public:
  StateControllerProto_QuotaController();
  virtual ~StateControllerProto_QuotaController();

  StateControllerProto_QuotaController(const StateControllerProto_QuotaController& from);
  StateControllerProto_QuotaController(StateControllerProto_QuotaController&& from) noexcept
    : StateControllerProto_QuotaController() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_QuotaController& operator=(const StateControllerProto_QuotaController& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_QuotaController& operator=(StateControllerProto_QuotaController&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_QuotaController& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_QuotaController* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_QuotaController*>(
               &_StateControllerProto_QuotaController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(StateControllerProto_QuotaController& a, StateControllerProto_QuotaController& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_QuotaController* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_QuotaController* New() const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController>(nullptr);
  }

  StateControllerProto_QuotaController* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_QuotaController>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_QuotaController& from);
  void MergeFrom(const StateControllerProto_QuotaController& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_QuotaController* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.QuotaController";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StateControllerProto_QuotaController_TrackedJob TrackedJob;
  typedef StateControllerProto_QuotaController_AlarmListener AlarmListener;
  typedef StateControllerProto_QuotaController_ExecutionStats ExecutionStats;
  typedef StateControllerProto_QuotaController_Package Package;
  typedef StateControllerProto_QuotaController_TimingSession TimingSession;
  typedef StateControllerProto_QuotaController_Timer Timer;
  typedef StateControllerProto_QuotaController_TopAppTimer TopAppTimer;
  typedef StateControllerProto_QuotaController_PackageStats PackageStats;
  typedef StateControllerProto_QuotaController_UidPackageMapping UidPackageMapping;
  typedef StateControllerProto_QuotaController_InQuotaAlarmListener InQuotaAlarmListener;

  // accessors -------------------------------------------------------

  enum : int {
    kForegroundUidsFieldNumber = 3,
    kTrackedJobsFieldNumber = 4,
    kPackageStatsFieldNumber = 5,
    kUidToPackageCacheFieldNumber = 7,
    kInQuotaAlarmListenerFieldNumber = 8,
    kElapsedRealtimeFieldNumber = 6,
    kIsChargingFieldNumber = 1,
  };
  // repeated int32 foreground_uids = 3;
  int foreground_uids_size() const;
  void clear_foreground_uids();
  ::PROTOBUF_NAMESPACE_ID::int32 foreground_uids(int index) const;
  void set_foreground_uids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_foreground_uids(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      foreground_uids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_foreground_uids();

  // repeated .com.android.server.job.StateControllerProto.QuotaController.TrackedJob tracked_jobs = 4;
  int tracked_jobs_size() const;
  void clear_tracked_jobs();
  ::com::android::server::job::StateControllerProto_QuotaController_TrackedJob* mutable_tracked_jobs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_TrackedJob >*
      mutable_tracked_jobs();
  const ::com::android::server::job::StateControllerProto_QuotaController_TrackedJob& tracked_jobs(int index) const;
  ::com::android::server::job::StateControllerProto_QuotaController_TrackedJob* add_tracked_jobs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_TrackedJob >&
      tracked_jobs() const;

  // repeated .com.android.server.job.StateControllerProto.QuotaController.PackageStats package_stats = 5;
  int package_stats_size() const;
  void clear_package_stats();
  ::com::android::server::job::StateControllerProto_QuotaController_PackageStats* mutable_package_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_PackageStats >*
      mutable_package_stats();
  const ::com::android::server::job::StateControllerProto_QuotaController_PackageStats& package_stats(int index) const;
  ::com::android::server::job::StateControllerProto_QuotaController_PackageStats* add_package_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_PackageStats >&
      package_stats() const;

  // repeated .com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping uid_to_package_cache = 7;
  int uid_to_package_cache_size() const;
  void clear_uid_to_package_cache();
  ::com::android::server::job::StateControllerProto_QuotaController_UidPackageMapping* mutable_uid_to_package_cache(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_UidPackageMapping >*
      mutable_uid_to_package_cache();
  const ::com::android::server::job::StateControllerProto_QuotaController_UidPackageMapping& uid_to_package_cache(int index) const;
  ::com::android::server::job::StateControllerProto_QuotaController_UidPackageMapping* add_uid_to_package_cache();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_UidPackageMapping >&
      uid_to_package_cache() const;

  // optional .com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener in_quota_alarm_listener = 8;
  bool has_in_quota_alarm_listener() const;
  void clear_in_quota_alarm_listener();
  const ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener& in_quota_alarm_listener() const;
  ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener* release_in_quota_alarm_listener();
  ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener* mutable_in_quota_alarm_listener();
  void set_allocated_in_quota_alarm_listener(::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener* in_quota_alarm_listener);

  // optional int64 elapsed_realtime = 6;
  bool has_elapsed_realtime() const;
  void clear_elapsed_realtime();
  ::PROTOBUF_NAMESPACE_ID::int64 elapsed_realtime() const;
  void set_elapsed_realtime(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional bool is_charging = 1;
  bool has_is_charging() const;
  void clear_is_charging();
  bool is_charging() const;
  void set_is_charging(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.QuotaController)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > foreground_uids_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_TrackedJob > tracked_jobs_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_PackageStats > package_stats_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_UidPackageMapping > uid_to_package_cache_;
  ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener* in_quota_alarm_listener_;
  ::PROTOBUF_NAMESPACE_ID::int64 elapsed_realtime_;
  bool is_charging_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_StorageController_TrackedJob :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.StorageController.TrackedJob) */ {
 public:
  StateControllerProto_StorageController_TrackedJob();
  virtual ~StateControllerProto_StorageController_TrackedJob();

  StateControllerProto_StorageController_TrackedJob(const StateControllerProto_StorageController_TrackedJob& from);
  StateControllerProto_StorageController_TrackedJob(StateControllerProto_StorageController_TrackedJob&& from) noexcept
    : StateControllerProto_StorageController_TrackedJob() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_StorageController_TrackedJob& operator=(const StateControllerProto_StorageController_TrackedJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_StorageController_TrackedJob& operator=(StateControllerProto_StorageController_TrackedJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_StorageController_TrackedJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_StorageController_TrackedJob* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_StorageController_TrackedJob*>(
               &_StateControllerProto_StorageController_TrackedJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(StateControllerProto_StorageController_TrackedJob& a, StateControllerProto_StorageController_TrackedJob& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_StorageController_TrackedJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_StorageController_TrackedJob* New() const final {
    return CreateMaybeMessage<StateControllerProto_StorageController_TrackedJob>(nullptr);
  }

  StateControllerProto_StorageController_TrackedJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_StorageController_TrackedJob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_StorageController_TrackedJob& from);
  void MergeFrom(const StateControllerProto_StorageController_TrackedJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_StorageController_TrackedJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.StorageController.TrackedJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
    kSourceUidFieldNumber = 2,
  };
  // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
  bool has_info() const;
  void clear_info();
  const ::com::android::server::job::JobStatusShortInfoProto& info() const;
  ::com::android::server::job::JobStatusShortInfoProto* release_info();
  ::com::android::server::job::JobStatusShortInfoProto* mutable_info();
  void set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info);

  // optional int32 source_uid = 2;
  bool has_source_uid() const;
  void clear_source_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid() const;
  void set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.StorageController.TrackedJob)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::JobStatusShortInfoProto* info_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_StorageController :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.StorageController) */ {
 public:
  StateControllerProto_StorageController();
  virtual ~StateControllerProto_StorageController();

  StateControllerProto_StorageController(const StateControllerProto_StorageController& from);
  StateControllerProto_StorageController(StateControllerProto_StorageController&& from) noexcept
    : StateControllerProto_StorageController() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_StorageController& operator=(const StateControllerProto_StorageController& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_StorageController& operator=(StateControllerProto_StorageController&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_StorageController& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_StorageController* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_StorageController*>(
               &_StateControllerProto_StorageController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(StateControllerProto_StorageController& a, StateControllerProto_StorageController& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_StorageController* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_StorageController* New() const final {
    return CreateMaybeMessage<StateControllerProto_StorageController>(nullptr);
  }

  StateControllerProto_StorageController* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_StorageController>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_StorageController& from);
  void MergeFrom(const StateControllerProto_StorageController& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_StorageController* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.StorageController";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StateControllerProto_StorageController_TrackedJob TrackedJob;

  // accessors -------------------------------------------------------

  enum : int {
    kTrackedJobsFieldNumber = 3,
    kIsStorageNotLowFieldNumber = 1,
    kLastBroadcastSequenceNumberFieldNumber = 2,
  };
  // repeated .com.android.server.job.StateControllerProto.StorageController.TrackedJob tracked_jobs = 3;
  int tracked_jobs_size() const;
  void clear_tracked_jobs();
  ::com::android::server::job::StateControllerProto_StorageController_TrackedJob* mutable_tracked_jobs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_StorageController_TrackedJob >*
      mutable_tracked_jobs();
  const ::com::android::server::job::StateControllerProto_StorageController_TrackedJob& tracked_jobs(int index) const;
  ::com::android::server::job::StateControllerProto_StorageController_TrackedJob* add_tracked_jobs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_StorageController_TrackedJob >&
      tracked_jobs() const;

  // optional bool is_storage_not_low = 1;
  bool has_is_storage_not_low() const;
  void clear_is_storage_not_low();
  bool is_storage_not_low() const;
  void set_is_storage_not_low(bool value);

  // optional int32 last_broadcast_sequence_number = 2;
  bool has_last_broadcast_sequence_number() const;
  void clear_last_broadcast_sequence_number();
  ::PROTOBUF_NAMESPACE_ID::int32 last_broadcast_sequence_number() const;
  void set_last_broadcast_sequence_number(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.StorageController)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_StorageController_TrackedJob > tracked_jobs_;
  bool is_storage_not_low_;
  ::PROTOBUF_NAMESPACE_ID::int32 last_broadcast_sequence_number_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_TimeController_TrackedJob :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.TimeController.TrackedJob) */ {
 public:
  StateControllerProto_TimeController_TrackedJob();
  virtual ~StateControllerProto_TimeController_TrackedJob();

  StateControllerProto_TimeController_TrackedJob(const StateControllerProto_TimeController_TrackedJob& from);
  StateControllerProto_TimeController_TrackedJob(StateControllerProto_TimeController_TrackedJob&& from) noexcept
    : StateControllerProto_TimeController_TrackedJob() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_TimeController_TrackedJob& operator=(const StateControllerProto_TimeController_TrackedJob& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_TimeController_TrackedJob& operator=(StateControllerProto_TimeController_TrackedJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_TimeController_TrackedJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_TimeController_TrackedJob* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_TimeController_TrackedJob*>(
               &_StateControllerProto_TimeController_TrackedJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(StateControllerProto_TimeController_TrackedJob& a, StateControllerProto_TimeController_TrackedJob& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_TimeController_TrackedJob* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_TimeController_TrackedJob* New() const final {
    return CreateMaybeMessage<StateControllerProto_TimeController_TrackedJob>(nullptr);
  }

  StateControllerProto_TimeController_TrackedJob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_TimeController_TrackedJob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_TimeController_TrackedJob& from);
  void MergeFrom(const StateControllerProto_TimeController_TrackedJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_TimeController_TrackedJob* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.TimeController.TrackedJob";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
    kSourceUidFieldNumber = 2,
    kHasTimingDelayConstraintFieldNumber = 3,
    kHasDeadlineConstraintFieldNumber = 5,
    kDelayTimeRemainingMsFieldNumber = 4,
    kTimeRemainingUntilDeadlineMsFieldNumber = 6,
  };
  // optional .com.android.server.job.JobStatusShortInfoProto info = 1;
  bool has_info() const;
  void clear_info();
  const ::com::android::server::job::JobStatusShortInfoProto& info() const;
  ::com::android::server::job::JobStatusShortInfoProto* release_info();
  ::com::android::server::job::JobStatusShortInfoProto* mutable_info();
  void set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info);

  // optional int32 source_uid = 2;
  bool has_source_uid() const;
  void clear_source_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid() const;
  void set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool has_timing_delay_constraint = 3;
  bool has_has_timing_delay_constraint() const;
  void clear_has_timing_delay_constraint();
  bool has_timing_delay_constraint() const;
  void set_has_timing_delay_constraint(bool value);

  // optional bool has_deadline_constraint = 5;
  bool has_has_deadline_constraint() const;
  void clear_has_deadline_constraint();
  bool has_deadline_constraint() const;
  void set_has_deadline_constraint(bool value);

  // optional int64 delay_time_remaining_ms = 4;
  bool has_delay_time_remaining_ms() const;
  void clear_delay_time_remaining_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 delay_time_remaining_ms() const;
  void set_delay_time_remaining_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_remaining_until_deadline_ms = 6;
  bool has_time_remaining_until_deadline_ms() const;
  void clear_time_remaining_until_deadline_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_remaining_until_deadline_ms() const;
  void set_time_remaining_until_deadline_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.TimeController.TrackedJob)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::JobStatusShortInfoProto* info_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid_;
  bool has_timing_delay_constraint_;
  bool has_deadline_constraint_;
  ::PROTOBUF_NAMESPACE_ID::int64 delay_time_remaining_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_remaining_until_deadline_ms_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto_TimeController :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto.TimeController) */ {
 public:
  StateControllerProto_TimeController();
  virtual ~StateControllerProto_TimeController();

  StateControllerProto_TimeController(const StateControllerProto_TimeController& from);
  StateControllerProto_TimeController(StateControllerProto_TimeController&& from) noexcept
    : StateControllerProto_TimeController() {
    *this = ::std::move(from);
  }

  inline StateControllerProto_TimeController& operator=(const StateControllerProto_TimeController& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto_TimeController& operator=(StateControllerProto_TimeController&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto_TimeController& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto_TimeController* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto_TimeController*>(
               &_StateControllerProto_TimeController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(StateControllerProto_TimeController& a, StateControllerProto_TimeController& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto_TimeController* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto_TimeController* New() const final {
    return CreateMaybeMessage<StateControllerProto_TimeController>(nullptr);
  }

  StateControllerProto_TimeController* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto_TimeController>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto_TimeController& from);
  void MergeFrom(const StateControllerProto_TimeController& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto_TimeController* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto.TimeController";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StateControllerProto_TimeController_TrackedJob TrackedJob;

  // accessors -------------------------------------------------------

  enum : int {
    kTrackedJobsFieldNumber = 4,
    kNowElapsedRealtimeFieldNumber = 1,
    kTimeUntilNextDelayAlarmMsFieldNumber = 2,
    kTimeUntilNextDeadlineAlarmMsFieldNumber = 3,
  };
  // repeated .com.android.server.job.StateControllerProto.TimeController.TrackedJob tracked_jobs = 4;
  int tracked_jobs_size() const;
  void clear_tracked_jobs();
  ::com::android::server::job::StateControllerProto_TimeController_TrackedJob* mutable_tracked_jobs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_TimeController_TrackedJob >*
      mutable_tracked_jobs();
  const ::com::android::server::job::StateControllerProto_TimeController_TrackedJob& tracked_jobs(int index) const;
  ::com::android::server::job::StateControllerProto_TimeController_TrackedJob* add_tracked_jobs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_TimeController_TrackedJob >&
      tracked_jobs() const;

  // optional int64 now_elapsed_realtime = 1;
  bool has_now_elapsed_realtime() const;
  void clear_now_elapsed_realtime();
  ::PROTOBUF_NAMESPACE_ID::int64 now_elapsed_realtime() const;
  void set_now_elapsed_realtime(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_until_next_delay_alarm_ms = 2;
  bool has_time_until_next_delay_alarm_ms() const;
  void clear_time_until_next_delay_alarm_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_next_delay_alarm_ms() const;
  void set_time_until_next_delay_alarm_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_until_next_deadline_alarm_ms = 3;
  bool has_time_until_next_deadline_alarm_ms() const;
  void clear_time_until_next_deadline_alarm_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_next_deadline_alarm_ms() const;
  void set_time_until_next_deadline_alarm_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto.TimeController)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_TimeController_TrackedJob > tracked_jobs_;
  ::PROTOBUF_NAMESPACE_ID::int64 now_elapsed_realtime_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_next_delay_alarm_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_next_deadline_alarm_ms_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class StateControllerProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.StateControllerProto) */ {
 public:
  StateControllerProto();
  virtual ~StateControllerProto();

  StateControllerProto(const StateControllerProto& from);
  StateControllerProto(StateControllerProto&& from) noexcept
    : StateControllerProto() {
    *this = ::std::move(from);
  }

  inline StateControllerProto& operator=(const StateControllerProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateControllerProto& operator=(StateControllerProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StateControllerProto& default_instance();

  enum ControllerCase {
    kBackground = 1,
    kBattery = 2,
    kConnectivity = 3,
    kContentObserver = 4,
    kDeviceIdle = 5,
    kIdle = 6,
    kQuota = 9,
    kStorage = 7,
    kTime = 8,
    CONTROLLER_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateControllerProto* internal_default_instance() {
    return reinterpret_cast<const StateControllerProto*>(
               &_StateControllerProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(StateControllerProto& a, StateControllerProto& b) {
    a.Swap(&b);
  }
  inline void Swap(StateControllerProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateControllerProto* New() const final {
    return CreateMaybeMessage<StateControllerProto>(nullptr);
  }

  StateControllerProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateControllerProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StateControllerProto& from);
  void MergeFrom(const StateControllerProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateControllerProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.StateControllerProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StateControllerProto_BackgroundJobsController BackgroundJobsController;
  typedef StateControllerProto_BatteryController BatteryController;
  typedef StateControllerProto_ConnectivityController ConnectivityController;
  typedef StateControllerProto_ContentObserverController ContentObserverController;
  typedef StateControllerProto_DeviceIdleJobsController DeviceIdleJobsController;
  typedef StateControllerProto_IdleController IdleController;
  typedef StateControllerProto_QuotaController QuotaController;
  typedef StateControllerProto_StorageController StorageController;
  typedef StateControllerProto_TimeController TimeController;

  // accessors -------------------------------------------------------

  enum : int {
    kBackgroundFieldNumber = 1,
    kBatteryFieldNumber = 2,
    kConnectivityFieldNumber = 3,
    kContentObserverFieldNumber = 4,
    kDeviceIdleFieldNumber = 5,
    kIdleFieldNumber = 6,
    kQuotaFieldNumber = 9,
    kStorageFieldNumber = 7,
    kTimeFieldNumber = 8,
  };
  // optional .com.android.server.job.StateControllerProto.BackgroundJobsController background = 1;
  bool has_background() const;
  void clear_background();
  const ::com::android::server::job::StateControllerProto_BackgroundJobsController& background() const;
  ::com::android::server::job::StateControllerProto_BackgroundJobsController* release_background();
  ::com::android::server::job::StateControllerProto_BackgroundJobsController* mutable_background();
  void set_allocated_background(::com::android::server::job::StateControllerProto_BackgroundJobsController* background);

  // optional .com.android.server.job.StateControllerProto.BatteryController battery = 2;
  bool has_battery() const;
  void clear_battery();
  const ::com::android::server::job::StateControllerProto_BatteryController& battery() const;
  ::com::android::server::job::StateControllerProto_BatteryController* release_battery();
  ::com::android::server::job::StateControllerProto_BatteryController* mutable_battery();
  void set_allocated_battery(::com::android::server::job::StateControllerProto_BatteryController* battery);

  // optional .com.android.server.job.StateControllerProto.ConnectivityController connectivity = 3;
  bool has_connectivity() const;
  void clear_connectivity();
  const ::com::android::server::job::StateControllerProto_ConnectivityController& connectivity() const;
  ::com::android::server::job::StateControllerProto_ConnectivityController* release_connectivity();
  ::com::android::server::job::StateControllerProto_ConnectivityController* mutable_connectivity();
  void set_allocated_connectivity(::com::android::server::job::StateControllerProto_ConnectivityController* connectivity);

  // optional .com.android.server.job.StateControllerProto.ContentObserverController content_observer = 4;
  bool has_content_observer() const;
  void clear_content_observer();
  const ::com::android::server::job::StateControllerProto_ContentObserverController& content_observer() const;
  ::com::android::server::job::StateControllerProto_ContentObserverController* release_content_observer();
  ::com::android::server::job::StateControllerProto_ContentObserverController* mutable_content_observer();
  void set_allocated_content_observer(::com::android::server::job::StateControllerProto_ContentObserverController* content_observer);

  // optional .com.android.server.job.StateControllerProto.DeviceIdleJobsController device_idle = 5;
  bool has_device_idle() const;
  void clear_device_idle();
  const ::com::android::server::job::StateControllerProto_DeviceIdleJobsController& device_idle() const;
  ::com::android::server::job::StateControllerProto_DeviceIdleJobsController* release_device_idle();
  ::com::android::server::job::StateControllerProto_DeviceIdleJobsController* mutable_device_idle();
  void set_allocated_device_idle(::com::android::server::job::StateControllerProto_DeviceIdleJobsController* device_idle);

  // optional .com.android.server.job.StateControllerProto.IdleController idle = 6;
  bool has_idle() const;
  void clear_idle();
  const ::com::android::server::job::StateControllerProto_IdleController& idle() const;
  ::com::android::server::job::StateControllerProto_IdleController* release_idle();
  ::com::android::server::job::StateControllerProto_IdleController* mutable_idle();
  void set_allocated_idle(::com::android::server::job::StateControllerProto_IdleController* idle);

  // optional .com.android.server.job.StateControllerProto.QuotaController quota = 9;
  bool has_quota() const;
  void clear_quota();
  const ::com::android::server::job::StateControllerProto_QuotaController& quota() const;
  ::com::android::server::job::StateControllerProto_QuotaController* release_quota();
  ::com::android::server::job::StateControllerProto_QuotaController* mutable_quota();
  void set_allocated_quota(::com::android::server::job::StateControllerProto_QuotaController* quota);

  // optional .com.android.server.job.StateControllerProto.StorageController storage = 7;
  bool has_storage() const;
  void clear_storage();
  const ::com::android::server::job::StateControllerProto_StorageController& storage() const;
  ::com::android::server::job::StateControllerProto_StorageController* release_storage();
  ::com::android::server::job::StateControllerProto_StorageController* mutable_storage();
  void set_allocated_storage(::com::android::server::job::StateControllerProto_StorageController* storage);

  // optional .com.android.server.job.StateControllerProto.TimeController time = 8;
  bool has_time() const;
  void clear_time();
  const ::com::android::server::job::StateControllerProto_TimeController& time() const;
  ::com::android::server::job::StateControllerProto_TimeController* release_time();
  ::com::android::server::job::StateControllerProto_TimeController* mutable_time();
  void set_allocated_time(::com::android::server::job::StateControllerProto_TimeController* time);

  void clear_controller();
  ControllerCase controller_case() const;
  // @@protoc_insertion_point(class_scope:com.android.server.job.StateControllerProto)
 private:
  class _Internal;
  void set_has_background();
  void set_has_battery();
  void set_has_connectivity();
  void set_has_content_observer();
  void set_has_device_idle();
  void set_has_idle();
  void set_has_quota();
  void set_has_storage();
  void set_has_time();

  inline bool has_controller() const;
  inline void clear_has_controller();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  union ControllerUnion {
    ControllerUnion() {}
    ::com::android::server::job::StateControllerProto_BackgroundJobsController* background_;
    ::com::android::server::job::StateControllerProto_BatteryController* battery_;
    ::com::android::server::job::StateControllerProto_ConnectivityController* connectivity_;
    ::com::android::server::job::StateControllerProto_ContentObserverController* content_observer_;
    ::com::android::server::job::StateControllerProto_DeviceIdleJobsController* device_idle_;
    ::com::android::server::job::StateControllerProto_IdleController* idle_;
    ::com::android::server::job::StateControllerProto_QuotaController* quota_;
    ::com::android::server::job::StateControllerProto_StorageController* storage_;
    ::com::android::server::job::StateControllerProto_TimeController* time_;
  } controller_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class DataSetProto_PackageEntryProto_State :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.DataSetProto.PackageEntryProto.State) */ {
 public:
  DataSetProto_PackageEntryProto_State();
  virtual ~DataSetProto_PackageEntryProto_State();

  DataSetProto_PackageEntryProto_State(const DataSetProto_PackageEntryProto_State& from);
  DataSetProto_PackageEntryProto_State(DataSetProto_PackageEntryProto_State&& from) noexcept
    : DataSetProto_PackageEntryProto_State() {
    *this = ::std::move(from);
  }

  inline DataSetProto_PackageEntryProto_State& operator=(const DataSetProto_PackageEntryProto_State& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataSetProto_PackageEntryProto_State& operator=(DataSetProto_PackageEntryProto_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DataSetProto_PackageEntryProto_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataSetProto_PackageEntryProto_State* internal_default_instance() {
    return reinterpret_cast<const DataSetProto_PackageEntryProto_State*>(
               &_DataSetProto_PackageEntryProto_State_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(DataSetProto_PackageEntryProto_State& a, DataSetProto_PackageEntryProto_State& b) {
    a.Swap(&b);
  }
  inline void Swap(DataSetProto_PackageEntryProto_State* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataSetProto_PackageEntryProto_State* New() const final {
    return CreateMaybeMessage<DataSetProto_PackageEntryProto_State>(nullptr);
  }

  DataSetProto_PackageEntryProto_State* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataSetProto_PackageEntryProto_State>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const DataSetProto_PackageEntryProto_State& from);
  void MergeFrom(const DataSetProto_PackageEntryProto_State& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DataSetProto_PackageEntryProto_State* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.DataSetProto.PackageEntryProto.State";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDurationMsFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // optional int64 duration_ms = 1;
  bool has_duration_ms() const;
  void clear_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 duration_ms() const;
  void set_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 count = 2;
  bool has_count() const;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.DataSetProto.PackageEntryProto.State)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class DataSetProto_PackageEntryProto_StopReasonCount :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.DataSetProto.PackageEntryProto.StopReasonCount) */ {
 public:
  DataSetProto_PackageEntryProto_StopReasonCount();
  virtual ~DataSetProto_PackageEntryProto_StopReasonCount();

  DataSetProto_PackageEntryProto_StopReasonCount(const DataSetProto_PackageEntryProto_StopReasonCount& from);
  DataSetProto_PackageEntryProto_StopReasonCount(DataSetProto_PackageEntryProto_StopReasonCount&& from) noexcept
    : DataSetProto_PackageEntryProto_StopReasonCount() {
    *this = ::std::move(from);
  }

  inline DataSetProto_PackageEntryProto_StopReasonCount& operator=(const DataSetProto_PackageEntryProto_StopReasonCount& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataSetProto_PackageEntryProto_StopReasonCount& operator=(DataSetProto_PackageEntryProto_StopReasonCount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DataSetProto_PackageEntryProto_StopReasonCount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataSetProto_PackageEntryProto_StopReasonCount* internal_default_instance() {
    return reinterpret_cast<const DataSetProto_PackageEntryProto_StopReasonCount*>(
               &_DataSetProto_PackageEntryProto_StopReasonCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(DataSetProto_PackageEntryProto_StopReasonCount& a, DataSetProto_PackageEntryProto_StopReasonCount& b) {
    a.Swap(&b);
  }
  inline void Swap(DataSetProto_PackageEntryProto_StopReasonCount* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataSetProto_PackageEntryProto_StopReasonCount* New() const final {
    return CreateMaybeMessage<DataSetProto_PackageEntryProto_StopReasonCount>(nullptr);
  }

  DataSetProto_PackageEntryProto_StopReasonCount* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataSetProto_PackageEntryProto_StopReasonCount>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const DataSetProto_PackageEntryProto_StopReasonCount& from);
  void MergeFrom(const DataSetProto_PackageEntryProto_StopReasonCount& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DataSetProto_PackageEntryProto_StopReasonCount* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.DataSetProto.PackageEntryProto.StopReasonCount";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCountFieldNumber = 2,
    kReasonFieldNumber = 1,
  };
  // optional int32 count = 2;
  bool has_count() const;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional .android.app.job.InternalStopReasonEnum reason = 1;
  bool has_reason() const;
  void clear_reason();
  ::android::app::job::InternalStopReasonEnum reason() const;
  void set_reason(::android::app::job::InternalStopReasonEnum value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.DataSetProto.PackageEntryProto.StopReasonCount)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  int reason_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class DataSetProto_PackageEntryProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.DataSetProto.PackageEntryProto) */ {
 public:
  DataSetProto_PackageEntryProto();
  virtual ~DataSetProto_PackageEntryProto();

  DataSetProto_PackageEntryProto(const DataSetProto_PackageEntryProto& from);
  DataSetProto_PackageEntryProto(DataSetProto_PackageEntryProto&& from) noexcept
    : DataSetProto_PackageEntryProto() {
    *this = ::std::move(from);
  }

  inline DataSetProto_PackageEntryProto& operator=(const DataSetProto_PackageEntryProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataSetProto_PackageEntryProto& operator=(DataSetProto_PackageEntryProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DataSetProto_PackageEntryProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataSetProto_PackageEntryProto* internal_default_instance() {
    return reinterpret_cast<const DataSetProto_PackageEntryProto*>(
               &_DataSetProto_PackageEntryProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(DataSetProto_PackageEntryProto& a, DataSetProto_PackageEntryProto& b) {
    a.Swap(&b);
  }
  inline void Swap(DataSetProto_PackageEntryProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataSetProto_PackageEntryProto* New() const final {
    return CreateMaybeMessage<DataSetProto_PackageEntryProto>(nullptr);
  }

  DataSetProto_PackageEntryProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataSetProto_PackageEntryProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const DataSetProto_PackageEntryProto& from);
  void MergeFrom(const DataSetProto_PackageEntryProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DataSetProto_PackageEntryProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.DataSetProto.PackageEntryProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef DataSetProto_PackageEntryProto_State State;
  typedef DataSetProto_PackageEntryProto_StopReasonCount StopReasonCount;

  // accessors -------------------------------------------------------

  enum : int {
    kStopReasonsFieldNumber = 9,
    kPackageNameFieldNumber = 2,
    kPendingStateFieldNumber = 3,
    kActiveStateFieldNumber = 4,
    kActiveTopStateFieldNumber = 5,
    kUidFieldNumber = 1,
    kPendingFieldNumber = 6,
    kActiveFieldNumber = 7,
    kActiveTopFieldNumber = 8,
  };
  // repeated .com.android.server.job.DataSetProto.PackageEntryProto.StopReasonCount stop_reasons = 9;
  int stop_reasons_size() const;
  void clear_stop_reasons();
  ::com::android::server::job::DataSetProto_PackageEntryProto_StopReasonCount* mutable_stop_reasons(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto_PackageEntryProto_StopReasonCount >*
      mutable_stop_reasons();
  const ::com::android::server::job::DataSetProto_PackageEntryProto_StopReasonCount& stop_reasons(int index) const;
  ::com::android::server::job::DataSetProto_PackageEntryProto_StopReasonCount* add_stop_reasons();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto_PackageEntryProto_StopReasonCount >&
      stop_reasons() const;

  // optional string package_name = 2;
  bool has_package_name() const;
  void clear_package_name();
  const std::string& package_name() const;
  void set_package_name(const std::string& value);
  void set_package_name(std::string&& value);
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  std::string* mutable_package_name();
  std::string* release_package_name();
  void set_allocated_package_name(std::string* package_name);

  // optional .com.android.server.job.DataSetProto.PackageEntryProto.State pending_state = 3;
  bool has_pending_state() const;
  void clear_pending_state();
  const ::com::android::server::job::DataSetProto_PackageEntryProto_State& pending_state() const;
  ::com::android::server::job::DataSetProto_PackageEntryProto_State* release_pending_state();
  ::com::android::server::job::DataSetProto_PackageEntryProto_State* mutable_pending_state();
  void set_allocated_pending_state(::com::android::server::job::DataSetProto_PackageEntryProto_State* pending_state);

  // optional .com.android.server.job.DataSetProto.PackageEntryProto.State active_state = 4;
  bool has_active_state() const;
  void clear_active_state();
  const ::com::android::server::job::DataSetProto_PackageEntryProto_State& active_state() const;
  ::com::android::server::job::DataSetProto_PackageEntryProto_State* release_active_state();
  ::com::android::server::job::DataSetProto_PackageEntryProto_State* mutable_active_state();
  void set_allocated_active_state(::com::android::server::job::DataSetProto_PackageEntryProto_State* active_state);

  // optional .com.android.server.job.DataSetProto.PackageEntryProto.State active_top_state = 5;
  bool has_active_top_state() const;
  void clear_active_top_state();
  const ::com::android::server::job::DataSetProto_PackageEntryProto_State& active_top_state() const;
  ::com::android::server::job::DataSetProto_PackageEntryProto_State* release_active_top_state();
  ::com::android::server::job::DataSetProto_PackageEntryProto_State* mutable_active_top_state();
  void set_allocated_active_top_state(::com::android::server::job::DataSetProto_PackageEntryProto_State* active_top_state);

  // optional int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool pending = 6;
  bool has_pending() const;
  void clear_pending();
  bool pending() const;
  void set_pending(bool value);

  // optional bool active = 7;
  bool has_active() const;
  void clear_active();
  bool active() const;
  void set_active(bool value);

  // optional bool active_top = 8;
  bool has_active_top() const;
  void clear_active_top();
  bool active_top() const;
  void set_active_top(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.DataSetProto.PackageEntryProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto_PackageEntryProto_StopReasonCount > stop_reasons_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr package_name_;
  ::com::android::server::job::DataSetProto_PackageEntryProto_State* pending_state_;
  ::com::android::server::job::DataSetProto_PackageEntryProto_State* active_state_;
  ::com::android::server::job::DataSetProto_PackageEntryProto_State* active_top_state_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  bool pending_;
  bool active_;
  bool active_top_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class DataSetProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.DataSetProto) */ {
 public:
  DataSetProto();
  virtual ~DataSetProto();

  DataSetProto(const DataSetProto& from);
  DataSetProto(DataSetProto&& from) noexcept
    : DataSetProto() {
    *this = ::std::move(from);
  }

  inline DataSetProto& operator=(const DataSetProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataSetProto& operator=(DataSetProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DataSetProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataSetProto* internal_default_instance() {
    return reinterpret_cast<const DataSetProto*>(
               &_DataSetProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(DataSetProto& a, DataSetProto& b) {
    a.Swap(&b);
  }
  inline void Swap(DataSetProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataSetProto* New() const final {
    return CreateMaybeMessage<DataSetProto>(nullptr);
  }

  DataSetProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataSetProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const DataSetProto& from);
  void MergeFrom(const DataSetProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DataSetProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.DataSetProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef DataSetProto_PackageEntryProto PackageEntryProto;

  // accessors -------------------------------------------------------

  enum : int {
    kPackageEntriesFieldNumber = 4,
    kStartClockTimeMsFieldNumber = 1,
    kElapsedTimeMsFieldNumber = 2,
    kPeriodMsFieldNumber = 3,
    kMaxConcurrencyFieldNumber = 5,
    kMaxForegroundConcurrencyFieldNumber = 6,
  };
  // repeated .com.android.server.job.DataSetProto.PackageEntryProto package_entries = 4;
  int package_entries_size() const;
  void clear_package_entries();
  ::com::android::server::job::DataSetProto_PackageEntryProto* mutable_package_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto_PackageEntryProto >*
      mutable_package_entries();
  const ::com::android::server::job::DataSetProto_PackageEntryProto& package_entries(int index) const;
  ::com::android::server::job::DataSetProto_PackageEntryProto* add_package_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto_PackageEntryProto >&
      package_entries() const;

  // optional int64 start_clock_time_ms = 1;
  bool has_start_clock_time_ms() const;
  void clear_start_clock_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 start_clock_time_ms() const;
  void set_start_clock_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 elapsed_time_ms = 2;
  bool has_elapsed_time_ms() const;
  void clear_elapsed_time_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 elapsed_time_ms() const;
  void set_elapsed_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 period_ms = 3;
  bool has_period_ms() const;
  void clear_period_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 period_ms() const;
  void set_period_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 max_concurrency = 5;
  bool has_max_concurrency() const;
  void clear_max_concurrency();
  ::PROTOBUF_NAMESPACE_ID::int32 max_concurrency() const;
  void set_max_concurrency(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_foreground_concurrency = 6;
  bool has_max_foreground_concurrency() const;
  void clear_max_foreground_concurrency();
  ::PROTOBUF_NAMESPACE_ID::int32 max_foreground_concurrency() const;
  void set_max_foreground_concurrency(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.DataSetProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto_PackageEntryProto > package_entries_;
  ::PROTOBUF_NAMESPACE_ID::int64 start_clock_time_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 elapsed_time_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 period_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_concurrency_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_foreground_concurrency_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class GrantedUriPermissionsDumpProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.GrantedUriPermissionsDumpProto) */ {
 public:
  GrantedUriPermissionsDumpProto();
  virtual ~GrantedUriPermissionsDumpProto();

  GrantedUriPermissionsDumpProto(const GrantedUriPermissionsDumpProto& from);
  GrantedUriPermissionsDumpProto(GrantedUriPermissionsDumpProto&& from) noexcept
    : GrantedUriPermissionsDumpProto() {
    *this = ::std::move(from);
  }

  inline GrantedUriPermissionsDumpProto& operator=(const GrantedUriPermissionsDumpProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GrantedUriPermissionsDumpProto& operator=(GrantedUriPermissionsDumpProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const GrantedUriPermissionsDumpProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GrantedUriPermissionsDumpProto* internal_default_instance() {
    return reinterpret_cast<const GrantedUriPermissionsDumpProto*>(
               &_GrantedUriPermissionsDumpProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(GrantedUriPermissionsDumpProto& a, GrantedUriPermissionsDumpProto& b) {
    a.Swap(&b);
  }
  inline void Swap(GrantedUriPermissionsDumpProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GrantedUriPermissionsDumpProto* New() const final {
    return CreateMaybeMessage<GrantedUriPermissionsDumpProto>(nullptr);
  }

  GrantedUriPermissionsDumpProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GrantedUriPermissionsDumpProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const GrantedUriPermissionsDumpProto& from);
  void MergeFrom(const GrantedUriPermissionsDumpProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GrantedUriPermissionsDumpProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.GrantedUriPermissionsDumpProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrisFieldNumber = 5,
    kTagFieldNumber = 3,
    kPermissionOwnerFieldNumber = 4,
    kFlagsFieldNumber = 1,
    kSourceUserIdFieldNumber = 2,
  };
  // repeated string uris = 5;
  int uris_size() const;
  void clear_uris();
  const std::string& uris(int index) const;
  std::string* mutable_uris(int index);
  void set_uris(int index, const std::string& value);
  void set_uris(int index, std::string&& value);
  void set_uris(int index, const char* value);
  void set_uris(int index, const char* value, size_t size);
  std::string* add_uris();
  void add_uris(const std::string& value);
  void add_uris(std::string&& value);
  void add_uris(const char* value);
  void add_uris(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& uris() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_uris();

  // optional string tag = 3;
  bool has_tag() const;
  void clear_tag();
  const std::string& tag() const;
  void set_tag(const std::string& value);
  void set_tag(std::string&& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  std::string* mutable_tag();
  std::string* release_tag();
  void set_allocated_tag(std::string* tag);

  // optional string permission_owner = 4;
  bool has_permission_owner() const;
  void clear_permission_owner();
  const std::string& permission_owner() const;
  void set_permission_owner(const std::string& value);
  void set_permission_owner(std::string&& value);
  void set_permission_owner(const char* value);
  void set_permission_owner(const char* value, size_t size);
  std::string* mutable_permission_owner();
  std::string* release_permission_owner();
  void set_allocated_permission_owner(std::string* permission_owner);

  // optional int32 flags = 1 [(.android.privacy) = {
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 source_user_id = 2 [(.android.privacy) = {
  bool has_source_user_id() const;
  void clear_source_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 source_user_id() const;
  void set_source_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.GrantedUriPermissionsDumpProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> uris_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr permission_owner_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_user_id_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobPackageTrackerDumpProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobPackageTrackerDumpProto) */ {
 public:
  JobPackageTrackerDumpProto();
  virtual ~JobPackageTrackerDumpProto();

  JobPackageTrackerDumpProto(const JobPackageTrackerDumpProto& from);
  JobPackageTrackerDumpProto(JobPackageTrackerDumpProto&& from) noexcept
    : JobPackageTrackerDumpProto() {
    *this = ::std::move(from);
  }

  inline JobPackageTrackerDumpProto& operator=(const JobPackageTrackerDumpProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobPackageTrackerDumpProto& operator=(JobPackageTrackerDumpProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobPackageTrackerDumpProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobPackageTrackerDumpProto* internal_default_instance() {
    return reinterpret_cast<const JobPackageTrackerDumpProto*>(
               &_JobPackageTrackerDumpProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(JobPackageTrackerDumpProto& a, JobPackageTrackerDumpProto& b) {
    a.Swap(&b);
  }
  inline void Swap(JobPackageTrackerDumpProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobPackageTrackerDumpProto* New() const final {
    return CreateMaybeMessage<JobPackageTrackerDumpProto>(nullptr);
  }

  JobPackageTrackerDumpProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobPackageTrackerDumpProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobPackageTrackerDumpProto& from);
  void MergeFrom(const JobPackageTrackerDumpProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobPackageTrackerDumpProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobPackageTrackerDumpProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHistoricalStatsFieldNumber = 1,
    kCurrentStatsFieldNumber = 2,
  };
  // repeated .com.android.server.job.DataSetProto historical_stats = 1;
  int historical_stats_size() const;
  void clear_historical_stats();
  ::com::android::server::job::DataSetProto* mutable_historical_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto >*
      mutable_historical_stats();
  const ::com::android::server::job::DataSetProto& historical_stats(int index) const;
  ::com::android::server::job::DataSetProto* add_historical_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto >&
      historical_stats() const;

  // optional .com.android.server.job.DataSetProto current_stats = 2;
  bool has_current_stats() const;
  void clear_current_stats();
  const ::com::android::server::job::DataSetProto& current_stats() const;
  ::com::android::server::job::DataSetProto* release_current_stats();
  ::com::android::server::job::DataSetProto* mutable_current_stats();
  void set_allocated_current_stats(::com::android::server::job::DataSetProto* current_stats);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobPackageTrackerDumpProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto > historical_stats_;
  ::com::android::server::job::DataSetProto* current_stats_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobPackageHistoryProto_HistoryEvent :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobPackageHistoryProto.HistoryEvent) */ {
 public:
  JobPackageHistoryProto_HistoryEvent();
  virtual ~JobPackageHistoryProto_HistoryEvent();

  JobPackageHistoryProto_HistoryEvent(const JobPackageHistoryProto_HistoryEvent& from);
  JobPackageHistoryProto_HistoryEvent(JobPackageHistoryProto_HistoryEvent&& from) noexcept
    : JobPackageHistoryProto_HistoryEvent() {
    *this = ::std::move(from);
  }

  inline JobPackageHistoryProto_HistoryEvent& operator=(const JobPackageHistoryProto_HistoryEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobPackageHistoryProto_HistoryEvent& operator=(JobPackageHistoryProto_HistoryEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobPackageHistoryProto_HistoryEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobPackageHistoryProto_HistoryEvent* internal_default_instance() {
    return reinterpret_cast<const JobPackageHistoryProto_HistoryEvent*>(
               &_JobPackageHistoryProto_HistoryEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(JobPackageHistoryProto_HistoryEvent& a, JobPackageHistoryProto_HistoryEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(JobPackageHistoryProto_HistoryEvent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobPackageHistoryProto_HistoryEvent* New() const final {
    return CreateMaybeMessage<JobPackageHistoryProto_HistoryEvent>(nullptr);
  }

  JobPackageHistoryProto_HistoryEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobPackageHistoryProto_HistoryEvent>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobPackageHistoryProto_HistoryEvent& from);
  void MergeFrom(const JobPackageHistoryProto_HistoryEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobPackageHistoryProto_HistoryEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobPackageHistoryProto.HistoryEvent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagFieldNumber = 5,
    kTimeSinceEventMsFieldNumber = 2,
    kEventFieldNumber = 1,
    kUidFieldNumber = 3,
    kJobIdFieldNumber = 4,
    kStopReasonFieldNumber = 6,
  };
  // optional string tag = 5;
  bool has_tag() const;
  void clear_tag();
  const std::string& tag() const;
  void set_tag(const std::string& value);
  void set_tag(std::string&& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  std::string* mutable_tag();
  std::string* release_tag();
  void set_allocated_tag(std::string* tag);

  // optional int64 time_since_event_ms = 2;
  bool has_time_since_event_ms() const;
  void clear_time_since_event_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_event_ms() const;
  void set_time_since_event_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional .com.android.server.job.JobPackageHistoryProto.Event event = 1;
  bool has_event() const;
  void clear_event();
  ::com::android::server::job::JobPackageHistoryProto_Event event() const;
  void set_event(::com::android::server::job::JobPackageHistoryProto_Event value);

  // optional int32 uid = 3;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 job_id = 4;
  bool has_job_id() const;
  void clear_job_id();
  ::PROTOBUF_NAMESPACE_ID::int32 job_id() const;
  void set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional .android.app.job.InternalStopReasonEnum stop_reason = 6;
  bool has_stop_reason() const;
  void clear_stop_reason();
  ::android::app::job::InternalStopReasonEnum stop_reason() const;
  void set_stop_reason(::android::app::job::InternalStopReasonEnum value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobPackageHistoryProto.HistoryEvent)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_event_ms_;
  int event_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 job_id_;
  int stop_reason_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobPackageHistoryProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobPackageHistoryProto) */ {
 public:
  JobPackageHistoryProto();
  virtual ~JobPackageHistoryProto();

  JobPackageHistoryProto(const JobPackageHistoryProto& from);
  JobPackageHistoryProto(JobPackageHistoryProto&& from) noexcept
    : JobPackageHistoryProto() {
    *this = ::std::move(from);
  }

  inline JobPackageHistoryProto& operator=(const JobPackageHistoryProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobPackageHistoryProto& operator=(JobPackageHistoryProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobPackageHistoryProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobPackageHistoryProto* internal_default_instance() {
    return reinterpret_cast<const JobPackageHistoryProto*>(
               &_JobPackageHistoryProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(JobPackageHistoryProto& a, JobPackageHistoryProto& b) {
    a.Swap(&b);
  }
  inline void Swap(JobPackageHistoryProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobPackageHistoryProto* New() const final {
    return CreateMaybeMessage<JobPackageHistoryProto>(nullptr);
  }

  JobPackageHistoryProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobPackageHistoryProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobPackageHistoryProto& from);
  void MergeFrom(const JobPackageHistoryProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobPackageHistoryProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobPackageHistoryProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef JobPackageHistoryProto_HistoryEvent HistoryEvent;

  typedef JobPackageHistoryProto_Event Event;
  static constexpr Event UNKNOWN =
    JobPackageHistoryProto_Event_UNKNOWN;
  static constexpr Event START_JOB =
    JobPackageHistoryProto_Event_START_JOB;
  static constexpr Event STOP_JOB =
    JobPackageHistoryProto_Event_STOP_JOB;
  static constexpr Event START_PERIODIC_JOB =
    JobPackageHistoryProto_Event_START_PERIODIC_JOB;
  static constexpr Event STOP_PERIODIC_JOB =
    JobPackageHistoryProto_Event_STOP_PERIODIC_JOB;
  static inline bool Event_IsValid(int value) {
    return JobPackageHistoryProto_Event_IsValid(value);
  }
  static constexpr Event Event_MIN =
    JobPackageHistoryProto_Event_Event_MIN;
  static constexpr Event Event_MAX =
    JobPackageHistoryProto_Event_Event_MAX;
  static constexpr int Event_ARRAYSIZE =
    JobPackageHistoryProto_Event_Event_ARRAYSIZE;
  template<typename T>
  static inline const std::string& Event_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Event>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Event_Name.");
    return JobPackageHistoryProto_Event_Name(enum_t_value);
  }
  static inline bool Event_Parse(const std::string& name,
      Event* value) {
    return JobPackageHistoryProto_Event_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kHistoryEventFieldNumber = 1,
  };
  // repeated .com.android.server.job.JobPackageHistoryProto.HistoryEvent history_event = 1;
  int history_event_size() const;
  void clear_history_event();
  ::com::android::server::job::JobPackageHistoryProto_HistoryEvent* mutable_history_event(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobPackageHistoryProto_HistoryEvent >*
      mutable_history_event();
  const ::com::android::server::job::JobPackageHistoryProto_HistoryEvent& history_event(int index) const;
  ::com::android::server::job::JobPackageHistoryProto_HistoryEvent* add_history_event();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobPackageHistoryProto_HistoryEvent >&
      history_event() const;

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobPackageHistoryProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobPackageHistoryProto_HistoryEvent > history_event_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobStatusShortInfoProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobStatusShortInfoProto) */ {
 public:
  JobStatusShortInfoProto();
  virtual ~JobStatusShortInfoProto();

  JobStatusShortInfoProto(const JobStatusShortInfoProto& from);
  JobStatusShortInfoProto(JobStatusShortInfoProto&& from) noexcept
    : JobStatusShortInfoProto() {
    *this = ::std::move(from);
  }

  inline JobStatusShortInfoProto& operator=(const JobStatusShortInfoProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobStatusShortInfoProto& operator=(JobStatusShortInfoProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobStatusShortInfoProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobStatusShortInfoProto* internal_default_instance() {
    return reinterpret_cast<const JobStatusShortInfoProto*>(
               &_JobStatusShortInfoProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(JobStatusShortInfoProto& a, JobStatusShortInfoProto& b) {
    a.Swap(&b);
  }
  inline void Swap(JobStatusShortInfoProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobStatusShortInfoProto* New() const final {
    return CreateMaybeMessage<JobStatusShortInfoProto>(nullptr);
  }

  JobStatusShortInfoProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobStatusShortInfoProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobStatusShortInfoProto& from);
  void MergeFrom(const JobStatusShortInfoProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobStatusShortInfoProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobStatusShortInfoProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBatteryNameFieldNumber = 3,
    kCallingUidFieldNumber = 1,
    kJobIdFieldNumber = 2,
  };
  // optional string battery_name = 3;
  bool has_battery_name() const;
  void clear_battery_name();
  const std::string& battery_name() const;
  void set_battery_name(const std::string& value);
  void set_battery_name(std::string&& value);
  void set_battery_name(const char* value);
  void set_battery_name(const char* value, size_t size);
  std::string* mutable_battery_name();
  std::string* release_battery_name();
  void set_allocated_battery_name(std::string* battery_name);

  // optional int32 calling_uid = 1;
  bool has_calling_uid() const;
  void clear_calling_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 calling_uid() const;
  void set_calling_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 job_id = 2;
  bool has_job_id() const;
  void clear_job_id();
  ::PROTOBUF_NAMESPACE_ID::int32 job_id() const;
  void set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobStatusShortInfoProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr battery_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 calling_uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 job_id_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobStatusDumpProto_JobInfo_TriggerContentUri :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri) */ {
 public:
  JobStatusDumpProto_JobInfo_TriggerContentUri();
  virtual ~JobStatusDumpProto_JobInfo_TriggerContentUri();

  JobStatusDumpProto_JobInfo_TriggerContentUri(const JobStatusDumpProto_JobInfo_TriggerContentUri& from);
  JobStatusDumpProto_JobInfo_TriggerContentUri(JobStatusDumpProto_JobInfo_TriggerContentUri&& from) noexcept
    : JobStatusDumpProto_JobInfo_TriggerContentUri() {
    *this = ::std::move(from);
  }

  inline JobStatusDumpProto_JobInfo_TriggerContentUri& operator=(const JobStatusDumpProto_JobInfo_TriggerContentUri& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobStatusDumpProto_JobInfo_TriggerContentUri& operator=(JobStatusDumpProto_JobInfo_TriggerContentUri&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobStatusDumpProto_JobInfo_TriggerContentUri& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobStatusDumpProto_JobInfo_TriggerContentUri* internal_default_instance() {
    return reinterpret_cast<const JobStatusDumpProto_JobInfo_TriggerContentUri*>(
               &_JobStatusDumpProto_JobInfo_TriggerContentUri_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(JobStatusDumpProto_JobInfo_TriggerContentUri& a, JobStatusDumpProto_JobInfo_TriggerContentUri& b) {
    a.Swap(&b);
  }
  inline void Swap(JobStatusDumpProto_JobInfo_TriggerContentUri* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobStatusDumpProto_JobInfo_TriggerContentUri* New() const final {
    return CreateMaybeMessage<JobStatusDumpProto_JobInfo_TriggerContentUri>(nullptr);
  }

  JobStatusDumpProto_JobInfo_TriggerContentUri* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobStatusDumpProto_JobInfo_TriggerContentUri>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobStatusDumpProto_JobInfo_TriggerContentUri& from);
  void MergeFrom(const JobStatusDumpProto_JobInfo_TriggerContentUri& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobStatusDumpProto_JobInfo_TriggerContentUri* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUriFieldNumber = 2,
    kFlagsFieldNumber = 1,
  };
  // optional string uri = 2 [(.android.privacy) = {
  bool has_uri() const;
  void clear_uri();
  const std::string& uri() const;
  void set_uri(const std::string& value);
  void set_uri(std::string&& value);
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  std::string* mutable_uri();
  std::string* release_uri();
  void set_allocated_uri(std::string* uri);

  // optional int32 flags = 1 [(.android.privacy) = {
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr uri_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobStatusDumpProto_JobInfo_Backoff :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobStatusDumpProto.JobInfo.Backoff) */ {
 public:
  JobStatusDumpProto_JobInfo_Backoff();
  virtual ~JobStatusDumpProto_JobInfo_Backoff();

  JobStatusDumpProto_JobInfo_Backoff(const JobStatusDumpProto_JobInfo_Backoff& from);
  JobStatusDumpProto_JobInfo_Backoff(JobStatusDumpProto_JobInfo_Backoff&& from) noexcept
    : JobStatusDumpProto_JobInfo_Backoff() {
    *this = ::std::move(from);
  }

  inline JobStatusDumpProto_JobInfo_Backoff& operator=(const JobStatusDumpProto_JobInfo_Backoff& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobStatusDumpProto_JobInfo_Backoff& operator=(JobStatusDumpProto_JobInfo_Backoff&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobStatusDumpProto_JobInfo_Backoff& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobStatusDumpProto_JobInfo_Backoff* internal_default_instance() {
    return reinterpret_cast<const JobStatusDumpProto_JobInfo_Backoff*>(
               &_JobStatusDumpProto_JobInfo_Backoff_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(JobStatusDumpProto_JobInfo_Backoff& a, JobStatusDumpProto_JobInfo_Backoff& b) {
    a.Swap(&b);
  }
  inline void Swap(JobStatusDumpProto_JobInfo_Backoff* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobStatusDumpProto_JobInfo_Backoff* New() const final {
    return CreateMaybeMessage<JobStatusDumpProto_JobInfo_Backoff>(nullptr);
  }

  JobStatusDumpProto_JobInfo_Backoff* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobStatusDumpProto_JobInfo_Backoff>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobStatusDumpProto_JobInfo_Backoff& from);
  void MergeFrom(const JobStatusDumpProto_JobInfo_Backoff& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobStatusDumpProto_JobInfo_Backoff* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobStatusDumpProto.JobInfo.Backoff";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef JobStatusDumpProto_JobInfo_Backoff_Policy Policy;
  static constexpr Policy BACKOFF_POLICY_LINEAR =
    JobStatusDumpProto_JobInfo_Backoff_Policy_BACKOFF_POLICY_LINEAR;
  static constexpr Policy BACKOFF_POLICY_EXPONENTIAL =
    JobStatusDumpProto_JobInfo_Backoff_Policy_BACKOFF_POLICY_EXPONENTIAL;
  static inline bool Policy_IsValid(int value) {
    return JobStatusDumpProto_JobInfo_Backoff_Policy_IsValid(value);
  }
  static constexpr Policy Policy_MIN =
    JobStatusDumpProto_JobInfo_Backoff_Policy_Policy_MIN;
  static constexpr Policy Policy_MAX =
    JobStatusDumpProto_JobInfo_Backoff_Policy_Policy_MAX;
  static constexpr int Policy_ARRAYSIZE =
    JobStatusDumpProto_JobInfo_Backoff_Policy_Policy_ARRAYSIZE;
  template<typename T>
  static inline const std::string& Policy_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Policy>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Policy_Name.");
    return JobStatusDumpProto_JobInfo_Backoff_Policy_Name(enum_t_value);
  }
  static inline bool Policy_Parse(const std::string& name,
      Policy* value) {
    return JobStatusDumpProto_JobInfo_Backoff_Policy_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kInitialBackoffMsFieldNumber = 2,
    kPolicyFieldNumber = 1,
  };
  // optional int64 initial_backoff_ms = 2;
  bool has_initial_backoff_ms() const;
  void clear_initial_backoff_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 initial_backoff_ms() const;
  void set_initial_backoff_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional .com.android.server.job.JobStatusDumpProto.JobInfo.Backoff.Policy policy = 1;
  bool has_policy() const;
  void clear_policy();
  ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff_Policy policy() const;
  void set_policy(::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff_Policy value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobStatusDumpProto.JobInfo.Backoff)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 initial_backoff_ms_;
  int policy_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobStatusDumpProto_JobInfo :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobStatusDumpProto.JobInfo) */ {
 public:
  JobStatusDumpProto_JobInfo();
  virtual ~JobStatusDumpProto_JobInfo();

  JobStatusDumpProto_JobInfo(const JobStatusDumpProto_JobInfo& from);
  JobStatusDumpProto_JobInfo(JobStatusDumpProto_JobInfo&& from) noexcept
    : JobStatusDumpProto_JobInfo() {
    *this = ::std::move(from);
  }

  inline JobStatusDumpProto_JobInfo& operator=(const JobStatusDumpProto_JobInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobStatusDumpProto_JobInfo& operator=(JobStatusDumpProto_JobInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobStatusDumpProto_JobInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobStatusDumpProto_JobInfo* internal_default_instance() {
    return reinterpret_cast<const JobStatusDumpProto_JobInfo*>(
               &_JobStatusDumpProto_JobInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(JobStatusDumpProto_JobInfo& a, JobStatusDumpProto_JobInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(JobStatusDumpProto_JobInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobStatusDumpProto_JobInfo* New() const final {
    return CreateMaybeMessage<JobStatusDumpProto_JobInfo>(nullptr);
  }

  JobStatusDumpProto_JobInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobStatusDumpProto_JobInfo>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobStatusDumpProto_JobInfo& from);
  void MergeFrom(const JobStatusDumpProto_JobInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobStatusDumpProto_JobInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobStatusDumpProto.JobInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef JobStatusDumpProto_JobInfo_TriggerContentUri TriggerContentUri;
  typedef JobStatusDumpProto_JobInfo_Backoff Backoff;

  // accessors -------------------------------------------------------

  enum : int {
    kTriggerContentUrisFieldNumber = 11,
    kServiceFieldNumber = 1,
    kExtrasFieldNumber = 14,
    kTransientExtrasFieldNumber = 15,
    kClipDataFieldNumber = 16,
    kGrantedUriPermissionsFieldNumber = 17,
    kRequiredNetworkFieldNumber = 18,
    kBackoffPolicyFieldNumber = 22,
    kPeriodIntervalMsFieldNumber = 3,
    kPeriodFlexMsFieldNumber = 4,
    kPriorityFieldNumber = 6,
    kIsPeriodicFieldNumber = 2,
    kIsPersistedFieldNumber = 5,
    kRequiresChargingFieldNumber = 8,
    kRequiresBatteryNotLowFieldNumber = 9,
    kTriggerContentUpdateDelayMsFieldNumber = 12,
    kTriggerContentMaxDelayMsFieldNumber = 13,
    kFlagsFieldNumber = 7,
    kRequiresDeviceIdleFieldNumber = 10,
    kHasEarlyConstraintFieldNumber = 23,
    kHasLateConstraintFieldNumber = 24,
    kMinLatencyMsFieldNumber = 20,
    kMaxExecutionDelayMsFieldNumber = 21,
    kTotalNetworkDownloadBytesFieldNumber = 25,
    kTotalNetworkUploadBytesFieldNumber = 26,
  };
  // repeated .com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri trigger_content_uris = 11;
  int trigger_content_uris_size() const;
  void clear_trigger_content_uris();
  ::com::android::server::job::JobStatusDumpProto_JobInfo_TriggerContentUri* mutable_trigger_content_uris(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobInfo_TriggerContentUri >*
      mutable_trigger_content_uris();
  const ::com::android::server::job::JobStatusDumpProto_JobInfo_TriggerContentUri& trigger_content_uris(int index) const;
  ::com::android::server::job::JobStatusDumpProto_JobInfo_TriggerContentUri* add_trigger_content_uris();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobInfo_TriggerContentUri >&
      trigger_content_uris() const;

  // optional .android.content.ComponentNameProto service = 1;
  bool has_service() const;
  void clear_service();
  const ::android::content::ComponentNameProto& service() const;
  ::android::content::ComponentNameProto* release_service();
  ::android::content::ComponentNameProto* mutable_service();
  void set_allocated_service(::android::content::ComponentNameProto* service);

  // optional .android.os.PersistableBundleProto extras = 14;
  bool has_extras() const;
  void clear_extras();
  const ::android::os::PersistableBundleProto& extras() const;
  ::android::os::PersistableBundleProto* release_extras();
  ::android::os::PersistableBundleProto* mutable_extras();
  void set_allocated_extras(::android::os::PersistableBundleProto* extras);

  // optional .android.os.BundleProto transient_extras = 15;
  bool has_transient_extras() const;
  void clear_transient_extras();
  const ::android::os::BundleProto& transient_extras() const;
  ::android::os::BundleProto* release_transient_extras();
  ::android::os::BundleProto* mutable_transient_extras();
  void set_allocated_transient_extras(::android::os::BundleProto* transient_extras);

  // optional .android.content.ClipDataProto clip_data = 16;
  bool has_clip_data() const;
  void clear_clip_data();
  const ::android::content::ClipDataProto& clip_data() const;
  ::android::content::ClipDataProto* release_clip_data();
  ::android::content::ClipDataProto* mutable_clip_data();
  void set_allocated_clip_data(::android::content::ClipDataProto* clip_data);

  // optional .com.android.server.job.GrantedUriPermissionsDumpProto granted_uri_permissions = 17;
  bool has_granted_uri_permissions() const;
  void clear_granted_uri_permissions();
  const ::com::android::server::job::GrantedUriPermissionsDumpProto& granted_uri_permissions() const;
  ::com::android::server::job::GrantedUriPermissionsDumpProto* release_granted_uri_permissions();
  ::com::android::server::job::GrantedUriPermissionsDumpProto* mutable_granted_uri_permissions();
  void set_allocated_granted_uri_permissions(::com::android::server::job::GrantedUriPermissionsDumpProto* granted_uri_permissions);

  // optional .android.net.NetworkRequestProto required_network = 18;
  bool has_required_network() const;
  void clear_required_network();
  const ::android::net::NetworkRequestProto& required_network() const;
  ::android::net::NetworkRequestProto* release_required_network();
  ::android::net::NetworkRequestProto* mutable_required_network();
  void set_allocated_required_network(::android::net::NetworkRequestProto* required_network);

  // optional .com.android.server.job.JobStatusDumpProto.JobInfo.Backoff backoff_policy = 22;
  bool has_backoff_policy() const;
  void clear_backoff_policy();
  const ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff& backoff_policy() const;
  ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff* release_backoff_policy();
  ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff* mutable_backoff_policy();
  void set_allocated_backoff_policy(::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff* backoff_policy);

  // optional int64 period_interval_ms = 3;
  bool has_period_interval_ms() const;
  void clear_period_interval_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 period_interval_ms() const;
  void set_period_interval_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 period_flex_ms = 4;
  bool has_period_flex_ms() const;
  void clear_period_flex_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 period_flex_ms() const;
  void set_period_flex_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional sint32 priority = 6;
  bool has_priority() const;
  void clear_priority();
  ::PROTOBUF_NAMESPACE_ID::int32 priority() const;
  void set_priority(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool is_periodic = 2;
  bool has_is_periodic() const;
  void clear_is_periodic();
  bool is_periodic() const;
  void set_is_periodic(bool value);

  // optional bool is_persisted = 5;
  bool has_is_persisted() const;
  void clear_is_persisted();
  bool is_persisted() const;
  void set_is_persisted(bool value);

  // optional bool requires_charging = 8;
  bool has_requires_charging() const;
  void clear_requires_charging();
  bool requires_charging() const;
  void set_requires_charging(bool value);

  // optional bool requires_battery_not_low = 9;
  bool has_requires_battery_not_low() const;
  void clear_requires_battery_not_low();
  bool requires_battery_not_low() const;
  void set_requires_battery_not_low(bool value);

  // optional int64 trigger_content_update_delay_ms = 12;
  bool has_trigger_content_update_delay_ms() const;
  void clear_trigger_content_update_delay_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_content_update_delay_ms() const;
  void set_trigger_content_update_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 trigger_content_max_delay_ms = 13;
  bool has_trigger_content_max_delay_ms() const;
  void clear_trigger_content_max_delay_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_content_max_delay_ms() const;
  void set_trigger_content_max_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 flags = 7;
  bool has_flags() const;
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::int32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool requires_device_idle = 10;
  bool has_requires_device_idle() const;
  void clear_requires_device_idle();
  bool requires_device_idle() const;
  void set_requires_device_idle(bool value);

  // optional bool has_early_constraint = 23;
  bool has_has_early_constraint() const;
  void clear_has_early_constraint();
  bool has_early_constraint() const;
  void set_has_early_constraint(bool value);

  // optional bool has_late_constraint = 24;
  bool has_has_late_constraint() const;
  void clear_has_late_constraint();
  bool has_late_constraint() const;
  void set_has_late_constraint(bool value);

  // optional int64 min_latency_ms = 20;
  bool has_min_latency_ms() const;
  void clear_min_latency_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 min_latency_ms() const;
  void set_min_latency_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 max_execution_delay_ms = 21;
  bool has_max_execution_delay_ms() const;
  void clear_max_execution_delay_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 max_execution_delay_ms() const;
  void set_max_execution_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 total_network_download_bytes = 25;
  bool has_total_network_download_bytes() const;
  void clear_total_network_download_bytes();
  ::PROTOBUF_NAMESPACE_ID::int64 total_network_download_bytes() const;
  void set_total_network_download_bytes(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 total_network_upload_bytes = 26;
  bool has_total_network_upload_bytes() const;
  void clear_total_network_upload_bytes();
  ::PROTOBUF_NAMESPACE_ID::int64 total_network_upload_bytes() const;
  void set_total_network_upload_bytes(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobStatusDumpProto.JobInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobInfo_TriggerContentUri > trigger_content_uris_;
  ::android::content::ComponentNameProto* service_;
  ::android::os::PersistableBundleProto* extras_;
  ::android::os::BundleProto* transient_extras_;
  ::android::content::ClipDataProto* clip_data_;
  ::com::android::server::job::GrantedUriPermissionsDumpProto* granted_uri_permissions_;
  ::android::net::NetworkRequestProto* required_network_;
  ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff* backoff_policy_;
  ::PROTOBUF_NAMESPACE_ID::int64 period_interval_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 period_flex_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 priority_;
  bool is_periodic_;
  bool is_persisted_;
  bool requires_charging_;
  bool requires_battery_not_low_;
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_content_update_delay_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 trigger_content_max_delay_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 flags_;
  bool requires_device_idle_;
  bool has_early_constraint_;
  bool has_late_constraint_;
  ::PROTOBUF_NAMESPACE_ID::int64 min_latency_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_execution_delay_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_network_download_bytes_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_network_upload_bytes_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobStatusDumpProto_ImplicitConstraints :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobStatusDumpProto.ImplicitConstraints) */ {
 public:
  JobStatusDumpProto_ImplicitConstraints();
  virtual ~JobStatusDumpProto_ImplicitConstraints();

  JobStatusDumpProto_ImplicitConstraints(const JobStatusDumpProto_ImplicitConstraints& from);
  JobStatusDumpProto_ImplicitConstraints(JobStatusDumpProto_ImplicitConstraints&& from) noexcept
    : JobStatusDumpProto_ImplicitConstraints() {
    *this = ::std::move(from);
  }

  inline JobStatusDumpProto_ImplicitConstraints& operator=(const JobStatusDumpProto_ImplicitConstraints& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobStatusDumpProto_ImplicitConstraints& operator=(JobStatusDumpProto_ImplicitConstraints&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobStatusDumpProto_ImplicitConstraints& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobStatusDumpProto_ImplicitConstraints* internal_default_instance() {
    return reinterpret_cast<const JobStatusDumpProto_ImplicitConstraints*>(
               &_JobStatusDumpProto_ImplicitConstraints_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(JobStatusDumpProto_ImplicitConstraints& a, JobStatusDumpProto_ImplicitConstraints& b) {
    a.Swap(&b);
  }
  inline void Swap(JobStatusDumpProto_ImplicitConstraints* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobStatusDumpProto_ImplicitConstraints* New() const final {
    return CreateMaybeMessage<JobStatusDumpProto_ImplicitConstraints>(nullptr);
  }

  JobStatusDumpProto_ImplicitConstraints* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobStatusDumpProto_ImplicitConstraints>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobStatusDumpProto_ImplicitConstraints& from);
  void MergeFrom(const JobStatusDumpProto_ImplicitConstraints& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobStatusDumpProto_ImplicitConstraints* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobStatusDumpProto.ImplicitConstraints";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsNotDozingFieldNumber = 1,
    kIsNotRestrictedInBgFieldNumber = 2,
    kIsDynamicSatisfiedFieldNumber = 3,
  };
  // optional bool is_not_dozing = 1;
  bool has_is_not_dozing() const;
  void clear_is_not_dozing();
  bool is_not_dozing() const;
  void set_is_not_dozing(bool value);

  // optional bool is_not_restricted_in_bg = 2;
  bool has_is_not_restricted_in_bg() const;
  void clear_is_not_restricted_in_bg();
  bool is_not_restricted_in_bg() const;
  void set_is_not_restricted_in_bg(bool value);

  // optional bool is_dynamic_satisfied = 3;
  bool has_is_dynamic_satisfied() const;
  void clear_is_dynamic_satisfied();
  bool is_dynamic_satisfied() const;
  void set_is_dynamic_satisfied(bool value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobStatusDumpProto.ImplicitConstraints)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool is_not_dozing_;
  bool is_not_restricted_in_bg_;
  bool is_dynamic_satisfied_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobStatusDumpProto_JobWorkItem :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobStatusDumpProto.JobWorkItem) */ {
 public:
  JobStatusDumpProto_JobWorkItem();
  virtual ~JobStatusDumpProto_JobWorkItem();

  JobStatusDumpProto_JobWorkItem(const JobStatusDumpProto_JobWorkItem& from);
  JobStatusDumpProto_JobWorkItem(JobStatusDumpProto_JobWorkItem&& from) noexcept
    : JobStatusDumpProto_JobWorkItem() {
    *this = ::std::move(from);
  }

  inline JobStatusDumpProto_JobWorkItem& operator=(const JobStatusDumpProto_JobWorkItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobStatusDumpProto_JobWorkItem& operator=(JobStatusDumpProto_JobWorkItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobStatusDumpProto_JobWorkItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobStatusDumpProto_JobWorkItem* internal_default_instance() {
    return reinterpret_cast<const JobStatusDumpProto_JobWorkItem*>(
               &_JobStatusDumpProto_JobWorkItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(JobStatusDumpProto_JobWorkItem& a, JobStatusDumpProto_JobWorkItem& b) {
    a.Swap(&b);
  }
  inline void Swap(JobStatusDumpProto_JobWorkItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobStatusDumpProto_JobWorkItem* New() const final {
    return CreateMaybeMessage<JobStatusDumpProto_JobWorkItem>(nullptr);
  }

  JobStatusDumpProto_JobWorkItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobStatusDumpProto_JobWorkItem>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobStatusDumpProto_JobWorkItem& from);
  void MergeFrom(const JobStatusDumpProto_JobWorkItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobStatusDumpProto_JobWorkItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobStatusDumpProto.JobWorkItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIntentFieldNumber = 3,
    kUriGrantsFieldNumber = 4,
    kWorkIdFieldNumber = 1,
    kDeliveryCountFieldNumber = 2,
  };
  // optional .android.content.IntentProto intent = 3;
  bool has_intent() const;
  void clear_intent();
  const ::android::content::IntentProto& intent() const;
  ::android::content::IntentProto* release_intent();
  ::android::content::IntentProto* mutable_intent();
  void set_allocated_intent(::android::content::IntentProto* intent);

  // optional .com.android.server.job.GrantedUriPermissionsDumpProto uri_grants = 4;
  bool has_uri_grants() const;
  void clear_uri_grants();
  const ::com::android::server::job::GrantedUriPermissionsDumpProto& uri_grants() const;
  ::com::android::server::job::GrantedUriPermissionsDumpProto* release_uri_grants();
  ::com::android::server::job::GrantedUriPermissionsDumpProto* mutable_uri_grants();
  void set_allocated_uri_grants(::com::android::server::job::GrantedUriPermissionsDumpProto* uri_grants);

  // optional int32 work_id = 1;
  bool has_work_id() const;
  void clear_work_id();
  ::PROTOBUF_NAMESPACE_ID::int32 work_id() const;
  void set_work_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 delivery_count = 2;
  bool has_delivery_count() const;
  void clear_delivery_count();
  ::PROTOBUF_NAMESPACE_ID::int32 delivery_count() const;
  void set_delivery_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobStatusDumpProto.JobWorkItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::android::content::IntentProto* intent_;
  ::com::android::server::job::GrantedUriPermissionsDumpProto* uri_grants_;
  ::PROTOBUF_NAMESPACE_ID::int32 work_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 delivery_count_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobStatusDumpProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobStatusDumpProto) */ {
 public:
  JobStatusDumpProto();
  virtual ~JobStatusDumpProto();

  JobStatusDumpProto(const JobStatusDumpProto& from);
  JobStatusDumpProto(JobStatusDumpProto&& from) noexcept
    : JobStatusDumpProto() {
    *this = ::std::move(from);
  }

  inline JobStatusDumpProto& operator=(const JobStatusDumpProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobStatusDumpProto& operator=(JobStatusDumpProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobStatusDumpProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobStatusDumpProto* internal_default_instance() {
    return reinterpret_cast<const JobStatusDumpProto*>(
               &_JobStatusDumpProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(JobStatusDumpProto& a, JobStatusDumpProto& b) {
    a.Swap(&b);
  }
  inline void Swap(JobStatusDumpProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobStatusDumpProto* New() const final {
    return CreateMaybeMessage<JobStatusDumpProto>(nullptr);
  }

  JobStatusDumpProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobStatusDumpProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobStatusDumpProto& from);
  void MergeFrom(const JobStatusDumpProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobStatusDumpProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobStatusDumpProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef JobStatusDumpProto_JobInfo JobInfo;
  typedef JobStatusDumpProto_ImplicitConstraints ImplicitConstraints;
  typedef JobStatusDumpProto_JobWorkItem JobWorkItem;

  typedef JobStatusDumpProto_TrackingController TrackingController;
  static constexpr TrackingController TRACKING_BATTERY =
    JobStatusDumpProto_TrackingController_TRACKING_BATTERY;
  static constexpr TrackingController TRACKING_CONNECTIVITY =
    JobStatusDumpProto_TrackingController_TRACKING_CONNECTIVITY;
  static constexpr TrackingController TRACKING_CONTENT =
    JobStatusDumpProto_TrackingController_TRACKING_CONTENT;
  static constexpr TrackingController TRACKING_IDLE =
    JobStatusDumpProto_TrackingController_TRACKING_IDLE;
  static constexpr TrackingController TRACKING_STORAGE =
    JobStatusDumpProto_TrackingController_TRACKING_STORAGE;
  static constexpr TrackingController TRACKING_TIME =
    JobStatusDumpProto_TrackingController_TRACKING_TIME;
  static constexpr TrackingController TRACKING_QUOTA =
    JobStatusDumpProto_TrackingController_TRACKING_QUOTA;
  static inline bool TrackingController_IsValid(int value) {
    return JobStatusDumpProto_TrackingController_IsValid(value);
  }
  static constexpr TrackingController TrackingController_MIN =
    JobStatusDumpProto_TrackingController_TrackingController_MIN;
  static constexpr TrackingController TrackingController_MAX =
    JobStatusDumpProto_TrackingController_TrackingController_MAX;
  static constexpr int TrackingController_ARRAYSIZE =
    JobStatusDumpProto_TrackingController_TrackingController_ARRAYSIZE;
  template<typename T>
  static inline const std::string& TrackingController_Name(T enum_t_value) {
    static_assert(::std::is_same<T, TrackingController>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function TrackingController_Name.");
    return JobStatusDumpProto_TrackingController_Name(enum_t_value);
  }
  static inline bool TrackingController_Parse(const std::string& name,
      TrackingController* value) {
    return JobStatusDumpProto_TrackingController_Parse(name, value);
  }

  typedef JobStatusDumpProto_Bucket Bucket;
  static constexpr Bucket ACTIVE =
    JobStatusDumpProto_Bucket_ACTIVE;
  static constexpr Bucket WORKING_SET =
    JobStatusDumpProto_Bucket_WORKING_SET;
  static constexpr Bucket FREQUENT =
    JobStatusDumpProto_Bucket_FREQUENT;
  static constexpr Bucket RARE =
    JobStatusDumpProto_Bucket_RARE;
  static constexpr Bucket NEVER =
    JobStatusDumpProto_Bucket_NEVER;
  static constexpr Bucket RESTRICTED =
    JobStatusDumpProto_Bucket_RESTRICTED;
  static inline bool Bucket_IsValid(int value) {
    return JobStatusDumpProto_Bucket_IsValid(value);
  }
  static constexpr Bucket Bucket_MIN =
    JobStatusDumpProto_Bucket_Bucket_MIN;
  static constexpr Bucket Bucket_MAX =
    JobStatusDumpProto_Bucket_Bucket_MAX;
  static constexpr int Bucket_ARRAYSIZE =
    JobStatusDumpProto_Bucket_Bucket_ARRAYSIZE;
  template<typename T>
  static inline const std::string& Bucket_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Bucket>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Bucket_Name.");
    return JobStatusDumpProto_Bucket_Name(enum_t_value);
  }
  static inline bool Bucket_Parse(const std::string& name,
      Bucket* value) {
    return JobStatusDumpProto_Bucket_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kRequiredConstraintsFieldNumber = 7,
    kSatisfiedConstraintsFieldNumber = 8,
    kUnsatisfiedConstraintsFieldNumber = 9,
    kTrackingControllersFieldNumber = 11,
    kChangedAuthoritiesFieldNumber = 12,
    kChangedUrisFieldNumber = 13,
    kPendingWorkFieldNumber = 15,
    kExecutingWorkFieldNumber = 16,
    kDynamicConstraintsFieldNumber = 31,
    kTagFieldNumber = 2,
    kSourcePackageNameFieldNumber = 5,
    kJobInfoFieldNumber = 6,
    kNetworkFieldNumber = 14,
    kImplicitConstraintsFieldNumber = 25,
    kCallingUidFieldNumber = 1,
    kSourceUidFieldNumber = 3,
    kSourceUserIdFieldNumber = 4,
    kStandbyBucketFieldNumber = 17,
    kEnqueueDurationMsFieldNumber = 18,
    kTimeUntilEarliestRuntimeMsFieldNumber = 19,
    kTimeUntilLatestRuntimeMsFieldNumber = 20,
    kNumFailuresFieldNumber = 21,
    kIsDozeWhitelistedFieldNumber = 10,
    kIsUidActiveFieldNumber = 26,
    kIsExemptedFromAppStandbyFieldNumber = 27,
    kLastSuccessfulRunTimeFieldNumber = 22,
    kLastFailedRunTimeFieldNumber = 23,
    kInternalFlagsFieldNumber = 24,
    kTimeSinceFirstDeferralMsFieldNumber = 28,
    kTimeSinceFirstForceBatchAttemptMsFieldNumber = 29,
    kOriginalLatestRuntimeElapsedFieldNumber = 30,
  };
  // repeated .com.android.server.job.ConstraintEnum required_constraints = 7;
  int required_constraints_size() const;
  void clear_required_constraints();
  ::com::android::server::job::ConstraintEnum required_constraints(int index) const;
  void set_required_constraints(int index, ::com::android::server::job::ConstraintEnum value);
  void add_required_constraints(::com::android::server::job::ConstraintEnum value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& required_constraints() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_required_constraints();

  // repeated .com.android.server.job.ConstraintEnum satisfied_constraints = 8;
  int satisfied_constraints_size() const;
  void clear_satisfied_constraints();
  ::com::android::server::job::ConstraintEnum satisfied_constraints(int index) const;
  void set_satisfied_constraints(int index, ::com::android::server::job::ConstraintEnum value);
  void add_satisfied_constraints(::com::android::server::job::ConstraintEnum value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& satisfied_constraints() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_satisfied_constraints();

  // repeated .com.android.server.job.ConstraintEnum unsatisfied_constraints = 9;
  int unsatisfied_constraints_size() const;
  void clear_unsatisfied_constraints();
  ::com::android::server::job::ConstraintEnum unsatisfied_constraints(int index) const;
  void set_unsatisfied_constraints(int index, ::com::android::server::job::ConstraintEnum value);
  void add_unsatisfied_constraints(::com::android::server::job::ConstraintEnum value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& unsatisfied_constraints() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_unsatisfied_constraints();

  // repeated .com.android.server.job.JobStatusDumpProto.TrackingController tracking_controllers = 11;
  int tracking_controllers_size() const;
  void clear_tracking_controllers();
  ::com::android::server::job::JobStatusDumpProto_TrackingController tracking_controllers(int index) const;
  void set_tracking_controllers(int index, ::com::android::server::job::JobStatusDumpProto_TrackingController value);
  void add_tracking_controllers(::com::android::server::job::JobStatusDumpProto_TrackingController value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& tracking_controllers() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_tracking_controllers();

  // repeated string changed_authorities = 12 [(.android.privacy) = {
  int changed_authorities_size() const;
  void clear_changed_authorities();
  const std::string& changed_authorities(int index) const;
  std::string* mutable_changed_authorities(int index);
  void set_changed_authorities(int index, const std::string& value);
  void set_changed_authorities(int index, std::string&& value);
  void set_changed_authorities(int index, const char* value);
  void set_changed_authorities(int index, const char* value, size_t size);
  std::string* add_changed_authorities();
  void add_changed_authorities(const std::string& value);
  void add_changed_authorities(std::string&& value);
  void add_changed_authorities(const char* value);
  void add_changed_authorities(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& changed_authorities() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_changed_authorities();

  // repeated string changed_uris = 13 [(.android.privacy) = {
  int changed_uris_size() const;
  void clear_changed_uris();
  const std::string& changed_uris(int index) const;
  std::string* mutable_changed_uris(int index);
  void set_changed_uris(int index, const std::string& value);
  void set_changed_uris(int index, std::string&& value);
  void set_changed_uris(int index, const char* value);
  void set_changed_uris(int index, const char* value, size_t size);
  std::string* add_changed_uris();
  void add_changed_uris(const std::string& value);
  void add_changed_uris(std::string&& value);
  void add_changed_uris(const char* value);
  void add_changed_uris(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& changed_uris() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_changed_uris();

  // repeated .com.android.server.job.JobStatusDumpProto.JobWorkItem pending_work = 15;
  int pending_work_size() const;
  void clear_pending_work();
  ::com::android::server::job::JobStatusDumpProto_JobWorkItem* mutable_pending_work(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobWorkItem >*
      mutable_pending_work();
  const ::com::android::server::job::JobStatusDumpProto_JobWorkItem& pending_work(int index) const;
  ::com::android::server::job::JobStatusDumpProto_JobWorkItem* add_pending_work();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobWorkItem >&
      pending_work() const;

  // repeated .com.android.server.job.JobStatusDumpProto.JobWorkItem executing_work = 16;
  int executing_work_size() const;
  void clear_executing_work();
  ::com::android::server::job::JobStatusDumpProto_JobWorkItem* mutable_executing_work(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobWorkItem >*
      mutable_executing_work();
  const ::com::android::server::job::JobStatusDumpProto_JobWorkItem& executing_work(int index) const;
  ::com::android::server::job::JobStatusDumpProto_JobWorkItem* add_executing_work();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobWorkItem >&
      executing_work() const;

  // repeated .com.android.server.job.ConstraintEnum dynamic_constraints = 31;
  int dynamic_constraints_size() const;
  void clear_dynamic_constraints();
  ::com::android::server::job::ConstraintEnum dynamic_constraints(int index) const;
  void set_dynamic_constraints(int index, ::com::android::server::job::ConstraintEnum value);
  void add_dynamic_constraints(::com::android::server::job::ConstraintEnum value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& dynamic_constraints() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_dynamic_constraints();

  // optional string tag = 2;
  bool has_tag() const;
  void clear_tag();
  const std::string& tag() const;
  void set_tag(const std::string& value);
  void set_tag(std::string&& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  std::string* mutable_tag();
  std::string* release_tag();
  void set_allocated_tag(std::string* tag);

  // optional string source_package_name = 5;
  bool has_source_package_name() const;
  void clear_source_package_name();
  const std::string& source_package_name() const;
  void set_source_package_name(const std::string& value);
  void set_source_package_name(std::string&& value);
  void set_source_package_name(const char* value);
  void set_source_package_name(const char* value, size_t size);
  std::string* mutable_source_package_name();
  std::string* release_source_package_name();
  void set_allocated_source_package_name(std::string* source_package_name);

  // optional .com.android.server.job.JobStatusDumpProto.JobInfo job_info = 6;
  bool has_job_info() const;
  void clear_job_info();
  const ::com::android::server::job::JobStatusDumpProto_JobInfo& job_info() const;
  ::com::android::server::job::JobStatusDumpProto_JobInfo* release_job_info();
  ::com::android::server::job::JobStatusDumpProto_JobInfo* mutable_job_info();
  void set_allocated_job_info(::com::android::server::job::JobStatusDumpProto_JobInfo* job_info);

  // optional .android.net.NetworkProto network = 14;
  bool has_network() const;
  void clear_network();
  const ::android::net::NetworkProto& network() const;
  ::android::net::NetworkProto* release_network();
  ::android::net::NetworkProto* mutable_network();
  void set_allocated_network(::android::net::NetworkProto* network);

  // optional .com.android.server.job.JobStatusDumpProto.ImplicitConstraints implicit_constraints = 25;
  bool has_implicit_constraints() const;
  void clear_implicit_constraints();
  const ::com::android::server::job::JobStatusDumpProto_ImplicitConstraints& implicit_constraints() const;
  ::com::android::server::job::JobStatusDumpProto_ImplicitConstraints* release_implicit_constraints();
  ::com::android::server::job::JobStatusDumpProto_ImplicitConstraints* mutable_implicit_constraints();
  void set_allocated_implicit_constraints(::com::android::server::job::JobStatusDumpProto_ImplicitConstraints* implicit_constraints);

  // optional int32 calling_uid = 1;
  bool has_calling_uid() const;
  void clear_calling_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 calling_uid() const;
  void set_calling_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 source_uid = 3;
  bool has_source_uid() const;
  void clear_source_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid() const;
  void set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 source_user_id = 4;
  bool has_source_user_id() const;
  void clear_source_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 source_user_id() const;
  void set_source_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional .com.android.server.job.JobStatusDumpProto.Bucket standby_bucket = 17;
  bool has_standby_bucket() const;
  void clear_standby_bucket();
  ::com::android::server::job::JobStatusDumpProto_Bucket standby_bucket() const;
  void set_standby_bucket(::com::android::server::job::JobStatusDumpProto_Bucket value);

  // optional int64 enqueue_duration_ms = 18;
  bool has_enqueue_duration_ms() const;
  void clear_enqueue_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 enqueue_duration_ms() const;
  void set_enqueue_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional sint64 time_until_earliest_runtime_ms = 19;
  bool has_time_until_earliest_runtime_ms() const;
  void clear_time_until_earliest_runtime_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_earliest_runtime_ms() const;
  void set_time_until_earliest_runtime_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional sint64 time_until_latest_runtime_ms = 20;
  bool has_time_until_latest_runtime_ms() const;
  void clear_time_until_latest_runtime_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_latest_runtime_ms() const;
  void set_time_until_latest_runtime_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 num_failures = 21;
  bool has_num_failures() const;
  void clear_num_failures();
  ::PROTOBUF_NAMESPACE_ID::int32 num_failures() const;
  void set_num_failures(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool is_doze_whitelisted = 10;
  bool has_is_doze_whitelisted() const;
  void clear_is_doze_whitelisted();
  bool is_doze_whitelisted() const;
  void set_is_doze_whitelisted(bool value);

  // optional bool is_uid_active = 26;
  bool has_is_uid_active() const;
  void clear_is_uid_active();
  bool is_uid_active() const;
  void set_is_uid_active(bool value);

  // optional bool is_exempted_from_app_standby = 27;
  bool has_is_exempted_from_app_standby() const;
  void clear_is_exempted_from_app_standby();
  bool is_exempted_from_app_standby() const;
  void set_is_exempted_from_app_standby(bool value);

  // optional int64 last_successful_run_time = 22;
  bool has_last_successful_run_time() const;
  void clear_last_successful_run_time();
  ::PROTOBUF_NAMESPACE_ID::int64 last_successful_run_time() const;
  void set_last_successful_run_time(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 last_failed_run_time = 23;
  bool has_last_failed_run_time() const;
  void clear_last_failed_run_time();
  ::PROTOBUF_NAMESPACE_ID::int64 last_failed_run_time() const;
  void set_last_failed_run_time(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 internal_flags = 24;
  bool has_internal_flags() const;
  void clear_internal_flags();
  ::PROTOBUF_NAMESPACE_ID::int64 internal_flags() const;
  void set_internal_flags(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_since_first_deferral_ms = 28;
  bool has_time_since_first_deferral_ms() const;
  void clear_time_since_first_deferral_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_first_deferral_ms() const;
  void set_time_since_first_deferral_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 time_since_first_force_batch_attempt_ms = 29;
  bool has_time_since_first_force_batch_attempt_ms() const;
  void clear_time_since_first_force_batch_attempt_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_first_force_batch_attempt_ms() const;
  void set_time_since_first_force_batch_attempt_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional uint64 original_latest_runtime_elapsed = 30;
  bool has_original_latest_runtime_elapsed() const;
  void clear_original_latest_runtime_elapsed();
  ::PROTOBUF_NAMESPACE_ID::uint64 original_latest_runtime_elapsed() const;
  void set_original_latest_runtime_elapsed(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobStatusDumpProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> required_constraints_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> satisfied_constraints_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> unsatisfied_constraints_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> tracking_controllers_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> changed_authorities_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> changed_uris_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobWorkItem > pending_work_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobWorkItem > executing_work_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> dynamic_constraints_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr source_package_name_;
  ::com::android::server::job::JobStatusDumpProto_JobInfo* job_info_;
  ::android::net::NetworkProto* network_;
  ::com::android::server::job::JobStatusDumpProto_ImplicitConstraints* implicit_constraints_;
  ::PROTOBUF_NAMESPACE_ID::int32 calling_uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_user_id_;
  int standby_bucket_;
  ::PROTOBUF_NAMESPACE_ID::int64 enqueue_duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_earliest_runtime_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_until_latest_runtime_ms_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_failures_;
  bool is_doze_whitelisted_;
  bool is_uid_active_;
  bool is_exempted_from_app_standby_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_successful_run_time_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_failed_run_time_;
  ::PROTOBUF_NAMESPACE_ID::int64 internal_flags_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_first_deferral_ms_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_first_force_batch_attempt_ms_;
  ::PROTOBUF_NAMESPACE_ID::uint64 original_latest_runtime_elapsed_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobConcurrencyManagerProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobConcurrencyManagerProto) */ {
 public:
  JobConcurrencyManagerProto();
  virtual ~JobConcurrencyManagerProto();

  JobConcurrencyManagerProto(const JobConcurrencyManagerProto& from);
  JobConcurrencyManagerProto(JobConcurrencyManagerProto&& from) noexcept
    : JobConcurrencyManagerProto() {
    *this = ::std::move(from);
  }

  inline JobConcurrencyManagerProto& operator=(const JobConcurrencyManagerProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobConcurrencyManagerProto& operator=(JobConcurrencyManagerProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobConcurrencyManagerProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobConcurrencyManagerProto* internal_default_instance() {
    return reinterpret_cast<const JobConcurrencyManagerProto*>(
               &_JobConcurrencyManagerProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(JobConcurrencyManagerProto& a, JobConcurrencyManagerProto& b) {
    a.Swap(&b);
  }
  inline void Swap(JobConcurrencyManagerProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobConcurrencyManagerProto* New() const final {
    return CreateMaybeMessage<JobConcurrencyManagerProto>(nullptr);
  }

  JobConcurrencyManagerProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobConcurrencyManagerProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobConcurrencyManagerProto& from);
  void MergeFrom(const JobConcurrencyManagerProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobConcurrencyManagerProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobConcurrencyManagerProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJobCountTrackerFieldNumber = 5,
    kStatsFieldNumber = 7,
    kTimeSinceLastScreenOnMsFieldNumber = 3,
    kCurrentInteractiveStateFieldNumber = 1,
    kEffectiveInteractiveStateFieldNumber = 2,
    kMemoryTrimLevelFieldNumber = 6,
    kTimeSinceLastScreenOffMsFieldNumber = 4,
  };
  // optional .com.android.server.job.JobCountTrackerProto job_count_tracker = 5;
  bool has_job_count_tracker() const;
  void clear_job_count_tracker();
  const ::com::android::server::job::JobCountTrackerProto& job_count_tracker() const;
  ::com::android::server::job::JobCountTrackerProto* release_job_count_tracker();
  ::com::android::server::job::JobCountTrackerProto* mutable_job_count_tracker();
  void set_allocated_job_count_tracker(::com::android::server::job::JobCountTrackerProto* job_count_tracker);

  // optional .com.android.server.StatLoggerProto stats = 7;
  bool has_stats() const;
  void clear_stats();
  const ::com::android::server::StatLoggerProto& stats() const;
  ::com::android::server::StatLoggerProto* release_stats();
  ::com::android::server::StatLoggerProto* mutable_stats();
  void set_allocated_stats(::com::android::server::StatLoggerProto* stats);

  // optional int64 time_since_last_screen_on_ms = 3;
  bool has_time_since_last_screen_on_ms() const;
  void clear_time_since_last_screen_on_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_last_screen_on_ms() const;
  void set_time_since_last_screen_on_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional bool current_interactive_state = 1;
  bool has_current_interactive_state() const;
  void clear_current_interactive_state();
  bool current_interactive_state() const;
  void set_current_interactive_state(bool value);

  // optional bool effective_interactive_state = 2;
  bool has_effective_interactive_state() const;
  void clear_effective_interactive_state();
  bool effective_interactive_state() const;
  void set_effective_interactive_state(bool value);

  // optional int32 memory_trim_level = 6;
  bool has_memory_trim_level() const;
  void clear_memory_trim_level();
  ::PROTOBUF_NAMESPACE_ID::int32 memory_trim_level() const;
  void set_memory_trim_level(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int64 time_since_last_screen_off_ms = 4;
  bool has_time_since_last_screen_off_ms() const;
  void clear_time_since_last_screen_off_ms();
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_last_screen_off_ms() const;
  void set_time_since_last_screen_off_ms(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobConcurrencyManagerProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::JobCountTrackerProto* job_count_tracker_;
  ::com::android::server::StatLoggerProto* stats_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_last_screen_on_ms_;
  bool current_interactive_state_;
  bool effective_interactive_state_;
  ::PROTOBUF_NAMESPACE_ID::int32 memory_trim_level_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_since_last_screen_off_ms_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobCountTrackerProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobCountTrackerProto) */ {
 public:
  JobCountTrackerProto();
  virtual ~JobCountTrackerProto();

  JobCountTrackerProto(const JobCountTrackerProto& from);
  JobCountTrackerProto(JobCountTrackerProto&& from) noexcept
    : JobCountTrackerProto() {
    *this = ::std::move(from);
  }

  inline JobCountTrackerProto& operator=(const JobCountTrackerProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobCountTrackerProto& operator=(JobCountTrackerProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobCountTrackerProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobCountTrackerProto* internal_default_instance() {
    return reinterpret_cast<const JobCountTrackerProto*>(
               &_JobCountTrackerProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(JobCountTrackerProto& a, JobCountTrackerProto& b) {
    a.Swap(&b);
  }
  inline void Swap(JobCountTrackerProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobCountTrackerProto* New() const final {
    return CreateMaybeMessage<JobCountTrackerProto>(nullptr);
  }

  JobCountTrackerProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobCountTrackerProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobCountTrackerProto& from);
  void MergeFrom(const JobCountTrackerProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobCountTrackerProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobCountTrackerProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigNumMaxTotalJobsFieldNumber = 1,
    kConfigNumMaxBgJobsFieldNumber = 2,
    kConfigNumMinBgJobsFieldNumber = 3,
    kNumRunningFgJobsFieldNumber = 4,
    kNumRunningBgJobsFieldNumber = 5,
    kNumPendingFgJobsFieldNumber = 6,
    kNumPendingBgJobsFieldNumber = 7,
    kNumActualMaxFgJobsFieldNumber = 8,
    kNumActualMaxBgJobsFieldNumber = 9,
    kNumReservedForBgFieldNumber = 10,
    kNumStartingFgJobsFieldNumber = 11,
    kNumStartingBgJobsFieldNumber = 12,
  };
  // optional int32 config_num_max_total_jobs = 1;
  bool has_config_num_max_total_jobs() const;
  void clear_config_num_max_total_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 config_num_max_total_jobs() const;
  void set_config_num_max_total_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 config_num_max_bg_jobs = 2;
  bool has_config_num_max_bg_jobs() const;
  void clear_config_num_max_bg_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 config_num_max_bg_jobs() const;
  void set_config_num_max_bg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 config_num_min_bg_jobs = 3;
  bool has_config_num_min_bg_jobs() const;
  void clear_config_num_min_bg_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 config_num_min_bg_jobs() const;
  void set_config_num_min_bg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_running_fg_jobs = 4;
  bool has_num_running_fg_jobs() const;
  void clear_num_running_fg_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 num_running_fg_jobs() const;
  void set_num_running_fg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_running_bg_jobs = 5;
  bool has_num_running_bg_jobs() const;
  void clear_num_running_bg_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 num_running_bg_jobs() const;
  void set_num_running_bg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_pending_fg_jobs = 6;
  bool has_num_pending_fg_jobs() const;
  void clear_num_pending_fg_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 num_pending_fg_jobs() const;
  void set_num_pending_fg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_pending_bg_jobs = 7;
  bool has_num_pending_bg_jobs() const;
  void clear_num_pending_bg_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 num_pending_bg_jobs() const;
  void set_num_pending_bg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_actual_max_fg_jobs = 8;
  bool has_num_actual_max_fg_jobs() const;
  void clear_num_actual_max_fg_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 num_actual_max_fg_jobs() const;
  void set_num_actual_max_fg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_actual_max_bg_jobs = 9;
  bool has_num_actual_max_bg_jobs() const;
  void clear_num_actual_max_bg_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 num_actual_max_bg_jobs() const;
  void set_num_actual_max_bg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_reserved_for_bg = 10;
  bool has_num_reserved_for_bg() const;
  void clear_num_reserved_for_bg();
  ::PROTOBUF_NAMESPACE_ID::int32 num_reserved_for_bg() const;
  void set_num_reserved_for_bg(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_starting_fg_jobs = 11;
  bool has_num_starting_fg_jobs() const;
  void clear_num_starting_fg_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 num_starting_fg_jobs() const;
  void set_num_starting_fg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_starting_bg_jobs = 12;
  bool has_num_starting_bg_jobs() const;
  void clear_num_starting_bg_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 num_starting_bg_jobs() const;
  void set_num_starting_bg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobCountTrackerProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 config_num_max_total_jobs_;
  ::PROTOBUF_NAMESPACE_ID::int32 config_num_max_bg_jobs_;
  ::PROTOBUF_NAMESPACE_ID::int32 config_num_min_bg_jobs_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_running_fg_jobs_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_running_bg_jobs_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_pending_fg_jobs_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_pending_bg_jobs_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_actual_max_fg_jobs_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_actual_max_bg_jobs_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_reserved_for_bg_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_starting_fg_jobs_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_starting_bg_jobs_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobStorePersistStatsProto_Stats :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobStorePersistStatsProto.Stats) */ {
 public:
  JobStorePersistStatsProto_Stats();
  virtual ~JobStorePersistStatsProto_Stats();

  JobStorePersistStatsProto_Stats(const JobStorePersistStatsProto_Stats& from);
  JobStorePersistStatsProto_Stats(JobStorePersistStatsProto_Stats&& from) noexcept
    : JobStorePersistStatsProto_Stats() {
    *this = ::std::move(from);
  }

  inline JobStorePersistStatsProto_Stats& operator=(const JobStorePersistStatsProto_Stats& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobStorePersistStatsProto_Stats& operator=(JobStorePersistStatsProto_Stats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobStorePersistStatsProto_Stats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobStorePersistStatsProto_Stats* internal_default_instance() {
    return reinterpret_cast<const JobStorePersistStatsProto_Stats*>(
               &_JobStorePersistStatsProto_Stats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(JobStorePersistStatsProto_Stats& a, JobStorePersistStatsProto_Stats& b) {
    a.Swap(&b);
  }
  inline void Swap(JobStorePersistStatsProto_Stats* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobStorePersistStatsProto_Stats* New() const final {
    return CreateMaybeMessage<JobStorePersistStatsProto_Stats>(nullptr);
  }

  JobStorePersistStatsProto_Stats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobStorePersistStatsProto_Stats>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobStorePersistStatsProto_Stats& from);
  void MergeFrom(const JobStorePersistStatsProto_Stats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobStorePersistStatsProto_Stats* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobStorePersistStatsProto.Stats";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumTotalJobsFieldNumber = 1,
    kNumSystemServerJobsFieldNumber = 2,
    kNumSystemSyncManagerJobsFieldNumber = 3,
  };
  // optional int32 num_total_jobs = 1;
  bool has_num_total_jobs() const;
  void clear_num_total_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 num_total_jobs() const;
  void set_num_total_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_system_server_jobs = 2;
  bool has_num_system_server_jobs() const;
  void clear_num_system_server_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 num_system_server_jobs() const;
  void set_num_system_server_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_system_sync_manager_jobs = 3;
  bool has_num_system_sync_manager_jobs() const;
  void clear_num_system_sync_manager_jobs();
  ::PROTOBUF_NAMESPACE_ID::int32 num_system_sync_manager_jobs() const;
  void set_num_system_sync_manager_jobs(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobStorePersistStatsProto.Stats)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_total_jobs_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_system_server_jobs_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_system_sync_manager_jobs_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// -------------------------------------------------------------------

class JobStorePersistStatsProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.job.JobStorePersistStatsProto) */ {
 public:
  JobStorePersistStatsProto();
  virtual ~JobStorePersistStatsProto();

  JobStorePersistStatsProto(const JobStorePersistStatsProto& from);
  JobStorePersistStatsProto(JobStorePersistStatsProto&& from) noexcept
    : JobStorePersistStatsProto() {
    *this = ::std::move(from);
  }

  inline JobStorePersistStatsProto& operator=(const JobStorePersistStatsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobStorePersistStatsProto& operator=(JobStorePersistStatsProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const JobStorePersistStatsProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobStorePersistStatsProto* internal_default_instance() {
    return reinterpret_cast<const JobStorePersistStatsProto*>(
               &_JobStorePersistStatsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(JobStorePersistStatsProto& a, JobStorePersistStatsProto& b) {
    a.Swap(&b);
  }
  inline void Swap(JobStorePersistStatsProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobStorePersistStatsProto* New() const final {
    return CreateMaybeMessage<JobStorePersistStatsProto>(nullptr);
  }

  JobStorePersistStatsProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobStorePersistStatsProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const JobStorePersistStatsProto& from);
  void MergeFrom(const JobStorePersistStatsProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JobStorePersistStatsProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.job.JobStorePersistStatsProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef JobStorePersistStatsProto_Stats Stats;

  // accessors -------------------------------------------------------

  enum : int {
    kFirstLoadFieldNumber = 1,
    kLastSaveFieldNumber = 2,
  };
  // optional .com.android.server.job.JobStorePersistStatsProto.Stats first_load = 1;
  bool has_first_load() const;
  void clear_first_load();
  const ::com::android::server::job::JobStorePersistStatsProto_Stats& first_load() const;
  ::com::android::server::job::JobStorePersistStatsProto_Stats* release_first_load();
  ::com::android::server::job::JobStorePersistStatsProto_Stats* mutable_first_load();
  void set_allocated_first_load(::com::android::server::job::JobStorePersistStatsProto_Stats* first_load);

  // optional .com.android.server.job.JobStorePersistStatsProto.Stats last_save = 2;
  bool has_last_save() const;
  void clear_last_save();
  const ::com::android::server::job::JobStorePersistStatsProto_Stats& last_save() const;
  ::com::android::server::job::JobStorePersistStatsProto_Stats* release_last_save();
  ::com::android::server::job::JobStorePersistStatsProto_Stats* mutable_last_save();
  void set_allocated_last_save(::com::android::server::job::JobStorePersistStatsProto_Stats* last_save);

  // @@protoc_insertion_point(class_scope:com.android.server.job.JobStorePersistStatsProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::com::android::server::job::JobStorePersistStatsProto_Stats* first_load_;
  ::com::android::server::job::JobStorePersistStatsProto_Stats* last_save_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// JobSchedulerServiceDumpProto_JobRestriction

// optional .android.app.job.InternalStopReasonEnum reason = 1;
inline bool JobSchedulerServiceDumpProto_JobRestriction::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobSchedulerServiceDumpProto_JobRestriction::clear_reason() {
  reason_ = -1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::android::app::job::InternalStopReasonEnum JobSchedulerServiceDumpProto_JobRestriction::reason() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.JobRestriction.reason)
  return static_cast< ::android::app::job::InternalStopReasonEnum >(reason_);
}
inline void JobSchedulerServiceDumpProto_JobRestriction::set_reason(::android::app::job::InternalStopReasonEnum value) {
  assert(::android::app::job::InternalStopReasonEnum_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  reason_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.JobRestriction.reason)
}

// optional bool is_restricting = 2;
inline bool JobSchedulerServiceDumpProto_JobRestriction::has_is_restricting() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobSchedulerServiceDumpProto_JobRestriction::clear_is_restricting() {
  is_restricting_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool JobSchedulerServiceDumpProto_JobRestriction::is_restricting() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.JobRestriction.is_restricting)
  return is_restricting_;
}
inline void JobSchedulerServiceDumpProto_JobRestriction::set_is_restricting(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_restricting_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.JobRestriction.is_restricting)
}

// -------------------------------------------------------------------

// JobSchedulerServiceDumpProto_RegisteredJob

// optional .com.android.server.job.JobStatusShortInfoProto info = 1;
inline bool JobSchedulerServiceDumpProto_RegisteredJob::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::JobStatusShortInfoProto& JobSchedulerServiceDumpProto_RegisteredJob::info() const {
  const ::com::android::server::job::JobStatusShortInfoProto* p = info_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusShortInfoProto*>(
      &::com::android::server::job::_JobStatusShortInfoProto_default_instance_);
}
inline ::com::android::server::job::JobStatusShortInfoProto* JobSchedulerServiceDumpProto_RegisteredJob::release_info() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::JobStatusShortInfoProto* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusShortInfoProto* JobSchedulerServiceDumpProto_RegisteredJob::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusShortInfoProto>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.info)
  return info_;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.info)
}

// optional .com.android.server.job.JobStatusDumpProto dump = 2;
inline bool JobSchedulerServiceDumpProto_RegisteredJob::has_dump() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::clear_dump() {
  if (dump_ != nullptr) dump_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::job::JobStatusDumpProto& JobSchedulerServiceDumpProto_RegisteredJob::dump() const {
  const ::com::android::server::job::JobStatusDumpProto* p = dump_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.dump)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusDumpProto*>(
      &::com::android::server::job::_JobStatusDumpProto_default_instance_);
}
inline ::com::android::server::job::JobStatusDumpProto* JobSchedulerServiceDumpProto_RegisteredJob::release_dump() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.dump)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::job::JobStatusDumpProto* temp = dump_;
  dump_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusDumpProto* JobSchedulerServiceDumpProto_RegisteredJob::mutable_dump() {
  _has_bits_[0] |= 0x00000002u;
  if (dump_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusDumpProto>(GetArenaNoVirtual());
    dump_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.dump)
  return dump_;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::set_allocated_dump(::com::android::server::job::JobStatusDumpProto* dump) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete dump_;
  }
  if (dump) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dump = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dump, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  dump_ = dump;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.dump)
}

// optional bool is_job_ready_to_be_executed = 10;
inline bool JobSchedulerServiceDumpProto_RegisteredJob::has_is_job_ready_to_be_executed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::clear_is_job_ready_to_be_executed() {
  is_job_ready_to_be_executed_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool JobSchedulerServiceDumpProto_RegisteredJob::is_job_ready_to_be_executed() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.is_job_ready_to_be_executed)
  return is_job_ready_to_be_executed_;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::set_is_job_ready_to_be_executed(bool value) {
  _has_bits_[0] |= 0x00000040u;
  is_job_ready_to_be_executed_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.is_job_ready_to_be_executed)
}

// optional bool is_job_ready = 3;
inline bool JobSchedulerServiceDumpProto_RegisteredJob::has_is_job_ready() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::clear_is_job_ready() {
  is_job_ready_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool JobSchedulerServiceDumpProto_RegisteredJob::is_job_ready() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.is_job_ready)
  return is_job_ready_;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::set_is_job_ready(bool value) {
  _has_bits_[0] |= 0x00000080u;
  is_job_ready_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.is_job_ready)
}

// optional bool are_users_started = 4;
inline bool JobSchedulerServiceDumpProto_RegisteredJob::has_are_users_started() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::clear_are_users_started() {
  are_users_started_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool JobSchedulerServiceDumpProto_RegisteredJob::are_users_started() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.are_users_started)
  return are_users_started_;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::set_are_users_started(bool value) {
  _has_bits_[0] |= 0x00000100u;
  are_users_started_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.are_users_started)
}

// optional bool is_job_restricted = 11;
inline bool JobSchedulerServiceDumpProto_RegisteredJob::has_is_job_restricted() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::clear_is_job_restricted() {
  is_job_restricted_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool JobSchedulerServiceDumpProto_RegisteredJob::is_job_restricted() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.is_job_restricted)
  return is_job_restricted_;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::set_is_job_restricted(bool value) {
  _has_bits_[0] |= 0x00000200u;
  is_job_restricted_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.is_job_restricted)
}

// optional bool is_job_pending = 5;
inline bool JobSchedulerServiceDumpProto_RegisteredJob::has_is_job_pending() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::clear_is_job_pending() {
  is_job_pending_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool JobSchedulerServiceDumpProto_RegisteredJob::is_job_pending() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.is_job_pending)
  return is_job_pending_;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::set_is_job_pending(bool value) {
  _has_bits_[0] |= 0x00000004u;
  is_job_pending_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.is_job_pending)
}

// optional bool is_job_currently_active = 6;
inline bool JobSchedulerServiceDumpProto_RegisteredJob::has_is_job_currently_active() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::clear_is_job_currently_active() {
  is_job_currently_active_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool JobSchedulerServiceDumpProto_RegisteredJob::is_job_currently_active() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.is_job_currently_active)
  return is_job_currently_active_;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::set_is_job_currently_active(bool value) {
  _has_bits_[0] |= 0x00000008u;
  is_job_currently_active_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.is_job_currently_active)
}

// optional bool is_uid_backing_up = 7;
inline bool JobSchedulerServiceDumpProto_RegisteredJob::has_is_uid_backing_up() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::clear_is_uid_backing_up() {
  is_uid_backing_up_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool JobSchedulerServiceDumpProto_RegisteredJob::is_uid_backing_up() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.is_uid_backing_up)
  return is_uid_backing_up_;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::set_is_uid_backing_up(bool value) {
  _has_bits_[0] |= 0x00000010u;
  is_uid_backing_up_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.is_uid_backing_up)
}

// optional bool is_component_usable = 8;
inline bool JobSchedulerServiceDumpProto_RegisteredJob::has_is_component_usable() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::clear_is_component_usable() {
  is_component_usable_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool JobSchedulerServiceDumpProto_RegisteredJob::is_component_usable() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.is_component_usable)
  return is_component_usable_;
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::set_is_component_usable(bool value) {
  _has_bits_[0] |= 0x00000020u;
  is_component_usable_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.is_component_usable)
}

// repeated .com.android.server.job.JobSchedulerServiceDumpProto.JobRestriction restrictions = 12;
inline int JobSchedulerServiceDumpProto_RegisteredJob::restrictions_size() const {
  return restrictions_.size();
}
inline void JobSchedulerServiceDumpProto_RegisteredJob::clear_restrictions() {
  restrictions_.Clear();
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto_JobRestriction* JobSchedulerServiceDumpProto_RegisteredJob::mutable_restrictions(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.restrictions)
  return restrictions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_JobRestriction >*
JobSchedulerServiceDumpProto_RegisteredJob::mutable_restrictions() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.restrictions)
  return &restrictions_;
}
inline const ::com::android::server::job::JobSchedulerServiceDumpProto_JobRestriction& JobSchedulerServiceDumpProto_RegisteredJob::restrictions(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.restrictions)
  return restrictions_.Get(index);
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto_JobRestriction* JobSchedulerServiceDumpProto_RegisteredJob::add_restrictions() {
  // @@protoc_insertion_point(field_add:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.restrictions)
  return restrictions_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_JobRestriction >&
JobSchedulerServiceDumpProto_RegisteredJob::restrictions() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob.restrictions)
  return restrictions_;
}

// -------------------------------------------------------------------

// JobSchedulerServiceDumpProto_PriorityOverride

// optional int32 uid = 1;
inline bool JobSchedulerServiceDumpProto_PriorityOverride::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobSchedulerServiceDumpProto_PriorityOverride::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobSchedulerServiceDumpProto_PriorityOverride::uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.PriorityOverride.uid)
  return uid_;
}
inline void JobSchedulerServiceDumpProto_PriorityOverride::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.PriorityOverride.uid)
}

// optional sint32 override_value = 2;
inline bool JobSchedulerServiceDumpProto_PriorityOverride::has_override_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobSchedulerServiceDumpProto_PriorityOverride::clear_override_value() {
  override_value_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobSchedulerServiceDumpProto_PriorityOverride::override_value() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.PriorityOverride.override_value)
  return override_value_;
}
inline void JobSchedulerServiceDumpProto_PriorityOverride::set_override_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  override_value_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.PriorityOverride.override_value)
}

// -------------------------------------------------------------------

// JobSchedulerServiceDumpProto_PendingJob

// optional .com.android.server.job.JobStatusShortInfoProto info = 1;
inline bool JobSchedulerServiceDumpProto_PendingJob::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobSchedulerServiceDumpProto_PendingJob::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::JobStatusShortInfoProto& JobSchedulerServiceDumpProto_PendingJob::info() const {
  const ::com::android::server::job::JobStatusShortInfoProto* p = info_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.PendingJob.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusShortInfoProto*>(
      &::com::android::server::job::_JobStatusShortInfoProto_default_instance_);
}
inline ::com::android::server::job::JobStatusShortInfoProto* JobSchedulerServiceDumpProto_PendingJob::release_info() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.PendingJob.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::JobStatusShortInfoProto* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusShortInfoProto* JobSchedulerServiceDumpProto_PendingJob::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusShortInfoProto>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.PendingJob.info)
  return info_;
}
inline void JobSchedulerServiceDumpProto_PendingJob::set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobSchedulerServiceDumpProto.PendingJob.info)
}

// optional .com.android.server.job.JobStatusDumpProto dump = 2;
inline bool JobSchedulerServiceDumpProto_PendingJob::has_dump() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobSchedulerServiceDumpProto_PendingJob::clear_dump() {
  if (dump_ != nullptr) dump_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::job::JobStatusDumpProto& JobSchedulerServiceDumpProto_PendingJob::dump() const {
  const ::com::android::server::job::JobStatusDumpProto* p = dump_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.PendingJob.dump)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusDumpProto*>(
      &::com::android::server::job::_JobStatusDumpProto_default_instance_);
}
inline ::com::android::server::job::JobStatusDumpProto* JobSchedulerServiceDumpProto_PendingJob::release_dump() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.PendingJob.dump)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::job::JobStatusDumpProto* temp = dump_;
  dump_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusDumpProto* JobSchedulerServiceDumpProto_PendingJob::mutable_dump() {
  _has_bits_[0] |= 0x00000002u;
  if (dump_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusDumpProto>(GetArenaNoVirtual());
    dump_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.PendingJob.dump)
  return dump_;
}
inline void JobSchedulerServiceDumpProto_PendingJob::set_allocated_dump(::com::android::server::job::JobStatusDumpProto* dump) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete dump_;
  }
  if (dump) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dump = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dump, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  dump_ = dump;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobSchedulerServiceDumpProto.PendingJob.dump)
}

// optional sint32 evaluated_priority = 3;
inline bool JobSchedulerServiceDumpProto_PendingJob::has_evaluated_priority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobSchedulerServiceDumpProto_PendingJob::clear_evaluated_priority() {
  evaluated_priority_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobSchedulerServiceDumpProto_PendingJob::evaluated_priority() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.PendingJob.evaluated_priority)
  return evaluated_priority_;
}
inline void JobSchedulerServiceDumpProto_PendingJob::set_evaluated_priority(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  evaluated_priority_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.PendingJob.evaluated_priority)
}

// optional int64 pending_duration_ms = 4;
inline bool JobSchedulerServiceDumpProto_PendingJob::has_pending_duration_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobSchedulerServiceDumpProto_PendingJob::clear_pending_duration_ms() {
  pending_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobSchedulerServiceDumpProto_PendingJob::pending_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.PendingJob.pending_duration_ms)
  return pending_duration_ms_;
}
inline void JobSchedulerServiceDumpProto_PendingJob::set_pending_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  pending_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.PendingJob.pending_duration_ms)
}

// -------------------------------------------------------------------

// JobSchedulerServiceDumpProto_ActiveJob_InactiveJob

// optional int64 time_since_stopped_ms = 1;
inline bool JobSchedulerServiceDumpProto_ActiveJob_InactiveJob::has_time_since_stopped_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_InactiveJob::clear_time_since_stopped_ms() {
  time_since_stopped_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobSchedulerServiceDumpProto_ActiveJob_InactiveJob::time_since_stopped_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob.time_since_stopped_ms)
  return time_since_stopped_ms_;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_InactiveJob::set_time_since_stopped_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  time_since_stopped_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob.time_since_stopped_ms)
}

// optional string stopped_reason = 2;
inline bool JobSchedulerServiceDumpProto_ActiveJob_InactiveJob::has_stopped_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_InactiveJob::clear_stopped_reason() {
  stopped_reason_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& JobSchedulerServiceDumpProto_ActiveJob_InactiveJob::stopped_reason() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob.stopped_reason)
  return stopped_reason_.GetNoArena();
}
inline void JobSchedulerServiceDumpProto_ActiveJob_InactiveJob::set_stopped_reason(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  stopped_reason_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob.stopped_reason)
}
inline void JobSchedulerServiceDumpProto_ActiveJob_InactiveJob::set_stopped_reason(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  stopped_reason_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob.stopped_reason)
}
inline void JobSchedulerServiceDumpProto_ActiveJob_InactiveJob::set_stopped_reason(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  stopped_reason_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob.stopped_reason)
}
inline void JobSchedulerServiceDumpProto_ActiveJob_InactiveJob::set_stopped_reason(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  stopped_reason_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob.stopped_reason)
}
inline std::string* JobSchedulerServiceDumpProto_ActiveJob_InactiveJob::mutable_stopped_reason() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob.stopped_reason)
  return stopped_reason_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* JobSchedulerServiceDumpProto_ActiveJob_InactiveJob::release_stopped_reason() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob.stopped_reason)
  if (!has_stopped_reason()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return stopped_reason_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void JobSchedulerServiceDumpProto_ActiveJob_InactiveJob::set_allocated_stopped_reason(std::string* stopped_reason) {
  if (stopped_reason != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stopped_reason_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stopped_reason);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob.stopped_reason)
}

// -------------------------------------------------------------------

// JobSchedulerServiceDumpProto_ActiveJob_RunningJob

// optional .com.android.server.job.JobStatusShortInfoProto info = 1;
inline bool JobSchedulerServiceDumpProto_ActiveJob_RunningJob::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_RunningJob::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::JobStatusShortInfoProto& JobSchedulerServiceDumpProto_ActiveJob_RunningJob::info() const {
  const ::com::android::server::job::JobStatusShortInfoProto* p = info_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusShortInfoProto*>(
      &::com::android::server::job::_JobStatusShortInfoProto_default_instance_);
}
inline ::com::android::server::job::JobStatusShortInfoProto* JobSchedulerServiceDumpProto_ActiveJob_RunningJob::release_info() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::JobStatusShortInfoProto* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusShortInfoProto* JobSchedulerServiceDumpProto_ActiveJob_RunningJob::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusShortInfoProto>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.info)
  return info_;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_RunningJob::set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.info)
}

// optional int64 running_duration_ms = 2;
inline bool JobSchedulerServiceDumpProto_ActiveJob_RunningJob::has_running_duration_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_RunningJob::clear_running_duration_ms() {
  running_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobSchedulerServiceDumpProto_ActiveJob_RunningJob::running_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.running_duration_ms)
  return running_duration_ms_;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_RunningJob::set_running_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  running_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.running_duration_ms)
}

// optional int64 time_until_timeout_ms = 3;
inline bool JobSchedulerServiceDumpProto_ActiveJob_RunningJob::has_time_until_timeout_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_RunningJob::clear_time_until_timeout_ms() {
  time_until_timeout_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobSchedulerServiceDumpProto_ActiveJob_RunningJob::time_until_timeout_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.time_until_timeout_ms)
  return time_until_timeout_ms_;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_RunningJob::set_time_until_timeout_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  time_until_timeout_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.time_until_timeout_ms)
}

// optional .com.android.server.job.JobStatusDumpProto dump = 4;
inline bool JobSchedulerServiceDumpProto_ActiveJob_RunningJob::has_dump() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_RunningJob::clear_dump() {
  if (dump_ != nullptr) dump_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::job::JobStatusDumpProto& JobSchedulerServiceDumpProto_ActiveJob_RunningJob::dump() const {
  const ::com::android::server::job::JobStatusDumpProto* p = dump_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.dump)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusDumpProto*>(
      &::com::android::server::job::_JobStatusDumpProto_default_instance_);
}
inline ::com::android::server::job::JobStatusDumpProto* JobSchedulerServiceDumpProto_ActiveJob_RunningJob::release_dump() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.dump)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::job::JobStatusDumpProto* temp = dump_;
  dump_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusDumpProto* JobSchedulerServiceDumpProto_ActiveJob_RunningJob::mutable_dump() {
  _has_bits_[0] |= 0x00000002u;
  if (dump_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusDumpProto>(GetArenaNoVirtual());
    dump_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.dump)
  return dump_;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_RunningJob::set_allocated_dump(::com::android::server::job::JobStatusDumpProto* dump) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete dump_;
  }
  if (dump) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      dump = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dump, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  dump_ = dump;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.dump)
}

// optional sint32 evaluated_priority = 5;
inline bool JobSchedulerServiceDumpProto_ActiveJob_RunningJob::has_evaluated_priority() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_RunningJob::clear_evaluated_priority() {
  evaluated_priority_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobSchedulerServiceDumpProto_ActiveJob_RunningJob::evaluated_priority() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.evaluated_priority)
  return evaluated_priority_;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_RunningJob::set_evaluated_priority(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  evaluated_priority_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.evaluated_priority)
}

// optional int64 time_since_made_active_ms = 6;
inline bool JobSchedulerServiceDumpProto_ActiveJob_RunningJob::has_time_since_made_active_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_RunningJob::clear_time_since_made_active_ms() {
  time_since_made_active_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobSchedulerServiceDumpProto_ActiveJob_RunningJob::time_since_made_active_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.time_since_made_active_ms)
  return time_since_made_active_ms_;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_RunningJob::set_time_since_made_active_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  time_since_made_active_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.time_since_made_active_ms)
}

// optional int64 pending_duration_ms = 7;
inline bool JobSchedulerServiceDumpProto_ActiveJob_RunningJob::has_pending_duration_ms() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_RunningJob::clear_pending_duration_ms() {
  pending_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobSchedulerServiceDumpProto_ActiveJob_RunningJob::pending_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.pending_duration_ms)
  return pending_duration_ms_;
}
inline void JobSchedulerServiceDumpProto_ActiveJob_RunningJob::set_pending_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  pending_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob.pending_duration_ms)
}

// -------------------------------------------------------------------

// JobSchedulerServiceDumpProto_ActiveJob

// optional .com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.InactiveJob inactive = 1;
inline bool JobSchedulerServiceDumpProto_ActiveJob::has_inactive() const {
  return job_case() == kInactive;
}
inline void JobSchedulerServiceDumpProto_ActiveJob::set_has_inactive() {
  _oneof_case_[0] = kInactive;
}
inline void JobSchedulerServiceDumpProto_ActiveJob::clear_inactive() {
  if (has_inactive()) {
    delete job_.inactive_;
    clear_has_job();
  }
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_InactiveJob* JobSchedulerServiceDumpProto_ActiveJob::release_inactive() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.inactive)
  if (has_inactive()) {
    clear_has_job();
      ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_InactiveJob* temp = job_.inactive_;
    job_.inactive_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_InactiveJob& JobSchedulerServiceDumpProto_ActiveJob::inactive() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.inactive)
  return has_inactive()
      ? *job_.inactive_
      : *reinterpret_cast< ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_InactiveJob*>(&::com::android::server::job::_JobSchedulerServiceDumpProto_ActiveJob_InactiveJob_default_instance_);
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_InactiveJob* JobSchedulerServiceDumpProto_ActiveJob::mutable_inactive() {
  if (!has_inactive()) {
    clear_job();
    set_has_inactive();
    job_.inactive_ = CreateMaybeMessage< ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_InactiveJob >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.inactive)
  return job_.inactive_;
}

// optional .com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.RunningJob running = 2;
inline bool JobSchedulerServiceDumpProto_ActiveJob::has_running() const {
  return job_case() == kRunning;
}
inline void JobSchedulerServiceDumpProto_ActiveJob::set_has_running() {
  _oneof_case_[0] = kRunning;
}
inline void JobSchedulerServiceDumpProto_ActiveJob::clear_running() {
  if (has_running()) {
    delete job_.running_;
    clear_has_job();
  }
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_RunningJob* JobSchedulerServiceDumpProto_ActiveJob::release_running() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.running)
  if (has_running()) {
    clear_has_job();
      ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_RunningJob* temp = job_.running_;
    job_.running_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_RunningJob& JobSchedulerServiceDumpProto_ActiveJob::running() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.running)
  return has_running()
      ? *job_.running_
      : *reinterpret_cast< ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_RunningJob*>(&::com::android::server::job::_JobSchedulerServiceDumpProto_ActiveJob_RunningJob_default_instance_);
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_RunningJob* JobSchedulerServiceDumpProto_ActiveJob::mutable_running() {
  if (!has_running()) {
    clear_job();
    set_has_running();
    job_.running_ = CreateMaybeMessage< ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob_RunningJob >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob.running)
  return job_.running_;
}

inline bool JobSchedulerServiceDumpProto_ActiveJob::has_job() const {
  return job_case() != JOB_NOT_SET;
}
inline void JobSchedulerServiceDumpProto_ActiveJob::clear_has_job() {
  _oneof_case_[0] = JOB_NOT_SET;
}
inline JobSchedulerServiceDumpProto_ActiveJob::JobCase JobSchedulerServiceDumpProto_ActiveJob::job_case() const {
  return JobSchedulerServiceDumpProto_ActiveJob::JobCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// JobSchedulerServiceDumpProto

// optional .com.android.server.job.ConstantsProto settings = 1;
inline bool JobSchedulerServiceDumpProto::has_settings() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobSchedulerServiceDumpProto::clear_settings() {
  if (settings_ != nullptr) settings_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::ConstantsProto& JobSchedulerServiceDumpProto::settings() const {
  const ::com::android::server::job::ConstantsProto* p = settings_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.settings)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::ConstantsProto*>(
      &::com::android::server::job::_ConstantsProto_default_instance_);
}
inline ::com::android::server::job::ConstantsProto* JobSchedulerServiceDumpProto::release_settings() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.settings)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::ConstantsProto* temp = settings_;
  settings_ = nullptr;
  return temp;
}
inline ::com::android::server::job::ConstantsProto* JobSchedulerServiceDumpProto::mutable_settings() {
  _has_bits_[0] |= 0x00000001u;
  if (settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::ConstantsProto>(GetArenaNoVirtual());
    settings_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.settings)
  return settings_;
}
inline void JobSchedulerServiceDumpProto::set_allocated_settings(::com::android::server::job::ConstantsProto* settings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete settings_;
  }
  if (settings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      settings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, settings, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  settings_ = settings;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobSchedulerServiceDumpProto.settings)
}

// optional bool in_thermal = 19;
inline bool JobSchedulerServiceDumpProto::has_in_thermal() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JobSchedulerServiceDumpProto::clear_in_thermal() {
  in_thermal_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool JobSchedulerServiceDumpProto::in_thermal() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.in_thermal)
  return in_thermal_;
}
inline void JobSchedulerServiceDumpProto::set_in_thermal(bool value) {
  _has_bits_[0] |= 0x00000080u;
  in_thermal_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.in_thermal)
}

// repeated int32 started_users = 2;
inline int JobSchedulerServiceDumpProto::started_users_size() const {
  return started_users_.size();
}
inline void JobSchedulerServiceDumpProto::clear_started_users() {
  started_users_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobSchedulerServiceDumpProto::started_users(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.started_users)
  return started_users_.Get(index);
}
inline void JobSchedulerServiceDumpProto::set_started_users(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  started_users_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.started_users)
}
inline void JobSchedulerServiceDumpProto::add_started_users(::PROTOBUF_NAMESPACE_ID::int32 value) {
  started_users_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.JobSchedulerServiceDumpProto.started_users)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
JobSchedulerServiceDumpProto::started_users() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobSchedulerServiceDumpProto.started_users)
  return started_users_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
JobSchedulerServiceDumpProto::mutable_started_users() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobSchedulerServiceDumpProto.started_users)
  return &started_users_;
}

// repeated .com.android.server.job.JobSchedulerServiceDumpProto.RegisteredJob registered_jobs = 3;
inline int JobSchedulerServiceDumpProto::registered_jobs_size() const {
  return registered_jobs_.size();
}
inline void JobSchedulerServiceDumpProto::clear_registered_jobs() {
  registered_jobs_.Clear();
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto_RegisteredJob* JobSchedulerServiceDumpProto::mutable_registered_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.registered_jobs)
  return registered_jobs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_RegisteredJob >*
JobSchedulerServiceDumpProto::mutable_registered_jobs() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobSchedulerServiceDumpProto.registered_jobs)
  return &registered_jobs_;
}
inline const ::com::android::server::job::JobSchedulerServiceDumpProto_RegisteredJob& JobSchedulerServiceDumpProto::registered_jobs(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.registered_jobs)
  return registered_jobs_.Get(index);
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto_RegisteredJob* JobSchedulerServiceDumpProto::add_registered_jobs() {
  // @@protoc_insertion_point(field_add:com.android.server.job.JobSchedulerServiceDumpProto.registered_jobs)
  return registered_jobs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_RegisteredJob >&
JobSchedulerServiceDumpProto::registered_jobs() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobSchedulerServiceDumpProto.registered_jobs)
  return registered_jobs_;
}

// repeated .com.android.server.job.StateControllerProto controllers = 4;
inline int JobSchedulerServiceDumpProto::controllers_size() const {
  return controllers_.size();
}
inline void JobSchedulerServiceDumpProto::clear_controllers() {
  controllers_.Clear();
}
inline ::com::android::server::job::StateControllerProto* JobSchedulerServiceDumpProto::mutable_controllers(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.controllers)
  return controllers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto >*
JobSchedulerServiceDumpProto::mutable_controllers() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobSchedulerServiceDumpProto.controllers)
  return &controllers_;
}
inline const ::com::android::server::job::StateControllerProto& JobSchedulerServiceDumpProto::controllers(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.controllers)
  return controllers_.Get(index);
}
inline ::com::android::server::job::StateControllerProto* JobSchedulerServiceDumpProto::add_controllers() {
  // @@protoc_insertion_point(field_add:com.android.server.job.JobSchedulerServiceDumpProto.controllers)
  return controllers_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto >&
JobSchedulerServiceDumpProto::controllers() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobSchedulerServiceDumpProto.controllers)
  return controllers_;
}

// repeated .com.android.server.job.JobSchedulerServiceDumpProto.PriorityOverride priority_overrides = 5;
inline int JobSchedulerServiceDumpProto::priority_overrides_size() const {
  return priority_overrides_.size();
}
inline void JobSchedulerServiceDumpProto::clear_priority_overrides() {
  priority_overrides_.Clear();
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto_PriorityOverride* JobSchedulerServiceDumpProto::mutable_priority_overrides(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.priority_overrides)
  return priority_overrides_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_PriorityOverride >*
JobSchedulerServiceDumpProto::mutable_priority_overrides() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobSchedulerServiceDumpProto.priority_overrides)
  return &priority_overrides_;
}
inline const ::com::android::server::job::JobSchedulerServiceDumpProto_PriorityOverride& JobSchedulerServiceDumpProto::priority_overrides(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.priority_overrides)
  return priority_overrides_.Get(index);
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto_PriorityOverride* JobSchedulerServiceDumpProto::add_priority_overrides() {
  // @@protoc_insertion_point(field_add:com.android.server.job.JobSchedulerServiceDumpProto.priority_overrides)
  return priority_overrides_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_PriorityOverride >&
JobSchedulerServiceDumpProto::priority_overrides() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobSchedulerServiceDumpProto.priority_overrides)
  return priority_overrides_;
}

// repeated int32 backing_up_uids = 6;
inline int JobSchedulerServiceDumpProto::backing_up_uids_size() const {
  return backing_up_uids_.size();
}
inline void JobSchedulerServiceDumpProto::clear_backing_up_uids() {
  backing_up_uids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobSchedulerServiceDumpProto::backing_up_uids(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.backing_up_uids)
  return backing_up_uids_.Get(index);
}
inline void JobSchedulerServiceDumpProto::set_backing_up_uids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  backing_up_uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.backing_up_uids)
}
inline void JobSchedulerServiceDumpProto::add_backing_up_uids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  backing_up_uids_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.JobSchedulerServiceDumpProto.backing_up_uids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
JobSchedulerServiceDumpProto::backing_up_uids() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobSchedulerServiceDumpProto.backing_up_uids)
  return backing_up_uids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
JobSchedulerServiceDumpProto::mutable_backing_up_uids() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobSchedulerServiceDumpProto.backing_up_uids)
  return &backing_up_uids_;
}

// optional .com.android.server.job.JobPackageHistoryProto history = 7;
inline bool JobSchedulerServiceDumpProto::has_history() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobSchedulerServiceDumpProto::clear_history() {
  if (history_ != nullptr) history_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::job::JobPackageHistoryProto& JobSchedulerServiceDumpProto::history() const {
  const ::com::android::server::job::JobPackageHistoryProto* p = history_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.history)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobPackageHistoryProto*>(
      &::com::android::server::job::_JobPackageHistoryProto_default_instance_);
}
inline ::com::android::server::job::JobPackageHistoryProto* JobSchedulerServiceDumpProto::release_history() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.history)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::job::JobPackageHistoryProto* temp = history_;
  history_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobPackageHistoryProto* JobSchedulerServiceDumpProto::mutable_history() {
  _has_bits_[0] |= 0x00000002u;
  if (history_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobPackageHistoryProto>(GetArenaNoVirtual());
    history_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.history)
  return history_;
}
inline void JobSchedulerServiceDumpProto::set_allocated_history(::com::android::server::job::JobPackageHistoryProto* history) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete history_;
  }
  if (history) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      history = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, history, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  history_ = history;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobSchedulerServiceDumpProto.history)
}

// optional .com.android.server.job.JobPackageTrackerDumpProto package_tracker = 8;
inline bool JobSchedulerServiceDumpProto::has_package_tracker() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobSchedulerServiceDumpProto::clear_package_tracker() {
  if (package_tracker_ != nullptr) package_tracker_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::com::android::server::job::JobPackageTrackerDumpProto& JobSchedulerServiceDumpProto::package_tracker() const {
  const ::com::android::server::job::JobPackageTrackerDumpProto* p = package_tracker_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.package_tracker)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobPackageTrackerDumpProto*>(
      &::com::android::server::job::_JobPackageTrackerDumpProto_default_instance_);
}
inline ::com::android::server::job::JobPackageTrackerDumpProto* JobSchedulerServiceDumpProto::release_package_tracker() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.package_tracker)
  _has_bits_[0] &= ~0x00000004u;
  ::com::android::server::job::JobPackageTrackerDumpProto* temp = package_tracker_;
  package_tracker_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobPackageTrackerDumpProto* JobSchedulerServiceDumpProto::mutable_package_tracker() {
  _has_bits_[0] |= 0x00000004u;
  if (package_tracker_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobPackageTrackerDumpProto>(GetArenaNoVirtual());
    package_tracker_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.package_tracker)
  return package_tracker_;
}
inline void JobSchedulerServiceDumpProto::set_allocated_package_tracker(::com::android::server::job::JobPackageTrackerDumpProto* package_tracker) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete package_tracker_;
  }
  if (package_tracker) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      package_tracker = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, package_tracker, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  package_tracker_ = package_tracker;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobSchedulerServiceDumpProto.package_tracker)
}

// repeated .com.android.server.job.JobSchedulerServiceDumpProto.PendingJob pending_jobs = 9;
inline int JobSchedulerServiceDumpProto::pending_jobs_size() const {
  return pending_jobs_.size();
}
inline void JobSchedulerServiceDumpProto::clear_pending_jobs() {
  pending_jobs_.Clear();
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto_PendingJob* JobSchedulerServiceDumpProto::mutable_pending_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.pending_jobs)
  return pending_jobs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_PendingJob >*
JobSchedulerServiceDumpProto::mutable_pending_jobs() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobSchedulerServiceDumpProto.pending_jobs)
  return &pending_jobs_;
}
inline const ::com::android::server::job::JobSchedulerServiceDumpProto_PendingJob& JobSchedulerServiceDumpProto::pending_jobs(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.pending_jobs)
  return pending_jobs_.Get(index);
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto_PendingJob* JobSchedulerServiceDumpProto::add_pending_jobs() {
  // @@protoc_insertion_point(field_add:com.android.server.job.JobSchedulerServiceDumpProto.pending_jobs)
  return pending_jobs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_PendingJob >&
JobSchedulerServiceDumpProto::pending_jobs() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobSchedulerServiceDumpProto.pending_jobs)
  return pending_jobs_;
}

// repeated .com.android.server.job.JobSchedulerServiceDumpProto.ActiveJob active_jobs = 10;
inline int JobSchedulerServiceDumpProto::active_jobs_size() const {
  return active_jobs_.size();
}
inline void JobSchedulerServiceDumpProto::clear_active_jobs() {
  active_jobs_.Clear();
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob* JobSchedulerServiceDumpProto::mutable_active_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.active_jobs)
  return active_jobs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob >*
JobSchedulerServiceDumpProto::mutable_active_jobs() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobSchedulerServiceDumpProto.active_jobs)
  return &active_jobs_;
}
inline const ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob& JobSchedulerServiceDumpProto::active_jobs(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.active_jobs)
  return active_jobs_.Get(index);
}
inline ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob* JobSchedulerServiceDumpProto::add_active_jobs() {
  // @@protoc_insertion_point(field_add:com.android.server.job.JobSchedulerServiceDumpProto.active_jobs)
  return active_jobs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobSchedulerServiceDumpProto_ActiveJob >&
JobSchedulerServiceDumpProto::active_jobs() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobSchedulerServiceDumpProto.active_jobs)
  return active_jobs_;
}

// optional bool is_ready_to_rock = 11;
inline bool JobSchedulerServiceDumpProto::has_is_ready_to_rock() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JobSchedulerServiceDumpProto::clear_is_ready_to_rock() {
  is_ready_to_rock_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool JobSchedulerServiceDumpProto::is_ready_to_rock() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.is_ready_to_rock)
  return is_ready_to_rock_;
}
inline void JobSchedulerServiceDumpProto::set_is_ready_to_rock(bool value) {
  _has_bits_[0] |= 0x00000100u;
  is_ready_to_rock_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.is_ready_to_rock)
}

// optional bool reported_active = 12;
inline bool JobSchedulerServiceDumpProto::has_reported_active() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void JobSchedulerServiceDumpProto::clear_reported_active() {
  reported_active_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool JobSchedulerServiceDumpProto::reported_active() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.reported_active)
  return reported_active_;
}
inline void JobSchedulerServiceDumpProto::set_reported_active(bool value) {
  _has_bits_[0] |= 0x00000200u;
  reported_active_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.reported_active)
}

// optional int32 max_active_jobs = 13;
inline bool JobSchedulerServiceDumpProto::has_max_active_jobs() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JobSchedulerServiceDumpProto::clear_max_active_jobs() {
  max_active_jobs_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobSchedulerServiceDumpProto::max_active_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.max_active_jobs)
  return max_active_jobs_;
}
inline void JobSchedulerServiceDumpProto::set_max_active_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  max_active_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobSchedulerServiceDumpProto.max_active_jobs)
}

// optional .com.android.server.job.JobConcurrencyManagerProto concurrency_manager = 20;
inline bool JobSchedulerServiceDumpProto::has_concurrency_manager() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobSchedulerServiceDumpProto::clear_concurrency_manager() {
  if (concurrency_manager_ != nullptr) concurrency_manager_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::com::android::server::job::JobConcurrencyManagerProto& JobSchedulerServiceDumpProto::concurrency_manager() const {
  const ::com::android::server::job::JobConcurrencyManagerProto* p = concurrency_manager_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.concurrency_manager)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobConcurrencyManagerProto*>(
      &::com::android::server::job::_JobConcurrencyManagerProto_default_instance_);
}
inline ::com::android::server::job::JobConcurrencyManagerProto* JobSchedulerServiceDumpProto::release_concurrency_manager() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.concurrency_manager)
  _has_bits_[0] &= ~0x00000008u;
  ::com::android::server::job::JobConcurrencyManagerProto* temp = concurrency_manager_;
  concurrency_manager_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobConcurrencyManagerProto* JobSchedulerServiceDumpProto::mutable_concurrency_manager() {
  _has_bits_[0] |= 0x00000008u;
  if (concurrency_manager_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobConcurrencyManagerProto>(GetArenaNoVirtual());
    concurrency_manager_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.concurrency_manager)
  return concurrency_manager_;
}
inline void JobSchedulerServiceDumpProto::set_allocated_concurrency_manager(::com::android::server::job::JobConcurrencyManagerProto* concurrency_manager) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete concurrency_manager_;
  }
  if (concurrency_manager) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      concurrency_manager = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, concurrency_manager, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  concurrency_manager_ = concurrency_manager;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobSchedulerServiceDumpProto.concurrency_manager)
}

// optional .com.android.server.job.JobStorePersistStatsProto persist_stats = 21;
inline bool JobSchedulerServiceDumpProto::has_persist_stats() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JobSchedulerServiceDumpProto::clear_persist_stats() {
  if (persist_stats_ != nullptr) persist_stats_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::com::android::server::job::JobStorePersistStatsProto& JobSchedulerServiceDumpProto::persist_stats() const {
  const ::com::android::server::job::JobStorePersistStatsProto* p = persist_stats_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.persist_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStorePersistStatsProto*>(
      &::com::android::server::job::_JobStorePersistStatsProto_default_instance_);
}
inline ::com::android::server::job::JobStorePersistStatsProto* JobSchedulerServiceDumpProto::release_persist_stats() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.persist_stats)
  _has_bits_[0] &= ~0x00000010u;
  ::com::android::server::job::JobStorePersistStatsProto* temp = persist_stats_;
  persist_stats_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStorePersistStatsProto* JobSchedulerServiceDumpProto::mutable_persist_stats() {
  _has_bits_[0] |= 0x00000010u;
  if (persist_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStorePersistStatsProto>(GetArenaNoVirtual());
    persist_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.persist_stats)
  return persist_stats_;
}
inline void JobSchedulerServiceDumpProto::set_allocated_persist_stats(::com::android::server::job::JobStorePersistStatsProto* persist_stats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete persist_stats_;
  }
  if (persist_stats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      persist_stats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, persist_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  persist_stats_ = persist_stats;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobSchedulerServiceDumpProto.persist_stats)
}

// optional .android.util.quota.CountQuotaTrackerProto quota_tracker = 22;
inline bool JobSchedulerServiceDumpProto::has_quota_tracker() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline const ::android::util::quota::CountQuotaTrackerProto& JobSchedulerServiceDumpProto::quota_tracker() const {
  const ::android::util::quota::CountQuotaTrackerProto* p = quota_tracker_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobSchedulerServiceDumpProto.quota_tracker)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::util::quota::CountQuotaTrackerProto*>(
      &::android::util::quota::_CountQuotaTrackerProto_default_instance_);
}
inline ::android::util::quota::CountQuotaTrackerProto* JobSchedulerServiceDumpProto::release_quota_tracker() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobSchedulerServiceDumpProto.quota_tracker)
  _has_bits_[0] &= ~0x00000020u;
  ::android::util::quota::CountQuotaTrackerProto* temp = quota_tracker_;
  quota_tracker_ = nullptr;
  return temp;
}
inline ::android::util::quota::CountQuotaTrackerProto* JobSchedulerServiceDumpProto::mutable_quota_tracker() {
  _has_bits_[0] |= 0x00000020u;
  if (quota_tracker_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::util::quota::CountQuotaTrackerProto>(GetArenaNoVirtual());
    quota_tracker_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobSchedulerServiceDumpProto.quota_tracker)
  return quota_tracker_;
}
inline void JobSchedulerServiceDumpProto::set_allocated_quota_tracker(::android::util::quota::CountQuotaTrackerProto* quota_tracker) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(quota_tracker_);
  }
  if (quota_tracker) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      quota_tracker = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, quota_tracker, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  quota_tracker_ = quota_tracker;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobSchedulerServiceDumpProto.quota_tracker)
}

// -------------------------------------------------------------------

// ConstantsProto_QuotaController

// optional int64 allowed_time_per_period_ms = 1;
inline bool ConstantsProto_QuotaController::has_allowed_time_per_period_ms() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConstantsProto_QuotaController::clear_allowed_time_per_period_ms() {
  allowed_time_per_period_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::allowed_time_per_period_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.allowed_time_per_period_ms)
  return allowed_time_per_period_ms_;
}
inline void ConstantsProto_QuotaController::set_allowed_time_per_period_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  allowed_time_per_period_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.allowed_time_per_period_ms)
}

// optional int64 in_quota_buffer_ms = 2;
inline bool ConstantsProto_QuotaController::has_in_quota_buffer_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConstantsProto_QuotaController::clear_in_quota_buffer_ms() {
  in_quota_buffer_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::in_quota_buffer_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.in_quota_buffer_ms)
  return in_quota_buffer_ms_;
}
inline void ConstantsProto_QuotaController::set_in_quota_buffer_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  in_quota_buffer_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.in_quota_buffer_ms)
}

// optional int64 active_window_size_ms = 3;
inline bool ConstantsProto_QuotaController::has_active_window_size_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConstantsProto_QuotaController::clear_active_window_size_ms() {
  active_window_size_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::active_window_size_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.active_window_size_ms)
  return active_window_size_ms_;
}
inline void ConstantsProto_QuotaController::set_active_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  active_window_size_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.active_window_size_ms)
}

// optional int64 working_window_size_ms = 4;
inline bool ConstantsProto_QuotaController::has_working_window_size_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConstantsProto_QuotaController::clear_working_window_size_ms() {
  working_window_size_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::working_window_size_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.working_window_size_ms)
  return working_window_size_ms_;
}
inline void ConstantsProto_QuotaController::set_working_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  working_window_size_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.working_window_size_ms)
}

// optional int64 frequent_window_size_ms = 5;
inline bool ConstantsProto_QuotaController::has_frequent_window_size_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConstantsProto_QuotaController::clear_frequent_window_size_ms() {
  frequent_window_size_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::frequent_window_size_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.frequent_window_size_ms)
  return frequent_window_size_ms_;
}
inline void ConstantsProto_QuotaController::set_frequent_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  frequent_window_size_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.frequent_window_size_ms)
}

// optional int64 rare_window_size_ms = 6;
inline bool ConstantsProto_QuotaController::has_rare_window_size_ms() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConstantsProto_QuotaController::clear_rare_window_size_ms() {
  rare_window_size_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::rare_window_size_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.rare_window_size_ms)
  return rare_window_size_ms_;
}
inline void ConstantsProto_QuotaController::set_rare_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  rare_window_size_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.rare_window_size_ms)
}

// optional int64 restricted_window_size_ms = 20;
inline bool ConstantsProto_QuotaController::has_restricted_window_size_ms() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_restricted_window_size_ms() {
  restricted_window_size_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::restricted_window_size_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.restricted_window_size_ms)
  return restricted_window_size_ms_;
}
inline void ConstantsProto_QuotaController::set_restricted_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00040000u;
  restricted_window_size_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.restricted_window_size_ms)
}

// optional int64 max_execution_time_ms = 7;
inline bool ConstantsProto_QuotaController::has_max_execution_time_ms() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConstantsProto_QuotaController::clear_max_execution_time_ms() {
  max_execution_time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::max_execution_time_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.max_execution_time_ms)
  return max_execution_time_ms_;
}
inline void ConstantsProto_QuotaController::set_max_execution_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  max_execution_time_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.max_execution_time_ms)
}

// optional int32 max_job_count_active = 8;
inline bool ConstantsProto_QuotaController::has_max_job_count_active() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConstantsProto_QuotaController::clear_max_job_count_active() {
  max_job_count_active_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto_QuotaController::max_job_count_active() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.max_job_count_active)
  return max_job_count_active_;
}
inline void ConstantsProto_QuotaController::set_max_job_count_active(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  max_job_count_active_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.max_job_count_active)
}

// optional int32 max_job_count_working = 9;
inline bool ConstantsProto_QuotaController::has_max_job_count_working() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConstantsProto_QuotaController::clear_max_job_count_working() {
  max_job_count_working_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto_QuotaController::max_job_count_working() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.max_job_count_working)
  return max_job_count_working_;
}
inline void ConstantsProto_QuotaController::set_max_job_count_working(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  max_job_count_working_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.max_job_count_working)
}

// optional int32 max_job_count_frequent = 10;
inline bool ConstantsProto_QuotaController::has_max_job_count_frequent() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConstantsProto_QuotaController::clear_max_job_count_frequent() {
  max_job_count_frequent_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto_QuotaController::max_job_count_frequent() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.max_job_count_frequent)
  return max_job_count_frequent_;
}
inline void ConstantsProto_QuotaController::set_max_job_count_frequent(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  max_job_count_frequent_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.max_job_count_frequent)
}

// optional int32 max_job_count_rare = 11;
inline bool ConstantsProto_QuotaController::has_max_job_count_rare() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ConstantsProto_QuotaController::clear_max_job_count_rare() {
  max_job_count_rare_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto_QuotaController::max_job_count_rare() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.max_job_count_rare)
  return max_job_count_rare_;
}
inline void ConstantsProto_QuotaController::set_max_job_count_rare(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  max_job_count_rare_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.max_job_count_rare)
}

// optional int32 max_job_count_restricted = 21;
inline bool ConstantsProto_QuotaController::has_max_job_count_restricted() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_max_job_count_restricted() {
  max_job_count_restricted_ = 0;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto_QuotaController::max_job_count_restricted() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.max_job_count_restricted)
  return max_job_count_restricted_;
}
inline void ConstantsProto_QuotaController::set_max_job_count_restricted(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00100000u;
  max_job_count_restricted_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.max_job_count_restricted)
}

// optional int32 rate_limiting_window_ms = 19;
inline bool ConstantsProto_QuotaController::has_rate_limiting_window_ms() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_rate_limiting_window_ms() {
  rate_limiting_window_ms_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto_QuotaController::rate_limiting_window_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.rate_limiting_window_ms)
  return rate_limiting_window_ms_;
}
inline void ConstantsProto_QuotaController::set_rate_limiting_window_ms(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00080000u;
  rate_limiting_window_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.rate_limiting_window_ms)
}

// optional int32 max_job_count_per_rate_limiting_window = 12;
inline bool ConstantsProto_QuotaController::has_max_job_count_per_rate_limiting_window() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ConstantsProto_QuotaController::clear_max_job_count_per_rate_limiting_window() {
  max_job_count_per_rate_limiting_window_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto_QuotaController::max_job_count_per_rate_limiting_window() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.max_job_count_per_rate_limiting_window)
  return max_job_count_per_rate_limiting_window_;
}
inline void ConstantsProto_QuotaController::set_max_job_count_per_rate_limiting_window(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  max_job_count_per_rate_limiting_window_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.max_job_count_per_rate_limiting_window)
}

// optional int32 max_session_count_active = 13;
inline bool ConstantsProto_QuotaController::has_max_session_count_active() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_max_session_count_active() {
  max_session_count_active_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto_QuotaController::max_session_count_active() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.max_session_count_active)
  return max_session_count_active_;
}
inline void ConstantsProto_QuotaController::set_max_session_count_active(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  max_session_count_active_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.max_session_count_active)
}

// optional int32 max_session_count_working = 14;
inline bool ConstantsProto_QuotaController::has_max_session_count_working() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_max_session_count_working() {
  max_session_count_working_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto_QuotaController::max_session_count_working() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.max_session_count_working)
  return max_session_count_working_;
}
inline void ConstantsProto_QuotaController::set_max_session_count_working(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00002000u;
  max_session_count_working_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.max_session_count_working)
}

// optional int32 max_session_count_frequent = 15;
inline bool ConstantsProto_QuotaController::has_max_session_count_frequent() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_max_session_count_frequent() {
  max_session_count_frequent_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto_QuotaController::max_session_count_frequent() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.max_session_count_frequent)
  return max_session_count_frequent_;
}
inline void ConstantsProto_QuotaController::set_max_session_count_frequent(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  max_session_count_frequent_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.max_session_count_frequent)
}

// optional int32 max_session_count_rare = 16;
inline bool ConstantsProto_QuotaController::has_max_session_count_rare() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_max_session_count_rare() {
  max_session_count_rare_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto_QuotaController::max_session_count_rare() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.max_session_count_rare)
  return max_session_count_rare_;
}
inline void ConstantsProto_QuotaController::set_max_session_count_rare(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00008000u;
  max_session_count_rare_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.max_session_count_rare)
}

// optional int32 max_session_count_restricted = 22;
inline bool ConstantsProto_QuotaController::has_max_session_count_restricted() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void ConstantsProto_QuotaController::clear_max_session_count_restricted() {
  max_session_count_restricted_ = 0;
  _has_bits_[1] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto_QuotaController::max_session_count_restricted() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.max_session_count_restricted)
  return max_session_count_restricted_;
}
inline void ConstantsProto_QuotaController::set_max_session_count_restricted(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000001u;
  max_session_count_restricted_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.max_session_count_restricted)
}

// optional int32 max_session_count_per_rate_limiting_window = 17;
inline bool ConstantsProto_QuotaController::has_max_session_count_per_rate_limiting_window() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_max_session_count_per_rate_limiting_window() {
  max_session_count_per_rate_limiting_window_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto_QuotaController::max_session_count_per_rate_limiting_window() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.max_session_count_per_rate_limiting_window)
  return max_session_count_per_rate_limiting_window_;
}
inline void ConstantsProto_QuotaController::set_max_session_count_per_rate_limiting_window(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00010000u;
  max_session_count_per_rate_limiting_window_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.max_session_count_per_rate_limiting_window)
}

// optional int64 timing_session_coalescing_duration_ms = 18;
inline bool ConstantsProto_QuotaController::has_timing_session_coalescing_duration_ms() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_timing_session_coalescing_duration_ms() {
  timing_session_coalescing_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::timing_session_coalescing_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.timing_session_coalescing_duration_ms)
  return timing_session_coalescing_duration_ms_;
}
inline void ConstantsProto_QuotaController::set_timing_session_coalescing_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00020000u;
  timing_session_coalescing_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.timing_session_coalescing_duration_ms)
}

// optional int64 min_quota_check_delay_ms = 23;
inline bool ConstantsProto_QuotaController::has_min_quota_check_delay_ms() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_min_quota_check_delay_ms() {
  min_quota_check_delay_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::min_quota_check_delay_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.min_quota_check_delay_ms)
  return min_quota_check_delay_ms_;
}
inline void ConstantsProto_QuotaController::set_min_quota_check_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00200000u;
  min_quota_check_delay_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.min_quota_check_delay_ms)
}

// optional int64 expedited_job_limit_active_ms = 24;
inline bool ConstantsProto_QuotaController::has_expedited_job_limit_active_ms() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_expedited_job_limit_active_ms() {
  expedited_job_limit_active_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::expedited_job_limit_active_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.expedited_job_limit_active_ms)
  return expedited_job_limit_active_ms_;
}
inline void ConstantsProto_QuotaController::set_expedited_job_limit_active_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00400000u;
  expedited_job_limit_active_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.expedited_job_limit_active_ms)
}

// optional int64 expedited_job_limit_working_ms = 25;
inline bool ConstantsProto_QuotaController::has_expedited_job_limit_working_ms() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_expedited_job_limit_working_ms() {
  expedited_job_limit_working_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::expedited_job_limit_working_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.expedited_job_limit_working_ms)
  return expedited_job_limit_working_ms_;
}
inline void ConstantsProto_QuotaController::set_expedited_job_limit_working_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00800000u;
  expedited_job_limit_working_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.expedited_job_limit_working_ms)
}

// optional int64 expedited_job_limit_frequent_ms = 26;
inline bool ConstantsProto_QuotaController::has_expedited_job_limit_frequent_ms() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_expedited_job_limit_frequent_ms() {
  expedited_job_limit_frequent_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::expedited_job_limit_frequent_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.expedited_job_limit_frequent_ms)
  return expedited_job_limit_frequent_ms_;
}
inline void ConstantsProto_QuotaController::set_expedited_job_limit_frequent_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x01000000u;
  expedited_job_limit_frequent_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.expedited_job_limit_frequent_ms)
}

// optional int64 expedited_job_limit_rare_ms = 27;
inline bool ConstantsProto_QuotaController::has_expedited_job_limit_rare_ms() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_expedited_job_limit_rare_ms() {
  expedited_job_limit_rare_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::expedited_job_limit_rare_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.expedited_job_limit_rare_ms)
  return expedited_job_limit_rare_ms_;
}
inline void ConstantsProto_QuotaController::set_expedited_job_limit_rare_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x02000000u;
  expedited_job_limit_rare_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.expedited_job_limit_rare_ms)
}

// optional int64 expedited_job_limit_restricted_ms = 28;
inline bool ConstantsProto_QuotaController::has_expedited_job_limit_restricted_ms() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_expedited_job_limit_restricted_ms() {
  expedited_job_limit_restricted_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::expedited_job_limit_restricted_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.expedited_job_limit_restricted_ms)
  return expedited_job_limit_restricted_ms_;
}
inline void ConstantsProto_QuotaController::set_expedited_job_limit_restricted_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x04000000u;
  expedited_job_limit_restricted_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.expedited_job_limit_restricted_ms)
}

// optional int64 expedited_job_window_size_ms = 29;
inline bool ConstantsProto_QuotaController::has_expedited_job_window_size_ms() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_expedited_job_window_size_ms() {
  expedited_job_window_size_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x08000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::expedited_job_window_size_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.expedited_job_window_size_ms)
  return expedited_job_window_size_ms_;
}
inline void ConstantsProto_QuotaController::set_expedited_job_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x08000000u;
  expedited_job_window_size_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.expedited_job_window_size_ms)
}

// optional int64 expedited_job_top_app_time_chunk_size_ms = 30;
inline bool ConstantsProto_QuotaController::has_expedited_job_top_app_time_chunk_size_ms() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_expedited_job_top_app_time_chunk_size_ms() {
  expedited_job_top_app_time_chunk_size_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x10000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::expedited_job_top_app_time_chunk_size_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.expedited_job_top_app_time_chunk_size_ms)
  return expedited_job_top_app_time_chunk_size_ms_;
}
inline void ConstantsProto_QuotaController::set_expedited_job_top_app_time_chunk_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x10000000u;
  expedited_job_top_app_time_chunk_size_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.expedited_job_top_app_time_chunk_size_ms)
}

// optional int64 expedited_job_reward_top_app_ms = 31;
inline bool ConstantsProto_QuotaController::has_expedited_job_reward_top_app_ms() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_expedited_job_reward_top_app_ms() {
  expedited_job_reward_top_app_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x20000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::expedited_job_reward_top_app_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.expedited_job_reward_top_app_ms)
  return expedited_job_reward_top_app_ms_;
}
inline void ConstantsProto_QuotaController::set_expedited_job_reward_top_app_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x20000000u;
  expedited_job_reward_top_app_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.expedited_job_reward_top_app_ms)
}

// optional int64 expedited_job_reward_interaction_ms = 32;
inline bool ConstantsProto_QuotaController::has_expedited_job_reward_interaction_ms() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_expedited_job_reward_interaction_ms() {
  expedited_job_reward_interaction_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x40000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::expedited_job_reward_interaction_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.expedited_job_reward_interaction_ms)
  return expedited_job_reward_interaction_ms_;
}
inline void ConstantsProto_QuotaController::set_expedited_job_reward_interaction_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x40000000u;
  expedited_job_reward_interaction_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.expedited_job_reward_interaction_ms)
}

// optional int64 expedited_job_reward_notification_seen_ms = 33;
inline bool ConstantsProto_QuotaController::has_expedited_job_reward_notification_seen_ms() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void ConstantsProto_QuotaController::clear_expedited_job_reward_notification_seen_ms() {
  expedited_job_reward_notification_seen_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x80000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto_QuotaController::expedited_job_reward_notification_seen_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.QuotaController.expedited_job_reward_notification_seen_ms)
  return expedited_job_reward_notification_seen_ms_;
}
inline void ConstantsProto_QuotaController::set_expedited_job_reward_notification_seen_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x80000000u;
  expedited_job_reward_notification_seen_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.QuotaController.expedited_job_reward_notification_seen_ms)
}

// -------------------------------------------------------------------

// ConstantsProto_TimeController

// -------------------------------------------------------------------

// ConstantsProto

// optional int32 min_ready_non_active_jobs_count = 29;
inline bool ConstantsProto::has_min_ready_non_active_jobs_count() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ConstantsProto::clear_min_ready_non_active_jobs_count() {
  min_ready_non_active_jobs_count_ = 0;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto::min_ready_non_active_jobs_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.min_ready_non_active_jobs_count)
  return min_ready_non_active_jobs_count_;
}
inline void ConstantsProto::set_min_ready_non_active_jobs_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00100000u;
  min_ready_non_active_jobs_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.min_ready_non_active_jobs_count)
}

// optional int64 max_non_active_job_batch_delay_ms = 30;
inline bool ConstantsProto::has_max_non_active_job_batch_delay_ms() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ConstantsProto::clear_max_non_active_job_batch_delay_ms() {
  max_non_active_job_batch_delay_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto::max_non_active_job_batch_delay_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.max_non_active_job_batch_delay_ms)
  return max_non_active_job_batch_delay_ms_;
}
inline void ConstantsProto::set_max_non_active_job_batch_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00080000u;
  max_non_active_job_batch_delay_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.max_non_active_job_batch_delay_ms)
}

// optional double heavy_use_factor = 8;
inline bool ConstantsProto::has_heavy_use_factor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConstantsProto::clear_heavy_use_factor() {
  heavy_use_factor_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline double ConstantsProto::heavy_use_factor() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.heavy_use_factor)
  return heavy_use_factor_;
}
inline void ConstantsProto::set_heavy_use_factor(double value) {
  _has_bits_[0] |= 0x00000010u;
  heavy_use_factor_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.heavy_use_factor)
}

// optional double moderate_use_factor = 9;
inline bool ConstantsProto::has_moderate_use_factor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConstantsProto::clear_moderate_use_factor() {
  moderate_use_factor_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline double ConstantsProto::moderate_use_factor() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.moderate_use_factor)
  return moderate_use_factor_;
}
inline void ConstantsProto::set_moderate_use_factor(double value) {
  _has_bits_[0] |= 0x00000020u;
  moderate_use_factor_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.moderate_use_factor)
}

// optional int32 fg_job_count = 10;
inline bool ConstantsProto::has_fg_job_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConstantsProto::clear_fg_job_count() {
  fg_job_count_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto::fg_job_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.fg_job_count)
  return fg_job_count_;
}
inline void ConstantsProto::set_fg_job_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  fg_job_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.fg_job_count)
}

// optional int32 bg_normal_job_count = 11;
inline bool ConstantsProto::has_bg_normal_job_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConstantsProto::clear_bg_normal_job_count() {
  bg_normal_job_count_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto::bg_normal_job_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.bg_normal_job_count)
  return bg_normal_job_count_;
}
inline void ConstantsProto::set_bg_normal_job_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  bg_normal_job_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.bg_normal_job_count)
}

// optional int32 bg_moderate_job_count = 12;
inline bool ConstantsProto::has_bg_moderate_job_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConstantsProto::clear_bg_moderate_job_count() {
  bg_moderate_job_count_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto::bg_moderate_job_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.bg_moderate_job_count)
  return bg_moderate_job_count_;
}
inline void ConstantsProto::set_bg_moderate_job_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  bg_moderate_job_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.bg_moderate_job_count)
}

// optional int32 bg_low_job_count = 13;
inline bool ConstantsProto::has_bg_low_job_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConstantsProto::clear_bg_low_job_count() {
  bg_low_job_count_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto::bg_low_job_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.bg_low_job_count)
  return bg_low_job_count_;
}
inline void ConstantsProto::set_bg_low_job_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  bg_low_job_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.bg_low_job_count)
}

// optional int32 bg_critical_job_count = 14;
inline bool ConstantsProto::has_bg_critical_job_count() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ConstantsProto::clear_bg_critical_job_count() {
  bg_critical_job_count_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto::bg_critical_job_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.bg_critical_job_count)
  return bg_critical_job_count_;
}
inline void ConstantsProto::set_bg_critical_job_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00002000u;
  bg_critical_job_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.bg_critical_job_count)
}

// optional int64 min_linear_backoff_time_ms = 17;
inline bool ConstantsProto::has_min_linear_backoff_time_ms() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ConstantsProto::clear_min_linear_backoff_time_ms() {
  min_linear_backoff_time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto::min_linear_backoff_time_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.min_linear_backoff_time_ms)
  return min_linear_backoff_time_ms_;
}
inline void ConstantsProto::set_min_linear_backoff_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000400u;
  min_linear_backoff_time_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.min_linear_backoff_time_ms)
}

// optional int64 min_exp_backoff_time_ms = 18;
inline bool ConstantsProto::has_min_exp_backoff_time_ms() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ConstantsProto::clear_min_exp_backoff_time_ms() {
  min_exp_backoff_time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto::min_exp_backoff_time_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.min_exp_backoff_time_ms)
  return min_exp_backoff_time_ms_;
}
inline void ConstantsProto::set_min_exp_backoff_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000800u;
  min_exp_backoff_time_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.min_exp_backoff_time_ms)
}

// optional double conn_congestion_delay_frac = 21;
inline bool ConstantsProto::has_conn_congestion_delay_frac() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ConstantsProto::clear_conn_congestion_delay_frac() {
  conn_congestion_delay_frac_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline double ConstantsProto::conn_congestion_delay_frac() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.conn_congestion_delay_frac)
  return conn_congestion_delay_frac_;
}
inline void ConstantsProto::set_conn_congestion_delay_frac(double value) {
  _has_bits_[0] |= 0x00001000u;
  conn_congestion_delay_frac_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.conn_congestion_delay_frac)
}

// optional double conn_prefetch_relax_frac = 22;
inline bool ConstantsProto::has_conn_prefetch_relax_frac() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ConstantsProto::clear_conn_prefetch_relax_frac() {
  conn_prefetch_relax_frac_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline double ConstantsProto::conn_prefetch_relax_frac() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.conn_prefetch_relax_frac)
  return conn_prefetch_relax_frac_;
}
inline void ConstantsProto::set_conn_prefetch_relax_frac(double value) {
  _has_bits_[0] |= 0x00008000u;
  conn_prefetch_relax_frac_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.conn_prefetch_relax_frac)
}

// optional bool enable_api_quotas = 31;
inline bool ConstantsProto::has_enable_api_quotas() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ConstantsProto::clear_enable_api_quotas() {
  enable_api_quotas_ = false;
  _has_bits_[0] &= ~0x00010000u;
}
inline bool ConstantsProto::enable_api_quotas() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.enable_api_quotas)
  return enable_api_quotas_;
}
inline void ConstantsProto::set_enable_api_quotas(bool value) {
  _has_bits_[0] |= 0x00010000u;
  enable_api_quotas_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.enable_api_quotas)
}

// optional int32 api_quota_schedule_count = 32;
inline bool ConstantsProto::has_api_quota_schedule_count() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ConstantsProto::clear_api_quota_schedule_count() {
  api_quota_schedule_count_ = 0;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto::api_quota_schedule_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.api_quota_schedule_count)
  return api_quota_schedule_count_;
}
inline void ConstantsProto::set_api_quota_schedule_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00200000u;
  api_quota_schedule_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.api_quota_schedule_count)
}

// optional int64 api_quota_schedule_window_ms = 33;
inline bool ConstantsProto::has_api_quota_schedule_window_ms() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ConstantsProto::clear_api_quota_schedule_window_ms() {
  api_quota_schedule_window_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ConstantsProto::api_quota_schedule_window_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.api_quota_schedule_window_ms)
  return api_quota_schedule_window_ms_;
}
inline void ConstantsProto::set_api_quota_schedule_window_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00400000u;
  api_quota_schedule_window_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.api_quota_schedule_window_ms)
}

// optional bool api_quota_schedule_throw_exception = 34;
inline bool ConstantsProto::has_api_quota_schedule_throw_exception() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ConstantsProto::clear_api_quota_schedule_throw_exception() {
  api_quota_schedule_throw_exception_ = false;
  _has_bits_[0] &= ~0x00020000u;
}
inline bool ConstantsProto::api_quota_schedule_throw_exception() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.api_quota_schedule_throw_exception)
  return api_quota_schedule_throw_exception_;
}
inline void ConstantsProto::set_api_quota_schedule_throw_exception(bool value) {
  _has_bits_[0] |= 0x00020000u;
  api_quota_schedule_throw_exception_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.api_quota_schedule_throw_exception)
}

// optional bool api_quota_schedule_return_failure_result = 35;
inline bool ConstantsProto::has_api_quota_schedule_return_failure_result() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ConstantsProto::clear_api_quota_schedule_return_failure_result() {
  api_quota_schedule_return_failure_result_ = false;
  _has_bits_[0] &= ~0x00040000u;
}
inline bool ConstantsProto::api_quota_schedule_return_failure_result() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.api_quota_schedule_return_failure_result)
  return api_quota_schedule_return_failure_result_;
}
inline void ConstantsProto::set_api_quota_schedule_return_failure_result(bool value) {
  _has_bits_[0] |= 0x00040000u;
  api_quota_schedule_return_failure_result_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.api_quota_schedule_return_failure_result)
}

// optional .com.android.server.job.ConstantsProto.QuotaController quota_controller = 24;
inline bool ConstantsProto::has_quota_controller() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConstantsProto::clear_quota_controller() {
  if (quota_controller_ != nullptr) quota_controller_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::ConstantsProto_QuotaController& ConstantsProto::quota_controller() const {
  const ::com::android::server::job::ConstantsProto_QuotaController* p = quota_controller_;
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.quota_controller)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::ConstantsProto_QuotaController*>(
      &::com::android::server::job::_ConstantsProto_QuotaController_default_instance_);
}
inline ::com::android::server::job::ConstantsProto_QuotaController* ConstantsProto::release_quota_controller() {
  // @@protoc_insertion_point(field_release:com.android.server.job.ConstantsProto.quota_controller)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::ConstantsProto_QuotaController* temp = quota_controller_;
  quota_controller_ = nullptr;
  return temp;
}
inline ::com::android::server::job::ConstantsProto_QuotaController* ConstantsProto::mutable_quota_controller() {
  _has_bits_[0] |= 0x00000001u;
  if (quota_controller_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::ConstantsProto_QuotaController>(GetArenaNoVirtual());
    quota_controller_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.ConstantsProto.quota_controller)
  return quota_controller_;
}
inline void ConstantsProto::set_allocated_quota_controller(::com::android::server::job::ConstantsProto_QuotaController* quota_controller) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete quota_controller_;
  }
  if (quota_controller) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      quota_controller = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, quota_controller, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  quota_controller_ = quota_controller;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.ConstantsProto.quota_controller)
}

// optional .com.android.server.job.ConstantsProto.TimeController time_controller = 25;
inline bool ConstantsProto::has_time_controller() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConstantsProto::clear_time_controller() {
  if (time_controller_ != nullptr) time_controller_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::job::ConstantsProto_TimeController& ConstantsProto::time_controller() const {
  const ::com::android::server::job::ConstantsProto_TimeController* p = time_controller_;
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.time_controller)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::ConstantsProto_TimeController*>(
      &::com::android::server::job::_ConstantsProto_TimeController_default_instance_);
}
inline ::com::android::server::job::ConstantsProto_TimeController* ConstantsProto::release_time_controller() {
  // @@protoc_insertion_point(field_release:com.android.server.job.ConstantsProto.time_controller)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::job::ConstantsProto_TimeController* temp = time_controller_;
  time_controller_ = nullptr;
  return temp;
}
inline ::com::android::server::job::ConstantsProto_TimeController* ConstantsProto::mutable_time_controller() {
  _has_bits_[0] |= 0x00000002u;
  if (time_controller_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::ConstantsProto_TimeController>(GetArenaNoVirtual());
    time_controller_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.ConstantsProto.time_controller)
  return time_controller_;
}
inline void ConstantsProto::set_allocated_time_controller(::com::android::server::job::ConstantsProto_TimeController* time_controller) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete time_controller_;
  }
  if (time_controller) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      time_controller = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, time_controller, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  time_controller_ = time_controller;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.ConstantsProto.time_controller)
}

// optional .com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto max_job_counts_screen_on = 26;
inline bool ConstantsProto::has_max_job_counts_screen_on() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConstantsProto::clear_max_job_counts_screen_on() {
  if (max_job_counts_screen_on_ != nullptr) max_job_counts_screen_on_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto& ConstantsProto::max_job_counts_screen_on() const {
  const ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* p = max_job_counts_screen_on_;
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.max_job_counts_screen_on)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto*>(
      &::com::android::server::job::_MaxJobCountsPerMemoryTrimLevelProto_default_instance_);
}
inline ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* ConstantsProto::release_max_job_counts_screen_on() {
  // @@protoc_insertion_point(field_release:com.android.server.job.ConstantsProto.max_job_counts_screen_on)
  _has_bits_[0] &= ~0x00000004u;
  ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* temp = max_job_counts_screen_on_;
  max_job_counts_screen_on_ = nullptr;
  return temp;
}
inline ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* ConstantsProto::mutable_max_job_counts_screen_on() {
  _has_bits_[0] |= 0x00000004u;
  if (max_job_counts_screen_on_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto>(GetArenaNoVirtual());
    max_job_counts_screen_on_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.ConstantsProto.max_job_counts_screen_on)
  return max_job_counts_screen_on_;
}
inline void ConstantsProto::set_allocated_max_job_counts_screen_on(::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* max_job_counts_screen_on) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete max_job_counts_screen_on_;
  }
  if (max_job_counts_screen_on) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      max_job_counts_screen_on = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, max_job_counts_screen_on, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  max_job_counts_screen_on_ = max_job_counts_screen_on;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.ConstantsProto.max_job_counts_screen_on)
}

// optional .com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto max_job_counts_screen_off = 27;
inline bool ConstantsProto::has_max_job_counts_screen_off() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConstantsProto::clear_max_job_counts_screen_off() {
  if (max_job_counts_screen_off_ != nullptr) max_job_counts_screen_off_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto& ConstantsProto::max_job_counts_screen_off() const {
  const ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* p = max_job_counts_screen_off_;
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.max_job_counts_screen_off)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto*>(
      &::com::android::server::job::_MaxJobCountsPerMemoryTrimLevelProto_default_instance_);
}
inline ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* ConstantsProto::release_max_job_counts_screen_off() {
  // @@protoc_insertion_point(field_release:com.android.server.job.ConstantsProto.max_job_counts_screen_off)
  _has_bits_[0] &= ~0x00000008u;
  ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* temp = max_job_counts_screen_off_;
  max_job_counts_screen_off_ = nullptr;
  return temp;
}
inline ::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* ConstantsProto::mutable_max_job_counts_screen_off() {
  _has_bits_[0] |= 0x00000008u;
  if (max_job_counts_screen_off_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto>(GetArenaNoVirtual());
    max_job_counts_screen_off_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.ConstantsProto.max_job_counts_screen_off)
  return max_job_counts_screen_off_;
}
inline void ConstantsProto::set_allocated_max_job_counts_screen_off(::com::android::server::job::MaxJobCountsPerMemoryTrimLevelProto* max_job_counts_screen_off) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete max_job_counts_screen_off_;
  }
  if (max_job_counts_screen_off) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      max_job_counts_screen_off = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, max_job_counts_screen_off, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  max_job_counts_screen_off_ = max_job_counts_screen_off;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.ConstantsProto.max_job_counts_screen_off)
}

// optional int32 screen_off_job_concurrency_increase_delay_ms = 28;
inline bool ConstantsProto::has_screen_off_job_concurrency_increase_delay_ms() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ConstantsProto::clear_screen_off_job_concurrency_increase_delay_ms() {
  screen_off_job_concurrency_increase_delay_ms_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConstantsProto::screen_off_job_concurrency_increase_delay_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.ConstantsProto.screen_off_job_concurrency_increase_delay_ms)
  return screen_off_job_concurrency_increase_delay_ms_;
}
inline void ConstantsProto::set_screen_off_job_concurrency_increase_delay_ms(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  screen_off_job_concurrency_increase_delay_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.ConstantsProto.screen_off_job_concurrency_increase_delay_ms)
}

// -------------------------------------------------------------------

// MaxJobCountsProto

// optional int32 total_jobs = 1;
inline bool MaxJobCountsProto::has_total_jobs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MaxJobCountsProto::clear_total_jobs() {
  total_jobs_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MaxJobCountsProto::total_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.MaxJobCountsProto.total_jobs)
  return total_jobs_;
}
inline void MaxJobCountsProto::set_total_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  total_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.MaxJobCountsProto.total_jobs)
}

// optional int32 max_bg = 2;
inline bool MaxJobCountsProto::has_max_bg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MaxJobCountsProto::clear_max_bg() {
  max_bg_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MaxJobCountsProto::max_bg() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.MaxJobCountsProto.max_bg)
  return max_bg_;
}
inline void MaxJobCountsProto::set_max_bg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  max_bg_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.MaxJobCountsProto.max_bg)
}

// optional int32 min_bg = 3;
inline bool MaxJobCountsProto::has_min_bg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MaxJobCountsProto::clear_min_bg() {
  min_bg_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MaxJobCountsProto::min_bg() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.MaxJobCountsProto.min_bg)
  return min_bg_;
}
inline void MaxJobCountsProto::set_min_bg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  min_bg_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.MaxJobCountsProto.min_bg)
}

// -------------------------------------------------------------------

// MaxJobCountsPerMemoryTrimLevelProto

// optional .com.android.server.job.MaxJobCountsProto normal = 1;
inline bool MaxJobCountsPerMemoryTrimLevelProto::has_normal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MaxJobCountsPerMemoryTrimLevelProto::clear_normal() {
  if (normal_ != nullptr) normal_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::MaxJobCountsProto& MaxJobCountsPerMemoryTrimLevelProto::normal() const {
  const ::com::android::server::job::MaxJobCountsProto* p = normal_;
  // @@protoc_insertion_point(field_get:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.normal)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::MaxJobCountsProto*>(
      &::com::android::server::job::_MaxJobCountsProto_default_instance_);
}
inline ::com::android::server::job::MaxJobCountsProto* MaxJobCountsPerMemoryTrimLevelProto::release_normal() {
  // @@protoc_insertion_point(field_release:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.normal)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::MaxJobCountsProto* temp = normal_;
  normal_ = nullptr;
  return temp;
}
inline ::com::android::server::job::MaxJobCountsProto* MaxJobCountsPerMemoryTrimLevelProto::mutable_normal() {
  _has_bits_[0] |= 0x00000001u;
  if (normal_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::MaxJobCountsProto>(GetArenaNoVirtual());
    normal_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.normal)
  return normal_;
}
inline void MaxJobCountsPerMemoryTrimLevelProto::set_allocated_normal(::com::android::server::job::MaxJobCountsProto* normal) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete normal_;
  }
  if (normal) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      normal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, normal, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  normal_ = normal;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.normal)
}

// optional .com.android.server.job.MaxJobCountsProto moderate = 2;
inline bool MaxJobCountsPerMemoryTrimLevelProto::has_moderate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MaxJobCountsPerMemoryTrimLevelProto::clear_moderate() {
  if (moderate_ != nullptr) moderate_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::job::MaxJobCountsProto& MaxJobCountsPerMemoryTrimLevelProto::moderate() const {
  const ::com::android::server::job::MaxJobCountsProto* p = moderate_;
  // @@protoc_insertion_point(field_get:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.moderate)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::MaxJobCountsProto*>(
      &::com::android::server::job::_MaxJobCountsProto_default_instance_);
}
inline ::com::android::server::job::MaxJobCountsProto* MaxJobCountsPerMemoryTrimLevelProto::release_moderate() {
  // @@protoc_insertion_point(field_release:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.moderate)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::job::MaxJobCountsProto* temp = moderate_;
  moderate_ = nullptr;
  return temp;
}
inline ::com::android::server::job::MaxJobCountsProto* MaxJobCountsPerMemoryTrimLevelProto::mutable_moderate() {
  _has_bits_[0] |= 0x00000002u;
  if (moderate_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::MaxJobCountsProto>(GetArenaNoVirtual());
    moderate_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.moderate)
  return moderate_;
}
inline void MaxJobCountsPerMemoryTrimLevelProto::set_allocated_moderate(::com::android::server::job::MaxJobCountsProto* moderate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete moderate_;
  }
  if (moderate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      moderate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, moderate, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  moderate_ = moderate;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.moderate)
}

// optional .com.android.server.job.MaxJobCountsProto low = 3;
inline bool MaxJobCountsPerMemoryTrimLevelProto::has_low() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MaxJobCountsPerMemoryTrimLevelProto::clear_low() {
  if (low_ != nullptr) low_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::com::android::server::job::MaxJobCountsProto& MaxJobCountsPerMemoryTrimLevelProto::low() const {
  const ::com::android::server::job::MaxJobCountsProto* p = low_;
  // @@protoc_insertion_point(field_get:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.low)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::MaxJobCountsProto*>(
      &::com::android::server::job::_MaxJobCountsProto_default_instance_);
}
inline ::com::android::server::job::MaxJobCountsProto* MaxJobCountsPerMemoryTrimLevelProto::release_low() {
  // @@protoc_insertion_point(field_release:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.low)
  _has_bits_[0] &= ~0x00000004u;
  ::com::android::server::job::MaxJobCountsProto* temp = low_;
  low_ = nullptr;
  return temp;
}
inline ::com::android::server::job::MaxJobCountsProto* MaxJobCountsPerMemoryTrimLevelProto::mutable_low() {
  _has_bits_[0] |= 0x00000004u;
  if (low_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::MaxJobCountsProto>(GetArenaNoVirtual());
    low_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.low)
  return low_;
}
inline void MaxJobCountsPerMemoryTrimLevelProto::set_allocated_low(::com::android::server::job::MaxJobCountsProto* low) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete low_;
  }
  if (low) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      low = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, low, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  low_ = low;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.low)
}

// optional .com.android.server.job.MaxJobCountsProto critical = 4;
inline bool MaxJobCountsPerMemoryTrimLevelProto::has_critical() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MaxJobCountsPerMemoryTrimLevelProto::clear_critical() {
  if (critical_ != nullptr) critical_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::com::android::server::job::MaxJobCountsProto& MaxJobCountsPerMemoryTrimLevelProto::critical() const {
  const ::com::android::server::job::MaxJobCountsProto* p = critical_;
  // @@protoc_insertion_point(field_get:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.critical)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::MaxJobCountsProto*>(
      &::com::android::server::job::_MaxJobCountsProto_default_instance_);
}
inline ::com::android::server::job::MaxJobCountsProto* MaxJobCountsPerMemoryTrimLevelProto::release_critical() {
  // @@protoc_insertion_point(field_release:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.critical)
  _has_bits_[0] &= ~0x00000008u;
  ::com::android::server::job::MaxJobCountsProto* temp = critical_;
  critical_ = nullptr;
  return temp;
}
inline ::com::android::server::job::MaxJobCountsProto* MaxJobCountsPerMemoryTrimLevelProto::mutable_critical() {
  _has_bits_[0] |= 0x00000008u;
  if (critical_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::MaxJobCountsProto>(GetArenaNoVirtual());
    critical_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.critical)
  return critical_;
}
inline void MaxJobCountsPerMemoryTrimLevelProto::set_allocated_critical(::com::android::server::job::MaxJobCountsProto* critical) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete critical_;
  }
  if (critical) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      critical = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, critical, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  critical_ = critical;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.MaxJobCountsPerMemoryTrimLevelProto.critical)
}

// -------------------------------------------------------------------

// StateControllerProto_BackgroundJobsController_TrackedJob

// optional .com.android.server.job.JobStatusShortInfoProto info = 1;
inline bool StateControllerProto_BackgroundJobsController_TrackedJob::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::job::JobStatusShortInfoProto& StateControllerProto_BackgroundJobsController_TrackedJob::info() const {
  const ::com::android::server::job::JobStatusShortInfoProto* p = info_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusShortInfoProto*>(
      &::com::android::server::job::_JobStatusShortInfoProto_default_instance_);
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_BackgroundJobsController_TrackedJob::release_info() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.info)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::job::JobStatusShortInfoProto* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_BackgroundJobsController_TrackedJob::mutable_info() {
  _has_bits_[0] |= 0x00000002u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusShortInfoProto>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.info)
  return info_;
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.info)
}

// optional int32 source_uid = 2;
inline bool StateControllerProto_BackgroundJobsController_TrackedJob::has_source_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::clear_source_uid() {
  source_uid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_BackgroundJobsController_TrackedJob::source_uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.source_uid)
  return source_uid_;
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  source_uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.source_uid)
}

// optional string source_package_name = 3;
inline bool StateControllerProto_BackgroundJobsController_TrackedJob::has_source_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::clear_source_package_name() {
  source_package_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& StateControllerProto_BackgroundJobsController_TrackedJob::source_package_name() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.source_package_name)
  return source_package_name_.GetNoArena();
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::set_source_package_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  source_package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.source_package_name)
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::set_source_package_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  source_package_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.source_package_name)
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::set_source_package_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  source_package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.source_package_name)
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::set_source_package_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  source_package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.source_package_name)
}
inline std::string* StateControllerProto_BackgroundJobsController_TrackedJob::mutable_source_package_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.source_package_name)
  return source_package_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* StateControllerProto_BackgroundJobsController_TrackedJob::release_source_package_name() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.source_package_name)
  if (!has_source_package_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return source_package_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::set_allocated_source_package_name(std::string* source_package_name) {
  if (source_package_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_package_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), source_package_name);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.source_package_name)
}

// optional bool is_in_foreground = 4;
inline bool StateControllerProto_BackgroundJobsController_TrackedJob::has_is_in_foreground() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::clear_is_in_foreground() {
  is_in_foreground_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool StateControllerProto_BackgroundJobsController_TrackedJob::is_in_foreground() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.is_in_foreground)
  return is_in_foreground_;
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::set_is_in_foreground(bool value) {
  _has_bits_[0] |= 0x00000008u;
  is_in_foreground_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.is_in_foreground)
}

// optional bool is_whitelisted = 5;
inline bool StateControllerProto_BackgroundJobsController_TrackedJob::has_is_whitelisted() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::clear_is_whitelisted() {
  is_whitelisted_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool StateControllerProto_BackgroundJobsController_TrackedJob::is_whitelisted() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.is_whitelisted)
  return is_whitelisted_;
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::set_is_whitelisted(bool value) {
  _has_bits_[0] |= 0x00000010u;
  is_whitelisted_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.is_whitelisted)
}

// optional bool can_run_any_in_background = 6;
inline bool StateControllerProto_BackgroundJobsController_TrackedJob::has_can_run_any_in_background() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::clear_can_run_any_in_background() {
  can_run_any_in_background_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool StateControllerProto_BackgroundJobsController_TrackedJob::can_run_any_in_background() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.can_run_any_in_background)
  return can_run_any_in_background_;
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::set_can_run_any_in_background(bool value) {
  _has_bits_[0] |= 0x00000020u;
  can_run_any_in_background_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.can_run_any_in_background)
}

// optional bool are_constraints_satisfied = 7;
inline bool StateControllerProto_BackgroundJobsController_TrackedJob::has_are_constraints_satisfied() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::clear_are_constraints_satisfied() {
  are_constraints_satisfied_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool StateControllerProto_BackgroundJobsController_TrackedJob::are_constraints_satisfied() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.are_constraints_satisfied)
  return are_constraints_satisfied_;
}
inline void StateControllerProto_BackgroundJobsController_TrackedJob::set_are_constraints_satisfied(bool value) {
  _has_bits_[0] |= 0x00000040u;
  are_constraints_satisfied_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob.are_constraints_satisfied)
}

// -------------------------------------------------------------------

// StateControllerProto_BackgroundJobsController

// optional .com.android.server.AppStateTrackerProto app_state_tracker = 1;
inline bool StateControllerProto_BackgroundJobsController::has_app_state_tracker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::com::android::server::AppStateTrackerProto& StateControllerProto_BackgroundJobsController::app_state_tracker() const {
  const ::com::android::server::AppStateTrackerProto* p = app_state_tracker_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BackgroundJobsController.app_state_tracker)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::AppStateTrackerProto*>(
      &::com::android::server::_AppStateTrackerProto_default_instance_);
}
inline ::com::android::server::AppStateTrackerProto* StateControllerProto_BackgroundJobsController::release_app_state_tracker() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.BackgroundJobsController.app_state_tracker)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::AppStateTrackerProto* temp = app_state_tracker_;
  app_state_tracker_ = nullptr;
  return temp;
}
inline ::com::android::server::AppStateTrackerProto* StateControllerProto_BackgroundJobsController::mutable_app_state_tracker() {
  _has_bits_[0] |= 0x00000001u;
  if (app_state_tracker_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::AppStateTrackerProto>(GetArenaNoVirtual());
    app_state_tracker_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.BackgroundJobsController.app_state_tracker)
  return app_state_tracker_;
}
inline void StateControllerProto_BackgroundJobsController::set_allocated_app_state_tracker(::com::android::server::AppStateTrackerProto* app_state_tracker) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(app_state_tracker_);
  }
  if (app_state_tracker) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      app_state_tracker = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, app_state_tracker, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  app_state_tracker_ = app_state_tracker;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.BackgroundJobsController.app_state_tracker)
}

// repeated .com.android.server.job.StateControllerProto.BackgroundJobsController.TrackedJob tracked_jobs = 2;
inline int StateControllerProto_BackgroundJobsController::tracked_jobs_size() const {
  return tracked_jobs_.size();
}
inline void StateControllerProto_BackgroundJobsController::clear_tracked_jobs() {
  tracked_jobs_.Clear();
}
inline ::com::android::server::job::StateControllerProto_BackgroundJobsController_TrackedJob* StateControllerProto_BackgroundJobsController::mutable_tracked_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.BackgroundJobsController.tracked_jobs)
  return tracked_jobs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_BackgroundJobsController_TrackedJob >*
StateControllerProto_BackgroundJobsController::mutable_tracked_jobs() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.BackgroundJobsController.tracked_jobs)
  return &tracked_jobs_;
}
inline const ::com::android::server::job::StateControllerProto_BackgroundJobsController_TrackedJob& StateControllerProto_BackgroundJobsController::tracked_jobs(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BackgroundJobsController.tracked_jobs)
  return tracked_jobs_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_BackgroundJobsController_TrackedJob* StateControllerProto_BackgroundJobsController::add_tracked_jobs() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.BackgroundJobsController.tracked_jobs)
  return tracked_jobs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_BackgroundJobsController_TrackedJob >&
StateControllerProto_BackgroundJobsController::tracked_jobs() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.BackgroundJobsController.tracked_jobs)
  return tracked_jobs_;
}

// -------------------------------------------------------------------

// StateControllerProto_BatteryController_TrackedJob

// optional .com.android.server.job.JobStatusShortInfoProto info = 1;
inline bool StateControllerProto_BatteryController_TrackedJob::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_BatteryController_TrackedJob::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::JobStatusShortInfoProto& StateControllerProto_BatteryController_TrackedJob::info() const {
  const ::com::android::server::job::JobStatusShortInfoProto* p = info_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BatteryController.TrackedJob.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusShortInfoProto*>(
      &::com::android::server::job::_JobStatusShortInfoProto_default_instance_);
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_BatteryController_TrackedJob::release_info() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.BatteryController.TrackedJob.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::JobStatusShortInfoProto* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_BatteryController_TrackedJob::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusShortInfoProto>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.BatteryController.TrackedJob.info)
  return info_;
}
inline void StateControllerProto_BatteryController_TrackedJob::set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.BatteryController.TrackedJob.info)
}

// optional int32 source_uid = 2;
inline bool StateControllerProto_BatteryController_TrackedJob::has_source_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_BatteryController_TrackedJob::clear_source_uid() {
  source_uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_BatteryController_TrackedJob::source_uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BatteryController.TrackedJob.source_uid)
  return source_uid_;
}
inline void StateControllerProto_BatteryController_TrackedJob::set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  source_uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.BatteryController.TrackedJob.source_uid)
}

// -------------------------------------------------------------------

// StateControllerProto_BatteryController

// optional bool is_on_stable_power = 1;
inline bool StateControllerProto_BatteryController::has_is_on_stable_power() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_BatteryController::clear_is_on_stable_power() {
  is_on_stable_power_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool StateControllerProto_BatteryController::is_on_stable_power() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BatteryController.is_on_stable_power)
  return is_on_stable_power_;
}
inline void StateControllerProto_BatteryController::set_is_on_stable_power(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_on_stable_power_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.BatteryController.is_on_stable_power)
}

// optional bool is_battery_not_low = 2;
inline bool StateControllerProto_BatteryController::has_is_battery_not_low() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_BatteryController::clear_is_battery_not_low() {
  is_battery_not_low_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool StateControllerProto_BatteryController::is_battery_not_low() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BatteryController.is_battery_not_low)
  return is_battery_not_low_;
}
inline void StateControllerProto_BatteryController::set_is_battery_not_low(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_battery_not_low_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.BatteryController.is_battery_not_low)
}

// optional bool is_monitoring = 3;
inline bool StateControllerProto_BatteryController::has_is_monitoring() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_BatteryController::clear_is_monitoring() {
  is_monitoring_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool StateControllerProto_BatteryController::is_monitoring() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BatteryController.is_monitoring)
  return is_monitoring_;
}
inline void StateControllerProto_BatteryController::set_is_monitoring(bool value) {
  _has_bits_[0] |= 0x00000004u;
  is_monitoring_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.BatteryController.is_monitoring)
}

// optional int32 last_broadcast_sequence_number = 4;
inline bool StateControllerProto_BatteryController::has_last_broadcast_sequence_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StateControllerProto_BatteryController::clear_last_broadcast_sequence_number() {
  last_broadcast_sequence_number_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_BatteryController::last_broadcast_sequence_number() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BatteryController.last_broadcast_sequence_number)
  return last_broadcast_sequence_number_;
}
inline void StateControllerProto_BatteryController::set_last_broadcast_sequence_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  last_broadcast_sequence_number_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.BatteryController.last_broadcast_sequence_number)
}

// repeated .com.android.server.job.StateControllerProto.BatteryController.TrackedJob tracked_jobs = 5;
inline int StateControllerProto_BatteryController::tracked_jobs_size() const {
  return tracked_jobs_.size();
}
inline void StateControllerProto_BatteryController::clear_tracked_jobs() {
  tracked_jobs_.Clear();
}
inline ::com::android::server::job::StateControllerProto_BatteryController_TrackedJob* StateControllerProto_BatteryController::mutable_tracked_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.BatteryController.tracked_jobs)
  return tracked_jobs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_BatteryController_TrackedJob >*
StateControllerProto_BatteryController::mutable_tracked_jobs() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.BatteryController.tracked_jobs)
  return &tracked_jobs_;
}
inline const ::com::android::server::job::StateControllerProto_BatteryController_TrackedJob& StateControllerProto_BatteryController::tracked_jobs(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.BatteryController.tracked_jobs)
  return tracked_jobs_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_BatteryController_TrackedJob* StateControllerProto_BatteryController::add_tracked_jobs() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.BatteryController.tracked_jobs)
  return tracked_jobs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_BatteryController_TrackedJob >&
StateControllerProto_BatteryController::tracked_jobs() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.BatteryController.tracked_jobs)
  return tracked_jobs_;
}

// -------------------------------------------------------------------

// StateControllerProto_ConnectivityController_TrackedJob

// optional .com.android.server.job.JobStatusShortInfoProto info = 1;
inline bool StateControllerProto_ConnectivityController_TrackedJob::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_ConnectivityController_TrackedJob::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::JobStatusShortInfoProto& StateControllerProto_ConnectivityController_TrackedJob::info() const {
  const ::com::android::server::job::JobStatusShortInfoProto* p = info_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusShortInfoProto*>(
      &::com::android::server::job::_JobStatusShortInfoProto_default_instance_);
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_ConnectivityController_TrackedJob::release_info() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::JobStatusShortInfoProto* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_ConnectivityController_TrackedJob::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusShortInfoProto>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob.info)
  return info_;
}
inline void StateControllerProto_ConnectivityController_TrackedJob::set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob.info)
}

// optional int32 source_uid = 2;
inline bool StateControllerProto_ConnectivityController_TrackedJob::has_source_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_ConnectivityController_TrackedJob::clear_source_uid() {
  source_uid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_ConnectivityController_TrackedJob::source_uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob.source_uid)
  return source_uid_;
}
inline void StateControllerProto_ConnectivityController_TrackedJob::set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  source_uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob.source_uid)
}

// optional .android.net.NetworkRequestProto required_network = 3;
inline bool StateControllerProto_ConnectivityController_TrackedJob::has_required_network() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::android::net::NetworkRequestProto& StateControllerProto_ConnectivityController_TrackedJob::required_network() const {
  const ::android::net::NetworkRequestProto* p = required_network_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob.required_network)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::net::NetworkRequestProto*>(
      &::android::net::_NetworkRequestProto_default_instance_);
}
inline ::android::net::NetworkRequestProto* StateControllerProto_ConnectivityController_TrackedJob::release_required_network() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob.required_network)
  _has_bits_[0] &= ~0x00000002u;
  ::android::net::NetworkRequestProto* temp = required_network_;
  required_network_ = nullptr;
  return temp;
}
inline ::android::net::NetworkRequestProto* StateControllerProto_ConnectivityController_TrackedJob::mutable_required_network() {
  _has_bits_[0] |= 0x00000002u;
  if (required_network_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::net::NetworkRequestProto>(GetArenaNoVirtual());
    required_network_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob.required_network)
  return required_network_;
}
inline void StateControllerProto_ConnectivityController_TrackedJob::set_allocated_required_network(::android::net::NetworkRequestProto* required_network) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(required_network_);
  }
  if (required_network) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      required_network = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, required_network, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  required_network_ = required_network;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob.required_network)
}

// -------------------------------------------------------------------

// StateControllerProto_ConnectivityController

// repeated .com.android.server.job.StateControllerProto.ConnectivityController.TrackedJob tracked_jobs = 2;
inline int StateControllerProto_ConnectivityController::tracked_jobs_size() const {
  return tracked_jobs_.size();
}
inline void StateControllerProto_ConnectivityController::clear_tracked_jobs() {
  tracked_jobs_.Clear();
}
inline ::com::android::server::job::StateControllerProto_ConnectivityController_TrackedJob* StateControllerProto_ConnectivityController::mutable_tracked_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.ConnectivityController.tracked_jobs)
  return tracked_jobs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ConnectivityController_TrackedJob >*
StateControllerProto_ConnectivityController::mutable_tracked_jobs() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.ConnectivityController.tracked_jobs)
  return &tracked_jobs_;
}
inline const ::com::android::server::job::StateControllerProto_ConnectivityController_TrackedJob& StateControllerProto_ConnectivityController::tracked_jobs(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ConnectivityController.tracked_jobs)
  return tracked_jobs_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_ConnectivityController_TrackedJob* StateControllerProto_ConnectivityController::add_tracked_jobs() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.ConnectivityController.tracked_jobs)
  return tracked_jobs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ConnectivityController_TrackedJob >&
StateControllerProto_ConnectivityController::tracked_jobs() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.ConnectivityController.tracked_jobs)
  return tracked_jobs_;
}

// repeated int32 requested_standby_exception_uids = 3;
inline int StateControllerProto_ConnectivityController::requested_standby_exception_uids_size() const {
  return requested_standby_exception_uids_.size();
}
inline void StateControllerProto_ConnectivityController::clear_requested_standby_exception_uids() {
  requested_standby_exception_uids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_ConnectivityController::requested_standby_exception_uids(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ConnectivityController.requested_standby_exception_uids)
  return requested_standby_exception_uids_.Get(index);
}
inline void StateControllerProto_ConnectivityController::set_requested_standby_exception_uids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  requested_standby_exception_uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.ConnectivityController.requested_standby_exception_uids)
}
inline void StateControllerProto_ConnectivityController::add_requested_standby_exception_uids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  requested_standby_exception_uids_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.ConnectivityController.requested_standby_exception_uids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
StateControllerProto_ConnectivityController::requested_standby_exception_uids() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.ConnectivityController.requested_standby_exception_uids)
  return requested_standby_exception_uids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
StateControllerProto_ConnectivityController::mutable_requested_standby_exception_uids() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.ConnectivityController.requested_standby_exception_uids)
  return &requested_standby_exception_uids_;
}

// repeated .android.net.NetworkProto available_networks = 4;
inline int StateControllerProto_ConnectivityController::available_networks_size() const {
  return available_networks_.size();
}
inline ::android::net::NetworkProto* StateControllerProto_ConnectivityController::mutable_available_networks(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.ConnectivityController.available_networks)
  return available_networks_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::net::NetworkProto >*
StateControllerProto_ConnectivityController::mutable_available_networks() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.ConnectivityController.available_networks)
  return &available_networks_;
}
inline const ::android::net::NetworkProto& StateControllerProto_ConnectivityController::available_networks(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ConnectivityController.available_networks)
  return available_networks_.Get(index);
}
inline ::android::net::NetworkProto* StateControllerProto_ConnectivityController::add_available_networks() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.ConnectivityController.available_networks)
  return available_networks_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::net::NetworkProto >&
StateControllerProto_ConnectivityController::available_networks() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.ConnectivityController.available_networks)
  return available_networks_;
}

// -------------------------------------------------------------------

// StateControllerProto_ContentObserverController_TrackedJob

// optional .com.android.server.job.JobStatusShortInfoProto info = 1;
inline bool StateControllerProto_ContentObserverController_TrackedJob::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_ContentObserverController_TrackedJob::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::JobStatusShortInfoProto& StateControllerProto_ContentObserverController_TrackedJob::info() const {
  const ::com::android::server::job::JobStatusShortInfoProto* p = info_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.TrackedJob.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusShortInfoProto*>(
      &::com::android::server::job::_JobStatusShortInfoProto_default_instance_);
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_ContentObserverController_TrackedJob::release_info() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.ContentObserverController.TrackedJob.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::JobStatusShortInfoProto* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_ContentObserverController_TrackedJob::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusShortInfoProto>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.ContentObserverController.TrackedJob.info)
  return info_;
}
inline void StateControllerProto_ContentObserverController_TrackedJob::set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.ContentObserverController.TrackedJob.info)
}

// optional int32 source_uid = 2;
inline bool StateControllerProto_ContentObserverController_TrackedJob::has_source_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_ContentObserverController_TrackedJob::clear_source_uid() {
  source_uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_ContentObserverController_TrackedJob::source_uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.TrackedJob.source_uid)
  return source_uid_;
}
inline void StateControllerProto_ContentObserverController_TrackedJob::set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  source_uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.ContentObserverController.TrackedJob.source_uid)
}

// -------------------------------------------------------------------

// StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance

// optional .com.android.server.job.JobStatusShortInfoProto info = 1;
inline bool StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::JobStatusShortInfoProto& StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::info() const {
  const ::com::android::server::job::JobStatusShortInfoProto* p = info_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusShortInfoProto*>(
      &::com::android::server::job::_JobStatusShortInfoProto_default_instance_);
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::release_info() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::JobStatusShortInfoProto* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusShortInfoProto>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.info)
  return info_;
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.info)
}

// optional int32 source_uid = 2;
inline bool StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::has_source_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::clear_source_uid() {
  source_uid_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::source_uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.source_uid)
  return source_uid_;
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  source_uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.source_uid)
}

// optional int64 trigger_content_update_delay_ms = 3;
inline bool StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::has_trigger_content_update_delay_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::clear_trigger_content_update_delay_ms() {
  trigger_content_update_delay_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::trigger_content_update_delay_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.trigger_content_update_delay_ms)
  return trigger_content_update_delay_ms_;
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::set_trigger_content_update_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  trigger_content_update_delay_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.trigger_content_update_delay_ms)
}

// optional int64 trigger_content_max_delay_ms = 4;
inline bool StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::has_trigger_content_max_delay_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::clear_trigger_content_max_delay_ms() {
  trigger_content_max_delay_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::trigger_content_max_delay_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.trigger_content_max_delay_ms)
  return trigger_content_max_delay_ms_;
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::set_trigger_content_max_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  trigger_content_max_delay_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.trigger_content_max_delay_ms)
}

// repeated string changed_authorities = 5 [(.android.privacy) = {
inline int StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::changed_authorities_size() const {
  return changed_authorities_.size();
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::clear_changed_authorities() {
  changed_authorities_.Clear();
}
inline const std::string& StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::changed_authorities(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_authorities)
  return changed_authorities_.Get(index);
}
inline std::string* StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::mutable_changed_authorities(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_authorities)
  return changed_authorities_.Mutable(index);
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::set_changed_authorities(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_authorities)
  changed_authorities_.Mutable(index)->assign(value);
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::set_changed_authorities(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_authorities)
  changed_authorities_.Mutable(index)->assign(std::move(value));
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::set_changed_authorities(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  changed_authorities_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_authorities)
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::set_changed_authorities(int index, const char* value, size_t size) {
  changed_authorities_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_authorities)
}
inline std::string* StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::add_changed_authorities() {
  // @@protoc_insertion_point(field_add_mutable:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_authorities)
  return changed_authorities_.Add();
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::add_changed_authorities(const std::string& value) {
  changed_authorities_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_authorities)
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::add_changed_authorities(std::string&& value) {
  changed_authorities_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_authorities)
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::add_changed_authorities(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  changed_authorities_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_authorities)
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::add_changed_authorities(const char* value, size_t size) {
  changed_authorities_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_authorities)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::changed_authorities() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_authorities)
  return changed_authorities_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::mutable_changed_authorities() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_authorities)
  return &changed_authorities_;
}

// repeated string changed_uris = 6 [(.android.privacy) = {
inline int StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::changed_uris_size() const {
  return changed_uris_.size();
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::clear_changed_uris() {
  changed_uris_.Clear();
}
inline const std::string& StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::changed_uris(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_uris)
  return changed_uris_.Get(index);
}
inline std::string* StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::mutable_changed_uris(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_uris)
  return changed_uris_.Mutable(index);
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::set_changed_uris(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_uris)
  changed_uris_.Mutable(index)->assign(value);
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::set_changed_uris(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_uris)
  changed_uris_.Mutable(index)->assign(std::move(value));
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::set_changed_uris(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  changed_uris_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_uris)
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::set_changed_uris(int index, const char* value, size_t size) {
  changed_uris_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_uris)
}
inline std::string* StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::add_changed_uris() {
  // @@protoc_insertion_point(field_add_mutable:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_uris)
  return changed_uris_.Add();
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::add_changed_uris(const std::string& value) {
  changed_uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_uris)
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::add_changed_uris(std::string&& value) {
  changed_uris_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_uris)
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::add_changed_uris(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  changed_uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_uris)
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::add_changed_uris(const char* value, size_t size) {
  changed_uris_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_uris)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::changed_uris() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_uris)
  return changed_uris_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance::mutable_changed_uris() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance.changed_uris)
  return &changed_uris_;
}

// -------------------------------------------------------------------

// StateControllerProto_ContentObserverController_Observer_TriggerContentData

// optional string uri = 1 [(.android.privacy) = {
inline bool StateControllerProto_ContentObserverController_Observer_TriggerContentData::has_uri() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData::clear_uri() {
  uri_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& StateControllerProto_ContentObserverController_Observer_TriggerContentData::uri() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.uri)
  return uri_.GetNoArena();
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData::set_uri(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  uri_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.uri)
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData::set_uri(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  uri_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.uri)
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData::set_uri(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  uri_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.uri)
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData::set_uri(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  uri_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.uri)
}
inline std::string* StateControllerProto_ContentObserverController_Observer_TriggerContentData::mutable_uri() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.uri)
  return uri_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* StateControllerProto_ContentObserverController_Observer_TriggerContentData::release_uri() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.uri)
  if (!has_uri()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return uri_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData::set_allocated_uri(std::string* uri) {
  if (uri != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  uri_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.uri)
}

// optional int32 flags = 2;
inline bool StateControllerProto_ContentObserverController_Observer_TriggerContentData::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_ContentObserverController_Observer_TriggerContentData::flags() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.flags)
  return flags_;
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.flags)
}

// repeated .com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.JobInstance jobs = 3;
inline int StateControllerProto_ContentObserverController_Observer_TriggerContentData::jobs_size() const {
  return jobs_.size();
}
inline void StateControllerProto_ContentObserverController_Observer_TriggerContentData::clear_jobs() {
  jobs_.Clear();
}
inline ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance* StateControllerProto_ContentObserverController_Observer_TriggerContentData::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.jobs)
  return jobs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance >*
StateControllerProto_ContentObserverController_Observer_TriggerContentData::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.jobs)
  return &jobs_;
}
inline const ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance& StateControllerProto_ContentObserverController_Observer_TriggerContentData::jobs(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.jobs)
  return jobs_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance* StateControllerProto_ContentObserverController_Observer_TriggerContentData::add_jobs() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.jobs)
  return jobs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData_JobInstance >&
StateControllerProto_ContentObserverController_Observer_TriggerContentData::jobs() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData.jobs)
  return jobs_;
}

// -------------------------------------------------------------------

// StateControllerProto_ContentObserverController_Observer

// optional int32 user_id = 1;
inline bool StateControllerProto_ContentObserverController_Observer::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_ContentObserverController_Observer::clear_user_id() {
  user_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_ContentObserverController_Observer::user_id() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.Observer.user_id)
  return user_id_;
}
inline void StateControllerProto_ContentObserverController_Observer::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  user_id_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.ContentObserverController.Observer.user_id)
}

// repeated .com.android.server.job.StateControllerProto.ContentObserverController.Observer.TriggerContentData triggers = 2;
inline int StateControllerProto_ContentObserverController_Observer::triggers_size() const {
  return triggers_.size();
}
inline void StateControllerProto_ContentObserverController_Observer::clear_triggers() {
  triggers_.Clear();
}
inline ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData* StateControllerProto_ContentObserverController_Observer::mutable_triggers(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.ContentObserverController.Observer.triggers)
  return triggers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData >*
StateControllerProto_ContentObserverController_Observer::mutable_triggers() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.ContentObserverController.Observer.triggers)
  return &triggers_;
}
inline const ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData& StateControllerProto_ContentObserverController_Observer::triggers(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.Observer.triggers)
  return triggers_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData* StateControllerProto_ContentObserverController_Observer::add_triggers() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.ContentObserverController.Observer.triggers)
  return triggers_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer_TriggerContentData >&
StateControllerProto_ContentObserverController_Observer::triggers() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.ContentObserverController.Observer.triggers)
  return triggers_;
}

// -------------------------------------------------------------------

// StateControllerProto_ContentObserverController

// repeated .com.android.server.job.StateControllerProto.ContentObserverController.TrackedJob tracked_jobs = 1;
inline int StateControllerProto_ContentObserverController::tracked_jobs_size() const {
  return tracked_jobs_.size();
}
inline void StateControllerProto_ContentObserverController::clear_tracked_jobs() {
  tracked_jobs_.Clear();
}
inline ::com::android::server::job::StateControllerProto_ContentObserverController_TrackedJob* StateControllerProto_ContentObserverController::mutable_tracked_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.ContentObserverController.tracked_jobs)
  return tracked_jobs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_TrackedJob >*
StateControllerProto_ContentObserverController::mutable_tracked_jobs() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.ContentObserverController.tracked_jobs)
  return &tracked_jobs_;
}
inline const ::com::android::server::job::StateControllerProto_ContentObserverController_TrackedJob& StateControllerProto_ContentObserverController::tracked_jobs(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.tracked_jobs)
  return tracked_jobs_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_ContentObserverController_TrackedJob* StateControllerProto_ContentObserverController::add_tracked_jobs() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.ContentObserverController.tracked_jobs)
  return tracked_jobs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_TrackedJob >&
StateControllerProto_ContentObserverController::tracked_jobs() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.ContentObserverController.tracked_jobs)
  return tracked_jobs_;
}

// repeated .com.android.server.job.StateControllerProto.ContentObserverController.Observer observers = 2;
inline int StateControllerProto_ContentObserverController::observers_size() const {
  return observers_.size();
}
inline void StateControllerProto_ContentObserverController::clear_observers() {
  observers_.Clear();
}
inline ::com::android::server::job::StateControllerProto_ContentObserverController_Observer* StateControllerProto_ContentObserverController::mutable_observers(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.ContentObserverController.observers)
  return observers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer >*
StateControllerProto_ContentObserverController::mutable_observers() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.ContentObserverController.observers)
  return &observers_;
}
inline const ::com::android::server::job::StateControllerProto_ContentObserverController_Observer& StateControllerProto_ContentObserverController::observers(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.ContentObserverController.observers)
  return observers_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_ContentObserverController_Observer* StateControllerProto_ContentObserverController::add_observers() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.ContentObserverController.observers)
  return observers_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_ContentObserverController_Observer >&
StateControllerProto_ContentObserverController::observers() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.ContentObserverController.observers)
  return observers_;
}

// -------------------------------------------------------------------

// StateControllerProto_DeviceIdleJobsController_TrackedJob

// optional .com.android.server.job.JobStatusShortInfoProto info = 1;
inline bool StateControllerProto_DeviceIdleJobsController_TrackedJob::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::job::JobStatusShortInfoProto& StateControllerProto_DeviceIdleJobsController_TrackedJob::info() const {
  const ::com::android::server::job::JobStatusShortInfoProto* p = info_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusShortInfoProto*>(
      &::com::android::server::job::_JobStatusShortInfoProto_default_instance_);
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_DeviceIdleJobsController_TrackedJob::release_info() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.info)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::job::JobStatusShortInfoProto* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_DeviceIdleJobsController_TrackedJob::mutable_info() {
  _has_bits_[0] |= 0x00000002u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusShortInfoProto>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.info)
  return info_;
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.info)
}

// optional int32 source_uid = 2;
inline bool StateControllerProto_DeviceIdleJobsController_TrackedJob::has_source_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::clear_source_uid() {
  source_uid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_DeviceIdleJobsController_TrackedJob::source_uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.source_uid)
  return source_uid_;
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  source_uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.source_uid)
}

// optional string source_package_name = 3;
inline bool StateControllerProto_DeviceIdleJobsController_TrackedJob::has_source_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::clear_source_package_name() {
  source_package_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& StateControllerProto_DeviceIdleJobsController_TrackedJob::source_package_name() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.source_package_name)
  return source_package_name_.GetNoArena();
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::set_source_package_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  source_package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.source_package_name)
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::set_source_package_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  source_package_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.source_package_name)
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::set_source_package_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  source_package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.source_package_name)
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::set_source_package_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  source_package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.source_package_name)
}
inline std::string* StateControllerProto_DeviceIdleJobsController_TrackedJob::mutable_source_package_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.source_package_name)
  return source_package_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* StateControllerProto_DeviceIdleJobsController_TrackedJob::release_source_package_name() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.source_package_name)
  if (!has_source_package_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return source_package_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::set_allocated_source_package_name(std::string* source_package_name) {
  if (source_package_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_package_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), source_package_name);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.source_package_name)
}

// optional bool are_constraints_satisfied = 4;
inline bool StateControllerProto_DeviceIdleJobsController_TrackedJob::has_are_constraints_satisfied() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::clear_are_constraints_satisfied() {
  are_constraints_satisfied_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool StateControllerProto_DeviceIdleJobsController_TrackedJob::are_constraints_satisfied() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.are_constraints_satisfied)
  return are_constraints_satisfied_;
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::set_are_constraints_satisfied(bool value) {
  _has_bits_[0] |= 0x00000008u;
  are_constraints_satisfied_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.are_constraints_satisfied)
}

// optional bool is_doze_whitelisted = 5;
inline bool StateControllerProto_DeviceIdleJobsController_TrackedJob::has_is_doze_whitelisted() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::clear_is_doze_whitelisted() {
  is_doze_whitelisted_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool StateControllerProto_DeviceIdleJobsController_TrackedJob::is_doze_whitelisted() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.is_doze_whitelisted)
  return is_doze_whitelisted_;
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::set_is_doze_whitelisted(bool value) {
  _has_bits_[0] |= 0x00000010u;
  is_doze_whitelisted_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.is_doze_whitelisted)
}

// optional bool is_allowed_in_doze = 6;
inline bool StateControllerProto_DeviceIdleJobsController_TrackedJob::has_is_allowed_in_doze() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::clear_is_allowed_in_doze() {
  is_allowed_in_doze_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool StateControllerProto_DeviceIdleJobsController_TrackedJob::is_allowed_in_doze() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.is_allowed_in_doze)
  return is_allowed_in_doze_;
}
inline void StateControllerProto_DeviceIdleJobsController_TrackedJob::set_is_allowed_in_doze(bool value) {
  _has_bits_[0] |= 0x00000020u;
  is_allowed_in_doze_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob.is_allowed_in_doze)
}

// -------------------------------------------------------------------

// StateControllerProto_DeviceIdleJobsController

// optional bool is_device_idle_mode = 1;
inline bool StateControllerProto_DeviceIdleJobsController::has_is_device_idle_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_DeviceIdleJobsController::clear_is_device_idle_mode() {
  is_device_idle_mode_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool StateControllerProto_DeviceIdleJobsController::is_device_idle_mode() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.DeviceIdleJobsController.is_device_idle_mode)
  return is_device_idle_mode_;
}
inline void StateControllerProto_DeviceIdleJobsController::set_is_device_idle_mode(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_device_idle_mode_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.DeviceIdleJobsController.is_device_idle_mode)
}

// repeated .com.android.server.job.StateControllerProto.DeviceIdleJobsController.TrackedJob tracked_jobs = 2;
inline int StateControllerProto_DeviceIdleJobsController::tracked_jobs_size() const {
  return tracked_jobs_.size();
}
inline void StateControllerProto_DeviceIdleJobsController::clear_tracked_jobs() {
  tracked_jobs_.Clear();
}
inline ::com::android::server::job::StateControllerProto_DeviceIdleJobsController_TrackedJob* StateControllerProto_DeviceIdleJobsController::mutable_tracked_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.DeviceIdleJobsController.tracked_jobs)
  return tracked_jobs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_DeviceIdleJobsController_TrackedJob >*
StateControllerProto_DeviceIdleJobsController::mutable_tracked_jobs() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.DeviceIdleJobsController.tracked_jobs)
  return &tracked_jobs_;
}
inline const ::com::android::server::job::StateControllerProto_DeviceIdleJobsController_TrackedJob& StateControllerProto_DeviceIdleJobsController::tracked_jobs(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.DeviceIdleJobsController.tracked_jobs)
  return tracked_jobs_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_DeviceIdleJobsController_TrackedJob* StateControllerProto_DeviceIdleJobsController::add_tracked_jobs() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.DeviceIdleJobsController.tracked_jobs)
  return tracked_jobs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_DeviceIdleJobsController_TrackedJob >&
StateControllerProto_DeviceIdleJobsController::tracked_jobs() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.DeviceIdleJobsController.tracked_jobs)
  return tracked_jobs_;
}

// -------------------------------------------------------------------

// StateControllerProto_IdleController_TrackedJob

// optional .com.android.server.job.JobStatusShortInfoProto info = 1;
inline bool StateControllerProto_IdleController_TrackedJob::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_IdleController_TrackedJob::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::JobStatusShortInfoProto& StateControllerProto_IdleController_TrackedJob::info() const {
  const ::com::android::server::job::JobStatusShortInfoProto* p = info_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.IdleController.TrackedJob.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusShortInfoProto*>(
      &::com::android::server::job::_JobStatusShortInfoProto_default_instance_);
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_IdleController_TrackedJob::release_info() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.IdleController.TrackedJob.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::JobStatusShortInfoProto* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_IdleController_TrackedJob::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusShortInfoProto>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.IdleController.TrackedJob.info)
  return info_;
}
inline void StateControllerProto_IdleController_TrackedJob::set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.IdleController.TrackedJob.info)
}

// optional int32 source_uid = 2;
inline bool StateControllerProto_IdleController_TrackedJob::has_source_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_IdleController_TrackedJob::clear_source_uid() {
  source_uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_IdleController_TrackedJob::source_uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.IdleController.TrackedJob.source_uid)
  return source_uid_;
}
inline void StateControllerProto_IdleController_TrackedJob::set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  source_uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.IdleController.TrackedJob.source_uid)
}

// -------------------------------------------------------------------

// StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker

// optional bool is_idle = 1;
inline bool StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker::has_is_idle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker::clear_is_idle() {
  is_idle_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker::is_idle() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.CarIdlenessTracker.is_idle)
  return is_idle_;
}
inline void StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker::set_is_idle(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_idle_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.CarIdlenessTracker.is_idle)
}

// optional bool is_garage_mode_on = 2;
inline bool StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker::has_is_garage_mode_on() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker::clear_is_garage_mode_on() {
  is_garage_mode_on_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker::is_garage_mode_on() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.CarIdlenessTracker.is_garage_mode_on)
  return is_garage_mode_on_;
}
inline void StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker::set_is_garage_mode_on(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_garage_mode_on_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.CarIdlenessTracker.is_garage_mode_on)
}

// -------------------------------------------------------------------

// StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker

// optional bool is_idle = 1;
inline bool StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::has_is_idle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::clear_is_idle() {
  is_idle_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::is_idle() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.DeviceIdlenessTracker.is_idle)
  return is_idle_;
}
inline void StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::set_is_idle(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_idle_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.DeviceIdlenessTracker.is_idle)
}

// optional bool is_screen_on = 2;
inline bool StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::has_is_screen_on() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::clear_is_screen_on() {
  is_screen_on_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::is_screen_on() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.DeviceIdlenessTracker.is_screen_on)
  return is_screen_on_;
}
inline void StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::set_is_screen_on(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_screen_on_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.DeviceIdlenessTracker.is_screen_on)
}

// optional bool is_dock_idle = 3;
inline bool StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::has_is_dock_idle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::clear_is_dock_idle() {
  is_dock_idle_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::is_dock_idle() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.DeviceIdlenessTracker.is_dock_idle)
  return is_dock_idle_;
}
inline void StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::set_is_dock_idle(bool value) {
  _has_bits_[0] |= 0x00000004u;
  is_dock_idle_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.DeviceIdlenessTracker.is_dock_idle)
}

// optional bool projection_active = 5;
inline bool StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::has_projection_active() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::clear_projection_active() {
  projection_active_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::projection_active() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.DeviceIdlenessTracker.projection_active)
  return projection_active_;
}
inline void StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker::set_projection_active(bool value) {
  _has_bits_[0] |= 0x00000008u;
  projection_active_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.DeviceIdlenessTracker.projection_active)
}

// -------------------------------------------------------------------

// StateControllerProto_IdleController_IdlenessTracker

// optional .com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.DeviceIdlenessTracker device_idleness_tracker = 1;
inline bool StateControllerProto_IdleController_IdlenessTracker::has_device_idleness_tracker() const {
  return active_tracker_case() == kDeviceIdlenessTracker;
}
inline void StateControllerProto_IdleController_IdlenessTracker::set_has_device_idleness_tracker() {
  _oneof_case_[0] = kDeviceIdlenessTracker;
}
inline void StateControllerProto_IdleController_IdlenessTracker::clear_device_idleness_tracker() {
  if (has_device_idleness_tracker()) {
    delete active_tracker_.device_idleness_tracker_;
    clear_has_active_tracker();
  }
}
inline ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker* StateControllerProto_IdleController_IdlenessTracker::release_device_idleness_tracker() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.device_idleness_tracker)
  if (has_device_idleness_tracker()) {
    clear_has_active_tracker();
      ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker* temp = active_tracker_.device_idleness_tracker_;
    active_tracker_.device_idleness_tracker_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker& StateControllerProto_IdleController_IdlenessTracker::device_idleness_tracker() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.device_idleness_tracker)
  return has_device_idleness_tracker()
      ? *active_tracker_.device_idleness_tracker_
      : *reinterpret_cast< ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker*>(&::com::android::server::job::_StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker* StateControllerProto_IdleController_IdlenessTracker::mutable_device_idleness_tracker() {
  if (!has_device_idleness_tracker()) {
    clear_active_tracker();
    set_has_device_idleness_tracker();
    active_tracker_.device_idleness_tracker_ = CreateMaybeMessage< ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_DeviceIdlenessTracker >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.device_idleness_tracker)
  return active_tracker_.device_idleness_tracker_;
}

// optional .com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.CarIdlenessTracker car_idleness_tracker = 2;
inline bool StateControllerProto_IdleController_IdlenessTracker::has_car_idleness_tracker() const {
  return active_tracker_case() == kCarIdlenessTracker;
}
inline void StateControllerProto_IdleController_IdlenessTracker::set_has_car_idleness_tracker() {
  _oneof_case_[0] = kCarIdlenessTracker;
}
inline void StateControllerProto_IdleController_IdlenessTracker::clear_car_idleness_tracker() {
  if (has_car_idleness_tracker()) {
    delete active_tracker_.car_idleness_tracker_;
    clear_has_active_tracker();
  }
}
inline ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker* StateControllerProto_IdleController_IdlenessTracker::release_car_idleness_tracker() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.car_idleness_tracker)
  if (has_car_idleness_tracker()) {
    clear_has_active_tracker();
      ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker* temp = active_tracker_.car_idleness_tracker_;
    active_tracker_.car_idleness_tracker_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker& StateControllerProto_IdleController_IdlenessTracker::car_idleness_tracker() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.car_idleness_tracker)
  return has_car_idleness_tracker()
      ? *active_tracker_.car_idleness_tracker_
      : *reinterpret_cast< ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker*>(&::com::android::server::job::_StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker* StateControllerProto_IdleController_IdlenessTracker::mutable_car_idleness_tracker() {
  if (!has_car_idleness_tracker()) {
    clear_active_tracker();
    set_has_car_idleness_tracker();
    active_tracker_.car_idleness_tracker_ = CreateMaybeMessage< ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker_CarIdlenessTracker >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.IdleController.IdlenessTracker.car_idleness_tracker)
  return active_tracker_.car_idleness_tracker_;
}

inline bool StateControllerProto_IdleController_IdlenessTracker::has_active_tracker() const {
  return active_tracker_case() != ACTIVE_TRACKER_NOT_SET;
}
inline void StateControllerProto_IdleController_IdlenessTracker::clear_has_active_tracker() {
  _oneof_case_[0] = ACTIVE_TRACKER_NOT_SET;
}
inline StateControllerProto_IdleController_IdlenessTracker::ActiveTrackerCase StateControllerProto_IdleController_IdlenessTracker::active_tracker_case() const {
  return StateControllerProto_IdleController_IdlenessTracker::ActiveTrackerCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// StateControllerProto_IdleController

// optional bool is_idle = 1;
inline bool StateControllerProto_IdleController::has_is_idle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_IdleController::clear_is_idle() {
  is_idle_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool StateControllerProto_IdleController::is_idle() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.IdleController.is_idle)
  return is_idle_;
}
inline void StateControllerProto_IdleController::set_is_idle(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_idle_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.IdleController.is_idle)
}

// repeated .com.android.server.job.StateControllerProto.IdleController.TrackedJob tracked_jobs = 2;
inline int StateControllerProto_IdleController::tracked_jobs_size() const {
  return tracked_jobs_.size();
}
inline void StateControllerProto_IdleController::clear_tracked_jobs() {
  tracked_jobs_.Clear();
}
inline ::com::android::server::job::StateControllerProto_IdleController_TrackedJob* StateControllerProto_IdleController::mutable_tracked_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.IdleController.tracked_jobs)
  return tracked_jobs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_IdleController_TrackedJob >*
StateControllerProto_IdleController::mutable_tracked_jobs() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.IdleController.tracked_jobs)
  return &tracked_jobs_;
}
inline const ::com::android::server::job::StateControllerProto_IdleController_TrackedJob& StateControllerProto_IdleController::tracked_jobs(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.IdleController.tracked_jobs)
  return tracked_jobs_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_IdleController_TrackedJob* StateControllerProto_IdleController::add_tracked_jobs() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.IdleController.tracked_jobs)
  return tracked_jobs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_IdleController_TrackedJob >&
StateControllerProto_IdleController::tracked_jobs() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.IdleController.tracked_jobs)
  return tracked_jobs_;
}

// optional .com.android.server.job.StateControllerProto.IdleController.IdlenessTracker idleness_tracker = 3;
inline bool StateControllerProto_IdleController::has_idleness_tracker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_IdleController::clear_idleness_tracker() {
  if (idleness_tracker_ != nullptr) idleness_tracker_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker& StateControllerProto_IdleController::idleness_tracker() const {
  const ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker* p = idleness_tracker_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.IdleController.idleness_tracker)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker*>(
      &::com::android::server::job::_StateControllerProto_IdleController_IdlenessTracker_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker* StateControllerProto_IdleController::release_idleness_tracker() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.IdleController.idleness_tracker)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker* temp = idleness_tracker_;
  idleness_tracker_ = nullptr;
  return temp;
}
inline ::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker* StateControllerProto_IdleController::mutable_idleness_tracker() {
  _has_bits_[0] |= 0x00000001u;
  if (idleness_tracker_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker>(GetArenaNoVirtual());
    idleness_tracker_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.IdleController.idleness_tracker)
  return idleness_tracker_;
}
inline void StateControllerProto_IdleController::set_allocated_idleness_tracker(::com::android::server::job::StateControllerProto_IdleController_IdlenessTracker* idleness_tracker) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete idleness_tracker_;
  }
  if (idleness_tracker) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      idleness_tracker = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, idleness_tracker, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  idleness_tracker_ = idleness_tracker;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.IdleController.idleness_tracker)
}

// -------------------------------------------------------------------

// StateControllerProto_QuotaController_TrackedJob

// optional .com.android.server.job.JobStatusShortInfoProto info = 1;
inline bool StateControllerProto_QuotaController_TrackedJob::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_QuotaController_TrackedJob::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::JobStatusShortInfoProto& StateControllerProto_QuotaController_TrackedJob::info() const {
  const ::com::android::server::job::JobStatusShortInfoProto* p = info_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusShortInfoProto*>(
      &::com::android::server::job::_JobStatusShortInfoProto_default_instance_);
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_QuotaController_TrackedJob::release_info() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::JobStatusShortInfoProto* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_QuotaController_TrackedJob::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusShortInfoProto>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.info)
  return info_;
}
inline void StateControllerProto_QuotaController_TrackedJob::set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.info)
}

// optional int32 source_uid = 2;
inline bool StateControllerProto_QuotaController_TrackedJob::has_source_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_QuotaController_TrackedJob::clear_source_uid() {
  source_uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_QuotaController_TrackedJob::source_uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.source_uid)
  return source_uid_;
}
inline void StateControllerProto_QuotaController_TrackedJob::set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  source_uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.source_uid)
}

// optional .com.android.server.job.JobStatusDumpProto.Bucket effective_standby_bucket = 3;
inline bool StateControllerProto_QuotaController_TrackedJob::has_effective_standby_bucket() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_QuotaController_TrackedJob::clear_effective_standby_bucket() {
  effective_standby_bucket_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::com::android::server::job::JobStatusDumpProto_Bucket StateControllerProto_QuotaController_TrackedJob::effective_standby_bucket() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.effective_standby_bucket)
  return static_cast< ::com::android::server::job::JobStatusDumpProto_Bucket >(effective_standby_bucket_);
}
inline void StateControllerProto_QuotaController_TrackedJob::set_effective_standby_bucket(::com::android::server::job::JobStatusDumpProto_Bucket value) {
  assert(::com::android::server::job::JobStatusDumpProto_Bucket_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  effective_standby_bucket_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.effective_standby_bucket)
}

// optional bool is_top_started_job = 4;
inline bool StateControllerProto_QuotaController_TrackedJob::has_is_top_started_job() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StateControllerProto_QuotaController_TrackedJob::clear_is_top_started_job() {
  is_top_started_job_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool StateControllerProto_QuotaController_TrackedJob::is_top_started_job() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.is_top_started_job)
  return is_top_started_job_;
}
inline void StateControllerProto_QuotaController_TrackedJob::set_is_top_started_job(bool value) {
  _has_bits_[0] |= 0x00000010u;
  is_top_started_job_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.is_top_started_job)
}

// optional bool has_quota = 5;
inline bool StateControllerProto_QuotaController_TrackedJob::has_has_quota() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StateControllerProto_QuotaController_TrackedJob::clear_has_quota() {
  has_quota_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool StateControllerProto_QuotaController_TrackedJob::has_quota() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.has_quota)
  return has_quota_;
}
inline void StateControllerProto_QuotaController_TrackedJob::set_has_quota(bool value) {
  _has_bits_[0] |= 0x00000020u;
  has_quota_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.has_quota)
}

// optional int64 remaining_quota_ms = 6;
inline bool StateControllerProto_QuotaController_TrackedJob::has_remaining_quota_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StateControllerProto_QuotaController_TrackedJob::clear_remaining_quota_ms() {
  remaining_quota_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_TrackedJob::remaining_quota_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.remaining_quota_ms)
  return remaining_quota_ms_;
}
inline void StateControllerProto_QuotaController_TrackedJob::set_remaining_quota_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  remaining_quota_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.remaining_quota_ms)
}

// optional bool is_requested_foreground_job = 7;
inline bool StateControllerProto_QuotaController_TrackedJob::has_is_requested_foreground_job() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StateControllerProto_QuotaController_TrackedJob::clear_is_requested_foreground_job() {
  is_requested_foreground_job_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool StateControllerProto_QuotaController_TrackedJob::is_requested_foreground_job() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.is_requested_foreground_job)
  return is_requested_foreground_job_;
}
inline void StateControllerProto_QuotaController_TrackedJob::set_is_requested_foreground_job(bool value) {
  _has_bits_[0] |= 0x00000040u;
  is_requested_foreground_job_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.is_requested_foreground_job)
}

// optional bool is_within_fg_job_quota = 8;
inline bool StateControllerProto_QuotaController_TrackedJob::has_is_within_fg_job_quota() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StateControllerProto_QuotaController_TrackedJob::clear_is_within_fg_job_quota() {
  is_within_fg_job_quota_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool StateControllerProto_QuotaController_TrackedJob::is_within_fg_job_quota() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.is_within_fg_job_quota)
  return is_within_fg_job_quota_;
}
inline void StateControllerProto_QuotaController_TrackedJob::set_is_within_fg_job_quota(bool value) {
  _has_bits_[0] |= 0x00000080u;
  is_within_fg_job_quota_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.TrackedJob.is_within_fg_job_quota)
}

// -------------------------------------------------------------------

// StateControllerProto_QuotaController_AlarmListener

// optional bool is_waiting = 1;
inline bool StateControllerProto_QuotaController_AlarmListener::has_is_waiting() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_QuotaController_AlarmListener::clear_is_waiting() {
  is_waiting_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool StateControllerProto_QuotaController_AlarmListener::is_waiting() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.AlarmListener.is_waiting)
  return is_waiting_;
}
inline void StateControllerProto_QuotaController_AlarmListener::set_is_waiting(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_waiting_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.AlarmListener.is_waiting)
}

// optional int64 trigger_time_elapsed = 2;
inline bool StateControllerProto_QuotaController_AlarmListener::has_trigger_time_elapsed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_QuotaController_AlarmListener::clear_trigger_time_elapsed() {
  trigger_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_AlarmListener::trigger_time_elapsed() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.AlarmListener.trigger_time_elapsed)
  return trigger_time_elapsed_;
}
inline void StateControllerProto_QuotaController_AlarmListener::set_trigger_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  trigger_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.AlarmListener.trigger_time_elapsed)
}

// -------------------------------------------------------------------

// StateControllerProto_QuotaController_ExecutionStats

// optional .com.android.server.job.JobStatusDumpProto.Bucket standby_bucket = 1;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_standby_bucket() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_standby_bucket() {
  standby_bucket_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::com::android::server::job::JobStatusDumpProto_Bucket StateControllerProto_QuotaController_ExecutionStats::standby_bucket() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.standby_bucket)
  return static_cast< ::com::android::server::job::JobStatusDumpProto_Bucket >(standby_bucket_);
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_standby_bucket(::com::android::server::job::JobStatusDumpProto_Bucket value) {
  assert(::com::android::server::job::JobStatusDumpProto_Bucket_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  standby_bucket_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.standby_bucket)
}

// optional int64 expiration_time_elapsed = 2;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_expiration_time_elapsed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_expiration_time_elapsed() {
  expiration_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_ExecutionStats::expiration_time_elapsed() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.expiration_time_elapsed)
  return expiration_time_elapsed_;
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_expiration_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  expiration_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.expiration_time_elapsed)
}

// optional int64 window_size_ms = 3;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_window_size_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_window_size_ms() {
  window_size_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_ExecutionStats::window_size_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.window_size_ms)
  return window_size_ms_;
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_window_size_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  window_size_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.window_size_ms)
}

// optional int32 job_count_limit = 14;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_job_count_limit() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_job_count_limit() {
  job_count_limit_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_QuotaController_ExecutionStats::job_count_limit() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.job_count_limit)
  return job_count_limit_;
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_job_count_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00002000u;
  job_count_limit_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.job_count_limit)
}

// optional int32 session_count_limit = 15;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_session_count_limit() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_session_count_limit() {
  session_count_limit_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_QuotaController_ExecutionStats::session_count_limit() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.session_count_limit)
  return session_count_limit_;
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_session_count_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  session_count_limit_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.session_count_limit)
}

// optional int64 execution_time_in_window_ms = 4;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_execution_time_in_window_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_execution_time_in_window_ms() {
  execution_time_in_window_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_ExecutionStats::execution_time_in_window_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.execution_time_in_window_ms)
  return execution_time_in_window_ms_;
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_execution_time_in_window_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  execution_time_in_window_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.execution_time_in_window_ms)
}

// optional int32 bg_job_count_in_window = 5;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_bg_job_count_in_window() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_bg_job_count_in_window() {
  bg_job_count_in_window_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_QuotaController_ExecutionStats::bg_job_count_in_window() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.bg_job_count_in_window)
  return bg_job_count_in_window_;
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_bg_job_count_in_window(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  bg_job_count_in_window_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.bg_job_count_in_window)
}

// optional int64 execution_time_in_max_period_ms = 6;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_execution_time_in_max_period_ms() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_execution_time_in_max_period_ms() {
  execution_time_in_max_period_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_ExecutionStats::execution_time_in_max_period_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.execution_time_in_max_period_ms)
  return execution_time_in_max_period_ms_;
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_execution_time_in_max_period_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  execution_time_in_max_period_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.execution_time_in_max_period_ms)
}

// optional int32 bg_job_count_in_max_period = 7;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_bg_job_count_in_max_period() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_bg_job_count_in_max_period() {
  bg_job_count_in_max_period_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_QuotaController_ExecutionStats::bg_job_count_in_max_period() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.bg_job_count_in_max_period)
  return bg_job_count_in_max_period_;
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_bg_job_count_in_max_period(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  bg_job_count_in_max_period_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.bg_job_count_in_max_period)
}

// optional int32 session_count_in_window = 11;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_session_count_in_window() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_session_count_in_window() {
  session_count_in_window_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_QuotaController_ExecutionStats::session_count_in_window() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.session_count_in_window)
  return session_count_in_window_;
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_session_count_in_window(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  session_count_in_window_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.session_count_in_window)
}

// optional int64 in_quota_time_elapsed = 8;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_in_quota_time_elapsed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_in_quota_time_elapsed() {
  in_quota_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_ExecutionStats::in_quota_time_elapsed() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.in_quota_time_elapsed)
  return in_quota_time_elapsed_;
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_in_quota_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  in_quota_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.in_quota_time_elapsed)
}

// optional int64 job_count_expiration_time_elapsed = 9;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_job_count_expiration_time_elapsed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_job_count_expiration_time_elapsed() {
  job_count_expiration_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_ExecutionStats::job_count_expiration_time_elapsed() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.job_count_expiration_time_elapsed)
  return job_count_expiration_time_elapsed_;
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_job_count_expiration_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000200u;
  job_count_expiration_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.job_count_expiration_time_elapsed)
}

// optional int32 job_count_in_rate_limiting_window = 10;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_job_count_in_rate_limiting_window() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_job_count_in_rate_limiting_window() {
  job_count_in_rate_limiting_window_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_QuotaController_ExecutionStats::job_count_in_rate_limiting_window() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.job_count_in_rate_limiting_window)
  return job_count_in_rate_limiting_window_;
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_job_count_in_rate_limiting_window(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  job_count_in_rate_limiting_window_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.job_count_in_rate_limiting_window)
}

// optional int64 session_count_expiration_time_elapsed = 12;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_session_count_expiration_time_elapsed() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_session_count_expiration_time_elapsed() {
  session_count_expiration_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_ExecutionStats::session_count_expiration_time_elapsed() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.session_count_expiration_time_elapsed)
  return session_count_expiration_time_elapsed_;
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_session_count_expiration_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000400u;
  session_count_expiration_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.session_count_expiration_time_elapsed)
}

// optional int32 session_count_in_rate_limiting_window = 13;
inline bool StateControllerProto_QuotaController_ExecutionStats::has_session_count_in_rate_limiting_window() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void StateControllerProto_QuotaController_ExecutionStats::clear_session_count_in_rate_limiting_window() {
  session_count_in_rate_limiting_window_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_QuotaController_ExecutionStats::session_count_in_rate_limiting_window() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.session_count_in_rate_limiting_window)
  return session_count_in_rate_limiting_window_;
}
inline void StateControllerProto_QuotaController_ExecutionStats::set_session_count_in_rate_limiting_window(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  session_count_in_rate_limiting_window_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.ExecutionStats.session_count_in_rate_limiting_window)
}

// -------------------------------------------------------------------

// StateControllerProto_QuotaController_Package

// optional int32 user_id = 1;
inline bool StateControllerProto_QuotaController_Package::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_QuotaController_Package::clear_user_id() {
  user_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_QuotaController_Package::user_id() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.Package.user_id)
  return user_id_;
}
inline void StateControllerProto_QuotaController_Package::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  user_id_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.Package.user_id)
}

// optional string name = 2;
inline bool StateControllerProto_QuotaController_Package::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_QuotaController_Package::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& StateControllerProto_QuotaController_Package::name() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.Package.name)
  return name_.GetNoArena();
}
inline void StateControllerProto_QuotaController_Package::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.Package.name)
}
inline void StateControllerProto_QuotaController_Package::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.job.StateControllerProto.QuotaController.Package.name)
}
inline void StateControllerProto_QuotaController_Package::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.job.StateControllerProto.QuotaController.Package.name)
}
inline void StateControllerProto_QuotaController_Package::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.StateControllerProto.QuotaController.Package.name)
}
inline std::string* StateControllerProto_QuotaController_Package::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.Package.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* StateControllerProto_QuotaController_Package::release_name() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.QuotaController.Package.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void StateControllerProto_QuotaController_Package::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.QuotaController.Package.name)
}

// -------------------------------------------------------------------

// StateControllerProto_QuotaController_TimingSession

// optional int64 start_time_elapsed = 1;
inline bool StateControllerProto_QuotaController_TimingSession::has_start_time_elapsed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_QuotaController_TimingSession::clear_start_time_elapsed() {
  start_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_TimingSession::start_time_elapsed() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TimingSession.start_time_elapsed)
  return start_time_elapsed_;
}
inline void StateControllerProto_QuotaController_TimingSession::set_start_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  start_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.TimingSession.start_time_elapsed)
}

// optional int64 end_time_elapsed = 2;
inline bool StateControllerProto_QuotaController_TimingSession::has_end_time_elapsed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_QuotaController_TimingSession::clear_end_time_elapsed() {
  end_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_TimingSession::end_time_elapsed() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TimingSession.end_time_elapsed)
  return end_time_elapsed_;
}
inline void StateControllerProto_QuotaController_TimingSession::set_end_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  end_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.TimingSession.end_time_elapsed)
}

// optional int32 bg_job_count = 3;
inline bool StateControllerProto_QuotaController_TimingSession::has_bg_job_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_QuotaController_TimingSession::clear_bg_job_count() {
  bg_job_count_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_QuotaController_TimingSession::bg_job_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TimingSession.bg_job_count)
  return bg_job_count_;
}
inline void StateControllerProto_QuotaController_TimingSession::set_bg_job_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  bg_job_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.TimingSession.bg_job_count)
}

// -------------------------------------------------------------------

// StateControllerProto_QuotaController_Timer

// optional .com.android.server.job.StateControllerProto.QuotaController.Package pkg = 1;
inline bool StateControllerProto_QuotaController_Timer::has_pkg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_QuotaController_Timer::clear_pkg() {
  if (pkg_ != nullptr) pkg_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::StateControllerProto_QuotaController_Package& StateControllerProto_QuotaController_Timer::pkg() const {
  const ::com::android::server::job::StateControllerProto_QuotaController_Package* p = pkg_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.Timer.pkg)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::StateControllerProto_QuotaController_Package*>(
      &::com::android::server::job::_StateControllerProto_QuotaController_Package_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_QuotaController_Package* StateControllerProto_QuotaController_Timer::release_pkg() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.QuotaController.Timer.pkg)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::StateControllerProto_QuotaController_Package* temp = pkg_;
  pkg_ = nullptr;
  return temp;
}
inline ::com::android::server::job::StateControllerProto_QuotaController_Package* StateControllerProto_QuotaController_Timer::mutable_pkg() {
  _has_bits_[0] |= 0x00000001u;
  if (pkg_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_Package>(GetArenaNoVirtual());
    pkg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.Timer.pkg)
  return pkg_;
}
inline void StateControllerProto_QuotaController_Timer::set_allocated_pkg(::com::android::server::job::StateControllerProto_QuotaController_Package* pkg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pkg_;
  }
  if (pkg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pkg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pkg, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pkg_ = pkg;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.QuotaController.Timer.pkg)
}

// optional bool is_active = 2;
inline bool StateControllerProto_QuotaController_Timer::has_is_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_QuotaController_Timer::clear_is_active() {
  is_active_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool StateControllerProto_QuotaController_Timer::is_active() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.Timer.is_active)
  return is_active_;
}
inline void StateControllerProto_QuotaController_Timer::set_is_active(bool value) {
  _has_bits_[0] |= 0x00000004u;
  is_active_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.Timer.is_active)
}

// optional int64 start_time_elapsed = 3;
inline bool StateControllerProto_QuotaController_Timer::has_start_time_elapsed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_QuotaController_Timer::clear_start_time_elapsed() {
  start_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_Timer::start_time_elapsed() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.Timer.start_time_elapsed)
  return start_time_elapsed_;
}
inline void StateControllerProto_QuotaController_Timer::set_start_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  start_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.Timer.start_time_elapsed)
}

// optional int32 bg_job_count = 4;
inline bool StateControllerProto_QuotaController_Timer::has_bg_job_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StateControllerProto_QuotaController_Timer::clear_bg_job_count() {
  bg_job_count_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_QuotaController_Timer::bg_job_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.Timer.bg_job_count)
  return bg_job_count_;
}
inline void StateControllerProto_QuotaController_Timer::set_bg_job_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  bg_job_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.Timer.bg_job_count)
}

// repeated .com.android.server.job.JobStatusShortInfoProto running_jobs = 5;
inline int StateControllerProto_QuotaController_Timer::running_jobs_size() const {
  return running_jobs_.size();
}
inline void StateControllerProto_QuotaController_Timer::clear_running_jobs() {
  running_jobs_.Clear();
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_QuotaController_Timer::mutable_running_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.Timer.running_jobs)
  return running_jobs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusShortInfoProto >*
StateControllerProto_QuotaController_Timer::mutable_running_jobs() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.QuotaController.Timer.running_jobs)
  return &running_jobs_;
}
inline const ::com::android::server::job::JobStatusShortInfoProto& StateControllerProto_QuotaController_Timer::running_jobs(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.Timer.running_jobs)
  return running_jobs_.Get(index);
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_QuotaController_Timer::add_running_jobs() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.QuotaController.Timer.running_jobs)
  return running_jobs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusShortInfoProto >&
StateControllerProto_QuotaController_Timer::running_jobs() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.QuotaController.Timer.running_jobs)
  return running_jobs_;
}

// -------------------------------------------------------------------

// StateControllerProto_QuotaController_TopAppTimer

// optional .com.android.server.job.StateControllerProto.QuotaController.Package pkg = 1;
inline bool StateControllerProto_QuotaController_TopAppTimer::has_pkg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_QuotaController_TopAppTimer::clear_pkg() {
  if (pkg_ != nullptr) pkg_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::StateControllerProto_QuotaController_Package& StateControllerProto_QuotaController_TopAppTimer::pkg() const {
  const ::com::android::server::job::StateControllerProto_QuotaController_Package* p = pkg_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TopAppTimer.pkg)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::StateControllerProto_QuotaController_Package*>(
      &::com::android::server::job::_StateControllerProto_QuotaController_Package_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_QuotaController_Package* StateControllerProto_QuotaController_TopAppTimer::release_pkg() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.QuotaController.TopAppTimer.pkg)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::StateControllerProto_QuotaController_Package* temp = pkg_;
  pkg_ = nullptr;
  return temp;
}
inline ::com::android::server::job::StateControllerProto_QuotaController_Package* StateControllerProto_QuotaController_TopAppTimer::mutable_pkg() {
  _has_bits_[0] |= 0x00000001u;
  if (pkg_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_Package>(GetArenaNoVirtual());
    pkg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.TopAppTimer.pkg)
  return pkg_;
}
inline void StateControllerProto_QuotaController_TopAppTimer::set_allocated_pkg(::com::android::server::job::StateControllerProto_QuotaController_Package* pkg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pkg_;
  }
  if (pkg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pkg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pkg, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pkg_ = pkg;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.QuotaController.TopAppTimer.pkg)
}

// optional bool is_active = 2;
inline bool StateControllerProto_QuotaController_TopAppTimer::has_is_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_QuotaController_TopAppTimer::clear_is_active() {
  is_active_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool StateControllerProto_QuotaController_TopAppTimer::is_active() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TopAppTimer.is_active)
  return is_active_;
}
inline void StateControllerProto_QuotaController_TopAppTimer::set_is_active(bool value) {
  _has_bits_[0] |= 0x00000004u;
  is_active_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.TopAppTimer.is_active)
}

// optional int64 start_time_elapsed = 3;
inline bool StateControllerProto_QuotaController_TopAppTimer::has_start_time_elapsed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_QuotaController_TopAppTimer::clear_start_time_elapsed() {
  start_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_TopAppTimer::start_time_elapsed() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TopAppTimer.start_time_elapsed)
  return start_time_elapsed_;
}
inline void StateControllerProto_QuotaController_TopAppTimer::set_start_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  start_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.TopAppTimer.start_time_elapsed)
}

// optional int32 activity_count = 4;
inline bool StateControllerProto_QuotaController_TopAppTimer::has_activity_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StateControllerProto_QuotaController_TopAppTimer::clear_activity_count() {
  activity_count_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_QuotaController_TopAppTimer::activity_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.TopAppTimer.activity_count)
  return activity_count_;
}
inline void StateControllerProto_QuotaController_TopAppTimer::set_activity_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  activity_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.TopAppTimer.activity_count)
}

// -------------------------------------------------------------------

// StateControllerProto_QuotaController_PackageStats

// optional .com.android.server.job.StateControllerProto.QuotaController.Package pkg = 1;
inline bool StateControllerProto_QuotaController_PackageStats::has_pkg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_QuotaController_PackageStats::clear_pkg() {
  if (pkg_ != nullptr) pkg_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::StateControllerProto_QuotaController_Package& StateControllerProto_QuotaController_PackageStats::pkg() const {
  const ::com::android::server::job::StateControllerProto_QuotaController_Package* p = pkg_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.PackageStats.pkg)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::StateControllerProto_QuotaController_Package*>(
      &::com::android::server::job::_StateControllerProto_QuotaController_Package_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_QuotaController_Package* StateControllerProto_QuotaController_PackageStats::release_pkg() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.QuotaController.PackageStats.pkg)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::StateControllerProto_QuotaController_Package* temp = pkg_;
  pkg_ = nullptr;
  return temp;
}
inline ::com::android::server::job::StateControllerProto_QuotaController_Package* StateControllerProto_QuotaController_PackageStats::mutable_pkg() {
  _has_bits_[0] |= 0x00000001u;
  if (pkg_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_Package>(GetArenaNoVirtual());
    pkg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.PackageStats.pkg)
  return pkg_;
}
inline void StateControllerProto_QuotaController_PackageStats::set_allocated_pkg(::com::android::server::job::StateControllerProto_QuotaController_Package* pkg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pkg_;
  }
  if (pkg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pkg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pkg, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pkg_ = pkg;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.QuotaController.PackageStats.pkg)
}

// optional .com.android.server.job.StateControllerProto.QuotaController.Timer timer = 2;
inline bool StateControllerProto_QuotaController_PackageStats::has_timer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_QuotaController_PackageStats::clear_timer() {
  if (timer_ != nullptr) timer_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::job::StateControllerProto_QuotaController_Timer& StateControllerProto_QuotaController_PackageStats::timer() const {
  const ::com::android::server::job::StateControllerProto_QuotaController_Timer* p = timer_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.PackageStats.timer)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::StateControllerProto_QuotaController_Timer*>(
      &::com::android::server::job::_StateControllerProto_QuotaController_Timer_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_QuotaController_Timer* StateControllerProto_QuotaController_PackageStats::release_timer() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.QuotaController.PackageStats.timer)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::job::StateControllerProto_QuotaController_Timer* temp = timer_;
  timer_ = nullptr;
  return temp;
}
inline ::com::android::server::job::StateControllerProto_QuotaController_Timer* StateControllerProto_QuotaController_PackageStats::mutable_timer() {
  _has_bits_[0] |= 0x00000002u;
  if (timer_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_Timer>(GetArenaNoVirtual());
    timer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.PackageStats.timer)
  return timer_;
}
inline void StateControllerProto_QuotaController_PackageStats::set_allocated_timer(::com::android::server::job::StateControllerProto_QuotaController_Timer* timer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete timer_;
  }
  if (timer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      timer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, timer, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  timer_ = timer;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.QuotaController.PackageStats.timer)
}

// repeated .com.android.server.job.StateControllerProto.QuotaController.TimingSession saved_sessions = 3;
inline int StateControllerProto_QuotaController_PackageStats::saved_sessions_size() const {
  return saved_sessions_.size();
}
inline void StateControllerProto_QuotaController_PackageStats::clear_saved_sessions() {
  saved_sessions_.Clear();
}
inline ::com::android::server::job::StateControllerProto_QuotaController_TimingSession* StateControllerProto_QuotaController_PackageStats::mutable_saved_sessions(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.PackageStats.saved_sessions)
  return saved_sessions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_TimingSession >*
StateControllerProto_QuotaController_PackageStats::mutable_saved_sessions() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.QuotaController.PackageStats.saved_sessions)
  return &saved_sessions_;
}
inline const ::com::android::server::job::StateControllerProto_QuotaController_TimingSession& StateControllerProto_QuotaController_PackageStats::saved_sessions(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.PackageStats.saved_sessions)
  return saved_sessions_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_QuotaController_TimingSession* StateControllerProto_QuotaController_PackageStats::add_saved_sessions() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.QuotaController.PackageStats.saved_sessions)
  return saved_sessions_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_TimingSession >&
StateControllerProto_QuotaController_PackageStats::saved_sessions() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.QuotaController.PackageStats.saved_sessions)
  return saved_sessions_;
}

// repeated .com.android.server.job.StateControllerProto.QuotaController.ExecutionStats execution_stats = 4;
inline int StateControllerProto_QuotaController_PackageStats::execution_stats_size() const {
  return execution_stats_.size();
}
inline void StateControllerProto_QuotaController_PackageStats::clear_execution_stats() {
  execution_stats_.Clear();
}
inline ::com::android::server::job::StateControllerProto_QuotaController_ExecutionStats* StateControllerProto_QuotaController_PackageStats::mutable_execution_stats(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.PackageStats.execution_stats)
  return execution_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_ExecutionStats >*
StateControllerProto_QuotaController_PackageStats::mutable_execution_stats() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.QuotaController.PackageStats.execution_stats)
  return &execution_stats_;
}
inline const ::com::android::server::job::StateControllerProto_QuotaController_ExecutionStats& StateControllerProto_QuotaController_PackageStats::execution_stats(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.PackageStats.execution_stats)
  return execution_stats_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_QuotaController_ExecutionStats* StateControllerProto_QuotaController_PackageStats::add_execution_stats() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.QuotaController.PackageStats.execution_stats)
  return execution_stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_ExecutionStats >&
StateControllerProto_QuotaController_PackageStats::execution_stats() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.QuotaController.PackageStats.execution_stats)
  return execution_stats_;
}

// optional .com.android.server.job.StateControllerProto.QuotaController.Timer fg_job_timer = 6;
inline bool StateControllerProto_QuotaController_PackageStats::has_fg_job_timer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_QuotaController_PackageStats::clear_fg_job_timer() {
  if (fg_job_timer_ != nullptr) fg_job_timer_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::com::android::server::job::StateControllerProto_QuotaController_Timer& StateControllerProto_QuotaController_PackageStats::fg_job_timer() const {
  const ::com::android::server::job::StateControllerProto_QuotaController_Timer* p = fg_job_timer_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.PackageStats.fg_job_timer)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::StateControllerProto_QuotaController_Timer*>(
      &::com::android::server::job::_StateControllerProto_QuotaController_Timer_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_QuotaController_Timer* StateControllerProto_QuotaController_PackageStats::release_fg_job_timer() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.QuotaController.PackageStats.fg_job_timer)
  _has_bits_[0] &= ~0x00000004u;
  ::com::android::server::job::StateControllerProto_QuotaController_Timer* temp = fg_job_timer_;
  fg_job_timer_ = nullptr;
  return temp;
}
inline ::com::android::server::job::StateControllerProto_QuotaController_Timer* StateControllerProto_QuotaController_PackageStats::mutable_fg_job_timer() {
  _has_bits_[0] |= 0x00000004u;
  if (fg_job_timer_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_Timer>(GetArenaNoVirtual());
    fg_job_timer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.PackageStats.fg_job_timer)
  return fg_job_timer_;
}
inline void StateControllerProto_QuotaController_PackageStats::set_allocated_fg_job_timer(::com::android::server::job::StateControllerProto_QuotaController_Timer* fg_job_timer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete fg_job_timer_;
  }
  if (fg_job_timer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fg_job_timer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fg_job_timer, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  fg_job_timer_ = fg_job_timer;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.QuotaController.PackageStats.fg_job_timer)
}

// -------------------------------------------------------------------

// StateControllerProto_QuotaController_UidPackageMapping

// optional int32 uid = 1;
inline bool StateControllerProto_QuotaController_UidPackageMapping::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_QuotaController_UidPackageMapping::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_QuotaController_UidPackageMapping::uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.uid)
  return uid_;
}
inline void StateControllerProto_QuotaController_UidPackageMapping::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.uid)
}

// repeated string package_names = 2;
inline int StateControllerProto_QuotaController_UidPackageMapping::package_names_size() const {
  return package_names_.size();
}
inline void StateControllerProto_QuotaController_UidPackageMapping::clear_package_names() {
  package_names_.Clear();
}
inline const std::string& StateControllerProto_QuotaController_UidPackageMapping::package_names(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.package_names)
  return package_names_.Get(index);
}
inline std::string* StateControllerProto_QuotaController_UidPackageMapping::mutable_package_names(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.package_names)
  return package_names_.Mutable(index);
}
inline void StateControllerProto_QuotaController_UidPackageMapping::set_package_names(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.package_names)
  package_names_.Mutable(index)->assign(value);
}
inline void StateControllerProto_QuotaController_UidPackageMapping::set_package_names(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.package_names)
  package_names_.Mutable(index)->assign(std::move(value));
}
inline void StateControllerProto_QuotaController_UidPackageMapping::set_package_names(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  package_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.package_names)
}
inline void StateControllerProto_QuotaController_UidPackageMapping::set_package_names(int index, const char* value, size_t size) {
  package_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.package_names)
}
inline std::string* StateControllerProto_QuotaController_UidPackageMapping::add_package_names() {
  // @@protoc_insertion_point(field_add_mutable:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.package_names)
  return package_names_.Add();
}
inline void StateControllerProto_QuotaController_UidPackageMapping::add_package_names(const std::string& value) {
  package_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.package_names)
}
inline void StateControllerProto_QuotaController_UidPackageMapping::add_package_names(std::string&& value) {
  package_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.package_names)
}
inline void StateControllerProto_QuotaController_UidPackageMapping::add_package_names(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  package_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.package_names)
}
inline void StateControllerProto_QuotaController_UidPackageMapping::add_package_names(const char* value, size_t size) {
  package_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.package_names)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
StateControllerProto_QuotaController_UidPackageMapping::package_names() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.package_names)
  return package_names_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
StateControllerProto_QuotaController_UidPackageMapping::mutable_package_names() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping.package_names)
  return &package_names_;
}

// -------------------------------------------------------------------

// StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm

// optional .com.android.server.job.StateControllerProto.QuotaController.Package pkg = 1;
inline bool StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm::has_pkg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm::clear_pkg() {
  if (pkg_ != nullptr) pkg_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::StateControllerProto_QuotaController_Package& StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm::pkg() const {
  const ::com::android::server::job::StateControllerProto_QuotaController_Package* p = pkg_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.Alarm.pkg)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::StateControllerProto_QuotaController_Package*>(
      &::com::android::server::job::_StateControllerProto_QuotaController_Package_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_QuotaController_Package* StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm::release_pkg() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.Alarm.pkg)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::StateControllerProto_QuotaController_Package* temp = pkg_;
  pkg_ = nullptr;
  return temp;
}
inline ::com::android::server::job::StateControllerProto_QuotaController_Package* StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm::mutable_pkg() {
  _has_bits_[0] |= 0x00000001u;
  if (pkg_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_Package>(GetArenaNoVirtual());
    pkg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.Alarm.pkg)
  return pkg_;
}
inline void StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm::set_allocated_pkg(::com::android::server::job::StateControllerProto_QuotaController_Package* pkg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pkg_;
  }
  if (pkg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pkg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pkg, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pkg_ = pkg;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.Alarm.pkg)
}

// optional int64 in_quota_time_elapsed = 2;
inline bool StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm::has_in_quota_time_elapsed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm::clear_in_quota_time_elapsed() {
  in_quota_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm::in_quota_time_elapsed() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.Alarm.in_quota_time_elapsed)
  return in_quota_time_elapsed_;
}
inline void StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm::set_in_quota_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  in_quota_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.Alarm.in_quota_time_elapsed)
}

// -------------------------------------------------------------------

// StateControllerProto_QuotaController_InQuotaAlarmListener

// optional int64 trigger_time_elapsed = 1;
inline bool StateControllerProto_QuotaController_InQuotaAlarmListener::has_trigger_time_elapsed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_QuotaController_InQuotaAlarmListener::clear_trigger_time_elapsed() {
  trigger_time_elapsed_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController_InQuotaAlarmListener::trigger_time_elapsed() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.trigger_time_elapsed)
  return trigger_time_elapsed_;
}
inline void StateControllerProto_QuotaController_InQuotaAlarmListener::set_trigger_time_elapsed(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  trigger_time_elapsed_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.trigger_time_elapsed)
}

// repeated .com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.Alarm alarms = 2;
inline int StateControllerProto_QuotaController_InQuotaAlarmListener::alarms_size() const {
  return alarms_.size();
}
inline void StateControllerProto_QuotaController_InQuotaAlarmListener::clear_alarms() {
  alarms_.Clear();
}
inline ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm* StateControllerProto_QuotaController_InQuotaAlarmListener::mutable_alarms(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.alarms)
  return alarms_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm >*
StateControllerProto_QuotaController_InQuotaAlarmListener::mutable_alarms() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.alarms)
  return &alarms_;
}
inline const ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm& StateControllerProto_QuotaController_InQuotaAlarmListener::alarms(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.alarms)
  return alarms_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm* StateControllerProto_QuotaController_InQuotaAlarmListener::add_alarms() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.alarms)
  return alarms_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener_Alarm >&
StateControllerProto_QuotaController_InQuotaAlarmListener::alarms() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener.alarms)
  return alarms_;
}

// -------------------------------------------------------------------

// StateControllerProto_QuotaController

// optional bool is_charging = 1;
inline bool StateControllerProto_QuotaController::has_is_charging() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_QuotaController::clear_is_charging() {
  is_charging_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool StateControllerProto_QuotaController::is_charging() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.is_charging)
  return is_charging_;
}
inline void StateControllerProto_QuotaController::set_is_charging(bool value) {
  _has_bits_[0] |= 0x00000004u;
  is_charging_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.is_charging)
}

// optional int64 elapsed_realtime = 6;
inline bool StateControllerProto_QuotaController::has_elapsed_realtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_QuotaController::clear_elapsed_realtime() {
  elapsed_realtime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_QuotaController::elapsed_realtime() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.elapsed_realtime)
  return elapsed_realtime_;
}
inline void StateControllerProto_QuotaController::set_elapsed_realtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  elapsed_realtime_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.elapsed_realtime)
}

// repeated int32 foreground_uids = 3;
inline int StateControllerProto_QuotaController::foreground_uids_size() const {
  return foreground_uids_.size();
}
inline void StateControllerProto_QuotaController::clear_foreground_uids() {
  foreground_uids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_QuotaController::foreground_uids(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.foreground_uids)
  return foreground_uids_.Get(index);
}
inline void StateControllerProto_QuotaController::set_foreground_uids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  foreground_uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.QuotaController.foreground_uids)
}
inline void StateControllerProto_QuotaController::add_foreground_uids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  foreground_uids_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.QuotaController.foreground_uids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
StateControllerProto_QuotaController::foreground_uids() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.QuotaController.foreground_uids)
  return foreground_uids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
StateControllerProto_QuotaController::mutable_foreground_uids() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.QuotaController.foreground_uids)
  return &foreground_uids_;
}

// repeated .com.android.server.job.StateControllerProto.QuotaController.TrackedJob tracked_jobs = 4;
inline int StateControllerProto_QuotaController::tracked_jobs_size() const {
  return tracked_jobs_.size();
}
inline void StateControllerProto_QuotaController::clear_tracked_jobs() {
  tracked_jobs_.Clear();
}
inline ::com::android::server::job::StateControllerProto_QuotaController_TrackedJob* StateControllerProto_QuotaController::mutable_tracked_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.tracked_jobs)
  return tracked_jobs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_TrackedJob >*
StateControllerProto_QuotaController::mutable_tracked_jobs() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.QuotaController.tracked_jobs)
  return &tracked_jobs_;
}
inline const ::com::android::server::job::StateControllerProto_QuotaController_TrackedJob& StateControllerProto_QuotaController::tracked_jobs(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.tracked_jobs)
  return tracked_jobs_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_QuotaController_TrackedJob* StateControllerProto_QuotaController::add_tracked_jobs() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.QuotaController.tracked_jobs)
  return tracked_jobs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_TrackedJob >&
StateControllerProto_QuotaController::tracked_jobs() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.QuotaController.tracked_jobs)
  return tracked_jobs_;
}

// repeated .com.android.server.job.StateControllerProto.QuotaController.PackageStats package_stats = 5;
inline int StateControllerProto_QuotaController::package_stats_size() const {
  return package_stats_.size();
}
inline void StateControllerProto_QuotaController::clear_package_stats() {
  package_stats_.Clear();
}
inline ::com::android::server::job::StateControllerProto_QuotaController_PackageStats* StateControllerProto_QuotaController::mutable_package_stats(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.package_stats)
  return package_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_PackageStats >*
StateControllerProto_QuotaController::mutable_package_stats() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.QuotaController.package_stats)
  return &package_stats_;
}
inline const ::com::android::server::job::StateControllerProto_QuotaController_PackageStats& StateControllerProto_QuotaController::package_stats(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.package_stats)
  return package_stats_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_QuotaController_PackageStats* StateControllerProto_QuotaController::add_package_stats() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.QuotaController.package_stats)
  return package_stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_PackageStats >&
StateControllerProto_QuotaController::package_stats() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.QuotaController.package_stats)
  return package_stats_;
}

// repeated .com.android.server.job.StateControllerProto.QuotaController.UidPackageMapping uid_to_package_cache = 7;
inline int StateControllerProto_QuotaController::uid_to_package_cache_size() const {
  return uid_to_package_cache_.size();
}
inline void StateControllerProto_QuotaController::clear_uid_to_package_cache() {
  uid_to_package_cache_.Clear();
}
inline ::com::android::server::job::StateControllerProto_QuotaController_UidPackageMapping* StateControllerProto_QuotaController::mutable_uid_to_package_cache(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.uid_to_package_cache)
  return uid_to_package_cache_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_UidPackageMapping >*
StateControllerProto_QuotaController::mutable_uid_to_package_cache() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.QuotaController.uid_to_package_cache)
  return &uid_to_package_cache_;
}
inline const ::com::android::server::job::StateControllerProto_QuotaController_UidPackageMapping& StateControllerProto_QuotaController::uid_to_package_cache(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.uid_to_package_cache)
  return uid_to_package_cache_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_QuotaController_UidPackageMapping* StateControllerProto_QuotaController::add_uid_to_package_cache() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.QuotaController.uid_to_package_cache)
  return uid_to_package_cache_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_QuotaController_UidPackageMapping >&
StateControllerProto_QuotaController::uid_to_package_cache() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.QuotaController.uid_to_package_cache)
  return uid_to_package_cache_;
}

// optional .com.android.server.job.StateControllerProto.QuotaController.InQuotaAlarmListener in_quota_alarm_listener = 8;
inline bool StateControllerProto_QuotaController::has_in_quota_alarm_listener() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_QuotaController::clear_in_quota_alarm_listener() {
  if (in_quota_alarm_listener_ != nullptr) in_quota_alarm_listener_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener& StateControllerProto_QuotaController::in_quota_alarm_listener() const {
  const ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener* p = in_quota_alarm_listener_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.QuotaController.in_quota_alarm_listener)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener*>(
      &::com::android::server::job::_StateControllerProto_QuotaController_InQuotaAlarmListener_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener* StateControllerProto_QuotaController::release_in_quota_alarm_listener() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.QuotaController.in_quota_alarm_listener)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener* temp = in_quota_alarm_listener_;
  in_quota_alarm_listener_ = nullptr;
  return temp;
}
inline ::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener* StateControllerProto_QuotaController::mutable_in_quota_alarm_listener() {
  _has_bits_[0] |= 0x00000001u;
  if (in_quota_alarm_listener_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener>(GetArenaNoVirtual());
    in_quota_alarm_listener_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.QuotaController.in_quota_alarm_listener)
  return in_quota_alarm_listener_;
}
inline void StateControllerProto_QuotaController::set_allocated_in_quota_alarm_listener(::com::android::server::job::StateControllerProto_QuotaController_InQuotaAlarmListener* in_quota_alarm_listener) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete in_quota_alarm_listener_;
  }
  if (in_quota_alarm_listener) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      in_quota_alarm_listener = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, in_quota_alarm_listener, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  in_quota_alarm_listener_ = in_quota_alarm_listener;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.QuotaController.in_quota_alarm_listener)
}

// -------------------------------------------------------------------

// StateControllerProto_StorageController_TrackedJob

// optional .com.android.server.job.JobStatusShortInfoProto info = 1;
inline bool StateControllerProto_StorageController_TrackedJob::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_StorageController_TrackedJob::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::JobStatusShortInfoProto& StateControllerProto_StorageController_TrackedJob::info() const {
  const ::com::android::server::job::JobStatusShortInfoProto* p = info_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.StorageController.TrackedJob.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusShortInfoProto*>(
      &::com::android::server::job::_JobStatusShortInfoProto_default_instance_);
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_StorageController_TrackedJob::release_info() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.StorageController.TrackedJob.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::JobStatusShortInfoProto* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_StorageController_TrackedJob::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusShortInfoProto>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.StorageController.TrackedJob.info)
  return info_;
}
inline void StateControllerProto_StorageController_TrackedJob::set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.StorageController.TrackedJob.info)
}

// optional int32 source_uid = 2;
inline bool StateControllerProto_StorageController_TrackedJob::has_source_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_StorageController_TrackedJob::clear_source_uid() {
  source_uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_StorageController_TrackedJob::source_uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.StorageController.TrackedJob.source_uid)
  return source_uid_;
}
inline void StateControllerProto_StorageController_TrackedJob::set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  source_uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.StorageController.TrackedJob.source_uid)
}

// -------------------------------------------------------------------

// StateControllerProto_StorageController

// optional bool is_storage_not_low = 1;
inline bool StateControllerProto_StorageController::has_is_storage_not_low() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_StorageController::clear_is_storage_not_low() {
  is_storage_not_low_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool StateControllerProto_StorageController::is_storage_not_low() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.StorageController.is_storage_not_low)
  return is_storage_not_low_;
}
inline void StateControllerProto_StorageController::set_is_storage_not_low(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_storage_not_low_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.StorageController.is_storage_not_low)
}

// optional int32 last_broadcast_sequence_number = 2;
inline bool StateControllerProto_StorageController::has_last_broadcast_sequence_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_StorageController::clear_last_broadcast_sequence_number() {
  last_broadcast_sequence_number_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_StorageController::last_broadcast_sequence_number() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.StorageController.last_broadcast_sequence_number)
  return last_broadcast_sequence_number_;
}
inline void StateControllerProto_StorageController::set_last_broadcast_sequence_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  last_broadcast_sequence_number_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.StorageController.last_broadcast_sequence_number)
}

// repeated .com.android.server.job.StateControllerProto.StorageController.TrackedJob tracked_jobs = 3;
inline int StateControllerProto_StorageController::tracked_jobs_size() const {
  return tracked_jobs_.size();
}
inline void StateControllerProto_StorageController::clear_tracked_jobs() {
  tracked_jobs_.Clear();
}
inline ::com::android::server::job::StateControllerProto_StorageController_TrackedJob* StateControllerProto_StorageController::mutable_tracked_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.StorageController.tracked_jobs)
  return tracked_jobs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_StorageController_TrackedJob >*
StateControllerProto_StorageController::mutable_tracked_jobs() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.StorageController.tracked_jobs)
  return &tracked_jobs_;
}
inline const ::com::android::server::job::StateControllerProto_StorageController_TrackedJob& StateControllerProto_StorageController::tracked_jobs(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.StorageController.tracked_jobs)
  return tracked_jobs_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_StorageController_TrackedJob* StateControllerProto_StorageController::add_tracked_jobs() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.StorageController.tracked_jobs)
  return tracked_jobs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_StorageController_TrackedJob >&
StateControllerProto_StorageController::tracked_jobs() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.StorageController.tracked_jobs)
  return tracked_jobs_;
}

// -------------------------------------------------------------------

// StateControllerProto_TimeController_TrackedJob

// optional .com.android.server.job.JobStatusShortInfoProto info = 1;
inline bool StateControllerProto_TimeController_TrackedJob::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_TimeController_TrackedJob::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::JobStatusShortInfoProto& StateControllerProto_TimeController_TrackedJob::info() const {
  const ::com::android::server::job::JobStatusShortInfoProto* p = info_;
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.TimeController.TrackedJob.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusShortInfoProto*>(
      &::com::android::server::job::_JobStatusShortInfoProto_default_instance_);
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_TimeController_TrackedJob::release_info() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.TimeController.TrackedJob.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::JobStatusShortInfoProto* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusShortInfoProto* StateControllerProto_TimeController_TrackedJob::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusShortInfoProto>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.TimeController.TrackedJob.info)
  return info_;
}
inline void StateControllerProto_TimeController_TrackedJob::set_allocated_info(::com::android::server::job::JobStatusShortInfoProto* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.StateControllerProto.TimeController.TrackedJob.info)
}

// optional int32 source_uid = 2;
inline bool StateControllerProto_TimeController_TrackedJob::has_source_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_TimeController_TrackedJob::clear_source_uid() {
  source_uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StateControllerProto_TimeController_TrackedJob::source_uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.TimeController.TrackedJob.source_uid)
  return source_uid_;
}
inline void StateControllerProto_TimeController_TrackedJob::set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  source_uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.TimeController.TrackedJob.source_uid)
}

// optional bool has_timing_delay_constraint = 3;
inline bool StateControllerProto_TimeController_TrackedJob::has_has_timing_delay_constraint() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_TimeController_TrackedJob::clear_has_timing_delay_constraint() {
  has_timing_delay_constraint_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool StateControllerProto_TimeController_TrackedJob::has_timing_delay_constraint() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.TimeController.TrackedJob.has_timing_delay_constraint)
  return has_timing_delay_constraint_;
}
inline void StateControllerProto_TimeController_TrackedJob::set_has_timing_delay_constraint(bool value) {
  _has_bits_[0] |= 0x00000004u;
  has_timing_delay_constraint_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.TimeController.TrackedJob.has_timing_delay_constraint)
}

// optional int64 delay_time_remaining_ms = 4;
inline bool StateControllerProto_TimeController_TrackedJob::has_delay_time_remaining_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StateControllerProto_TimeController_TrackedJob::clear_delay_time_remaining_ms() {
  delay_time_remaining_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_TimeController_TrackedJob::delay_time_remaining_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.TimeController.TrackedJob.delay_time_remaining_ms)
  return delay_time_remaining_ms_;
}
inline void StateControllerProto_TimeController_TrackedJob::set_delay_time_remaining_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  delay_time_remaining_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.TimeController.TrackedJob.delay_time_remaining_ms)
}

// optional bool has_deadline_constraint = 5;
inline bool StateControllerProto_TimeController_TrackedJob::has_has_deadline_constraint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StateControllerProto_TimeController_TrackedJob::clear_has_deadline_constraint() {
  has_deadline_constraint_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool StateControllerProto_TimeController_TrackedJob::has_deadline_constraint() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.TimeController.TrackedJob.has_deadline_constraint)
  return has_deadline_constraint_;
}
inline void StateControllerProto_TimeController_TrackedJob::set_has_deadline_constraint(bool value) {
  _has_bits_[0] |= 0x00000008u;
  has_deadline_constraint_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.TimeController.TrackedJob.has_deadline_constraint)
}

// optional int64 time_remaining_until_deadline_ms = 6;
inline bool StateControllerProto_TimeController_TrackedJob::has_time_remaining_until_deadline_ms() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StateControllerProto_TimeController_TrackedJob::clear_time_remaining_until_deadline_ms() {
  time_remaining_until_deadline_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_TimeController_TrackedJob::time_remaining_until_deadline_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.TimeController.TrackedJob.time_remaining_until_deadline_ms)
  return time_remaining_until_deadline_ms_;
}
inline void StateControllerProto_TimeController_TrackedJob::set_time_remaining_until_deadline_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  time_remaining_until_deadline_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.TimeController.TrackedJob.time_remaining_until_deadline_ms)
}

// -------------------------------------------------------------------

// StateControllerProto_TimeController

// optional int64 now_elapsed_realtime = 1;
inline bool StateControllerProto_TimeController::has_now_elapsed_realtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateControllerProto_TimeController::clear_now_elapsed_realtime() {
  now_elapsed_realtime_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_TimeController::now_elapsed_realtime() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.TimeController.now_elapsed_realtime)
  return now_elapsed_realtime_;
}
inline void StateControllerProto_TimeController::set_now_elapsed_realtime(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  now_elapsed_realtime_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.TimeController.now_elapsed_realtime)
}

// optional int64 time_until_next_delay_alarm_ms = 2;
inline bool StateControllerProto_TimeController::has_time_until_next_delay_alarm_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateControllerProto_TimeController::clear_time_until_next_delay_alarm_ms() {
  time_until_next_delay_alarm_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_TimeController::time_until_next_delay_alarm_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.TimeController.time_until_next_delay_alarm_ms)
  return time_until_next_delay_alarm_ms_;
}
inline void StateControllerProto_TimeController::set_time_until_next_delay_alarm_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  time_until_next_delay_alarm_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.TimeController.time_until_next_delay_alarm_ms)
}

// optional int64 time_until_next_deadline_alarm_ms = 3;
inline bool StateControllerProto_TimeController::has_time_until_next_deadline_alarm_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateControllerProto_TimeController::clear_time_until_next_deadline_alarm_ms() {
  time_until_next_deadline_alarm_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StateControllerProto_TimeController::time_until_next_deadline_alarm_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.TimeController.time_until_next_deadline_alarm_ms)
  return time_until_next_deadline_alarm_ms_;
}
inline void StateControllerProto_TimeController::set_time_until_next_deadline_alarm_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  time_until_next_deadline_alarm_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.StateControllerProto.TimeController.time_until_next_deadline_alarm_ms)
}

// repeated .com.android.server.job.StateControllerProto.TimeController.TrackedJob tracked_jobs = 4;
inline int StateControllerProto_TimeController::tracked_jobs_size() const {
  return tracked_jobs_.size();
}
inline void StateControllerProto_TimeController::clear_tracked_jobs() {
  tracked_jobs_.Clear();
}
inline ::com::android::server::job::StateControllerProto_TimeController_TrackedJob* StateControllerProto_TimeController::mutable_tracked_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.TimeController.tracked_jobs)
  return tracked_jobs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_TimeController_TrackedJob >*
StateControllerProto_TimeController::mutable_tracked_jobs() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.StateControllerProto.TimeController.tracked_jobs)
  return &tracked_jobs_;
}
inline const ::com::android::server::job::StateControllerProto_TimeController_TrackedJob& StateControllerProto_TimeController::tracked_jobs(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.TimeController.tracked_jobs)
  return tracked_jobs_.Get(index);
}
inline ::com::android::server::job::StateControllerProto_TimeController_TrackedJob* StateControllerProto_TimeController::add_tracked_jobs() {
  // @@protoc_insertion_point(field_add:com.android.server.job.StateControllerProto.TimeController.tracked_jobs)
  return tracked_jobs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::StateControllerProto_TimeController_TrackedJob >&
StateControllerProto_TimeController::tracked_jobs() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.StateControllerProto.TimeController.tracked_jobs)
  return tracked_jobs_;
}

// -------------------------------------------------------------------

// StateControllerProto

// optional .com.android.server.job.StateControllerProto.BackgroundJobsController background = 1;
inline bool StateControllerProto::has_background() const {
  return controller_case() == kBackground;
}
inline void StateControllerProto::set_has_background() {
  _oneof_case_[0] = kBackground;
}
inline void StateControllerProto::clear_background() {
  if (has_background()) {
    delete controller_.background_;
    clear_has_controller();
  }
}
inline ::com::android::server::job::StateControllerProto_BackgroundJobsController* StateControllerProto::release_background() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.background)
  if (has_background()) {
    clear_has_controller();
      ::com::android::server::job::StateControllerProto_BackgroundJobsController* temp = controller_.background_;
    controller_.background_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::android::server::job::StateControllerProto_BackgroundJobsController& StateControllerProto::background() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.background)
  return has_background()
      ? *controller_.background_
      : *reinterpret_cast< ::com::android::server::job::StateControllerProto_BackgroundJobsController*>(&::com::android::server::job::_StateControllerProto_BackgroundJobsController_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_BackgroundJobsController* StateControllerProto::mutable_background() {
  if (!has_background()) {
    clear_controller();
    set_has_background();
    controller_.background_ = CreateMaybeMessage< ::com::android::server::job::StateControllerProto_BackgroundJobsController >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.background)
  return controller_.background_;
}

// optional .com.android.server.job.StateControllerProto.BatteryController battery = 2;
inline bool StateControllerProto::has_battery() const {
  return controller_case() == kBattery;
}
inline void StateControllerProto::set_has_battery() {
  _oneof_case_[0] = kBattery;
}
inline void StateControllerProto::clear_battery() {
  if (has_battery()) {
    delete controller_.battery_;
    clear_has_controller();
  }
}
inline ::com::android::server::job::StateControllerProto_BatteryController* StateControllerProto::release_battery() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.battery)
  if (has_battery()) {
    clear_has_controller();
      ::com::android::server::job::StateControllerProto_BatteryController* temp = controller_.battery_;
    controller_.battery_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::android::server::job::StateControllerProto_BatteryController& StateControllerProto::battery() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.battery)
  return has_battery()
      ? *controller_.battery_
      : *reinterpret_cast< ::com::android::server::job::StateControllerProto_BatteryController*>(&::com::android::server::job::_StateControllerProto_BatteryController_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_BatteryController* StateControllerProto::mutable_battery() {
  if (!has_battery()) {
    clear_controller();
    set_has_battery();
    controller_.battery_ = CreateMaybeMessage< ::com::android::server::job::StateControllerProto_BatteryController >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.battery)
  return controller_.battery_;
}

// optional .com.android.server.job.StateControllerProto.ConnectivityController connectivity = 3;
inline bool StateControllerProto::has_connectivity() const {
  return controller_case() == kConnectivity;
}
inline void StateControllerProto::set_has_connectivity() {
  _oneof_case_[0] = kConnectivity;
}
inline void StateControllerProto::clear_connectivity() {
  if (has_connectivity()) {
    delete controller_.connectivity_;
    clear_has_controller();
  }
}
inline ::com::android::server::job::StateControllerProto_ConnectivityController* StateControllerProto::release_connectivity() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.connectivity)
  if (has_connectivity()) {
    clear_has_controller();
      ::com::android::server::job::StateControllerProto_ConnectivityController* temp = controller_.connectivity_;
    controller_.connectivity_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::android::server::job::StateControllerProto_ConnectivityController& StateControllerProto::connectivity() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.connectivity)
  return has_connectivity()
      ? *controller_.connectivity_
      : *reinterpret_cast< ::com::android::server::job::StateControllerProto_ConnectivityController*>(&::com::android::server::job::_StateControllerProto_ConnectivityController_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_ConnectivityController* StateControllerProto::mutable_connectivity() {
  if (!has_connectivity()) {
    clear_controller();
    set_has_connectivity();
    controller_.connectivity_ = CreateMaybeMessage< ::com::android::server::job::StateControllerProto_ConnectivityController >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.connectivity)
  return controller_.connectivity_;
}

// optional .com.android.server.job.StateControllerProto.ContentObserverController content_observer = 4;
inline bool StateControllerProto::has_content_observer() const {
  return controller_case() == kContentObserver;
}
inline void StateControllerProto::set_has_content_observer() {
  _oneof_case_[0] = kContentObserver;
}
inline void StateControllerProto::clear_content_observer() {
  if (has_content_observer()) {
    delete controller_.content_observer_;
    clear_has_controller();
  }
}
inline ::com::android::server::job::StateControllerProto_ContentObserverController* StateControllerProto::release_content_observer() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.content_observer)
  if (has_content_observer()) {
    clear_has_controller();
      ::com::android::server::job::StateControllerProto_ContentObserverController* temp = controller_.content_observer_;
    controller_.content_observer_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::android::server::job::StateControllerProto_ContentObserverController& StateControllerProto::content_observer() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.content_observer)
  return has_content_observer()
      ? *controller_.content_observer_
      : *reinterpret_cast< ::com::android::server::job::StateControllerProto_ContentObserverController*>(&::com::android::server::job::_StateControllerProto_ContentObserverController_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_ContentObserverController* StateControllerProto::mutable_content_observer() {
  if (!has_content_observer()) {
    clear_controller();
    set_has_content_observer();
    controller_.content_observer_ = CreateMaybeMessage< ::com::android::server::job::StateControllerProto_ContentObserverController >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.content_observer)
  return controller_.content_observer_;
}

// optional .com.android.server.job.StateControllerProto.DeviceIdleJobsController device_idle = 5;
inline bool StateControllerProto::has_device_idle() const {
  return controller_case() == kDeviceIdle;
}
inline void StateControllerProto::set_has_device_idle() {
  _oneof_case_[0] = kDeviceIdle;
}
inline void StateControllerProto::clear_device_idle() {
  if (has_device_idle()) {
    delete controller_.device_idle_;
    clear_has_controller();
  }
}
inline ::com::android::server::job::StateControllerProto_DeviceIdleJobsController* StateControllerProto::release_device_idle() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.device_idle)
  if (has_device_idle()) {
    clear_has_controller();
      ::com::android::server::job::StateControllerProto_DeviceIdleJobsController* temp = controller_.device_idle_;
    controller_.device_idle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::android::server::job::StateControllerProto_DeviceIdleJobsController& StateControllerProto::device_idle() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.device_idle)
  return has_device_idle()
      ? *controller_.device_idle_
      : *reinterpret_cast< ::com::android::server::job::StateControllerProto_DeviceIdleJobsController*>(&::com::android::server::job::_StateControllerProto_DeviceIdleJobsController_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_DeviceIdleJobsController* StateControllerProto::mutable_device_idle() {
  if (!has_device_idle()) {
    clear_controller();
    set_has_device_idle();
    controller_.device_idle_ = CreateMaybeMessage< ::com::android::server::job::StateControllerProto_DeviceIdleJobsController >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.device_idle)
  return controller_.device_idle_;
}

// optional .com.android.server.job.StateControllerProto.IdleController idle = 6;
inline bool StateControllerProto::has_idle() const {
  return controller_case() == kIdle;
}
inline void StateControllerProto::set_has_idle() {
  _oneof_case_[0] = kIdle;
}
inline void StateControllerProto::clear_idle() {
  if (has_idle()) {
    delete controller_.idle_;
    clear_has_controller();
  }
}
inline ::com::android::server::job::StateControllerProto_IdleController* StateControllerProto::release_idle() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.idle)
  if (has_idle()) {
    clear_has_controller();
      ::com::android::server::job::StateControllerProto_IdleController* temp = controller_.idle_;
    controller_.idle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::android::server::job::StateControllerProto_IdleController& StateControllerProto::idle() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.idle)
  return has_idle()
      ? *controller_.idle_
      : *reinterpret_cast< ::com::android::server::job::StateControllerProto_IdleController*>(&::com::android::server::job::_StateControllerProto_IdleController_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_IdleController* StateControllerProto::mutable_idle() {
  if (!has_idle()) {
    clear_controller();
    set_has_idle();
    controller_.idle_ = CreateMaybeMessage< ::com::android::server::job::StateControllerProto_IdleController >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.idle)
  return controller_.idle_;
}

// optional .com.android.server.job.StateControllerProto.QuotaController quota = 9;
inline bool StateControllerProto::has_quota() const {
  return controller_case() == kQuota;
}
inline void StateControllerProto::set_has_quota() {
  _oneof_case_[0] = kQuota;
}
inline void StateControllerProto::clear_quota() {
  if (has_quota()) {
    delete controller_.quota_;
    clear_has_controller();
  }
}
inline ::com::android::server::job::StateControllerProto_QuotaController* StateControllerProto::release_quota() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.quota)
  if (has_quota()) {
    clear_has_controller();
      ::com::android::server::job::StateControllerProto_QuotaController* temp = controller_.quota_;
    controller_.quota_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::android::server::job::StateControllerProto_QuotaController& StateControllerProto::quota() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.quota)
  return has_quota()
      ? *controller_.quota_
      : *reinterpret_cast< ::com::android::server::job::StateControllerProto_QuotaController*>(&::com::android::server::job::_StateControllerProto_QuotaController_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_QuotaController* StateControllerProto::mutable_quota() {
  if (!has_quota()) {
    clear_controller();
    set_has_quota();
    controller_.quota_ = CreateMaybeMessage< ::com::android::server::job::StateControllerProto_QuotaController >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.quota)
  return controller_.quota_;
}

// optional .com.android.server.job.StateControllerProto.StorageController storage = 7;
inline bool StateControllerProto::has_storage() const {
  return controller_case() == kStorage;
}
inline void StateControllerProto::set_has_storage() {
  _oneof_case_[0] = kStorage;
}
inline void StateControllerProto::clear_storage() {
  if (has_storage()) {
    delete controller_.storage_;
    clear_has_controller();
  }
}
inline ::com::android::server::job::StateControllerProto_StorageController* StateControllerProto::release_storage() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.storage)
  if (has_storage()) {
    clear_has_controller();
      ::com::android::server::job::StateControllerProto_StorageController* temp = controller_.storage_;
    controller_.storage_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::android::server::job::StateControllerProto_StorageController& StateControllerProto::storage() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.storage)
  return has_storage()
      ? *controller_.storage_
      : *reinterpret_cast< ::com::android::server::job::StateControllerProto_StorageController*>(&::com::android::server::job::_StateControllerProto_StorageController_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_StorageController* StateControllerProto::mutable_storage() {
  if (!has_storage()) {
    clear_controller();
    set_has_storage();
    controller_.storage_ = CreateMaybeMessage< ::com::android::server::job::StateControllerProto_StorageController >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.storage)
  return controller_.storage_;
}

// optional .com.android.server.job.StateControllerProto.TimeController time = 8;
inline bool StateControllerProto::has_time() const {
  return controller_case() == kTime;
}
inline void StateControllerProto::set_has_time() {
  _oneof_case_[0] = kTime;
}
inline void StateControllerProto::clear_time() {
  if (has_time()) {
    delete controller_.time_;
    clear_has_controller();
  }
}
inline ::com::android::server::job::StateControllerProto_TimeController* StateControllerProto::release_time() {
  // @@protoc_insertion_point(field_release:com.android.server.job.StateControllerProto.time)
  if (has_time()) {
    clear_has_controller();
      ::com::android::server::job::StateControllerProto_TimeController* temp = controller_.time_;
    controller_.time_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::android::server::job::StateControllerProto_TimeController& StateControllerProto::time() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.StateControllerProto.time)
  return has_time()
      ? *controller_.time_
      : *reinterpret_cast< ::com::android::server::job::StateControllerProto_TimeController*>(&::com::android::server::job::_StateControllerProto_TimeController_default_instance_);
}
inline ::com::android::server::job::StateControllerProto_TimeController* StateControllerProto::mutable_time() {
  if (!has_time()) {
    clear_controller();
    set_has_time();
    controller_.time_ = CreateMaybeMessage< ::com::android::server::job::StateControllerProto_TimeController >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.StateControllerProto.time)
  return controller_.time_;
}

inline bool StateControllerProto::has_controller() const {
  return controller_case() != CONTROLLER_NOT_SET;
}
inline void StateControllerProto::clear_has_controller() {
  _oneof_case_[0] = CONTROLLER_NOT_SET;
}
inline StateControllerProto::ControllerCase StateControllerProto::controller_case() const {
  return StateControllerProto::ControllerCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DataSetProto_PackageEntryProto_State

// optional int64 duration_ms = 1;
inline bool DataSetProto_PackageEntryProto_State::has_duration_ms() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataSetProto_PackageEntryProto_State::clear_duration_ms() {
  duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DataSetProto_PackageEntryProto_State::duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.PackageEntryProto.State.duration_ms)
  return duration_ms_;
}
inline void DataSetProto_PackageEntryProto_State::set_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.DataSetProto.PackageEntryProto.State.duration_ms)
}

// optional int32 count = 2;
inline bool DataSetProto_PackageEntryProto_State::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataSetProto_PackageEntryProto_State::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataSetProto_PackageEntryProto_State::count() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.PackageEntryProto.State.count)
  return count_;
}
inline void DataSetProto_PackageEntryProto_State::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.DataSetProto.PackageEntryProto.State.count)
}

// -------------------------------------------------------------------

// DataSetProto_PackageEntryProto_StopReasonCount

// optional .android.app.job.InternalStopReasonEnum reason = 1;
inline bool DataSetProto_PackageEntryProto_StopReasonCount::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataSetProto_PackageEntryProto_StopReasonCount::clear_reason() {
  reason_ = -1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::android::app::job::InternalStopReasonEnum DataSetProto_PackageEntryProto_StopReasonCount::reason() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.PackageEntryProto.StopReasonCount.reason)
  return static_cast< ::android::app::job::InternalStopReasonEnum >(reason_);
}
inline void DataSetProto_PackageEntryProto_StopReasonCount::set_reason(::android::app::job::InternalStopReasonEnum value) {
  assert(::android::app::job::InternalStopReasonEnum_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  reason_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.DataSetProto.PackageEntryProto.StopReasonCount.reason)
}

// optional int32 count = 2;
inline bool DataSetProto_PackageEntryProto_StopReasonCount::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataSetProto_PackageEntryProto_StopReasonCount::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataSetProto_PackageEntryProto_StopReasonCount::count() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.PackageEntryProto.StopReasonCount.count)
  return count_;
}
inline void DataSetProto_PackageEntryProto_StopReasonCount::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.DataSetProto.PackageEntryProto.StopReasonCount.count)
}

// -------------------------------------------------------------------

// DataSetProto_PackageEntryProto

// optional int32 uid = 1;
inline bool DataSetProto_PackageEntryProto::has_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DataSetProto_PackageEntryProto::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataSetProto_PackageEntryProto::uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.PackageEntryProto.uid)
  return uid_;
}
inline void DataSetProto_PackageEntryProto::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.DataSetProto.PackageEntryProto.uid)
}

// optional string package_name = 2;
inline bool DataSetProto_PackageEntryProto::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataSetProto_PackageEntryProto::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DataSetProto_PackageEntryProto::package_name() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.PackageEntryProto.package_name)
  return package_name_.GetNoArena();
}
inline void DataSetProto_PackageEntryProto::set_package_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.job.DataSetProto.PackageEntryProto.package_name)
}
inline void DataSetProto_PackageEntryProto::set_package_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.job.DataSetProto.PackageEntryProto.package_name)
}
inline void DataSetProto_PackageEntryProto::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.job.DataSetProto.PackageEntryProto.package_name)
}
inline void DataSetProto_PackageEntryProto::set_package_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.DataSetProto.PackageEntryProto.package_name)
}
inline std::string* DataSetProto_PackageEntryProto::mutable_package_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.job.DataSetProto.PackageEntryProto.package_name)
  return package_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DataSetProto_PackageEntryProto::release_package_name() {
  // @@protoc_insertion_point(field_release:com.android.server.job.DataSetProto.PackageEntryProto.package_name)
  if (!has_package_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return package_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DataSetProto_PackageEntryProto::set_allocated_package_name(std::string* package_name) {
  if (package_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  package_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.DataSetProto.PackageEntryProto.package_name)
}

// optional .com.android.server.job.DataSetProto.PackageEntryProto.State pending_state = 3;
inline bool DataSetProto_PackageEntryProto::has_pending_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataSetProto_PackageEntryProto::clear_pending_state() {
  if (pending_state_ != nullptr) pending_state_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::job::DataSetProto_PackageEntryProto_State& DataSetProto_PackageEntryProto::pending_state() const {
  const ::com::android::server::job::DataSetProto_PackageEntryProto_State* p = pending_state_;
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.PackageEntryProto.pending_state)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::DataSetProto_PackageEntryProto_State*>(
      &::com::android::server::job::_DataSetProto_PackageEntryProto_State_default_instance_);
}
inline ::com::android::server::job::DataSetProto_PackageEntryProto_State* DataSetProto_PackageEntryProto::release_pending_state() {
  // @@protoc_insertion_point(field_release:com.android.server.job.DataSetProto.PackageEntryProto.pending_state)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::job::DataSetProto_PackageEntryProto_State* temp = pending_state_;
  pending_state_ = nullptr;
  return temp;
}
inline ::com::android::server::job::DataSetProto_PackageEntryProto_State* DataSetProto_PackageEntryProto::mutable_pending_state() {
  _has_bits_[0] |= 0x00000002u;
  if (pending_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::DataSetProto_PackageEntryProto_State>(GetArenaNoVirtual());
    pending_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.DataSetProto.PackageEntryProto.pending_state)
  return pending_state_;
}
inline void DataSetProto_PackageEntryProto::set_allocated_pending_state(::com::android::server::job::DataSetProto_PackageEntryProto_State* pending_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pending_state_;
  }
  if (pending_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pending_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pending_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  pending_state_ = pending_state;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.DataSetProto.PackageEntryProto.pending_state)
}

// optional .com.android.server.job.DataSetProto.PackageEntryProto.State active_state = 4;
inline bool DataSetProto_PackageEntryProto::has_active_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataSetProto_PackageEntryProto::clear_active_state() {
  if (active_state_ != nullptr) active_state_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::com::android::server::job::DataSetProto_PackageEntryProto_State& DataSetProto_PackageEntryProto::active_state() const {
  const ::com::android::server::job::DataSetProto_PackageEntryProto_State* p = active_state_;
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.PackageEntryProto.active_state)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::DataSetProto_PackageEntryProto_State*>(
      &::com::android::server::job::_DataSetProto_PackageEntryProto_State_default_instance_);
}
inline ::com::android::server::job::DataSetProto_PackageEntryProto_State* DataSetProto_PackageEntryProto::release_active_state() {
  // @@protoc_insertion_point(field_release:com.android.server.job.DataSetProto.PackageEntryProto.active_state)
  _has_bits_[0] &= ~0x00000004u;
  ::com::android::server::job::DataSetProto_PackageEntryProto_State* temp = active_state_;
  active_state_ = nullptr;
  return temp;
}
inline ::com::android::server::job::DataSetProto_PackageEntryProto_State* DataSetProto_PackageEntryProto::mutable_active_state() {
  _has_bits_[0] |= 0x00000004u;
  if (active_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::DataSetProto_PackageEntryProto_State>(GetArenaNoVirtual());
    active_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.DataSetProto.PackageEntryProto.active_state)
  return active_state_;
}
inline void DataSetProto_PackageEntryProto::set_allocated_active_state(::com::android::server::job::DataSetProto_PackageEntryProto_State* active_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete active_state_;
  }
  if (active_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      active_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, active_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  active_state_ = active_state;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.DataSetProto.PackageEntryProto.active_state)
}

// optional .com.android.server.job.DataSetProto.PackageEntryProto.State active_top_state = 5;
inline bool DataSetProto_PackageEntryProto::has_active_top_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataSetProto_PackageEntryProto::clear_active_top_state() {
  if (active_top_state_ != nullptr) active_top_state_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::com::android::server::job::DataSetProto_PackageEntryProto_State& DataSetProto_PackageEntryProto::active_top_state() const {
  const ::com::android::server::job::DataSetProto_PackageEntryProto_State* p = active_top_state_;
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.PackageEntryProto.active_top_state)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::DataSetProto_PackageEntryProto_State*>(
      &::com::android::server::job::_DataSetProto_PackageEntryProto_State_default_instance_);
}
inline ::com::android::server::job::DataSetProto_PackageEntryProto_State* DataSetProto_PackageEntryProto::release_active_top_state() {
  // @@protoc_insertion_point(field_release:com.android.server.job.DataSetProto.PackageEntryProto.active_top_state)
  _has_bits_[0] &= ~0x00000008u;
  ::com::android::server::job::DataSetProto_PackageEntryProto_State* temp = active_top_state_;
  active_top_state_ = nullptr;
  return temp;
}
inline ::com::android::server::job::DataSetProto_PackageEntryProto_State* DataSetProto_PackageEntryProto::mutable_active_top_state() {
  _has_bits_[0] |= 0x00000008u;
  if (active_top_state_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::DataSetProto_PackageEntryProto_State>(GetArenaNoVirtual());
    active_top_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.DataSetProto.PackageEntryProto.active_top_state)
  return active_top_state_;
}
inline void DataSetProto_PackageEntryProto::set_allocated_active_top_state(::com::android::server::job::DataSetProto_PackageEntryProto_State* active_top_state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete active_top_state_;
  }
  if (active_top_state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      active_top_state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, active_top_state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  active_top_state_ = active_top_state;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.DataSetProto.PackageEntryProto.active_top_state)
}

// optional bool pending = 6;
inline bool DataSetProto_PackageEntryProto::has_pending() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DataSetProto_PackageEntryProto::clear_pending() {
  pending_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool DataSetProto_PackageEntryProto::pending() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.PackageEntryProto.pending)
  return pending_;
}
inline void DataSetProto_PackageEntryProto::set_pending(bool value) {
  _has_bits_[0] |= 0x00000020u;
  pending_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.DataSetProto.PackageEntryProto.pending)
}

// optional bool active = 7;
inline bool DataSetProto_PackageEntryProto::has_active() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DataSetProto_PackageEntryProto::clear_active() {
  active_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool DataSetProto_PackageEntryProto::active() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.PackageEntryProto.active)
  return active_;
}
inline void DataSetProto_PackageEntryProto::set_active(bool value) {
  _has_bits_[0] |= 0x00000040u;
  active_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.DataSetProto.PackageEntryProto.active)
}

// optional bool active_top = 8;
inline bool DataSetProto_PackageEntryProto::has_active_top() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DataSetProto_PackageEntryProto::clear_active_top() {
  active_top_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool DataSetProto_PackageEntryProto::active_top() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.PackageEntryProto.active_top)
  return active_top_;
}
inline void DataSetProto_PackageEntryProto::set_active_top(bool value) {
  _has_bits_[0] |= 0x00000080u;
  active_top_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.DataSetProto.PackageEntryProto.active_top)
}

// repeated .com.android.server.job.DataSetProto.PackageEntryProto.StopReasonCount stop_reasons = 9;
inline int DataSetProto_PackageEntryProto::stop_reasons_size() const {
  return stop_reasons_.size();
}
inline void DataSetProto_PackageEntryProto::clear_stop_reasons() {
  stop_reasons_.Clear();
}
inline ::com::android::server::job::DataSetProto_PackageEntryProto_StopReasonCount* DataSetProto_PackageEntryProto::mutable_stop_reasons(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.DataSetProto.PackageEntryProto.stop_reasons)
  return stop_reasons_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto_PackageEntryProto_StopReasonCount >*
DataSetProto_PackageEntryProto::mutable_stop_reasons() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.DataSetProto.PackageEntryProto.stop_reasons)
  return &stop_reasons_;
}
inline const ::com::android::server::job::DataSetProto_PackageEntryProto_StopReasonCount& DataSetProto_PackageEntryProto::stop_reasons(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.PackageEntryProto.stop_reasons)
  return stop_reasons_.Get(index);
}
inline ::com::android::server::job::DataSetProto_PackageEntryProto_StopReasonCount* DataSetProto_PackageEntryProto::add_stop_reasons() {
  // @@protoc_insertion_point(field_add:com.android.server.job.DataSetProto.PackageEntryProto.stop_reasons)
  return stop_reasons_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto_PackageEntryProto_StopReasonCount >&
DataSetProto_PackageEntryProto::stop_reasons() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.DataSetProto.PackageEntryProto.stop_reasons)
  return stop_reasons_;
}

// -------------------------------------------------------------------

// DataSetProto

// optional int64 start_clock_time_ms = 1;
inline bool DataSetProto::has_start_clock_time_ms() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataSetProto::clear_start_clock_time_ms() {
  start_clock_time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DataSetProto::start_clock_time_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.start_clock_time_ms)
  return start_clock_time_ms_;
}
inline void DataSetProto::set_start_clock_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  start_clock_time_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.DataSetProto.start_clock_time_ms)
}

// optional int64 elapsed_time_ms = 2;
inline bool DataSetProto::has_elapsed_time_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataSetProto::clear_elapsed_time_ms() {
  elapsed_time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DataSetProto::elapsed_time_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.elapsed_time_ms)
  return elapsed_time_ms_;
}
inline void DataSetProto::set_elapsed_time_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  elapsed_time_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.DataSetProto.elapsed_time_ms)
}

// optional int64 period_ms = 3;
inline bool DataSetProto::has_period_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataSetProto::clear_period_ms() {
  period_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DataSetProto::period_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.period_ms)
  return period_ms_;
}
inline void DataSetProto::set_period_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  period_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.DataSetProto.period_ms)
}

// repeated .com.android.server.job.DataSetProto.PackageEntryProto package_entries = 4;
inline int DataSetProto::package_entries_size() const {
  return package_entries_.size();
}
inline void DataSetProto::clear_package_entries() {
  package_entries_.Clear();
}
inline ::com::android::server::job::DataSetProto_PackageEntryProto* DataSetProto::mutable_package_entries(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.DataSetProto.package_entries)
  return package_entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto_PackageEntryProto >*
DataSetProto::mutable_package_entries() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.DataSetProto.package_entries)
  return &package_entries_;
}
inline const ::com::android::server::job::DataSetProto_PackageEntryProto& DataSetProto::package_entries(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.package_entries)
  return package_entries_.Get(index);
}
inline ::com::android::server::job::DataSetProto_PackageEntryProto* DataSetProto::add_package_entries() {
  // @@protoc_insertion_point(field_add:com.android.server.job.DataSetProto.package_entries)
  return package_entries_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto_PackageEntryProto >&
DataSetProto::package_entries() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.DataSetProto.package_entries)
  return package_entries_;
}

// optional int32 max_concurrency = 5;
inline bool DataSetProto::has_max_concurrency() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataSetProto::clear_max_concurrency() {
  max_concurrency_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataSetProto::max_concurrency() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.max_concurrency)
  return max_concurrency_;
}
inline void DataSetProto::set_max_concurrency(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  max_concurrency_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.DataSetProto.max_concurrency)
}

// optional int32 max_foreground_concurrency = 6;
inline bool DataSetProto::has_max_foreground_concurrency() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DataSetProto::clear_max_foreground_concurrency() {
  max_foreground_concurrency_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataSetProto::max_foreground_concurrency() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.DataSetProto.max_foreground_concurrency)
  return max_foreground_concurrency_;
}
inline void DataSetProto::set_max_foreground_concurrency(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  max_foreground_concurrency_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.DataSetProto.max_foreground_concurrency)
}

// -------------------------------------------------------------------

// GrantedUriPermissionsDumpProto

// optional int32 flags = 1 [(.android.privacy) = {
inline bool GrantedUriPermissionsDumpProto::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GrantedUriPermissionsDumpProto::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GrantedUriPermissionsDumpProto::flags() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.GrantedUriPermissionsDumpProto.flags)
  return flags_;
}
inline void GrantedUriPermissionsDumpProto::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.GrantedUriPermissionsDumpProto.flags)
}

// optional int32 source_user_id = 2 [(.android.privacy) = {
inline bool GrantedUriPermissionsDumpProto::has_source_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GrantedUriPermissionsDumpProto::clear_source_user_id() {
  source_user_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GrantedUriPermissionsDumpProto::source_user_id() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.GrantedUriPermissionsDumpProto.source_user_id)
  return source_user_id_;
}
inline void GrantedUriPermissionsDumpProto::set_source_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  source_user_id_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.GrantedUriPermissionsDumpProto.source_user_id)
}

// optional string tag = 3;
inline bool GrantedUriPermissionsDumpProto::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GrantedUriPermissionsDumpProto::clear_tag() {
  tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GrantedUriPermissionsDumpProto::tag() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.GrantedUriPermissionsDumpProto.tag)
  return tag_.GetNoArena();
}
inline void GrantedUriPermissionsDumpProto::set_tag(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.job.GrantedUriPermissionsDumpProto.tag)
}
inline void GrantedUriPermissionsDumpProto::set_tag(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.job.GrantedUriPermissionsDumpProto.tag)
}
inline void GrantedUriPermissionsDumpProto::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.job.GrantedUriPermissionsDumpProto.tag)
}
inline void GrantedUriPermissionsDumpProto::set_tag(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.GrantedUriPermissionsDumpProto.tag)
}
inline std::string* GrantedUriPermissionsDumpProto::mutable_tag() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.job.GrantedUriPermissionsDumpProto.tag)
  return tag_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GrantedUriPermissionsDumpProto::release_tag() {
  // @@protoc_insertion_point(field_release:com.android.server.job.GrantedUriPermissionsDumpProto.tag)
  if (!has_tag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return tag_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GrantedUriPermissionsDumpProto::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tag_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.GrantedUriPermissionsDumpProto.tag)
}

// optional string permission_owner = 4;
inline bool GrantedUriPermissionsDumpProto::has_permission_owner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GrantedUriPermissionsDumpProto::clear_permission_owner() {
  permission_owner_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GrantedUriPermissionsDumpProto::permission_owner() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.GrantedUriPermissionsDumpProto.permission_owner)
  return permission_owner_.GetNoArena();
}
inline void GrantedUriPermissionsDumpProto::set_permission_owner(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  permission_owner_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.job.GrantedUriPermissionsDumpProto.permission_owner)
}
inline void GrantedUriPermissionsDumpProto::set_permission_owner(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  permission_owner_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.job.GrantedUriPermissionsDumpProto.permission_owner)
}
inline void GrantedUriPermissionsDumpProto::set_permission_owner(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  permission_owner_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.job.GrantedUriPermissionsDumpProto.permission_owner)
}
inline void GrantedUriPermissionsDumpProto::set_permission_owner(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  permission_owner_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.GrantedUriPermissionsDumpProto.permission_owner)
}
inline std::string* GrantedUriPermissionsDumpProto::mutable_permission_owner() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:com.android.server.job.GrantedUriPermissionsDumpProto.permission_owner)
  return permission_owner_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GrantedUriPermissionsDumpProto::release_permission_owner() {
  // @@protoc_insertion_point(field_release:com.android.server.job.GrantedUriPermissionsDumpProto.permission_owner)
  if (!has_permission_owner()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return permission_owner_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GrantedUriPermissionsDumpProto::set_allocated_permission_owner(std::string* permission_owner) {
  if (permission_owner != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  permission_owner_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), permission_owner);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.GrantedUriPermissionsDumpProto.permission_owner)
}

// repeated string uris = 5;
inline int GrantedUriPermissionsDumpProto::uris_size() const {
  return uris_.size();
}
inline void GrantedUriPermissionsDumpProto::clear_uris() {
  uris_.Clear();
}
inline const std::string& GrantedUriPermissionsDumpProto::uris(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.GrantedUriPermissionsDumpProto.uris)
  return uris_.Get(index);
}
inline std::string* GrantedUriPermissionsDumpProto::mutable_uris(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.GrantedUriPermissionsDumpProto.uris)
  return uris_.Mutable(index);
}
inline void GrantedUriPermissionsDumpProto::set_uris(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:com.android.server.job.GrantedUriPermissionsDumpProto.uris)
  uris_.Mutable(index)->assign(value);
}
inline void GrantedUriPermissionsDumpProto::set_uris(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:com.android.server.job.GrantedUriPermissionsDumpProto.uris)
  uris_.Mutable(index)->assign(std::move(value));
}
inline void GrantedUriPermissionsDumpProto::set_uris(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  uris_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.android.server.job.GrantedUriPermissionsDumpProto.uris)
}
inline void GrantedUriPermissionsDumpProto::set_uris(int index, const char* value, size_t size) {
  uris_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.GrantedUriPermissionsDumpProto.uris)
}
inline std::string* GrantedUriPermissionsDumpProto::add_uris() {
  // @@protoc_insertion_point(field_add_mutable:com.android.server.job.GrantedUriPermissionsDumpProto.uris)
  return uris_.Add();
}
inline void GrantedUriPermissionsDumpProto::add_uris(const std::string& value) {
  uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.GrantedUriPermissionsDumpProto.uris)
}
inline void GrantedUriPermissionsDumpProto::add_uris(std::string&& value) {
  uris_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.android.server.job.GrantedUriPermissionsDumpProto.uris)
}
inline void GrantedUriPermissionsDumpProto::add_uris(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.android.server.job.GrantedUriPermissionsDumpProto.uris)
}
inline void GrantedUriPermissionsDumpProto::add_uris(const char* value, size_t size) {
  uris_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.android.server.job.GrantedUriPermissionsDumpProto.uris)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
GrantedUriPermissionsDumpProto::uris() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.GrantedUriPermissionsDumpProto.uris)
  return uris_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
GrantedUriPermissionsDumpProto::mutable_uris() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.GrantedUriPermissionsDumpProto.uris)
  return &uris_;
}

// -------------------------------------------------------------------

// JobPackageTrackerDumpProto

// repeated .com.android.server.job.DataSetProto historical_stats = 1;
inline int JobPackageTrackerDumpProto::historical_stats_size() const {
  return historical_stats_.size();
}
inline void JobPackageTrackerDumpProto::clear_historical_stats() {
  historical_stats_.Clear();
}
inline ::com::android::server::job::DataSetProto* JobPackageTrackerDumpProto::mutable_historical_stats(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobPackageTrackerDumpProto.historical_stats)
  return historical_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto >*
JobPackageTrackerDumpProto::mutable_historical_stats() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobPackageTrackerDumpProto.historical_stats)
  return &historical_stats_;
}
inline const ::com::android::server::job::DataSetProto& JobPackageTrackerDumpProto::historical_stats(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobPackageTrackerDumpProto.historical_stats)
  return historical_stats_.Get(index);
}
inline ::com::android::server::job::DataSetProto* JobPackageTrackerDumpProto::add_historical_stats() {
  // @@protoc_insertion_point(field_add:com.android.server.job.JobPackageTrackerDumpProto.historical_stats)
  return historical_stats_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::DataSetProto >&
JobPackageTrackerDumpProto::historical_stats() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobPackageTrackerDumpProto.historical_stats)
  return historical_stats_;
}

// optional .com.android.server.job.DataSetProto current_stats = 2;
inline bool JobPackageTrackerDumpProto::has_current_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobPackageTrackerDumpProto::clear_current_stats() {
  if (current_stats_ != nullptr) current_stats_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::DataSetProto& JobPackageTrackerDumpProto::current_stats() const {
  const ::com::android::server::job::DataSetProto* p = current_stats_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobPackageTrackerDumpProto.current_stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::DataSetProto*>(
      &::com::android::server::job::_DataSetProto_default_instance_);
}
inline ::com::android::server::job::DataSetProto* JobPackageTrackerDumpProto::release_current_stats() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobPackageTrackerDumpProto.current_stats)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::DataSetProto* temp = current_stats_;
  current_stats_ = nullptr;
  return temp;
}
inline ::com::android::server::job::DataSetProto* JobPackageTrackerDumpProto::mutable_current_stats() {
  _has_bits_[0] |= 0x00000001u;
  if (current_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::DataSetProto>(GetArenaNoVirtual());
    current_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobPackageTrackerDumpProto.current_stats)
  return current_stats_;
}
inline void JobPackageTrackerDumpProto::set_allocated_current_stats(::com::android::server::job::DataSetProto* current_stats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete current_stats_;
  }
  if (current_stats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      current_stats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, current_stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  current_stats_ = current_stats;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobPackageTrackerDumpProto.current_stats)
}

// -------------------------------------------------------------------

// JobPackageHistoryProto_HistoryEvent

// optional .com.android.server.job.JobPackageHistoryProto.Event event = 1;
inline bool JobPackageHistoryProto_HistoryEvent::has_event() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobPackageHistoryProto_HistoryEvent::clear_event() {
  event_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::com::android::server::job::JobPackageHistoryProto_Event JobPackageHistoryProto_HistoryEvent::event() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobPackageHistoryProto.HistoryEvent.event)
  return static_cast< ::com::android::server::job::JobPackageHistoryProto_Event >(event_);
}
inline void JobPackageHistoryProto_HistoryEvent::set_event(::com::android::server::job::JobPackageHistoryProto_Event value) {
  assert(::com::android::server::job::JobPackageHistoryProto_Event_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  event_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobPackageHistoryProto.HistoryEvent.event)
}

// optional int64 time_since_event_ms = 2;
inline bool JobPackageHistoryProto_HistoryEvent::has_time_since_event_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobPackageHistoryProto_HistoryEvent::clear_time_since_event_ms() {
  time_since_event_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobPackageHistoryProto_HistoryEvent::time_since_event_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobPackageHistoryProto.HistoryEvent.time_since_event_ms)
  return time_since_event_ms_;
}
inline void JobPackageHistoryProto_HistoryEvent::set_time_since_event_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  time_since_event_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobPackageHistoryProto.HistoryEvent.time_since_event_ms)
}

// optional int32 uid = 3;
inline bool JobPackageHistoryProto_HistoryEvent::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobPackageHistoryProto_HistoryEvent::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobPackageHistoryProto_HistoryEvent::uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobPackageHistoryProto.HistoryEvent.uid)
  return uid_;
}
inline void JobPackageHistoryProto_HistoryEvent::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobPackageHistoryProto.HistoryEvent.uid)
}

// optional int32 job_id = 4;
inline bool JobPackageHistoryProto_HistoryEvent::has_job_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JobPackageHistoryProto_HistoryEvent::clear_job_id() {
  job_id_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobPackageHistoryProto_HistoryEvent::job_id() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobPackageHistoryProto.HistoryEvent.job_id)
  return job_id_;
}
inline void JobPackageHistoryProto_HistoryEvent::set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  job_id_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobPackageHistoryProto.HistoryEvent.job_id)
}

// optional string tag = 5;
inline bool JobPackageHistoryProto_HistoryEvent::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobPackageHistoryProto_HistoryEvent::clear_tag() {
  tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& JobPackageHistoryProto_HistoryEvent::tag() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobPackageHistoryProto.HistoryEvent.tag)
  return tag_.GetNoArena();
}
inline void JobPackageHistoryProto_HistoryEvent::set_tag(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.job.JobPackageHistoryProto.HistoryEvent.tag)
}
inline void JobPackageHistoryProto_HistoryEvent::set_tag(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.job.JobPackageHistoryProto.HistoryEvent.tag)
}
inline void JobPackageHistoryProto_HistoryEvent::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.job.JobPackageHistoryProto.HistoryEvent.tag)
}
inline void JobPackageHistoryProto_HistoryEvent::set_tag(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.JobPackageHistoryProto.HistoryEvent.tag)
}
inline std::string* JobPackageHistoryProto_HistoryEvent::mutable_tag() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobPackageHistoryProto.HistoryEvent.tag)
  return tag_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* JobPackageHistoryProto_HistoryEvent::release_tag() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobPackageHistoryProto.HistoryEvent.tag)
  if (!has_tag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return tag_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void JobPackageHistoryProto_HistoryEvent::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tag_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobPackageHistoryProto.HistoryEvent.tag)
}

// optional .android.app.job.InternalStopReasonEnum stop_reason = 6;
inline bool JobPackageHistoryProto_HistoryEvent::has_stop_reason() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JobPackageHistoryProto_HistoryEvent::clear_stop_reason() {
  stop_reason_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::android::app::job::InternalStopReasonEnum JobPackageHistoryProto_HistoryEvent::stop_reason() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobPackageHistoryProto.HistoryEvent.stop_reason)
  return static_cast< ::android::app::job::InternalStopReasonEnum >(stop_reason_);
}
inline void JobPackageHistoryProto_HistoryEvent::set_stop_reason(::android::app::job::InternalStopReasonEnum value) {
  assert(::android::app::job::InternalStopReasonEnum_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  stop_reason_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobPackageHistoryProto.HistoryEvent.stop_reason)
}

// -------------------------------------------------------------------

// JobPackageHistoryProto

// repeated .com.android.server.job.JobPackageHistoryProto.HistoryEvent history_event = 1;
inline int JobPackageHistoryProto::history_event_size() const {
  return history_event_.size();
}
inline void JobPackageHistoryProto::clear_history_event() {
  history_event_.Clear();
}
inline ::com::android::server::job::JobPackageHistoryProto_HistoryEvent* JobPackageHistoryProto::mutable_history_event(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobPackageHistoryProto.history_event)
  return history_event_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobPackageHistoryProto_HistoryEvent >*
JobPackageHistoryProto::mutable_history_event() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobPackageHistoryProto.history_event)
  return &history_event_;
}
inline const ::com::android::server::job::JobPackageHistoryProto_HistoryEvent& JobPackageHistoryProto::history_event(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobPackageHistoryProto.history_event)
  return history_event_.Get(index);
}
inline ::com::android::server::job::JobPackageHistoryProto_HistoryEvent* JobPackageHistoryProto::add_history_event() {
  // @@protoc_insertion_point(field_add:com.android.server.job.JobPackageHistoryProto.history_event)
  return history_event_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobPackageHistoryProto_HistoryEvent >&
JobPackageHistoryProto::history_event() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobPackageHistoryProto.history_event)
  return history_event_;
}

// -------------------------------------------------------------------

// JobStatusShortInfoProto

// optional int32 calling_uid = 1;
inline bool JobStatusShortInfoProto::has_calling_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobStatusShortInfoProto::clear_calling_uid() {
  calling_uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobStatusShortInfoProto::calling_uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusShortInfoProto.calling_uid)
  return calling_uid_;
}
inline void JobStatusShortInfoProto::set_calling_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  calling_uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusShortInfoProto.calling_uid)
}

// optional int32 job_id = 2;
inline bool JobStatusShortInfoProto::has_job_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobStatusShortInfoProto::clear_job_id() {
  job_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobStatusShortInfoProto::job_id() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusShortInfoProto.job_id)
  return job_id_;
}
inline void JobStatusShortInfoProto::set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  job_id_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusShortInfoProto.job_id)
}

// optional string battery_name = 3;
inline bool JobStatusShortInfoProto::has_battery_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobStatusShortInfoProto::clear_battery_name() {
  battery_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& JobStatusShortInfoProto::battery_name() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusShortInfoProto.battery_name)
  return battery_name_.GetNoArena();
}
inline void JobStatusShortInfoProto::set_battery_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  battery_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusShortInfoProto.battery_name)
}
inline void JobStatusShortInfoProto::set_battery_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  battery_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.job.JobStatusShortInfoProto.battery_name)
}
inline void JobStatusShortInfoProto::set_battery_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  battery_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.job.JobStatusShortInfoProto.battery_name)
}
inline void JobStatusShortInfoProto::set_battery_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  battery_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.JobStatusShortInfoProto.battery_name)
}
inline std::string* JobStatusShortInfoProto::mutable_battery_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusShortInfoProto.battery_name)
  return battery_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* JobStatusShortInfoProto::release_battery_name() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusShortInfoProto.battery_name)
  if (!has_battery_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return battery_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void JobStatusShortInfoProto::set_allocated_battery_name(std::string* battery_name) {
  if (battery_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  battery_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), battery_name);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusShortInfoProto.battery_name)
}

// -------------------------------------------------------------------

// JobStatusDumpProto_JobInfo_TriggerContentUri

// optional int32 flags = 1 [(.android.privacy) = {
inline bool JobStatusDumpProto_JobInfo_TriggerContentUri::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobStatusDumpProto_JobInfo_TriggerContentUri::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobStatusDumpProto_JobInfo_TriggerContentUri::flags() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri.flags)
  return flags_;
}
inline void JobStatusDumpProto_JobInfo_TriggerContentUri::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri.flags)
}

// optional string uri = 2 [(.android.privacy) = {
inline bool JobStatusDumpProto_JobInfo_TriggerContentUri::has_uri() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobStatusDumpProto_JobInfo_TriggerContentUri::clear_uri() {
  uri_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& JobStatusDumpProto_JobInfo_TriggerContentUri::uri() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri.uri)
  return uri_.GetNoArena();
}
inline void JobStatusDumpProto_JobInfo_TriggerContentUri::set_uri(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  uri_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri.uri)
}
inline void JobStatusDumpProto_JobInfo_TriggerContentUri::set_uri(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  uri_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri.uri)
}
inline void JobStatusDumpProto_JobInfo_TriggerContentUri::set_uri(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  uri_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri.uri)
}
inline void JobStatusDumpProto_JobInfo_TriggerContentUri::set_uri(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  uri_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri.uri)
}
inline std::string* JobStatusDumpProto_JobInfo_TriggerContentUri::mutable_uri() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri.uri)
  return uri_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* JobStatusDumpProto_JobInfo_TriggerContentUri::release_uri() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri.uri)
  if (!has_uri()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return uri_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void JobStatusDumpProto_JobInfo_TriggerContentUri::set_allocated_uri(std::string* uri) {
  if (uri != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  uri_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri.uri)
}

// -------------------------------------------------------------------

// JobStatusDumpProto_JobInfo_Backoff

// optional .com.android.server.job.JobStatusDumpProto.JobInfo.Backoff.Policy policy = 1;
inline bool JobStatusDumpProto_JobInfo_Backoff::has_policy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobStatusDumpProto_JobInfo_Backoff::clear_policy() {
  policy_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff_Policy JobStatusDumpProto_JobInfo_Backoff::policy() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.Backoff.policy)
  return static_cast< ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff_Policy >(policy_);
}
inline void JobStatusDumpProto_JobInfo_Backoff::set_policy(::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff_Policy value) {
  assert(::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff_Policy_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  policy_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.Backoff.policy)
}

// optional int64 initial_backoff_ms = 2;
inline bool JobStatusDumpProto_JobInfo_Backoff::has_initial_backoff_ms() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobStatusDumpProto_JobInfo_Backoff::clear_initial_backoff_ms() {
  initial_backoff_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto_JobInfo_Backoff::initial_backoff_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.Backoff.initial_backoff_ms)
  return initial_backoff_ms_;
}
inline void JobStatusDumpProto_JobInfo_Backoff::set_initial_backoff_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  initial_backoff_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.Backoff.initial_backoff_ms)
}

// -------------------------------------------------------------------

// JobStatusDumpProto_JobInfo

// optional .android.content.ComponentNameProto service = 1;
inline bool JobStatusDumpProto_JobInfo::has_service() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::android::content::ComponentNameProto& JobStatusDumpProto_JobInfo::service() const {
  const ::android::content::ComponentNameProto* p = service_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.service)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::content::ComponentNameProto*>(
      &::android::content::_ComponentNameProto_default_instance_);
}
inline ::android::content::ComponentNameProto* JobStatusDumpProto_JobInfo::release_service() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.JobInfo.service)
  _has_bits_[0] &= ~0x00000001u;
  ::android::content::ComponentNameProto* temp = service_;
  service_ = nullptr;
  return temp;
}
inline ::android::content::ComponentNameProto* JobStatusDumpProto_JobInfo::mutable_service() {
  _has_bits_[0] |= 0x00000001u;
  if (service_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::content::ComponentNameProto>(GetArenaNoVirtual());
    service_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.JobInfo.service)
  return service_;
}
inline void JobStatusDumpProto_JobInfo::set_allocated_service(::android::content::ComponentNameProto* service) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(service_);
  }
  if (service) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      service = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, service, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  service_ = service;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.JobInfo.service)
}

// optional bool is_periodic = 2;
inline bool JobStatusDumpProto_JobInfo::has_is_periodic() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_is_periodic() {
  is_periodic_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool JobStatusDumpProto_JobInfo::is_periodic() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.is_periodic)
  return is_periodic_;
}
inline void JobStatusDumpProto_JobInfo::set_is_periodic(bool value) {
  _has_bits_[0] |= 0x00000400u;
  is_periodic_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.is_periodic)
}

// optional int64 period_interval_ms = 3;
inline bool JobStatusDumpProto_JobInfo::has_period_interval_ms() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_period_interval_ms() {
  period_interval_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto_JobInfo::period_interval_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.period_interval_ms)
  return period_interval_ms_;
}
inline void JobStatusDumpProto_JobInfo::set_period_interval_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  period_interval_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.period_interval_ms)
}

// optional int64 period_flex_ms = 4;
inline bool JobStatusDumpProto_JobInfo::has_period_flex_ms() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_period_flex_ms() {
  period_flex_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto_JobInfo::period_flex_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.period_flex_ms)
  return period_flex_ms_;
}
inline void JobStatusDumpProto_JobInfo::set_period_flex_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  period_flex_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.period_flex_ms)
}

// optional bool is_persisted = 5;
inline bool JobStatusDumpProto_JobInfo::has_is_persisted() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_is_persisted() {
  is_persisted_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool JobStatusDumpProto_JobInfo::is_persisted() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.is_persisted)
  return is_persisted_;
}
inline void JobStatusDumpProto_JobInfo::set_is_persisted(bool value) {
  _has_bits_[0] |= 0x00000800u;
  is_persisted_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.is_persisted)
}

// optional sint32 priority = 6;
inline bool JobStatusDumpProto_JobInfo::has_priority() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_priority() {
  priority_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobStatusDumpProto_JobInfo::priority() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.priority)
  return priority_;
}
inline void JobStatusDumpProto_JobInfo::set_priority(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  priority_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.priority)
}

// optional int32 flags = 7;
inline bool JobStatusDumpProto_JobInfo::has_flags() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_flags() {
  flags_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobStatusDumpProto_JobInfo::flags() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.flags)
  return flags_;
}
inline void JobStatusDumpProto_JobInfo::set_flags(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00010000u;
  flags_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.flags)
}

// optional bool requires_charging = 8;
inline bool JobStatusDumpProto_JobInfo::has_requires_charging() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_requires_charging() {
  requires_charging_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool JobStatusDumpProto_JobInfo::requires_charging() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.requires_charging)
  return requires_charging_;
}
inline void JobStatusDumpProto_JobInfo::set_requires_charging(bool value) {
  _has_bits_[0] |= 0x00001000u;
  requires_charging_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.requires_charging)
}

// optional bool requires_battery_not_low = 9;
inline bool JobStatusDumpProto_JobInfo::has_requires_battery_not_low() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_requires_battery_not_low() {
  requires_battery_not_low_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool JobStatusDumpProto_JobInfo::requires_battery_not_low() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.requires_battery_not_low)
  return requires_battery_not_low_;
}
inline void JobStatusDumpProto_JobInfo::set_requires_battery_not_low(bool value) {
  _has_bits_[0] |= 0x00002000u;
  requires_battery_not_low_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.requires_battery_not_low)
}

// optional bool requires_device_idle = 10;
inline bool JobStatusDumpProto_JobInfo::has_requires_device_idle() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_requires_device_idle() {
  requires_device_idle_ = false;
  _has_bits_[0] &= ~0x00020000u;
}
inline bool JobStatusDumpProto_JobInfo::requires_device_idle() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.requires_device_idle)
  return requires_device_idle_;
}
inline void JobStatusDumpProto_JobInfo::set_requires_device_idle(bool value) {
  _has_bits_[0] |= 0x00020000u;
  requires_device_idle_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.requires_device_idle)
}

// repeated .com.android.server.job.JobStatusDumpProto.JobInfo.TriggerContentUri trigger_content_uris = 11;
inline int JobStatusDumpProto_JobInfo::trigger_content_uris_size() const {
  return trigger_content_uris_.size();
}
inline void JobStatusDumpProto_JobInfo::clear_trigger_content_uris() {
  trigger_content_uris_.Clear();
}
inline ::com::android::server::job::JobStatusDumpProto_JobInfo_TriggerContentUri* JobStatusDumpProto_JobInfo::mutable_trigger_content_uris(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.JobInfo.trigger_content_uris)
  return trigger_content_uris_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobInfo_TriggerContentUri >*
JobStatusDumpProto_JobInfo::mutable_trigger_content_uris() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobStatusDumpProto.JobInfo.trigger_content_uris)
  return &trigger_content_uris_;
}
inline const ::com::android::server::job::JobStatusDumpProto_JobInfo_TriggerContentUri& JobStatusDumpProto_JobInfo::trigger_content_uris(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.trigger_content_uris)
  return trigger_content_uris_.Get(index);
}
inline ::com::android::server::job::JobStatusDumpProto_JobInfo_TriggerContentUri* JobStatusDumpProto_JobInfo::add_trigger_content_uris() {
  // @@protoc_insertion_point(field_add:com.android.server.job.JobStatusDumpProto.JobInfo.trigger_content_uris)
  return trigger_content_uris_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobInfo_TriggerContentUri >&
JobStatusDumpProto_JobInfo::trigger_content_uris() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobStatusDumpProto.JobInfo.trigger_content_uris)
  return trigger_content_uris_;
}

// optional int64 trigger_content_update_delay_ms = 12;
inline bool JobStatusDumpProto_JobInfo::has_trigger_content_update_delay_ms() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_trigger_content_update_delay_ms() {
  trigger_content_update_delay_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto_JobInfo::trigger_content_update_delay_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.trigger_content_update_delay_ms)
  return trigger_content_update_delay_ms_;
}
inline void JobStatusDumpProto_JobInfo::set_trigger_content_update_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00004000u;
  trigger_content_update_delay_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.trigger_content_update_delay_ms)
}

// optional int64 trigger_content_max_delay_ms = 13;
inline bool JobStatusDumpProto_JobInfo::has_trigger_content_max_delay_ms() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_trigger_content_max_delay_ms() {
  trigger_content_max_delay_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto_JobInfo::trigger_content_max_delay_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.trigger_content_max_delay_ms)
  return trigger_content_max_delay_ms_;
}
inline void JobStatusDumpProto_JobInfo::set_trigger_content_max_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00008000u;
  trigger_content_max_delay_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.trigger_content_max_delay_ms)
}

// optional .android.os.PersistableBundleProto extras = 14;
inline bool JobStatusDumpProto_JobInfo::has_extras() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::android::os::PersistableBundleProto& JobStatusDumpProto_JobInfo::extras() const {
  const ::android::os::PersistableBundleProto* p = extras_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.extras)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::PersistableBundleProto*>(
      &::android::os::_PersistableBundleProto_default_instance_);
}
inline ::android::os::PersistableBundleProto* JobStatusDumpProto_JobInfo::release_extras() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.JobInfo.extras)
  _has_bits_[0] &= ~0x00000002u;
  ::android::os::PersistableBundleProto* temp = extras_;
  extras_ = nullptr;
  return temp;
}
inline ::android::os::PersistableBundleProto* JobStatusDumpProto_JobInfo::mutable_extras() {
  _has_bits_[0] |= 0x00000002u;
  if (extras_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::PersistableBundleProto>(GetArenaNoVirtual());
    extras_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.JobInfo.extras)
  return extras_;
}
inline void JobStatusDumpProto_JobInfo::set_allocated_extras(::android::os::PersistableBundleProto* extras) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(extras_);
  }
  if (extras) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      extras = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, extras, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  extras_ = extras;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.JobInfo.extras)
}

// optional .android.os.BundleProto transient_extras = 15;
inline bool JobStatusDumpProto_JobInfo::has_transient_extras() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline const ::android::os::BundleProto& JobStatusDumpProto_JobInfo::transient_extras() const {
  const ::android::os::BundleProto* p = transient_extras_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.transient_extras)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::os::BundleProto*>(
      &::android::os::_BundleProto_default_instance_);
}
inline ::android::os::BundleProto* JobStatusDumpProto_JobInfo::release_transient_extras() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.JobInfo.transient_extras)
  _has_bits_[0] &= ~0x00000004u;
  ::android::os::BundleProto* temp = transient_extras_;
  transient_extras_ = nullptr;
  return temp;
}
inline ::android::os::BundleProto* JobStatusDumpProto_JobInfo::mutable_transient_extras() {
  _has_bits_[0] |= 0x00000004u;
  if (transient_extras_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::os::BundleProto>(GetArenaNoVirtual());
    transient_extras_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.JobInfo.transient_extras)
  return transient_extras_;
}
inline void JobStatusDumpProto_JobInfo::set_allocated_transient_extras(::android::os::BundleProto* transient_extras) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(transient_extras_);
  }
  if (transient_extras) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      transient_extras = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transient_extras, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  transient_extras_ = transient_extras;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.JobInfo.transient_extras)
}

// optional .android.content.ClipDataProto clip_data = 16;
inline bool JobStatusDumpProto_JobInfo::has_clip_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline const ::android::content::ClipDataProto& JobStatusDumpProto_JobInfo::clip_data() const {
  const ::android::content::ClipDataProto* p = clip_data_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.clip_data)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::content::ClipDataProto*>(
      &::android::content::_ClipDataProto_default_instance_);
}
inline ::android::content::ClipDataProto* JobStatusDumpProto_JobInfo::release_clip_data() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.JobInfo.clip_data)
  _has_bits_[0] &= ~0x00000008u;
  ::android::content::ClipDataProto* temp = clip_data_;
  clip_data_ = nullptr;
  return temp;
}
inline ::android::content::ClipDataProto* JobStatusDumpProto_JobInfo::mutable_clip_data() {
  _has_bits_[0] |= 0x00000008u;
  if (clip_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::content::ClipDataProto>(GetArenaNoVirtual());
    clip_data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.JobInfo.clip_data)
  return clip_data_;
}
inline void JobStatusDumpProto_JobInfo::set_allocated_clip_data(::android::content::ClipDataProto* clip_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(clip_data_);
  }
  if (clip_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      clip_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, clip_data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  clip_data_ = clip_data;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.JobInfo.clip_data)
}

// optional .com.android.server.job.GrantedUriPermissionsDumpProto granted_uri_permissions = 17;
inline bool JobStatusDumpProto_JobInfo::has_granted_uri_permissions() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_granted_uri_permissions() {
  if (granted_uri_permissions_ != nullptr) granted_uri_permissions_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::com::android::server::job::GrantedUriPermissionsDumpProto& JobStatusDumpProto_JobInfo::granted_uri_permissions() const {
  const ::com::android::server::job::GrantedUriPermissionsDumpProto* p = granted_uri_permissions_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.granted_uri_permissions)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::GrantedUriPermissionsDumpProto*>(
      &::com::android::server::job::_GrantedUriPermissionsDumpProto_default_instance_);
}
inline ::com::android::server::job::GrantedUriPermissionsDumpProto* JobStatusDumpProto_JobInfo::release_granted_uri_permissions() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.JobInfo.granted_uri_permissions)
  _has_bits_[0] &= ~0x00000010u;
  ::com::android::server::job::GrantedUriPermissionsDumpProto* temp = granted_uri_permissions_;
  granted_uri_permissions_ = nullptr;
  return temp;
}
inline ::com::android::server::job::GrantedUriPermissionsDumpProto* JobStatusDumpProto_JobInfo::mutable_granted_uri_permissions() {
  _has_bits_[0] |= 0x00000010u;
  if (granted_uri_permissions_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::GrantedUriPermissionsDumpProto>(GetArenaNoVirtual());
    granted_uri_permissions_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.JobInfo.granted_uri_permissions)
  return granted_uri_permissions_;
}
inline void JobStatusDumpProto_JobInfo::set_allocated_granted_uri_permissions(::com::android::server::job::GrantedUriPermissionsDumpProto* granted_uri_permissions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete granted_uri_permissions_;
  }
  if (granted_uri_permissions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      granted_uri_permissions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, granted_uri_permissions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  granted_uri_permissions_ = granted_uri_permissions;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.JobInfo.granted_uri_permissions)
}

// optional .android.net.NetworkRequestProto required_network = 18;
inline bool JobStatusDumpProto_JobInfo::has_required_network() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline const ::android::net::NetworkRequestProto& JobStatusDumpProto_JobInfo::required_network() const {
  const ::android::net::NetworkRequestProto* p = required_network_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.required_network)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::net::NetworkRequestProto*>(
      &::android::net::_NetworkRequestProto_default_instance_);
}
inline ::android::net::NetworkRequestProto* JobStatusDumpProto_JobInfo::release_required_network() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.JobInfo.required_network)
  _has_bits_[0] &= ~0x00000020u;
  ::android::net::NetworkRequestProto* temp = required_network_;
  required_network_ = nullptr;
  return temp;
}
inline ::android::net::NetworkRequestProto* JobStatusDumpProto_JobInfo::mutable_required_network() {
  _has_bits_[0] |= 0x00000020u;
  if (required_network_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::net::NetworkRequestProto>(GetArenaNoVirtual());
    required_network_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.JobInfo.required_network)
  return required_network_;
}
inline void JobStatusDumpProto_JobInfo::set_allocated_required_network(::android::net::NetworkRequestProto* required_network) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(required_network_);
  }
  if (required_network) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      required_network = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, required_network, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  required_network_ = required_network;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.JobInfo.required_network)
}

// optional int64 total_network_download_bytes = 25;
inline bool JobStatusDumpProto_JobInfo::has_total_network_download_bytes() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_total_network_download_bytes() {
  total_network_download_bytes_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto_JobInfo::total_network_download_bytes() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.total_network_download_bytes)
  return total_network_download_bytes_;
}
inline void JobStatusDumpProto_JobInfo::set_total_network_download_bytes(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00400000u;
  total_network_download_bytes_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.total_network_download_bytes)
}

// optional int64 total_network_upload_bytes = 26;
inline bool JobStatusDumpProto_JobInfo::has_total_network_upload_bytes() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_total_network_upload_bytes() {
  total_network_upload_bytes_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto_JobInfo::total_network_upload_bytes() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.total_network_upload_bytes)
  return total_network_upload_bytes_;
}
inline void JobStatusDumpProto_JobInfo::set_total_network_upload_bytes(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00800000u;
  total_network_upload_bytes_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.total_network_upload_bytes)
}

// optional int64 min_latency_ms = 20;
inline bool JobStatusDumpProto_JobInfo::has_min_latency_ms() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_min_latency_ms() {
  min_latency_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto_JobInfo::min_latency_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.min_latency_ms)
  return min_latency_ms_;
}
inline void JobStatusDumpProto_JobInfo::set_min_latency_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00100000u;
  min_latency_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.min_latency_ms)
}

// optional int64 max_execution_delay_ms = 21;
inline bool JobStatusDumpProto_JobInfo::has_max_execution_delay_ms() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_max_execution_delay_ms() {
  max_execution_delay_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto_JobInfo::max_execution_delay_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.max_execution_delay_ms)
  return max_execution_delay_ms_;
}
inline void JobStatusDumpProto_JobInfo::set_max_execution_delay_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00200000u;
  max_execution_delay_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.max_execution_delay_ms)
}

// optional .com.android.server.job.JobStatusDumpProto.JobInfo.Backoff backoff_policy = 22;
inline bool JobStatusDumpProto_JobInfo::has_backoff_policy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_backoff_policy() {
  if (backoff_policy_ != nullptr) backoff_policy_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff& JobStatusDumpProto_JobInfo::backoff_policy() const {
  const ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff* p = backoff_policy_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.backoff_policy)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff*>(
      &::com::android::server::job::_JobStatusDumpProto_JobInfo_Backoff_default_instance_);
}
inline ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff* JobStatusDumpProto_JobInfo::release_backoff_policy() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.JobInfo.backoff_policy)
  _has_bits_[0] &= ~0x00000040u;
  ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff* temp = backoff_policy_;
  backoff_policy_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff* JobStatusDumpProto_JobInfo::mutable_backoff_policy() {
  _has_bits_[0] |= 0x00000040u;
  if (backoff_policy_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff>(GetArenaNoVirtual());
    backoff_policy_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.JobInfo.backoff_policy)
  return backoff_policy_;
}
inline void JobStatusDumpProto_JobInfo::set_allocated_backoff_policy(::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff* backoff_policy) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete backoff_policy_;
  }
  if (backoff_policy) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      backoff_policy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, backoff_policy, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  backoff_policy_ = backoff_policy;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.JobInfo.backoff_policy)
}

// optional bool has_early_constraint = 23;
inline bool JobStatusDumpProto_JobInfo::has_has_early_constraint() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_has_early_constraint() {
  has_early_constraint_ = false;
  _has_bits_[0] &= ~0x00040000u;
}
inline bool JobStatusDumpProto_JobInfo::has_early_constraint() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.has_early_constraint)
  return has_early_constraint_;
}
inline void JobStatusDumpProto_JobInfo::set_has_early_constraint(bool value) {
  _has_bits_[0] |= 0x00040000u;
  has_early_constraint_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.has_early_constraint)
}

// optional bool has_late_constraint = 24;
inline bool JobStatusDumpProto_JobInfo::has_has_late_constraint() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void JobStatusDumpProto_JobInfo::clear_has_late_constraint() {
  has_late_constraint_ = false;
  _has_bits_[0] &= ~0x00080000u;
}
inline bool JobStatusDumpProto_JobInfo::has_late_constraint() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobInfo.has_late_constraint)
  return has_late_constraint_;
}
inline void JobStatusDumpProto_JobInfo::set_has_late_constraint(bool value) {
  _has_bits_[0] |= 0x00080000u;
  has_late_constraint_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobInfo.has_late_constraint)
}

// -------------------------------------------------------------------

// JobStatusDumpProto_ImplicitConstraints

// optional bool is_not_dozing = 1;
inline bool JobStatusDumpProto_ImplicitConstraints::has_is_not_dozing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobStatusDumpProto_ImplicitConstraints::clear_is_not_dozing() {
  is_not_dozing_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool JobStatusDumpProto_ImplicitConstraints::is_not_dozing() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.ImplicitConstraints.is_not_dozing)
  return is_not_dozing_;
}
inline void JobStatusDumpProto_ImplicitConstraints::set_is_not_dozing(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_not_dozing_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.ImplicitConstraints.is_not_dozing)
}

// optional bool is_not_restricted_in_bg = 2;
inline bool JobStatusDumpProto_ImplicitConstraints::has_is_not_restricted_in_bg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobStatusDumpProto_ImplicitConstraints::clear_is_not_restricted_in_bg() {
  is_not_restricted_in_bg_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool JobStatusDumpProto_ImplicitConstraints::is_not_restricted_in_bg() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.ImplicitConstraints.is_not_restricted_in_bg)
  return is_not_restricted_in_bg_;
}
inline void JobStatusDumpProto_ImplicitConstraints::set_is_not_restricted_in_bg(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_not_restricted_in_bg_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.ImplicitConstraints.is_not_restricted_in_bg)
}

// optional bool is_dynamic_satisfied = 3;
inline bool JobStatusDumpProto_ImplicitConstraints::has_is_dynamic_satisfied() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobStatusDumpProto_ImplicitConstraints::clear_is_dynamic_satisfied() {
  is_dynamic_satisfied_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool JobStatusDumpProto_ImplicitConstraints::is_dynamic_satisfied() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.ImplicitConstraints.is_dynamic_satisfied)
  return is_dynamic_satisfied_;
}
inline void JobStatusDumpProto_ImplicitConstraints::set_is_dynamic_satisfied(bool value) {
  _has_bits_[0] |= 0x00000004u;
  is_dynamic_satisfied_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.ImplicitConstraints.is_dynamic_satisfied)
}

// -------------------------------------------------------------------

// JobStatusDumpProto_JobWorkItem

// optional int32 work_id = 1;
inline bool JobStatusDumpProto_JobWorkItem::has_work_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobStatusDumpProto_JobWorkItem::clear_work_id() {
  work_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobStatusDumpProto_JobWorkItem::work_id() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobWorkItem.work_id)
  return work_id_;
}
inline void JobStatusDumpProto_JobWorkItem::set_work_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  work_id_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobWorkItem.work_id)
}

// optional int32 delivery_count = 2;
inline bool JobStatusDumpProto_JobWorkItem::has_delivery_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobStatusDumpProto_JobWorkItem::clear_delivery_count() {
  delivery_count_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobStatusDumpProto_JobWorkItem::delivery_count() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobWorkItem.delivery_count)
  return delivery_count_;
}
inline void JobStatusDumpProto_JobWorkItem::set_delivery_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  delivery_count_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.JobWorkItem.delivery_count)
}

// optional .android.content.IntentProto intent = 3;
inline bool JobStatusDumpProto_JobWorkItem::has_intent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::android::content::IntentProto& JobStatusDumpProto_JobWorkItem::intent() const {
  const ::android::content::IntentProto* p = intent_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobWorkItem.intent)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::content::IntentProto*>(
      &::android::content::_IntentProto_default_instance_);
}
inline ::android::content::IntentProto* JobStatusDumpProto_JobWorkItem::release_intent() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.JobWorkItem.intent)
  _has_bits_[0] &= ~0x00000001u;
  ::android::content::IntentProto* temp = intent_;
  intent_ = nullptr;
  return temp;
}
inline ::android::content::IntentProto* JobStatusDumpProto_JobWorkItem::mutable_intent() {
  _has_bits_[0] |= 0x00000001u;
  if (intent_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::content::IntentProto>(GetArenaNoVirtual());
    intent_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.JobWorkItem.intent)
  return intent_;
}
inline void JobStatusDumpProto_JobWorkItem::set_allocated_intent(::android::content::IntentProto* intent) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(intent_);
  }
  if (intent) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      intent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, intent, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  intent_ = intent;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.JobWorkItem.intent)
}

// optional .com.android.server.job.GrantedUriPermissionsDumpProto uri_grants = 4;
inline bool JobStatusDumpProto_JobWorkItem::has_uri_grants() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobStatusDumpProto_JobWorkItem::clear_uri_grants() {
  if (uri_grants_ != nullptr) uri_grants_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::job::GrantedUriPermissionsDumpProto& JobStatusDumpProto_JobWorkItem::uri_grants() const {
  const ::com::android::server::job::GrantedUriPermissionsDumpProto* p = uri_grants_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.JobWorkItem.uri_grants)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::GrantedUriPermissionsDumpProto*>(
      &::com::android::server::job::_GrantedUriPermissionsDumpProto_default_instance_);
}
inline ::com::android::server::job::GrantedUriPermissionsDumpProto* JobStatusDumpProto_JobWorkItem::release_uri_grants() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.JobWorkItem.uri_grants)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::job::GrantedUriPermissionsDumpProto* temp = uri_grants_;
  uri_grants_ = nullptr;
  return temp;
}
inline ::com::android::server::job::GrantedUriPermissionsDumpProto* JobStatusDumpProto_JobWorkItem::mutable_uri_grants() {
  _has_bits_[0] |= 0x00000002u;
  if (uri_grants_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::GrantedUriPermissionsDumpProto>(GetArenaNoVirtual());
    uri_grants_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.JobWorkItem.uri_grants)
  return uri_grants_;
}
inline void JobStatusDumpProto_JobWorkItem::set_allocated_uri_grants(::com::android::server::job::GrantedUriPermissionsDumpProto* uri_grants) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete uri_grants_;
  }
  if (uri_grants) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      uri_grants = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uri_grants, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  uri_grants_ = uri_grants;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.JobWorkItem.uri_grants)
}

// -------------------------------------------------------------------

// JobStatusDumpProto

// optional int32 calling_uid = 1;
inline bool JobStatusDumpProto::has_calling_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JobStatusDumpProto::clear_calling_uid() {
  calling_uid_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobStatusDumpProto::calling_uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.calling_uid)
  return calling_uid_;
}
inline void JobStatusDumpProto::set_calling_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  calling_uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.calling_uid)
}

// optional string tag = 2;
inline bool JobStatusDumpProto::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobStatusDumpProto::clear_tag() {
  tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& JobStatusDumpProto::tag() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.tag)
  return tag_.GetNoArena();
}
inline void JobStatusDumpProto::set_tag(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.tag)
}
inline void JobStatusDumpProto::set_tag(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.job.JobStatusDumpProto.tag)
}
inline void JobStatusDumpProto::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.job.JobStatusDumpProto.tag)
}
inline void JobStatusDumpProto::set_tag(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.JobStatusDumpProto.tag)
}
inline std::string* JobStatusDumpProto::mutable_tag() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.tag)
  return tag_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* JobStatusDumpProto::release_tag() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.tag)
  if (!has_tag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return tag_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void JobStatusDumpProto::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tag_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.tag)
}

// optional int32 source_uid = 3;
inline bool JobStatusDumpProto::has_source_uid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JobStatusDumpProto::clear_source_uid() {
  source_uid_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobStatusDumpProto::source_uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.source_uid)
  return source_uid_;
}
inline void JobStatusDumpProto::set_source_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  source_uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.source_uid)
}

// optional int32 source_user_id = 4;
inline bool JobStatusDumpProto::has_source_user_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JobStatusDumpProto::clear_source_user_id() {
  source_user_id_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobStatusDumpProto::source_user_id() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.source_user_id)
  return source_user_id_;
}
inline void JobStatusDumpProto::set_source_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  source_user_id_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.source_user_id)
}

// optional string source_package_name = 5;
inline bool JobStatusDumpProto::has_source_package_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobStatusDumpProto::clear_source_package_name() {
  source_package_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& JobStatusDumpProto::source_package_name() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.source_package_name)
  return source_package_name_.GetNoArena();
}
inline void JobStatusDumpProto::set_source_package_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  source_package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.source_package_name)
}
inline void JobStatusDumpProto::set_source_package_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  source_package_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.server.job.JobStatusDumpProto.source_package_name)
}
inline void JobStatusDumpProto::set_source_package_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  source_package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.server.job.JobStatusDumpProto.source_package_name)
}
inline void JobStatusDumpProto::set_source_package_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  source_package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.JobStatusDumpProto.source_package_name)
}
inline std::string* JobStatusDumpProto::mutable_source_package_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.source_package_name)
  return source_package_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* JobStatusDumpProto::release_source_package_name() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.source_package_name)
  if (!has_source_package_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return source_package_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void JobStatusDumpProto::set_allocated_source_package_name(std::string* source_package_name) {
  if (source_package_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  source_package_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), source_package_name);
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.source_package_name)
}

// optional .com.android.server.job.JobStatusDumpProto.JobInfo job_info = 6;
inline bool JobStatusDumpProto::has_job_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobStatusDumpProto::clear_job_info() {
  if (job_info_ != nullptr) job_info_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::com::android::server::job::JobStatusDumpProto_JobInfo& JobStatusDumpProto::job_info() const {
  const ::com::android::server::job::JobStatusDumpProto_JobInfo* p = job_info_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.job_info)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusDumpProto_JobInfo*>(
      &::com::android::server::job::_JobStatusDumpProto_JobInfo_default_instance_);
}
inline ::com::android::server::job::JobStatusDumpProto_JobInfo* JobStatusDumpProto::release_job_info() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.job_info)
  _has_bits_[0] &= ~0x00000004u;
  ::com::android::server::job::JobStatusDumpProto_JobInfo* temp = job_info_;
  job_info_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusDumpProto_JobInfo* JobStatusDumpProto::mutable_job_info() {
  _has_bits_[0] |= 0x00000004u;
  if (job_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusDumpProto_JobInfo>(GetArenaNoVirtual());
    job_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.job_info)
  return job_info_;
}
inline void JobStatusDumpProto::set_allocated_job_info(::com::android::server::job::JobStatusDumpProto_JobInfo* job_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete job_info_;
  }
  if (job_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      job_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, job_info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  job_info_ = job_info;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.job_info)
}

// repeated .com.android.server.job.ConstraintEnum required_constraints = 7;
inline int JobStatusDumpProto::required_constraints_size() const {
  return required_constraints_.size();
}
inline void JobStatusDumpProto::clear_required_constraints() {
  required_constraints_.Clear();
}
inline ::com::android::server::job::ConstraintEnum JobStatusDumpProto::required_constraints(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.required_constraints)
  return static_cast< ::com::android::server::job::ConstraintEnum >(required_constraints_.Get(index));
}
inline void JobStatusDumpProto::set_required_constraints(int index, ::com::android::server::job::ConstraintEnum value) {
  assert(::com::android::server::job::ConstraintEnum_IsValid(value));
  required_constraints_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.required_constraints)
}
inline void JobStatusDumpProto::add_required_constraints(::com::android::server::job::ConstraintEnum value) {
  assert(::com::android::server::job::ConstraintEnum_IsValid(value));
  required_constraints_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.JobStatusDumpProto.required_constraints)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
JobStatusDumpProto::required_constraints() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobStatusDumpProto.required_constraints)
  return required_constraints_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
JobStatusDumpProto::mutable_required_constraints() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobStatusDumpProto.required_constraints)
  return &required_constraints_;
}

// repeated .com.android.server.job.ConstraintEnum dynamic_constraints = 31;
inline int JobStatusDumpProto::dynamic_constraints_size() const {
  return dynamic_constraints_.size();
}
inline void JobStatusDumpProto::clear_dynamic_constraints() {
  dynamic_constraints_.Clear();
}
inline ::com::android::server::job::ConstraintEnum JobStatusDumpProto::dynamic_constraints(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.dynamic_constraints)
  return static_cast< ::com::android::server::job::ConstraintEnum >(dynamic_constraints_.Get(index));
}
inline void JobStatusDumpProto::set_dynamic_constraints(int index, ::com::android::server::job::ConstraintEnum value) {
  assert(::com::android::server::job::ConstraintEnum_IsValid(value));
  dynamic_constraints_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.dynamic_constraints)
}
inline void JobStatusDumpProto::add_dynamic_constraints(::com::android::server::job::ConstraintEnum value) {
  assert(::com::android::server::job::ConstraintEnum_IsValid(value));
  dynamic_constraints_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.JobStatusDumpProto.dynamic_constraints)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
JobStatusDumpProto::dynamic_constraints() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobStatusDumpProto.dynamic_constraints)
  return dynamic_constraints_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
JobStatusDumpProto::mutable_dynamic_constraints() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobStatusDumpProto.dynamic_constraints)
  return &dynamic_constraints_;
}

// repeated .com.android.server.job.ConstraintEnum satisfied_constraints = 8;
inline int JobStatusDumpProto::satisfied_constraints_size() const {
  return satisfied_constraints_.size();
}
inline void JobStatusDumpProto::clear_satisfied_constraints() {
  satisfied_constraints_.Clear();
}
inline ::com::android::server::job::ConstraintEnum JobStatusDumpProto::satisfied_constraints(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.satisfied_constraints)
  return static_cast< ::com::android::server::job::ConstraintEnum >(satisfied_constraints_.Get(index));
}
inline void JobStatusDumpProto::set_satisfied_constraints(int index, ::com::android::server::job::ConstraintEnum value) {
  assert(::com::android::server::job::ConstraintEnum_IsValid(value));
  satisfied_constraints_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.satisfied_constraints)
}
inline void JobStatusDumpProto::add_satisfied_constraints(::com::android::server::job::ConstraintEnum value) {
  assert(::com::android::server::job::ConstraintEnum_IsValid(value));
  satisfied_constraints_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.JobStatusDumpProto.satisfied_constraints)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
JobStatusDumpProto::satisfied_constraints() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobStatusDumpProto.satisfied_constraints)
  return satisfied_constraints_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
JobStatusDumpProto::mutable_satisfied_constraints() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobStatusDumpProto.satisfied_constraints)
  return &satisfied_constraints_;
}

// repeated .com.android.server.job.ConstraintEnum unsatisfied_constraints = 9;
inline int JobStatusDumpProto::unsatisfied_constraints_size() const {
  return unsatisfied_constraints_.size();
}
inline void JobStatusDumpProto::clear_unsatisfied_constraints() {
  unsatisfied_constraints_.Clear();
}
inline ::com::android::server::job::ConstraintEnum JobStatusDumpProto::unsatisfied_constraints(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.unsatisfied_constraints)
  return static_cast< ::com::android::server::job::ConstraintEnum >(unsatisfied_constraints_.Get(index));
}
inline void JobStatusDumpProto::set_unsatisfied_constraints(int index, ::com::android::server::job::ConstraintEnum value) {
  assert(::com::android::server::job::ConstraintEnum_IsValid(value));
  unsatisfied_constraints_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.unsatisfied_constraints)
}
inline void JobStatusDumpProto::add_unsatisfied_constraints(::com::android::server::job::ConstraintEnum value) {
  assert(::com::android::server::job::ConstraintEnum_IsValid(value));
  unsatisfied_constraints_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.JobStatusDumpProto.unsatisfied_constraints)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
JobStatusDumpProto::unsatisfied_constraints() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobStatusDumpProto.unsatisfied_constraints)
  return unsatisfied_constraints_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
JobStatusDumpProto::mutable_unsatisfied_constraints() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobStatusDumpProto.unsatisfied_constraints)
  return &unsatisfied_constraints_;
}

// optional bool is_doze_whitelisted = 10;
inline bool JobStatusDumpProto::has_is_doze_whitelisted() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void JobStatusDumpProto::clear_is_doze_whitelisted() {
  is_doze_whitelisted_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool JobStatusDumpProto::is_doze_whitelisted() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.is_doze_whitelisted)
  return is_doze_whitelisted_;
}
inline void JobStatusDumpProto::set_is_doze_whitelisted(bool value) {
  _has_bits_[0] |= 0x00002000u;
  is_doze_whitelisted_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.is_doze_whitelisted)
}

// optional bool is_uid_active = 26;
inline bool JobStatusDumpProto::has_is_uid_active() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void JobStatusDumpProto::clear_is_uid_active() {
  is_uid_active_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool JobStatusDumpProto::is_uid_active() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.is_uid_active)
  return is_uid_active_;
}
inline void JobStatusDumpProto::set_is_uid_active(bool value) {
  _has_bits_[0] |= 0x00004000u;
  is_uid_active_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.is_uid_active)
}

// optional .com.android.server.job.JobStatusDumpProto.ImplicitConstraints implicit_constraints = 25;
inline bool JobStatusDumpProto::has_implicit_constraints() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JobStatusDumpProto::clear_implicit_constraints() {
  if (implicit_constraints_ != nullptr) implicit_constraints_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::com::android::server::job::JobStatusDumpProto_ImplicitConstraints& JobStatusDumpProto::implicit_constraints() const {
  const ::com::android::server::job::JobStatusDumpProto_ImplicitConstraints* p = implicit_constraints_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.implicit_constraints)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStatusDumpProto_ImplicitConstraints*>(
      &::com::android::server::job::_JobStatusDumpProto_ImplicitConstraints_default_instance_);
}
inline ::com::android::server::job::JobStatusDumpProto_ImplicitConstraints* JobStatusDumpProto::release_implicit_constraints() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.implicit_constraints)
  _has_bits_[0] &= ~0x00000010u;
  ::com::android::server::job::JobStatusDumpProto_ImplicitConstraints* temp = implicit_constraints_;
  implicit_constraints_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStatusDumpProto_ImplicitConstraints* JobStatusDumpProto::mutable_implicit_constraints() {
  _has_bits_[0] |= 0x00000010u;
  if (implicit_constraints_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStatusDumpProto_ImplicitConstraints>(GetArenaNoVirtual());
    implicit_constraints_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.implicit_constraints)
  return implicit_constraints_;
}
inline void JobStatusDumpProto::set_allocated_implicit_constraints(::com::android::server::job::JobStatusDumpProto_ImplicitConstraints* implicit_constraints) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete implicit_constraints_;
  }
  if (implicit_constraints) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      implicit_constraints = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, implicit_constraints, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  implicit_constraints_ = implicit_constraints;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.implicit_constraints)
}

// repeated .com.android.server.job.JobStatusDumpProto.TrackingController tracking_controllers = 11;
inline int JobStatusDumpProto::tracking_controllers_size() const {
  return tracking_controllers_.size();
}
inline void JobStatusDumpProto::clear_tracking_controllers() {
  tracking_controllers_.Clear();
}
inline ::com::android::server::job::JobStatusDumpProto_TrackingController JobStatusDumpProto::tracking_controllers(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.tracking_controllers)
  return static_cast< ::com::android::server::job::JobStatusDumpProto_TrackingController >(tracking_controllers_.Get(index));
}
inline void JobStatusDumpProto::set_tracking_controllers(int index, ::com::android::server::job::JobStatusDumpProto_TrackingController value) {
  assert(::com::android::server::job::JobStatusDumpProto_TrackingController_IsValid(value));
  tracking_controllers_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.tracking_controllers)
}
inline void JobStatusDumpProto::add_tracking_controllers(::com::android::server::job::JobStatusDumpProto_TrackingController value) {
  assert(::com::android::server::job::JobStatusDumpProto_TrackingController_IsValid(value));
  tracking_controllers_.Add(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.JobStatusDumpProto.tracking_controllers)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
JobStatusDumpProto::tracking_controllers() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobStatusDumpProto.tracking_controllers)
  return tracking_controllers_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
JobStatusDumpProto::mutable_tracking_controllers() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobStatusDumpProto.tracking_controllers)
  return &tracking_controllers_;
}

// repeated string changed_authorities = 12 [(.android.privacy) = {
inline int JobStatusDumpProto::changed_authorities_size() const {
  return changed_authorities_.size();
}
inline void JobStatusDumpProto::clear_changed_authorities() {
  changed_authorities_.Clear();
}
inline const std::string& JobStatusDumpProto::changed_authorities(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.changed_authorities)
  return changed_authorities_.Get(index);
}
inline std::string* JobStatusDumpProto::mutable_changed_authorities(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.changed_authorities)
  return changed_authorities_.Mutable(index);
}
inline void JobStatusDumpProto::set_changed_authorities(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.changed_authorities)
  changed_authorities_.Mutable(index)->assign(value);
}
inline void JobStatusDumpProto::set_changed_authorities(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.changed_authorities)
  changed_authorities_.Mutable(index)->assign(std::move(value));
}
inline void JobStatusDumpProto::set_changed_authorities(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  changed_authorities_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.android.server.job.JobStatusDumpProto.changed_authorities)
}
inline void JobStatusDumpProto::set_changed_authorities(int index, const char* value, size_t size) {
  changed_authorities_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.JobStatusDumpProto.changed_authorities)
}
inline std::string* JobStatusDumpProto::add_changed_authorities() {
  // @@protoc_insertion_point(field_add_mutable:com.android.server.job.JobStatusDumpProto.changed_authorities)
  return changed_authorities_.Add();
}
inline void JobStatusDumpProto::add_changed_authorities(const std::string& value) {
  changed_authorities_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.JobStatusDumpProto.changed_authorities)
}
inline void JobStatusDumpProto::add_changed_authorities(std::string&& value) {
  changed_authorities_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.android.server.job.JobStatusDumpProto.changed_authorities)
}
inline void JobStatusDumpProto::add_changed_authorities(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  changed_authorities_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.android.server.job.JobStatusDumpProto.changed_authorities)
}
inline void JobStatusDumpProto::add_changed_authorities(const char* value, size_t size) {
  changed_authorities_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.android.server.job.JobStatusDumpProto.changed_authorities)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
JobStatusDumpProto::changed_authorities() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobStatusDumpProto.changed_authorities)
  return changed_authorities_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
JobStatusDumpProto::mutable_changed_authorities() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobStatusDumpProto.changed_authorities)
  return &changed_authorities_;
}

// repeated string changed_uris = 13 [(.android.privacy) = {
inline int JobStatusDumpProto::changed_uris_size() const {
  return changed_uris_.size();
}
inline void JobStatusDumpProto::clear_changed_uris() {
  changed_uris_.Clear();
}
inline const std::string& JobStatusDumpProto::changed_uris(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.changed_uris)
  return changed_uris_.Get(index);
}
inline std::string* JobStatusDumpProto::mutable_changed_uris(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.changed_uris)
  return changed_uris_.Mutable(index);
}
inline void JobStatusDumpProto::set_changed_uris(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.changed_uris)
  changed_uris_.Mutable(index)->assign(value);
}
inline void JobStatusDumpProto::set_changed_uris(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.changed_uris)
  changed_uris_.Mutable(index)->assign(std::move(value));
}
inline void JobStatusDumpProto::set_changed_uris(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  changed_uris_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.android.server.job.JobStatusDumpProto.changed_uris)
}
inline void JobStatusDumpProto::set_changed_uris(int index, const char* value, size_t size) {
  changed_uris_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.android.server.job.JobStatusDumpProto.changed_uris)
}
inline std::string* JobStatusDumpProto::add_changed_uris() {
  // @@protoc_insertion_point(field_add_mutable:com.android.server.job.JobStatusDumpProto.changed_uris)
  return changed_uris_.Add();
}
inline void JobStatusDumpProto::add_changed_uris(const std::string& value) {
  changed_uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.android.server.job.JobStatusDumpProto.changed_uris)
}
inline void JobStatusDumpProto::add_changed_uris(std::string&& value) {
  changed_uris_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.android.server.job.JobStatusDumpProto.changed_uris)
}
inline void JobStatusDumpProto::add_changed_uris(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  changed_uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.android.server.job.JobStatusDumpProto.changed_uris)
}
inline void JobStatusDumpProto::add_changed_uris(const char* value, size_t size) {
  changed_uris_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.android.server.job.JobStatusDumpProto.changed_uris)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
JobStatusDumpProto::changed_uris() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobStatusDumpProto.changed_uris)
  return changed_uris_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
JobStatusDumpProto::mutable_changed_uris() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobStatusDumpProto.changed_uris)
  return &changed_uris_;
}

// optional .android.net.NetworkProto network = 14;
inline bool JobStatusDumpProto::has_network() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline const ::android::net::NetworkProto& JobStatusDumpProto::network() const {
  const ::android::net::NetworkProto* p = network_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.network)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::net::NetworkProto*>(
      &::android::net::_NetworkProto_default_instance_);
}
inline ::android::net::NetworkProto* JobStatusDumpProto::release_network() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStatusDumpProto.network)
  _has_bits_[0] &= ~0x00000008u;
  ::android::net::NetworkProto* temp = network_;
  network_ = nullptr;
  return temp;
}
inline ::android::net::NetworkProto* JobStatusDumpProto::mutable_network() {
  _has_bits_[0] |= 0x00000008u;
  if (network_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::net::NetworkProto>(GetArenaNoVirtual());
    network_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.network)
  return network_;
}
inline void JobStatusDumpProto::set_allocated_network(::android::net::NetworkProto* network) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(network_);
  }
  if (network) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      network = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, network, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  network_ = network;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStatusDumpProto.network)
}

// repeated .com.android.server.job.JobStatusDumpProto.JobWorkItem pending_work = 15;
inline int JobStatusDumpProto::pending_work_size() const {
  return pending_work_.size();
}
inline void JobStatusDumpProto::clear_pending_work() {
  pending_work_.Clear();
}
inline ::com::android::server::job::JobStatusDumpProto_JobWorkItem* JobStatusDumpProto::mutable_pending_work(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.pending_work)
  return pending_work_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobWorkItem >*
JobStatusDumpProto::mutable_pending_work() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobStatusDumpProto.pending_work)
  return &pending_work_;
}
inline const ::com::android::server::job::JobStatusDumpProto_JobWorkItem& JobStatusDumpProto::pending_work(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.pending_work)
  return pending_work_.Get(index);
}
inline ::com::android::server::job::JobStatusDumpProto_JobWorkItem* JobStatusDumpProto::add_pending_work() {
  // @@protoc_insertion_point(field_add:com.android.server.job.JobStatusDumpProto.pending_work)
  return pending_work_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobWorkItem >&
JobStatusDumpProto::pending_work() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobStatusDumpProto.pending_work)
  return pending_work_;
}

// repeated .com.android.server.job.JobStatusDumpProto.JobWorkItem executing_work = 16;
inline int JobStatusDumpProto::executing_work_size() const {
  return executing_work_.size();
}
inline void JobStatusDumpProto::clear_executing_work() {
  executing_work_.Clear();
}
inline ::com::android::server::job::JobStatusDumpProto_JobWorkItem* JobStatusDumpProto::mutable_executing_work(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStatusDumpProto.executing_work)
  return executing_work_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobWorkItem >*
JobStatusDumpProto::mutable_executing_work() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.job.JobStatusDumpProto.executing_work)
  return &executing_work_;
}
inline const ::com::android::server::job::JobStatusDumpProto_JobWorkItem& JobStatusDumpProto::executing_work(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.executing_work)
  return executing_work_.Get(index);
}
inline ::com::android::server::job::JobStatusDumpProto_JobWorkItem* JobStatusDumpProto::add_executing_work() {
  // @@protoc_insertion_point(field_add:com.android.server.job.JobStatusDumpProto.executing_work)
  return executing_work_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::job::JobStatusDumpProto_JobWorkItem >&
JobStatusDumpProto::executing_work() const {
  // @@protoc_insertion_point(field_list:com.android.server.job.JobStatusDumpProto.executing_work)
  return executing_work_;
}

// optional .com.android.server.job.JobStatusDumpProto.Bucket standby_bucket = 17;
inline bool JobStatusDumpProto::has_standby_bucket() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JobStatusDumpProto::clear_standby_bucket() {
  standby_bucket_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::com::android::server::job::JobStatusDumpProto_Bucket JobStatusDumpProto::standby_bucket() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.standby_bucket)
  return static_cast< ::com::android::server::job::JobStatusDumpProto_Bucket >(standby_bucket_);
}
inline void JobStatusDumpProto::set_standby_bucket(::com::android::server::job::JobStatusDumpProto_Bucket value) {
  assert(::com::android::server::job::JobStatusDumpProto_Bucket_IsValid(value));
  _has_bits_[0] |= 0x00000100u;
  standby_bucket_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.standby_bucket)
}

// optional bool is_exempted_from_app_standby = 27;
inline bool JobStatusDumpProto::has_is_exempted_from_app_standby() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void JobStatusDumpProto::clear_is_exempted_from_app_standby() {
  is_exempted_from_app_standby_ = false;
  _has_bits_[0] &= ~0x00008000u;
}
inline bool JobStatusDumpProto::is_exempted_from_app_standby() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.is_exempted_from_app_standby)
  return is_exempted_from_app_standby_;
}
inline void JobStatusDumpProto::set_is_exempted_from_app_standby(bool value) {
  _has_bits_[0] |= 0x00008000u;
  is_exempted_from_app_standby_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.is_exempted_from_app_standby)
}

// optional int64 enqueue_duration_ms = 18;
inline bool JobStatusDumpProto::has_enqueue_duration_ms() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void JobStatusDumpProto::clear_enqueue_duration_ms() {
  enqueue_duration_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto::enqueue_duration_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.enqueue_duration_ms)
  return enqueue_duration_ms_;
}
inline void JobStatusDumpProto::set_enqueue_duration_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000200u;
  enqueue_duration_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.enqueue_duration_ms)
}

// optional sint64 time_until_earliest_runtime_ms = 19;
inline bool JobStatusDumpProto::has_time_until_earliest_runtime_ms() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void JobStatusDumpProto::clear_time_until_earliest_runtime_ms() {
  time_until_earliest_runtime_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto::time_until_earliest_runtime_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.time_until_earliest_runtime_ms)
  return time_until_earliest_runtime_ms_;
}
inline void JobStatusDumpProto::set_time_until_earliest_runtime_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000400u;
  time_until_earliest_runtime_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.time_until_earliest_runtime_ms)
}

// optional sint64 time_until_latest_runtime_ms = 20;
inline bool JobStatusDumpProto::has_time_until_latest_runtime_ms() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void JobStatusDumpProto::clear_time_until_latest_runtime_ms() {
  time_until_latest_runtime_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto::time_until_latest_runtime_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.time_until_latest_runtime_ms)
  return time_until_latest_runtime_ms_;
}
inline void JobStatusDumpProto::set_time_until_latest_runtime_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000800u;
  time_until_latest_runtime_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.time_until_latest_runtime_ms)
}

// optional uint64 original_latest_runtime_elapsed = 30;
inline bool JobStatusDumpProto::has_original_latest_runtime_elapsed() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void JobStatusDumpProto::clear_original_latest_runtime_elapsed() {
  original_latest_runtime_elapsed_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 JobStatusDumpProto::original_latest_runtime_elapsed() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.original_latest_runtime_elapsed)
  return original_latest_runtime_elapsed_;
}
inline void JobStatusDumpProto::set_original_latest_runtime_elapsed(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00200000u;
  original_latest_runtime_elapsed_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.original_latest_runtime_elapsed)
}

// optional int32 num_failures = 21;
inline bool JobStatusDumpProto::has_num_failures() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void JobStatusDumpProto::clear_num_failures() {
  num_failures_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobStatusDumpProto::num_failures() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.num_failures)
  return num_failures_;
}
inline void JobStatusDumpProto::set_num_failures(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  num_failures_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.num_failures)
}

// optional int64 last_successful_run_time = 22;
inline bool JobStatusDumpProto::has_last_successful_run_time() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void JobStatusDumpProto::clear_last_successful_run_time() {
  last_successful_run_time_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto::last_successful_run_time() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.last_successful_run_time)
  return last_successful_run_time_;
}
inline void JobStatusDumpProto::set_last_successful_run_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00010000u;
  last_successful_run_time_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.last_successful_run_time)
}

// optional int64 last_failed_run_time = 23;
inline bool JobStatusDumpProto::has_last_failed_run_time() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void JobStatusDumpProto::clear_last_failed_run_time() {
  last_failed_run_time_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto::last_failed_run_time() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.last_failed_run_time)
  return last_failed_run_time_;
}
inline void JobStatusDumpProto::set_last_failed_run_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00020000u;
  last_failed_run_time_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.last_failed_run_time)
}

// optional int64 internal_flags = 24;
inline bool JobStatusDumpProto::has_internal_flags() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void JobStatusDumpProto::clear_internal_flags() {
  internal_flags_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto::internal_flags() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.internal_flags)
  return internal_flags_;
}
inline void JobStatusDumpProto::set_internal_flags(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00040000u;
  internal_flags_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.internal_flags)
}

// optional int64 time_since_first_deferral_ms = 28;
inline bool JobStatusDumpProto::has_time_since_first_deferral_ms() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void JobStatusDumpProto::clear_time_since_first_deferral_ms() {
  time_since_first_deferral_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto::time_since_first_deferral_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.time_since_first_deferral_ms)
  return time_since_first_deferral_ms_;
}
inline void JobStatusDumpProto::set_time_since_first_deferral_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00080000u;
  time_since_first_deferral_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.time_since_first_deferral_ms)
}

// optional int64 time_since_first_force_batch_attempt_ms = 29;
inline bool JobStatusDumpProto::has_time_since_first_force_batch_attempt_ms() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void JobStatusDumpProto::clear_time_since_first_force_batch_attempt_ms() {
  time_since_first_force_batch_attempt_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobStatusDumpProto::time_since_first_force_batch_attempt_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStatusDumpProto.time_since_first_force_batch_attempt_ms)
  return time_since_first_force_batch_attempt_ms_;
}
inline void JobStatusDumpProto::set_time_since_first_force_batch_attempt_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00100000u;
  time_since_first_force_batch_attempt_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStatusDumpProto.time_since_first_force_batch_attempt_ms)
}

// -------------------------------------------------------------------

// JobConcurrencyManagerProto

// optional bool current_interactive_state = 1;
inline bool JobConcurrencyManagerProto::has_current_interactive_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobConcurrencyManagerProto::clear_current_interactive_state() {
  current_interactive_state_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool JobConcurrencyManagerProto::current_interactive_state() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobConcurrencyManagerProto.current_interactive_state)
  return current_interactive_state_;
}
inline void JobConcurrencyManagerProto::set_current_interactive_state(bool value) {
  _has_bits_[0] |= 0x00000008u;
  current_interactive_state_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobConcurrencyManagerProto.current_interactive_state)
}

// optional bool effective_interactive_state = 2;
inline bool JobConcurrencyManagerProto::has_effective_interactive_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JobConcurrencyManagerProto::clear_effective_interactive_state() {
  effective_interactive_state_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool JobConcurrencyManagerProto::effective_interactive_state() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobConcurrencyManagerProto.effective_interactive_state)
  return effective_interactive_state_;
}
inline void JobConcurrencyManagerProto::set_effective_interactive_state(bool value) {
  _has_bits_[0] |= 0x00000010u;
  effective_interactive_state_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobConcurrencyManagerProto.effective_interactive_state)
}

// optional int64 time_since_last_screen_on_ms = 3;
inline bool JobConcurrencyManagerProto::has_time_since_last_screen_on_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobConcurrencyManagerProto::clear_time_since_last_screen_on_ms() {
  time_since_last_screen_on_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobConcurrencyManagerProto::time_since_last_screen_on_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobConcurrencyManagerProto.time_since_last_screen_on_ms)
  return time_since_last_screen_on_ms_;
}
inline void JobConcurrencyManagerProto::set_time_since_last_screen_on_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  time_since_last_screen_on_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobConcurrencyManagerProto.time_since_last_screen_on_ms)
}

// optional int64 time_since_last_screen_off_ms = 4;
inline bool JobConcurrencyManagerProto::has_time_since_last_screen_off_ms() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JobConcurrencyManagerProto::clear_time_since_last_screen_off_ms() {
  time_since_last_screen_off_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobConcurrencyManagerProto::time_since_last_screen_off_ms() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobConcurrencyManagerProto.time_since_last_screen_off_ms)
  return time_since_last_screen_off_ms_;
}
inline void JobConcurrencyManagerProto::set_time_since_last_screen_off_ms(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  time_since_last_screen_off_ms_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobConcurrencyManagerProto.time_since_last_screen_off_ms)
}

// optional .com.android.server.job.JobCountTrackerProto job_count_tracker = 5;
inline bool JobConcurrencyManagerProto::has_job_count_tracker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobConcurrencyManagerProto::clear_job_count_tracker() {
  if (job_count_tracker_ != nullptr) job_count_tracker_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::JobCountTrackerProto& JobConcurrencyManagerProto::job_count_tracker() const {
  const ::com::android::server::job::JobCountTrackerProto* p = job_count_tracker_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobConcurrencyManagerProto.job_count_tracker)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobCountTrackerProto*>(
      &::com::android::server::job::_JobCountTrackerProto_default_instance_);
}
inline ::com::android::server::job::JobCountTrackerProto* JobConcurrencyManagerProto::release_job_count_tracker() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobConcurrencyManagerProto.job_count_tracker)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::JobCountTrackerProto* temp = job_count_tracker_;
  job_count_tracker_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobCountTrackerProto* JobConcurrencyManagerProto::mutable_job_count_tracker() {
  _has_bits_[0] |= 0x00000001u;
  if (job_count_tracker_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobCountTrackerProto>(GetArenaNoVirtual());
    job_count_tracker_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobConcurrencyManagerProto.job_count_tracker)
  return job_count_tracker_;
}
inline void JobConcurrencyManagerProto::set_allocated_job_count_tracker(::com::android::server::job::JobCountTrackerProto* job_count_tracker) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete job_count_tracker_;
  }
  if (job_count_tracker) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      job_count_tracker = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, job_count_tracker, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  job_count_tracker_ = job_count_tracker;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobConcurrencyManagerProto.job_count_tracker)
}

// optional int32 memory_trim_level = 6;
inline bool JobConcurrencyManagerProto::has_memory_trim_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JobConcurrencyManagerProto::clear_memory_trim_level() {
  memory_trim_level_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobConcurrencyManagerProto::memory_trim_level() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobConcurrencyManagerProto.memory_trim_level)
  return memory_trim_level_;
}
inline void JobConcurrencyManagerProto::set_memory_trim_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  memory_trim_level_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobConcurrencyManagerProto.memory_trim_level)
}

// optional .com.android.server.StatLoggerProto stats = 7;
inline bool JobConcurrencyManagerProto::has_stats() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::com::android::server::StatLoggerProto& JobConcurrencyManagerProto::stats() const {
  const ::com::android::server::StatLoggerProto* p = stats_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobConcurrencyManagerProto.stats)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::StatLoggerProto*>(
      &::com::android::server::_StatLoggerProto_default_instance_);
}
inline ::com::android::server::StatLoggerProto* JobConcurrencyManagerProto::release_stats() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobConcurrencyManagerProto.stats)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::StatLoggerProto* temp = stats_;
  stats_ = nullptr;
  return temp;
}
inline ::com::android::server::StatLoggerProto* JobConcurrencyManagerProto::mutable_stats() {
  _has_bits_[0] |= 0x00000002u;
  if (stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::StatLoggerProto>(GetArenaNoVirtual());
    stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobConcurrencyManagerProto.stats)
  return stats_;
}
inline void JobConcurrencyManagerProto::set_allocated_stats(::com::android::server::StatLoggerProto* stats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(stats_);
  }
  if (stats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      stats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stats, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  stats_ = stats;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobConcurrencyManagerProto.stats)
}

// -------------------------------------------------------------------

// JobCountTrackerProto

// optional int32 config_num_max_total_jobs = 1;
inline bool JobCountTrackerProto::has_config_num_max_total_jobs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobCountTrackerProto::clear_config_num_max_total_jobs() {
  config_num_max_total_jobs_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobCountTrackerProto::config_num_max_total_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobCountTrackerProto.config_num_max_total_jobs)
  return config_num_max_total_jobs_;
}
inline void JobCountTrackerProto::set_config_num_max_total_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  config_num_max_total_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobCountTrackerProto.config_num_max_total_jobs)
}

// optional int32 config_num_max_bg_jobs = 2;
inline bool JobCountTrackerProto::has_config_num_max_bg_jobs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobCountTrackerProto::clear_config_num_max_bg_jobs() {
  config_num_max_bg_jobs_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobCountTrackerProto::config_num_max_bg_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobCountTrackerProto.config_num_max_bg_jobs)
  return config_num_max_bg_jobs_;
}
inline void JobCountTrackerProto::set_config_num_max_bg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  config_num_max_bg_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobCountTrackerProto.config_num_max_bg_jobs)
}

// optional int32 config_num_min_bg_jobs = 3;
inline bool JobCountTrackerProto::has_config_num_min_bg_jobs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobCountTrackerProto::clear_config_num_min_bg_jobs() {
  config_num_min_bg_jobs_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobCountTrackerProto::config_num_min_bg_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobCountTrackerProto.config_num_min_bg_jobs)
  return config_num_min_bg_jobs_;
}
inline void JobCountTrackerProto::set_config_num_min_bg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  config_num_min_bg_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobCountTrackerProto.config_num_min_bg_jobs)
}

// optional int32 num_running_fg_jobs = 4;
inline bool JobCountTrackerProto::has_num_running_fg_jobs() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobCountTrackerProto::clear_num_running_fg_jobs() {
  num_running_fg_jobs_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobCountTrackerProto::num_running_fg_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobCountTrackerProto.num_running_fg_jobs)
  return num_running_fg_jobs_;
}
inline void JobCountTrackerProto::set_num_running_fg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  num_running_fg_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobCountTrackerProto.num_running_fg_jobs)
}

// optional int32 num_running_bg_jobs = 5;
inline bool JobCountTrackerProto::has_num_running_bg_jobs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JobCountTrackerProto::clear_num_running_bg_jobs() {
  num_running_bg_jobs_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobCountTrackerProto::num_running_bg_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobCountTrackerProto.num_running_bg_jobs)
  return num_running_bg_jobs_;
}
inline void JobCountTrackerProto::set_num_running_bg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  num_running_bg_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobCountTrackerProto.num_running_bg_jobs)
}

// optional int32 num_pending_fg_jobs = 6;
inline bool JobCountTrackerProto::has_num_pending_fg_jobs() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JobCountTrackerProto::clear_num_pending_fg_jobs() {
  num_pending_fg_jobs_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobCountTrackerProto::num_pending_fg_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobCountTrackerProto.num_pending_fg_jobs)
  return num_pending_fg_jobs_;
}
inline void JobCountTrackerProto::set_num_pending_fg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  num_pending_fg_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobCountTrackerProto.num_pending_fg_jobs)
}

// optional int32 num_pending_bg_jobs = 7;
inline bool JobCountTrackerProto::has_num_pending_bg_jobs() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JobCountTrackerProto::clear_num_pending_bg_jobs() {
  num_pending_bg_jobs_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobCountTrackerProto::num_pending_bg_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobCountTrackerProto.num_pending_bg_jobs)
  return num_pending_bg_jobs_;
}
inline void JobCountTrackerProto::set_num_pending_bg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  num_pending_bg_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobCountTrackerProto.num_pending_bg_jobs)
}

// optional int32 num_actual_max_fg_jobs = 8;
inline bool JobCountTrackerProto::has_num_actual_max_fg_jobs() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JobCountTrackerProto::clear_num_actual_max_fg_jobs() {
  num_actual_max_fg_jobs_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobCountTrackerProto::num_actual_max_fg_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobCountTrackerProto.num_actual_max_fg_jobs)
  return num_actual_max_fg_jobs_;
}
inline void JobCountTrackerProto::set_num_actual_max_fg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  num_actual_max_fg_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobCountTrackerProto.num_actual_max_fg_jobs)
}

// optional int32 num_actual_max_bg_jobs = 9;
inline bool JobCountTrackerProto::has_num_actual_max_bg_jobs() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JobCountTrackerProto::clear_num_actual_max_bg_jobs() {
  num_actual_max_bg_jobs_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobCountTrackerProto::num_actual_max_bg_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobCountTrackerProto.num_actual_max_bg_jobs)
  return num_actual_max_bg_jobs_;
}
inline void JobCountTrackerProto::set_num_actual_max_bg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  num_actual_max_bg_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobCountTrackerProto.num_actual_max_bg_jobs)
}

// optional int32 num_reserved_for_bg = 10;
inline bool JobCountTrackerProto::has_num_reserved_for_bg() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void JobCountTrackerProto::clear_num_reserved_for_bg() {
  num_reserved_for_bg_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobCountTrackerProto::num_reserved_for_bg() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobCountTrackerProto.num_reserved_for_bg)
  return num_reserved_for_bg_;
}
inline void JobCountTrackerProto::set_num_reserved_for_bg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  num_reserved_for_bg_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobCountTrackerProto.num_reserved_for_bg)
}

// optional int32 num_starting_fg_jobs = 11;
inline bool JobCountTrackerProto::has_num_starting_fg_jobs() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void JobCountTrackerProto::clear_num_starting_fg_jobs() {
  num_starting_fg_jobs_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobCountTrackerProto::num_starting_fg_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobCountTrackerProto.num_starting_fg_jobs)
  return num_starting_fg_jobs_;
}
inline void JobCountTrackerProto::set_num_starting_fg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  num_starting_fg_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobCountTrackerProto.num_starting_fg_jobs)
}

// optional int32 num_starting_bg_jobs = 12;
inline bool JobCountTrackerProto::has_num_starting_bg_jobs() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void JobCountTrackerProto::clear_num_starting_bg_jobs() {
  num_starting_bg_jobs_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobCountTrackerProto::num_starting_bg_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobCountTrackerProto.num_starting_bg_jobs)
  return num_starting_bg_jobs_;
}
inline void JobCountTrackerProto::set_num_starting_bg_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  num_starting_bg_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobCountTrackerProto.num_starting_bg_jobs)
}

// -------------------------------------------------------------------

// JobStorePersistStatsProto_Stats

// optional int32 num_total_jobs = 1;
inline bool JobStorePersistStatsProto_Stats::has_num_total_jobs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobStorePersistStatsProto_Stats::clear_num_total_jobs() {
  num_total_jobs_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobStorePersistStatsProto_Stats::num_total_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStorePersistStatsProto.Stats.num_total_jobs)
  return num_total_jobs_;
}
inline void JobStorePersistStatsProto_Stats::set_num_total_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  num_total_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStorePersistStatsProto.Stats.num_total_jobs)
}

// optional int32 num_system_server_jobs = 2;
inline bool JobStorePersistStatsProto_Stats::has_num_system_server_jobs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobStorePersistStatsProto_Stats::clear_num_system_server_jobs() {
  num_system_server_jobs_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobStorePersistStatsProto_Stats::num_system_server_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStorePersistStatsProto.Stats.num_system_server_jobs)
  return num_system_server_jobs_;
}
inline void JobStorePersistStatsProto_Stats::set_num_system_server_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_system_server_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStorePersistStatsProto.Stats.num_system_server_jobs)
}

// optional int32 num_system_sync_manager_jobs = 3;
inline bool JobStorePersistStatsProto_Stats::has_num_system_sync_manager_jobs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobStorePersistStatsProto_Stats::clear_num_system_sync_manager_jobs() {
  num_system_sync_manager_jobs_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 JobStorePersistStatsProto_Stats::num_system_sync_manager_jobs() const {
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStorePersistStatsProto.Stats.num_system_sync_manager_jobs)
  return num_system_sync_manager_jobs_;
}
inline void JobStorePersistStatsProto_Stats::set_num_system_sync_manager_jobs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_system_sync_manager_jobs_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.job.JobStorePersistStatsProto.Stats.num_system_sync_manager_jobs)
}

// -------------------------------------------------------------------

// JobStorePersistStatsProto

// optional .com.android.server.job.JobStorePersistStatsProto.Stats first_load = 1;
inline bool JobStorePersistStatsProto::has_first_load() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobStorePersistStatsProto::clear_first_load() {
  if (first_load_ != nullptr) first_load_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::android::server::job::JobStorePersistStatsProto_Stats& JobStorePersistStatsProto::first_load() const {
  const ::com::android::server::job::JobStorePersistStatsProto_Stats* p = first_load_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStorePersistStatsProto.first_load)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStorePersistStatsProto_Stats*>(
      &::com::android::server::job::_JobStorePersistStatsProto_Stats_default_instance_);
}
inline ::com::android::server::job::JobStorePersistStatsProto_Stats* JobStorePersistStatsProto::release_first_load() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStorePersistStatsProto.first_load)
  _has_bits_[0] &= ~0x00000001u;
  ::com::android::server::job::JobStorePersistStatsProto_Stats* temp = first_load_;
  first_load_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStorePersistStatsProto_Stats* JobStorePersistStatsProto::mutable_first_load() {
  _has_bits_[0] |= 0x00000001u;
  if (first_load_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStorePersistStatsProto_Stats>(GetArenaNoVirtual());
    first_load_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStorePersistStatsProto.first_load)
  return first_load_;
}
inline void JobStorePersistStatsProto::set_allocated_first_load(::com::android::server::job::JobStorePersistStatsProto_Stats* first_load) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete first_load_;
  }
  if (first_load) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      first_load = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, first_load, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  first_load_ = first_load;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStorePersistStatsProto.first_load)
}

// optional .com.android.server.job.JobStorePersistStatsProto.Stats last_save = 2;
inline bool JobStorePersistStatsProto::has_last_save() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobStorePersistStatsProto::clear_last_save() {
  if (last_save_ != nullptr) last_save_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::com::android::server::job::JobStorePersistStatsProto_Stats& JobStorePersistStatsProto::last_save() const {
  const ::com::android::server::job::JobStorePersistStatsProto_Stats* p = last_save_;
  // @@protoc_insertion_point(field_get:com.android.server.job.JobStorePersistStatsProto.last_save)
  return p != nullptr ? *p : *reinterpret_cast<const ::com::android::server::job::JobStorePersistStatsProto_Stats*>(
      &::com::android::server::job::_JobStorePersistStatsProto_Stats_default_instance_);
}
inline ::com::android::server::job::JobStorePersistStatsProto_Stats* JobStorePersistStatsProto::release_last_save() {
  // @@protoc_insertion_point(field_release:com.android.server.job.JobStorePersistStatsProto.last_save)
  _has_bits_[0] &= ~0x00000002u;
  ::com::android::server::job::JobStorePersistStatsProto_Stats* temp = last_save_;
  last_save_ = nullptr;
  return temp;
}
inline ::com::android::server::job::JobStorePersistStatsProto_Stats* JobStorePersistStatsProto::mutable_last_save() {
  _has_bits_[0] |= 0x00000002u;
  if (last_save_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::android::server::job::JobStorePersistStatsProto_Stats>(GetArenaNoVirtual());
    last_save_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.android.server.job.JobStorePersistStatsProto.last_save)
  return last_save_;
}
inline void JobStorePersistStatsProto::set_allocated_last_save(::com::android::server::job::JobStorePersistStatsProto_Stats* last_save) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete last_save_;
  }
  if (last_save) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      last_save = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_save, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  last_save_ = last_save;
  // @@protoc_insertion_point(field_set_allocated:com.android.server.job.JobStorePersistStatsProto.last_save)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace job
}  // namespace server
}  // namespace android
}  // namespace com

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::com::android::server::job::JobPackageHistoryProto_Event> : ::std::true_type {};
template <> struct is_proto_enum< ::com::android::server::job::JobStatusDumpProto_JobInfo_Backoff_Policy> : ::std::true_type {};
template <> struct is_proto_enum< ::com::android::server::job::JobStatusDumpProto_TrackingController> : ::std::true_type {};
template <> struct is_proto_enum< ::com::android::server::job::JobStatusDumpProto_Bucket> : ::std::true_type {};

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fjobscheduler_2eproto
