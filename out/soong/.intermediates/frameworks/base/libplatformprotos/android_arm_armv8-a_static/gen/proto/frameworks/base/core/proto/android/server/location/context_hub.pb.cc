// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/location/context_hub.proto

#include "frameworks/base/core/proto/android/server/location/context_hub.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ContextHubInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientBrokerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ClientManagerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientManagerProto_RegistrationRecord_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto;
namespace com {
namespace android {
namespace server {
namespace location {
class ContextHubServiceProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ContextHubServiceProto> _instance;
} _ContextHubServiceProto_default_instance_;
class ClientManagerProto_RegistrationRecordDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientManagerProto_RegistrationRecord> _instance;
} _ClientManagerProto_RegistrationRecord_default_instance_;
class ClientManagerProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientManagerProto> _instance;
} _ClientManagerProto_default_instance_;
class ClientBrokerProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientBrokerProto> _instance;
} _ClientBrokerProto_default_instance_;
}  // namespace location
}  // namespace server
}  // namespace android
}  // namespace com
static void InitDefaultsscc_info_ClientBrokerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::location::_ClientBrokerProto_default_instance_;
    new (ptr) ::com::android::server::location::ClientBrokerProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::location::ClientBrokerProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientBrokerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ClientBrokerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto}, {}};

static void InitDefaultsscc_info_ClientManagerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::location::_ClientManagerProto_default_instance_;
    new (ptr) ::com::android::server::location::ClientManagerProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::location::ClientManagerProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ClientManagerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_ClientManagerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto}, {
      &scc_info_ClientBrokerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto.base,
      &scc_info_ClientManagerProto_RegistrationRecord_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto.base,}};

static void InitDefaultsscc_info_ClientManagerProto_RegistrationRecord_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::location::_ClientManagerProto_RegistrationRecord_default_instance_;
    new (ptr) ::com::android::server::location::ClientManagerProto_RegistrationRecord();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::location::ClientManagerProto_RegistrationRecord::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientManagerProto_RegistrationRecord_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ClientManagerProto_RegistrationRecord_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto}, {}};

static void InitDefaultsscc_info_ContextHubServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::location::_ContextHubServiceProto_default_instance_;
    new (ptr) ::com::android::server::location::ContextHubServiceProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::location::ContextHubServiceProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ContextHubServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_ContextHubServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto}, {
      &scc_info_ContextHubInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fhardware_2flocation_2fcontext_5fhub_5finfo_2eproto.base,
      &scc_info_ClientManagerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto.base,}};

namespace com {
namespace android {
namespace server {
namespace location {

// ===================================================================

void ContextHubServiceProto::InitAsDefaultInstance() {
  ::com::android::server::location::_ContextHubServiceProto_default_instance_._instance.get_mutable()->client_manager_ = const_cast< ::com::android::server::location::ClientManagerProto*>(
      ::com::android::server::location::ClientManagerProto::internal_default_instance());
}
class ContextHubServiceProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ContextHubServiceProto>()._has_bits_);
  static const ::com::android::server::location::ClientManagerProto& client_manager(const ContextHubServiceProto* msg);
  static void set_has_client_manager(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::com::android::server::location::ClientManagerProto&
ContextHubServiceProto::_Internal::client_manager(const ContextHubServiceProto* msg) {
  return *msg->client_manager_;
}
void ContextHubServiceProto::clear_context_hub_info() {
  context_hub_info_.Clear();
}
ContextHubServiceProto::ContextHubServiceProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.location.ContextHubServiceProto)
}
ContextHubServiceProto::ContextHubServiceProto(const ContextHubServiceProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      context_hub_info_(from.context_hub_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_client_manager()) {
    client_manager_ = new ::com::android::server::location::ClientManagerProto(*from.client_manager_);
  } else {
    client_manager_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.android.server.location.ContextHubServiceProto)
}

void ContextHubServiceProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ContextHubServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto.base);
  client_manager_ = nullptr;
}

ContextHubServiceProto::~ContextHubServiceProto() {
  // @@protoc_insertion_point(destructor:com.android.server.location.ContextHubServiceProto)
  SharedDtor();
}

void ContextHubServiceProto::SharedDtor() {
  if (this != internal_default_instance()) delete client_manager_;
}

void ContextHubServiceProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ContextHubServiceProto& ContextHubServiceProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ContextHubServiceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto.base);
  return *internal_default_instance();
}


void ContextHubServiceProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.location.ContextHubServiceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  context_hub_info_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(client_manager_ != nullptr);
    client_manager_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ContextHubServiceProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.hardware.location.ContextHubInfoProto context_hub_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_context_hub_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // optional .com.android.server.location.ClientManagerProto client_manager = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_client_manager(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ContextHubServiceProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.location.ContextHubServiceProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.hardware.location.ContextHubInfoProto context_hub_info = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_context_hub_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.android.server.location.ClientManagerProto client_manager = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_client_manager()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.location.ContextHubServiceProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.location.ContextHubServiceProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ContextHubServiceProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.location.ContextHubServiceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.hardware.location.ContextHubInfoProto context_hub_info = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->context_hub_info_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->context_hub_info(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .com.android.server.location.ClientManagerProto client_manager = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::client_manager(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.location.ContextHubServiceProto)
}

size_t ContextHubServiceProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.location.ContextHubServiceProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.hardware.location.ContextHubInfoProto context_hub_info = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->context_hub_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->context_hub_info(static_cast<int>(i)));
    }
  }

  // optional .com.android.server.location.ClientManagerProto client_manager = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *client_manager_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContextHubServiceProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ContextHubServiceProto*>(
      &from));
}

void ContextHubServiceProto::MergeFrom(const ContextHubServiceProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.location.ContextHubServiceProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  context_hub_info_.MergeFrom(from.context_hub_info_);
  if (from.has_client_manager()) {
    mutable_client_manager()->::com::android::server::location::ClientManagerProto::MergeFrom(from.client_manager());
  }
}

void ContextHubServiceProto::CopyFrom(const ContextHubServiceProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.location.ContextHubServiceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContextHubServiceProto::IsInitialized() const {
  return true;
}

void ContextHubServiceProto::InternalSwap(ContextHubServiceProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&context_hub_info_)->InternalSwap(CastToBase(&other->context_hub_info_));
  swap(client_manager_, other->client_manager_);
}

std::string ContextHubServiceProto::GetTypeName() const {
  return "com.android.server.location.ContextHubServiceProto";
}


// ===================================================================

void ClientManagerProto_RegistrationRecord::InitAsDefaultInstance() {
}
class ClientManagerProto_RegistrationRecord::_Internal {
 public:
  using HasBits = decltype(std::declval<ClientManagerProto_RegistrationRecord>()._has_bits_);
  static void set_has_timestamp_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_broker(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ClientManagerProto_RegistrationRecord::ClientManagerProto_RegistrationRecord()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.location.ClientManagerProto.RegistrationRecord)
}
ClientManagerProto_RegistrationRecord::ClientManagerProto_RegistrationRecord(const ClientManagerProto_RegistrationRecord& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  broker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_broker()) {
    broker_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.broker_);
  }
  ::memcpy(&timestamp_ms_, &from.timestamp_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&timestamp_ms_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.location.ClientManagerProto.RegistrationRecord)
}

void ClientManagerProto_RegistrationRecord::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientManagerProto_RegistrationRecord_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto.base);
  broker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&timestamp_ms_)) + sizeof(action_));
}

ClientManagerProto_RegistrationRecord::~ClientManagerProto_RegistrationRecord() {
  // @@protoc_insertion_point(destructor:com.android.server.location.ClientManagerProto.RegistrationRecord)
  SharedDtor();
}

void ClientManagerProto_RegistrationRecord::SharedDtor() {
  broker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientManagerProto_RegistrationRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientManagerProto_RegistrationRecord& ClientManagerProto_RegistrationRecord::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientManagerProto_RegistrationRecord_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto.base);
  return *internal_default_instance();
}


void ClientManagerProto_RegistrationRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.location.ClientManagerProto.RegistrationRecord)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    broker_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&timestamp_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&action_) -
        reinterpret_cast<char*>(&timestamp_ms_)) + sizeof(action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientManagerProto_RegistrationRecord::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int64 timestamp_ms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_timestamp_ms(&has_bits);
          timestamp_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_action(&has_bits);
          action_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string broker = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_broker(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientManagerProto_RegistrationRecord::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.location.ClientManagerProto.RegistrationRecord)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 timestamp_ms = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_timestamp_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 action = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_action(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string broker = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_broker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.location.ClientManagerProto.RegistrationRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.location.ClientManagerProto.RegistrationRecord)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientManagerProto_RegistrationRecord::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.location.ClientManagerProto.RegistrationRecord)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 timestamp_ms = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(1, this->timestamp_ms(), output);
  }

  // optional int32 action = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->action(), output);
  }

  // optional string broker = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->broker(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.location.ClientManagerProto.RegistrationRecord)
}

size_t ClientManagerProto_RegistrationRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.location.ClientManagerProto.RegistrationRecord)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string broker = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->broker());
    }

    // optional int64 timestamp_ms = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->timestamp_ms());
    }

    // optional int32 action = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->action());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientManagerProto_RegistrationRecord::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ClientManagerProto_RegistrationRecord*>(
      &from));
}

void ClientManagerProto_RegistrationRecord::MergeFrom(const ClientManagerProto_RegistrationRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.location.ClientManagerProto.RegistrationRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      broker_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.broker_);
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ms_ = from.timestamp_ms_;
    }
    if (cached_has_bits & 0x00000004u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClientManagerProto_RegistrationRecord::CopyFrom(const ClientManagerProto_RegistrationRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.location.ClientManagerProto.RegistrationRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientManagerProto_RegistrationRecord::IsInitialized() const {
  return true;
}

void ClientManagerProto_RegistrationRecord::InternalSwap(ClientManagerProto_RegistrationRecord* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  broker_.Swap(&other->broker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_ms_, other->timestamp_ms_);
  swap(action_, other->action_);
}

std::string ClientManagerProto_RegistrationRecord::GetTypeName() const {
  return "com.android.server.location.ClientManagerProto.RegistrationRecord";
}


// ===================================================================

void ClientManagerProto::InitAsDefaultInstance() {
}
class ClientManagerProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ClientManagerProto>()._has_bits_);
};

ClientManagerProto::ClientManagerProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.location.ClientManagerProto)
}
ClientManagerProto::ClientManagerProto(const ClientManagerProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      client_brokers_(from.client_brokers_),
      registration_records_(from.registration_records_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.android.server.location.ClientManagerProto)
}

void ClientManagerProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientManagerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto.base);
}

ClientManagerProto::~ClientManagerProto() {
  // @@protoc_insertion_point(destructor:com.android.server.location.ClientManagerProto)
  SharedDtor();
}

void ClientManagerProto::SharedDtor() {
}

void ClientManagerProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientManagerProto& ClientManagerProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientManagerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto.base);
  return *internal_default_instance();
}


void ClientManagerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.location.ClientManagerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_brokers_.Clear();
  registration_records_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientManagerProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.android.server.location.ClientBrokerProto client_brokers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_client_brokers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.location.ClientManagerProto.RegistrationRecord registration_records = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_registration_records(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientManagerProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.location.ClientManagerProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.android.server.location.ClientBrokerProto client_brokers = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_client_brokers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.location.ClientManagerProto.RegistrationRecord registration_records = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_registration_records()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.location.ClientManagerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.location.ClientManagerProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientManagerProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.location.ClientManagerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.android.server.location.ClientBrokerProto client_brokers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->client_brokers_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->client_brokers(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.location.ClientManagerProto.RegistrationRecord registration_records = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->registration_records_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2,
      this->registration_records(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.location.ClientManagerProto)
}

size_t ClientManagerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.location.ClientManagerProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.location.ClientBrokerProto client_brokers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->client_brokers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->client_brokers(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.location.ClientManagerProto.RegistrationRecord registration_records = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->registration_records_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->registration_records(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientManagerProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ClientManagerProto*>(
      &from));
}

void ClientManagerProto::MergeFrom(const ClientManagerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.location.ClientManagerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  client_brokers_.MergeFrom(from.client_brokers_);
  registration_records_.MergeFrom(from.registration_records_);
}

void ClientManagerProto::CopyFrom(const ClientManagerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.location.ClientManagerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientManagerProto::IsInitialized() const {
  return true;
}

void ClientManagerProto::InternalSwap(ClientManagerProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&client_brokers_)->InternalSwap(CastToBase(&other->client_brokers_));
  CastToBase(&registration_records_)->InternalSwap(CastToBase(&other->registration_records_));
}

std::string ClientManagerProto::GetTypeName() const {
  return "com.android.server.location.ClientManagerProto";
}


// ===================================================================

void ClientBrokerProto::InitAsDefaultInstance() {
}
class ClientBrokerProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ClientBrokerProto>()._has_bits_);
  static void set_has_endpoint_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_attached_context_hub_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_package(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_nano_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_pending_intent_request_valid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_has_pending_intent(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_pending_intent_cancelled(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_registered(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

ClientBrokerProto::ClientBrokerProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.location.ClientBrokerProto)
}
ClientBrokerProto::ClientBrokerProto(const ClientBrokerProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_package()) {
    package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  ::memcpy(&endpoint_id_, &from.endpoint_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&registered_) -
    reinterpret_cast<char*>(&endpoint_id_)) + sizeof(registered_));
  // @@protoc_insertion_point(copy_constructor:com.android.server.location.ClientBrokerProto)
}

void ClientBrokerProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientBrokerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto.base);
  package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&endpoint_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&registered_) -
      reinterpret_cast<char*>(&endpoint_id_)) + sizeof(registered_));
}

ClientBrokerProto::~ClientBrokerProto() {
  // @@protoc_insertion_point(destructor:com.android.server.location.ClientBrokerProto)
  SharedDtor();
}

void ClientBrokerProto::SharedDtor() {
  package_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientBrokerProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientBrokerProto& ClientBrokerProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientBrokerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2flocation_2fcontext_5fhub_2eproto.base);
  return *internal_default_instance();
}


void ClientBrokerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.location.ClientBrokerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    package_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&endpoint_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&registered_) -
        reinterpret_cast<char*>(&endpoint_id_)) + sizeof(registered_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientBrokerProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 endpoint_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_endpoint_id(&has_bits);
          endpoint_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 attached_context_hub_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_attached_context_hub_id(&has_bits);
          attached_context_hub_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string package = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_package(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 nano_app_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_nano_app_id(&has_bits);
          nano_app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pending_intent_request_valid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_pending_intent_request_valid(&has_bits);
          pending_intent_request_valid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool has_pending_intent = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_has_pending_intent(&has_bits);
          has_pending_intent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool pending_intent_cancelled = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_pending_intent_cancelled(&has_bits);
          pending_intent_cancelled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool registered = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_registered(&has_bits);
          registered_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientBrokerProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.location.ClientBrokerProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 endpoint_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_endpoint_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &endpoint_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 attached_context_hub_id = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_attached_context_hub_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &attached_context_hub_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string package = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 nano_app_id = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_nano_app_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &nano_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pending_intent_request_valid = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_pending_intent_request_valid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pending_intent_request_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_pending_intent = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_has_pending_intent(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_pending_intent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool pending_intent_cancelled = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_pending_intent_cancelled(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pending_intent_cancelled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool registered = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_registered(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &registered_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.location.ClientBrokerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.location.ClientBrokerProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientBrokerProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.location.ClientBrokerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 endpoint_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->endpoint_id(), output);
  }

  // optional int32 attached_context_hub_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->attached_context_hub_id(), output);
  }

  // optional string package = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->package(), output);
  }

  // optional int64 nano_app_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(4, this->nano_app_id(), output);
  }

  // optional bool pending_intent_request_valid = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(5, this->pending_intent_request_valid(), output);
  }

  // optional bool has_pending_intent = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->has_pending_intent(), output);
  }

  // optional bool pending_intent_cancelled = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(7, this->pending_intent_cancelled(), output);
  }

  // optional bool registered = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(8, this->registered(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.location.ClientBrokerProto)
}

size_t ClientBrokerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.location.ClientBrokerProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string package = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->package());
    }

    // optional int32 endpoint_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->endpoint_id());
    }

    // optional int32 attached_context_hub_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->attached_context_hub_id());
    }

    // optional int64 nano_app_id = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->nano_app_id());
    }

    // optional bool pending_intent_request_valid = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool has_pending_intent = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool pending_intent_cancelled = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional bool registered = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientBrokerProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ClientBrokerProto*>(
      &from));
}

void ClientBrokerProto::MergeFrom(const ClientBrokerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.location.ClientBrokerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      package_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.package_);
    }
    if (cached_has_bits & 0x00000002u) {
      endpoint_id_ = from.endpoint_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      attached_context_hub_id_ = from.attached_context_hub_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      nano_app_id_ = from.nano_app_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      pending_intent_request_valid_ = from.pending_intent_request_valid_;
    }
    if (cached_has_bits & 0x00000020u) {
      has_pending_intent_ = from.has_pending_intent_;
    }
    if (cached_has_bits & 0x00000040u) {
      pending_intent_cancelled_ = from.pending_intent_cancelled_;
    }
    if (cached_has_bits & 0x00000080u) {
      registered_ = from.registered_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClientBrokerProto::CopyFrom(const ClientBrokerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.location.ClientBrokerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientBrokerProto::IsInitialized() const {
  return true;
}

void ClientBrokerProto::InternalSwap(ClientBrokerProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  package_.Swap(&other->package_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(endpoint_id_, other->endpoint_id_);
  swap(attached_context_hub_id_, other->attached_context_hub_id_);
  swap(nano_app_id_, other->nano_app_id_);
  swap(pending_intent_request_valid_, other->pending_intent_request_valid_);
  swap(has_pending_intent_, other->has_pending_intent_);
  swap(pending_intent_cancelled_, other->pending_intent_cancelled_);
  swap(registered_, other->registered_);
}

std::string ClientBrokerProto::GetTypeName() const {
  return "com.android.server.location.ClientBrokerProto";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace location
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::android::server::location::ContextHubServiceProto* Arena::CreateMaybeMessage< ::com::android::server::location::ContextHubServiceProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::location::ContextHubServiceProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::location::ClientManagerProto_RegistrationRecord* Arena::CreateMaybeMessage< ::com::android::server::location::ClientManagerProto_RegistrationRecord >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::location::ClientManagerProto_RegistrationRecord >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::location::ClientManagerProto* Arena::CreateMaybeMessage< ::com::android::server::location::ClientManagerProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::location::ClientManagerProto >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::location::ClientBrokerProto* Arena::CreateMaybeMessage< ::com::android::server::location::ClientBrokerProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::location::ClientBrokerProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
