// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/proto_logging/stats/enums/app/enums.proto

#include "frameworks/proto_logging/stats/enums/app/enums.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace android {
namespace app {
}  // namespace app
}  // namespace android
namespace android {
namespace app {
bool AppTransitionReasonEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> AppTransitionReasonEnum_strings[6] = {};

static const char AppTransitionReasonEnum_names[] =
  "APP_TRANSITION_REASON_UNKNOWN"
  "APP_TRANSITION_RECENTS_ANIM"
  "APP_TRANSITION_SNAPSHOT"
  "APP_TRANSITION_SPLASH_SCREEN"
  "APP_TRANSITION_TIMEOUT"
  "APP_TRANSITION_WINDOWS_DRAWN";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry AppTransitionReasonEnum_entries[] = {
  { {AppTransitionReasonEnum_names + 0, 29}, 0 },
  { {AppTransitionReasonEnum_names + 29, 27}, 5 },
  { {AppTransitionReasonEnum_names + 56, 23}, 4 },
  { {AppTransitionReasonEnum_names + 79, 28}, 1 },
  { {AppTransitionReasonEnum_names + 107, 22}, 3 },
  { {AppTransitionReasonEnum_names + 129, 28}, 2 },
};

static const int AppTransitionReasonEnum_entries_by_number[] = {
  0, // 0 -> APP_TRANSITION_REASON_UNKNOWN
  3, // 1 -> APP_TRANSITION_SPLASH_SCREEN
  5, // 2 -> APP_TRANSITION_WINDOWS_DRAWN
  4, // 3 -> APP_TRANSITION_TIMEOUT
  2, // 4 -> APP_TRANSITION_SNAPSHOT
  1, // 5 -> APP_TRANSITION_RECENTS_ANIM
};

const std::string& AppTransitionReasonEnum_Name(
    AppTransitionReasonEnum value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          AppTransitionReasonEnum_entries,
          AppTransitionReasonEnum_entries_by_number,
          6, AppTransitionReasonEnum_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      AppTransitionReasonEnum_entries,
      AppTransitionReasonEnum_entries_by_number,
      6, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     AppTransitionReasonEnum_strings[idx].get();
}
bool AppTransitionReasonEnum_Parse(
    const std::string& name, AppTransitionReasonEnum* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      AppTransitionReasonEnum_entries, 6, name, &int_value);
  if (success) {
    *value = static_cast<AppTransitionReasonEnum>(int_value);
  }
  return success;
}
bool ProcessStateEnum_IsValid(int value) {
  switch (value) {
    case 998:
    case 999:
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1018:
    case 1019:
    case 1020:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> ProcessStateEnum_strings[23] = {};

static const char ProcessStateEnum_names[] =
  "PROCESS_STATE_BACKUP"
  "PROCESS_STATE_BOUND_FOREGROUND_SERVICE"
  "PROCESS_STATE_BOUND_TOP"
  "PROCESS_STATE_CACHED_ACTIVITY"
  "PROCESS_STATE_CACHED_ACTIVITY_CLIENT"
  "PROCESS_STATE_CACHED_EMPTY"
  "PROCESS_STATE_CACHED_RECENT"
  "PROCESS_STATE_FOREGROUND_SERVICE"
  "PROCESS_STATE_HEAVY_WEIGHT"
  "PROCESS_STATE_HOME"
  "PROCESS_STATE_IMPORTANT_BACKGROUND"
  "PROCESS_STATE_IMPORTANT_FOREGROUND"
  "PROCESS_STATE_LAST_ACTIVITY"
  "PROCESS_STATE_NONEXISTENT"
  "PROCESS_STATE_PERSISTENT"
  "PROCESS_STATE_PERSISTENT_UI"
  "PROCESS_STATE_RECEIVER"
  "PROCESS_STATE_SERVICE"
  "PROCESS_STATE_TOP"
  "PROCESS_STATE_TOP_SLEEPING"
  "PROCESS_STATE_TRANSIENT_BACKGROUND"
  "PROCESS_STATE_UNKNOWN"
  "PROCESS_STATE_UNKNOWN_TO_PROTO";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry ProcessStateEnum_entries[] = {
  { {ProcessStateEnum_names + 0, 20}, 1008 },
  { {ProcessStateEnum_names + 20, 38}, 1004 },
  { {ProcessStateEnum_names + 58, 23}, 1020 },
  { {ProcessStateEnum_names + 81, 29}, 1015 },
  { {ProcessStateEnum_names + 110, 36}, 1016 },
  { {ProcessStateEnum_names + 146, 26}, 1018 },
  { {ProcessStateEnum_names + 172, 27}, 1017 },
  { {ProcessStateEnum_names + 199, 32}, 1003 },
  { {ProcessStateEnum_names + 231, 26}, 1012 },
  { {ProcessStateEnum_names + 257, 18}, 1013 },
  { {ProcessStateEnum_names + 275, 34}, 1006 },
  { {ProcessStateEnum_names + 309, 34}, 1005 },
  { {ProcessStateEnum_names + 343, 27}, 1014 },
  { {ProcessStateEnum_names + 370, 25}, 1019 },
  { {ProcessStateEnum_names + 395, 24}, 1000 },
  { {ProcessStateEnum_names + 419, 27}, 1001 },
  { {ProcessStateEnum_names + 446, 22}, 1010 },
  { {ProcessStateEnum_names + 468, 21}, 1009 },
  { {ProcessStateEnum_names + 489, 17}, 1002 },
  { {ProcessStateEnum_names + 506, 26}, 1011 },
  { {ProcessStateEnum_names + 532, 34}, 1007 },
  { {ProcessStateEnum_names + 566, 21}, 999 },
  { {ProcessStateEnum_names + 587, 30}, 998 },
};

static const int ProcessStateEnum_entries_by_number[] = {
  22, // 998 -> PROCESS_STATE_UNKNOWN_TO_PROTO
  21, // 999 -> PROCESS_STATE_UNKNOWN
  14, // 1000 -> PROCESS_STATE_PERSISTENT
  15, // 1001 -> PROCESS_STATE_PERSISTENT_UI
  18, // 1002 -> PROCESS_STATE_TOP
  7, // 1003 -> PROCESS_STATE_FOREGROUND_SERVICE
  1, // 1004 -> PROCESS_STATE_BOUND_FOREGROUND_SERVICE
  11, // 1005 -> PROCESS_STATE_IMPORTANT_FOREGROUND
  10, // 1006 -> PROCESS_STATE_IMPORTANT_BACKGROUND
  20, // 1007 -> PROCESS_STATE_TRANSIENT_BACKGROUND
  0, // 1008 -> PROCESS_STATE_BACKUP
  17, // 1009 -> PROCESS_STATE_SERVICE
  16, // 1010 -> PROCESS_STATE_RECEIVER
  19, // 1011 -> PROCESS_STATE_TOP_SLEEPING
  8, // 1012 -> PROCESS_STATE_HEAVY_WEIGHT
  9, // 1013 -> PROCESS_STATE_HOME
  12, // 1014 -> PROCESS_STATE_LAST_ACTIVITY
  3, // 1015 -> PROCESS_STATE_CACHED_ACTIVITY
  4, // 1016 -> PROCESS_STATE_CACHED_ACTIVITY_CLIENT
  6, // 1017 -> PROCESS_STATE_CACHED_RECENT
  5, // 1018 -> PROCESS_STATE_CACHED_EMPTY
  13, // 1019 -> PROCESS_STATE_NONEXISTENT
  2, // 1020 -> PROCESS_STATE_BOUND_TOP
};

const std::string& ProcessStateEnum_Name(
    ProcessStateEnum value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          ProcessStateEnum_entries,
          ProcessStateEnum_entries_by_number,
          23, ProcessStateEnum_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      ProcessStateEnum_entries,
      ProcessStateEnum_entries_by_number,
      23, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     ProcessStateEnum_strings[idx].get();
}
bool ProcessStateEnum_Parse(
    const std::string& name, ProcessStateEnum* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      ProcessStateEnum_entries, 23, name, &int_value);
  if (success) {
    *value = static_cast<ProcessStateEnum>(int_value);
  }
  return success;
}
bool AppOpEnum_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> AppOpEnum_strings[117] = {};

static const char AppOpEnum_names[] =
  "APP_OP_ACCEPT_HANDOVER"
  "APP_OP_ACCESS_ACCESSIBILITY"
  "APP_OP_ACCESS_MEDIA_LOCATION"
  "APP_OP_ACCESS_NOTIFICATIONS"
  "APP_OP_ACTIVATE_PLATFORM_VPN"
  "APP_OP_ACTIVATE_VPN"
  "APP_OP_ACTIVITY_RECOGNITION"
  "APP_OP_ACTIVITY_RECOGNITION_SOURCE"
  "APP_OP_ADD_VOICEMAIL"
  "APP_OP_ANSWER_PHONE_CALLS"
  "APP_OP_ASSIST_SCREENSHOT"
  "APP_OP_ASSIST_STRUCTURE"
  "APP_OP_AUDIO_ACCESSIBILITY_VOLUME"
  "APP_OP_AUDIO_ALARM_VOLUME"
  "APP_OP_AUDIO_BLUETOOTH_VOLUME"
  "APP_OP_AUDIO_MASTER_VOLUME"
  "APP_OP_AUDIO_MEDIA_VOLUME"
  "APP_OP_AUDIO_NOTIFICATION_VOLUME"
  "APP_OP_AUDIO_RING_VOLUME"
  "APP_OP_AUDIO_VOICE_VOLUME"
  "APP_OP_AUTO_REVOKE_MANAGED_BY_INSTALLER"
  "APP_OP_AUTO_REVOKE_PERMISSIONS_IF_UNUSED"
  "APP_OP_BIND_ACCESSIBILITY_SERVICE"
  "APP_OP_BLUETOOTH_ADVERTISE"
  "APP_OP_BLUETOOTH_CONNECT"
  "APP_OP_BLUETOOTH_SCAN"
  "APP_OP_BODY_SENSORS"
  "APP_OP_CALL_PHONE"
  "APP_OP_CAMERA"
  "APP_OP_CHANGE_WIFI_STATE"
  "APP_OP_COARSE_LOCATION"
  "APP_OP_COARSE_LOCATION_SOURCE"
  "APP_OP_DEPRECATED_1"
  "APP_OP_FINE_LOCATION"
  "APP_OP_FINE_LOCATION_SOURCE"
  "APP_OP_GET_ACCOUNTS"
  "APP_OP_GET_USAGE_STATS"
  "APP_OP_GPS"
  "APP_OP_INSTANT_APP_START_FOREGROUND"
  "APP_OP_INTERACT_ACROSS_PROFILES"
  "APP_OP_LEGACY_STORAGE"
  "APP_OP_LOADER_USAGE_STATS"
  "APP_OP_MANAGE_CREDENTIALS"
  "APP_OP_MANAGE_EXTERNAL_STORAGE"
  "APP_OP_MANAGE_IPSEC_TUNNELS"
  "APP_OP_MANAGE_MEDIA"
  "APP_OP_MANAGE_ONGOING_CALLS"
  "APP_OP_MOCK_LOCATION"
  "APP_OP_MONITOR_HIGH_POWER_LOCATION"
  "APP_OP_MONITOR_LOCATION"
  "APP_OP_MUTE_MICROPHONE"
  "APP_OP_NEIGHBORING_CELLS"
  "APP_OP_NONE"
  "APP_OP_NO_ISOLATED_STORAGE"
  "APP_OP_PHONE_CALL_CAMERA"
  "APP_OP_PHONE_CALL_MICROPHONE"
  "APP_OP_PICTURE_IN_PICTURE"
  "APP_OP_PLAY_AUDIO"
  "APP_OP_POST_NOTIFICATION"
  "APP_OP_PROCESS_OUTGOING_CALLS"
  "APP_OP_PROJECT_MEDIA"
  "APP_OP_QUERY_ALL_PACKAGES"
  "APP_OP_READ_CALENDAR"
  "APP_OP_READ_CALL_LOG"
  "APP_OP_READ_CELL_BROADCASTS"
  "APP_OP_READ_CLIPBOARD"
  "APP_OP_READ_CONTACTS"
  "APP_OP_READ_DEVICE_IDENTIFIERS"
  "APP_OP_READ_EXTERNAL_STORAGE"
  "APP_OP_READ_ICC_SMS"
  "APP_OP_READ_MEDIA_AUDIO"
  "APP_OP_READ_MEDIA_IMAGES"
  "APP_OP_READ_MEDIA_VIDEO"
  "APP_OP_READ_PHONE_NUMBERS"
  "APP_OP_READ_PHONE_STATE"
  "APP_OP_READ_SMS"
  "APP_OP_RECEIVE_EMERGENCY_SMS"
  "APP_OP_RECEIVE_MMS"
  "APP_OP_RECEIVE_SMS"
  "APP_OP_RECEIVE_WAP_PUSH"
  "APP_OP_RECORD_AUDIO"
  "APP_OP_RECORD_AUDIO_HOTWORD"
  "APP_OP_RECORD_AUDIO_OUTPUT"
  "APP_OP_RECORD_INCOMING_PHONE_AUDIO"
  "APP_OP_REQUEST_DELETE_PACKAGES"
  "APP_OP_REQUEST_INSTALL_PACKAGES"
  "APP_OP_RUN_ANY_IN_BACKGROUND"
  "APP_OP_RUN_IN_BACKGROUND"
  "APP_OP_SCHEDULE_EXACT_ALARM"
  "APP_OP_SEND_SMS"
  "APP_OP_SMS_FINANCIAL_TRANSACTIONS"
  "APP_OP_START_FOREGROUND"
  "APP_OP_SYSTEM_ALERT_WINDOW"
  "APP_OP_TAKE_AUDIO_FOCUS"
  "APP_OP_TAKE_MEDIA_BUTTONS"
  "APP_OP_TOAST_WINDOW"
  "APP_OP_TURN_SCREEN_ON"
  "APP_OP_USE_BIOMETRIC"
  "APP_OP_USE_FINGERPRINT"
  "APP_OP_USE_ICC_AUTH_WITH_DEVICE_IDENTIFIER"
  "APP_OP_USE_SIP"
  "APP_OP_UWB_RANGING"
  "APP_OP_VIBRATE"
  "APP_OP_WAKE_LOCK"
  "APP_OP_WIFI_SCAN"
  "APP_OP_WRITE_CALENDAR"
  "APP_OP_WRITE_CALL_LOG"
  "APP_OP_WRITE_CLIPBOARD"
  "APP_OP_WRITE_CONTACTS"
  "APP_OP_WRITE_EXTERNAL_STORAGE"
  "APP_OP_WRITE_ICC_SMS"
  "APP_OP_WRITE_MEDIA_AUDIO"
  "APP_OP_WRITE_MEDIA_IMAGES"
  "APP_OP_WRITE_MEDIA_VIDEO"
  "APP_OP_WRITE_SETTINGS"
  "APP_OP_WRITE_SMS"
  "APP_OP_WRITE_WALLPAPER";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry AppOpEnum_entries[] = {
  { {AppOpEnum_names + 0, 22}, 74 },
  { {AppOpEnum_names + 22, 27}, 88 },
  { {AppOpEnum_names + 49, 28}, 90 },
  { {AppOpEnum_names + 77, 27}, 25 },
  { {AppOpEnum_names + 104, 28}, 94 },
  { {AppOpEnum_names + 132, 19}, 47 },
  { {AppOpEnum_names + 151, 27}, 79 },
  { {AppOpEnum_names + 178, 34}, 113 },
  { {AppOpEnum_names + 212, 20}, 52 },
  { {AppOpEnum_names + 232, 25}, 69 },
  { {AppOpEnum_names + 257, 24}, 50 },
  { {AppOpEnum_names + 281, 23}, 49 },
  { {AppOpEnum_names + 304, 33}, 64 },
  { {AppOpEnum_names + 337, 25}, 37 },
  { {AppOpEnum_names + 362, 29}, 39 },
  { {AppOpEnum_names + 391, 26}, 33 },
  { {AppOpEnum_names + 417, 25}, 36 },
  { {AppOpEnum_names + 442, 32}, 38 },
  { {AppOpEnum_names + 474, 24}, 35 },
  { {AppOpEnum_names + 498, 25}, 34 },
  { {AppOpEnum_names + 523, 39}, 98 },
  { {AppOpEnum_names + 562, 40}, 97 },
  { {AppOpEnum_names + 602, 33}, 73 },
  { {AppOpEnum_names + 635, 26}, 114 },
  { {AppOpEnum_names + 661, 24}, 111 },
  { {AppOpEnum_names + 685, 21}, 77 },
  { {AppOpEnum_names + 706, 19}, 56 },
  { {AppOpEnum_names + 725, 17}, 13 },
  { {AppOpEnum_names + 742, 13}, 26 },
  { {AppOpEnum_names + 755, 24}, 71 },
  { {AppOpEnum_names + 779, 22}, 0 },
  { {AppOpEnum_names + 801, 29}, 109 },
  { {AppOpEnum_names + 830, 19}, 96 },
  { {AppOpEnum_names + 849, 20}, 1 },
  { {AppOpEnum_names + 869, 27}, 108 },
  { {AppOpEnum_names + 896, 19}, 62 },
  { {AppOpEnum_names + 915, 22}, 43 },
  { {AppOpEnum_names + 937, 10}, 2 },
  { {AppOpEnum_names + 947, 35}, 68 },
  { {AppOpEnum_names + 982, 31}, 93 },
  { {AppOpEnum_names + 1013, 21}, 87 },
  { {AppOpEnum_names + 1034, 25}, 95 },
  { {AppOpEnum_names + 1059, 25}, 104 },
  { {AppOpEnum_names + 1084, 30}, 92 },
  { {AppOpEnum_names + 1114, 27}, 75 },
  { {AppOpEnum_names + 1141, 19}, 110 },
  { {AppOpEnum_names + 1160, 27}, 103 },
  { {AppOpEnum_names + 1187, 20}, 58 },
  { {AppOpEnum_names + 1207, 34}, 42 },
  { {AppOpEnum_names + 1241, 23}, 41 },
  { {AppOpEnum_names + 1264, 22}, 44 },
  { {AppOpEnum_names + 1286, 24}, 12 },
  { {AppOpEnum_names + 1310, 11}, -1 },
  { {AppOpEnum_names + 1321, 26}, 99 },
  { {AppOpEnum_names + 1347, 24}, 101 },
  { {AppOpEnum_names + 1371, 28}, 100 },
  { {AppOpEnum_names + 1399, 25}, 67 },
  { {AppOpEnum_names + 1424, 17}, 28 },
  { {AppOpEnum_names + 1441, 24}, 11 },
  { {AppOpEnum_names + 1465, 29}, 54 },
  { {AppOpEnum_names + 1494, 20}, 46 },
  { {AppOpEnum_names + 1514, 25}, 91 },
  { {AppOpEnum_names + 1539, 20}, 8 },
  { {AppOpEnum_names + 1559, 20}, 6 },
  { {AppOpEnum_names + 1579, 27}, 57 },
  { {AppOpEnum_names + 1606, 21}, 29 },
  { {AppOpEnum_names + 1627, 20}, 4 },
  { {AppOpEnum_names + 1647, 30}, 89 },
  { {AppOpEnum_names + 1677, 28}, 59 },
  { {AppOpEnum_names + 1705, 19}, 21 },
  { {AppOpEnum_names + 1724, 23}, 81 },
  { {AppOpEnum_names + 1747, 24}, 85 },
  { {AppOpEnum_names + 1771, 23}, 83 },
  { {AppOpEnum_names + 1794, 25}, 65 },
  { {AppOpEnum_names + 1819, 23}, 51 },
  { {AppOpEnum_names + 1842, 15}, 14 },
  { {AppOpEnum_names + 1857, 28}, 17 },
  { {AppOpEnum_names + 1885, 18}, 18 },
  { {AppOpEnum_names + 1903, 18}, 16 },
  { {AppOpEnum_names + 1921, 23}, 19 },
  { {AppOpEnum_names + 1944, 19}, 27 },
  { {AppOpEnum_names + 1963, 27}, 102 },
  { {AppOpEnum_names + 1990, 26}, 106 },
  { {AppOpEnum_names + 2016, 34}, 115 },
  { {AppOpEnum_names + 2050, 30}, 72 },
  { {AppOpEnum_names + 2080, 31}, 66 },
  { {AppOpEnum_names + 2111, 28}, 70 },
  { {AppOpEnum_names + 2139, 24}, 63 },
  { {AppOpEnum_names + 2163, 27}, 107 },
  { {AppOpEnum_names + 2190, 15}, 20 },
  { {AppOpEnum_names + 2205, 33}, 80 },
  { {AppOpEnum_names + 2238, 23}, 76 },
  { {AppOpEnum_names + 2261, 26}, 24 },
  { {AppOpEnum_names + 2287, 23}, 32 },
  { {AppOpEnum_names + 2310, 25}, 31 },
  { {AppOpEnum_names + 2335, 19}, 45 },
  { {AppOpEnum_names + 2354, 21}, 61 },
  { {AppOpEnum_names + 2375, 20}, 78 },
  { {AppOpEnum_names + 2395, 22}, 55 },
  { {AppOpEnum_names + 2417, 42}, 105 },
  { {AppOpEnum_names + 2459, 14}, 53 },
  { {AppOpEnum_names + 2473, 18}, 112 },
  { {AppOpEnum_names + 2491, 14}, 3 },
  { {AppOpEnum_names + 2505, 16}, 40 },
  { {AppOpEnum_names + 2521, 16}, 10 },
  { {AppOpEnum_names + 2537, 21}, 9 },
  { {AppOpEnum_names + 2558, 21}, 7 },
  { {AppOpEnum_names + 2579, 22}, 30 },
  { {AppOpEnum_names + 2601, 21}, 5 },
  { {AppOpEnum_names + 2622, 29}, 60 },
  { {AppOpEnum_names + 2651, 20}, 22 },
  { {AppOpEnum_names + 2671, 24}, 82 },
  { {AppOpEnum_names + 2695, 25}, 86 },
  { {AppOpEnum_names + 2720, 24}, 84 },
  { {AppOpEnum_names + 2744, 21}, 23 },
  { {AppOpEnum_names + 2765, 16}, 15 },
  { {AppOpEnum_names + 2781, 22}, 48 },
};

static const int AppOpEnum_entries_by_number[] = {
  52, // -1 -> APP_OP_NONE
  30, // 0 -> APP_OP_COARSE_LOCATION
  33, // 1 -> APP_OP_FINE_LOCATION
  37, // 2 -> APP_OP_GPS
  102, // 3 -> APP_OP_VIBRATE
  66, // 4 -> APP_OP_READ_CONTACTS
  108, // 5 -> APP_OP_WRITE_CONTACTS
  63, // 6 -> APP_OP_READ_CALL_LOG
  106, // 7 -> APP_OP_WRITE_CALL_LOG
  62, // 8 -> APP_OP_READ_CALENDAR
  105, // 9 -> APP_OP_WRITE_CALENDAR
  104, // 10 -> APP_OP_WIFI_SCAN
  58, // 11 -> APP_OP_POST_NOTIFICATION
  51, // 12 -> APP_OP_NEIGHBORING_CELLS
  27, // 13 -> APP_OP_CALL_PHONE
  75, // 14 -> APP_OP_READ_SMS
  115, // 15 -> APP_OP_WRITE_SMS
  78, // 16 -> APP_OP_RECEIVE_SMS
  76, // 17 -> APP_OP_RECEIVE_EMERGENCY_SMS
  77, // 18 -> APP_OP_RECEIVE_MMS
  79, // 19 -> APP_OP_RECEIVE_WAP_PUSH
  89, // 20 -> APP_OP_SEND_SMS
  69, // 21 -> APP_OP_READ_ICC_SMS
  110, // 22 -> APP_OP_WRITE_ICC_SMS
  114, // 23 -> APP_OP_WRITE_SETTINGS
  92, // 24 -> APP_OP_SYSTEM_ALERT_WINDOW
  3, // 25 -> APP_OP_ACCESS_NOTIFICATIONS
  28, // 26 -> APP_OP_CAMERA
  80, // 27 -> APP_OP_RECORD_AUDIO
  57, // 28 -> APP_OP_PLAY_AUDIO
  65, // 29 -> APP_OP_READ_CLIPBOARD
  107, // 30 -> APP_OP_WRITE_CLIPBOARD
  94, // 31 -> APP_OP_TAKE_MEDIA_BUTTONS
  93, // 32 -> APP_OP_TAKE_AUDIO_FOCUS
  15, // 33 -> APP_OP_AUDIO_MASTER_VOLUME
  19, // 34 -> APP_OP_AUDIO_VOICE_VOLUME
  18, // 35 -> APP_OP_AUDIO_RING_VOLUME
  16, // 36 -> APP_OP_AUDIO_MEDIA_VOLUME
  13, // 37 -> APP_OP_AUDIO_ALARM_VOLUME
  17, // 38 -> APP_OP_AUDIO_NOTIFICATION_VOLUME
  14, // 39 -> APP_OP_AUDIO_BLUETOOTH_VOLUME
  103, // 40 -> APP_OP_WAKE_LOCK
  49, // 41 -> APP_OP_MONITOR_LOCATION
  48, // 42 -> APP_OP_MONITOR_HIGH_POWER_LOCATION
  36, // 43 -> APP_OP_GET_USAGE_STATS
  50, // 44 -> APP_OP_MUTE_MICROPHONE
  95, // 45 -> APP_OP_TOAST_WINDOW
  60, // 46 -> APP_OP_PROJECT_MEDIA
  5, // 47 -> APP_OP_ACTIVATE_VPN
  116, // 48 -> APP_OP_WRITE_WALLPAPER
  11, // 49 -> APP_OP_ASSIST_STRUCTURE
  10, // 50 -> APP_OP_ASSIST_SCREENSHOT
  74, // 51 -> APP_OP_READ_PHONE_STATE
  8, // 52 -> APP_OP_ADD_VOICEMAIL
  100, // 53 -> APP_OP_USE_SIP
  59, // 54 -> APP_OP_PROCESS_OUTGOING_CALLS
  98, // 55 -> APP_OP_USE_FINGERPRINT
  26, // 56 -> APP_OP_BODY_SENSORS
  64, // 57 -> APP_OP_READ_CELL_BROADCASTS
  47, // 58 -> APP_OP_MOCK_LOCATION
  68, // 59 -> APP_OP_READ_EXTERNAL_STORAGE
  109, // 60 -> APP_OP_WRITE_EXTERNAL_STORAGE
  96, // 61 -> APP_OP_TURN_SCREEN_ON
  35, // 62 -> APP_OP_GET_ACCOUNTS
  87, // 63 -> APP_OP_RUN_IN_BACKGROUND
  12, // 64 -> APP_OP_AUDIO_ACCESSIBILITY_VOLUME
  73, // 65 -> APP_OP_READ_PHONE_NUMBERS
  85, // 66 -> APP_OP_REQUEST_INSTALL_PACKAGES
  56, // 67 -> APP_OP_PICTURE_IN_PICTURE
  38, // 68 -> APP_OP_INSTANT_APP_START_FOREGROUND
  9, // 69 -> APP_OP_ANSWER_PHONE_CALLS
  86, // 70 -> APP_OP_RUN_ANY_IN_BACKGROUND
  29, // 71 -> APP_OP_CHANGE_WIFI_STATE
  84, // 72 -> APP_OP_REQUEST_DELETE_PACKAGES
  22, // 73 -> APP_OP_BIND_ACCESSIBILITY_SERVICE
  0, // 74 -> APP_OP_ACCEPT_HANDOVER
  44, // 75 -> APP_OP_MANAGE_IPSEC_TUNNELS
  91, // 76 -> APP_OP_START_FOREGROUND
  25, // 77 -> APP_OP_BLUETOOTH_SCAN
  97, // 78 -> APP_OP_USE_BIOMETRIC
  6, // 79 -> APP_OP_ACTIVITY_RECOGNITION
  90, // 80 -> APP_OP_SMS_FINANCIAL_TRANSACTIONS
  70, // 81 -> APP_OP_READ_MEDIA_AUDIO
  111, // 82 -> APP_OP_WRITE_MEDIA_AUDIO
  72, // 83 -> APP_OP_READ_MEDIA_VIDEO
  113, // 84 -> APP_OP_WRITE_MEDIA_VIDEO
  71, // 85 -> APP_OP_READ_MEDIA_IMAGES
  112, // 86 -> APP_OP_WRITE_MEDIA_IMAGES
  40, // 87 -> APP_OP_LEGACY_STORAGE
  1, // 88 -> APP_OP_ACCESS_ACCESSIBILITY
  67, // 89 -> APP_OP_READ_DEVICE_IDENTIFIERS
  2, // 90 -> APP_OP_ACCESS_MEDIA_LOCATION
  61, // 91 -> APP_OP_QUERY_ALL_PACKAGES
  43, // 92 -> APP_OP_MANAGE_EXTERNAL_STORAGE
  39, // 93 -> APP_OP_INTERACT_ACROSS_PROFILES
  4, // 94 -> APP_OP_ACTIVATE_PLATFORM_VPN
  41, // 95 -> APP_OP_LOADER_USAGE_STATS
  32, // 96 -> APP_OP_DEPRECATED_1
  21, // 97 -> APP_OP_AUTO_REVOKE_PERMISSIONS_IF_UNUSED
  20, // 98 -> APP_OP_AUTO_REVOKE_MANAGED_BY_INSTALLER
  53, // 99 -> APP_OP_NO_ISOLATED_STORAGE
  55, // 100 -> APP_OP_PHONE_CALL_MICROPHONE
  54, // 101 -> APP_OP_PHONE_CALL_CAMERA
  81, // 102 -> APP_OP_RECORD_AUDIO_HOTWORD
  46, // 103 -> APP_OP_MANAGE_ONGOING_CALLS
  42, // 104 -> APP_OP_MANAGE_CREDENTIALS
  99, // 105 -> APP_OP_USE_ICC_AUTH_WITH_DEVICE_IDENTIFIER
  82, // 106 -> APP_OP_RECORD_AUDIO_OUTPUT
  88, // 107 -> APP_OP_SCHEDULE_EXACT_ALARM
  34, // 108 -> APP_OP_FINE_LOCATION_SOURCE
  31, // 109 -> APP_OP_COARSE_LOCATION_SOURCE
  45, // 110 -> APP_OP_MANAGE_MEDIA
  24, // 111 -> APP_OP_BLUETOOTH_CONNECT
  101, // 112 -> APP_OP_UWB_RANGING
  7, // 113 -> APP_OP_ACTIVITY_RECOGNITION_SOURCE
  23, // 114 -> APP_OP_BLUETOOTH_ADVERTISE
  83, // 115 -> APP_OP_RECORD_INCOMING_PHONE_AUDIO
};

const std::string& AppOpEnum_Name(
    AppOpEnum value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          AppOpEnum_entries,
          AppOpEnum_entries_by_number,
          117, AppOpEnum_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      AppOpEnum_entries,
      AppOpEnum_entries_by_number,
      117, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     AppOpEnum_strings[idx].get();
}
bool AppOpEnum_Parse(
    const std::string& name, AppOpEnum* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      AppOpEnum_entries, 117, name, &int_value);
  if (success) {
    *value = static_cast<AppOpEnum>(int_value);
  }
  return success;
}
bool AppExitReasonCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> AppExitReasonCode_strings[14] = {};

static const char AppExitReasonCode_names[] =
  "REASON_ANR"
  "REASON_CRASH"
  "REASON_CRASH_NATIVE"
  "REASON_DEPENDENCY_DIED"
  "REASON_EXCESSIVE_RESOURCE_USAGE"
  "REASON_EXIT_SELF"
  "REASON_INITIALIZATION_FAILURE"
  "REASON_LOW_MEMORY"
  "REASON_OTHER"
  "REASON_PERMISSION_CHANGE"
  "REASON_SIGNALED"
  "REASON_UNKNOWN"
  "REASON_USER_REQUESTED"
  "REASON_USER_STOPPED";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry AppExitReasonCode_entries[] = {
  { {AppExitReasonCode_names + 0, 10}, 6 },
  { {AppExitReasonCode_names + 10, 12}, 4 },
  { {AppExitReasonCode_names + 22, 19}, 5 },
  { {AppExitReasonCode_names + 41, 22}, 12 },
  { {AppExitReasonCode_names + 63, 31}, 9 },
  { {AppExitReasonCode_names + 94, 16}, 1 },
  { {AppExitReasonCode_names + 110, 29}, 7 },
  { {AppExitReasonCode_names + 139, 17}, 3 },
  { {AppExitReasonCode_names + 156, 12}, 13 },
  { {AppExitReasonCode_names + 168, 24}, 8 },
  { {AppExitReasonCode_names + 192, 15}, 2 },
  { {AppExitReasonCode_names + 207, 14}, 0 },
  { {AppExitReasonCode_names + 221, 21}, 10 },
  { {AppExitReasonCode_names + 242, 19}, 11 },
};

static const int AppExitReasonCode_entries_by_number[] = {
  11, // 0 -> REASON_UNKNOWN
  5, // 1 -> REASON_EXIT_SELF
  10, // 2 -> REASON_SIGNALED
  7, // 3 -> REASON_LOW_MEMORY
  1, // 4 -> REASON_CRASH
  2, // 5 -> REASON_CRASH_NATIVE
  0, // 6 -> REASON_ANR
  6, // 7 -> REASON_INITIALIZATION_FAILURE
  9, // 8 -> REASON_PERMISSION_CHANGE
  4, // 9 -> REASON_EXCESSIVE_RESOURCE_USAGE
  12, // 10 -> REASON_USER_REQUESTED
  13, // 11 -> REASON_USER_STOPPED
  3, // 12 -> REASON_DEPENDENCY_DIED
  8, // 13 -> REASON_OTHER
};

const std::string& AppExitReasonCode_Name(
    AppExitReasonCode value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          AppExitReasonCode_entries,
          AppExitReasonCode_entries_by_number,
          14, AppExitReasonCode_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      AppExitReasonCode_entries,
      AppExitReasonCode_entries_by_number,
      14, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     AppExitReasonCode_strings[idx].get();
}
bool AppExitReasonCode_Parse(
    const std::string& name, AppExitReasonCode* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      AppExitReasonCode_entries, 14, name, &int_value);
  if (success) {
    *value = static_cast<AppExitReasonCode>(int_value);
  }
  return success;
}
bool AppExitSubReasonCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> AppExitSubReasonCode_strings[21] = {};

static const char AppExitSubReasonCode_names[] =
  "SUBREASON_CACHED_IDLE_FORCED_APP_STANDBY"
  "SUBREASON_EXCESSIVE_CPU"
  "SUBREASON_FREEZER_BINDER_IOCTL"
  "SUBREASON_FREEZER_BINDER_TRANSACTION"
  "SUBREASON_IMPERCEPTIBLE"
  "SUBREASON_INVALID_START"
  "SUBREASON_INVALID_STATE"
  "SUBREASON_ISOLATED_NOT_NEEDED"
  "SUBREASON_KILL_ALL_BG_EXCEPT"
  "SUBREASON_KILL_ALL_FG"
  "SUBREASON_KILL_PID"
  "SUBREASON_KILL_UID"
  "SUBREASON_LARGE_CACHED"
  "SUBREASON_MEMORY_PRESSURE"
  "SUBREASON_REMOVE_LRU"
  "SUBREASON_SYSTEM_UPDATE_DONE"
  "SUBREASON_TOO_MANY_CACHED"
  "SUBREASON_TOO_MANY_EMPTY"
  "SUBREASON_TRIM_EMPTY"
  "SUBREASON_UNKNOWN"
  "SUBREASON_WAIT_FOR_DEBUGGER";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry AppExitSubReasonCode_entries[] = {
  { {AppExitSubReasonCode_names + 0, 40}, 18 },
  { {AppExitSubReasonCode_names + 40, 23}, 7 },
  { {AppExitSubReasonCode_names + 63, 30}, 19 },
  { {AppExitSubReasonCode_names + 93, 36}, 20 },
  { {AppExitSubReasonCode_names + 129, 23}, 15 },
  { {AppExitSubReasonCode_names + 152, 23}, 13 },
  { {AppExitSubReasonCode_names + 175, 23}, 14 },
  { {AppExitSubReasonCode_names + 198, 29}, 17 },
  { {AppExitSubReasonCode_names + 227, 28}, 10 },
  { {AppExitSubReasonCode_names + 255, 21}, 9 },
  { {AppExitSubReasonCode_names + 276, 18}, 12 },
  { {AppExitSubReasonCode_names + 294, 18}, 11 },
  { {AppExitSubReasonCode_names + 312, 22}, 5 },
  { {AppExitSubReasonCode_names + 334, 25}, 6 },
  { {AppExitSubReasonCode_names + 359, 20}, 16 },
  { {AppExitSubReasonCode_names + 379, 28}, 8 },
  { {AppExitSubReasonCode_names + 407, 25}, 2 },
  { {AppExitSubReasonCode_names + 432, 24}, 3 },
  { {AppExitSubReasonCode_names + 456, 20}, 4 },
  { {AppExitSubReasonCode_names + 476, 17}, 0 },
  { {AppExitSubReasonCode_names + 493, 27}, 1 },
};

static const int AppExitSubReasonCode_entries_by_number[] = {
  19, // 0 -> SUBREASON_UNKNOWN
  20, // 1 -> SUBREASON_WAIT_FOR_DEBUGGER
  16, // 2 -> SUBREASON_TOO_MANY_CACHED
  17, // 3 -> SUBREASON_TOO_MANY_EMPTY
  18, // 4 -> SUBREASON_TRIM_EMPTY
  12, // 5 -> SUBREASON_LARGE_CACHED
  13, // 6 -> SUBREASON_MEMORY_PRESSURE
  1, // 7 -> SUBREASON_EXCESSIVE_CPU
  15, // 8 -> SUBREASON_SYSTEM_UPDATE_DONE
  9, // 9 -> SUBREASON_KILL_ALL_FG
  8, // 10 -> SUBREASON_KILL_ALL_BG_EXCEPT
  11, // 11 -> SUBREASON_KILL_UID
  10, // 12 -> SUBREASON_KILL_PID
  5, // 13 -> SUBREASON_INVALID_START
  6, // 14 -> SUBREASON_INVALID_STATE
  4, // 15 -> SUBREASON_IMPERCEPTIBLE
  14, // 16 -> SUBREASON_REMOVE_LRU
  7, // 17 -> SUBREASON_ISOLATED_NOT_NEEDED
  0, // 18 -> SUBREASON_CACHED_IDLE_FORCED_APP_STANDBY
  2, // 19 -> SUBREASON_FREEZER_BINDER_IOCTL
  3, // 20 -> SUBREASON_FREEZER_BINDER_TRANSACTION
};

const std::string& AppExitSubReasonCode_Name(
    AppExitSubReasonCode value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          AppExitSubReasonCode_entries,
          AppExitSubReasonCode_entries_by_number,
          21, AppExitSubReasonCode_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      AppExitSubReasonCode_entries,
      AppExitSubReasonCode_entries_by_number,
      21, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     AppExitSubReasonCode_strings[idx].get();
}
bool AppExitSubReasonCode_Parse(
    const std::string& name, AppExitSubReasonCode* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      AppExitSubReasonCode_entries, 21, name, &int_value);
  if (success) {
    *value = static_cast<AppExitSubReasonCode>(int_value);
  }
  return success;
}
bool Importance_IsValid(int value) {
  switch (value) {
    case 100:
    case 125:
    case 130:
    case 150:
    case 170:
    case 200:
    case 230:
    case 300:
    case 325:
    case 350:
    case 400:
    case 500:
    case 1000:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> Importance_strings[13] = {};

static const char Importance_names[] =
  "IMPORTANCE_BACKGROUND"
  "IMPORTANCE_CACHED"
  "IMPORTANCE_CANT_SAVE_STATE"
  "IMPORTANCE_CANT_SAVE_STATE_PRE_26"
  "IMPORTANCE_EMPTY"
  "IMPORTANCE_FOREGROUND"
  "IMPORTANCE_FOREGROUND_SERVICE"
  "IMPORTANCE_GONE"
  "IMPORTANCE_PERCEPTIBLE"
  "IMPORTANCE_PERCEPTIBLE_PRE_26"
  "IMPORTANCE_SERVICE"
  "IMPORTANCE_TOP_SLEEPING"
  "IMPORTANCE_TOP_SLEEPING_PRE_28"
  "IMPORTANCE_VISIBLE";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry Importance_entries[] = {
  { {Importance_names + 0, 21}, 400 },
  { {Importance_names + 21, 17}, 400 },
  { {Importance_names + 38, 26}, 350 },
  { {Importance_names + 64, 33}, 170 },
  { {Importance_names + 97, 16}, 500 },
  { {Importance_names + 113, 21}, 100 },
  { {Importance_names + 134, 29}, 125 },
  { {Importance_names + 163, 15}, 1000 },
  { {Importance_names + 178, 22}, 230 },
  { {Importance_names + 200, 29}, 130 },
  { {Importance_names + 229, 18}, 300 },
  { {Importance_names + 247, 23}, 325 },
  { {Importance_names + 270, 30}, 150 },
  { {Importance_names + 300, 18}, 200 },
};

static const int Importance_entries_by_number[] = {
  5, // 100 -> IMPORTANCE_FOREGROUND
  6, // 125 -> IMPORTANCE_FOREGROUND_SERVICE
  9, // 130 -> IMPORTANCE_PERCEPTIBLE_PRE_26
  12, // 150 -> IMPORTANCE_TOP_SLEEPING_PRE_28
  3, // 170 -> IMPORTANCE_CANT_SAVE_STATE_PRE_26
  13, // 200 -> IMPORTANCE_VISIBLE
  8, // 230 -> IMPORTANCE_PERCEPTIBLE
  10, // 300 -> IMPORTANCE_SERVICE
  11, // 325 -> IMPORTANCE_TOP_SLEEPING
  2, // 350 -> IMPORTANCE_CANT_SAVE_STATE
  1, // 400 -> IMPORTANCE_CACHED
  4, // 500 -> IMPORTANCE_EMPTY
  7, // 1000 -> IMPORTANCE_GONE
};

const std::string& Importance_Name(
    Importance value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          Importance_entries,
          Importance_entries_by_number,
          13, Importance_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      Importance_entries,
      Importance_entries_by_number,
      13, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     Importance_strings[idx].get();
}
bool Importance_Parse(
    const std::string& name, Importance* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      Importance_entries, 14, name, &int_value);
  if (success) {
    *value = static_cast<Importance>(int_value);
  }
  return success;
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace app
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
