// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/os/worksource.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace os {
class WorkSourceProto;
class WorkSourceProtoDefaultTypeInternal;
extern WorkSourceProtoDefaultTypeInternal _WorkSourceProto_default_instance_;
class WorkSourceProto_WorkChain;
class WorkSourceProto_WorkChainDefaultTypeInternal;
extern WorkSourceProto_WorkChainDefaultTypeInternal _WorkSourceProto_WorkChain_default_instance_;
class WorkSourceProto_WorkSourceContentProto;
class WorkSourceProto_WorkSourceContentProtoDefaultTypeInternal;
extern WorkSourceProto_WorkSourceContentProtoDefaultTypeInternal _WorkSourceProto_WorkSourceContentProto_default_instance_;
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::os::WorkSourceProto* Arena::CreateMaybeMessage<::android::os::WorkSourceProto>(Arena*);
template<> ::android::os::WorkSourceProto_WorkChain* Arena::CreateMaybeMessage<::android::os::WorkSourceProto_WorkChain>(Arena*);
template<> ::android::os::WorkSourceProto_WorkSourceContentProto* Arena::CreateMaybeMessage<::android::os::WorkSourceProto_WorkSourceContentProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace os {

// ===================================================================

class WorkSourceProto_WorkSourceContentProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.WorkSourceProto.WorkSourceContentProto) */ {
 public:
  WorkSourceProto_WorkSourceContentProto();
  virtual ~WorkSourceProto_WorkSourceContentProto();

  WorkSourceProto_WorkSourceContentProto(const WorkSourceProto_WorkSourceContentProto& from);
  WorkSourceProto_WorkSourceContentProto(WorkSourceProto_WorkSourceContentProto&& from) noexcept
    : WorkSourceProto_WorkSourceContentProto() {
    *this = ::std::move(from);
  }

  inline WorkSourceProto_WorkSourceContentProto& operator=(const WorkSourceProto_WorkSourceContentProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline WorkSourceProto_WorkSourceContentProto& operator=(WorkSourceProto_WorkSourceContentProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const WorkSourceProto_WorkSourceContentProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkSourceProto_WorkSourceContentProto* internal_default_instance() {
    return reinterpret_cast<const WorkSourceProto_WorkSourceContentProto*>(
               &_WorkSourceProto_WorkSourceContentProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(WorkSourceProto_WorkSourceContentProto& a, WorkSourceProto_WorkSourceContentProto& b) {
    a.Swap(&b);
  }
  inline void Swap(WorkSourceProto_WorkSourceContentProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WorkSourceProto_WorkSourceContentProto* New() const final {
    return CreateMaybeMessage<WorkSourceProto_WorkSourceContentProto>(nullptr);
  }

  WorkSourceProto_WorkSourceContentProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WorkSourceProto_WorkSourceContentProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const WorkSourceProto_WorkSourceContentProto& from);
  void MergeFrom(const WorkSourceProto_WorkSourceContentProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorkSourceProto_WorkSourceContentProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.WorkSourceProto.WorkSourceContentProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kUidFieldNumber = 1,
  };
  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.os.WorkSourceProto.WorkSourceContentProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto;
};
// -------------------------------------------------------------------

class WorkSourceProto_WorkChain :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.WorkSourceProto.WorkChain) */ {
 public:
  WorkSourceProto_WorkChain();
  virtual ~WorkSourceProto_WorkChain();

  WorkSourceProto_WorkChain(const WorkSourceProto_WorkChain& from);
  WorkSourceProto_WorkChain(WorkSourceProto_WorkChain&& from) noexcept
    : WorkSourceProto_WorkChain() {
    *this = ::std::move(from);
  }

  inline WorkSourceProto_WorkChain& operator=(const WorkSourceProto_WorkChain& from) {
    CopyFrom(from);
    return *this;
  }
  inline WorkSourceProto_WorkChain& operator=(WorkSourceProto_WorkChain&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const WorkSourceProto_WorkChain& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkSourceProto_WorkChain* internal_default_instance() {
    return reinterpret_cast<const WorkSourceProto_WorkChain*>(
               &_WorkSourceProto_WorkChain_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(WorkSourceProto_WorkChain& a, WorkSourceProto_WorkChain& b) {
    a.Swap(&b);
  }
  inline void Swap(WorkSourceProto_WorkChain* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WorkSourceProto_WorkChain* New() const final {
    return CreateMaybeMessage<WorkSourceProto_WorkChain>(nullptr);
  }

  WorkSourceProto_WorkChain* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WorkSourceProto_WorkChain>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const WorkSourceProto_WorkChain& from);
  void MergeFrom(const WorkSourceProto_WorkChain& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorkSourceProto_WorkChain* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.WorkSourceProto.WorkChain";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNodesFieldNumber = 1,
  };
  // repeated .android.os.WorkSourceProto.WorkSourceContentProto nodes = 1;
  int nodes_size() const;
  void clear_nodes();
  ::android::os::WorkSourceProto_WorkSourceContentProto* mutable_nodes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkSourceContentProto >*
      mutable_nodes();
  const ::android::os::WorkSourceProto_WorkSourceContentProto& nodes(int index) const;
  ::android::os::WorkSourceProto_WorkSourceContentProto* add_nodes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkSourceContentProto >&
      nodes() const;

  // @@protoc_insertion_point(class_scope:android.os.WorkSourceProto.WorkChain)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkSourceContentProto > nodes_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto;
};
// -------------------------------------------------------------------

class WorkSourceProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.os.WorkSourceProto) */ {
 public:
  WorkSourceProto();
  virtual ~WorkSourceProto();

  WorkSourceProto(const WorkSourceProto& from);
  WorkSourceProto(WorkSourceProto&& from) noexcept
    : WorkSourceProto() {
    *this = ::std::move(from);
  }

  inline WorkSourceProto& operator=(const WorkSourceProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline WorkSourceProto& operator=(WorkSourceProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const WorkSourceProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkSourceProto* internal_default_instance() {
    return reinterpret_cast<const WorkSourceProto*>(
               &_WorkSourceProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(WorkSourceProto& a, WorkSourceProto& b) {
    a.Swap(&b);
  }
  inline void Swap(WorkSourceProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WorkSourceProto* New() const final {
    return CreateMaybeMessage<WorkSourceProto>(nullptr);
  }

  WorkSourceProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WorkSourceProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const WorkSourceProto& from);
  void MergeFrom(const WorkSourceProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorkSourceProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.os.WorkSourceProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef WorkSourceProto_WorkSourceContentProto WorkSourceContentProto;
  typedef WorkSourceProto_WorkChain WorkChain;

  // accessors -------------------------------------------------------

  enum : int {
    kWorkSourceContentsFieldNumber = 1,
    kWorkChainsFieldNumber = 2,
  };
  // repeated .android.os.WorkSourceProto.WorkSourceContentProto work_source_contents = 1;
  int work_source_contents_size() const;
  void clear_work_source_contents();
  ::android::os::WorkSourceProto_WorkSourceContentProto* mutable_work_source_contents(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkSourceContentProto >*
      mutable_work_source_contents();
  const ::android::os::WorkSourceProto_WorkSourceContentProto& work_source_contents(int index) const;
  ::android::os::WorkSourceProto_WorkSourceContentProto* add_work_source_contents();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkSourceContentProto >&
      work_source_contents() const;

  // repeated .android.os.WorkSourceProto.WorkChain work_chains = 2;
  int work_chains_size() const;
  void clear_work_chains();
  ::android::os::WorkSourceProto_WorkChain* mutable_work_chains(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkChain >*
      mutable_work_chains();
  const ::android::os::WorkSourceProto_WorkChain& work_chains(int index) const;
  ::android::os::WorkSourceProto_WorkChain* add_work_chains();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkChain >&
      work_chains() const;

  // @@protoc_insertion_point(class_scope:android.os.WorkSourceProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkSourceContentProto > work_source_contents_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkChain > work_chains_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WorkSourceProto_WorkSourceContentProto

// optional int32 uid = 1;
inline bool WorkSourceProto_WorkSourceContentProto::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkSourceProto_WorkSourceContentProto::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WorkSourceProto_WorkSourceContentProto::uid() const {
  // @@protoc_insertion_point(field_get:android.os.WorkSourceProto.WorkSourceContentProto.uid)
  return uid_;
}
inline void WorkSourceProto_WorkSourceContentProto::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:android.os.WorkSourceProto.WorkSourceContentProto.uid)
}

// optional string name = 2;
inline bool WorkSourceProto_WorkSourceContentProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkSourceProto_WorkSourceContentProto::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WorkSourceProto_WorkSourceContentProto::name() const {
  // @@protoc_insertion_point(field_get:android.os.WorkSourceProto.WorkSourceContentProto.name)
  return name_.GetNoArena();
}
inline void WorkSourceProto_WorkSourceContentProto::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.os.WorkSourceProto.WorkSourceContentProto.name)
}
inline void WorkSourceProto_WorkSourceContentProto::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.os.WorkSourceProto.WorkSourceContentProto.name)
}
inline void WorkSourceProto_WorkSourceContentProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.os.WorkSourceProto.WorkSourceContentProto.name)
}
inline void WorkSourceProto_WorkSourceContentProto::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.os.WorkSourceProto.WorkSourceContentProto.name)
}
inline std::string* WorkSourceProto_WorkSourceContentProto::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.os.WorkSourceProto.WorkSourceContentProto.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* WorkSourceProto_WorkSourceContentProto::release_name() {
  // @@protoc_insertion_point(field_release:android.os.WorkSourceProto.WorkSourceContentProto.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void WorkSourceProto_WorkSourceContentProto::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:android.os.WorkSourceProto.WorkSourceContentProto.name)
}

// -------------------------------------------------------------------

// WorkSourceProto_WorkChain

// repeated .android.os.WorkSourceProto.WorkSourceContentProto nodes = 1;
inline int WorkSourceProto_WorkChain::nodes_size() const {
  return nodes_.size();
}
inline void WorkSourceProto_WorkChain::clear_nodes() {
  nodes_.Clear();
}
inline ::android::os::WorkSourceProto_WorkSourceContentProto* WorkSourceProto_WorkChain::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.WorkSourceProto.WorkChain.nodes)
  return nodes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkSourceContentProto >*
WorkSourceProto_WorkChain::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:android.os.WorkSourceProto.WorkChain.nodes)
  return &nodes_;
}
inline const ::android::os::WorkSourceProto_WorkSourceContentProto& WorkSourceProto_WorkChain::nodes(int index) const {
  // @@protoc_insertion_point(field_get:android.os.WorkSourceProto.WorkChain.nodes)
  return nodes_.Get(index);
}
inline ::android::os::WorkSourceProto_WorkSourceContentProto* WorkSourceProto_WorkChain::add_nodes() {
  // @@protoc_insertion_point(field_add:android.os.WorkSourceProto.WorkChain.nodes)
  return nodes_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkSourceContentProto >&
WorkSourceProto_WorkChain::nodes() const {
  // @@protoc_insertion_point(field_list:android.os.WorkSourceProto.WorkChain.nodes)
  return nodes_;
}

// -------------------------------------------------------------------

// WorkSourceProto

// repeated .android.os.WorkSourceProto.WorkSourceContentProto work_source_contents = 1;
inline int WorkSourceProto::work_source_contents_size() const {
  return work_source_contents_.size();
}
inline void WorkSourceProto::clear_work_source_contents() {
  work_source_contents_.Clear();
}
inline ::android::os::WorkSourceProto_WorkSourceContentProto* WorkSourceProto::mutable_work_source_contents(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.WorkSourceProto.work_source_contents)
  return work_source_contents_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkSourceContentProto >*
WorkSourceProto::mutable_work_source_contents() {
  // @@protoc_insertion_point(field_mutable_list:android.os.WorkSourceProto.work_source_contents)
  return &work_source_contents_;
}
inline const ::android::os::WorkSourceProto_WorkSourceContentProto& WorkSourceProto::work_source_contents(int index) const {
  // @@protoc_insertion_point(field_get:android.os.WorkSourceProto.work_source_contents)
  return work_source_contents_.Get(index);
}
inline ::android::os::WorkSourceProto_WorkSourceContentProto* WorkSourceProto::add_work_source_contents() {
  // @@protoc_insertion_point(field_add:android.os.WorkSourceProto.work_source_contents)
  return work_source_contents_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkSourceContentProto >&
WorkSourceProto::work_source_contents() const {
  // @@protoc_insertion_point(field_list:android.os.WorkSourceProto.work_source_contents)
  return work_source_contents_;
}

// repeated .android.os.WorkSourceProto.WorkChain work_chains = 2;
inline int WorkSourceProto::work_chains_size() const {
  return work_chains_.size();
}
inline void WorkSourceProto::clear_work_chains() {
  work_chains_.Clear();
}
inline ::android::os::WorkSourceProto_WorkChain* WorkSourceProto::mutable_work_chains(int index) {
  // @@protoc_insertion_point(field_mutable:android.os.WorkSourceProto.work_chains)
  return work_chains_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkChain >*
WorkSourceProto::mutable_work_chains() {
  // @@protoc_insertion_point(field_mutable_list:android.os.WorkSourceProto.work_chains)
  return &work_chains_;
}
inline const ::android::os::WorkSourceProto_WorkChain& WorkSourceProto::work_chains(int index) const {
  // @@protoc_insertion_point(field_get:android.os.WorkSourceProto.work_chains)
  return work_chains_.Get(index);
}
inline ::android::os::WorkSourceProto_WorkChain* WorkSourceProto::add_work_chains() {
  // @@protoc_insertion_point(field_add:android.os.WorkSourceProto.work_chains)
  return work_chains_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::os::WorkSourceProto_WorkChain >&
WorkSourceProto::work_chains() const {
  // @@protoc_insertion_point(field_list:android.os.WorkSourceProto.work_chains)
  return work_chains_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace os
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fos_2fworksource_2eproto
