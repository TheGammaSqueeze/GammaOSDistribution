// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/intentresolver.proto

#include "frameworks/base/core/proto/android/server/intentresolver.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fintentresolver_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IntentResolverProto_ArrayMapEntry_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fintentresolver_2eproto;
namespace com {
namespace android {
namespace server {
class IntentResolverProto_ArrayMapEntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntentResolverProto_ArrayMapEntry> _instance;
} _IntentResolverProto_ArrayMapEntry_default_instance_;
class IntentResolverProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntentResolverProto> _instance;
} _IntentResolverProto_default_instance_;
}  // namespace server
}  // namespace android
}  // namespace com
static void InitDefaultsscc_info_IntentResolverProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fintentresolver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::_IntentResolverProto_default_instance_;
    new (ptr) ::com::android::server::IntentResolverProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::IntentResolverProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IntentResolverProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fintentresolver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_IntentResolverProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fintentresolver_2eproto}, {
      &scc_info_IntentResolverProto_ArrayMapEntry_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fintentresolver_2eproto.base,}};

static void InitDefaultsscc_info_IntentResolverProto_ArrayMapEntry_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fintentresolver_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::android::server::_IntentResolverProto_ArrayMapEntry_default_instance_;
    new (ptr) ::com::android::server::IntentResolverProto_ArrayMapEntry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::android::server::IntentResolverProto_ArrayMapEntry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IntentResolverProto_ArrayMapEntry_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fintentresolver_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_IntentResolverProto_ArrayMapEntry_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fintentresolver_2eproto}, {}};

namespace com {
namespace android {
namespace server {

// ===================================================================

void IntentResolverProto_ArrayMapEntry::InitAsDefaultInstance() {
}
class IntentResolverProto_ArrayMapEntry::_Internal {
 public:
  using HasBits = decltype(std::declval<IntentResolverProto_ArrayMapEntry>()._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

IntentResolverProto_ArrayMapEntry::IntentResolverProto_ArrayMapEntry()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.IntentResolverProto.ArrayMapEntry)
}
IntentResolverProto_ArrayMapEntry::IntentResolverProto_ArrayMapEntry(const IntentResolverProto_ArrayMapEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:com.android.server.IntentResolverProto.ArrayMapEntry)
}

void IntentResolverProto_ArrayMapEntry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IntentResolverProto_ArrayMapEntry_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fintentresolver_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IntentResolverProto_ArrayMapEntry::~IntentResolverProto_ArrayMapEntry() {
  // @@protoc_insertion_point(destructor:com.android.server.IntentResolverProto.ArrayMapEntry)
  SharedDtor();
}

void IntentResolverProto_ArrayMapEntry::SharedDtor() {
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IntentResolverProto_ArrayMapEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntentResolverProto_ArrayMapEntry& IntentResolverProto_ArrayMapEntry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntentResolverProto_ArrayMapEntry_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fintentresolver_2eproto.base);
  return *internal_default_instance();
}


void IntentResolverProto_ArrayMapEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.IntentResolverProto.ArrayMapEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    key_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IntentResolverProto_ArrayMapEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_key(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(add_values(), ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IntentResolverProto_ArrayMapEntry::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.IntentResolverProto.ArrayMapEntry)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string values = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.IntentResolverProto.ArrayMapEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.IntentResolverProto.ArrayMapEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IntentResolverProto_ArrayMapEntry::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.IntentResolverProto.ArrayMapEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // repeated string values = 2;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      2, this->values(i), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.IntentResolverProto.ArrayMapEntry)
}

size_t IntentResolverProto_ArrayMapEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.IntentResolverProto.ArrayMapEntry)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string values = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->values(i));
  }

  // optional string key = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->key());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntentResolverProto_ArrayMapEntry::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const IntentResolverProto_ArrayMapEntry*>(
      &from));
}

void IntentResolverProto_ArrayMapEntry::MergeFrom(const IntentResolverProto_ArrayMapEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.IntentResolverProto.ArrayMapEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  if (from.has_key()) {
    _has_bits_[0] |= 0x00000001u;
    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void IntentResolverProto_ArrayMapEntry::CopyFrom(const IntentResolverProto_ArrayMapEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.IntentResolverProto.ArrayMapEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntentResolverProto_ArrayMapEntry::IsInitialized() const {
  return true;
}

void IntentResolverProto_ArrayMapEntry::InternalSwap(IntentResolverProto_ArrayMapEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  values_.InternalSwap(CastToBase(&other->values_));
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

std::string IntentResolverProto_ArrayMapEntry::GetTypeName() const {
  return "com.android.server.IntentResolverProto.ArrayMapEntry";
}


// ===================================================================

void IntentResolverProto::InitAsDefaultInstance() {
}
class IntentResolverProto::_Internal {
 public:
  using HasBits = decltype(std::declval<IntentResolverProto>()._has_bits_);
};

IntentResolverProto::IntentResolverProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.android.server.IntentResolverProto)
}
IntentResolverProto::IntentResolverProto(const IntentResolverProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      full_mime_types_(from.full_mime_types_),
      base_mime_types_(from.base_mime_types_),
      wild_mime_types_(from.wild_mime_types_),
      schemes_(from.schemes_),
      non_data_actions_(from.non_data_actions_),
      mime_typed_actions_(from.mime_typed_actions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.android.server.IntentResolverProto)
}

void IntentResolverProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IntentResolverProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fintentresolver_2eproto.base);
}

IntentResolverProto::~IntentResolverProto() {
  // @@protoc_insertion_point(destructor:com.android.server.IntentResolverProto)
  SharedDtor();
}

void IntentResolverProto::SharedDtor() {
}

void IntentResolverProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntentResolverProto& IntentResolverProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntentResolverProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fintentresolver_2eproto.base);
  return *internal_default_instance();
}


void IntentResolverProto::Clear() {
// @@protoc_insertion_point(message_clear_start:com.android.server.IntentResolverProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  full_mime_types_.Clear();
  base_mime_types_.Clear();
  wild_mime_types_.Clear();
  schemes_.Clear();
  non_data_actions_.Clear();
  mime_typed_actions_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IntentResolverProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.android.server.IntentResolverProto.ArrayMapEntry full_mime_types = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_full_mime_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.IntentResolverProto.ArrayMapEntry base_mime_types = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_base_mime_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.IntentResolverProto.ArrayMapEntry wild_mime_types = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_wild_mime_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.IntentResolverProto.ArrayMapEntry schemes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_schemes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.IntentResolverProto.ArrayMapEntry non_data_actions = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_non_data_actions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // repeated .com.android.server.IntentResolverProto.ArrayMapEntry mime_typed_actions = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_mime_typed_actions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 50);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IntentResolverProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:com.android.server.IntentResolverProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.android.server.IntentResolverProto.ArrayMapEntry full_mime_types = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_full_mime_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.IntentResolverProto.ArrayMapEntry base_mime_types = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_base_mime_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.IntentResolverProto.ArrayMapEntry wild_mime_types = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_wild_mime_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.IntentResolverProto.ArrayMapEntry schemes = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_schemes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.IntentResolverProto.ArrayMapEntry non_data_actions = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_non_data_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.android.server.IntentResolverProto.ArrayMapEntry mime_typed_actions = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_mime_typed_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.android.server.IntentResolverProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.android.server.IntentResolverProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IntentResolverProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.android.server.IntentResolverProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.android.server.IntentResolverProto.ArrayMapEntry full_mime_types = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->full_mime_types_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->full_mime_types(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.IntentResolverProto.ArrayMapEntry base_mime_types = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->base_mime_types_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2,
      this->base_mime_types(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.IntentResolverProto.ArrayMapEntry wild_mime_types = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->wild_mime_types_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3,
      this->wild_mime_types(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.IntentResolverProto.ArrayMapEntry schemes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->schemes_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      4,
      this->schemes(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.IntentResolverProto.ArrayMapEntry non_data_actions = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->non_data_actions_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      5,
      this->non_data_actions(static_cast<int>(i)),
      output);
  }

  // repeated .com.android.server.IntentResolverProto.ArrayMapEntry mime_typed_actions = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mime_typed_actions_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      6,
      this->mime_typed_actions(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:com.android.server.IntentResolverProto)
}

size_t IntentResolverProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.android.server.IntentResolverProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.android.server.IntentResolverProto.ArrayMapEntry full_mime_types = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->full_mime_types_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->full_mime_types(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.IntentResolverProto.ArrayMapEntry base_mime_types = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->base_mime_types_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->base_mime_types(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.IntentResolverProto.ArrayMapEntry wild_mime_types = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->wild_mime_types_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->wild_mime_types(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.IntentResolverProto.ArrayMapEntry schemes = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->schemes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->schemes(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.IntentResolverProto.ArrayMapEntry non_data_actions = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->non_data_actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->non_data_actions(static_cast<int>(i)));
    }
  }

  // repeated .com.android.server.IntentResolverProto.ArrayMapEntry mime_typed_actions = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->mime_typed_actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->mime_typed_actions(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntentResolverProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const IntentResolverProto*>(
      &from));
}

void IntentResolverProto::MergeFrom(const IntentResolverProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.android.server.IntentResolverProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  full_mime_types_.MergeFrom(from.full_mime_types_);
  base_mime_types_.MergeFrom(from.base_mime_types_);
  wild_mime_types_.MergeFrom(from.wild_mime_types_);
  schemes_.MergeFrom(from.schemes_);
  non_data_actions_.MergeFrom(from.non_data_actions_);
  mime_typed_actions_.MergeFrom(from.mime_typed_actions_);
}

void IntentResolverProto::CopyFrom(const IntentResolverProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.android.server.IntentResolverProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntentResolverProto::IsInitialized() const {
  return true;
}

void IntentResolverProto::InternalSwap(IntentResolverProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&full_mime_types_)->InternalSwap(CastToBase(&other->full_mime_types_));
  CastToBase(&base_mime_types_)->InternalSwap(CastToBase(&other->base_mime_types_));
  CastToBase(&wild_mime_types_)->InternalSwap(CastToBase(&other->wild_mime_types_));
  CastToBase(&schemes_)->InternalSwap(CastToBase(&other->schemes_));
  CastToBase(&non_data_actions_)->InternalSwap(CastToBase(&other->non_data_actions_));
  CastToBase(&mime_typed_actions_)->InternalSwap(CastToBase(&other->mime_typed_actions_));
}

std::string IntentResolverProto::GetTypeName() const {
  return "com.android.server.IntentResolverProto";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::android::server::IntentResolverProto_ArrayMapEntry* Arena::CreateMaybeMessage< ::com::android::server::IntentResolverProto_ArrayMapEntry >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::IntentResolverProto_ArrayMapEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::com::android::server::IntentResolverProto* Arena::CreateMaybeMessage< ::com::android::server::IntentResolverProto >(Arena* arena) {
  return Arena::CreateInternal< ::com::android::server::IntentResolverProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
