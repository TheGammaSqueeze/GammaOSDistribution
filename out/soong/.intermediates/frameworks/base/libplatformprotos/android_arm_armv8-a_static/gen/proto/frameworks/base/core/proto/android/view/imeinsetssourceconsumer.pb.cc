// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/imeinsetssourceconsumer.proto

#include "frameworks/base/core/proto/android/view/imeinsetssourceconsumer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssourceconsumer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_InsetsSourceConsumerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssourceconsumer_2eproto;
namespace android {
namespace view {
class ImeInsetsSourceConsumerProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImeInsetsSourceConsumerProto> _instance;
} _ImeInsetsSourceConsumerProto_default_instance_;
}  // namespace view
}  // namespace android
static void InitDefaultsscc_info_ImeInsetsSourceConsumerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fimeinsetssourceconsumer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::_ImeInsetsSourceConsumerProto_default_instance_;
    new (ptr) ::android::view::ImeInsetsSourceConsumerProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::ImeInsetsSourceConsumerProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImeInsetsSourceConsumerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fimeinsetssourceconsumer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ImeInsetsSourceConsumerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fimeinsetssourceconsumer_2eproto}, {
      &scc_info_InsetsSourceConsumerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssourceconsumer_2eproto.base,}};

namespace android {
namespace view {

// ===================================================================

void ImeInsetsSourceConsumerProto::InitAsDefaultInstance() {
  ::android::view::_ImeInsetsSourceConsumerProto_default_instance_._instance.get_mutable()->insets_source_consumer_ = const_cast< ::android::view::InsetsSourceConsumerProto*>(
      ::android::view::InsetsSourceConsumerProto::internal_default_instance());
}
class ImeInsetsSourceConsumerProto::_Internal {
 public:
  using HasBits = decltype(std::declval<ImeInsetsSourceConsumerProto>()._has_bits_);
  static const ::android::view::InsetsSourceConsumerProto& insets_source_consumer(const ImeInsetsSourceConsumerProto* msg);
  static void set_has_insets_source_consumer(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_requested_visible_awaiting_control(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::android::view::InsetsSourceConsumerProto&
ImeInsetsSourceConsumerProto::_Internal::insets_source_consumer(const ImeInsetsSourceConsumerProto* msg) {
  return *msg->insets_source_consumer_;
}
void ImeInsetsSourceConsumerProto::clear_insets_source_consumer() {
  if (insets_source_consumer_ != nullptr) insets_source_consumer_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
ImeInsetsSourceConsumerProto::ImeInsetsSourceConsumerProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.ImeInsetsSourceConsumerProto)
}
ImeInsetsSourceConsumerProto::ImeInsetsSourceConsumerProto(const ImeInsetsSourceConsumerProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_insets_source_consumer()) {
    insets_source_consumer_ = new ::android::view::InsetsSourceConsumerProto(*from.insets_source_consumer_);
  } else {
    insets_source_consumer_ = nullptr;
  }
  is_requested_visible_awaiting_control_ = from.is_requested_visible_awaiting_control_;
  // @@protoc_insertion_point(copy_constructor:android.view.ImeInsetsSourceConsumerProto)
}

void ImeInsetsSourceConsumerProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImeInsetsSourceConsumerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fimeinsetssourceconsumer_2eproto.base);
  ::memset(&insets_source_consumer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_requested_visible_awaiting_control_) -
      reinterpret_cast<char*>(&insets_source_consumer_)) + sizeof(is_requested_visible_awaiting_control_));
}

ImeInsetsSourceConsumerProto::~ImeInsetsSourceConsumerProto() {
  // @@protoc_insertion_point(destructor:android.view.ImeInsetsSourceConsumerProto)
  SharedDtor();
}

void ImeInsetsSourceConsumerProto::SharedDtor() {
  if (this != internal_default_instance()) delete insets_source_consumer_;
}

void ImeInsetsSourceConsumerProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImeInsetsSourceConsumerProto& ImeInsetsSourceConsumerProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImeInsetsSourceConsumerProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fimeinsetssourceconsumer_2eproto.base);
  return *internal_default_instance();
}


void ImeInsetsSourceConsumerProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.ImeInsetsSourceConsumerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(insets_source_consumer_ != nullptr);
    insets_source_consumer_->Clear();
  }
  is_requested_visible_awaiting_control_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ImeInsetsSourceConsumerProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.view.InsetsSourceConsumerProto insets_source_consumer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_insets_source_consumer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_requested_visible_awaiting_control = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_is_requested_visible_awaiting_control(&has_bits);
          is_requested_visible_awaiting_control_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ImeInsetsSourceConsumerProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.view.ImeInsetsSourceConsumerProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.view.InsetsSourceConsumerProto insets_source_consumer = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_insets_source_consumer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_requested_visible_awaiting_control = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_is_requested_visible_awaiting_control(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_requested_visible_awaiting_control_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.ImeInsetsSourceConsumerProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.ImeInsetsSourceConsumerProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ImeInsetsSourceConsumerProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.ImeInsetsSourceConsumerProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.view.InsetsSourceConsumerProto insets_source_consumer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::insets_source_consumer(this), output);
  }

  // optional bool is_requested_visible_awaiting_control = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->is_requested_visible_awaiting_control(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.view.ImeInsetsSourceConsumerProto)
}

size_t ImeInsetsSourceConsumerProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.ImeInsetsSourceConsumerProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .android.view.InsetsSourceConsumerProto insets_source_consumer = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *insets_source_consumer_);
    }

    // optional bool is_requested_visible_awaiting_control = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImeInsetsSourceConsumerProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ImeInsetsSourceConsumerProto*>(
      &from));
}

void ImeInsetsSourceConsumerProto::MergeFrom(const ImeInsetsSourceConsumerProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.ImeInsetsSourceConsumerProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_insets_source_consumer()->::android::view::InsetsSourceConsumerProto::MergeFrom(from.insets_source_consumer());
    }
    if (cached_has_bits & 0x00000002u) {
      is_requested_visible_awaiting_control_ = from.is_requested_visible_awaiting_control_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ImeInsetsSourceConsumerProto::CopyFrom(const ImeInsetsSourceConsumerProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.ImeInsetsSourceConsumerProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImeInsetsSourceConsumerProto::IsInitialized() const {
  return true;
}

void ImeInsetsSourceConsumerProto::InternalSwap(ImeInsetsSourceConsumerProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(insets_source_consumer_, other->insets_source_consumer_);
  swap(is_requested_visible_awaiting_control_, other->is_requested_visible_awaiting_control_);
}

std::string ImeInsetsSourceConsumerProto::GetTypeName() const {
  return "android.view.ImeInsetsSourceConsumerProto";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::view::ImeInsetsSourceConsumerProto* Arena::CreateMaybeMessage< ::android::view::ImeInsetsSourceConsumerProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::ImeInsetsSourceConsumerProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
