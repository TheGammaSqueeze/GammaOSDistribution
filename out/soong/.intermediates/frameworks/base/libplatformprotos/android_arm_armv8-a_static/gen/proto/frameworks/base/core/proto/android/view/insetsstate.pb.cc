// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/insetsstate.proto

#include "frameworks/base/core/proto/android/view/insetsstate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RectProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DisplayCutoutProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InsetsSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssource_2eproto;
namespace android {
namespace view {
class InsetsStateProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InsetsStateProto> _instance;
} _InsetsStateProto_default_instance_;
}  // namespace view
}  // namespace android
static void InitDefaultsscc_info_InsetsStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsstate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::view::_InsetsStateProto_default_instance_;
    new (ptr) ::android::view::InsetsStateProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::view::InsetsStateProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_InsetsStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsstate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_InsetsStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsstate_2eproto}, {
      &scc_info_InsetsSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetssource_2eproto.base,
      &scc_info_RectProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fgraphics_2frect_2eproto.base,
      &scc_info_DisplayCutoutProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2fdisplaycutout_2eproto.base,}};

namespace android {
namespace view {

// ===================================================================

void InsetsStateProto::InitAsDefaultInstance() {
  ::android::view::_InsetsStateProto_default_instance_._instance.get_mutable()->display_frame_ = const_cast< ::android::graphics::RectProto*>(
      ::android::graphics::RectProto::internal_default_instance());
  ::android::view::_InsetsStateProto_default_instance_._instance.get_mutable()->display_cutout_ = const_cast< ::android::view::DisplayCutoutProto*>(
      ::android::view::DisplayCutoutProto::internal_default_instance());
}
class InsetsStateProto::_Internal {
 public:
  using HasBits = decltype(std::declval<InsetsStateProto>()._has_bits_);
  static const ::android::graphics::RectProto& display_frame(const InsetsStateProto* msg);
  static void set_has_display_frame(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::android::view::DisplayCutoutProto& display_cutout(const InsetsStateProto* msg);
  static void set_has_display_cutout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::android::graphics::RectProto&
InsetsStateProto::_Internal::display_frame(const InsetsStateProto* msg) {
  return *msg->display_frame_;
}
const ::android::view::DisplayCutoutProto&
InsetsStateProto::_Internal::display_cutout(const InsetsStateProto* msg) {
  return *msg->display_cutout_;
}
void InsetsStateProto::clear_sources() {
  sources_.Clear();
}
void InsetsStateProto::clear_display_frame() {
  if (display_frame_ != nullptr) display_frame_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void InsetsStateProto::clear_display_cutout() {
  if (display_cutout_ != nullptr) display_cutout_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
InsetsStateProto::InsetsStateProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.view.InsetsStateProto)
}
InsetsStateProto::InsetsStateProto(const InsetsStateProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      sources_(from.sources_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_display_frame()) {
    display_frame_ = new ::android::graphics::RectProto(*from.display_frame_);
  } else {
    display_frame_ = nullptr;
  }
  if (from.has_display_cutout()) {
    display_cutout_ = new ::android::view::DisplayCutoutProto(*from.display_cutout_);
  } else {
    display_cutout_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:android.view.InsetsStateProto)
}

void InsetsStateProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InsetsStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsstate_2eproto.base);
  ::memset(&display_frame_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&display_cutout_) -
      reinterpret_cast<char*>(&display_frame_)) + sizeof(display_cutout_));
}

InsetsStateProto::~InsetsStateProto() {
  // @@protoc_insertion_point(destructor:android.view.InsetsStateProto)
  SharedDtor();
}

void InsetsStateProto::SharedDtor() {
  if (this != internal_default_instance()) delete display_frame_;
  if (this != internal_default_instance()) delete display_cutout_;
}

void InsetsStateProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InsetsStateProto& InsetsStateProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InsetsStateProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finsetsstate_2eproto.base);
  return *internal_default_instance();
}


void InsetsStateProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.view.InsetsStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sources_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(display_frame_ != nullptr);
      display_frame_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(display_cutout_ != nullptr);
      display_cutout_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InsetsStateProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.view.InsetsSourceProto sources = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_sources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // optional .android.graphics.RectProto display_frame = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_display_frame(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.view.DisplayCutoutProto display_cutout = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_display_cutout(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InsetsStateProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.view.InsetsStateProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.view.InsetsSourceProto sources = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_sources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.graphics.RectProto display_frame = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_display_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.view.DisplayCutoutProto display_cutout = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_display_cutout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.view.InsetsStateProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.view.InsetsStateProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InsetsStateProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.view.InsetsStateProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.view.InsetsSourceProto sources = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sources_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->sources(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .android.graphics.RectProto display_frame = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::display_frame(this), output);
  }

  // optional .android.view.DisplayCutoutProto display_cutout = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3, _Internal::display_cutout(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.view.InsetsStateProto)
}

size_t InsetsStateProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.view.InsetsStateProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.view.InsetsSourceProto sources = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sources_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->sources(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .android.graphics.RectProto display_frame = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *display_frame_);
    }

    // optional .android.view.DisplayCutoutProto display_cutout = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *display_cutout_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsetsStateProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const InsetsStateProto*>(
      &from));
}

void InsetsStateProto::MergeFrom(const InsetsStateProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.view.InsetsStateProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sources_.MergeFrom(from.sources_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_display_frame()->::android::graphics::RectProto::MergeFrom(from.display_frame());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_display_cutout()->::android::view::DisplayCutoutProto::MergeFrom(from.display_cutout());
    }
  }
}

void InsetsStateProto::CopyFrom(const InsetsStateProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.view.InsetsStateProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsetsStateProto::IsInitialized() const {
  return true;
}

void InsetsStateProto::InternalSwap(InsetsStateProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&sources_)->InternalSwap(CastToBase(&other->sources_));
  swap(display_frame_, other->display_frame_);
  swap(display_cutout_, other->display_cutout_);
}

std::string InsetsStateProto::GetTypeName() const {
  return "android.view.InsetsStateProto";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::view::InsetsStateProto* Arena::CreateMaybeMessage< ::android::view::InsetsStateProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::view::InsetsStateProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
