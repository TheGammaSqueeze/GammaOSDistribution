// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/service/package.proto

#include "frameworks/base/core/proto/android/service/package.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2ffeatureinfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FeatureInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2ffeatureinfo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_PackageProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageProto_InstallSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageProto_SplitProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageProto_StatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageProto_UserInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageProto_UserPermissionsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageServiceDumpProto_PackageShortProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageServiceDumpProto_SharedLibraryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageServiceDumpProto_SharedUserProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto;
namespace android {
namespace service {
namespace pm {
class PackageServiceDumpProto_PackageShortProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PackageServiceDumpProto_PackageShortProto> _instance;
} _PackageServiceDumpProto_PackageShortProto_default_instance_;
class PackageServiceDumpProto_SharedLibraryProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PackageServiceDumpProto_SharedLibraryProto> _instance;
} _PackageServiceDumpProto_SharedLibraryProto_default_instance_;
class PackageServiceDumpProto_SharedUserProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PackageServiceDumpProto_SharedUserProto> _instance;
} _PackageServiceDumpProto_SharedUserProto_default_instance_;
class PackageServiceDumpProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PackageServiceDumpProto> _instance;
} _PackageServiceDumpProto_default_instance_;
class PackageProto_SplitProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PackageProto_SplitProto> _instance;
} _PackageProto_SplitProto_default_instance_;
class PackageProto_UserInfoProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PackageProto_UserInfoProto> _instance;
} _PackageProto_UserInfoProto_default_instance_;
class PackageProto_InstallSourceProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PackageProto_InstallSourceProto> _instance;
} _PackageProto_InstallSourceProto_default_instance_;
class PackageProto_StatesProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PackageProto_StatesProto> _instance;
} _PackageProto_StatesProto_default_instance_;
class PackageProto_UserPermissionsProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PackageProto_UserPermissionsProto> _instance;
} _PackageProto_UserPermissionsProto_default_instance_;
class PackageProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PackageProto> _instance;
} _PackageProto_default_instance_;
}  // namespace pm
}  // namespace service
}  // namespace android
static void InitDefaultsscc_info_PackageProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::pm::_PackageProto_default_instance_;
    new (ptr) ::android::service::pm::PackageProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::pm::PackageProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_PackageProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsscc_info_PackageProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto}, {
      &scc_info_PackageProto_SplitProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base,
      &scc_info_PackageProto_UserInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base,
      &scc_info_PackageProto_InstallSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base,
      &scc_info_PackageProto_StatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base,
      &scc_info_PackageProto_UserPermissionsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base,}};

static void InitDefaultsscc_info_PackageProto_InstallSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::pm::_PackageProto_InstallSourceProto_default_instance_;
    new (ptr) ::android::service::pm::PackageProto_InstallSourceProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::pm::PackageProto_InstallSourceProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageProto_InstallSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PackageProto_InstallSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto}, {}};

static void InitDefaultsscc_info_PackageProto_SplitProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::pm::_PackageProto_SplitProto_default_instance_;
    new (ptr) ::android::service::pm::PackageProto_SplitProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::pm::PackageProto_SplitProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageProto_SplitProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PackageProto_SplitProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto}, {}};

static void InitDefaultsscc_info_PackageProto_StatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::pm::_PackageProto_StatesProto_default_instance_;
    new (ptr) ::android::service::pm::PackageProto_StatesProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::pm::PackageProto_StatesProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageProto_StatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PackageProto_StatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto}, {}};

static void InitDefaultsscc_info_PackageProto_UserInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::pm::_PackageProto_UserInfoProto_default_instance_;
    new (ptr) ::android::service::pm::PackageProto_UserInfoProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::pm::PackageProto_UserInfoProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageProto_UserInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PackageProto_UserInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto}, {}};

static void InitDefaultsscc_info_PackageProto_UserPermissionsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::pm::_PackageProto_UserPermissionsProto_default_instance_;
    new (ptr) ::android::service::pm::PackageProto_UserPermissionsProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::pm::PackageProto_UserPermissionsProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageProto_UserPermissionsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PackageProto_UserPermissionsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto}, {}};

static void InitDefaultsscc_info_PackageServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::pm::_PackageServiceDumpProto_default_instance_;
    new (ptr) ::android::service::pm::PackageServiceDumpProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::pm::PackageServiceDumpProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_PackageServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsscc_info_PackageServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto}, {
      &scc_info_PackageServiceDumpProto_PackageShortProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base,
      &scc_info_PackageServiceDumpProto_SharedLibraryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base,
      &scc_info_FeatureInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fcontent_2ffeatureinfo_2eproto.base,
      &scc_info_PackageProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base,
      &scc_info_PackageServiceDumpProto_SharedUserProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base,}};

static void InitDefaultsscc_info_PackageServiceDumpProto_PackageShortProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::pm::_PackageServiceDumpProto_PackageShortProto_default_instance_;
    new (ptr) ::android::service::pm::PackageServiceDumpProto_PackageShortProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::pm::PackageServiceDumpProto_PackageShortProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageServiceDumpProto_PackageShortProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PackageServiceDumpProto_PackageShortProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto}, {}};

static void InitDefaultsscc_info_PackageServiceDumpProto_SharedLibraryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::pm::_PackageServiceDumpProto_SharedLibraryProto_default_instance_;
    new (ptr) ::android::service::pm::PackageServiceDumpProto_SharedLibraryProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::pm::PackageServiceDumpProto_SharedLibraryProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageServiceDumpProto_SharedLibraryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PackageServiceDumpProto_SharedLibraryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto}, {}};

static void InitDefaultsscc_info_PackageServiceDumpProto_SharedUserProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::service::pm::_PackageServiceDumpProto_SharedUserProto_default_instance_;
    new (ptr) ::android::service::pm::PackageServiceDumpProto_SharedUserProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::service::pm::PackageServiceDumpProto_SharedUserProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PackageServiceDumpProto_SharedUserProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_PackageServiceDumpProto_SharedUserProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto}, {}};

namespace android {
namespace service {
namespace pm {
bool PackageProto_UserInfoProto_InstallType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> PackageProto_UserInfoProto_InstallType_strings[3] = {};

static const char PackageProto_UserInfoProto_InstallType_names[] =
  "FULL_APP_INSTALL"
  "INSTANT_APP_INSTALL"
  "NOT_INSTALLED_FOR_USER";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry PackageProto_UserInfoProto_InstallType_entries[] = {
  { {PackageProto_UserInfoProto_InstallType_names + 0, 16}, 1 },
  { {PackageProto_UserInfoProto_InstallType_names + 16, 19}, 2 },
  { {PackageProto_UserInfoProto_InstallType_names + 35, 22}, 0 },
};

static const int PackageProto_UserInfoProto_InstallType_entries_by_number[] = {
  2, // 0 -> NOT_INSTALLED_FOR_USER
  0, // 1 -> FULL_APP_INSTALL
  1, // 2 -> INSTANT_APP_INSTALL
};

const std::string& PackageProto_UserInfoProto_InstallType_Name(
    PackageProto_UserInfoProto_InstallType value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          PackageProto_UserInfoProto_InstallType_entries,
          PackageProto_UserInfoProto_InstallType_entries_by_number,
          3, PackageProto_UserInfoProto_InstallType_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      PackageProto_UserInfoProto_InstallType_entries,
      PackageProto_UserInfoProto_InstallType_entries_by_number,
      3, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     PackageProto_UserInfoProto_InstallType_strings[idx].get();
}
bool PackageProto_UserInfoProto_InstallType_Parse(
    const std::string& name, PackageProto_UserInfoProto_InstallType* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      PackageProto_UserInfoProto_InstallType_entries, 3, name, &int_value);
  if (success) {
    *value = static_cast<PackageProto_UserInfoProto_InstallType>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PackageProto_UserInfoProto_InstallType PackageProto_UserInfoProto::NOT_INSTALLED_FOR_USER;
constexpr PackageProto_UserInfoProto_InstallType PackageProto_UserInfoProto::FULL_APP_INSTALL;
constexpr PackageProto_UserInfoProto_InstallType PackageProto_UserInfoProto::INSTANT_APP_INSTALL;
constexpr PackageProto_UserInfoProto_InstallType PackageProto_UserInfoProto::InstallType_MIN;
constexpr PackageProto_UserInfoProto_InstallType PackageProto_UserInfoProto::InstallType_MAX;
constexpr int PackageProto_UserInfoProto::InstallType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
bool PackageProto_UserInfoProto_EnabledState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> PackageProto_UserInfoProto_EnabledState_strings[5] = {};

static const char PackageProto_UserInfoProto_EnabledState_names[] =
  "COMPONENT_ENABLED_STATE_DEFAULT"
  "COMPONENT_ENABLED_STATE_DISABLED"
  "COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED"
  "COMPONENT_ENABLED_STATE_DISABLED_USER"
  "COMPONENT_ENABLED_STATE_ENABLED";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry PackageProto_UserInfoProto_EnabledState_entries[] = {
  { {PackageProto_UserInfoProto_EnabledState_names + 0, 31}, 0 },
  { {PackageProto_UserInfoProto_EnabledState_names + 31, 32}, 2 },
  { {PackageProto_UserInfoProto_EnabledState_names + 63, 43}, 4 },
  { {PackageProto_UserInfoProto_EnabledState_names + 106, 37}, 3 },
  { {PackageProto_UserInfoProto_EnabledState_names + 143, 31}, 1 },
};

static const int PackageProto_UserInfoProto_EnabledState_entries_by_number[] = {
  0, // 0 -> COMPONENT_ENABLED_STATE_DEFAULT
  4, // 1 -> COMPONENT_ENABLED_STATE_ENABLED
  1, // 2 -> COMPONENT_ENABLED_STATE_DISABLED
  3, // 3 -> COMPONENT_ENABLED_STATE_DISABLED_USER
  2, // 4 -> COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED
};

const std::string& PackageProto_UserInfoProto_EnabledState_Name(
    PackageProto_UserInfoProto_EnabledState value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          PackageProto_UserInfoProto_EnabledState_entries,
          PackageProto_UserInfoProto_EnabledState_entries_by_number,
          5, PackageProto_UserInfoProto_EnabledState_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      PackageProto_UserInfoProto_EnabledState_entries,
      PackageProto_UserInfoProto_EnabledState_entries_by_number,
      5, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     PackageProto_UserInfoProto_EnabledState_strings[idx].get();
}
bool PackageProto_UserInfoProto_EnabledState_Parse(
    const std::string& name, PackageProto_UserInfoProto_EnabledState* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      PackageProto_UserInfoProto_EnabledState_entries, 5, name, &int_value);
  if (success) {
    *value = static_cast<PackageProto_UserInfoProto_EnabledState>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PackageProto_UserInfoProto_EnabledState PackageProto_UserInfoProto::COMPONENT_ENABLED_STATE_DEFAULT;
constexpr PackageProto_UserInfoProto_EnabledState PackageProto_UserInfoProto::COMPONENT_ENABLED_STATE_ENABLED;
constexpr PackageProto_UserInfoProto_EnabledState PackageProto_UserInfoProto::COMPONENT_ENABLED_STATE_DISABLED;
constexpr PackageProto_UserInfoProto_EnabledState PackageProto_UserInfoProto::COMPONENT_ENABLED_STATE_DISABLED_USER;
constexpr PackageProto_UserInfoProto_EnabledState PackageProto_UserInfoProto::COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED;
constexpr PackageProto_UserInfoProto_EnabledState PackageProto_UserInfoProto::EnabledState_MIN;
constexpr PackageProto_UserInfoProto_EnabledState PackageProto_UserInfoProto::EnabledState_MAX;
constexpr int PackageProto_UserInfoProto::EnabledState_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void PackageServiceDumpProto_PackageShortProto::InitAsDefaultInstance() {
}
class PackageServiceDumpProto_PackageShortProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PackageServiceDumpProto_PackageShortProto>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PackageServiceDumpProto_PackageShortProto::PackageServiceDumpProto_PackageShortProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.pm.PackageServiceDumpProto.PackageShortProto)
}
PackageServiceDumpProto_PackageShortProto::PackageServiceDumpProto_PackageShortProto(const PackageServiceDumpProto_PackageShortProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:android.service.pm.PackageServiceDumpProto.PackageShortProto)
}

void PackageServiceDumpProto_PackageShortProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PackageServiceDumpProto_PackageShortProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uid_ = 0;
}

PackageServiceDumpProto_PackageShortProto::~PackageServiceDumpProto_PackageShortProto() {
  // @@protoc_insertion_point(destructor:android.service.pm.PackageServiceDumpProto.PackageShortProto)
  SharedDtor();
}

void PackageServiceDumpProto_PackageShortProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PackageServiceDumpProto_PackageShortProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageServiceDumpProto_PackageShortProto& PackageServiceDumpProto_PackageShortProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PackageServiceDumpProto_PackageShortProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  return *internal_default_instance();
}


void PackageServiceDumpProto_PackageShortProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.pm.PackageServiceDumpProto.PackageShortProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  uid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PackageServiceDumpProto_PackageShortProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_uid(&has_bits);
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PackageServiceDumpProto_PackageShortProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.service.pm.PackageServiceDumpProto.PackageShortProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 uid = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_uid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.pm.PackageServiceDumpProto.PackageShortProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.pm.PackageServiceDumpProto.PackageShortProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PackageServiceDumpProto_PackageShortProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.pm.PackageServiceDumpProto.PackageShortProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 uid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->uid(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.service.pm.PackageServiceDumpProto.PackageShortProto)
}

size_t PackageServiceDumpProto_PackageShortProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.pm.PackageServiceDumpProto.PackageShortProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 uid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->uid());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageServiceDumpProto_PackageShortProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PackageServiceDumpProto_PackageShortProto*>(
      &from));
}

void PackageServiceDumpProto_PackageShortProto::MergeFrom(const PackageServiceDumpProto_PackageShortProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.pm.PackageServiceDumpProto.PackageShortProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      uid_ = from.uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PackageServiceDumpProto_PackageShortProto::CopyFrom(const PackageServiceDumpProto_PackageShortProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.pm.PackageServiceDumpProto.PackageShortProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageServiceDumpProto_PackageShortProto::IsInitialized() const {
  return true;
}

void PackageServiceDumpProto_PackageShortProto::InternalSwap(PackageServiceDumpProto_PackageShortProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(uid_, other->uid_);
}

std::string PackageServiceDumpProto_PackageShortProto::GetTypeName() const {
  return "android.service.pm.PackageServiceDumpProto.PackageShortProto";
}


// ===================================================================

void PackageServiceDumpProto_SharedLibraryProto::InitAsDefaultInstance() {
}
class PackageServiceDumpProto_SharedLibraryProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PackageServiceDumpProto_SharedLibraryProto>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_jar(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_path(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_apk(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

PackageServiceDumpProto_SharedLibraryProto::PackageServiceDumpProto_SharedLibraryProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.pm.PackageServiceDumpProto.SharedLibraryProto)
}
PackageServiceDumpProto_SharedLibraryProto::PackageServiceDumpProto_SharedLibraryProto(const PackageServiceDumpProto_SharedLibraryProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  apk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_apk()) {
    apk_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.apk_);
  }
  is_jar_ = from.is_jar_;
  // @@protoc_insertion_point(copy_constructor:android.service.pm.PackageServiceDumpProto.SharedLibraryProto)
}

void PackageServiceDumpProto_SharedLibraryProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PackageServiceDumpProto_SharedLibraryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  apk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  is_jar_ = false;
}

PackageServiceDumpProto_SharedLibraryProto::~PackageServiceDumpProto_SharedLibraryProto() {
  // @@protoc_insertion_point(destructor:android.service.pm.PackageServiceDumpProto.SharedLibraryProto)
  SharedDtor();
}

void PackageServiceDumpProto_SharedLibraryProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  apk_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PackageServiceDumpProto_SharedLibraryProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageServiceDumpProto_SharedLibraryProto& PackageServiceDumpProto_SharedLibraryProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PackageServiceDumpProto_SharedLibraryProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  return *internal_default_instance();
}


void PackageServiceDumpProto_SharedLibraryProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.pm.PackageServiceDumpProto.SharedLibraryProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      apk_.ClearNonDefaultToEmptyNoArena();
    }
  }
  is_jar_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PackageServiceDumpProto_SharedLibraryProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_jar = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_is_jar(&has_bits);
          is_jar_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_path(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string apk = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_apk(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PackageServiceDumpProto_SharedLibraryProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.service.pm.PackageServiceDumpProto.SharedLibraryProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_jar = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_is_jar(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_jar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string path = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string apk = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_apk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.pm.PackageServiceDumpProto.SharedLibraryProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.pm.PackageServiceDumpProto.SharedLibraryProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PackageServiceDumpProto_SharedLibraryProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.pm.PackageServiceDumpProto.SharedLibraryProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bool is_jar = 2;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->is_jar(), output);
  }

  // optional string path = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->path(), output);
  }

  // optional string apk = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->apk(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.service.pm.PackageServiceDumpProto.SharedLibraryProto)
}

size_t PackageServiceDumpProto_SharedLibraryProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.pm.PackageServiceDumpProto.SharedLibraryProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string path = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional string apk = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->apk());
    }

    // optional bool is_jar = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageServiceDumpProto_SharedLibraryProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PackageServiceDumpProto_SharedLibraryProto*>(
      &from));
}

void PackageServiceDumpProto_SharedLibraryProto::MergeFrom(const PackageServiceDumpProto_SharedLibraryProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.pm.PackageServiceDumpProto.SharedLibraryProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      apk_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.apk_);
    }
    if (cached_has_bits & 0x00000008u) {
      is_jar_ = from.is_jar_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PackageServiceDumpProto_SharedLibraryProto::CopyFrom(const PackageServiceDumpProto_SharedLibraryProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.pm.PackageServiceDumpProto.SharedLibraryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageServiceDumpProto_SharedLibraryProto::IsInitialized() const {
  return true;
}

void PackageServiceDumpProto_SharedLibraryProto::InternalSwap(PackageServiceDumpProto_SharedLibraryProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  apk_.Swap(&other->apk_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_jar_, other->is_jar_);
}

std::string PackageServiceDumpProto_SharedLibraryProto::GetTypeName() const {
  return "android.service.pm.PackageServiceDumpProto.SharedLibraryProto";
}


// ===================================================================

void PackageServiceDumpProto_SharedUserProto::InitAsDefaultInstance() {
}
class PackageServiceDumpProto_SharedUserProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PackageServiceDumpProto_SharedUserProto>()._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PackageServiceDumpProto_SharedUserProto::PackageServiceDumpProto_SharedUserProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.pm.PackageServiceDumpProto.SharedUserProto)
}
PackageServiceDumpProto_SharedUserProto::PackageServiceDumpProto_SharedUserProto(const PackageServiceDumpProto_SharedUserProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:android.service.pm.PackageServiceDumpProto.SharedUserProto)
}

void PackageServiceDumpProto_SharedUserProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PackageServiceDumpProto_SharedUserProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uid_ = 0;
}

PackageServiceDumpProto_SharedUserProto::~PackageServiceDumpProto_SharedUserProto() {
  // @@protoc_insertion_point(destructor:android.service.pm.PackageServiceDumpProto.SharedUserProto)
  SharedDtor();
}

void PackageServiceDumpProto_SharedUserProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PackageServiceDumpProto_SharedUserProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageServiceDumpProto_SharedUserProto& PackageServiceDumpProto_SharedUserProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PackageServiceDumpProto_SharedUserProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  return *internal_default_instance();
}


void PackageServiceDumpProto_SharedUserProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.pm.PackageServiceDumpProto.SharedUserProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  uid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PackageServiceDumpProto_SharedUserProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_uid(&has_bits);
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PackageServiceDumpProto_SharedUserProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.service.pm.PackageServiceDumpProto.SharedUserProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 uid = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_uid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.pm.PackageServiceDumpProto.SharedUserProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.pm.PackageServiceDumpProto.SharedUserProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PackageServiceDumpProto_SharedUserProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.pm.PackageServiceDumpProto.SharedUserProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.service.pm.PackageServiceDumpProto.SharedUserProto)
}

size_t PackageServiceDumpProto_SharedUserProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.pm.PackageServiceDumpProto.SharedUserProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 uid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->uid());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageServiceDumpProto_SharedUserProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PackageServiceDumpProto_SharedUserProto*>(
      &from));
}

void PackageServiceDumpProto_SharedUserProto::MergeFrom(const PackageServiceDumpProto_SharedUserProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.pm.PackageServiceDumpProto.SharedUserProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      uid_ = from.uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PackageServiceDumpProto_SharedUserProto::CopyFrom(const PackageServiceDumpProto_SharedUserProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.pm.PackageServiceDumpProto.SharedUserProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageServiceDumpProto_SharedUserProto::IsInitialized() const {
  return true;
}

void PackageServiceDumpProto_SharedUserProto::InternalSwap(PackageServiceDumpProto_SharedUserProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(uid_, other->uid_);
}

std::string PackageServiceDumpProto_SharedUserProto::GetTypeName() const {
  return "android.service.pm.PackageServiceDumpProto.SharedUserProto";
}


// ===================================================================

void PackageServiceDumpProto::InitAsDefaultInstance() {
  ::android::service::pm::_PackageServiceDumpProto_default_instance_._instance.get_mutable()->required_verifier_package_ = const_cast< ::android::service::pm::PackageServiceDumpProto_PackageShortProto*>(
      ::android::service::pm::PackageServiceDumpProto_PackageShortProto::internal_default_instance());
  ::android::service::pm::_PackageServiceDumpProto_default_instance_._instance.get_mutable()->verifier_package_ = const_cast< ::android::service::pm::PackageServiceDumpProto_PackageShortProto*>(
      ::android::service::pm::PackageServiceDumpProto_PackageShortProto::internal_default_instance());
}
class PackageServiceDumpProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PackageServiceDumpProto>()._has_bits_);
  static const ::android::service::pm::PackageServiceDumpProto_PackageShortProto& required_verifier_package(const PackageServiceDumpProto* msg);
  static void set_has_required_verifier_package(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::android::service::pm::PackageServiceDumpProto_PackageShortProto& verifier_package(const PackageServiceDumpProto* msg);
  static void set_has_verifier_package(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::android::service::pm::PackageServiceDumpProto_PackageShortProto&
PackageServiceDumpProto::_Internal::required_verifier_package(const PackageServiceDumpProto* msg) {
  return *msg->required_verifier_package_;
}
const ::android::service::pm::PackageServiceDumpProto_PackageShortProto&
PackageServiceDumpProto::_Internal::verifier_package(const PackageServiceDumpProto* msg) {
  return *msg->verifier_package_;
}
void PackageServiceDumpProto::clear_features() {
  features_.Clear();
}
PackageServiceDumpProto::PackageServiceDumpProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.pm.PackageServiceDumpProto)
}
PackageServiceDumpProto::PackageServiceDumpProto(const PackageServiceDumpProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      shared_libraries_(from.shared_libraries_),
      features_(from.features_),
      packages_(from.packages_),
      shared_users_(from.shared_users_),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_required_verifier_package()) {
    required_verifier_package_ = new ::android::service::pm::PackageServiceDumpProto_PackageShortProto(*from.required_verifier_package_);
  } else {
    required_verifier_package_ = nullptr;
  }
  if (from.has_verifier_package()) {
    verifier_package_ = new ::android::service::pm::PackageServiceDumpProto_PackageShortProto(*from.verifier_package_);
  } else {
    verifier_package_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:android.service.pm.PackageServiceDumpProto)
}

void PackageServiceDumpProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PackageServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  ::memset(&required_verifier_package_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&verifier_package_) -
      reinterpret_cast<char*>(&required_verifier_package_)) + sizeof(verifier_package_));
}

PackageServiceDumpProto::~PackageServiceDumpProto() {
  // @@protoc_insertion_point(destructor:android.service.pm.PackageServiceDumpProto)
  SharedDtor();
}

void PackageServiceDumpProto::SharedDtor() {
  if (this != internal_default_instance()) delete required_verifier_package_;
  if (this != internal_default_instance()) delete verifier_package_;
}

void PackageServiceDumpProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageServiceDumpProto& PackageServiceDumpProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PackageServiceDumpProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  return *internal_default_instance();
}


void PackageServiceDumpProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.pm.PackageServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shared_libraries_.Clear();
  features_.Clear();
  packages_.Clear();
  shared_users_.Clear();
  messages_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(required_verifier_package_ != nullptr);
      required_verifier_package_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(verifier_package_ != nullptr);
      verifier_package_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PackageServiceDumpProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.service.pm.PackageServiceDumpProto.PackageShortProto required_verifier_package = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_required_verifier_package(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.pm.PackageServiceDumpProto.PackageShortProto verifier_package = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_verifier_package(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.pm.PackageServiceDumpProto.SharedLibraryProto shared_libraries = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_shared_libraries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // repeated .android.content.pm.FeatureInfoProto features = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_features(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.pm.PackageProto packages = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_packages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.pm.PackageServiceDumpProto.SharedUserProto shared_users = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_shared_users(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 50);
        } else goto handle_unusual;
        continue;
      // repeated string messages = 7 [(.android.privacy) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(add_messages(), ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 58);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PackageServiceDumpProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.service.pm.PackageServiceDumpProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.service.pm.PackageServiceDumpProto.PackageShortProto required_verifier_package = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_required_verifier_package()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.pm.PackageServiceDumpProto.PackageShortProto verifier_package = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_verifier_package()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.pm.PackageServiceDumpProto.SharedLibraryProto shared_libraries = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_shared_libraries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.content.pm.FeatureInfoProto features = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_features()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.pm.PackageProto packages = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_packages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.pm.PackageServiceDumpProto.SharedUserProto shared_users = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_shared_users()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string messages = 7 [(.android.privacy) = {
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.pm.PackageServiceDumpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.pm.PackageServiceDumpProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PackageServiceDumpProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.pm.PackageServiceDumpProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.service.pm.PackageServiceDumpProto.PackageShortProto required_verifier_package = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::required_verifier_package(this), output);
  }

  // optional .android.service.pm.PackageServiceDumpProto.PackageShortProto verifier_package = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::verifier_package(this), output);
  }

  // repeated .android.service.pm.PackageServiceDumpProto.SharedLibraryProto shared_libraries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shared_libraries_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3,
      this->shared_libraries(static_cast<int>(i)),
      output);
  }

  // repeated .android.content.pm.FeatureInfoProto features = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->features_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      4,
      this->features(static_cast<int>(i)),
      output);
  }

  // repeated .android.service.pm.PackageProto packages = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      5,
      this->packages(static_cast<int>(i)),
      output);
  }

  // repeated .android.service.pm.PackageServiceDumpProto.SharedUserProto shared_users = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shared_users_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      6,
      this->shared_users(static_cast<int>(i)),
      output);
  }

  // repeated string messages = 7 [(.android.privacy) = {
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      7, this->messages(i), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.service.pm.PackageServiceDumpProto)
}

size_t PackageServiceDumpProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.pm.PackageServiceDumpProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.pm.PackageServiceDumpProto.SharedLibraryProto shared_libraries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->shared_libraries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->shared_libraries(static_cast<int>(i)));
    }
  }

  // repeated .android.content.pm.FeatureInfoProto features = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->features_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->features(static_cast<int>(i)));
    }
  }

  // repeated .android.service.pm.PackageProto packages = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->packages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->packages(static_cast<int>(i)));
    }
  }

  // repeated .android.service.pm.PackageServiceDumpProto.SharedUserProto shared_users = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->shared_users_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->shared_users(static_cast<int>(i)));
    }
  }

  // repeated string messages = 7 [(.android.privacy) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->messages_size());
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->messages(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .android.service.pm.PackageServiceDumpProto.PackageShortProto required_verifier_package = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *required_verifier_package_);
    }

    // optional .android.service.pm.PackageServiceDumpProto.PackageShortProto verifier_package = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *verifier_package_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageServiceDumpProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PackageServiceDumpProto*>(
      &from));
}

void PackageServiceDumpProto::MergeFrom(const PackageServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.pm.PackageServiceDumpProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shared_libraries_.MergeFrom(from.shared_libraries_);
  features_.MergeFrom(from.features_);
  packages_.MergeFrom(from.packages_);
  shared_users_.MergeFrom(from.shared_users_);
  messages_.MergeFrom(from.messages_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_required_verifier_package()->::android::service::pm::PackageServiceDumpProto_PackageShortProto::MergeFrom(from.required_verifier_package());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_verifier_package()->::android::service::pm::PackageServiceDumpProto_PackageShortProto::MergeFrom(from.verifier_package());
    }
  }
}

void PackageServiceDumpProto::CopyFrom(const PackageServiceDumpProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.pm.PackageServiceDumpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageServiceDumpProto::IsInitialized() const {
  return true;
}

void PackageServiceDumpProto::InternalSwap(PackageServiceDumpProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&shared_libraries_)->InternalSwap(CastToBase(&other->shared_libraries_));
  CastToBase(&features_)->InternalSwap(CastToBase(&other->features_));
  CastToBase(&packages_)->InternalSwap(CastToBase(&other->packages_));
  CastToBase(&shared_users_)->InternalSwap(CastToBase(&other->shared_users_));
  messages_.InternalSwap(CastToBase(&other->messages_));
  swap(required_verifier_package_, other->required_verifier_package_);
  swap(verifier_package_, other->verifier_package_);
}

std::string PackageServiceDumpProto::GetTypeName() const {
  return "android.service.pm.PackageServiceDumpProto";
}


// ===================================================================

void PackageProto_SplitProto::InitAsDefaultInstance() {
}
class PackageProto_SplitProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PackageProto_SplitProto>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_revision_code(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PackageProto_SplitProto::PackageProto_SplitProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.pm.PackageProto.SplitProto)
}
PackageProto_SplitProto::PackageProto_SplitProto(const PackageProto_SplitProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  revision_code_ = from.revision_code_;
  // @@protoc_insertion_point(copy_constructor:android.service.pm.PackageProto.SplitProto)
}

void PackageProto_SplitProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PackageProto_SplitProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  revision_code_ = 0;
}

PackageProto_SplitProto::~PackageProto_SplitProto() {
  // @@protoc_insertion_point(destructor:android.service.pm.PackageProto.SplitProto)
  SharedDtor();
}

void PackageProto_SplitProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PackageProto_SplitProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageProto_SplitProto& PackageProto_SplitProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PackageProto_SplitProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  return *internal_default_instance();
}


void PackageProto_SplitProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.pm.PackageProto.SplitProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  revision_code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PackageProto_SplitProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 revision_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_revision_code(&has_bits);
          revision_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PackageProto_SplitProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.service.pm.PackageProto.SplitProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 revision_code = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_revision_code(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &revision_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.pm.PackageProto.SplitProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.pm.PackageProto.SplitProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PackageProto_SplitProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.pm.PackageProto.SplitProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 revision_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->revision_code(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.service.pm.PackageProto.SplitProto)
}

size_t PackageProto_SplitProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.pm.PackageProto.SplitProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 revision_code = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->revision_code());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageProto_SplitProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PackageProto_SplitProto*>(
      &from));
}

void PackageProto_SplitProto::MergeFrom(const PackageProto_SplitProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.pm.PackageProto.SplitProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      revision_code_ = from.revision_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PackageProto_SplitProto::CopyFrom(const PackageProto_SplitProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.pm.PackageProto.SplitProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageProto_SplitProto::IsInitialized() const {
  return true;
}

void PackageProto_SplitProto::InternalSwap(PackageProto_SplitProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(revision_code_, other->revision_code_);
}

std::string PackageProto_SplitProto::GetTypeName() const {
  return "android.service.pm.PackageProto.SplitProto";
}


// ===================================================================

void PackageProto_UserInfoProto::InitAsDefaultInstance() {
}
class PackageProto_UserInfoProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PackageProto_UserInfoProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_install_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_is_hidden(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_is_suspended(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_is_stopped(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_is_launched(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_enabled_state(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_last_disabled_app_caller(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_distraction_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

PackageProto_UserInfoProto::PackageProto_UserInfoProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.pm.PackageProto.UserInfoProto)
}
PackageProto_UserInfoProto::PackageProto_UserInfoProto(const PackageProto_UserInfoProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      suspending_package_(from.suspending_package_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  last_disabled_app_caller_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_last_disabled_app_caller()) {
    last_disabled_app_caller_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.last_disabled_app_caller_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&distraction_flags_) -
    reinterpret_cast<char*>(&id_)) + sizeof(distraction_flags_));
  // @@protoc_insertion_point(copy_constructor:android.service.pm.PackageProto.UserInfoProto)
}

void PackageProto_UserInfoProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PackageProto_UserInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  last_disabled_app_caller_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distraction_flags_) -
      reinterpret_cast<char*>(&id_)) + sizeof(distraction_flags_));
}

PackageProto_UserInfoProto::~PackageProto_UserInfoProto() {
  // @@protoc_insertion_point(destructor:android.service.pm.PackageProto.UserInfoProto)
  SharedDtor();
}

void PackageProto_UserInfoProto::SharedDtor() {
  last_disabled_app_caller_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PackageProto_UserInfoProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageProto_UserInfoProto& PackageProto_UserInfoProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PackageProto_UserInfoProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  return *internal_default_instance();
}


void PackageProto_UserInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.pm.PackageProto.UserInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suspending_package_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    last_disabled_app_caller_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&enabled_state_) -
        reinterpret_cast<char*>(&id_)) + sizeof(enabled_state_));
  }
  distraction_flags_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PackageProto_UserInfoProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.pm.PackageProto.UserInfoProto.InstallType install_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::pm::PackageProto_UserInfoProto_InstallType_IsValid(val))) {
            set_install_type(static_cast<::android::service::pm::PackageProto_UserInfoProto_InstallType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bool is_hidden = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_is_hidden(&has_bits);
          is_hidden_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_suspended = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_is_suspended(&has_bits);
          is_suspended_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_stopped = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_is_stopped(&has_bits);
          is_stopped_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_launched = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_is_launched(&has_bits);
          is_launched_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.pm.PackageProto.UserInfoProto.EnabledState enabled_state = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::service::pm::PackageProto_UserInfoProto_EnabledState_IsValid(val))) {
            set_enabled_state(static_cast<::android::service::pm::PackageProto_UserInfoProto_EnabledState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional string last_disabled_app_caller = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_last_disabled_app_caller(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string suspending_package = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(add_suspending_package(), ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 74);
        } else goto handle_unusual;
        continue;
      // optional int32 distraction_flags = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_distraction_flags(&has_bits);
          distraction_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PackageProto_UserInfoProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.service.pm.PackageProto.UserInfoProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.pm.PackageProto.UserInfoProto.InstallType install_type = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::pm::PackageProto_UserInfoProto_InstallType_IsValid(value)) {
            set_install_type(static_cast< ::android::service::pm::PackageProto_UserInfoProto_InstallType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_hidden = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_is_hidden(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_hidden_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_suspended = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_is_suspended(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_suspended_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_stopped = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_is_stopped(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_stopped_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_launched = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_is_launched(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_launched_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.pm.PackageProto.UserInfoProto.EnabledState enabled_state = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::service::pm::PackageProto_UserInfoProto_EnabledState_IsValid(value)) {
            set_enabled_state(static_cast< ::android::service::pm::PackageProto_UserInfoProto_EnabledState >(value));
          } else {
            unknown_fields_stream.WriteVarint32(56u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string last_disabled_app_caller = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_last_disabled_app_caller()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string suspending_package = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_suspending_package()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 distraction_flags = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (80 & 0xFF)) {
          _Internal::set_has_distraction_flags(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &distraction_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.pm.PackageProto.UserInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.pm.PackageProto.UserInfoProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PackageProto_UserInfoProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.pm.PackageProto.UserInfoProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional .android.service.pm.PackageProto.UserInfoProto.InstallType install_type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->install_type(), output);
  }

  // optional bool is_hidden = 3;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->is_hidden(), output);
  }

  // optional bool is_suspended = 4;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(4, this->is_suspended(), output);
  }

  // optional bool is_stopped = 5;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(5, this->is_stopped(), output);
  }

  // optional bool is_launched = 6;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->is_launched(), output);
  }

  // optional .android.service.pm.PackageProto.UserInfoProto.EnabledState enabled_state = 7;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      7, this->enabled_state(), output);
  }

  // optional string last_disabled_app_caller = 8;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->last_disabled_app_caller(), output);
  }

  // repeated string suspending_package = 9;
  for (int i = 0, n = this->suspending_package_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      9, this->suspending_package(i), output);
  }

  // optional int32 distraction_flags = 10;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(10, this->distraction_flags(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.service.pm.PackageProto.UserInfoProto)
}

size_t PackageProto_UserInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.pm.PackageProto.UserInfoProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string suspending_package = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->suspending_package_size());
  for (int i = 0, n = this->suspending_package_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->suspending_package(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string last_disabled_app_caller = 8;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->last_disabled_app_caller());
    }

    // optional int32 id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional .android.service.pm.PackageProto.UserInfoProto.InstallType install_type = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->install_type());
    }

    // optional bool is_hidden = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool is_suspended = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool is_stopped = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool is_launched = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional .android.service.pm.PackageProto.UserInfoProto.EnabledState enabled_state = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->enabled_state());
    }

  }
  // optional int32 distraction_flags = 10;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->distraction_flags());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageProto_UserInfoProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PackageProto_UserInfoProto*>(
      &from));
}

void PackageProto_UserInfoProto::MergeFrom(const PackageProto_UserInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.pm.PackageProto.UserInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  suspending_package_.MergeFrom(from.suspending_package_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      last_disabled_app_caller_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.last_disabled_app_caller_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      install_type_ = from.install_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_hidden_ = from.is_hidden_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_suspended_ = from.is_suspended_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_stopped_ = from.is_stopped_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_launched_ = from.is_launched_;
    }
    if (cached_has_bits & 0x00000080u) {
      enabled_state_ = from.enabled_state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_distraction_flags(from.distraction_flags());
  }
}

void PackageProto_UserInfoProto::CopyFrom(const PackageProto_UserInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.pm.PackageProto.UserInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageProto_UserInfoProto::IsInitialized() const {
  return true;
}

void PackageProto_UserInfoProto::InternalSwap(PackageProto_UserInfoProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  suspending_package_.InternalSwap(CastToBase(&other->suspending_package_));
  last_disabled_app_caller_.Swap(&other->last_disabled_app_caller_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(install_type_, other->install_type_);
  swap(is_hidden_, other->is_hidden_);
  swap(is_suspended_, other->is_suspended_);
  swap(is_stopped_, other->is_stopped_);
  swap(is_launched_, other->is_launched_);
  swap(enabled_state_, other->enabled_state_);
  swap(distraction_flags_, other->distraction_flags_);
}

std::string PackageProto_UserInfoProto::GetTypeName() const {
  return "android.service.pm.PackageProto.UserInfoProto";
}


// ===================================================================

void PackageProto_InstallSourceProto::InitAsDefaultInstance() {
}
class PackageProto_InstallSourceProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PackageProto_InstallSourceProto>()._has_bits_);
  static void set_has_initiating_package_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_originating_package_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PackageProto_InstallSourceProto::PackageProto_InstallSourceProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.pm.PackageProto.InstallSourceProto)
}
PackageProto_InstallSourceProto::PackageProto_InstallSourceProto(const PackageProto_InstallSourceProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  initiating_package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_initiating_package_name()) {
    initiating_package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.initiating_package_name_);
  }
  originating_package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_originating_package_name()) {
    originating_package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.originating_package_name_);
  }
  // @@protoc_insertion_point(copy_constructor:android.service.pm.PackageProto.InstallSourceProto)
}

void PackageProto_InstallSourceProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PackageProto_InstallSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  initiating_package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  originating_package_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PackageProto_InstallSourceProto::~PackageProto_InstallSourceProto() {
  // @@protoc_insertion_point(destructor:android.service.pm.PackageProto.InstallSourceProto)
  SharedDtor();
}

void PackageProto_InstallSourceProto::SharedDtor() {
  initiating_package_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  originating_package_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PackageProto_InstallSourceProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageProto_InstallSourceProto& PackageProto_InstallSourceProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PackageProto_InstallSourceProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  return *internal_default_instance();
}


void PackageProto_InstallSourceProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.pm.PackageProto.InstallSourceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      initiating_package_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      originating_package_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PackageProto_InstallSourceProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string initiating_package_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_initiating_package_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string originating_package_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_originating_package_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PackageProto_InstallSourceProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.service.pm.PackageProto.InstallSourceProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string initiating_package_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_initiating_package_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string originating_package_name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_originating_package_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.pm.PackageProto.InstallSourceProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.pm.PackageProto.InstallSourceProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PackageProto_InstallSourceProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.pm.PackageProto.InstallSourceProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string initiating_package_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->initiating_package_name(), output);
  }

  // optional string originating_package_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->originating_package_name(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.service.pm.PackageProto.InstallSourceProto)
}

size_t PackageProto_InstallSourceProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.pm.PackageProto.InstallSourceProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string initiating_package_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->initiating_package_name());
    }

    // optional string originating_package_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->originating_package_name());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageProto_InstallSourceProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PackageProto_InstallSourceProto*>(
      &from));
}

void PackageProto_InstallSourceProto::MergeFrom(const PackageProto_InstallSourceProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.pm.PackageProto.InstallSourceProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      initiating_package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.initiating_package_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      originating_package_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.originating_package_name_);
    }
  }
}

void PackageProto_InstallSourceProto::CopyFrom(const PackageProto_InstallSourceProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.pm.PackageProto.InstallSourceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageProto_InstallSourceProto::IsInitialized() const {
  return true;
}

void PackageProto_InstallSourceProto::InternalSwap(PackageProto_InstallSourceProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  initiating_package_name_.Swap(&other->initiating_package_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  originating_package_name_.Swap(&other->originating_package_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

std::string PackageProto_InstallSourceProto::GetTypeName() const {
  return "android.service.pm.PackageProto.InstallSourceProto";
}


// ===================================================================

void PackageProto_StatesProto::InitAsDefaultInstance() {
}
class PackageProto_StatesProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PackageProto_StatesProto>()._has_bits_);
  static void set_has_is_loading(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PackageProto_StatesProto::PackageProto_StatesProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.pm.PackageProto.StatesProto)
}
PackageProto_StatesProto::PackageProto_StatesProto(const PackageProto_StatesProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_loading_ = from.is_loading_;
  // @@protoc_insertion_point(copy_constructor:android.service.pm.PackageProto.StatesProto)
}

void PackageProto_StatesProto::SharedCtor() {
  is_loading_ = false;
}

PackageProto_StatesProto::~PackageProto_StatesProto() {
  // @@protoc_insertion_point(destructor:android.service.pm.PackageProto.StatesProto)
  SharedDtor();
}

void PackageProto_StatesProto::SharedDtor() {
}

void PackageProto_StatesProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageProto_StatesProto& PackageProto_StatesProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PackageProto_StatesProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  return *internal_default_instance();
}


void PackageProto_StatesProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.pm.PackageProto.StatesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_loading_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PackageProto_StatesProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool is_loading = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_is_loading(&has_bits);
          is_loading_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PackageProto_StatesProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.service.pm.PackageProto.StatesProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_loading = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_is_loading(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_loading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.pm.PackageProto.StatesProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.pm.PackageProto.StatesProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PackageProto_StatesProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.pm.PackageProto.StatesProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_loading = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->is_loading(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.service.pm.PackageProto.StatesProto)
}

size_t PackageProto_StatesProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.pm.PackageProto.StatesProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool is_loading = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageProto_StatesProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PackageProto_StatesProto*>(
      &from));
}

void PackageProto_StatesProto::MergeFrom(const PackageProto_StatesProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.pm.PackageProto.StatesProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_is_loading()) {
    set_is_loading(from.is_loading());
  }
}

void PackageProto_StatesProto::CopyFrom(const PackageProto_StatesProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.pm.PackageProto.StatesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageProto_StatesProto::IsInitialized() const {
  return true;
}

void PackageProto_StatesProto::InternalSwap(PackageProto_StatesProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(is_loading_, other->is_loading_);
}

std::string PackageProto_StatesProto::GetTypeName() const {
  return "android.service.pm.PackageProto.StatesProto";
}


// ===================================================================

void PackageProto_UserPermissionsProto::InitAsDefaultInstance() {
}
class PackageProto_UserPermissionsProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PackageProto_UserPermissionsProto>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PackageProto_UserPermissionsProto::PackageProto_UserPermissionsProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.pm.PackageProto.UserPermissionsProto)
}
PackageProto_UserPermissionsProto::PackageProto_UserPermissionsProto(const PackageProto_UserPermissionsProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      granted_permissions_(from.granted_permissions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:android.service.pm.PackageProto.UserPermissionsProto)
}

void PackageProto_UserPermissionsProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PackageProto_UserPermissionsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  id_ = 0;
}

PackageProto_UserPermissionsProto::~PackageProto_UserPermissionsProto() {
  // @@protoc_insertion_point(destructor:android.service.pm.PackageProto.UserPermissionsProto)
  SharedDtor();
}

void PackageProto_UserPermissionsProto::SharedDtor() {
}

void PackageProto_UserPermissionsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageProto_UserPermissionsProto& PackageProto_UserPermissionsProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PackageProto_UserPermissionsProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  return *internal_default_instance();
}


void PackageProto_UserPermissionsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.pm.PackageProto.UserPermissionsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  granted_permissions_.Clear();
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PackageProto_UserPermissionsProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string granted_permissions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(add_granted_permissions(), ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PackageProto_UserPermissionsProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.service.pm.PackageProto.UserPermissionsProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string granted_permissions = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_granted_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.pm.PackageProto.UserPermissionsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.pm.PackageProto.UserPermissionsProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PackageProto_UserPermissionsProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.pm.PackageProto.UserPermissionsProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated string granted_permissions = 2;
  for (int i = 0, n = this->granted_permissions_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      2, this->granted_permissions(i), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.service.pm.PackageProto.UserPermissionsProto)
}

size_t PackageProto_UserPermissionsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.pm.PackageProto.UserPermissionsProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string granted_permissions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->granted_permissions_size());
  for (int i = 0, n = this->granted_permissions_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->granted_permissions(i));
  }

  // optional int32 id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageProto_UserPermissionsProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PackageProto_UserPermissionsProto*>(
      &from));
}

void PackageProto_UserPermissionsProto::MergeFrom(const PackageProto_UserPermissionsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.pm.PackageProto.UserPermissionsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  granted_permissions_.MergeFrom(from.granted_permissions_);
  if (from.has_id()) {
    set_id(from.id());
  }
}

void PackageProto_UserPermissionsProto::CopyFrom(const PackageProto_UserPermissionsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.pm.PackageProto.UserPermissionsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageProto_UserPermissionsProto::IsInitialized() const {
  return true;
}

void PackageProto_UserPermissionsProto::InternalSwap(PackageProto_UserPermissionsProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  granted_permissions_.InternalSwap(CastToBase(&other->granted_permissions_));
  swap(id_, other->id_);
}

std::string PackageProto_UserPermissionsProto::GetTypeName() const {
  return "android.service.pm.PackageProto.UserPermissionsProto";
}


// ===================================================================

void PackageProto::InitAsDefaultInstance() {
  ::android::service::pm::_PackageProto_default_instance_._instance.get_mutable()->install_source_ = const_cast< ::android::service::pm::PackageProto_InstallSourceProto*>(
      ::android::service::pm::PackageProto_InstallSourceProto::internal_default_instance());
  ::android::service::pm::_PackageProto_default_instance_._instance.get_mutable()->states_ = const_cast< ::android::service::pm::PackageProto_StatesProto*>(
      ::android::service::pm::PackageProto_StatesProto::internal_default_instance());
}
class PackageProto::_Internal {
 public:
  using HasBits = decltype(std::declval<PackageProto>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_version_code(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_version_string(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_install_time_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_update_time_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_installer_name(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::android::service::pm::PackageProto_InstallSourceProto& install_source(const PackageProto* msg);
  static void set_has_install_source(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::android::service::pm::PackageProto_StatesProto& states(const PackageProto* msg);
  static void set_has_states(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::android::service::pm::PackageProto_InstallSourceProto&
PackageProto::_Internal::install_source(const PackageProto* msg) {
  return *msg->install_source_;
}
const ::android::service::pm::PackageProto_StatesProto&
PackageProto::_Internal::states(const PackageProto* msg) {
  return *msg->states_;
}
PackageProto::PackageProto()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.service.pm.PackageProto)
}
PackageProto::PackageProto(const PackageProto& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      splits_(from.splits_),
      users_(from.users_),
      user_permissions_(from.user_permissions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  version_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_version_string()) {
    version_string_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.version_string_);
  }
  installer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_installer_name()) {
    installer_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.installer_name_);
  }
  if (from.has_install_source()) {
    install_source_ = new ::android::service::pm::PackageProto_InstallSourceProto(*from.install_source_);
  } else {
    install_source_ = nullptr;
  }
  if (from.has_states()) {
    states_ = new ::android::service::pm::PackageProto_StatesProto(*from.states_);
  } else {
    states_ = nullptr;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&update_time_ms_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(update_time_ms_));
  // @@protoc_insertion_point(copy_constructor:android.service.pm.PackageProto)
}

void PackageProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PackageProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  installer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&install_source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_time_ms_) -
      reinterpret_cast<char*>(&install_source_)) + sizeof(update_time_ms_));
}

PackageProto::~PackageProto() {
  // @@protoc_insertion_point(destructor:android.service.pm.PackageProto)
  SharedDtor();
}

void PackageProto::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  installer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete install_source_;
  if (this != internal_default_instance()) delete states_;
}

void PackageProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PackageProto& PackageProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PackageProto_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fpackage_2eproto.base);
  return *internal_default_instance();
}


void PackageProto::Clear() {
// @@protoc_insertion_point(message_clear_start:android.service.pm.PackageProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  splits_.Clear();
  users_.Clear();
  user_permissions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      version_string_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      installer_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(install_source_ != nullptr);
      install_source_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(states_ != nullptr);
      states_->Clear();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&uid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&install_time_ms_) -
        reinterpret_cast<char*>(&uid_)) + sizeof(install_time_ms_));
  }
  update_time_ms_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PackageProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_uid(&has_bits);
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 version_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_version_code(&has_bits);
          version_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string version_string = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_version_string(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 install_time_ms = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_install_time_ms(&has_bits);
          install_time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 update_time_ms = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_update_time_ms(&has_bits);
          update_time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string installer_name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_installer_name(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.pm.PackageProto.SplitProto splits = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_splits(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 66);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.pm.PackageProto.UserInfoProto users = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_users(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 74);
        } else goto handle_unusual;
        continue;
      // optional .android.service.pm.PackageProto.InstallSourceProto install_source = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_install_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.service.pm.PackageProto.StatesProto states = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(mutable_states(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .android.service.pm.PackageProto.UserPermissionsProto user_permissions = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_user_permissions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 98);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PackageProto::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.service.pm.PackageProto)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 uid = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_uid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 version_code = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_version_code(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version_string = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_version_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 install_time_ms = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_install_time_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &install_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 update_time_ms = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_update_time_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string installer_name = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_installer_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.pm.PackageProto.SplitProto splits = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_splits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.pm.PackageProto.UserInfoProto users = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_users()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.pm.PackageProto.InstallSourceProto install_source = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_install_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.service.pm.PackageProto.StatesProto states = 11;
      case 11: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (90 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_states()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.service.pm.PackageProto.UserPermissionsProto user_permissions = 12;
      case 12: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (98 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_user_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.service.pm.PackageProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.service.pm.PackageProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PackageProto::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.service.pm.PackageProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 uid = 2;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->uid(), output);
  }

  // optional int32 version_code = 3;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->version_code(), output);
  }

  // optional string version_string = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->version_string(), output);
  }

  // optional int64 install_time_ms = 5;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(5, this->install_time_ms(), output);
  }

  // optional int64 update_time_ms = 6;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(6, this->update_time_ms(), output);
  }

  // optional string installer_name = 7;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->installer_name(), output);
  }

  // repeated .android.service.pm.PackageProto.SplitProto splits = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->splits_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      8,
      this->splits(static_cast<int>(i)),
      output);
  }

  // repeated .android.service.pm.PackageProto.UserInfoProto users = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      9,
      this->users(static_cast<int>(i)),
      output);
  }

  // optional .android.service.pm.PackageProto.InstallSourceProto install_source = 10;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      10, _Internal::install_source(this), output);
  }

  // optional .android.service.pm.PackageProto.StatesProto states = 11;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      11, _Internal::states(this), output);
  }

  // repeated .android.service.pm.PackageProto.UserPermissionsProto user_permissions = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_permissions_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      12,
      this->user_permissions(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.service.pm.PackageProto)
}

size_t PackageProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.service.pm.PackageProto)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.service.pm.PackageProto.SplitProto splits = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->splits_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->splits(static_cast<int>(i)));
    }
  }

  // repeated .android.service.pm.PackageProto.UserInfoProto users = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->users_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->users(static_cast<int>(i)));
    }
  }

  // repeated .android.service.pm.PackageProto.UserPermissionsProto user_permissions = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->user_permissions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->user_permissions(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string version_string = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->version_string());
    }

    // optional string installer_name = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->installer_name());
    }

    // optional .android.service.pm.PackageProto.InstallSourceProto install_source = 10;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *install_source_);
    }

    // optional .android.service.pm.PackageProto.StatesProto states = 11;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *states_);
    }

    // optional int32 uid = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->uid());
    }

    // optional int32 version_code = 3;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->version_code());
    }

    // optional int64 install_time_ms = 5;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->install_time_ms());
    }

  }
  // optional int64 update_time_ms = 6;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->update_time_ms());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PackageProto::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PackageProto*>(
      &from));
}

void PackageProto::MergeFrom(const PackageProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.service.pm.PackageProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  splits_.MergeFrom(from.splits_);
  users_.MergeFrom(from.users_);
  user_permissions_.MergeFrom(from.user_permissions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      version_string_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.version_string_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      installer_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.installer_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_install_source()->::android::service::pm::PackageProto_InstallSourceProto::MergeFrom(from.install_source());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_states()->::android::service::pm::PackageProto_StatesProto::MergeFrom(from.states());
    }
    if (cached_has_bits & 0x00000020u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000040u) {
      version_code_ = from.version_code_;
    }
    if (cached_has_bits & 0x00000080u) {
      install_time_ms_ = from.install_time_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_update_time_ms(from.update_time_ms());
  }
}

void PackageProto::CopyFrom(const PackageProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.service.pm.PackageProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageProto::IsInitialized() const {
  return true;
}

void PackageProto::InternalSwap(PackageProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&splits_)->InternalSwap(CastToBase(&other->splits_));
  CastToBase(&users_)->InternalSwap(CastToBase(&other->users_));
  CastToBase(&user_permissions_)->InternalSwap(CastToBase(&other->user_permissions_));
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_string_.Swap(&other->version_string_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  installer_name_.Swap(&other->installer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(install_source_, other->install_source_);
  swap(states_, other->states_);
  swap(uid_, other->uid_);
  swap(version_code_, other->version_code_);
  swap(install_time_ms_, other->install_time_ms_);
  swap(update_time_ms_, other->update_time_ms_);
}

std::string PackageProto::GetTypeName() const {
  return "android.service.pm.PackageProto";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pm
}  // namespace service
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::service::pm::PackageServiceDumpProto_PackageShortProto* Arena::CreateMaybeMessage< ::android::service::pm::PackageServiceDumpProto_PackageShortProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::pm::PackageServiceDumpProto_PackageShortProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::pm::PackageServiceDumpProto_SharedLibraryProto* Arena::CreateMaybeMessage< ::android::service::pm::PackageServiceDumpProto_SharedLibraryProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::pm::PackageServiceDumpProto_SharedLibraryProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::pm::PackageServiceDumpProto_SharedUserProto* Arena::CreateMaybeMessage< ::android::service::pm::PackageServiceDumpProto_SharedUserProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::pm::PackageServiceDumpProto_SharedUserProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::pm::PackageServiceDumpProto* Arena::CreateMaybeMessage< ::android::service::pm::PackageServiceDumpProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::pm::PackageServiceDumpProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::pm::PackageProto_SplitProto* Arena::CreateMaybeMessage< ::android::service::pm::PackageProto_SplitProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::pm::PackageProto_SplitProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::pm::PackageProto_UserInfoProto* Arena::CreateMaybeMessage< ::android::service::pm::PackageProto_UserInfoProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::pm::PackageProto_UserInfoProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::pm::PackageProto_InstallSourceProto* Arena::CreateMaybeMessage< ::android::service::pm::PackageProto_InstallSourceProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::pm::PackageProto_InstallSourceProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::pm::PackageProto_StatesProto* Arena::CreateMaybeMessage< ::android::service::pm::PackageProto_StatesProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::pm::PackageProto_StatesProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::pm::PackageProto_UserPermissionsProto* Arena::CreateMaybeMessage< ::android::service::pm::PackageProto_UserPermissionsProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::pm::PackageProto_UserPermissionsProto >(arena);
}
template<> PROTOBUF_NOINLINE ::android::service::pm::PackageProto* Arena::CreateMaybeMessage< ::android::service::pm::PackageProto >(Arena* arena) {
  return Arena::CreateInternal< ::android::service::pm::PackageProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
