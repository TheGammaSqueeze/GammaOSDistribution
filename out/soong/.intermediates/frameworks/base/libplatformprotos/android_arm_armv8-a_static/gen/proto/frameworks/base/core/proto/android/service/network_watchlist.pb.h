// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/service/network_watchlist.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace com {
namespace android {
namespace service {
class NetworkWatchlistAppResultProto;
class NetworkWatchlistAppResultProtoDefaultTypeInternal;
extern NetworkWatchlistAppResultProtoDefaultTypeInternal _NetworkWatchlistAppResultProto_default_instance_;
class NetworkWatchlistReportProto;
class NetworkWatchlistReportProtoDefaultTypeInternal;
extern NetworkWatchlistReportProtoDefaultTypeInternal _NetworkWatchlistReportProto_default_instance_;
}  // namespace service
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::android::service::NetworkWatchlistAppResultProto* Arena::CreateMaybeMessage<::com::android::service::NetworkWatchlistAppResultProto>(Arena*);
template<> ::com::android::service::NetworkWatchlistReportProto* Arena::CreateMaybeMessage<::com::android::service::NetworkWatchlistReportProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace android {
namespace service {

// ===================================================================

class NetworkWatchlistReportProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.service.NetworkWatchlistReportProto) */ {
 public:
  NetworkWatchlistReportProto();
  virtual ~NetworkWatchlistReportProto();

  NetworkWatchlistReportProto(const NetworkWatchlistReportProto& from);
  NetworkWatchlistReportProto(NetworkWatchlistReportProto&& from) noexcept
    : NetworkWatchlistReportProto() {
    *this = ::std::move(from);
  }

  inline NetworkWatchlistReportProto& operator=(const NetworkWatchlistReportProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkWatchlistReportProto& operator=(NetworkWatchlistReportProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const NetworkWatchlistReportProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkWatchlistReportProto* internal_default_instance() {
    return reinterpret_cast<const NetworkWatchlistReportProto*>(
               &_NetworkWatchlistReportProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NetworkWatchlistReportProto& a, NetworkWatchlistReportProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NetworkWatchlistReportProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NetworkWatchlistReportProto* New() const final {
    return CreateMaybeMessage<NetworkWatchlistReportProto>(nullptr);
  }

  NetworkWatchlistReportProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NetworkWatchlistReportProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const NetworkWatchlistReportProto& from);
  void MergeFrom(const NetworkWatchlistReportProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NetworkWatchlistReportProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.service.NetworkWatchlistReportProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppResultFieldNumber = 3,
    kWatchlistConfigHashFieldNumber = 2,
    kReportVersionFieldNumber = 1,
  };
  // repeated .com.android.service.NetworkWatchlistAppResultProto app_result = 3;
  int app_result_size() const;
  void clear_app_result();
  ::com::android::service::NetworkWatchlistAppResultProto* mutable_app_result(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::service::NetworkWatchlistAppResultProto >*
      mutable_app_result();
  const ::com::android::service::NetworkWatchlistAppResultProto& app_result(int index) const;
  ::com::android::service::NetworkWatchlistAppResultProto* add_app_result();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::service::NetworkWatchlistAppResultProto >&
      app_result() const;

  // optional string watchlist_config_hash = 2;
  bool has_watchlist_config_hash() const;
  void clear_watchlist_config_hash();
  const std::string& watchlist_config_hash() const;
  void set_watchlist_config_hash(const std::string& value);
  void set_watchlist_config_hash(std::string&& value);
  void set_watchlist_config_hash(const char* value);
  void set_watchlist_config_hash(const char* value, size_t size);
  std::string* mutable_watchlist_config_hash();
  std::string* release_watchlist_config_hash();
  void set_allocated_watchlist_config_hash(std::string* watchlist_config_hash);

  // optional int32 report_version = 1;
  bool has_report_version() const;
  void clear_report_version();
  ::PROTOBUF_NAMESPACE_ID::int32 report_version() const;
  void set_report_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.service.NetworkWatchlistReportProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::service::NetworkWatchlistAppResultProto > app_result_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr watchlist_config_hash_;
  ::PROTOBUF_NAMESPACE_ID::int32 report_version_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto;
};
// -------------------------------------------------------------------

class NetworkWatchlistAppResultProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.service.NetworkWatchlistAppResultProto) */ {
 public:
  NetworkWatchlistAppResultProto();
  virtual ~NetworkWatchlistAppResultProto();

  NetworkWatchlistAppResultProto(const NetworkWatchlistAppResultProto& from);
  NetworkWatchlistAppResultProto(NetworkWatchlistAppResultProto&& from) noexcept
    : NetworkWatchlistAppResultProto() {
    *this = ::std::move(from);
  }

  inline NetworkWatchlistAppResultProto& operator=(const NetworkWatchlistAppResultProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkWatchlistAppResultProto& operator=(NetworkWatchlistAppResultProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const NetworkWatchlistAppResultProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetworkWatchlistAppResultProto* internal_default_instance() {
    return reinterpret_cast<const NetworkWatchlistAppResultProto*>(
               &_NetworkWatchlistAppResultProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(NetworkWatchlistAppResultProto& a, NetworkWatchlistAppResultProto& b) {
    a.Swap(&b);
  }
  inline void Swap(NetworkWatchlistAppResultProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NetworkWatchlistAppResultProto* New() const final {
    return CreateMaybeMessage<NetworkWatchlistAppResultProto>(nullptr);
  }

  NetworkWatchlistAppResultProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NetworkWatchlistAppResultProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const NetworkWatchlistAppResultProto& from);
  void MergeFrom(const NetworkWatchlistAppResultProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NetworkWatchlistAppResultProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.service.NetworkWatchlistAppResultProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppDigestFieldNumber = 1,
    kEncodedResultFieldNumber = 2,
  };
  // optional string app_digest = 1;
  bool has_app_digest() const;
  void clear_app_digest();
  const std::string& app_digest() const;
  void set_app_digest(const std::string& value);
  void set_app_digest(std::string&& value);
  void set_app_digest(const char* value);
  void set_app_digest(const char* value, size_t size);
  std::string* mutable_app_digest();
  std::string* release_app_digest();
  void set_allocated_app_digest(std::string* app_digest);

  // optional bool encoded_result = 2;
  bool has_encoded_result() const;
  void clear_encoded_result();
  bool encoded_result() const;
  void set_encoded_result(bool value);

  // @@protoc_insertion_point(class_scope:com.android.service.NetworkWatchlistAppResultProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr app_digest_;
  bool encoded_result_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NetworkWatchlistReportProto

// optional int32 report_version = 1;
inline bool NetworkWatchlistReportProto::has_report_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetworkWatchlistReportProto::clear_report_version() {
  report_version_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NetworkWatchlistReportProto::report_version() const {
  // @@protoc_insertion_point(field_get:com.android.service.NetworkWatchlistReportProto.report_version)
  return report_version_;
}
inline void NetworkWatchlistReportProto::set_report_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  report_version_ = value;
  // @@protoc_insertion_point(field_set:com.android.service.NetworkWatchlistReportProto.report_version)
}

// optional string watchlist_config_hash = 2;
inline bool NetworkWatchlistReportProto::has_watchlist_config_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetworkWatchlistReportProto::clear_watchlist_config_hash() {
  watchlist_config_hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& NetworkWatchlistReportProto::watchlist_config_hash() const {
  // @@protoc_insertion_point(field_get:com.android.service.NetworkWatchlistReportProto.watchlist_config_hash)
  return watchlist_config_hash_.GetNoArena();
}
inline void NetworkWatchlistReportProto::set_watchlist_config_hash(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  watchlist_config_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.service.NetworkWatchlistReportProto.watchlist_config_hash)
}
inline void NetworkWatchlistReportProto::set_watchlist_config_hash(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  watchlist_config_hash_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.service.NetworkWatchlistReportProto.watchlist_config_hash)
}
inline void NetworkWatchlistReportProto::set_watchlist_config_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  watchlist_config_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.service.NetworkWatchlistReportProto.watchlist_config_hash)
}
inline void NetworkWatchlistReportProto::set_watchlist_config_hash(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  watchlist_config_hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.service.NetworkWatchlistReportProto.watchlist_config_hash)
}
inline std::string* NetworkWatchlistReportProto::mutable_watchlist_config_hash() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.service.NetworkWatchlistReportProto.watchlist_config_hash)
  return watchlist_config_hash_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NetworkWatchlistReportProto::release_watchlist_config_hash() {
  // @@protoc_insertion_point(field_release:com.android.service.NetworkWatchlistReportProto.watchlist_config_hash)
  if (!has_watchlist_config_hash()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return watchlist_config_hash_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NetworkWatchlistReportProto::set_allocated_watchlist_config_hash(std::string* watchlist_config_hash) {
  if (watchlist_config_hash != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  watchlist_config_hash_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), watchlist_config_hash);
  // @@protoc_insertion_point(field_set_allocated:com.android.service.NetworkWatchlistReportProto.watchlist_config_hash)
}

// repeated .com.android.service.NetworkWatchlistAppResultProto app_result = 3;
inline int NetworkWatchlistReportProto::app_result_size() const {
  return app_result_.size();
}
inline void NetworkWatchlistReportProto::clear_app_result() {
  app_result_.Clear();
}
inline ::com::android::service::NetworkWatchlistAppResultProto* NetworkWatchlistReportProto::mutable_app_result(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.service.NetworkWatchlistReportProto.app_result)
  return app_result_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::service::NetworkWatchlistAppResultProto >*
NetworkWatchlistReportProto::mutable_app_result() {
  // @@protoc_insertion_point(field_mutable_list:com.android.service.NetworkWatchlistReportProto.app_result)
  return &app_result_;
}
inline const ::com::android::service::NetworkWatchlistAppResultProto& NetworkWatchlistReportProto::app_result(int index) const {
  // @@protoc_insertion_point(field_get:com.android.service.NetworkWatchlistReportProto.app_result)
  return app_result_.Get(index);
}
inline ::com::android::service::NetworkWatchlistAppResultProto* NetworkWatchlistReportProto::add_app_result() {
  // @@protoc_insertion_point(field_add:com.android.service.NetworkWatchlistReportProto.app_result)
  return app_result_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::service::NetworkWatchlistAppResultProto >&
NetworkWatchlistReportProto::app_result() const {
  // @@protoc_insertion_point(field_list:com.android.service.NetworkWatchlistReportProto.app_result)
  return app_result_;
}

// -------------------------------------------------------------------

// NetworkWatchlistAppResultProto

// optional string app_digest = 1;
inline bool NetworkWatchlistAppResultProto::has_app_digest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetworkWatchlistAppResultProto::clear_app_digest() {
  app_digest_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& NetworkWatchlistAppResultProto::app_digest() const {
  // @@protoc_insertion_point(field_get:com.android.service.NetworkWatchlistAppResultProto.app_digest)
  return app_digest_.GetNoArena();
}
inline void NetworkWatchlistAppResultProto::set_app_digest(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  app_digest_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.android.service.NetworkWatchlistAppResultProto.app_digest)
}
inline void NetworkWatchlistAppResultProto::set_app_digest(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  app_digest_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.android.service.NetworkWatchlistAppResultProto.app_digest)
}
inline void NetworkWatchlistAppResultProto::set_app_digest(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  app_digest_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.android.service.NetworkWatchlistAppResultProto.app_digest)
}
inline void NetworkWatchlistAppResultProto::set_app_digest(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  app_digest_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.android.service.NetworkWatchlistAppResultProto.app_digest)
}
inline std::string* NetworkWatchlistAppResultProto::mutable_app_digest() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.android.service.NetworkWatchlistAppResultProto.app_digest)
  return app_digest_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NetworkWatchlistAppResultProto::release_app_digest() {
  // @@protoc_insertion_point(field_release:com.android.service.NetworkWatchlistAppResultProto.app_digest)
  if (!has_app_digest()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return app_digest_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NetworkWatchlistAppResultProto::set_allocated_app_digest(std::string* app_digest) {
  if (app_digest != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  app_digest_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), app_digest);
  // @@protoc_insertion_point(field_set_allocated:com.android.service.NetworkWatchlistAppResultProto.app_digest)
}

// optional bool encoded_result = 2;
inline bool NetworkWatchlistAppResultProto::has_encoded_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetworkWatchlistAppResultProto::clear_encoded_result() {
  encoded_result_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool NetworkWatchlistAppResultProto::encoded_result() const {
  // @@protoc_insertion_point(field_get:com.android.service.NetworkWatchlistAppResultProto.encoded_result)
  return encoded_result_;
}
inline void NetworkWatchlistAppResultProto::set_encoded_result(bool value) {
  _has_bits_[0] |= 0x00000002u;
  encoded_result_ = value;
  // @@protoc_insertion_point(field_set:com.android.service.NetworkWatchlistAppResultProto.encoded_result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace service
}  // namespace android
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fnetwork_5fwatchlist_2eproto
