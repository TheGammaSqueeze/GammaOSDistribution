// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/nfc/apdu_service_info.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fapdu_5fservice_5finfo_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fapdu_5fservice_5finfo_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "frameworks/base/core/proto/android/content/component_name.pb.h"
#include "frameworks/base/core/proto/android/nfc/aid_group.pb.h"
#include "frameworks/base/core/proto/android/privacy.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fapdu_5fservice_5finfo_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fapdu_5fservice_5finfo_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace nfc {
namespace cardemulation {
class ApduServiceInfoProto;
class ApduServiceInfoProtoDefaultTypeInternal;
extern ApduServiceInfoProtoDefaultTypeInternal _ApduServiceInfoProto_default_instance_;
}  // namespace cardemulation
}  // namespace nfc
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::nfc::cardemulation::ApduServiceInfoProto* Arena::CreateMaybeMessage<::android::nfc::cardemulation::ApduServiceInfoProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace nfc {
namespace cardemulation {

// ===================================================================

class ApduServiceInfoProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.nfc.cardemulation.ApduServiceInfoProto) */ {
 public:
  ApduServiceInfoProto();
  virtual ~ApduServiceInfoProto();

  ApduServiceInfoProto(const ApduServiceInfoProto& from);
  ApduServiceInfoProto(ApduServiceInfoProto&& from) noexcept
    : ApduServiceInfoProto() {
    *this = ::std::move(from);
  }

  inline ApduServiceInfoProto& operator=(const ApduServiceInfoProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApduServiceInfoProto& operator=(ApduServiceInfoProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ApduServiceInfoProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApduServiceInfoProto* internal_default_instance() {
    return reinterpret_cast<const ApduServiceInfoProto*>(
               &_ApduServiceInfoProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ApduServiceInfoProto& a, ApduServiceInfoProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ApduServiceInfoProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ApduServiceInfoProto* New() const final {
    return CreateMaybeMessage<ApduServiceInfoProto>(nullptr);
  }

  ApduServiceInfoProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ApduServiceInfoProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ApduServiceInfoProto& from);
  void MergeFrom(const ApduServiceInfoProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ApduServiceInfoProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.nfc.cardemulation.ApduServiceInfoProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStaticAidGroupsFieldNumber = 6,
    kDynamicAidGroupsFieldNumber = 7,
    kDescriptionFieldNumber = 2,
    kOffHostNameFieldNumber = 4,
    kStaticOffHostNameFieldNumber = 5,
    kSettingsActivityNameFieldNumber = 8,
    kComponentNameFieldNumber = 1,
    kOnHostFieldNumber = 3,
  };
  // repeated .android.nfc.cardemulation.AidGroupProto static_aid_groups = 6;
  int static_aid_groups_size() const;
  void clear_static_aid_groups();
  ::android::nfc::cardemulation::AidGroupProto* mutable_static_aid_groups(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::cardemulation::AidGroupProto >*
      mutable_static_aid_groups();
  const ::android::nfc::cardemulation::AidGroupProto& static_aid_groups(int index) const;
  ::android::nfc::cardemulation::AidGroupProto* add_static_aid_groups();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::cardemulation::AidGroupProto >&
      static_aid_groups() const;

  // repeated .android.nfc.cardemulation.AidGroupProto dynamic_aid_groups = 7;
  int dynamic_aid_groups_size() const;
  void clear_dynamic_aid_groups();
  ::android::nfc::cardemulation::AidGroupProto* mutable_dynamic_aid_groups(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::cardemulation::AidGroupProto >*
      mutable_dynamic_aid_groups();
  const ::android::nfc::cardemulation::AidGroupProto& dynamic_aid_groups(int index) const;
  ::android::nfc::cardemulation::AidGroupProto* add_dynamic_aid_groups();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::cardemulation::AidGroupProto >&
      dynamic_aid_groups() const;

  // optional string description = 2;
  bool has_description() const;
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);

  // optional string off_host_name = 4;
  bool has_off_host_name() const;
  void clear_off_host_name();
  const std::string& off_host_name() const;
  void set_off_host_name(const std::string& value);
  void set_off_host_name(std::string&& value);
  void set_off_host_name(const char* value);
  void set_off_host_name(const char* value, size_t size);
  std::string* mutable_off_host_name();
  std::string* release_off_host_name();
  void set_allocated_off_host_name(std::string* off_host_name);

  // optional string static_off_host_name = 5;
  bool has_static_off_host_name() const;
  void clear_static_off_host_name();
  const std::string& static_off_host_name() const;
  void set_static_off_host_name(const std::string& value);
  void set_static_off_host_name(std::string&& value);
  void set_static_off_host_name(const char* value);
  void set_static_off_host_name(const char* value, size_t size);
  std::string* mutable_static_off_host_name();
  std::string* release_static_off_host_name();
  void set_allocated_static_off_host_name(std::string* static_off_host_name);

  // optional string settings_activity_name = 8;
  bool has_settings_activity_name() const;
  void clear_settings_activity_name();
  const std::string& settings_activity_name() const;
  void set_settings_activity_name(const std::string& value);
  void set_settings_activity_name(std::string&& value);
  void set_settings_activity_name(const char* value);
  void set_settings_activity_name(const char* value, size_t size);
  std::string* mutable_settings_activity_name();
  std::string* release_settings_activity_name();
  void set_allocated_settings_activity_name(std::string* settings_activity_name);

  // optional .android.content.ComponentNameProto component_name = 1;
  bool has_component_name() const;
  void clear_component_name();
  const ::android::content::ComponentNameProto& component_name() const;
  ::android::content::ComponentNameProto* release_component_name();
  ::android::content::ComponentNameProto* mutable_component_name();
  void set_allocated_component_name(::android::content::ComponentNameProto* component_name);

  // optional bool on_host = 3;
  bool has_on_host() const;
  void clear_on_host();
  bool on_host() const;
  void set_on_host(bool value);

  // @@protoc_insertion_point(class_scope:android.nfc.cardemulation.ApduServiceInfoProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::cardemulation::AidGroupProto > static_aid_groups_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::cardemulation::AidGroupProto > dynamic_aid_groups_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr off_host_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr static_off_host_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr settings_activity_name_;
  ::android::content::ComponentNameProto* component_name_;
  bool on_host_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fapdu_5fservice_5finfo_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ApduServiceInfoProto

// optional .android.content.ComponentNameProto component_name = 1;
inline bool ApduServiceInfoProto::has_component_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline const ::android::content::ComponentNameProto& ApduServiceInfoProto::component_name() const {
  const ::android::content::ComponentNameProto* p = component_name_;
  // @@protoc_insertion_point(field_get:android.nfc.cardemulation.ApduServiceInfoProto.component_name)
  return p != nullptr ? *p : *reinterpret_cast<const ::android::content::ComponentNameProto*>(
      &::android::content::_ComponentNameProto_default_instance_);
}
inline ::android::content::ComponentNameProto* ApduServiceInfoProto::release_component_name() {
  // @@protoc_insertion_point(field_release:android.nfc.cardemulation.ApduServiceInfoProto.component_name)
  _has_bits_[0] &= ~0x00000010u;
  ::android::content::ComponentNameProto* temp = component_name_;
  component_name_ = nullptr;
  return temp;
}
inline ::android::content::ComponentNameProto* ApduServiceInfoProto::mutable_component_name() {
  _has_bits_[0] |= 0x00000010u;
  if (component_name_ == nullptr) {
    auto* p = CreateMaybeMessage<::android::content::ComponentNameProto>(GetArenaNoVirtual());
    component_name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:android.nfc.cardemulation.ApduServiceInfoProto.component_name)
  return component_name_;
}
inline void ApduServiceInfoProto::set_allocated_component_name(::android::content::ComponentNameProto* component_name) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(component_name_);
  }
  if (component_name) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      component_name = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, component_name, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  component_name_ = component_name;
  // @@protoc_insertion_point(field_set_allocated:android.nfc.cardemulation.ApduServiceInfoProto.component_name)
}

// optional string description = 2;
inline bool ApduServiceInfoProto::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApduServiceInfoProto::clear_description() {
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ApduServiceInfoProto::description() const {
  // @@protoc_insertion_point(field_get:android.nfc.cardemulation.ApduServiceInfoProto.description)
  return description_.GetNoArena();
}
inline void ApduServiceInfoProto::set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.nfc.cardemulation.ApduServiceInfoProto.description)
}
inline void ApduServiceInfoProto::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.nfc.cardemulation.ApduServiceInfoProto.description)
}
inline void ApduServiceInfoProto::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.nfc.cardemulation.ApduServiceInfoProto.description)
}
inline void ApduServiceInfoProto::set_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.nfc.cardemulation.ApduServiceInfoProto.description)
}
inline std::string* ApduServiceInfoProto::mutable_description() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.nfc.cardemulation.ApduServiceInfoProto.description)
  return description_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ApduServiceInfoProto::release_description() {
  // @@protoc_insertion_point(field_release:android.nfc.cardemulation.ApduServiceInfoProto.description)
  if (!has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return description_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ApduServiceInfoProto::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  description_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:android.nfc.cardemulation.ApduServiceInfoProto.description)
}

// optional bool on_host = 3;
inline bool ApduServiceInfoProto::has_on_host() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ApduServiceInfoProto::clear_on_host() {
  on_host_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool ApduServiceInfoProto::on_host() const {
  // @@protoc_insertion_point(field_get:android.nfc.cardemulation.ApduServiceInfoProto.on_host)
  return on_host_;
}
inline void ApduServiceInfoProto::set_on_host(bool value) {
  _has_bits_[0] |= 0x00000020u;
  on_host_ = value;
  // @@protoc_insertion_point(field_set:android.nfc.cardemulation.ApduServiceInfoProto.on_host)
}

// optional string off_host_name = 4;
inline bool ApduServiceInfoProto::has_off_host_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApduServiceInfoProto::clear_off_host_name() {
  off_host_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ApduServiceInfoProto::off_host_name() const {
  // @@protoc_insertion_point(field_get:android.nfc.cardemulation.ApduServiceInfoProto.off_host_name)
  return off_host_name_.GetNoArena();
}
inline void ApduServiceInfoProto::set_off_host_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  off_host_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.nfc.cardemulation.ApduServiceInfoProto.off_host_name)
}
inline void ApduServiceInfoProto::set_off_host_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  off_host_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.nfc.cardemulation.ApduServiceInfoProto.off_host_name)
}
inline void ApduServiceInfoProto::set_off_host_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  off_host_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.nfc.cardemulation.ApduServiceInfoProto.off_host_name)
}
inline void ApduServiceInfoProto::set_off_host_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  off_host_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.nfc.cardemulation.ApduServiceInfoProto.off_host_name)
}
inline std::string* ApduServiceInfoProto::mutable_off_host_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.nfc.cardemulation.ApduServiceInfoProto.off_host_name)
  return off_host_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ApduServiceInfoProto::release_off_host_name() {
  // @@protoc_insertion_point(field_release:android.nfc.cardemulation.ApduServiceInfoProto.off_host_name)
  if (!has_off_host_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return off_host_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ApduServiceInfoProto::set_allocated_off_host_name(std::string* off_host_name) {
  if (off_host_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  off_host_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), off_host_name);
  // @@protoc_insertion_point(field_set_allocated:android.nfc.cardemulation.ApduServiceInfoProto.off_host_name)
}

// optional string static_off_host_name = 5;
inline bool ApduServiceInfoProto::has_static_off_host_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApduServiceInfoProto::clear_static_off_host_name() {
  static_off_host_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ApduServiceInfoProto::static_off_host_name() const {
  // @@protoc_insertion_point(field_get:android.nfc.cardemulation.ApduServiceInfoProto.static_off_host_name)
  return static_off_host_name_.GetNoArena();
}
inline void ApduServiceInfoProto::set_static_off_host_name(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  static_off_host_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.nfc.cardemulation.ApduServiceInfoProto.static_off_host_name)
}
inline void ApduServiceInfoProto::set_static_off_host_name(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  static_off_host_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.nfc.cardemulation.ApduServiceInfoProto.static_off_host_name)
}
inline void ApduServiceInfoProto::set_static_off_host_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  static_off_host_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.nfc.cardemulation.ApduServiceInfoProto.static_off_host_name)
}
inline void ApduServiceInfoProto::set_static_off_host_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  static_off_host_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.nfc.cardemulation.ApduServiceInfoProto.static_off_host_name)
}
inline std::string* ApduServiceInfoProto::mutable_static_off_host_name() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.nfc.cardemulation.ApduServiceInfoProto.static_off_host_name)
  return static_off_host_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ApduServiceInfoProto::release_static_off_host_name() {
  // @@protoc_insertion_point(field_release:android.nfc.cardemulation.ApduServiceInfoProto.static_off_host_name)
  if (!has_static_off_host_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return static_off_host_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ApduServiceInfoProto::set_allocated_static_off_host_name(std::string* static_off_host_name) {
  if (static_off_host_name != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  static_off_host_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), static_off_host_name);
  // @@protoc_insertion_point(field_set_allocated:android.nfc.cardemulation.ApduServiceInfoProto.static_off_host_name)
}

// repeated .android.nfc.cardemulation.AidGroupProto static_aid_groups = 6;
inline int ApduServiceInfoProto::static_aid_groups_size() const {
  return static_aid_groups_.size();
}
inline ::android::nfc::cardemulation::AidGroupProto* ApduServiceInfoProto::mutable_static_aid_groups(int index) {
  // @@protoc_insertion_point(field_mutable:android.nfc.cardemulation.ApduServiceInfoProto.static_aid_groups)
  return static_aid_groups_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::cardemulation::AidGroupProto >*
ApduServiceInfoProto::mutable_static_aid_groups() {
  // @@protoc_insertion_point(field_mutable_list:android.nfc.cardemulation.ApduServiceInfoProto.static_aid_groups)
  return &static_aid_groups_;
}
inline const ::android::nfc::cardemulation::AidGroupProto& ApduServiceInfoProto::static_aid_groups(int index) const {
  // @@protoc_insertion_point(field_get:android.nfc.cardemulation.ApduServiceInfoProto.static_aid_groups)
  return static_aid_groups_.Get(index);
}
inline ::android::nfc::cardemulation::AidGroupProto* ApduServiceInfoProto::add_static_aid_groups() {
  // @@protoc_insertion_point(field_add:android.nfc.cardemulation.ApduServiceInfoProto.static_aid_groups)
  return static_aid_groups_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::cardemulation::AidGroupProto >&
ApduServiceInfoProto::static_aid_groups() const {
  // @@protoc_insertion_point(field_list:android.nfc.cardemulation.ApduServiceInfoProto.static_aid_groups)
  return static_aid_groups_;
}

// repeated .android.nfc.cardemulation.AidGroupProto dynamic_aid_groups = 7;
inline int ApduServiceInfoProto::dynamic_aid_groups_size() const {
  return dynamic_aid_groups_.size();
}
inline ::android::nfc::cardemulation::AidGroupProto* ApduServiceInfoProto::mutable_dynamic_aid_groups(int index) {
  // @@protoc_insertion_point(field_mutable:android.nfc.cardemulation.ApduServiceInfoProto.dynamic_aid_groups)
  return dynamic_aid_groups_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::cardemulation::AidGroupProto >*
ApduServiceInfoProto::mutable_dynamic_aid_groups() {
  // @@protoc_insertion_point(field_mutable_list:android.nfc.cardemulation.ApduServiceInfoProto.dynamic_aid_groups)
  return &dynamic_aid_groups_;
}
inline const ::android::nfc::cardemulation::AidGroupProto& ApduServiceInfoProto::dynamic_aid_groups(int index) const {
  // @@protoc_insertion_point(field_get:android.nfc.cardemulation.ApduServiceInfoProto.dynamic_aid_groups)
  return dynamic_aid_groups_.Get(index);
}
inline ::android::nfc::cardemulation::AidGroupProto* ApduServiceInfoProto::add_dynamic_aid_groups() {
  // @@protoc_insertion_point(field_add:android.nfc.cardemulation.ApduServiceInfoProto.dynamic_aid_groups)
  return dynamic_aid_groups_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::nfc::cardemulation::AidGroupProto >&
ApduServiceInfoProto::dynamic_aid_groups() const {
  // @@protoc_insertion_point(field_list:android.nfc.cardemulation.ApduServiceInfoProto.dynamic_aid_groups)
  return dynamic_aid_groups_;
}

// optional string settings_activity_name = 8;
inline bool ApduServiceInfoProto::has_settings_activity_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ApduServiceInfoProto::clear_settings_activity_name() {
  settings_activity_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& ApduServiceInfoProto::settings_activity_name() const {
  // @@protoc_insertion_point(field_get:android.nfc.cardemulation.ApduServiceInfoProto.settings_activity_name)
  return settings_activity_name_.GetNoArena();
}
inline void ApduServiceInfoProto::set_settings_activity_name(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  settings_activity_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.nfc.cardemulation.ApduServiceInfoProto.settings_activity_name)
}
inline void ApduServiceInfoProto::set_settings_activity_name(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  settings_activity_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.nfc.cardemulation.ApduServiceInfoProto.settings_activity_name)
}
inline void ApduServiceInfoProto::set_settings_activity_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  settings_activity_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.nfc.cardemulation.ApduServiceInfoProto.settings_activity_name)
}
inline void ApduServiceInfoProto::set_settings_activity_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  settings_activity_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.nfc.cardemulation.ApduServiceInfoProto.settings_activity_name)
}
inline std::string* ApduServiceInfoProto::mutable_settings_activity_name() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:android.nfc.cardemulation.ApduServiceInfoProto.settings_activity_name)
  return settings_activity_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ApduServiceInfoProto::release_settings_activity_name() {
  // @@protoc_insertion_point(field_release:android.nfc.cardemulation.ApduServiceInfoProto.settings_activity_name)
  if (!has_settings_activity_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return settings_activity_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ApduServiceInfoProto::set_allocated_settings_activity_name(std::string* settings_activity_name) {
  if (settings_activity_name != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  settings_activity_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), settings_activity_name);
  // @@protoc_insertion_point(field_set_allocated:android.nfc.cardemulation.ApduServiceInfoProto.settings_activity_name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace cardemulation
}  // namespace nfc
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fnfc_2fapdu_5fservice_5finfo_2eproto
