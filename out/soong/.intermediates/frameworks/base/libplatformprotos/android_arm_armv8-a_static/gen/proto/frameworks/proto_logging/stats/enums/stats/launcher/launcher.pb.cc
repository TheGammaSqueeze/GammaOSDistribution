// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/proto_logging/stats/enums/stats/launcher/launcher.proto

#include "frameworks/proto_logging/stats/enums/stats/launcher/launcher.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flauncher_2flauncher_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LauncherTarget_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flauncher_2flauncher_2eproto;
namespace android {
namespace stats {
namespace launcher {
class LauncherTargetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LauncherTarget> _instance;
} _LauncherTarget_default_instance_;
class LauncherExtensionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LauncherExtension> _instance;
} _LauncherExtension_default_instance_;
}  // namespace launcher
}  // namespace stats
}  // namespace android
static void InitDefaultsscc_info_LauncherExtension_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::stats::launcher::_LauncherExtension_default_instance_;
    new (ptr) ::android::stats::launcher::LauncherExtension();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::stats::launcher::LauncherExtension::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LauncherExtension_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_LauncherExtension_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flauncher_2flauncher_2eproto}, {
      &scc_info_LauncherTarget_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flauncher_2flauncher_2eproto.base,}};

static void InitDefaultsscc_info_LauncherTarget_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::stats::launcher::_LauncherTarget_default_instance_;
    new (ptr) ::android::stats::launcher::LauncherTarget();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::stats::launcher::LauncherTarget::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LauncherTarget_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_LauncherTarget_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flauncher_2flauncher_2eproto}, {}};

namespace android {
namespace stats {
namespace launcher {
bool LauncherTarget_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> LauncherTarget_Type_strings[4] = {};

static const char LauncherTarget_Type_names[] =
  "CONTAINER_TYPE"
  "CONTROL_TYPE"
  "ITEM_TYPE"
  "NONE";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry LauncherTarget_Type_entries[] = {
  { {LauncherTarget_Type_names + 0, 14}, 3 },
  { {LauncherTarget_Type_names + 14, 12}, 2 },
  { {LauncherTarget_Type_names + 26, 9}, 1 },
  { {LauncherTarget_Type_names + 35, 4}, 0 },
};

static const int LauncherTarget_Type_entries_by_number[] = {
  3, // 0 -> NONE
  2, // 1 -> ITEM_TYPE
  1, // 2 -> CONTROL_TYPE
  0, // 3 -> CONTAINER_TYPE
};

const std::string& LauncherTarget_Type_Name(
    LauncherTarget_Type value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          LauncherTarget_Type_entries,
          LauncherTarget_Type_entries_by_number,
          4, LauncherTarget_Type_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      LauncherTarget_Type_entries,
      LauncherTarget_Type_entries_by_number,
      4, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     LauncherTarget_Type_strings[idx].get();
}
bool LauncherTarget_Type_Parse(
    const std::string& name, LauncherTarget_Type* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      LauncherTarget_Type_entries, 4, name, &int_value);
  if (success) {
    *value = static_cast<LauncherTarget_Type>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LauncherTarget_Type LauncherTarget::NONE;
constexpr LauncherTarget_Type LauncherTarget::ITEM_TYPE;
constexpr LauncherTarget_Type LauncherTarget::CONTROL_TYPE;
constexpr LauncherTarget_Type LauncherTarget::CONTAINER_TYPE;
constexpr LauncherTarget_Type LauncherTarget::Type_MIN;
constexpr LauncherTarget_Type LauncherTarget::Type_MAX;
constexpr int LauncherTarget::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
bool LauncherTarget_Item_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> LauncherTarget_Item_strings[10] = {};

static const char LauncherTarget_Item_names[] =
  "APP_ICON"
  "DEEPSHORTCUT"
  "DEFAULT_ITEM"
  "EDITTEXT"
  "FOLDER_ICON"
  "NOTIFICATION"
  "SEARCHBOX"
  "SHORTCUT"
  "TASK"
  "WIDGET";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry LauncherTarget_Item_entries[] = {
  { {LauncherTarget_Item_names + 0, 8}, 1 },
  { {LauncherTarget_Item_names + 8, 12}, 5 },
  { {LauncherTarget_Item_names + 20, 12}, 0 },
  { {LauncherTarget_Item_names + 32, 8}, 7 },
  { {LauncherTarget_Item_names + 40, 11}, 4 },
  { {LauncherTarget_Item_names + 51, 12}, 8 },
  { {LauncherTarget_Item_names + 63, 9}, 6 },
  { {LauncherTarget_Item_names + 72, 8}, 2 },
  { {LauncherTarget_Item_names + 80, 4}, 9 },
  { {LauncherTarget_Item_names + 84, 6}, 3 },
};

static const int LauncherTarget_Item_entries_by_number[] = {
  2, // 0 -> DEFAULT_ITEM
  0, // 1 -> APP_ICON
  7, // 2 -> SHORTCUT
  9, // 3 -> WIDGET
  4, // 4 -> FOLDER_ICON
  1, // 5 -> DEEPSHORTCUT
  6, // 6 -> SEARCHBOX
  3, // 7 -> EDITTEXT
  5, // 8 -> NOTIFICATION
  8, // 9 -> TASK
};

const std::string& LauncherTarget_Item_Name(
    LauncherTarget_Item value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          LauncherTarget_Item_entries,
          LauncherTarget_Item_entries_by_number,
          10, LauncherTarget_Item_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      LauncherTarget_Item_entries,
      LauncherTarget_Item_entries_by_number,
      10, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     LauncherTarget_Item_strings[idx].get();
}
bool LauncherTarget_Item_Parse(
    const std::string& name, LauncherTarget_Item* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      LauncherTarget_Item_entries, 10, name, &int_value);
  if (success) {
    *value = static_cast<LauncherTarget_Item>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LauncherTarget_Item LauncherTarget::DEFAULT_ITEM;
constexpr LauncherTarget_Item LauncherTarget::APP_ICON;
constexpr LauncherTarget_Item LauncherTarget::SHORTCUT;
constexpr LauncherTarget_Item LauncherTarget::WIDGET;
constexpr LauncherTarget_Item LauncherTarget::FOLDER_ICON;
constexpr LauncherTarget_Item LauncherTarget::DEEPSHORTCUT;
constexpr LauncherTarget_Item LauncherTarget::SEARCHBOX;
constexpr LauncherTarget_Item LauncherTarget::EDITTEXT;
constexpr LauncherTarget_Item LauncherTarget::NOTIFICATION;
constexpr LauncherTarget_Item LauncherTarget::TASK;
constexpr LauncherTarget_Item LauncherTarget::Item_MIN;
constexpr LauncherTarget_Item LauncherTarget::Item_MAX;
constexpr int LauncherTarget::Item_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
bool LauncherTarget_Container_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> LauncherTarget_Container_strings[5] = {};

static const char LauncherTarget_Container_names[] =
  "DEFAULT_CONTAINER"
  "FOLDER"
  "HOTSEAT"
  "PREDICTION"
  "SEARCHRESULT";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry LauncherTarget_Container_entries[] = {
  { {LauncherTarget_Container_names + 0, 17}, 0 },
  { {LauncherTarget_Container_names + 17, 6}, 2 },
  { {LauncherTarget_Container_names + 23, 7}, 1 },
  { {LauncherTarget_Container_names + 30, 10}, 3 },
  { {LauncherTarget_Container_names + 40, 12}, 4 },
};

static const int LauncherTarget_Container_entries_by_number[] = {
  0, // 0 -> DEFAULT_CONTAINER
  2, // 1 -> HOTSEAT
  1, // 2 -> FOLDER
  3, // 3 -> PREDICTION
  4, // 4 -> SEARCHRESULT
};

const std::string& LauncherTarget_Container_Name(
    LauncherTarget_Container value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          LauncherTarget_Container_entries,
          LauncherTarget_Container_entries_by_number,
          5, LauncherTarget_Container_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      LauncherTarget_Container_entries,
      LauncherTarget_Container_entries_by_number,
      5, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     LauncherTarget_Container_strings[idx].get();
}
bool LauncherTarget_Container_Parse(
    const std::string& name, LauncherTarget_Container* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      LauncherTarget_Container_entries, 5, name, &int_value);
  if (success) {
    *value = static_cast<LauncherTarget_Container>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LauncherTarget_Container LauncherTarget::DEFAULT_CONTAINER;
constexpr LauncherTarget_Container LauncherTarget::HOTSEAT;
constexpr LauncherTarget_Container LauncherTarget::FOLDER;
constexpr LauncherTarget_Container LauncherTarget::PREDICTION;
constexpr LauncherTarget_Container LauncherTarget::SEARCHRESULT;
constexpr LauncherTarget_Container LauncherTarget::Container_MIN;
constexpr LauncherTarget_Container LauncherTarget::Container_MAX;
constexpr int LauncherTarget::Container_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
bool LauncherTarget_Control_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> LauncherTarget_Control_strings[4] = {};

static const char LauncherTarget_Control_names[] =
  "DEFAULT_CONTROL"
  "MENU"
  "REMOVE"
  "UNINSTALL";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry LauncherTarget_Control_entries[] = {
  { {LauncherTarget_Control_names + 0, 15}, 0 },
  { {LauncherTarget_Control_names + 15, 4}, 1 },
  { {LauncherTarget_Control_names + 19, 6}, 3 },
  { {LauncherTarget_Control_names + 25, 9}, 2 },
};

static const int LauncherTarget_Control_entries_by_number[] = {
  0, // 0 -> DEFAULT_CONTROL
  1, // 1 -> MENU
  3, // 2 -> UNINSTALL
  2, // 3 -> REMOVE
};

const std::string& LauncherTarget_Control_Name(
    LauncherTarget_Control value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          LauncherTarget_Control_entries,
          LauncherTarget_Control_entries_by_number,
          4, LauncherTarget_Control_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      LauncherTarget_Control_entries,
      LauncherTarget_Control_entries_by_number,
      4, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     LauncherTarget_Control_strings[idx].get();
}
bool LauncherTarget_Control_Parse(
    const std::string& name, LauncherTarget_Control* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      LauncherTarget_Control_entries, 4, name, &int_value);
  if (success) {
    *value = static_cast<LauncherTarget_Control>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LauncherTarget_Control LauncherTarget::DEFAULT_CONTROL;
constexpr LauncherTarget_Control LauncherTarget::MENU;
constexpr LauncherTarget_Control LauncherTarget::UNINSTALL;
constexpr LauncherTarget_Control LauncherTarget::REMOVE;
constexpr LauncherTarget_Control LauncherTarget::Control_MIN;
constexpr LauncherTarget_Control LauncherTarget::Control_MAX;
constexpr int LauncherTarget::Control_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
bool LauncherAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> LauncherAction_strings[10] = {};

static const char LauncherAction_names[] =
  "DEFAULT_ACTION"
  "DISMISS_TASK"
  "DRAGDROP"
  "LAUNCH_APP"
  "LAUNCH_TASK"
  "LONGPRESS"
  "SWIPE_DOWN"
  "SWIPE_LEFT"
  "SWIPE_RIGHT"
  "SWIPE_UP";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry LauncherAction_entries[] = {
  { {LauncherAction_names + 0, 14}, 0 },
  { {LauncherAction_names + 14, 12}, 3 },
  { {LauncherAction_names + 26, 8}, 5 },
  { {LauncherAction_names + 34, 10}, 1 },
  { {LauncherAction_names + 44, 11}, 2 },
  { {LauncherAction_names + 55, 9}, 4 },
  { {LauncherAction_names + 64, 10}, 7 },
  { {LauncherAction_names + 74, 10}, 8 },
  { {LauncherAction_names + 84, 11}, 9 },
  { {LauncherAction_names + 95, 8}, 6 },
};

static const int LauncherAction_entries_by_number[] = {
  0, // 0 -> DEFAULT_ACTION
  3, // 1 -> LAUNCH_APP
  4, // 2 -> LAUNCH_TASK
  1, // 3 -> DISMISS_TASK
  5, // 4 -> LONGPRESS
  2, // 5 -> DRAGDROP
  9, // 6 -> SWIPE_UP
  6, // 7 -> SWIPE_DOWN
  7, // 8 -> SWIPE_LEFT
  8, // 9 -> SWIPE_RIGHT
};

const std::string& LauncherAction_Name(
    LauncherAction value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          LauncherAction_entries,
          LauncherAction_entries_by_number,
          10, LauncherAction_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      LauncherAction_entries,
      LauncherAction_entries_by_number,
      10, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     LauncherAction_strings[idx].get();
}
bool LauncherAction_Parse(
    const std::string& name, LauncherAction* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      LauncherAction_entries, 10, name, &int_value);
  if (success) {
    *value = static_cast<LauncherAction>(int_value);
  }
  return success;
}
bool LauncherState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> LauncherState_strings[6] = {};

static const char LauncherState_names[] =
  "ALLAPPS"
  "BACKGROUND"
  "HOME"
  "LAUNCHER_STATE_UNSPECIFIED"
  "OVERVIEW"
  "UNCHANGED";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry LauncherState_entries[] = {
  { {LauncherState_names + 0, 7}, 4 },
  { {LauncherState_names + 7, 10}, 1 },
  { {LauncherState_names + 17, 4}, 2 },
  { {LauncherState_names + 21, 26}, 0 },
  { {LauncherState_names + 47, 8}, 3 },
  { {LauncherState_names + 55, 9}, 5 },
};

static const int LauncherState_entries_by_number[] = {
  3, // 0 -> LAUNCHER_STATE_UNSPECIFIED
  1, // 1 -> BACKGROUND
  2, // 2 -> HOME
  4, // 3 -> OVERVIEW
  0, // 4 -> ALLAPPS
  5, // 5 -> UNCHANGED
};

const std::string& LauncherState_Name(
    LauncherState value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          LauncherState_entries,
          LauncherState_entries_by_number,
          6, LauncherState_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      LauncherState_entries,
      LauncherState_entries_by_number,
      6, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     LauncherState_strings[idx].get();
}
bool LauncherState_Parse(
    const std::string& name, LauncherState* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      LauncherState_entries, 6, name, &int_value);
  if (success) {
    *value = static_cast<LauncherState>(int_value);
  }
  return success;
}

// ===================================================================

void LauncherTarget::InitAsDefaultInstance() {
}
class LauncherTarget::_Internal {
 public:
  using HasBits = decltype(std::declval<LauncherTarget>()._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_item(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_container(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_control(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_launch_component(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_page_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_grid_x(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_grid_y(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

LauncherTarget::LauncherTarget()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.stats.launcher.LauncherTarget)
}
LauncherTarget::LauncherTarget(const LauncherTarget& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  launch_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_launch_component()) {
    launch_component_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.launch_component_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&grid_y_) -
    reinterpret_cast<char*>(&type_)) + sizeof(grid_y_));
  // @@protoc_insertion_point(copy_constructor:android.stats.launcher.LauncherTarget)
}

void LauncherTarget::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LauncherTarget_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flauncher_2flauncher_2eproto.base);
  launch_component_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&grid_y_) -
      reinterpret_cast<char*>(&type_)) + sizeof(grid_y_));
}

LauncherTarget::~LauncherTarget() {
  // @@protoc_insertion_point(destructor:android.stats.launcher.LauncherTarget)
  SharedDtor();
}

void LauncherTarget::SharedDtor() {
  launch_component_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LauncherTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LauncherTarget& LauncherTarget::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LauncherTarget_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void LauncherTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:android.stats.launcher.LauncherTarget)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    launch_component_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&grid_y_) -
        reinterpret_cast<char*>(&type_)) + sizeof(grid_y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LauncherTarget::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .android.stats.launcher.LauncherTarget.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::stats::launcher::LauncherTarget_Type_IsValid(val))) {
            set_type(static_cast<::android::stats::launcher::LauncherTarget_Type>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.stats.launcher.LauncherTarget.Item item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::stats::launcher::LauncherTarget_Item_IsValid(val))) {
            set_item(static_cast<::android::stats::launcher::LauncherTarget_Item>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.stats.launcher.LauncherTarget.Container container = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::stats::launcher::LauncherTarget_Container_IsValid(val))) {
            set_container(static_cast<::android::stats::launcher::LauncherTarget_Container>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .android.stats.launcher.LauncherTarget.Control control = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::android::stats::launcher::LauncherTarget_Control_IsValid(val))) {
            set_control(static_cast<::android::stats::launcher::LauncherTarget_Control>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional string launch_component = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_launch_component(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 page_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_page_id(&has_bits);
          page_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 grid_x = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_grid_x(&has_bits);
          grid_x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 grid_y = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_grid_y(&has_bits);
          grid_y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LauncherTarget::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.stats.launcher.LauncherTarget)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .android.stats.launcher.LauncherTarget.Type type = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::stats::launcher::LauncherTarget_Type_IsValid(value)) {
            set_type(static_cast< ::android::stats::launcher::LauncherTarget_Type >(value));
          } else {
            unknown_fields_stream.WriteVarint32(8u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.stats.launcher.LauncherTarget.Item item = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::stats::launcher::LauncherTarget_Item_IsValid(value)) {
            set_item(static_cast< ::android::stats::launcher::LauncherTarget_Item >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.stats.launcher.LauncherTarget.Container container = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::stats::launcher::LauncherTarget_Container_IsValid(value)) {
            set_container(static_cast< ::android::stats::launcher::LauncherTarget_Container >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.stats.launcher.LauncherTarget.Control control = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::stats::launcher::LauncherTarget_Control_IsValid(value)) {
            set_control(static_cast< ::android::stats::launcher::LauncherTarget_Control >(value));
          } else {
            unknown_fields_stream.WriteVarint32(32u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string launch_component = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_launch_component()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 page_id = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_page_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 grid_x = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {
          _Internal::set_has_grid_x(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &grid_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 grid_y = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          _Internal::set_has_grid_y(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &grid_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.stats.launcher.LauncherTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.stats.launcher.LauncherTarget)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LauncherTarget::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.stats.launcher.LauncherTarget)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .android.stats.launcher.LauncherTarget.Type type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .android.stats.launcher.LauncherTarget.Item item = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->item(), output);
  }

  // optional .android.stats.launcher.LauncherTarget.Container container = 3;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      3, this->container(), output);
  }

  // optional .android.stats.launcher.LauncherTarget.Control control = 4;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      4, this->control(), output);
  }

  // optional string launch_component = 5;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->launch_component(), output);
  }

  // optional int32 page_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->page_id(), output);
  }

  // optional int32 grid_x = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->grid_x(), output);
  }

  // optional int32 grid_y = 8;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(8, this->grid_y(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.stats.launcher.LauncherTarget)
}

size_t LauncherTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.stats.launcher.LauncherTarget)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string launch_component = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->launch_component());
    }

    // optional .android.stats.launcher.LauncherTarget.Type type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .android.stats.launcher.LauncherTarget.Item item = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->item());
    }

    // optional .android.stats.launcher.LauncherTarget.Container container = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->container());
    }

    // optional .android.stats.launcher.LauncherTarget.Control control = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->control());
    }

    // optional int32 page_id = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->page_id());
    }

    // optional int32 grid_x = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->grid_x());
    }

    // optional int32 grid_y = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->grid_y());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LauncherTarget::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const LauncherTarget*>(
      &from));
}

void LauncherTarget::MergeFrom(const LauncherTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.stats.launcher.LauncherTarget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      launch_component_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.launch_component_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_ = from.item_;
    }
    if (cached_has_bits & 0x00000008u) {
      container_ = from.container_;
    }
    if (cached_has_bits & 0x00000010u) {
      control_ = from.control_;
    }
    if (cached_has_bits & 0x00000020u) {
      page_id_ = from.page_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      grid_x_ = from.grid_x_;
    }
    if (cached_has_bits & 0x00000080u) {
      grid_y_ = from.grid_y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LauncherTarget::CopyFrom(const LauncherTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.stats.launcher.LauncherTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LauncherTarget::IsInitialized() const {
  return true;
}

void LauncherTarget::InternalSwap(LauncherTarget* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  launch_component_.Swap(&other->launch_component_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(item_, other->item_);
  swap(container_, other->container_);
  swap(control_, other->control_);
  swap(page_id_, other->page_id_);
  swap(grid_x_, other->grid_x_);
  swap(grid_y_, other->grid_y_);
}

std::string LauncherTarget::GetTypeName() const {
  return "android.stats.launcher.LauncherTarget";
}


// ===================================================================

void LauncherExtension::InitAsDefaultInstance() {
}
class LauncherExtension::_Internal {
 public:
  using HasBits = decltype(std::declval<LauncherExtension>()._has_bits_);
};

LauncherExtension::LauncherExtension()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.stats.launcher.LauncherExtension)
}
LauncherExtension::LauncherExtension(const LauncherExtension& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      src_target_(from.src_target_),
      dst_target_(from.dst_target_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:android.stats.launcher.LauncherExtension)
}

void LauncherExtension::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LauncherExtension_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flauncher_2flauncher_2eproto.base);
}

LauncherExtension::~LauncherExtension() {
  // @@protoc_insertion_point(destructor:android.stats.launcher.LauncherExtension)
  SharedDtor();
}

void LauncherExtension::SharedDtor() {
}

void LauncherExtension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LauncherExtension& LauncherExtension::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LauncherExtension_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void LauncherExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:android.stats.launcher.LauncherExtension)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  src_target_.Clear();
  dst_target_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LauncherExtension::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.stats.launcher.LauncherTarget src_target = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_src_target(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .android.stats.launcher.LauncherTarget dst_target = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_dst_target(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LauncherExtension::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:android.stats.launcher.LauncherExtension)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.stats.launcher.LauncherTarget src_target = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_src_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.stats.launcher.LauncherTarget dst_target = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_dst_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.stats.launcher.LauncherExtension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.stats.launcher.LauncherExtension)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LauncherExtension::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.stats.launcher.LauncherExtension)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.stats.launcher.LauncherTarget src_target = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->src_target_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->src_target(static_cast<int>(i)),
      output);
  }

  // repeated .android.stats.launcher.LauncherTarget dst_target = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dst_target_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2,
      this->dst_target(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:android.stats.launcher.LauncherExtension)
}

size_t LauncherExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.stats.launcher.LauncherExtension)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.stats.launcher.LauncherTarget src_target = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->src_target_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->src_target(static_cast<int>(i)));
    }
  }

  // repeated .android.stats.launcher.LauncherTarget dst_target = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->dst_target_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->dst_target(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LauncherExtension::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const LauncherExtension*>(
      &from));
}

void LauncherExtension::MergeFrom(const LauncherExtension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.stats.launcher.LauncherExtension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  src_target_.MergeFrom(from.src_target_);
  dst_target_.MergeFrom(from.dst_target_);
}

void LauncherExtension::CopyFrom(const LauncherExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.stats.launcher.LauncherExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LauncherExtension::IsInitialized() const {
  return true;
}

void LauncherExtension::InternalSwap(LauncherExtension* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&src_target_)->InternalSwap(CastToBase(&other->src_target_));
  CastToBase(&dst_target_)->InternalSwap(CastToBase(&other->dst_target_));
}

std::string LauncherExtension::GetTypeName() const {
  return "android.stats.launcher.LauncherExtension";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace launcher
}  // namespace stats
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::stats::launcher::LauncherTarget* Arena::CreateMaybeMessage< ::android::stats::launcher::LauncherTarget >(Arena* arena) {
  return Arena::CreateInternal< ::android::stats::launcher::LauncherTarget >(arena);
}
template<> PROTOBUF_NOINLINE ::android::stats::launcher::LauncherExtension* Arena::CreateMaybeMessage< ::android::stats::launcher::LauncherExtension >(Arena* arena) {
  return Arena::CreateInternal< ::android::stats::launcher::LauncherExtension >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
