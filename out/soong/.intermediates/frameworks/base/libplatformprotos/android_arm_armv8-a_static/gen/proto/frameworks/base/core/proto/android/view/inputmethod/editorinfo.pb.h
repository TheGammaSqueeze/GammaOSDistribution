// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/view/inputmethod/editorinfo.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2feditorinfo_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2feditorinfo_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2feditorinfo_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2feditorinfo_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace view {
namespace inputmethod {
class EditorInfoProto;
class EditorInfoProtoDefaultTypeInternal;
extern EditorInfoProtoDefaultTypeInternal _EditorInfoProto_default_instance_;
}  // namespace inputmethod
}  // namespace view
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::view::inputmethod::EditorInfoProto* Arena::CreateMaybeMessage<::android::view::inputmethod::EditorInfoProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace view {
namespace inputmethod {

// ===================================================================

class EditorInfoProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.view.inputmethod.EditorInfoProto) */ {
 public:
  EditorInfoProto();
  virtual ~EditorInfoProto();

  EditorInfoProto(const EditorInfoProto& from);
  EditorInfoProto(EditorInfoProto&& from) noexcept
    : EditorInfoProto() {
    *this = ::std::move(from);
  }

  inline EditorInfoProto& operator=(const EditorInfoProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline EditorInfoProto& operator=(EditorInfoProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const EditorInfoProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EditorInfoProto* internal_default_instance() {
    return reinterpret_cast<const EditorInfoProto*>(
               &_EditorInfoProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EditorInfoProto& a, EditorInfoProto& b) {
    a.Swap(&b);
  }
  inline void Swap(EditorInfoProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EditorInfoProto* New() const final {
    return CreateMaybeMessage<EditorInfoProto>(nullptr);
  }

  EditorInfoProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EditorInfoProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const EditorInfoProto& from);
  void MergeFrom(const EditorInfoProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EditorInfoProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.view.inputmethod.EditorInfoProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrivateImeOptionsFieldNumber = 3,
    kPackageNameFieldNumber = 4,
    kInputTypeFieldNumber = 1,
    kImeOptionsFieldNumber = 2,
    kFieldIdFieldNumber = 5,
    kTargetInputMethodUserIdFieldNumber = 6,
  };
  // optional string private_ime_options = 3;
  bool has_private_ime_options() const;
  void clear_private_ime_options();
  const std::string& private_ime_options() const;
  void set_private_ime_options(const std::string& value);
  void set_private_ime_options(std::string&& value);
  void set_private_ime_options(const char* value);
  void set_private_ime_options(const char* value, size_t size);
  std::string* mutable_private_ime_options();
  std::string* release_private_ime_options();
  void set_allocated_private_ime_options(std::string* private_ime_options);

  // optional string package_name = 4;
  bool has_package_name() const;
  void clear_package_name();
  const std::string& package_name() const;
  void set_package_name(const std::string& value);
  void set_package_name(std::string&& value);
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  std::string* mutable_package_name();
  std::string* release_package_name();
  void set_allocated_package_name(std::string* package_name);

  // optional int32 input_type = 1;
  bool has_input_type() const;
  void clear_input_type();
  ::PROTOBUF_NAMESPACE_ID::int32 input_type() const;
  void set_input_type(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 ime_options = 2;
  bool has_ime_options() const;
  void clear_ime_options();
  ::PROTOBUF_NAMESPACE_ID::int32 ime_options() const;
  void set_ime_options(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 field_id = 5;
  bool has_field_id() const;
  void clear_field_id();
  ::PROTOBUF_NAMESPACE_ID::int32 field_id() const;
  void set_field_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 target_input_method_user_id = 6;
  bool has_target_input_method_user_id() const;
  void clear_target_input_method_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 target_input_method_user_id() const;
  void set_target_input_method_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.view.inputmethod.EditorInfoProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr private_ime_options_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr package_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 input_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 ime_options_;
  ::PROTOBUF_NAMESPACE_ID::int32 field_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_input_method_user_id_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2feditorinfo_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EditorInfoProto

// optional int32 input_type = 1;
inline bool EditorInfoProto::has_input_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EditorInfoProto::clear_input_type() {
  input_type_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EditorInfoProto::input_type() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.EditorInfoProto.input_type)
  return input_type_;
}
inline void EditorInfoProto::set_input_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  input_type_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.EditorInfoProto.input_type)
}

// optional int32 ime_options = 2;
inline bool EditorInfoProto::has_ime_options() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EditorInfoProto::clear_ime_options() {
  ime_options_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EditorInfoProto::ime_options() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.EditorInfoProto.ime_options)
  return ime_options_;
}
inline void EditorInfoProto::set_ime_options(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ime_options_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.EditorInfoProto.ime_options)
}

// optional string private_ime_options = 3;
inline bool EditorInfoProto::has_private_ime_options() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EditorInfoProto::clear_private_ime_options() {
  private_ime_options_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& EditorInfoProto::private_ime_options() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.EditorInfoProto.private_ime_options)
  return private_ime_options_.GetNoArena();
}
inline void EditorInfoProto::set_private_ime_options(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  private_ime_options_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.view.inputmethod.EditorInfoProto.private_ime_options)
}
inline void EditorInfoProto::set_private_ime_options(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  private_ime_options_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.view.inputmethod.EditorInfoProto.private_ime_options)
}
inline void EditorInfoProto::set_private_ime_options(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  private_ime_options_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.view.inputmethod.EditorInfoProto.private_ime_options)
}
inline void EditorInfoProto::set_private_ime_options(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  private_ime_options_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.view.inputmethod.EditorInfoProto.private_ime_options)
}
inline std::string* EditorInfoProto::mutable_private_ime_options() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.EditorInfoProto.private_ime_options)
  return private_ime_options_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* EditorInfoProto::release_private_ime_options() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.EditorInfoProto.private_ime_options)
  if (!has_private_ime_options()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return private_ime_options_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void EditorInfoProto::set_allocated_private_ime_options(std::string* private_ime_options) {
  if (private_ime_options != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  private_ime_options_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), private_ime_options);
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.EditorInfoProto.private_ime_options)
}

// optional string package_name = 4;
inline bool EditorInfoProto::has_package_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EditorInfoProto::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& EditorInfoProto::package_name() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.EditorInfoProto.package_name)
  return package_name_.GetNoArena();
}
inline void EditorInfoProto::set_package_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.view.inputmethod.EditorInfoProto.package_name)
}
inline void EditorInfoProto::set_package_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  package_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.view.inputmethod.EditorInfoProto.package_name)
}
inline void EditorInfoProto::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.view.inputmethod.EditorInfoProto.package_name)
}
inline void EditorInfoProto::set_package_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.view.inputmethod.EditorInfoProto.package_name)
}
inline std::string* EditorInfoProto::mutable_package_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.view.inputmethod.EditorInfoProto.package_name)
  return package_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* EditorInfoProto::release_package_name() {
  // @@protoc_insertion_point(field_release:android.view.inputmethod.EditorInfoProto.package_name)
  if (!has_package_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return package_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void EditorInfoProto::set_allocated_package_name(std::string* package_name) {
  if (package_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  package_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:android.view.inputmethod.EditorInfoProto.package_name)
}

// optional int32 field_id = 5;
inline bool EditorInfoProto::has_field_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EditorInfoProto::clear_field_id() {
  field_id_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EditorInfoProto::field_id() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.EditorInfoProto.field_id)
  return field_id_;
}
inline void EditorInfoProto::set_field_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  field_id_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.EditorInfoProto.field_id)
}

// optional int32 target_input_method_user_id = 6;
inline bool EditorInfoProto::has_target_input_method_user_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EditorInfoProto::clear_target_input_method_user_id() {
  target_input_method_user_id_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EditorInfoProto::target_input_method_user_id() const {
  // @@protoc_insertion_point(field_get:android.view.inputmethod.EditorInfoProto.target_input_method_user_id)
  return target_input_method_user_id_;
}
inline void EditorInfoProto::set_target_input_method_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  target_input_method_user_id_ = value;
  // @@protoc_insertion_point(field_set:android.view.inputmethod.EditorInfoProto.target_input_method_user_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace inputmethod
}  // namespace view
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fview_2finputmethod_2feditorinfo_2eproto
