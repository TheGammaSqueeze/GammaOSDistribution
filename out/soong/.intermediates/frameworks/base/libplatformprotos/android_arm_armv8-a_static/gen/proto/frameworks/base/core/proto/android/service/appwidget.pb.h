// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/service/appwidget.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fappwidget_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fappwidget_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fappwidget_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fappwidget_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace service {
namespace appwidget {
class AppWidgetServiceDumpProto;
class AppWidgetServiceDumpProtoDefaultTypeInternal;
extern AppWidgetServiceDumpProtoDefaultTypeInternal _AppWidgetServiceDumpProto_default_instance_;
class WidgetProto;
class WidgetProtoDefaultTypeInternal;
extern WidgetProtoDefaultTypeInternal _WidgetProto_default_instance_;
}  // namespace appwidget
}  // namespace service
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::service::appwidget::AppWidgetServiceDumpProto* Arena::CreateMaybeMessage<::android::service::appwidget::AppWidgetServiceDumpProto>(Arena*);
template<> ::android::service::appwidget::WidgetProto* Arena::CreateMaybeMessage<::android::service::appwidget::WidgetProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace service {
namespace appwidget {

// ===================================================================

class AppWidgetServiceDumpProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.appwidget.AppWidgetServiceDumpProto) */ {
 public:
  AppWidgetServiceDumpProto();
  virtual ~AppWidgetServiceDumpProto();

  AppWidgetServiceDumpProto(const AppWidgetServiceDumpProto& from);
  AppWidgetServiceDumpProto(AppWidgetServiceDumpProto&& from) noexcept
    : AppWidgetServiceDumpProto() {
    *this = ::std::move(from);
  }

  inline AppWidgetServiceDumpProto& operator=(const AppWidgetServiceDumpProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppWidgetServiceDumpProto& operator=(AppWidgetServiceDumpProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AppWidgetServiceDumpProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppWidgetServiceDumpProto* internal_default_instance() {
    return reinterpret_cast<const AppWidgetServiceDumpProto*>(
               &_AppWidgetServiceDumpProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AppWidgetServiceDumpProto& a, AppWidgetServiceDumpProto& b) {
    a.Swap(&b);
  }
  inline void Swap(AppWidgetServiceDumpProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AppWidgetServiceDumpProto* New() const final {
    return CreateMaybeMessage<AppWidgetServiceDumpProto>(nullptr);
  }

  AppWidgetServiceDumpProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AppWidgetServiceDumpProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const AppWidgetServiceDumpProto& from);
  void MergeFrom(const AppWidgetServiceDumpProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AppWidgetServiceDumpProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.appwidget.AppWidgetServiceDumpProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWidgetsFieldNumber = 1,
  };
  // repeated .android.service.appwidget.WidgetProto widgets = 1;
  int widgets_size() const;
  void clear_widgets();
  ::android::service::appwidget::WidgetProto* mutable_widgets(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::appwidget::WidgetProto >*
      mutable_widgets();
  const ::android::service::appwidget::WidgetProto& widgets(int index) const;
  ::android::service::appwidget::WidgetProto* add_widgets();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::appwidget::WidgetProto >&
      widgets() const;

  // @@protoc_insertion_point(class_scope:android.service.appwidget.AppWidgetServiceDumpProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::appwidget::WidgetProto > widgets_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fappwidget_2eproto;
};
// -------------------------------------------------------------------

class WidgetProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.service.appwidget.WidgetProto) */ {
 public:
  WidgetProto();
  virtual ~WidgetProto();

  WidgetProto(const WidgetProto& from);
  WidgetProto(WidgetProto&& from) noexcept
    : WidgetProto() {
    *this = ::std::move(from);
  }

  inline WidgetProto& operator=(const WidgetProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline WidgetProto& operator=(WidgetProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const WidgetProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WidgetProto* internal_default_instance() {
    return reinterpret_cast<const WidgetProto*>(
               &_WidgetProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(WidgetProto& a, WidgetProto& b) {
    a.Swap(&b);
  }
  inline void Swap(WidgetProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WidgetProto* New() const final {
    return CreateMaybeMessage<WidgetProto>(nullptr);
  }

  WidgetProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WidgetProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const WidgetProto& from);
  void MergeFrom(const WidgetProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WidgetProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.service.appwidget.WidgetProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHostPackageFieldNumber = 3,
    kProviderPackageFieldNumber = 4,
    kProviderClassFieldNumber = 5,
    kIsCrossProfileFieldNumber = 1,
    kIsHostStoppedFieldNumber = 2,
    kRestoreCompletedFieldNumber = 10,
    kMinWidthFieldNumber = 6,
    kMinHeightFieldNumber = 7,
    kMaxWidthFieldNumber = 8,
    kMaxHeightFieldNumber = 9,
  };
  // optional string hostPackage = 3;
  bool has_hostpackage() const;
  void clear_hostpackage();
  const std::string& hostpackage() const;
  void set_hostpackage(const std::string& value);
  void set_hostpackage(std::string&& value);
  void set_hostpackage(const char* value);
  void set_hostpackage(const char* value, size_t size);
  std::string* mutable_hostpackage();
  std::string* release_hostpackage();
  void set_allocated_hostpackage(std::string* hostpackage);

  // optional string providerPackage = 4;
  bool has_providerpackage() const;
  void clear_providerpackage();
  const std::string& providerpackage() const;
  void set_providerpackage(const std::string& value);
  void set_providerpackage(std::string&& value);
  void set_providerpackage(const char* value);
  void set_providerpackage(const char* value, size_t size);
  std::string* mutable_providerpackage();
  std::string* release_providerpackage();
  void set_allocated_providerpackage(std::string* providerpackage);

  // optional string providerClass = 5;
  bool has_providerclass() const;
  void clear_providerclass();
  const std::string& providerclass() const;
  void set_providerclass(const std::string& value);
  void set_providerclass(std::string&& value);
  void set_providerclass(const char* value);
  void set_providerclass(const char* value, size_t size);
  std::string* mutable_providerclass();
  std::string* release_providerclass();
  void set_allocated_providerclass(std::string* providerclass);

  // optional bool isCrossProfile = 1;
  bool has_iscrossprofile() const;
  void clear_iscrossprofile();
  bool iscrossprofile() const;
  void set_iscrossprofile(bool value);

  // optional bool isHostStopped = 2;
  bool has_ishoststopped() const;
  void clear_ishoststopped();
  bool ishoststopped() const;
  void set_ishoststopped(bool value);

  // optional bool restoreCompleted = 10;
  bool has_restorecompleted() const;
  void clear_restorecompleted();
  bool restorecompleted() const;
  void set_restorecompleted(bool value);

  // optional int32 minWidth = 6;
  bool has_minwidth() const;
  void clear_minwidth();
  ::PROTOBUF_NAMESPACE_ID::int32 minwidth() const;
  void set_minwidth(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 minHeight = 7;
  bool has_minheight() const;
  void clear_minheight();
  ::PROTOBUF_NAMESPACE_ID::int32 minheight() const;
  void set_minheight(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 maxWidth = 8;
  bool has_maxwidth() const;
  void clear_maxwidth();
  ::PROTOBUF_NAMESPACE_ID::int32 maxwidth() const;
  void set_maxwidth(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 maxHeight = 9;
  bool has_maxheight() const;
  void clear_maxheight();
  ::PROTOBUF_NAMESPACE_ID::int32 maxheight() const;
  void set_maxheight(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.service.appwidget.WidgetProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hostpackage_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr providerpackage_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr providerclass_;
  bool iscrossprofile_;
  bool ishoststopped_;
  bool restorecompleted_;
  ::PROTOBUF_NAMESPACE_ID::int32 minwidth_;
  ::PROTOBUF_NAMESPACE_ID::int32 minheight_;
  ::PROTOBUF_NAMESPACE_ID::int32 maxwidth_;
  ::PROTOBUF_NAMESPACE_ID::int32 maxheight_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fappwidget_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AppWidgetServiceDumpProto

// repeated .android.service.appwidget.WidgetProto widgets = 1;
inline int AppWidgetServiceDumpProto::widgets_size() const {
  return widgets_.size();
}
inline void AppWidgetServiceDumpProto::clear_widgets() {
  widgets_.Clear();
}
inline ::android::service::appwidget::WidgetProto* AppWidgetServiceDumpProto::mutable_widgets(int index) {
  // @@protoc_insertion_point(field_mutable:android.service.appwidget.AppWidgetServiceDumpProto.widgets)
  return widgets_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::appwidget::WidgetProto >*
AppWidgetServiceDumpProto::mutable_widgets() {
  // @@protoc_insertion_point(field_mutable_list:android.service.appwidget.AppWidgetServiceDumpProto.widgets)
  return &widgets_;
}
inline const ::android::service::appwidget::WidgetProto& AppWidgetServiceDumpProto::widgets(int index) const {
  // @@protoc_insertion_point(field_get:android.service.appwidget.AppWidgetServiceDumpProto.widgets)
  return widgets_.Get(index);
}
inline ::android::service::appwidget::WidgetProto* AppWidgetServiceDumpProto::add_widgets() {
  // @@protoc_insertion_point(field_add:android.service.appwidget.AppWidgetServiceDumpProto.widgets)
  return widgets_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::android::service::appwidget::WidgetProto >&
AppWidgetServiceDumpProto::widgets() const {
  // @@protoc_insertion_point(field_list:android.service.appwidget.AppWidgetServiceDumpProto.widgets)
  return widgets_;
}

// -------------------------------------------------------------------

// WidgetProto

// optional bool isCrossProfile = 1;
inline bool WidgetProto::has_iscrossprofile() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WidgetProto::clear_iscrossprofile() {
  iscrossprofile_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool WidgetProto::iscrossprofile() const {
  // @@protoc_insertion_point(field_get:android.service.appwidget.WidgetProto.isCrossProfile)
  return iscrossprofile_;
}
inline void WidgetProto::set_iscrossprofile(bool value) {
  _has_bits_[0] |= 0x00000008u;
  iscrossprofile_ = value;
  // @@protoc_insertion_point(field_set:android.service.appwidget.WidgetProto.isCrossProfile)
}

// optional bool isHostStopped = 2;
inline bool WidgetProto::has_ishoststopped() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WidgetProto::clear_ishoststopped() {
  ishoststopped_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool WidgetProto::ishoststopped() const {
  // @@protoc_insertion_point(field_get:android.service.appwidget.WidgetProto.isHostStopped)
  return ishoststopped_;
}
inline void WidgetProto::set_ishoststopped(bool value) {
  _has_bits_[0] |= 0x00000010u;
  ishoststopped_ = value;
  // @@protoc_insertion_point(field_set:android.service.appwidget.WidgetProto.isHostStopped)
}

// optional string hostPackage = 3;
inline bool WidgetProto::has_hostpackage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WidgetProto::clear_hostpackage() {
  hostpackage_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WidgetProto::hostpackage() const {
  // @@protoc_insertion_point(field_get:android.service.appwidget.WidgetProto.hostPackage)
  return hostpackage_.GetNoArena();
}
inline void WidgetProto::set_hostpackage(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  hostpackage_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.appwidget.WidgetProto.hostPackage)
}
inline void WidgetProto::set_hostpackage(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  hostpackage_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.appwidget.WidgetProto.hostPackage)
}
inline void WidgetProto::set_hostpackage(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  hostpackage_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.appwidget.WidgetProto.hostPackage)
}
inline void WidgetProto::set_hostpackage(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  hostpackage_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.appwidget.WidgetProto.hostPackage)
}
inline std::string* WidgetProto::mutable_hostpackage() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:android.service.appwidget.WidgetProto.hostPackage)
  return hostpackage_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* WidgetProto::release_hostpackage() {
  // @@protoc_insertion_point(field_release:android.service.appwidget.WidgetProto.hostPackage)
  if (!has_hostpackage()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return hostpackage_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void WidgetProto::set_allocated_hostpackage(std::string* hostpackage) {
  if (hostpackage != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  hostpackage_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hostpackage);
  // @@protoc_insertion_point(field_set_allocated:android.service.appwidget.WidgetProto.hostPackage)
}

// optional string providerPackage = 4;
inline bool WidgetProto::has_providerpackage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WidgetProto::clear_providerpackage() {
  providerpackage_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& WidgetProto::providerpackage() const {
  // @@protoc_insertion_point(field_get:android.service.appwidget.WidgetProto.providerPackage)
  return providerpackage_.GetNoArena();
}
inline void WidgetProto::set_providerpackage(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  providerpackage_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.appwidget.WidgetProto.providerPackage)
}
inline void WidgetProto::set_providerpackage(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  providerpackage_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.appwidget.WidgetProto.providerPackage)
}
inline void WidgetProto::set_providerpackage(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  providerpackage_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.appwidget.WidgetProto.providerPackage)
}
inline void WidgetProto::set_providerpackage(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  providerpackage_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.appwidget.WidgetProto.providerPackage)
}
inline std::string* WidgetProto::mutable_providerpackage() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:android.service.appwidget.WidgetProto.providerPackage)
  return providerpackage_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* WidgetProto::release_providerpackage() {
  // @@protoc_insertion_point(field_release:android.service.appwidget.WidgetProto.providerPackage)
  if (!has_providerpackage()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return providerpackage_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void WidgetProto::set_allocated_providerpackage(std::string* providerpackage) {
  if (providerpackage != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  providerpackage_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), providerpackage);
  // @@protoc_insertion_point(field_set_allocated:android.service.appwidget.WidgetProto.providerPackage)
}

// optional string providerClass = 5;
inline bool WidgetProto::has_providerclass() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WidgetProto::clear_providerclass() {
  providerclass_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& WidgetProto::providerclass() const {
  // @@protoc_insertion_point(field_get:android.service.appwidget.WidgetProto.providerClass)
  return providerclass_.GetNoArena();
}
inline void WidgetProto::set_providerclass(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  providerclass_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:android.service.appwidget.WidgetProto.providerClass)
}
inline void WidgetProto::set_providerclass(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  providerclass_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:android.service.appwidget.WidgetProto.providerClass)
}
inline void WidgetProto::set_providerclass(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  providerclass_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:android.service.appwidget.WidgetProto.providerClass)
}
inline void WidgetProto::set_providerclass(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  providerclass_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:android.service.appwidget.WidgetProto.providerClass)
}
inline std::string* WidgetProto::mutable_providerclass() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:android.service.appwidget.WidgetProto.providerClass)
  return providerclass_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* WidgetProto::release_providerclass() {
  // @@protoc_insertion_point(field_release:android.service.appwidget.WidgetProto.providerClass)
  if (!has_providerclass()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return providerclass_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void WidgetProto::set_allocated_providerclass(std::string* providerclass) {
  if (providerclass != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  providerclass_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), providerclass);
  // @@protoc_insertion_point(field_set_allocated:android.service.appwidget.WidgetProto.providerClass)
}

// optional int32 minWidth = 6;
inline bool WidgetProto::has_minwidth() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WidgetProto::clear_minwidth() {
  minwidth_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WidgetProto::minwidth() const {
  // @@protoc_insertion_point(field_get:android.service.appwidget.WidgetProto.minWidth)
  return minwidth_;
}
inline void WidgetProto::set_minwidth(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  minwidth_ = value;
  // @@protoc_insertion_point(field_set:android.service.appwidget.WidgetProto.minWidth)
}

// optional int32 minHeight = 7;
inline bool WidgetProto::has_minheight() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WidgetProto::clear_minheight() {
  minheight_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WidgetProto::minheight() const {
  // @@protoc_insertion_point(field_get:android.service.appwidget.WidgetProto.minHeight)
  return minheight_;
}
inline void WidgetProto::set_minheight(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  minheight_ = value;
  // @@protoc_insertion_point(field_set:android.service.appwidget.WidgetProto.minHeight)
}

// optional int32 maxWidth = 8;
inline bool WidgetProto::has_maxwidth() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WidgetProto::clear_maxwidth() {
  maxwidth_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WidgetProto::maxwidth() const {
  // @@protoc_insertion_point(field_get:android.service.appwidget.WidgetProto.maxWidth)
  return maxwidth_;
}
inline void WidgetProto::set_maxwidth(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  maxwidth_ = value;
  // @@protoc_insertion_point(field_set:android.service.appwidget.WidgetProto.maxWidth)
}

// optional int32 maxHeight = 9;
inline bool WidgetProto::has_maxheight() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WidgetProto::clear_maxheight() {
  maxheight_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WidgetProto::maxheight() const {
  // @@protoc_insertion_point(field_get:android.service.appwidget.WidgetProto.maxHeight)
  return maxheight_;
}
inline void WidgetProto::set_maxheight(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  maxheight_ = value;
  // @@protoc_insertion_point(field_set:android.service.appwidget.WidgetProto.maxHeight)
}

// optional bool restoreCompleted = 10;
inline bool WidgetProto::has_restorecompleted() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WidgetProto::clear_restorecompleted() {
  restorecompleted_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool WidgetProto::restorecompleted() const {
  // @@protoc_insertion_point(field_get:android.service.appwidget.WidgetProto.restoreCompleted)
  return restorecompleted_;
}
inline void WidgetProto::set_restorecompleted(bool value) {
  _has_bits_[0] |= 0x00000020u;
  restorecompleted_ = value;
  // @@protoc_insertion_point(field_set:android.service.appwidget.WidgetProto.restoreCompleted)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace appwidget
}  // namespace service
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fservice_2fappwidget_2eproto
