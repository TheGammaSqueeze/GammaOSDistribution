// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/core/proto/android/server/blobstoremanagerservice.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fblobstoremanagerservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fblobstoremanagerservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fblobstoremanagerservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fblobstoremanagerservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace com {
namespace android {
namespace server {
namespace blob {
class BlobStatsEventProto;
class BlobStatsEventProtoDefaultTypeInternal;
extern BlobStatsEventProtoDefaultTypeInternal _BlobStatsEventProto_default_instance_;
class BlobStatsEventProto_BlobCommitterListProto;
class BlobStatsEventProto_BlobCommitterListProtoDefaultTypeInternal;
extern BlobStatsEventProto_BlobCommitterListProtoDefaultTypeInternal _BlobStatsEventProto_BlobCommitterListProto_default_instance_;
class BlobStatsEventProto_BlobCommitterProto;
class BlobStatsEventProto_BlobCommitterProtoDefaultTypeInternal;
extern BlobStatsEventProto_BlobCommitterProtoDefaultTypeInternal _BlobStatsEventProto_BlobCommitterProto_default_instance_;
class BlobStatsEventProto_BlobLeaseeListProto;
class BlobStatsEventProto_BlobLeaseeListProtoDefaultTypeInternal;
extern BlobStatsEventProto_BlobLeaseeListProtoDefaultTypeInternal _BlobStatsEventProto_BlobLeaseeListProto_default_instance_;
class BlobStatsEventProto_BlobLeaseeProto;
class BlobStatsEventProto_BlobLeaseeProtoDefaultTypeInternal;
extern BlobStatsEventProto_BlobLeaseeProtoDefaultTypeInternal _BlobStatsEventProto_BlobLeaseeProto_default_instance_;
}  // namespace blob
}  // namespace server
}  // namespace android
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::android::server::blob::BlobStatsEventProto* Arena::CreateMaybeMessage<::com::android::server::blob::BlobStatsEventProto>(Arena*);
template<> ::com::android::server::blob::BlobStatsEventProto_BlobCommitterListProto* Arena::CreateMaybeMessage<::com::android::server::blob::BlobStatsEventProto_BlobCommitterListProto>(Arena*);
template<> ::com::android::server::blob::BlobStatsEventProto_BlobCommitterProto* Arena::CreateMaybeMessage<::com::android::server::blob::BlobStatsEventProto_BlobCommitterProto>(Arena*);
template<> ::com::android::server::blob::BlobStatsEventProto_BlobLeaseeListProto* Arena::CreateMaybeMessage<::com::android::server::blob::BlobStatsEventProto_BlobLeaseeListProto>(Arena*);
template<> ::com::android::server::blob::BlobStatsEventProto_BlobLeaseeProto* Arena::CreateMaybeMessage<::com::android::server::blob::BlobStatsEventProto_BlobLeaseeProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace android {
namespace server {
namespace blob {

// ===================================================================

class BlobStatsEventProto_BlobCommitterProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.blob.BlobStatsEventProto.BlobCommitterProto) */ {
 public:
  BlobStatsEventProto_BlobCommitterProto();
  virtual ~BlobStatsEventProto_BlobCommitterProto();

  BlobStatsEventProto_BlobCommitterProto(const BlobStatsEventProto_BlobCommitterProto& from);
  BlobStatsEventProto_BlobCommitterProto(BlobStatsEventProto_BlobCommitterProto&& from) noexcept
    : BlobStatsEventProto_BlobCommitterProto() {
    *this = ::std::move(from);
  }

  inline BlobStatsEventProto_BlobCommitterProto& operator=(const BlobStatsEventProto_BlobCommitterProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlobStatsEventProto_BlobCommitterProto& operator=(BlobStatsEventProto_BlobCommitterProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const BlobStatsEventProto_BlobCommitterProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BlobStatsEventProto_BlobCommitterProto* internal_default_instance() {
    return reinterpret_cast<const BlobStatsEventProto_BlobCommitterProto*>(
               &_BlobStatsEventProto_BlobCommitterProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BlobStatsEventProto_BlobCommitterProto& a, BlobStatsEventProto_BlobCommitterProto& b) {
    a.Swap(&b);
  }
  inline void Swap(BlobStatsEventProto_BlobCommitterProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BlobStatsEventProto_BlobCommitterProto* New() const final {
    return CreateMaybeMessage<BlobStatsEventProto_BlobCommitterProto>(nullptr);
  }

  BlobStatsEventProto_BlobCommitterProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BlobStatsEventProto_BlobCommitterProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const BlobStatsEventProto_BlobCommitterProto& from);
  void MergeFrom(const BlobStatsEventProto_BlobCommitterProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BlobStatsEventProto_BlobCommitterProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.blob.BlobStatsEventProto.BlobCommitterProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommitTimestampMillisFieldNumber = 2,
    kUidFieldNumber = 1,
    kAccessModeFieldNumber = 3,
    kNumWhitelistedPackageFieldNumber = 4,
  };
  // optional int64 commit_timestamp_millis = 2;
  bool has_commit_timestamp_millis() const;
  void clear_commit_timestamp_millis();
  ::PROTOBUF_NAMESPACE_ID::int64 commit_timestamp_millis() const;
  void set_commit_timestamp_millis(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 access_mode = 3;
  bool has_access_mode() const;
  void clear_access_mode();
  ::PROTOBUF_NAMESPACE_ID::int32 access_mode() const;
  void set_access_mode(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_whitelisted_package = 4;
  bool has_num_whitelisted_package() const;
  void clear_num_whitelisted_package();
  ::PROTOBUF_NAMESPACE_ID::int32 num_whitelisted_package() const;
  void set_num_whitelisted_package(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.blob.BlobStatsEventProto.BlobCommitterProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 commit_timestamp_millis_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 access_mode_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_whitelisted_package_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fblobstoremanagerservice_2eproto;
};
// -------------------------------------------------------------------

class BlobStatsEventProto_BlobLeaseeProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.blob.BlobStatsEventProto.BlobLeaseeProto) */ {
 public:
  BlobStatsEventProto_BlobLeaseeProto();
  virtual ~BlobStatsEventProto_BlobLeaseeProto();

  BlobStatsEventProto_BlobLeaseeProto(const BlobStatsEventProto_BlobLeaseeProto& from);
  BlobStatsEventProto_BlobLeaseeProto(BlobStatsEventProto_BlobLeaseeProto&& from) noexcept
    : BlobStatsEventProto_BlobLeaseeProto() {
    *this = ::std::move(from);
  }

  inline BlobStatsEventProto_BlobLeaseeProto& operator=(const BlobStatsEventProto_BlobLeaseeProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlobStatsEventProto_BlobLeaseeProto& operator=(BlobStatsEventProto_BlobLeaseeProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const BlobStatsEventProto_BlobLeaseeProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BlobStatsEventProto_BlobLeaseeProto* internal_default_instance() {
    return reinterpret_cast<const BlobStatsEventProto_BlobLeaseeProto*>(
               &_BlobStatsEventProto_BlobLeaseeProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BlobStatsEventProto_BlobLeaseeProto& a, BlobStatsEventProto_BlobLeaseeProto& b) {
    a.Swap(&b);
  }
  inline void Swap(BlobStatsEventProto_BlobLeaseeProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BlobStatsEventProto_BlobLeaseeProto* New() const final {
    return CreateMaybeMessage<BlobStatsEventProto_BlobLeaseeProto>(nullptr);
  }

  BlobStatsEventProto_BlobLeaseeProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BlobStatsEventProto_BlobLeaseeProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const BlobStatsEventProto_BlobLeaseeProto& from);
  void MergeFrom(const BlobStatsEventProto_BlobLeaseeProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BlobStatsEventProto_BlobLeaseeProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.blob.BlobStatsEventProto.BlobLeaseeProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLeaseExpiryTimestampMillisFieldNumber = 2,
    kUidFieldNumber = 1,
  };
  // optional int64 lease_expiry_timestamp_millis = 2;
  bool has_lease_expiry_timestamp_millis() const;
  void clear_lease_expiry_timestamp_millis();
  ::PROTOBUF_NAMESPACE_ID::int64 lease_expiry_timestamp_millis() const;
  void set_lease_expiry_timestamp_millis(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int32 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:com.android.server.blob.BlobStatsEventProto.BlobLeaseeProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 lease_expiry_timestamp_millis_;
  ::PROTOBUF_NAMESPACE_ID::int32 uid_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fblobstoremanagerservice_2eproto;
};
// -------------------------------------------------------------------

class BlobStatsEventProto_BlobCommitterListProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.blob.BlobStatsEventProto.BlobCommitterListProto) */ {
 public:
  BlobStatsEventProto_BlobCommitterListProto();
  virtual ~BlobStatsEventProto_BlobCommitterListProto();

  BlobStatsEventProto_BlobCommitterListProto(const BlobStatsEventProto_BlobCommitterListProto& from);
  BlobStatsEventProto_BlobCommitterListProto(BlobStatsEventProto_BlobCommitterListProto&& from) noexcept
    : BlobStatsEventProto_BlobCommitterListProto() {
    *this = ::std::move(from);
  }

  inline BlobStatsEventProto_BlobCommitterListProto& operator=(const BlobStatsEventProto_BlobCommitterListProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlobStatsEventProto_BlobCommitterListProto& operator=(BlobStatsEventProto_BlobCommitterListProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const BlobStatsEventProto_BlobCommitterListProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BlobStatsEventProto_BlobCommitterListProto* internal_default_instance() {
    return reinterpret_cast<const BlobStatsEventProto_BlobCommitterListProto*>(
               &_BlobStatsEventProto_BlobCommitterListProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(BlobStatsEventProto_BlobCommitterListProto& a, BlobStatsEventProto_BlobCommitterListProto& b) {
    a.Swap(&b);
  }
  inline void Swap(BlobStatsEventProto_BlobCommitterListProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BlobStatsEventProto_BlobCommitterListProto* New() const final {
    return CreateMaybeMessage<BlobStatsEventProto_BlobCommitterListProto>(nullptr);
  }

  BlobStatsEventProto_BlobCommitterListProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BlobStatsEventProto_BlobCommitterListProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const BlobStatsEventProto_BlobCommitterListProto& from);
  void MergeFrom(const BlobStatsEventProto_BlobCommitterListProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BlobStatsEventProto_BlobCommitterListProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.blob.BlobStatsEventProto.BlobCommitterListProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommitterFieldNumber = 1,
  };
  // repeated .com.android.server.blob.BlobStatsEventProto.BlobCommitterProto committer = 1;
  int committer_size() const;
  void clear_committer();
  ::com::android::server::blob::BlobStatsEventProto_BlobCommitterProto* mutable_committer(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::blob::BlobStatsEventProto_BlobCommitterProto >*
      mutable_committer();
  const ::com::android::server::blob::BlobStatsEventProto_BlobCommitterProto& committer(int index) const;
  ::com::android::server::blob::BlobStatsEventProto_BlobCommitterProto* add_committer();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::blob::BlobStatsEventProto_BlobCommitterProto >&
      committer() const;

  // @@protoc_insertion_point(class_scope:com.android.server.blob.BlobStatsEventProto.BlobCommitterListProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::blob::BlobStatsEventProto_BlobCommitterProto > committer_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fblobstoremanagerservice_2eproto;
};
// -------------------------------------------------------------------

class BlobStatsEventProto_BlobLeaseeListProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.blob.BlobStatsEventProto.BlobLeaseeListProto) */ {
 public:
  BlobStatsEventProto_BlobLeaseeListProto();
  virtual ~BlobStatsEventProto_BlobLeaseeListProto();

  BlobStatsEventProto_BlobLeaseeListProto(const BlobStatsEventProto_BlobLeaseeListProto& from);
  BlobStatsEventProto_BlobLeaseeListProto(BlobStatsEventProto_BlobLeaseeListProto&& from) noexcept
    : BlobStatsEventProto_BlobLeaseeListProto() {
    *this = ::std::move(from);
  }

  inline BlobStatsEventProto_BlobLeaseeListProto& operator=(const BlobStatsEventProto_BlobLeaseeListProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlobStatsEventProto_BlobLeaseeListProto& operator=(BlobStatsEventProto_BlobLeaseeListProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const BlobStatsEventProto_BlobLeaseeListProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BlobStatsEventProto_BlobLeaseeListProto* internal_default_instance() {
    return reinterpret_cast<const BlobStatsEventProto_BlobLeaseeListProto*>(
               &_BlobStatsEventProto_BlobLeaseeListProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(BlobStatsEventProto_BlobLeaseeListProto& a, BlobStatsEventProto_BlobLeaseeListProto& b) {
    a.Swap(&b);
  }
  inline void Swap(BlobStatsEventProto_BlobLeaseeListProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BlobStatsEventProto_BlobLeaseeListProto* New() const final {
    return CreateMaybeMessage<BlobStatsEventProto_BlobLeaseeListProto>(nullptr);
  }

  BlobStatsEventProto_BlobLeaseeListProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BlobStatsEventProto_BlobLeaseeListProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const BlobStatsEventProto_BlobLeaseeListProto& from);
  void MergeFrom(const BlobStatsEventProto_BlobLeaseeListProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BlobStatsEventProto_BlobLeaseeListProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.blob.BlobStatsEventProto.BlobLeaseeListProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLeaseeFieldNumber = 1,
  };
  // repeated .com.android.server.blob.BlobStatsEventProto.BlobLeaseeProto leasee = 1;
  int leasee_size() const;
  void clear_leasee();
  ::com::android::server::blob::BlobStatsEventProto_BlobLeaseeProto* mutable_leasee(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::blob::BlobStatsEventProto_BlobLeaseeProto >*
      mutable_leasee();
  const ::com::android::server::blob::BlobStatsEventProto_BlobLeaseeProto& leasee(int index) const;
  ::com::android::server::blob::BlobStatsEventProto_BlobLeaseeProto* add_leasee();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::blob::BlobStatsEventProto_BlobLeaseeProto >&
      leasee() const;

  // @@protoc_insertion_point(class_scope:com.android.server.blob.BlobStatsEventProto.BlobLeaseeListProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::blob::BlobStatsEventProto_BlobLeaseeProto > leasee_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fblobstoremanagerservice_2eproto;
};
// -------------------------------------------------------------------

class BlobStatsEventProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:com.android.server.blob.BlobStatsEventProto) */ {
 public:
  BlobStatsEventProto();
  virtual ~BlobStatsEventProto();

  BlobStatsEventProto(const BlobStatsEventProto& from);
  BlobStatsEventProto(BlobStatsEventProto&& from) noexcept
    : BlobStatsEventProto() {
    *this = ::std::move(from);
  }

  inline BlobStatsEventProto& operator=(const BlobStatsEventProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlobStatsEventProto& operator=(BlobStatsEventProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const BlobStatsEventProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BlobStatsEventProto* internal_default_instance() {
    return reinterpret_cast<const BlobStatsEventProto*>(
               &_BlobStatsEventProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(BlobStatsEventProto& a, BlobStatsEventProto& b) {
    a.Swap(&b);
  }
  inline void Swap(BlobStatsEventProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BlobStatsEventProto* New() const final {
    return CreateMaybeMessage<BlobStatsEventProto>(nullptr);
  }

  BlobStatsEventProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BlobStatsEventProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const BlobStatsEventProto& from);
  void MergeFrom(const BlobStatsEventProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BlobStatsEventProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.android.server.blob.BlobStatsEventProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef BlobStatsEventProto_BlobCommitterProto BlobCommitterProto;
  typedef BlobStatsEventProto_BlobLeaseeProto BlobLeaseeProto;
  typedef BlobStatsEventProto_BlobCommitterListProto BlobCommitterListProto;
  typedef BlobStatsEventProto_BlobLeaseeListProto BlobLeaseeListProto;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.android.server.blob.BlobStatsEventProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fblobstoremanagerservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BlobStatsEventProto_BlobCommitterProto

// optional int32 uid = 1;
inline bool BlobStatsEventProto_BlobCommitterProto::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BlobStatsEventProto_BlobCommitterProto::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BlobStatsEventProto_BlobCommitterProto::uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.blob.BlobStatsEventProto.BlobCommitterProto.uid)
  return uid_;
}
inline void BlobStatsEventProto_BlobCommitterProto::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.blob.BlobStatsEventProto.BlobCommitterProto.uid)
}

// optional int64 commit_timestamp_millis = 2;
inline bool BlobStatsEventProto_BlobCommitterProto::has_commit_timestamp_millis() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlobStatsEventProto_BlobCommitterProto::clear_commit_timestamp_millis() {
  commit_timestamp_millis_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 BlobStatsEventProto_BlobCommitterProto::commit_timestamp_millis() const {
  // @@protoc_insertion_point(field_get:com.android.server.blob.BlobStatsEventProto.BlobCommitterProto.commit_timestamp_millis)
  return commit_timestamp_millis_;
}
inline void BlobStatsEventProto_BlobCommitterProto::set_commit_timestamp_millis(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  commit_timestamp_millis_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.blob.BlobStatsEventProto.BlobCommitterProto.commit_timestamp_millis)
}

// optional int32 access_mode = 3;
inline bool BlobStatsEventProto_BlobCommitterProto::has_access_mode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BlobStatsEventProto_BlobCommitterProto::clear_access_mode() {
  access_mode_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BlobStatsEventProto_BlobCommitterProto::access_mode() const {
  // @@protoc_insertion_point(field_get:com.android.server.blob.BlobStatsEventProto.BlobCommitterProto.access_mode)
  return access_mode_;
}
inline void BlobStatsEventProto_BlobCommitterProto::set_access_mode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  access_mode_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.blob.BlobStatsEventProto.BlobCommitterProto.access_mode)
}

// optional int32 num_whitelisted_package = 4;
inline bool BlobStatsEventProto_BlobCommitterProto::has_num_whitelisted_package() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BlobStatsEventProto_BlobCommitterProto::clear_num_whitelisted_package() {
  num_whitelisted_package_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BlobStatsEventProto_BlobCommitterProto::num_whitelisted_package() const {
  // @@protoc_insertion_point(field_get:com.android.server.blob.BlobStatsEventProto.BlobCommitterProto.num_whitelisted_package)
  return num_whitelisted_package_;
}
inline void BlobStatsEventProto_BlobCommitterProto::set_num_whitelisted_package(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  num_whitelisted_package_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.blob.BlobStatsEventProto.BlobCommitterProto.num_whitelisted_package)
}

// -------------------------------------------------------------------

// BlobStatsEventProto_BlobLeaseeProto

// optional int32 uid = 1;
inline bool BlobStatsEventProto_BlobLeaseeProto::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BlobStatsEventProto_BlobLeaseeProto::clear_uid() {
  uid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BlobStatsEventProto_BlobLeaseeProto::uid() const {
  // @@protoc_insertion_point(field_get:com.android.server.blob.BlobStatsEventProto.BlobLeaseeProto.uid)
  return uid_;
}
inline void BlobStatsEventProto_BlobLeaseeProto::set_uid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  uid_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.blob.BlobStatsEventProto.BlobLeaseeProto.uid)
}

// optional int64 lease_expiry_timestamp_millis = 2;
inline bool BlobStatsEventProto_BlobLeaseeProto::has_lease_expiry_timestamp_millis() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlobStatsEventProto_BlobLeaseeProto::clear_lease_expiry_timestamp_millis() {
  lease_expiry_timestamp_millis_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 BlobStatsEventProto_BlobLeaseeProto::lease_expiry_timestamp_millis() const {
  // @@protoc_insertion_point(field_get:com.android.server.blob.BlobStatsEventProto.BlobLeaseeProto.lease_expiry_timestamp_millis)
  return lease_expiry_timestamp_millis_;
}
inline void BlobStatsEventProto_BlobLeaseeProto::set_lease_expiry_timestamp_millis(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  lease_expiry_timestamp_millis_ = value;
  // @@protoc_insertion_point(field_set:com.android.server.blob.BlobStatsEventProto.BlobLeaseeProto.lease_expiry_timestamp_millis)
}

// -------------------------------------------------------------------

// BlobStatsEventProto_BlobCommitterListProto

// repeated .com.android.server.blob.BlobStatsEventProto.BlobCommitterProto committer = 1;
inline int BlobStatsEventProto_BlobCommitterListProto::committer_size() const {
  return committer_.size();
}
inline void BlobStatsEventProto_BlobCommitterListProto::clear_committer() {
  committer_.Clear();
}
inline ::com::android::server::blob::BlobStatsEventProto_BlobCommitterProto* BlobStatsEventProto_BlobCommitterListProto::mutable_committer(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.blob.BlobStatsEventProto.BlobCommitterListProto.committer)
  return committer_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::blob::BlobStatsEventProto_BlobCommitterProto >*
BlobStatsEventProto_BlobCommitterListProto::mutable_committer() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.blob.BlobStatsEventProto.BlobCommitterListProto.committer)
  return &committer_;
}
inline const ::com::android::server::blob::BlobStatsEventProto_BlobCommitterProto& BlobStatsEventProto_BlobCommitterListProto::committer(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.blob.BlobStatsEventProto.BlobCommitterListProto.committer)
  return committer_.Get(index);
}
inline ::com::android::server::blob::BlobStatsEventProto_BlobCommitterProto* BlobStatsEventProto_BlobCommitterListProto::add_committer() {
  // @@protoc_insertion_point(field_add:com.android.server.blob.BlobStatsEventProto.BlobCommitterListProto.committer)
  return committer_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::blob::BlobStatsEventProto_BlobCommitterProto >&
BlobStatsEventProto_BlobCommitterListProto::committer() const {
  // @@protoc_insertion_point(field_list:com.android.server.blob.BlobStatsEventProto.BlobCommitterListProto.committer)
  return committer_;
}

// -------------------------------------------------------------------

// BlobStatsEventProto_BlobLeaseeListProto

// repeated .com.android.server.blob.BlobStatsEventProto.BlobLeaseeProto leasee = 1;
inline int BlobStatsEventProto_BlobLeaseeListProto::leasee_size() const {
  return leasee_.size();
}
inline void BlobStatsEventProto_BlobLeaseeListProto::clear_leasee() {
  leasee_.Clear();
}
inline ::com::android::server::blob::BlobStatsEventProto_BlobLeaseeProto* BlobStatsEventProto_BlobLeaseeListProto::mutable_leasee(int index) {
  // @@protoc_insertion_point(field_mutable:com.android.server.blob.BlobStatsEventProto.BlobLeaseeListProto.leasee)
  return leasee_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::blob::BlobStatsEventProto_BlobLeaseeProto >*
BlobStatsEventProto_BlobLeaseeListProto::mutable_leasee() {
  // @@protoc_insertion_point(field_mutable_list:com.android.server.blob.BlobStatsEventProto.BlobLeaseeListProto.leasee)
  return &leasee_;
}
inline const ::com::android::server::blob::BlobStatsEventProto_BlobLeaseeProto& BlobStatsEventProto_BlobLeaseeListProto::leasee(int index) const {
  // @@protoc_insertion_point(field_get:com.android.server.blob.BlobStatsEventProto.BlobLeaseeListProto.leasee)
  return leasee_.Get(index);
}
inline ::com::android::server::blob::BlobStatsEventProto_BlobLeaseeProto* BlobStatsEventProto_BlobLeaseeListProto::add_leasee() {
  // @@protoc_insertion_point(field_add:com.android.server.blob.BlobStatsEventProto.BlobLeaseeListProto.leasee)
  return leasee_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::android::server::blob::BlobStatsEventProto_BlobLeaseeProto >&
BlobStatsEventProto_BlobLeaseeListProto::leasee() const {
  // @@protoc_insertion_point(field_list:com.android.server.blob.BlobStatsEventProto.BlobLeaseeListProto.leasee)
  return leasee_;
}

// -------------------------------------------------------------------

// BlobStatsEventProto

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace blob
}  // namespace server
}  // namespace android
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fbase_2fcore_2fproto_2fandroid_2fserver_2fblobstoremanagerservice_2eproto
