// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/tools/aapt2/ResourcesInternal.proto

#include "frameworks/base/tools/aapt2/ResourcesInternal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2ftools_2faapt2_2fConfiguration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Configuration_frameworks_2fbase_2ftools_2faapt2_2fConfiguration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2ftools_2faapt2_2fResources_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourcePosition_frameworks_2fbase_2ftools_2faapt2_2fResources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CompiledFile_Symbol_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto;
namespace aapt {
namespace pb {
namespace internal {
class CompiledFile_SymbolDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CompiledFile_Symbol> _instance;
} _CompiledFile_Symbol_default_instance_;
class CompiledFileDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CompiledFile> _instance;
} _CompiledFile_default_instance_;
}  // namespace internal
}  // namespace pb
}  // namespace aapt
static void InitDefaultsscc_info_CompiledFile_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aapt::pb::internal::_CompiledFile_default_instance_;
    new (ptr) ::aapt::pb::internal::CompiledFile();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aapt::pb::internal::CompiledFile::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CompiledFile_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_CompiledFile_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto}, {
      &scc_info_Configuration_frameworks_2fbase_2ftools_2faapt2_2fConfiguration_2eproto.base,
      &scc_info_CompiledFile_Symbol_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto.base,}};

static void InitDefaultsscc_info_CompiledFile_Symbol_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aapt::pb::internal::_CompiledFile_Symbol_default_instance_;
    new (ptr) ::aapt::pb::internal::CompiledFile_Symbol();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aapt::pb::internal::CompiledFile_Symbol::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CompiledFile_Symbol_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_CompiledFile_Symbol_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto}, {
      &scc_info_SourcePosition_frameworks_2fbase_2ftools_2faapt2_2fResources_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aapt::pb::internal::CompiledFile_Symbol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aapt::pb::internal::CompiledFile_Symbol, resource_name_),
  PROTOBUF_FIELD_OFFSET(::aapt::pb::internal::CompiledFile_Symbol, source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::aapt::pb::internal::CompiledFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::aapt::pb::internal::CompiledFile, resource_name_),
  PROTOBUF_FIELD_OFFSET(::aapt::pb::internal::CompiledFile, config_),
  PROTOBUF_FIELD_OFFSET(::aapt::pb::internal::CompiledFile, type_),
  PROTOBUF_FIELD_OFFSET(::aapt::pb::internal::CompiledFile, source_path_),
  PROTOBUF_FIELD_OFFSET(::aapt::pb::internal::CompiledFile, exported_symbol_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::aapt::pb::internal::CompiledFile_Symbol)},
  { 7, -1, sizeof(::aapt::pb::internal::CompiledFile)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aapt::pb::internal::_CompiledFile_Symbol_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::aapt::pb::internal::_CompiledFile_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n3frameworks/base/tools/aapt2/ResourcesI"
  "nternal.proto\022\020aapt.pb.internal\032/framewo"
  "rks/base/tools/aapt2/Configuration.proto"
  "\032+frameworks/base/tools/aapt2/Resources."
  "proto\"\227\002\n\014CompiledFile\022\025\n\rresource_name\030"
  "\001 \001(\t\022&\n\006config\030\002 \001(\0132\026.aapt.pb.Configur"
  "ation\022)\n\004type\030\003 \001(\0162\033.aapt.pb.FileRefere"
  "nce.Type\022\023\n\013source_path\030\004 \001(\t\022>\n\017exporte"
  "d_symbol\030\005 \003(\0132%.aapt.pb.internal.Compil"
  "edFile.Symbol\032H\n\006Symbol\022\025\n\rresource_name"
  "\030\001 \001(\t\022\'\n\006source\030\002 \001(\0132\027.aapt.pb.SourceP"
  "ositionB\032\n\030android.aapt.pb.internalb\006pro"
  "to3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto_deps[2] = {
  &::descriptor_table_frameworks_2fbase_2ftools_2faapt2_2fConfiguration_2eproto,
  &::descriptor_table_frameworks_2fbase_2ftools_2faapt2_2fResources_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto_sccs[2] = {
  &scc_info_CompiledFile_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto.base,
  &scc_info_CompiledFile_Symbol_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto_once;
static bool descriptor_table_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto = {
  &descriptor_table_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto_initialized, descriptor_table_protodef_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto, "frameworks/base/tools/aapt2/ResourcesInternal.proto", 483,
  &descriptor_table_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto_once, descriptor_table_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto_sccs, descriptor_table_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto_deps, 2, 2,
  schemas, file_default_instances, TableStruct_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto::offsets,
  file_level_metadata_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto, 2, file_level_enum_descriptors_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto, file_level_service_descriptors_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto), true);
namespace aapt {
namespace pb {
namespace internal {

// ===================================================================

void CompiledFile_Symbol::InitAsDefaultInstance() {
  ::aapt::pb::internal::_CompiledFile_Symbol_default_instance_._instance.get_mutable()->source_ = const_cast< ::aapt::pb::SourcePosition*>(
      ::aapt::pb::SourcePosition::internal_default_instance());
}
class CompiledFile_Symbol::_Internal {
 public:
  static const ::aapt::pb::SourcePosition& source(const CompiledFile_Symbol* msg);
};

const ::aapt::pb::SourcePosition&
CompiledFile_Symbol::_Internal::source(const CompiledFile_Symbol* msg) {
  return *msg->source_;
}
void CompiledFile_Symbol::clear_source() {
  if (GetArenaNoVirtual() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
}
CompiledFile_Symbol::CompiledFile_Symbol()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aapt.pb.internal.CompiledFile.Symbol)
}
CompiledFile_Symbol::CompiledFile_Symbol(const CompiledFile_Symbol& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.resource_name().empty()) {
    resource_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.has_source()) {
    source_ = new ::aapt::pb::SourcePosition(*from.source_);
  } else {
    source_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:aapt.pb.internal.CompiledFile.Symbol)
}

void CompiledFile_Symbol::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CompiledFile_Symbol_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto.base);
  resource_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_ = nullptr;
}

CompiledFile_Symbol::~CompiledFile_Symbol() {
  // @@protoc_insertion_point(destructor:aapt.pb.internal.CompiledFile.Symbol)
  SharedDtor();
}

void CompiledFile_Symbol::SharedDtor() {
  resource_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete source_;
}

void CompiledFile_Symbol::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CompiledFile_Symbol& CompiledFile_Symbol::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CompiledFile_Symbol_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto.base);
  return *internal_default_instance();
}


void CompiledFile_Symbol::Clear() {
// @@protoc_insertion_point(message_clear_start:aapt.pb.internal.CompiledFile.Symbol)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CompiledFile_Symbol::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string resource_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_resource_name(), ptr, ctx, "aapt.pb.internal.CompiledFile.Symbol.resource_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aapt.pb.SourcePosition source = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CompiledFile_Symbol::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:aapt.pb.internal.CompiledFile.Symbol)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), static_cast<int>(this->resource_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "aapt.pb.internal.CompiledFile.Symbol.resource_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .aapt.pb.SourcePosition source = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aapt.pb.internal.CompiledFile.Symbol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aapt.pb.internal.CompiledFile.Symbol)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CompiledFile_Symbol::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aapt.pb.internal.CompiledFile.Symbol)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aapt.pb.internal.CompiledFile.Symbol.resource_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // .aapt.pb.SourcePosition source = 2;
  if (this->has_source()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::source(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aapt.pb.internal.CompiledFile.Symbol)
}

::PROTOBUF_NAMESPACE_ID::uint8* CompiledFile_Symbol::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:aapt.pb.internal.CompiledFile.Symbol)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aapt.pb.internal.CompiledFile.Symbol.resource_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_name(), target);
  }

  // .aapt.pb.SourcePosition source = 2;
  if (this->has_source()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::source(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aapt.pb.internal.CompiledFile.Symbol)
  return target;
}

size_t CompiledFile_Symbol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aapt.pb.internal.CompiledFile.Symbol)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  // .aapt.pb.SourcePosition source = 2;
  if (this->has_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompiledFile_Symbol::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aapt.pb.internal.CompiledFile.Symbol)
  GOOGLE_DCHECK_NE(&from, this);
  const CompiledFile_Symbol* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CompiledFile_Symbol>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aapt.pb.internal.CompiledFile.Symbol)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aapt.pb.internal.CompiledFile.Symbol)
    MergeFrom(*source);
  }
}

void CompiledFile_Symbol::MergeFrom(const CompiledFile_Symbol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aapt.pb.internal.CompiledFile.Symbol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.has_source()) {
    mutable_source()->::aapt::pb::SourcePosition::MergeFrom(from.source());
  }
}

void CompiledFile_Symbol::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aapt.pb.internal.CompiledFile.Symbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompiledFile_Symbol::CopyFrom(const CompiledFile_Symbol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aapt.pb.internal.CompiledFile.Symbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompiledFile_Symbol::IsInitialized() const {
  return true;
}

void CompiledFile_Symbol::InternalSwap(CompiledFile_Symbol* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  resource_name_.Swap(&other->resource_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(source_, other->source_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CompiledFile_Symbol::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CompiledFile::InitAsDefaultInstance() {
  ::aapt::pb::internal::_CompiledFile_default_instance_._instance.get_mutable()->config_ = const_cast< ::aapt::pb::Configuration*>(
      ::aapt::pb::Configuration::internal_default_instance());
}
class CompiledFile::_Internal {
 public:
  static const ::aapt::pb::Configuration& config(const CompiledFile* msg);
};

const ::aapt::pb::Configuration&
CompiledFile::_Internal::config(const CompiledFile* msg) {
  return *msg->config_;
}
void CompiledFile::clear_config() {
  if (GetArenaNoVirtual() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
}
CompiledFile::CompiledFile()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aapt.pb.internal.CompiledFile)
}
CompiledFile::CompiledFile(const CompiledFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      exported_symbol_(from.exported_symbol_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.resource_name().empty()) {
    resource_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  source_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.source_path().empty()) {
    source_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.source_path_);
  }
  if (from.has_config()) {
    config_ = new ::aapt::pb::Configuration(*from.config_);
  } else {
    config_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:aapt.pb.internal.CompiledFile)
}

void CompiledFile::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CompiledFile_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto.base);
  resource_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&config_)) + sizeof(type_));
}

CompiledFile::~CompiledFile() {
  // @@protoc_insertion_point(destructor:aapt.pb.internal.CompiledFile)
  SharedDtor();
}

void CompiledFile::SharedDtor() {
  resource_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
}

void CompiledFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CompiledFile& CompiledFile::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CompiledFile_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto.base);
  return *internal_default_instance();
}


void CompiledFile::Clear() {
// @@protoc_insertion_point(message_clear_start:aapt.pb.internal.CompiledFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exported_symbol_.Clear();
  resource_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CompiledFile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string resource_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_resource_name(), ptr, ctx, "aapt.pb.internal.CompiledFile.resource_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aapt.pb.Configuration config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .aapt.pb.FileReference.Type type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_type(static_cast<::aapt::pb::FileReference_Type>(val));
        } else goto handle_unusual;
        continue;
      // string source_path = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_source_path(), ptr, ctx, "aapt.pb.internal.CompiledFile.source_path");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_exported_symbol(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CompiledFile::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:aapt.pb.internal.CompiledFile)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string resource_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->resource_name().data(), static_cast<int>(this->resource_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "aapt.pb.internal.CompiledFile.resource_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .aapt.pb.Configuration config = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .aapt.pb.FileReference.Type type = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::aapt::pb::FileReference_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source_path = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_source_path()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->source_path().data(), static_cast<int>(this->source_path().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "aapt.pb.internal.CompiledFile.source_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_exported_symbol()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aapt.pb.internal.CompiledFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aapt.pb.internal.CompiledFile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CompiledFile::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aapt.pb.internal.CompiledFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aapt.pb.internal.CompiledFile.resource_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // .aapt.pb.Configuration config = 2;
  if (this->has_config()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::config(this), output);
  }

  // .aapt.pb.FileReference.Type type = 3;
  if (this->type() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // string source_path = 4;
  if (this->source_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->source_path().data(), static_cast<int>(this->source_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aapt.pb.internal.CompiledFile.source_path");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->source_path(), output);
  }

  // repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exported_symbol_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->exported_symbol(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aapt.pb.internal.CompiledFile)
}

::PROTOBUF_NAMESPACE_ID::uint8* CompiledFile::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:aapt.pb.internal.CompiledFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->resource_name().data(), static_cast<int>(this->resource_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aapt.pb.internal.CompiledFile.resource_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_name(), target);
  }

  // .aapt.pb.Configuration config = 2;
  if (this->has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::config(this), target);
  }

  // .aapt.pb.FileReference.Type type = 3;
  if (this->type() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // string source_path = 4;
  if (this->source_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->source_path().data(), static_cast<int>(this->source_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "aapt.pb.internal.CompiledFile.source_path");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->source_path(), target);
  }

  // repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exported_symbol_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->exported_symbol(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aapt.pb.internal.CompiledFile)
  return target;
}

size_t CompiledFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aapt.pb.internal.CompiledFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->exported_symbol_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->exported_symbol(static_cast<int>(i)));
    }
  }

  // string resource_name = 1;
  if (this->resource_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->resource_name());
  }

  // string source_path = 4;
  if (this->source_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->source_path());
  }

  // .aapt.pb.Configuration config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // .aapt.pb.FileReference.Type type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompiledFile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aapt.pb.internal.CompiledFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CompiledFile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CompiledFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aapt.pb.internal.CompiledFile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aapt.pb.internal.CompiledFile)
    MergeFrom(*source);
  }
}

void CompiledFile::MergeFrom(const CompiledFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aapt.pb.internal.CompiledFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exported_symbol_.MergeFrom(from.exported_symbol_);
  if (from.resource_name().size() > 0) {

    resource_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
  }
  if (from.source_path().size() > 0) {

    source_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.source_path_);
  }
  if (from.has_config()) {
    mutable_config()->::aapt::pb::Configuration::MergeFrom(from.config());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CompiledFile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aapt.pb.internal.CompiledFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompiledFile::CopyFrom(const CompiledFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aapt.pb.internal.CompiledFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompiledFile::IsInitialized() const {
  return true;
}

void CompiledFile::InternalSwap(CompiledFile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&exported_symbol_)->InternalSwap(CastToBase(&other->exported_symbol_));
  resource_name_.Swap(&other->resource_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_path_.Swap(&other->source_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(config_, other->config_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CompiledFile::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace internal
}  // namespace pb
}  // namespace aapt
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::aapt::pb::internal::CompiledFile_Symbol* Arena::CreateMaybeMessage< ::aapt::pb::internal::CompiledFile_Symbol >(Arena* arena) {
  return Arena::CreateInternal< ::aapt::pb::internal::CompiledFile_Symbol >(arena);
}
template<> PROTOBUF_NOINLINE ::aapt::pb::internal::CompiledFile* Arena::CreateMaybeMessage< ::aapt::pb::internal::CompiledFile >(Arena* arena) {
  return Arena::CreateInternal< ::aapt::pb::internal::CompiledFile >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
