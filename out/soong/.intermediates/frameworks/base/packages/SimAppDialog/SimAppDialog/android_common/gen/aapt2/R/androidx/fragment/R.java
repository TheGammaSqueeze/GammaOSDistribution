/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package androidx.fragment;

public final class R {
  public static final class anim {
    public static final int fragment_fast_out_extra_slow_in=0x7f010000;
    public static final int suw_slide_back_in=0x7f010001;
    public static final int suw_slide_back_out=0x7f010002;
    public static final int suw_slide_next_in=0x7f010003;
    public static final int suw_slide_next_out=0x7f010004;
  }
  public static final class animator {
    public static final int fragment_close_enter=0x7f020000;
    public static final int fragment_close_exit=0x7f020001;
    public static final int fragment_fade_enter=0x7f020002;
    public static final int fragment_fade_exit=0x7f020003;
    public static final int fragment_open_enter=0x7f020004;
    public static final int fragment_open_exit=0x7f020005;
    public static final int suw_slide_back_in=0x7f020006;
    public static final int suw_slide_back_out=0x7f020007;
    public static final int suw_slide_next_in=0x7f020008;
    public static final int suw_slide_next_out=0x7f020009;
  }
  public static final class attr {
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f030000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int coordinatorLayoutStyle=0x7f030001;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerLayoutStyle=0x7f030002;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f030003;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f030004;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f030005;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f030006;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f030007;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f030008;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f030009;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f03000a;
    /**
     * Provides the system font family name to check before downloading the font. For
     * example if the fontProviderQuery asked for "Sans Serif", it is possible to define
     * fontProviderSystemFontFamily as "sans-serif" to tell the system to use "sans-serif" font
     * family if it exists on the system.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderSystemFontFamily=0x7f03000b;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f03000c;
    /**
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontVariationSettings=0x7f03000d;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f03000e;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keylines=0x7f03000f;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_anchor=0x7f030010;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int layout_anchorGravity=0x7f030011;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_behavior=0x7f030012;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static final int layout_dodgeInsetEdges=0x7f030013;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static final int layout_insetEdge=0x7f030014;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_keyline=0x7f030015;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int nestedScrollViewStyle=0x7f030016;
    /**
     * Resource reference to the string array of query patterns for a custom capability.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryPatterns=0x7f030017;
    /**
     * Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shortcutMatchRequired=0x7f030018;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarBackground=0x7f030019;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int suwAspectRatio=0x7f03001a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwBackground=0x7f03001b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwBackgroundBaseColor=0x7f03001c;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int suwBackgroundPatterned=0x7f03001d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwBackgroundTile=0x7f03001e;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int suwButtonAllCaps=0x7f03001f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int suwButtonCornerRadius=0x7f030020;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int suwButtonFontFamily=0x7f030021;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int suwButtonHighlightAlpha=0x7f030022;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwCardBackground=0x7f030023;
    /**
     * Custom view attributes
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwColorPrimary=0x7f030024;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwContainer=0x7f030025;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int suwDecorPaddingTop=0x7f030026;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>both</td><td>1</td><td></td></tr>
     * <tr><td>either</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int suwDividerCondition=0x7f030027;
    /**
     * Deprecated. Use suwDividerInsetStart and suwDividerInsetEnd instead
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int suwDividerInset=0x7f030028;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int suwDividerInsetEnd=0x7f030029;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int suwDividerInsetStart=0x7f03002a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int suwDividerInsetStartNoIcon=0x7f03002b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwEditTextBackgroundColor=0x7f03002c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwFillContentLayoutStyle=0x7f03002d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwFooter=0x7f03002e;
    /**
     * Subset of values in "gravity" in frameworks/base/core/res/res/values/attrs.xml. Only
     * horizontal values are listed here as the header does not support vertical gravity.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int suwGlifHeaderGravity=0x7f03002f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwGlifIconStyle=0x7f030030;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwHeader=0x7f030031;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwHeaderColor=0x7f030032;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int suwHeaderText=0x7f030033;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwIllustration=0x7f030034;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int suwIllustrationAspectRatio=0x7f030035;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwIllustrationHorizontalTile=0x7f030036;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwIllustrationImage=0x7f030037;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwItemDescriptionStyle=0x7f030038;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwItemDescriptionTitleStyle=0x7f030039;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int suwLayoutFullscreen=0x7f03003a;
    /**
     * Theme attributes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwLayoutTheme=0x7f03003b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwListItemIconColor=0x7f03003c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int suwMarginSides=0x7f03003d;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwNavBarBackgroundColor=0x7f03003e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwNavBarButtonBackground=0x7f03003f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwNavBarTextColor=0x7f030040;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwNavBarTheme=0x7f030041;
    /**
     * Values copied from frameworks/base/core/res/res/values/attrs.xml
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>2</td><td>Displays bottom scroll indicator when vew can be scrolled down.</td></tr>
     * <tr><td>end</td><td>20</td><td>Displays right scroll indicator when vew can be scrolled in the
     * end direction.</td></tr>
     * <tr><td>left</td><td>4</td><td>Displays left scroll indicator when vew can be scrolled left.</td></tr>
     * <tr><td>none</td><td>0</td><td>No scroll indicators are displayed.</td></tr>
     * <tr><td>right</td><td>8</td><td>Displays right scroll indicator when vew can be scrolled right.</td></tr>
     * <tr><td>start</td><td>10</td><td>Displays right scroll indicator when vew can be scrolled in the
     * start direction.</td></tr>
     * <tr><td>top</td><td>1</td><td>Displays top scroll indicator when view can be scrolled up.</td></tr>
     * </table>
     */
    public static final int suwScrollIndicators=0x7f030042;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwStatusBarBackground=0x7f030043;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwStickyHeader=0x7f030044;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwVideo=0x7f030045;
    /**
     * Background color for SwipeRefreshLayout progress spinner.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int swipeRefreshLayoutProgressSpinnerBackgroundColor=0x7f030046;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ttcIndex=0x7f030047;
  }
  public static final class bool {
    /**
     * Whether to show an illustration on the screen asking the user to download the carrier app.
     * May be set to true in a resource overlay as long as a drawable asset with ID
     * illo_sim_app_dialog is provided, along with a content description for accessibility with
     * string ID install_carrier_app_image_content_description.
     */
    public static final int show_sim_app_dialog_illo=0x7f040000;
    /**
     * Whether to use tablet layout
     * Whether to use tablet layout
     */
    public static final int suwUseTabletLayout=0x7f040001;
  }
  public static final class color {
    public static final int androidx_core_ripple_material_light=0x7f050000;
    public static final int androidx_core_secondary_text_default_material_light=0x7f050001;
    public static final int notification_action_color_filter=0x7f050002;
    public static final int notification_icon_bg_color=0x7f050003;
    public static final int notification_material_background_media_default_color=0x7f050004;
    public static final int primary_text_default_material_dark=0x7f050005;
    public static final int secondary_text_default_material_dark=0x7f050006;
    /**
     * General colors
     */
    public static final int suw_color_accent_dark=0x7f050007;
    /**
     * GLIF colors
     */
    public static final int suw_color_accent_glif_dark=0x7f050008;
    public static final int suw_color_accent_glif_light=0x7f050009;
    public static final int suw_color_accent_glif_v3=0x7f05000a;
    public static final int suw_color_accent_light=0x7f05000b;
    public static final int suw_color_background_dark=0x7f05000c;
    public static final int suw_color_background_light=0x7f05000d;
    public static final int suw_flat_button_highlight=0x7f05000e;
    public static final int suw_glif_background_color_dark=0x7f05000f;
    public static final int suw_glif_background_color_light=0x7f050010;
    public static final int suw_glif_edit_text_bg_light_color=0x7f050011;
    public static final int suw_glif_v3_nav_bar_color_light=0x7f050012;
    public static final int suw_glif_v3_nav_bar_divider_color_light=0x7f050013;
    public static final int suw_link_color_dark=0x7f050014;
    public static final int suw_link_color_light=0x7f050015;
    public static final int suw_list_item_icon_color_dark=0x7f050016;
    public static final int suw_list_item_icon_color_light=0x7f050017;
    /**
     * Navigation bar colors
     */
    public static final int suw_navbar_bg_dark=0x7f050018;
    public static final int suw_navbar_bg_light=0x7f050019;
    public static final int suw_progress_bar_color_dark=0x7f05001a;
    public static final int suw_progress_bar_color_light=0x7f05001b;
  }
  public static final class dimen {
    public static final int compat_button_inset_horizontal_material=0x7f060000;
    public static final int compat_button_inset_vertical_material=0x7f060001;
    public static final int compat_button_padding_horizontal_material=0x7f060002;
    public static final int compat_button_padding_vertical_material=0x7f060003;
    public static final int compat_control_corner_material=0x7f060004;
    public static final int compat_notification_large_icon_max_height=0x7f060005;
    public static final int compat_notification_large_icon_max_width=0x7f060006;
    public static final int def_drawer_elevation=0x7f060007;
    public static final int notification_action_icon_size=0x7f060008;
    public static final int notification_action_text_size=0x7f060009;
    public static final int notification_big_circle_margin=0x7f06000a;
    public static final int notification_content_margin_start=0x7f06000b;
    public static final int notification_large_icon_height=0x7f06000c;
    public static final int notification_large_icon_width=0x7f06000d;
    public static final int notification_main_column_padding_top=0x7f06000e;
    public static final int notification_media_narrow_margin=0x7f06000f;
    public static final int notification_right_icon_size=0x7f060010;
    public static final int notification_right_side_padding_top=0x7f060011;
    public static final int notification_small_icon_background_padding=0x7f060012;
    public static final int notification_small_icon_size_as_large=0x7f060013;
    public static final int notification_subtext_size=0x7f060014;
    public static final int notification_top_pad=0x7f060015;
    public static final int notification_top_pad_large_text=0x7f060016;
    /**
     * Card layout (for tablets)
     */
    public static final int suw_card_corner_radius=0x7f060017;
    public static final int suw_card_elevation=0x7f060018;
    public static final int suw_card_land_header_text_margin_top=0x7f060019;
    public static final int suw_card_port_margin_sides=0x7f06001a;
    public static final int suw_card_title_padding_bottom=0x7f06001b;
    /**
     * Card layout (for tablets)
     */
    public static final int suw_card_title_padding_end=0x7f06001c;
    public static final int suw_card_title_padding_start=0x7f06001d;
    public static final int suw_card_title_padding_top=0x7f06001e;
    /**
     * Content styles
     */
    public static final int suw_check_box_line_spacing_extra=0x7f06001f;
    public static final int suw_check_box_margin_bottom=0x7f060020;
    public static final int suw_check_box_margin_start=0x7f060021;
    public static final int suw_check_box_margin_top=0x7f060022;
    public static final int suw_check_box_padding_start=0x7f060023;
    public static final int suw_content_frame_padding_bottom=0x7f060024;
    public static final int suw_content_frame_padding_top=0x7f060025;
    public static final int suw_content_illustration_max_height=0x7f060026;
    public static final int suw_content_illustration_max_width=0x7f060027;
    public static final int suw_content_illustration_min_height=0x7f060028;
    public static final int suw_content_illustration_min_width=0x7f060029;
    public static final int suw_content_illustration_padding_vertical=0x7f06002a;
    /**
     * Decor view (illustration or the header without illustration)
     * Decor view (illustration or the header without illustration)
     * Decor view (illustration or the header without illustration)
     * Decor view (illustration or the header without illustration)
     */
    public static final int suw_decor_padding_top=0x7f06002b;
    public static final int suw_description_glif_margin_bottom_lists=0x7f06002c;
    public static final int suw_description_glif_margin_top=0x7f06002d;
    public static final int suw_description_line_spacing_extra=0x7f06002e;
    public static final int suw_description_margin_bottom=0x7f06002f;
    public static final int suw_description_margin_bottom_lists=0x7f060030;
    public static final int suw_description_margin_top=0x7f060031;
    public static final int suw_description_text_size=0x7f060032;
    /**
     * Edit Text dimensions
     */
    public static final int suw_edit_text_min_height=0x7f060033;
    public static final int suw_edit_text_padding_horizontal=0x7f060034;
    public static final int suw_glif_button_corner_radius=0x7f060035;
    /**
     * Calculated by (suw_glif_margin_sides - 4dp internal padding of button)
     * Calculated by (suw_glif_margin_sides - 4dp internal padding of button)
     */
    public static final int suw_glif_button_margin_end=0x7f060036;
    /**
     * Calculated by (suw_glif_margin_sides - suw_glif_button_padding)
     * Calculated by (suw_glif_margin_sides - suw_glif_button_padding)
     */
    public static final int suw_glif_button_margin_start=0x7f060037;
    public static final int suw_glif_button_padding=0x7f060038;
    /**
     * GLIF card layout (for tablets)
     */
    public static final int suw_glif_card_elevation=0x7f060039;
    public static final int suw_glif_card_height=0x7f06003a;
    /**
     * GLIF card layout (for tablets)
     */
    public static final int suw_glif_card_width=0x7f06003b;
    public static final int suw_glif_footer_min_height=0x7f06003c;
    public static final int suw_glif_footer_padding_vertical=0x7f06003d;
    public static final int suw_glif_header_title_margin_bottom=0x7f06003e;
    public static final int suw_glif_header_title_margin_top=0x7f06003f;
    public static final int suw_glif_icon_max_height=0x7f060040;
    public static final int suw_glif_margin_sides=0x7f060041;
    public static final int suw_glif_margin_top=0x7f060042;
    /**
     * Negative of suw_glif_button_padding
     */
    public static final int suw_glif_negative_button_padding=0x7f060043;
    public static final int suw_glif_progress_bar_margin_vertical=0x7f060044;
    public static final int suw_glif_progress_bar_padding=0x7f060045;
    public static final int suw_glif_v3_button_corner_radius=0x7f060046;
    /**
     * Hack to force the header (and its shadow) to be drawn on top of the list contents
     */
    public static final int suw_header_elevation_hack=0x7f060047;
    /**
     * This is the extra spacing required to make the leading exactly 32sp
     */
    public static final int suw_header_title_line_spacing_extra=0x7f060048;
    public static final int suw_header_title_margin_bottom=0x7f060049;
    public static final int suw_header_title_padding_bottom=0x7f06004a;
    public static final int suw_header_title_padding_top=0x7f06004b;
    public static final int suw_header_title_size=0x7f06004c;
    /**
     * Illustration
     * Illustration
     * Illustration
     */
    public static final int suw_illustration_aspect_ratio=0x7f06004d;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_items_glif_icon_divider_inset=0x7f06004e;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_items_glif_text_divider_inset=0x7f06004f;
    /**
     * Items
     */
    public static final int suw_items_icon_container_width=0x7f060050;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_items_icon_divider_inset=0x7f060051;
    /**
     * Extra padding in the bottom to compensate for difference between descent and (top) internal leading
     */
    public static final int suw_items_padding_bottom_extra=0x7f060052;
    public static final int suw_items_padding_vertical=0x7f060053;
    public static final int suw_items_preferred_height=0x7f060054;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_items_text_divider_inset=0x7f060055;
    public static final int suw_items_verbose_padding_bottom_extra=0x7f060056;
    public static final int suw_items_verbose_padding_vertical=0x7f060057;
    /**
     * General
     */
    public static final int suw_layout_margin_sides=0x7f060058;
    /**
     * TODO: Move this dimen to gingerbread, or see if it should be in platform style as well
     */
    public static final int suw_navbar_button_drawable_padding=0x7f060059;
    public static final int suw_navbar_button_padding_sides=0x7f06005a;
    public static final int suw_navbar_height=0x7f06005b;
    public static final int suw_navbar_ic_intrinsic_size=0x7f06005c;
    public static final int suw_navbar_padding_sides=0x7f06005d;
    public static final int suw_navbar_text_size=0x7f06005e;
    /**
     * The margin to compensate for the padding built-in to the widget itself
     */
    public static final int suw_progress_bar_margin_vertical=0x7f06005f;
    public static final int suw_radio_button_line_spacing_extra=0x7f060060;
    public static final int suw_radio_button_margin_bottom=0x7f060061;
    /**
     * Margin on the start to offset for margin in the drawable
     */
    public static final int suw_radio_button_margin_start=0x7f060062;
    public static final int suw_radio_button_margin_top=0x7f060063;
    public static final int suw_radio_button_padding_start=0x7f060064;
    /**
     * Header layout (for phones)
     */
    public static final int suw_title_area_elevation=0x7f060065;
  }
  public static final class drawable {
    public static final int ic_signal_cellular_alt_rounded=0x7f070019;
    public static final int illo_sim_app_dialog=0x7f07001a;
    public static final int notification_action_background=0x7f07001b;
    public static final int notification_bg=0x7f07001c;
    public static final int notification_bg_low=0x7f07001d;
    public static final int notification_bg_low_normal=0x7f07001e;
    public static final int notification_bg_low_pressed=0x7f07001f;
    public static final int notification_bg_normal=0x7f070020;
    public static final int notification_bg_normal_pressed=0x7f070021;
    public static final int notification_icon_background=0x7f070022;
    public static final int notification_template_icon_bg=0x7f070023;
    public static final int notification_template_icon_low_bg=0x7f070024;
    public static final int notification_tile_bg=0x7f070025;
    public static final int notify_panel_notification_icon_bg=0x7f070026;
    public static final int suw_card_bg=0x7f070027;
    public static final int suw_edit_text_bg_shape=0x7f070028;
    public static final int suw_edittext_bg=0x7f070029;
    public static final int suw_fourcolor_progress_bar=0x7f07002a;
    public static final int suw_layout_background=0x7f07002b;
    public static final int suw_navbar_btn_bg=0x7f07002c;
    public static final int suw_navbar_ic_back=0x7f07002d;
    public static final int suw_navbar_ic_more=0x7f07002e;
    public static final int suw_navbar_ic_next=0x7f07002f;
  }
  public static final class id {
    public static final int accessibility_action_clickable_span=0x7f080000;
    public static final int accessibility_custom_action_0=0x7f080001;
    public static final int accessibility_custom_action_1=0x7f080002;
    public static final int accessibility_custom_action_10=0x7f080003;
    public static final int accessibility_custom_action_11=0x7f080004;
    public static final int accessibility_custom_action_12=0x7f080005;
    public static final int accessibility_custom_action_13=0x7f080006;
    public static final int accessibility_custom_action_14=0x7f080007;
    public static final int accessibility_custom_action_15=0x7f080008;
    public static final int accessibility_custom_action_16=0x7f080009;
    public static final int accessibility_custom_action_17=0x7f08000a;
    public static final int accessibility_custom_action_18=0x7f08000b;
    public static final int accessibility_custom_action_19=0x7f08000c;
    public static final int accessibility_custom_action_2=0x7f08000d;
    public static final int accessibility_custom_action_20=0x7f08000e;
    public static final int accessibility_custom_action_21=0x7f08000f;
    public static final int accessibility_custom_action_22=0x7f080010;
    public static final int accessibility_custom_action_23=0x7f080011;
    public static final int accessibility_custom_action_24=0x7f080012;
    public static final int accessibility_custom_action_25=0x7f080013;
    public static final int accessibility_custom_action_26=0x7f080014;
    public static final int accessibility_custom_action_27=0x7f080015;
    public static final int accessibility_custom_action_28=0x7f080016;
    public static final int accessibility_custom_action_29=0x7f080017;
    public static final int accessibility_custom_action_3=0x7f080018;
    public static final int accessibility_custom_action_30=0x7f080019;
    public static final int accessibility_custom_action_31=0x7f08001a;
    public static final int accessibility_custom_action_4=0x7f08001b;
    public static final int accessibility_custom_action_5=0x7f08001c;
    public static final int accessibility_custom_action_6=0x7f08001d;
    public static final int accessibility_custom_action_7=0x7f08001e;
    public static final int accessibility_custom_action_8=0x7f08001f;
    public static final int accessibility_custom_action_9=0x7f080020;
    public static final int action0=0x7f080021;
    public static final int action_container=0x7f080022;
    public static final int action_divider=0x7f080023;
    public static final int action_image=0x7f080024;
    public static final int action_text=0x7f080025;
    public static final int actions=0x7f080026;
    public static final int all=0x7f080027;
    public static final int async=0x7f080028;
    public static final int blocking=0x7f080029;
    public static final int both=0x7f08002a;
    public static final int bottom=0x7f08002b;
    public static final int cancel_action=0x7f08002c;
    public static final int center=0x7f08002d;
    public static final int center_horizontal=0x7f08002e;
    public static final int center_vertical=0x7f08002f;
    public static final int chronometer=0x7f080030;
    public static final int clip_horizontal=0x7f080031;
    public static final int clip_vertical=0x7f080032;
    public static final int content_frame=0x7f080033;
    public static final int dialog_button=0x7f080034;
    public static final int download_button=0x7f080035;
    public static final int either=0x7f080036;
    public static final int end=0x7f080037;
    public static final int end_padder=0x7f080038;
    public static final int fill=0x7f080039;
    public static final int fill_horizontal=0x7f08003a;
    public static final int fill_vertical=0x7f08003b;
    public static final int footer=0x7f08003c;
    public static final int forever=0x7f08003d;
    public static final int fragment_container_view_tag=0x7f08003e;
    public static final int icon=0x7f08003f;
    public static final int icon_group=0x7f080040;
    public static final int illo_container=0x7f080041;
    public static final int info=0x7f080042;
    public static final int install_carrier_app_description=0x7f080043;
    public static final int italic=0x7f080044;
    public static final int left=0x7f080045;
    public static final int line1=0x7f080046;
    public static final int line3=0x7f080047;
    public static final int media_actions=0x7f080048;
    public static final int media_controller_compat_view_tag=0x7f080049;
    public static final int none=0x7f08004a;
    public static final int normal=0x7f08004b;
    public static final int notification_background=0x7f08004c;
    public static final int notification_main_column=0x7f08004d;
    public static final int notification_main_column_container=0x7f08004e;
    public static final int progress_bar=0x7f08004f;
    public static final int right=0x7f080050;
    public static final int right_icon=0x7f080051;
    public static final int right_side=0x7f080052;
    public static final int setup_wizard_layout=0x7f080053;
    public static final int skip_button=0x7f080054;
    public static final int special_effects_controller_view_tag=0x7f080055;
    public static final int start=0x7f080056;
    public static final int status_bar_latest_event_content=0x7f080057;
    public static final int suw_bottom_scroll_view=0x7f080058;
    public static final int suw_footer_button_bar=0x7f080059;
    public static final int suw_items_icon=0x7f08005a;
    public static final int suw_items_icon_container=0x7f08005b;
    public static final int suw_items_summary=0x7f08005c;
    public static final int suw_items_title=0x7f08005d;
    public static final int suw_large_progress_bar=0x7f08005e;
    public static final int suw_layout_content=0x7f08005f;
    public static final int suw_layout_decor=0x7f080060;
    public static final int suw_layout_footer=0x7f080061;
    public static final int suw_layout_header=0x7f080062;
    public static final int suw_layout_icon=0x7f080063;
    public static final int suw_layout_navigation_bar=0x7f080064;
    public static final int suw_layout_progress=0x7f080065;
    public static final int suw_layout_progress_stub=0x7f080066;
    public static final int suw_layout_sticky_header=0x7f080067;
    public static final int suw_layout_title=0x7f080068;
    public static final int suw_navbar_back=0x7f080069;
    public static final int suw_navbar_more=0x7f08006a;
    public static final int suw_navbar_next=0x7f08006b;
    /**
     * ID used with setTag(int, Object) to store the original weight of a view inside
     * ButtonBarLayout
     */
    public static final int suw_original_weight=0x7f08006c;
    public static final int suw_pattern_bg=0x7f08006d;
    public static final int suw_scroll_view=0x7f08006e;
    public static final int tag_accessibility_actions=0x7f08006f;
    public static final int tag_accessibility_clickable_spans=0x7f080070;
    public static final int tag_accessibility_heading=0x7f080071;
    public static final int tag_accessibility_pane_title=0x7f080072;
    public static final int tag_on_apply_window_listener=0x7f080073;
    public static final int tag_on_receive_content_listener=0x7f080074;
    public static final int tag_on_receive_content_mime_types=0x7f080075;
    public static final int tag_screen_reader_focusable=0x7f080076;
    public static final int tag_state_description=0x7f080077;
    public static final int tag_transition_group=0x7f080078;
    public static final int tag_unhandled_key_event_manager=0x7f080079;
    public static final int tag_unhandled_key_listeners=0x7f08007a;
    public static final int tag_window_insets_animation_callback=0x7f08007b;
    public static final int text=0x7f08007c;
    public static final int text2=0x7f08007d;
    public static final int time=0x7f08007e;
    public static final int title=0x7f08007f;
    public static final int top=0x7f080080;
    public static final int view_tree_lifecycle_owner=0x7f080081;
    public static final int view_tree_saved_state_registry_owner=0x7f080082;
    public static final int view_tree_view_model_store_owner=0x7f080083;
    public static final int visible_removing_fragment_view_tag=0x7f080084;
  }
  public static final class integer {
    public static final int cancel_button_image_alpha=0x7f090000;
    public static final int status_bar_notification_info_maxnum=0x7f090001;
    /**
     * The duration (in milliseconds) of activity transitions
     */
    public static final int suwTransitionDuration=0x7f090002;
  }
  public static final class layout {
    public static final int custom_dialog=0x7f0a0000;
    public static final int install_carrier_app_activity=0x7f0a0001;
    public static final int install_carrier_app_footer=0x7f0a0002;
    public static final int notification_action=0x7f0a0003;
    public static final int notification_action_tombstone=0x7f0a0004;
    public static final int notification_media_action=0x7f0a0005;
    public static final int notification_media_cancel_action=0x7f0a0006;
    public static final int notification_template_big_media=0x7f0a0007;
    public static final int notification_template_big_media_custom=0x7f0a0008;
    public static final int notification_template_big_media_narrow=0x7f0a0009;
    public static final int notification_template_big_media_narrow_custom=0x7f0a000a;
    public static final int notification_template_custom_big=0x7f0a000b;
    public static final int notification_template_icon_group=0x7f0a000c;
    public static final int notification_template_lines_media=0x7f0a000d;
    public static final int notification_template_media=0x7f0a000e;
    public static final int notification_template_media_custom=0x7f0a000f;
    public static final int notification_template_part_chronometer=0x7f0a0010;
    public static final int notification_template_part_time=0x7f0a0011;
    public static final int suw_button=0x7f0a0012;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_glif_blank_template=0x7f0a0013;
    public static final int suw_glif_blank_template_card=0x7f0a0014;
    public static final int suw_glif_blank_template_compact=0x7f0a0015;
    public static final int suw_glif_blank_template_content=0x7f0a0016;
    public static final int suw_glif_footer_button_bar=0x7f0a0017;
    public static final int suw_glif_header=0x7f0a0018;
    public static final int suw_glif_list_template=0x7f0a0019;
    public static final int suw_glif_list_template_card=0x7f0a001a;
    public static final int suw_glif_list_template_compact=0x7f0a001b;
    public static final int suw_glif_list_template_content=0x7f0a001c;
    public static final int suw_glif_loading_screen=0x7f0a001d;
    public static final int suw_glif_template=0x7f0a001e;
    public static final int suw_glif_template_card=0x7f0a001f;
    public static final int suw_glif_template_compact=0x7f0a0020;
    public static final int suw_glif_template_content=0x7f0a0021;
    public static final int suw_items_button_bar=0x7f0a0022;
    public static final int suw_items_default=0x7f0a0023;
    public static final int suw_items_description=0x7f0a0024;
    public static final int suw_items_verbose=0x7f0a0025;
    public static final int suw_list_header=0x7f0a0026;
    public static final int suw_list_template=0x7f0a0027;
    public static final int suw_list_template_card=0x7f0a0028;
    public static final int suw_list_template_card_wide=0x7f0a0029;
    public static final int suw_list_template_header=0x7f0a002a;
    public static final int suw_list_template_header_collapsed=0x7f0a002b;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_list_template_short=0x7f0a002c;
    public static final int suw_navbar_view=0x7f0a002d;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_no_scroll_template=0x7f0a002e;
    public static final int suw_no_scroll_template_card=0x7f0a002f;
    public static final int suw_no_scroll_template_card_wide=0x7f0a0030;
    public static final int suw_no_scroll_template_header=0x7f0a0031;
    public static final int suw_no_scroll_template_header_collapsed=0x7f0a0032;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_no_scroll_template_short=0x7f0a0033;
    public static final int suw_progress_bar=0x7f0a0034;
    public static final int suw_progress_bar_stub=0x7f0a0035;
    public static final int suw_template=0x7f0a0036;
    public static final int suw_template_card=0x7f0a0037;
    public static final int suw_template_card_wide=0x7f0a0038;
    public static final int suw_template_header=0x7f0a0039;
    public static final int suw_template_header_collapsed=0x7f0a003a;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_template_short=0x7f0a003b;
  }
  public static final class string {
    /**
     * The name of this application [CHAR LIMIT=NONE]
     */
    public static final int app_name=0x7f0b0000;
    /**
     * Name of the button used to defer downloading the carrier app  [CHAR LIMIT=25]
     */
    public static final int install_carrier_app_defer_action=0x7f0b0001;
    /**
     * Description of screen asking user to download the carrier app to match the inserted SIM card if we know the name of the carrier [CHAR LIMIT=90]
     */
    public static final int install_carrier_app_description=0x7f0b0002;
    /**
     * Description of screen asking user to download the carrier app to match the inserted SIM card if we don't know the name of the carrier  [CHAR LIMIT=100]
     */
    public static final int install_carrier_app_description_default=0x7f0b0003;
    /**
     * Name of the button for downloading the carrier app [CHAR LIMIT=25]
     */
    public static final int install_carrier_app_download_action=0x7f0b0004;
    /**
     * Empty placeholder string for an illustration content description that is supplied via resource overlay. [DO NOT TRANSLATE]
     */
    public static final int install_carrier_app_image_content_description=0x7f0b0005;
    /**
     * Title of screen asking user to download the carrier app to match the inserted SIM card [CHAR LIMIT=30]
     */
    public static final int install_carrier_app_title=0x7f0b0006;
    public static final int status_bar_notification_info_overflow=0x7f0b0007;
    /**
     * Secondary font for use with headings, title, and other non-body text
     */
    public static final int suwFontSecondary=0x7f0b0008;
    public static final int suwFontSecondaryMedium=0x7f0b0009;
    /**
     * Button for going to the previous screen or step [CHAR LIMIT=20]
     */
    public static final int suw_back_button_label=0x7f0b000a;
    /**
     * Button for scrolling down to reveal more content on the screen [CHAR LIMIT=20]
     */
    public static final int suw_more_button_label=0x7f0b000b;
    /**
     * Button for going to the next screen or step [CHAR LIMIT=20]
     */
    public static final int suw_next_button_label=0x7f0b000c;
  }
  public static final class style {
    public static final int Animation_SuwWindowAnimation=0x7f0c0000;
    public static final int SuwAlertDialogTheme=0x7f0c0001;
    public static final int SuwAlertDialogTheme_Light=0x7f0c0002;
    /**
     * Button styles
     */
    public static final int SuwBase_ProgressBarLarge=0x7f0c0003;
    /**
     * Card layout (for tablets)
     */
    public static final int SuwBaseCardTitle=0x7f0c0004;
    /**
     * Header layout (for phones)
     */
    public static final int SuwBaseHeaderTitle=0x7f0c0005;
    /**
     * Button styles
     */
    public static final int SuwButtonItem=0x7f0c0006;
    public static final int SuwButtonItem_Colored=0x7f0c0007;
    /**
     * Card layout (for tablets)
     */
    public static final int SuwCardTitle=0x7f0c0008;
    /**
     * Ignore UnusedResources: used by clients
     */
    public static final int SuwCheckBox=0x7f0c0009;
    /**
     * Ignore UnusedResources: used by clients
     */
    public static final int SuwCheckBox_Multiline=0x7f0c000a;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int SuwContentFrame=0x7f0c000b;
    /**
     * Ignore UnusedResources: used by clients
     */
    public static final int SuwContentIllustration=0x7f0c000c;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int SuwDescription=0x7f0c000d;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int SuwDescription_Glif=0x7f0c000e;
    public static final int SuwEditText=0x7f0c000f;
    public static final int SuwFillContentLayout=0x7f0c0010;
    public static final int SuwFourColorIndeterminateProgressBar=0x7f0c0011;
    /**
     * Use this style with a Button not a TextView, so that TalkBack will announce it as a
     * button.
     */
    public static final int SuwGlifButton_BaseTertiary=0x7f0c0012;
    /**
     * Button styles
     */
    public static final int SuwGlifButton_Primary=0x7f0c0013;
    public static final int SuwGlifButton_Secondary=0x7f0c0014;
    /**
     * Ignore UnusedResources: used by clients
     */
    public static final int SuwGlifButton_Tertiary=0x7f0c0015;
    /**
     * The start and end paddings are asymmetric because start buttons are borderless buttons
     * which aligns the text label.
     */
    public static final int SuwGlifButtonBar=0x7f0c0016;
    public static final int SuwGlifButtonBar_Stackable=0x7f0c0017;
    /**
     * GLIF Card layout (for tablets)
     */
    public static final int SuwGlifCardBackground=0x7f0c0018;
    /**
     * GLIF Card layout (for tablets)
     */
    public static final int SuwGlifCardContainer=0x7f0c0019;
    public static final int SuwGlifHeaderContainer=0x7f0c001a;
    /**
     * GLIF layout
     */
    public static final int SuwGlifHeaderTitle=0x7f0c001b;
    public static final int SuwGlifIcon=0x7f0c001c;
    public static final int SuwHeaderTitle=0x7f0c001d;
    /**
     * Items styles
     */
    public static final int SuwItemContainer=0x7f0c001e;
    /**
     * Items styles
     */
    public static final int SuwItemContainer_Description=0x7f0c001f;
    public static final int SuwItemContainer_Description_Glif=0x7f0c0020;
    public static final int SuwItemContainer_Verbose=0x7f0c0021;
    public static final int SuwItemSummary=0x7f0c0022;
    public static final int SuwItemTitle=0x7f0c0023;
    public static final int SuwItemTitle_GlifDescription=0x7f0c0024;
    public static final int SuwItemTitle_Verbose=0x7f0c0025;
    /**
     * Navigation bar styles
     */
    public static final int SuwNavBarButtonStyle=0x7f0c0026;
    /**
     * Navigation bar styles
     */
    public static final int SuwNavBarTheme=0x7f0c0027;
    public static final int SuwNavBarThemeDark=0x7f0c0028;
    public static final int SuwNavBarThemeLight=0x7f0c0029;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int SuwRadioButton=0x7f0c002a;
    /**
     * Placeholder for GLIF dark theme, colors are not updated yet
     */
    public static final int SuwThemeGlif=0x7f0c002b;
    public static final int SuwThemeGlif_DayNight=0x7f0c002c;
    public static final int SuwThemeGlif_Light=0x7f0c002d;
    /**
     * General styles
     */
    public static final int SuwThemeGlifV2=0x7f0c002e;
    public static final int SuwThemeGlifV2_DayNight=0x7f0c002f;
    public static final int SuwThemeGlifV2_Light=0x7f0c0030;
    public static final int SuwThemeGlifV3=0x7f0c0031;
    public static final int SuwThemeGlifV3_DayNight=0x7f0c0032;
    public static final int SuwThemeGlifV3_Light=0x7f0c0033;
    /**
     * These themes should only be used in platform builds because support libraries'
     * FragmentActivity and AppCompatActivity expects the activity theme to inherit from
     * Theme.AppCompat.
     */
    public static final int SuwThemeMaterial=0x7f0c0034;
    /**
     * DayNight themes
     * DayNight themes
     */
    public static final int SuwThemeMaterial_DayNight=0x7f0c0035;
    public static final int SuwThemeMaterial_Light=0x7f0c0036;
    public static final int TextAppearance_Compat_Notification=0x7f0c0037;
    public static final int TextAppearance_Compat_Notification_Info=0x7f0c0038;
    public static final int TextAppearance_Compat_Notification_Info_Media=0x7f0c0039;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f0c003a;
    public static final int TextAppearance_Compat_Notification_Line2_Media=0x7f0c003b;
    public static final int TextAppearance_Compat_Notification_Media=0x7f0c003c;
    public static final int TextAppearance_Compat_Notification_Time=0x7f0c003d;
    public static final int TextAppearance_Compat_Notification_Time_Media=0x7f0c003e;
    public static final int TextAppearance_Compat_Notification_Title=0x7f0c003f;
    public static final int TextAppearance_Compat_Notification_Title_Media=0x7f0c0040;
    /**
     * Card layout (for tablets)
     */
    public static final int TextAppearance_SuwCardTitle=0x7f0c0041;
    /**
     * Content styles
     */
    public static final int TextAppearance_SuwDescription=0x7f0c0042;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int TextAppearance_SuwDescription_Secondary=0x7f0c0043;
    public static final int TextAppearance_SuwGlifBody=0x7f0c0044;
    public static final int TextAppearance_SuwGlifItemSummary=0x7f0c0045;
    public static final int TextAppearance_SuwGlifItemTitle=0x7f0c0046;
    public static final int TextAppearance_SuwItemSummary=0x7f0c0047;
    public static final int Widget_Compat_NotificationActionContainer=0x7f0c0048;
    public static final int Widget_Compat_NotificationActionText=0x7f0c0049;
    public static final int Widget_Support_CoordinatorLayout=0x7f0c004a;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a Capability.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Capability_queryPatterns com.android.simappdialog:queryPatterns}</code></td><td>Resource reference to the string array of query patterns for a custom capability.</td></tr>
     * <tr><td><code>{@link #Capability_shortcutMatchRequired com.android.simappdialog:shortcutMatchRequired}</code></td><td>Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.</td></tr>
     * </table>
     * @see #Capability_queryPatterns
     * @see #Capability_shortcutMatchRequired
     */
    public static final int[] Capability={
      0x7f030017, 0x7f030018
    };
    /**
     * <p>
     * @attr description
     * Resource reference to the string array of query patterns for a custom capability.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.simappdialog:queryPatterns
     */
    public static final int Capability_queryPatterns=0;
    /**
     * <p>
     * @attr description
     * Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.simappdialog:shortcutMatchRequired
     */
    public static final int Capability_shortcutMatchRequired=1;
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha com.android.simappdialog:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x7f030000
    };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.simappdialog:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines com.android.simappdialog:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground com.android.simappdialog:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
      0x7f03000f, 0x7f030019
    };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.simappdialog:keylines
     */
    public static final int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.simappdialog:statusBarBackground
     */
    public static final int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor com.android.simappdialog:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity com.android.simappdialog:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior com.android.simappdialog:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges com.android.simappdialog:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge com.android.simappdialog:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline com.android.simappdialog:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     */
    public static final int[] CoordinatorLayout_Layout={
      0x010100b3, 0x7f030010, 0x7f030011, 0x7f030012, 
      0x7f030013, 0x7f030014, 0x7f030015
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int CoordinatorLayout_Layout_android_layout_gravity=0;
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.simappdialog:layout_anchor
     */
    public static final int CoordinatorLayout_Layout_layout_anchor=1;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.simappdialog:layout_anchorGravity
     */
    public static final int CoordinatorLayout_Layout_layout_anchorGravity=2;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.simappdialog:layout_behavior
     */
    public static final int CoordinatorLayout_Layout_layout_behavior=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name com.android.simappdialog:layout_dodgeInsetEdges
     */
    public static final int CoordinatorLayout_Layout_layout_dodgeInsetEdges=4;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name com.android.simappdialog:layout_insetEdge
     */
    public static final int CoordinatorLayout_Layout_layout_insetEdge=5;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.simappdialog:layout_keyline
     */
    public static final int CoordinatorLayout_Layout_layout_keyline=6;
    /**
     * Attributes that can be used with a DrawerLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerLayout_elevation com.android.simappdialog:elevation}</code></td><td></td></tr>
     * </table>
     * @see #DrawerLayout_elevation
     */
    public static final int[] DrawerLayout={
      0x7f030003
    };
    /**
     * <p>
     * @attr description
     * The height difference between the drawer and the base surface. Only takes effect on API 21 and above
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.simappdialog:elevation
     */
    public static final int DrawerLayout_elevation=0;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority com.android.simappdialog:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts com.android.simappdialog:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy com.android.simappdialog:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout com.android.simappdialog:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage com.android.simappdialog:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery com.android.simappdialog:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderSystemFontFamily com.android.simappdialog:fontProviderSystemFontFamily}</code></td><td>Provides the system font family name to check before downloading the font.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     * @see #FontFamily_fontProviderSystemFontFamily
     */
    public static final int[] FontFamily={
      0x7f030005, 0x7f030006, 0x7f030007, 0x7f030008, 
      0x7f030009, 0x7f03000a, 0x7f03000b
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.simappdialog:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.simappdialog:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name com.android.simappdialog:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name com.android.simappdialog:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.simappdialog:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.simappdialog:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * <p>
     * @attr description
     * Provides the system font family name to check before downloading the font. For
     * example if the fontProviderQuery asked for "Sans Serif", it is possible to define
     * fontProviderSystemFontFamily as "sans-serif" to tell the system to use "sans-serif" font
     * family if it exists on the system.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.simappdialog:fontProviderSystemFontFamily
     */
    public static final int FontFamily_fontProviderSystemFontFamily=6;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font com.android.simappdialog:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle com.android.simappdialog:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings com.android.simappdialog:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight com.android.simappdialog:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex com.android.simappdialog:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x7f030004, 0x7f03000c, 0x7f03000d, 
      0x7f03000e, 0x7f030047
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static final int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static final int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static final int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static final int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static final int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.simappdialog:font
     */
    public static final int FontFamilyFont_font=5;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.simappdialog:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=6;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.simappdialog:fontVariationSettings
     */
    public static final int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.simappdialog:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=8;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.simappdialog:ttcIndex
     */
    public static final int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a Fragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Fragment_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #Fragment_android_name
     * @see #Fragment_android_id
     * @see #Fragment_android_tag
     */
    public static final int[] Fragment={
      0x01010003, 0x010100d0, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int Fragment_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int Fragment_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int Fragment_android_tag=2;
    /**
     * Attributes that can be used with a FragmentContainerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #FragmentContainerView_android_name
     * @see #FragmentContainerView_android_tag
     */
    public static final int[] FragmentContainerView={
      0x01010003, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int FragmentContainerView_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int FragmentContainerView_android_tag=1;
    /**
     * Attributes that can be used with a GradientColor.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td></td></tr>
     * </table>
     * @see #GradientColor_android_startColor
     * @see #GradientColor_android_endColor
     * @see #GradientColor_android_type
     * @see #GradientColor_android_centerX
     * @see #GradientColor_android_centerY
     * @see #GradientColor_android_gradientRadius
     * @see #GradientColor_android_tileMode
     * @see #GradientColor_android_centerColor
     * @see #GradientColor_android_startX
     * @see #GradientColor_android_startY
     * @see #GradientColor_android_endX
     * @see #GradientColor_android_endY
     */
    public static final int[] GradientColor={
      0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2, 
      0x010101a3, 0x010101a4, 0x01010201, 0x0101020b, 
      0x01010510, 0x01010511, 0x01010512, 0x01010513
    };
    /**
     * <p>
     * @attr description
     * Start color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:startColor
     */
    public static final int GradientColor_android_startColor=0;
    /**
     * <p>
     * @attr description
     * End color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:endColor
     */
    public static final int GradientColor_android_endColor=1;
    /**
     * <p>
     * @attr description
     * Type of gradient. The default type is linear.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * <tr><td>radial</td><td>1</td><td></td></tr>
     * <tr><td>sweep</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:type
     */
    public static final int GradientColor_android_type=2;
    /**
     * <p>
     * @attr description
     * X coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerX
     */
    public static final int GradientColor_android_centerX=3;
    /**
     * <p>
     * @attr description
     * Y coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerY
     */
    public static final int GradientColor_android_centerY=4;
    /**
     * <p>
     * @attr description
     * Radius of the gradient, used only with radial gradient.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:gradientRadius
     */
    public static final int GradientColor_android_gradientRadius=5;
    /**
     * <p>
     * @attr description
     * Defines the tile mode of the gradient. SweepGradient doesn't support tiling.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clamp</td><td>0</td><td></td></tr>
     * <tr><td>disabled</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mirror</td><td>2</td><td></td></tr>
     * <tr><td>repeat</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:tileMode
     */
    public static final int GradientColor_android_tileMode=6;
    /**
     * <p>
     * @attr description
     * Optional center color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:centerColor
     */
    public static final int GradientColor_android_centerColor=7;
    /**
     * <p>
     * @attr description
     * X coordinate of the start point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startX
     */
    public static final int GradientColor_android_startX=8;
    /**
     * <p>
     * @attr description
     * Y coordinate of the start point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startY
     */
    public static final int GradientColor_android_startY=9;
    /**
     * <p>
     * @attr description
     * X coordinate of the end point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endX
     */
    public static final int GradientColor_android_endX=10;
    /**
     * <p>
     * @attr description
     * Y coordinate of the end point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endY
     */
    public static final int GradientColor_android_endY=11;
    /**
     * Attributes that can be used with a GradientColorItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td></td></tr>
     * </table>
     * @see #GradientColorItem_android_color
     * @see #GradientColorItem_android_offset
     */
    public static final int[] GradientColorItem={
      0x010101a5, 0x01010514
    };
    /**
     * <p>
     * @attr description
     * The current color for the offset inside the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int GradientColorItem_android_color=0;
    /**
     * <p>
     * @attr description
     * The offset (or ratio) of this current color item inside the gradient.
     * The value is only meaningful when it is between 0 and 1.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:offset
     */
    public static final int GradientColorItem_android_offset=1;
    /**
     * Attributes that can be used with a SuwAbstractItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwAbstractItem_android_id android:id}</code></td><td></td></tr>
     * </table>
     * @see #SuwAbstractItem_android_id
     */
    public static final int[] SuwAbstractItem={
      0x010100d0
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #SuwAbstractItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int SuwAbstractItem_android_id=0;
    /**
     * Attributes that can be used with a SuwButtonItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwButtonItem_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwButtonItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwButtonItem_android_buttonStyle android:buttonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwButtonItem_android_text android:text}</code></td><td></td></tr>
     * </table>
     * @see #SuwButtonItem_android_theme
     * @see #SuwButtonItem_android_enabled
     * @see #SuwButtonItem_android_buttonStyle
     * @see #SuwButtonItem_android_text
     */
    public static final int[] SuwButtonItem={
      0x01010000, 0x0101000e, 0x01010048, 0x0101014f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#theme}
     * attribute's value can be found in the {@link #SuwButtonItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int SuwButtonItem_android_theme=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #SuwButtonItem} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int SuwButtonItem_android_enabled=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#buttonStyle}
     * attribute's value can be found in the {@link #SuwButtonItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:buttonStyle
     */
    public static final int SuwButtonItem_android_buttonStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#text}
     * attribute's value can be found in the {@link #SuwButtonItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int SuwButtonItem_android_text=3;
    /**
     * Attributes that can be used with a SuwColoredHeaderMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwColoredHeaderMixin_suwHeaderColor com.android.simappdialog:suwHeaderColor}</code></td><td></td></tr>
     * </table>
     * @see #SuwColoredHeaderMixin_suwHeaderColor
     */
    public static final int[] SuwColoredHeaderMixin={
      0x7f030032
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwHeaderColor}
     * attribute's value can be found in the {@link #SuwColoredHeaderMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.simappdialog:suwHeaderColor
     */
    public static final int SuwColoredHeaderMixin_suwHeaderColor=0;
    /**
     * Attributes that can be used with a SuwDividerItemDecoration.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwDividerItemDecoration_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwDividerItemDecoration_android_listDivider android:listDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwDividerItemDecoration_suwDividerCondition com.android.simappdialog:suwDividerCondition}</code></td><td></td></tr>
     * </table>
     * @see #SuwDividerItemDecoration_android_dividerHeight
     * @see #SuwDividerItemDecoration_android_listDivider
     * @see #SuwDividerItemDecoration_suwDividerCondition
     */
    public static final int[] SuwDividerItemDecoration={
      0x0101012a, 0x01010214, 0x7f030027
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dividerHeight}
     * attribute's value can be found in the {@link #SuwDividerItemDecoration} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int SuwDividerItemDecoration_android_dividerHeight=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#listDivider}
     * attribute's value can be found in the {@link #SuwDividerItemDecoration} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:listDivider
     */
    public static final int SuwDividerItemDecoration_android_listDivider=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwDividerCondition}
     * attribute's value can be found in the {@link #SuwDividerItemDecoration} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>both</td><td>1</td><td></td></tr>
     * <tr><td>either</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.simappdialog:suwDividerCondition
     */
    public static final int SuwDividerItemDecoration_suwDividerCondition=2;
    /**
     * Attributes that can be used with a SuwFillContentLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwFillContentLayout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwFillContentLayout_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * </table>
     * @see #SuwFillContentLayout_android_maxWidth
     * @see #SuwFillContentLayout_android_maxHeight
     */
    public static final int[] SuwFillContentLayout={
      0x0101011f, 0x01010120
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #SuwFillContentLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SuwFillContentLayout_android_maxWidth=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #SuwFillContentLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int SuwFillContentLayout_android_maxHeight=1;
    /**
     * Attributes that can be used with a SuwGlifLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwGlifLayout_suwBackgroundBaseColor com.android.simappdialog:suwBackgroundBaseColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwGlifLayout_suwBackgroundPatterned com.android.simappdialog:suwBackgroundPatterned}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwGlifLayout_suwColorPrimary com.android.simappdialog:suwColorPrimary}</code></td><td>Custom view attributes</td></tr>
     * <tr><td><code>{@link #SuwGlifLayout_suwFooter com.android.simappdialog:suwFooter}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwGlifLayout_suwLayoutFullscreen com.android.simappdialog:suwLayoutFullscreen}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwGlifLayout_suwStickyHeader com.android.simappdialog:suwStickyHeader}</code></td><td></td></tr>
     * </table>
     * @see #SuwGlifLayout_suwBackgroundBaseColor
     * @see #SuwGlifLayout_suwBackgroundPatterned
     * @see #SuwGlifLayout_suwColorPrimary
     * @see #SuwGlifLayout_suwFooter
     * @see #SuwGlifLayout_suwLayoutFullscreen
     * @see #SuwGlifLayout_suwStickyHeader
     */
    public static final int[] SuwGlifLayout={
      0x7f03001c, 0x7f03001d, 0x7f030024, 0x7f03002e, 
      0x7f03003a, 0x7f030044
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwBackgroundBaseColor}
     * attribute's value can be found in the {@link #SuwGlifLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.simappdialog:suwBackgroundBaseColor
     */
    public static final int SuwGlifLayout_suwBackgroundBaseColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwBackgroundPatterned}
     * attribute's value can be found in the {@link #SuwGlifLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.simappdialog:suwBackgroundPatterned
     */
    public static final int SuwGlifLayout_suwBackgroundPatterned=1;
    /**
     * <p>
     * @attr description
     * Custom view attributes
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.simappdialog:suwColorPrimary
     */
    public static final int SuwGlifLayout_suwColorPrimary=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwFooter}
     * attribute's value can be found in the {@link #SuwGlifLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.simappdialog:suwFooter
     */
    public static final int SuwGlifLayout_suwFooter=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwLayoutFullscreen}
     * attribute's value can be found in the {@link #SuwGlifLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.simappdialog:suwLayoutFullscreen
     */
    public static final int SuwGlifLayout_suwLayoutFullscreen=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwStickyHeader}
     * attribute's value can be found in the {@link #SuwGlifLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.simappdialog:suwStickyHeader
     */
    public static final int SuwGlifLayout_suwStickyHeader=5;
    /**
     * Attributes that can be used with a SuwHeaderMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwHeaderMixin_suwHeaderText com.android.simappdialog:suwHeaderText}</code></td><td></td></tr>
     * </table>
     * @see #SuwHeaderMixin_suwHeaderText
     */
    public static final int[] SuwHeaderMixin={
      0x7f030033
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwHeaderText}
     * attribute's value can be found in the {@link #SuwHeaderMixin} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.simappdialog:suwHeaderText
     */
    public static final int SuwHeaderMixin_suwHeaderText=0;
    /**
     * Attributes that can be used with a SuwHeaderRecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwHeaderRecyclerView_suwHeader com.android.simappdialog:suwHeader}</code></td><td></td></tr>
     * </table>
     * @see #SuwHeaderRecyclerView_suwHeader
     */
    public static final int[] SuwHeaderRecyclerView={
      0x7f030031
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwHeader}
     * attribute's value can be found in the {@link #SuwHeaderRecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.simappdialog:suwHeader
     */
    public static final int SuwHeaderRecyclerView_suwHeader=0;
    /**
     * Attributes that can be used with a SuwIconMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwIconMixin_android_icon android:icon}</code></td><td></td></tr>
     * </table>
     * @see #SuwIconMixin_android_icon
     */
    public static final int[] SuwIconMixin={
      0x01010002
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #SuwIconMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int SuwIconMixin_android_icon=0;
    /**
     * Attributes that can be used with a SuwIllustration.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwIllustration_suwAspectRatio com.android.simappdialog:suwAspectRatio}</code></td><td></td></tr>
     * </table>
     * @see #SuwIllustration_suwAspectRatio
     */
    public static final int[] SuwIllustration={
      0x7f03001a
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwAspectRatio}
     * attribute's value can be found in the {@link #SuwIllustration} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.simappdialog:suwAspectRatio
     */
    public static final int SuwIllustration_suwAspectRatio=0;
    /**
     * Attributes that can be used with a SuwIllustrationVideoView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwIllustrationVideoView_suwVideo com.android.simappdialog:suwVideo}</code></td><td></td></tr>
     * </table>
     * @see #SuwIllustrationVideoView_suwVideo
     */
    public static final int[] SuwIllustrationVideoView={
      0x7f030045
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwVideo}
     * attribute's value can be found in the {@link #SuwIllustrationVideoView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.simappdialog:suwVideo
     */
    public static final int SuwIllustrationVideoView_suwVideo=0;
    /**
     * Attributes that can be used with a SuwIntrinsicSizeFrameLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwIntrinsicSizeFrameLayout_android_height android:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwIntrinsicSizeFrameLayout_android_width android:width}</code></td><td></td></tr>
     * </table>
     * @see #SuwIntrinsicSizeFrameLayout_android_height
     * @see #SuwIntrinsicSizeFrameLayout_android_width
     */
    public static final int[] SuwIntrinsicSizeFrameLayout={
      0x01010155, 0x01010159
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#height}
     * attribute's value can be found in the {@link #SuwIntrinsicSizeFrameLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:height
     */
    public static final int SuwIntrinsicSizeFrameLayout_android_height=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#width}
     * attribute's value can be found in the {@link #SuwIntrinsicSizeFrameLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:width
     */
    public static final int SuwIntrinsicSizeFrameLayout_android_width=1;
    /**
     * Attributes that can be used with a SuwItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwItem_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwItem_android_summary android:summary}</code></td><td></td></tr>
     * </table>
     * @see #SuwItem_android_icon
     * @see #SuwItem_android_enabled
     * @see #SuwItem_android_layout
     * @see #SuwItem_android_visible
     * @see #SuwItem_android_title
     * @see #SuwItem_android_summary
     */
    public static final int[] SuwItem={
      0x01010002, 0x0101000e, 0x010100f2, 0x01010194, 
      0x010101e1, 0x010101e9
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #SuwItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int SuwItem_android_icon=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #SuwItem} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int SuwItem_android_enabled=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SuwItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int SuwItem_android_layout=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visible}
     * attribute's value can be found in the {@link #SuwItem} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int SuwItem_android_visible=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#title}
     * attribute's value can be found in the {@link #SuwItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int SuwItem_android_title=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summary}
     * attribute's value can be found in the {@link #SuwItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summary
     */
    public static final int SuwItem_android_summary=5;
    /**
     * Attributes that can be used with a SuwListMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwListMixin_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwListMixin_suwDividerInset com.android.simappdialog:suwDividerInset}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #SuwListMixin_suwDividerInsetEnd com.android.simappdialog:suwDividerInsetEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwListMixin_suwDividerInsetStart com.android.simappdialog:suwDividerInsetStart}</code></td><td></td></tr>
     * </table>
     * @see #SuwListMixin_android_entries
     * @see #SuwListMixin_suwDividerInset
     * @see #SuwListMixin_suwDividerInsetEnd
     * @see #SuwListMixin_suwDividerInsetStart
     */
    public static final int[] SuwListMixin={
      0x010100b2, 0x7f030028, 0x7f030029, 0x7f03002a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #SuwListMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int SuwListMixin_android_entries=0;
    /**
     * <p>
     * @attr description
     * Deprecated. Use suwDividerInsetStart and suwDividerInsetEnd instead
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.simappdialog:suwDividerInset
     */
    public static final int SuwListMixin_suwDividerInset=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwDividerInsetEnd}
     * attribute's value can be found in the {@link #SuwListMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.simappdialog:suwDividerInsetEnd
     */
    public static final int SuwListMixin_suwDividerInsetEnd=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwDividerInsetStart}
     * attribute's value can be found in the {@link #SuwListMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.simappdialog:suwDividerInsetStart
     */
    public static final int SuwListMixin_suwDividerInsetStart=3;
    /**
     * Attributes that can be used with a SuwSetupWizardLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwSetupWizardLayout_suwBackground com.android.simappdialog:suwBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwSetupWizardLayout_suwBackgroundTile com.android.simappdialog:suwBackgroundTile}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwSetupWizardLayout_suwDecorPaddingTop com.android.simappdialog:suwDecorPaddingTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwSetupWizardLayout_suwIllustration com.android.simappdialog:suwIllustration}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwSetupWizardLayout_suwIllustrationAspectRatio com.android.simappdialog:suwIllustrationAspectRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwSetupWizardLayout_suwIllustrationHorizontalTile com.android.simappdialog:suwIllustrationHorizontalTile}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwSetupWizardLayout_suwIllustrationImage com.android.simappdialog:suwIllustrationImage}</code></td><td></td></tr>
     * </table>
     * @see #SuwSetupWizardLayout_suwBackground
     * @see #SuwSetupWizardLayout_suwBackgroundTile
     * @see #SuwSetupWizardLayout_suwDecorPaddingTop
     * @see #SuwSetupWizardLayout_suwIllustration
     * @see #SuwSetupWizardLayout_suwIllustrationAspectRatio
     * @see #SuwSetupWizardLayout_suwIllustrationHorizontalTile
     * @see #SuwSetupWizardLayout_suwIllustrationImage
     */
    public static final int[] SuwSetupWizardLayout={
      0x7f03001b, 0x7f03001e, 0x7f030026, 0x7f030034, 
      0x7f030035, 0x7f030036, 0x7f030037
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwBackground}
     * attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.simappdialog:suwBackground
     */
    public static final int SuwSetupWizardLayout_suwBackground=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwBackgroundTile}
     * attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.simappdialog:suwBackgroundTile
     */
    public static final int SuwSetupWizardLayout_suwBackgroundTile=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwDecorPaddingTop}
     * attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.simappdialog:suwDecorPaddingTop
     */
    public static final int SuwSetupWizardLayout_suwDecorPaddingTop=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwIllustration}
     * attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.simappdialog:suwIllustration
     */
    public static final int SuwSetupWizardLayout_suwIllustration=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwIllustrationAspectRatio}
     * attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.simappdialog:suwIllustrationAspectRatio
     */
    public static final int SuwSetupWizardLayout_suwIllustrationAspectRatio=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwIllustrationHorizontalTile}
     * attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.simappdialog:suwIllustrationHorizontalTile
     */
    public static final int SuwSetupWizardLayout_suwIllustrationHorizontalTile=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwIllustrationImage}
     * attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.simappdialog:suwIllustrationImage
     */
    public static final int SuwSetupWizardLayout_suwIllustrationImage=6;
    /**
     * Attributes that can be used with a SuwStatusBarBackgroundLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwStatusBarBackgroundLayout_suwStatusBarBackground com.android.simappdialog:suwStatusBarBackground}</code></td><td></td></tr>
     * </table>
     * @see #SuwStatusBarBackgroundLayout_suwStatusBarBackground
     */
    public static final int[] SuwStatusBarBackgroundLayout={
      0x7f030043
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwStatusBarBackground}
     * attribute's value can be found in the {@link #SuwStatusBarBackgroundLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.simappdialog:suwStatusBarBackground
     */
    public static final int SuwStatusBarBackgroundLayout_suwStatusBarBackground=0;
    /**
     * Attributes that can be used with a SuwStickyHeaderListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwStickyHeaderListView_suwHeader com.android.simappdialog:suwHeader}</code></td><td></td></tr>
     * </table>
     * @see #SuwStickyHeaderListView_suwHeader
     */
    public static final int[] SuwStickyHeaderListView={
      0x7f030031
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwHeader}
     * attribute's value can be found in the {@link #SuwStickyHeaderListView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.simappdialog:suwHeader
     */
    public static final int SuwStickyHeaderListView_suwHeader=0;
    /**
     * Attributes that can be used with a SuwTemplateLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwTemplateLayout_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwTemplateLayout_suwContainer com.android.simappdialog:suwContainer}</code></td><td></td></tr>
     * </table>
     * @see #SuwTemplateLayout_android_layout
     * @see #SuwTemplateLayout_suwContainer
     */
    public static final int[] SuwTemplateLayout={
      0x010100f2, 0x7f030025
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SuwTemplateLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int SuwTemplateLayout_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.simappdialog.R.attr#suwContainer}
     * attribute's value can be found in the {@link #SuwTemplateLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.simappdialog:suwContainer
     */
    public static final int SuwTemplateLayout_suwContainer=1;
    /**
     * Attributes that can be used with a SwipeRefreshLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor com.android.simappdialog:swipeRefreshLayoutProgressSpinnerBackgroundColor}</code></td><td>Background color for SwipeRefreshLayout progress spinner.</td></tr>
     * </table>
     * @see #SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor
     */
    public static final int[] SwipeRefreshLayout={
      0x7f030046
    };
    /**
     * <p>
     * @attr description
     * Background color for SwipeRefreshLayout progress spinner.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.simappdialog:swipeRefreshLayoutProgressSpinnerBackgroundColor
     */
    public static final int SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor=0;
  }
}