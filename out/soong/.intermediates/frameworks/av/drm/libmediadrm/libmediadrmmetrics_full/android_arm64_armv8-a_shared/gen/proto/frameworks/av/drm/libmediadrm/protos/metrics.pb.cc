// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/av/drm/libmediadrm/protos/metrics.proto

#include "frameworks/av/drm/libmediadrm/protos/metrics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DrmFrameworkMetrics_Attributes_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DrmFrameworkMetrics_Counter_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DrmFrameworkMetrics_DistributionMetric_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DrmFrameworkMetrics_SessionLifetime_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto;
namespace android {
namespace drm_metrics {
class DrmFrameworkMetrics_AttributesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DrmFrameworkMetrics_Attributes> _instance;
} _DrmFrameworkMetrics_Attributes_default_instance_;
class DrmFrameworkMetrics_CounterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DrmFrameworkMetrics_Counter> _instance;
} _DrmFrameworkMetrics_Counter_default_instance_;
class DrmFrameworkMetrics_DistributionMetricDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DrmFrameworkMetrics_DistributionMetric> _instance;
} _DrmFrameworkMetrics_DistributionMetric_default_instance_;
class DrmFrameworkMetrics_SessionLifetimeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DrmFrameworkMetrics_SessionLifetime> _instance;
} _DrmFrameworkMetrics_SessionLifetime_default_instance_;
class DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse> _instance;
} _DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse_default_instance_;
class DrmFrameworkMetricsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DrmFrameworkMetrics> _instance;
} _DrmFrameworkMetrics_default_instance_;
}  // namespace drm_metrics
}  // namespace android
static void InitDefaultsscc_info_DrmFrameworkMetrics_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::drm_metrics::_DrmFrameworkMetrics_default_instance_;
    new (ptr) ::android::drm_metrics::DrmFrameworkMetrics();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::drm_metrics::DrmFrameworkMetrics::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_DrmFrameworkMetrics_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_DrmFrameworkMetrics_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto}, {
      &scc_info_DrmFrameworkMetrics_Counter_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base,
      &scc_info_DrmFrameworkMetrics_DistributionMetric_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base,
      &scc_info_DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base,}};

static void InitDefaultsscc_info_DrmFrameworkMetrics_Attributes_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::drm_metrics::_DrmFrameworkMetrics_Attributes_default_instance_;
    new (ptr) ::android::drm_metrics::DrmFrameworkMetrics_Attributes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::drm_metrics::DrmFrameworkMetrics_Attributes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DrmFrameworkMetrics_Attributes_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_DrmFrameworkMetrics_Attributes_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto}, {}};

static void InitDefaultsscc_info_DrmFrameworkMetrics_Counter_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::drm_metrics::_DrmFrameworkMetrics_Counter_default_instance_;
    new (ptr) ::android::drm_metrics::DrmFrameworkMetrics_Counter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::drm_metrics::DrmFrameworkMetrics_Counter::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DrmFrameworkMetrics_Counter_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_DrmFrameworkMetrics_Counter_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto}, {
      &scc_info_DrmFrameworkMetrics_Attributes_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base,}};

static void InitDefaultsscc_info_DrmFrameworkMetrics_DistributionMetric_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::drm_metrics::_DrmFrameworkMetrics_DistributionMetric_default_instance_;
    new (ptr) ::android::drm_metrics::DrmFrameworkMetrics_DistributionMetric();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::drm_metrics::DrmFrameworkMetrics_DistributionMetric::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DrmFrameworkMetrics_DistributionMetric_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_DrmFrameworkMetrics_DistributionMetric_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto}, {
      &scc_info_DrmFrameworkMetrics_Attributes_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base,}};

static void InitDefaultsscc_info_DrmFrameworkMetrics_SessionLifetime_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::drm_metrics::_DrmFrameworkMetrics_SessionLifetime_default_instance_;
    new (ptr) ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DrmFrameworkMetrics_SessionLifetime_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_DrmFrameworkMetrics_SessionLifetime_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto}, {}};

static void InitDefaultsscc_info_DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::drm_metrics::_DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse_default_instance_;
    new (ptr) ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse();
  }
  ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto}, {
      &scc_info_DrmFrameworkMetrics_SessionLifetime_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_Attributes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_Attributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_Attributes, error_code_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_Attributes, key_status_type_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_Attributes, event_type_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_Counter, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_Counter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_Counter, count_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_Counter, attributes_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_DistributionMetric, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_DistributionMetric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_DistributionMetric, min_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_DistributionMetric, max_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_DistributionMetric, mean_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_DistributionMetric, variance_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_DistributionMetric, operation_count_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_DistributionMetric, attributes_),
  1,
  2,
  5,
  3,
  4,
  0,
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime, start_time_ms_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime, end_time_ms_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics, open_session_counter_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics, close_session_counter_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics, get_key_request_time_us_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics, provide_key_response_time_us_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics, get_provisioning_request_counter_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics, provide_provisioning_response_counter_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics, key_status_change_counter_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics, event_callback_counter_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics, get_device_unique_id_counter_),
  PROTOBUF_FIELD_OFFSET(::android::drm_metrics::DrmFrameworkMetrics, session_lifetimes_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::android::drm_metrics::DrmFrameworkMetrics_Attributes)},
  { 11, 18, sizeof(::android::drm_metrics::DrmFrameworkMetrics_Counter)},
  { 20, 31, sizeof(::android::drm_metrics::DrmFrameworkMetrics_DistributionMetric)},
  { 37, 44, sizeof(::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime)},
  { 46, 53, sizeof(::android::drm_metrics::DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse)},
  { 55, 70, sizeof(::android::drm_metrics::DrmFrameworkMetrics)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::drm_metrics::_DrmFrameworkMetrics_Attributes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::drm_metrics::_DrmFrameworkMetrics_Counter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::drm_metrics::_DrmFrameworkMetrics_DistributionMetric_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::drm_metrics::_DrmFrameworkMetrics_SessionLifetime_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::drm_metrics::_DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::drm_metrics::_DrmFrameworkMetrics_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n2frameworks/av/drm/libmediadrm/protos/m"
  "etrics.proto\022\023android.drm_metrics\"\253\013\n\023Dr"
  "mFrameworkMetrics\022N\n\024open_session_counte"
  "r\030\001 \003(\01320.android.drm_metrics.DrmFramewo"
  "rkMetrics.Counter\022O\n\025close_session_count"
  "er\030\002 \003(\01320.android.drm_metrics.DrmFramew"
  "orkMetrics.Counter\022\\\n\027get_key_request_ti"
  "me_us\030\003 \003(\0132;.android.drm_metrics.DrmFra"
  "meworkMetrics.DistributionMetric\022a\n\034prov"
  "ide_key_response_time_us\030\004 \003(\0132;.android"
  ".drm_metrics.DrmFrameworkMetrics.Distrib"
  "utionMetric\022Z\n get_provisioning_request_"
  "counter\030\005 \003(\01320.android.drm_metrics.DrmF"
  "rameworkMetrics.Counter\022_\n%provide_provi"
  "sioning_response_counter\030\006 \003(\01320.android"
  ".drm_metrics.DrmFrameworkMetrics.Counter"
  "\022S\n\031key_status_change_counter\030\007 \003(\01320.an"
  "droid.drm_metrics.DrmFrameworkMetrics.Co"
  "unter\022P\n\026event_callback_counter\030\010 \003(\01320."
  "android.drm_metrics.DrmFrameworkMetrics."
  "Counter\022V\n\034get_device_unique_id_counter\030"
  "\t \003(\01320.android.drm_metrics.DrmFramework"
  "Metrics.Counter\022Y\n\021session_lifetimes\030\n \003"
  "(\0132>.android.drm_metrics.DrmFrameworkMet"
  "rics.SessionLifetimesEntry\032S\n\nAttributes"
  "\022\022\n\nerror_code\030\001 \001(\005\022\027\n\017key_status_type\030"
  "\016 \001(\r\022\022\n\nevent_type\030\017 \001(\rJ\004\010\002\020\016\032a\n\007Count"
  "er\022\r\n\005count\030\001 \001(\004\022G\n\nattributes\030\002 \001(\01323."
  "android.drm_metrics.DrmFrameworkMetrics."
  "Attributes\032\260\001\n\022DistributionMetric\022\013\n\003min"
  "\030\001 \001(\002\022\013\n\003max\030\002 \001(\002\022\014\n\004mean\030\003 \001(\002\022\020\n\010var"
  "iance\030\004 \001(\001\022\027\n\017operation_count\030\005 \001(\004\022G\n\n"
  "attributes\030\006 \001(\01323.android.drm_metrics.D"
  "rmFrameworkMetrics.Attributes\032=\n\017Session"
  "Lifetime\022\025\n\rstart_time_ms\030\001 \001(\004\022\023\n\013end_t"
  "ime_ms\030\002 \001(\004\032q\n\025SessionLifetimesEntry\022\013\n"
  "\003key\030\001 \001(\t\022G\n\005value\030\002 \001(\01328.android.drm_"
  "metrics.DrmFrameworkMetrics.SessionLifet"
  "ime:\0028\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto_sccs[6] = {
  &scc_info_DrmFrameworkMetrics_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base,
  &scc_info_DrmFrameworkMetrics_Attributes_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base,
  &scc_info_DrmFrameworkMetrics_Counter_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base,
  &scc_info_DrmFrameworkMetrics_DistributionMetric_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base,
  &scc_info_DrmFrameworkMetrics_SessionLifetime_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base,
  &scc_info_DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto_once;
static bool descriptor_table_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto = {
  &descriptor_table_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto_initialized, descriptor_table_protodef_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto, "frameworks/av/drm/libmediadrm/protos/metrics.proto", 1527,
  &descriptor_table_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto_once, descriptor_table_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto_sccs, descriptor_table_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto_deps, 6, 0,
  schemas, file_default_instances, TableStruct_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto::offsets,
  file_level_metadata_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto, 6, file_level_enum_descriptors_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto, file_level_service_descriptors_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto), true);
namespace android {
namespace drm_metrics {

// ===================================================================

void DrmFrameworkMetrics_Attributes::InitAsDefaultInstance() {
}
class DrmFrameworkMetrics_Attributes::_Internal {
 public:
  using HasBits = decltype(std::declval<DrmFrameworkMetrics_Attributes>()._has_bits_);
  static void set_has_error_code(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_key_status_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_event_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

DrmFrameworkMetrics_Attributes::DrmFrameworkMetrics_Attributes()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.drm_metrics.DrmFrameworkMetrics.Attributes)
}
DrmFrameworkMetrics_Attributes::DrmFrameworkMetrics_Attributes(const DrmFrameworkMetrics_Attributes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&event_type_, &from.event_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&key_status_type_) -
    reinterpret_cast<char*>(&event_type_)) + sizeof(key_status_type_));
  // @@protoc_insertion_point(copy_constructor:android.drm_metrics.DrmFrameworkMetrics.Attributes)
}

void DrmFrameworkMetrics_Attributes::SharedCtor() {
  ::memset(&event_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_status_type_) -
      reinterpret_cast<char*>(&event_type_)) + sizeof(key_status_type_));
}

DrmFrameworkMetrics_Attributes::~DrmFrameworkMetrics_Attributes() {
  // @@protoc_insertion_point(destructor:android.drm_metrics.DrmFrameworkMetrics.Attributes)
  SharedDtor();
}

void DrmFrameworkMetrics_Attributes::SharedDtor() {
}

void DrmFrameworkMetrics_Attributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DrmFrameworkMetrics_Attributes& DrmFrameworkMetrics_Attributes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DrmFrameworkMetrics_Attributes_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void DrmFrameworkMetrics_Attributes::Clear() {
// @@protoc_insertion_point(message_clear_start:android.drm_metrics.DrmFrameworkMetrics.Attributes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&event_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&key_status_type_) -
        reinterpret_cast<char*>(&event_type_)) + sizeof(key_status_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DrmFrameworkMetrics_Attributes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_error_code(&has_bits);
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 key_status_type = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_key_status_type(&has_bits);
          key_status_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 event_type = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_event_type(&has_bits);
          event_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DrmFrameworkMetrics_Attributes::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.drm_metrics.DrmFrameworkMetrics.Attributes)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 error_code = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_error_code(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 key_status_type = 14;
      case 14: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (112 & 0xFF)) {
          _Internal::set_has_key_status_type(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_status_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 event_type = 15;
      case 15: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (120 & 0xFF)) {
          _Internal::set_has_event_type(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.drm_metrics.DrmFrameworkMetrics.Attributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.drm_metrics.DrmFrameworkMetrics.Attributes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DrmFrameworkMetrics_Attributes::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.drm_metrics.DrmFrameworkMetrics.Attributes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 error_code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->error_code(), output);
  }

  // optional uint32 key_status_type = 14;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(14, this->key_status_type(), output);
  }

  // optional uint32 event_type = 15;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(15, this->event_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.drm_metrics.DrmFrameworkMetrics.Attributes)
}

::PROTOBUF_NAMESPACE_ID::uint8* DrmFrameworkMetrics_Attributes::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.drm_metrics.DrmFrameworkMetrics.Attributes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 error_code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->error_code(), target);
  }

  // optional uint32 key_status_type = 14;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->key_status_type(), target);
  }

  // optional uint32 event_type = 15;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->event_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.drm_metrics.DrmFrameworkMetrics.Attributes)
  return target;
}

size_t DrmFrameworkMetrics_Attributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.drm_metrics.DrmFrameworkMetrics.Attributes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 event_type = 15;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->event_type());
    }

    // optional int32 error_code = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->error_code());
    }

    // optional uint32 key_status_type = 14;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->key_status_type());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DrmFrameworkMetrics_Attributes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.drm_metrics.DrmFrameworkMetrics.Attributes)
  GOOGLE_DCHECK_NE(&from, this);
  const DrmFrameworkMetrics_Attributes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DrmFrameworkMetrics_Attributes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.drm_metrics.DrmFrameworkMetrics.Attributes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.drm_metrics.DrmFrameworkMetrics.Attributes)
    MergeFrom(*source);
  }
}

void DrmFrameworkMetrics_Attributes::MergeFrom(const DrmFrameworkMetrics_Attributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.drm_metrics.DrmFrameworkMetrics.Attributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      event_type_ = from.event_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      error_code_ = from.error_code_;
    }
    if (cached_has_bits & 0x00000004u) {
      key_status_type_ = from.key_status_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DrmFrameworkMetrics_Attributes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.drm_metrics.DrmFrameworkMetrics.Attributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DrmFrameworkMetrics_Attributes::CopyFrom(const DrmFrameworkMetrics_Attributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.drm_metrics.DrmFrameworkMetrics.Attributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DrmFrameworkMetrics_Attributes::IsInitialized() const {
  return true;
}

void DrmFrameworkMetrics_Attributes::InternalSwap(DrmFrameworkMetrics_Attributes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(event_type_, other->event_type_);
  swap(error_code_, other->error_code_);
  swap(key_status_type_, other->key_status_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DrmFrameworkMetrics_Attributes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DrmFrameworkMetrics_Counter::InitAsDefaultInstance() {
  ::android::drm_metrics::_DrmFrameworkMetrics_Counter_default_instance_._instance.get_mutable()->attributes_ = const_cast< ::android::drm_metrics::DrmFrameworkMetrics_Attributes*>(
      ::android::drm_metrics::DrmFrameworkMetrics_Attributes::internal_default_instance());
}
class DrmFrameworkMetrics_Counter::_Internal {
 public:
  using HasBits = decltype(std::declval<DrmFrameworkMetrics_Counter>()._has_bits_);
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::android::drm_metrics::DrmFrameworkMetrics_Attributes& attributes(const DrmFrameworkMetrics_Counter* msg);
  static void set_has_attributes(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::drm_metrics::DrmFrameworkMetrics_Attributes&
DrmFrameworkMetrics_Counter::_Internal::attributes(const DrmFrameworkMetrics_Counter* msg) {
  return *msg->attributes_;
}
DrmFrameworkMetrics_Counter::DrmFrameworkMetrics_Counter()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.drm_metrics.DrmFrameworkMetrics.Counter)
}
DrmFrameworkMetrics_Counter::DrmFrameworkMetrics_Counter(const DrmFrameworkMetrics_Counter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_attributes()) {
    attributes_ = new ::android::drm_metrics::DrmFrameworkMetrics_Attributes(*from.attributes_);
  } else {
    attributes_ = nullptr;
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:android.drm_metrics.DrmFrameworkMetrics.Counter)
}

void DrmFrameworkMetrics_Counter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DrmFrameworkMetrics_Counter_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base);
  ::memset(&attributes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&attributes_)) + sizeof(count_));
}

DrmFrameworkMetrics_Counter::~DrmFrameworkMetrics_Counter() {
  // @@protoc_insertion_point(destructor:android.drm_metrics.DrmFrameworkMetrics.Counter)
  SharedDtor();
}

void DrmFrameworkMetrics_Counter::SharedDtor() {
  if (this != internal_default_instance()) delete attributes_;
}

void DrmFrameworkMetrics_Counter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DrmFrameworkMetrics_Counter& DrmFrameworkMetrics_Counter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DrmFrameworkMetrics_Counter_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void DrmFrameworkMetrics_Counter::Clear() {
// @@protoc_insertion_point(message_clear_start:android.drm_metrics.DrmFrameworkMetrics.Counter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(attributes_ != nullptr);
    attributes_->Clear();
  }
  count_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DrmFrameworkMetrics_Counter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_count(&has_bits);
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.drm_metrics.DrmFrameworkMetrics.Attributes attributes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_attributes(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DrmFrameworkMetrics_Counter::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.drm_metrics.DrmFrameworkMetrics.Counter)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 count = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.drm_metrics.DrmFrameworkMetrics.Attributes attributes = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.drm_metrics.DrmFrameworkMetrics.Counter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.drm_metrics.DrmFrameworkMetrics.Counter)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DrmFrameworkMetrics_Counter::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.drm_metrics.DrmFrameworkMetrics.Counter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 count = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(1, this->count(), output);
  }

  // optional .android.drm_metrics.DrmFrameworkMetrics.Attributes attributes = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::attributes(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.drm_metrics.DrmFrameworkMetrics.Counter)
}

::PROTOBUF_NAMESPACE_ID::uint8* DrmFrameworkMetrics_Counter::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.drm_metrics.DrmFrameworkMetrics.Counter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 count = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->count(), target);
  }

  // optional .android.drm_metrics.DrmFrameworkMetrics.Attributes attributes = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::attributes(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.drm_metrics.DrmFrameworkMetrics.Counter)
  return target;
}

size_t DrmFrameworkMetrics_Counter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.drm_metrics.DrmFrameworkMetrics.Counter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .android.drm_metrics.DrmFrameworkMetrics.Attributes attributes = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *attributes_);
    }

    // optional uint64 count = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->count());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DrmFrameworkMetrics_Counter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.drm_metrics.DrmFrameworkMetrics.Counter)
  GOOGLE_DCHECK_NE(&from, this);
  const DrmFrameworkMetrics_Counter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DrmFrameworkMetrics_Counter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.drm_metrics.DrmFrameworkMetrics.Counter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.drm_metrics.DrmFrameworkMetrics.Counter)
    MergeFrom(*source);
  }
}

void DrmFrameworkMetrics_Counter::MergeFrom(const DrmFrameworkMetrics_Counter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.drm_metrics.DrmFrameworkMetrics.Counter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_attributes()->::android::drm_metrics::DrmFrameworkMetrics_Attributes::MergeFrom(from.attributes());
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DrmFrameworkMetrics_Counter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.drm_metrics.DrmFrameworkMetrics.Counter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DrmFrameworkMetrics_Counter::CopyFrom(const DrmFrameworkMetrics_Counter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.drm_metrics.DrmFrameworkMetrics.Counter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DrmFrameworkMetrics_Counter::IsInitialized() const {
  return true;
}

void DrmFrameworkMetrics_Counter::InternalSwap(DrmFrameworkMetrics_Counter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(attributes_, other->attributes_);
  swap(count_, other->count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DrmFrameworkMetrics_Counter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DrmFrameworkMetrics_DistributionMetric::InitAsDefaultInstance() {
  ::android::drm_metrics::_DrmFrameworkMetrics_DistributionMetric_default_instance_._instance.get_mutable()->attributes_ = const_cast< ::android::drm_metrics::DrmFrameworkMetrics_Attributes*>(
      ::android::drm_metrics::DrmFrameworkMetrics_Attributes::internal_default_instance());
}
class DrmFrameworkMetrics_DistributionMetric::_Internal {
 public:
  using HasBits = decltype(std::declval<DrmFrameworkMetrics_DistributionMetric>()._has_bits_);
  static void set_has_min(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_max(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_mean(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_variance(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_operation_count(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::android::drm_metrics::DrmFrameworkMetrics_Attributes& attributes(const DrmFrameworkMetrics_DistributionMetric* msg);
  static void set_has_attributes(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::android::drm_metrics::DrmFrameworkMetrics_Attributes&
DrmFrameworkMetrics_DistributionMetric::_Internal::attributes(const DrmFrameworkMetrics_DistributionMetric* msg) {
  return *msg->attributes_;
}
DrmFrameworkMetrics_DistributionMetric::DrmFrameworkMetrics_DistributionMetric()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
}
DrmFrameworkMetrics_DistributionMetric::DrmFrameworkMetrics_DistributionMetric(const DrmFrameworkMetrics_DistributionMetric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_attributes()) {
    attributes_ = new ::android::drm_metrics::DrmFrameworkMetrics_Attributes(*from.attributes_);
  } else {
    attributes_ = nullptr;
  }
  ::memcpy(&min_, &from.min_,
    static_cast<size_t>(reinterpret_cast<char*>(&mean_) -
    reinterpret_cast<char*>(&min_)) + sizeof(mean_));
  // @@protoc_insertion_point(copy_constructor:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
}

void DrmFrameworkMetrics_DistributionMetric::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DrmFrameworkMetrics_DistributionMetric_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base);
  ::memset(&attributes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mean_) -
      reinterpret_cast<char*>(&attributes_)) + sizeof(mean_));
}

DrmFrameworkMetrics_DistributionMetric::~DrmFrameworkMetrics_DistributionMetric() {
  // @@protoc_insertion_point(destructor:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
  SharedDtor();
}

void DrmFrameworkMetrics_DistributionMetric::SharedDtor() {
  if (this != internal_default_instance()) delete attributes_;
}

void DrmFrameworkMetrics_DistributionMetric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DrmFrameworkMetrics_DistributionMetric& DrmFrameworkMetrics_DistributionMetric::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DrmFrameworkMetrics_DistributionMetric_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void DrmFrameworkMetrics_DistributionMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(attributes_ != nullptr);
    attributes_->Clear();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&min_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mean_) -
        reinterpret_cast<char*>(&min_)) + sizeof(mean_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DrmFrameworkMetrics_DistributionMetric::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional float min = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          _Internal::set_has_min(&has_bits);
          min_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float max = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          _Internal::set_has_max(&has_bits);
          max_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float mean = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          _Internal::set_has_mean(&has_bits);
          mean_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional double variance = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_variance(&has_bits);
          variance_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional uint64 operation_count = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_operation_count(&has_bits);
          operation_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .android.drm_metrics.DrmFrameworkMetrics.Attributes attributes = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_attributes(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DrmFrameworkMetrics_DistributionMetric::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float min = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (13 & 0xFF)) {
          _Internal::set_has_min(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float max = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (21 & 0xFF)) {
          _Internal::set_has_max(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float mean = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (29 & 0xFF)) {
          _Internal::set_has_mean(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mean_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double variance = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (33 & 0xFF)) {
          _Internal::set_has_variance(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   double, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &variance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 operation_count = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_operation_count(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &operation_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .android.drm_metrics.DrmFrameworkMetrics.Attributes attributes = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DrmFrameworkMetrics_DistributionMetric::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float min = 1;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(1, this->min(), output);
  }

  // optional float max = 2;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(2, this->max(), output);
  }

  // optional float mean = 3;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(3, this->mean(), output);
  }

  // optional double variance = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDouble(4, this->variance(), output);
  }

  // optional uint64 operation_count = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(5, this->operation_count(), output);
  }

  // optional .android.drm_metrics.DrmFrameworkMetrics.Attributes attributes = 6;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, _Internal::attributes(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
}

::PROTOBUF_NAMESPACE_ID::uint8* DrmFrameworkMetrics_DistributionMetric::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float min = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->min(), target);
  }

  // optional float max = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->max(), target);
  }

  // optional float mean = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->mean(), target);
  }

  // optional double variance = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->variance(), target);
  }

  // optional uint64 operation_count = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->operation_count(), target);
  }

  // optional .android.drm_metrics.DrmFrameworkMetrics.Attributes attributes = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::attributes(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
  return target;
}

size_t DrmFrameworkMetrics_DistributionMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .android.drm_metrics.DrmFrameworkMetrics.Attributes attributes = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *attributes_);
    }

    // optional float min = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional float max = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional double variance = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional uint64 operation_count = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->operation_count());
    }

    // optional float mean = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DrmFrameworkMetrics_DistributionMetric::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
  GOOGLE_DCHECK_NE(&from, this);
  const DrmFrameworkMetrics_DistributionMetric* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DrmFrameworkMetrics_DistributionMetric>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
    MergeFrom(*source);
  }
}

void DrmFrameworkMetrics_DistributionMetric::MergeFrom(const DrmFrameworkMetrics_DistributionMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_attributes()->::android::drm_metrics::DrmFrameworkMetrics_Attributes::MergeFrom(from.attributes());
    }
    if (cached_has_bits & 0x00000002u) {
      min_ = from.min_;
    }
    if (cached_has_bits & 0x00000004u) {
      max_ = from.max_;
    }
    if (cached_has_bits & 0x00000008u) {
      variance_ = from.variance_;
    }
    if (cached_has_bits & 0x00000010u) {
      operation_count_ = from.operation_count_;
    }
    if (cached_has_bits & 0x00000020u) {
      mean_ = from.mean_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DrmFrameworkMetrics_DistributionMetric::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DrmFrameworkMetrics_DistributionMetric::CopyFrom(const DrmFrameworkMetrics_DistributionMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.drm_metrics.DrmFrameworkMetrics.DistributionMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DrmFrameworkMetrics_DistributionMetric::IsInitialized() const {
  return true;
}

void DrmFrameworkMetrics_DistributionMetric::InternalSwap(DrmFrameworkMetrics_DistributionMetric* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(attributes_, other->attributes_);
  swap(min_, other->min_);
  swap(max_, other->max_);
  swap(variance_, other->variance_);
  swap(operation_count_, other->operation_count_);
  swap(mean_, other->mean_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DrmFrameworkMetrics_DistributionMetric::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DrmFrameworkMetrics_SessionLifetime::InitAsDefaultInstance() {
}
class DrmFrameworkMetrics_SessionLifetime::_Internal {
 public:
  using HasBits = decltype(std::declval<DrmFrameworkMetrics_SessionLifetime>()._has_bits_);
  static void set_has_start_time_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_end_time_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

DrmFrameworkMetrics_SessionLifetime::DrmFrameworkMetrics_SessionLifetime()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
}
DrmFrameworkMetrics_SessionLifetime::DrmFrameworkMetrics_SessionLifetime(const DrmFrameworkMetrics_SessionLifetime& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_time_ms_, &from.start_time_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_time_ms_) -
    reinterpret_cast<char*>(&start_time_ms_)) + sizeof(end_time_ms_));
  // @@protoc_insertion_point(copy_constructor:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
}

void DrmFrameworkMetrics_SessionLifetime::SharedCtor() {
  ::memset(&start_time_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_ms_) -
      reinterpret_cast<char*>(&start_time_ms_)) + sizeof(end_time_ms_));
}

DrmFrameworkMetrics_SessionLifetime::~DrmFrameworkMetrics_SessionLifetime() {
  // @@protoc_insertion_point(destructor:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
  SharedDtor();
}

void DrmFrameworkMetrics_SessionLifetime::SharedDtor() {
}

void DrmFrameworkMetrics_SessionLifetime::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DrmFrameworkMetrics_SessionLifetime& DrmFrameworkMetrics_SessionLifetime::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DrmFrameworkMetrics_SessionLifetime_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void DrmFrameworkMetrics_SessionLifetime::Clear() {
// @@protoc_insertion_point(message_clear_start:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&start_time_ms_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&end_time_ms_) -
        reinterpret_cast<char*>(&start_time_ms_)) + sizeof(end_time_ms_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DrmFrameworkMetrics_SessionLifetime::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 start_time_ms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_start_time_ms(&has_bits);
          start_time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 end_time_ms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_end_time_ms(&has_bits);
          end_time_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DrmFrameworkMetrics_SessionLifetime::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 start_time_ms = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_start_time_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 end_time_ms = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_end_time_ms(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &end_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DrmFrameworkMetrics_SessionLifetime::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 start_time_ms = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(1, this->start_time_ms(), output);
  }

  // optional uint64 end_time_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(2, this->end_time_ms(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
}

::PROTOBUF_NAMESPACE_ID::uint8* DrmFrameworkMetrics_SessionLifetime::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 start_time_ms = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->start_time_ms(), target);
  }

  // optional uint64 end_time_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->end_time_ms(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
  return target;
}

size_t DrmFrameworkMetrics_SessionLifetime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 start_time_ms = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->start_time_ms());
    }

    // optional uint64 end_time_ms = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->end_time_ms());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DrmFrameworkMetrics_SessionLifetime::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
  GOOGLE_DCHECK_NE(&from, this);
  const DrmFrameworkMetrics_SessionLifetime* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DrmFrameworkMetrics_SessionLifetime>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
    MergeFrom(*source);
  }
}

void DrmFrameworkMetrics_SessionLifetime::MergeFrom(const DrmFrameworkMetrics_SessionLifetime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      start_time_ms_ = from.start_time_ms_;
    }
    if (cached_has_bits & 0x00000002u) {
      end_time_ms_ = from.end_time_ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DrmFrameworkMetrics_SessionLifetime::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DrmFrameworkMetrics_SessionLifetime::CopyFrom(const DrmFrameworkMetrics_SessionLifetime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.drm_metrics.DrmFrameworkMetrics.SessionLifetime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DrmFrameworkMetrics_SessionLifetime::IsInitialized() const {
  return true;
}

void DrmFrameworkMetrics_SessionLifetime::InternalSwap(DrmFrameworkMetrics_SessionLifetime* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(start_time_ms_, other->start_time_ms_);
  swap(end_time_ms_, other->end_time_ms_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DrmFrameworkMetrics_SessionLifetime::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse::DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse() {}
DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse::DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse::MergeFrom(const DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void DrmFrameworkMetrics::InitAsDefaultInstance() {
}
class DrmFrameworkMetrics::_Internal {
 public:
  using HasBits = decltype(std::declval<DrmFrameworkMetrics>()._has_bits_);
};

DrmFrameworkMetrics::DrmFrameworkMetrics()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.drm_metrics.DrmFrameworkMetrics)
}
DrmFrameworkMetrics::DrmFrameworkMetrics(const DrmFrameworkMetrics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      open_session_counter_(from.open_session_counter_),
      close_session_counter_(from.close_session_counter_),
      get_key_request_time_us_(from.get_key_request_time_us_),
      provide_key_response_time_us_(from.provide_key_response_time_us_),
      get_provisioning_request_counter_(from.get_provisioning_request_counter_),
      provide_provisioning_response_counter_(from.provide_provisioning_response_counter_),
      key_status_change_counter_(from.key_status_change_counter_),
      event_callback_counter_(from.event_callback_counter_),
      get_device_unique_id_counter_(from.get_device_unique_id_counter_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_lifetimes_.MergeFrom(from.session_lifetimes_);
  // @@protoc_insertion_point(copy_constructor:android.drm_metrics.DrmFrameworkMetrics)
}

void DrmFrameworkMetrics::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DrmFrameworkMetrics_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base);
}

DrmFrameworkMetrics::~DrmFrameworkMetrics() {
  // @@protoc_insertion_point(destructor:android.drm_metrics.DrmFrameworkMetrics)
  SharedDtor();
}

void DrmFrameworkMetrics::SharedDtor() {
}

void DrmFrameworkMetrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DrmFrameworkMetrics& DrmFrameworkMetrics::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DrmFrameworkMetrics_frameworks_2fav_2fdrm_2flibmediadrm_2fprotos_2fmetrics_2eproto.base);
  return *internal_default_instance();
}


void DrmFrameworkMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:android.drm_metrics.DrmFrameworkMetrics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  open_session_counter_.Clear();
  close_session_counter_.Clear();
  get_key_request_time_us_.Clear();
  provide_key_response_time_us_.Clear();
  get_provisioning_request_counter_.Clear();
  provide_provisioning_response_counter_.Clear();
  key_status_change_counter_.Clear();
  event_callback_counter_.Clear();
  get_device_unique_id_counter_.Clear();
  session_lifetimes_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DrmFrameworkMetrics::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter open_session_counter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_open_session_counter(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter close_session_counter = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_close_session_counter(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // repeated .android.drm_metrics.DrmFrameworkMetrics.DistributionMetric get_key_request_time_us = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_get_key_request_time_us(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // repeated .android.drm_metrics.DrmFrameworkMetrics.DistributionMetric provide_key_response_time_us = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_provide_key_response_time_us(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter get_provisioning_request_counter = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_get_provisioning_request_counter(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter provide_provisioning_response_counter = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_provide_provisioning_response_counter(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 50);
        } else goto handle_unusual;
        continue;
      // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter key_status_change_counter = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_key_status_change_counter(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 58);
        } else goto handle_unusual;
        continue;
      // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter event_callback_counter = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_event_callback_counter(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 66);
        } else goto handle_unusual;
        continue;
      // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter get_device_unique_id_counter = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_get_device_unique_id_counter(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 74);
        } else goto handle_unusual;
        continue;
      // map<string, .android.drm_metrics.DrmFrameworkMetrics.SessionLifetime> session_lifetimes = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&session_lifetimes_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 82);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DrmFrameworkMetrics::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.drm_metrics.DrmFrameworkMetrics)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter open_session_counter = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_open_session_counter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter close_session_counter = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_close_session_counter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.drm_metrics.DrmFrameworkMetrics.DistributionMetric get_key_request_time_us = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_get_key_request_time_us()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.drm_metrics.DrmFrameworkMetrics.DistributionMetric provide_key_response_time_us = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_provide_key_response_time_us()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter get_provisioning_request_counter = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_get_provisioning_request_counter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter provide_provisioning_response_counter = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_provide_provisioning_response_counter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter key_status_change_counter = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_key_status_change_counter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter event_callback_counter = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_event_callback_counter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter get_device_unique_id_counter = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_get_device_unique_id_counter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .android.drm_metrics.DrmFrameworkMetrics.SessionLifetime> session_lifetimes = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse,
              std::string, ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime > > parser(&session_lifetimes_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "android.drm_metrics.DrmFrameworkMetrics.SessionLifetimesEntry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.drm_metrics.DrmFrameworkMetrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.drm_metrics.DrmFrameworkMetrics)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DrmFrameworkMetrics::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.drm_metrics.DrmFrameworkMetrics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter open_session_counter = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->open_session_counter_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->open_session_counter(static_cast<int>(i)),
      output);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter close_session_counter = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_session_counter_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->close_session_counter(static_cast<int>(i)),
      output);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.DistributionMetric get_key_request_time_us = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->get_key_request_time_us_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->get_key_request_time_us(static_cast<int>(i)),
      output);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.DistributionMetric provide_key_response_time_us = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->provide_key_response_time_us_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->provide_key_response_time_us(static_cast<int>(i)),
      output);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter get_provisioning_request_counter = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->get_provisioning_request_counter_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->get_provisioning_request_counter(static_cast<int>(i)),
      output);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter provide_provisioning_response_counter = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->provide_provisioning_response_counter_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->provide_provisioning_response_counter(static_cast<int>(i)),
      output);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter key_status_change_counter = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_status_change_counter_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->key_status_change_counter(static_cast<int>(i)),
      output);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter event_callback_counter = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_callback_counter_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->event_callback_counter(static_cast<int>(i)),
      output);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter get_device_unique_id_counter = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->get_device_unique_id_counter_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->get_device_unique_id_counter(static_cast<int>(i)),
      output);
  }

  // map<string, .android.drm_metrics.DrmFrameworkMetrics.SessionLifetime> session_lifetimes = 10;
  if (!this->session_lifetimes().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
          "android.drm_metrics.DrmFrameworkMetrics.SessionLifetimesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->session_lifetimes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->session_lifetimes().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime >::const_iterator
          it = this->session_lifetimes().begin();
          it != this->session_lifetimes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse::Funcs::SerializeToCodedStream(10, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime >::const_iterator
          it = this->session_lifetimes().begin();
          it != this->session_lifetimes().end(); ++it) {
        DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse::Funcs::SerializeToCodedStream(10, it->first, it->second, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.drm_metrics.DrmFrameworkMetrics)
}

::PROTOBUF_NAMESPACE_ID::uint8* DrmFrameworkMetrics::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.drm_metrics.DrmFrameworkMetrics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter open_session_counter = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->open_session_counter_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->open_session_counter(static_cast<int>(i)), target);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter close_session_counter = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->close_session_counter_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->close_session_counter(static_cast<int>(i)), target);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.DistributionMetric get_key_request_time_us = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->get_key_request_time_us_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->get_key_request_time_us(static_cast<int>(i)), target);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.DistributionMetric provide_key_response_time_us = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->provide_key_response_time_us_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->provide_key_response_time_us(static_cast<int>(i)), target);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter get_provisioning_request_counter = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->get_provisioning_request_counter_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->get_provisioning_request_counter(static_cast<int>(i)), target);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter provide_provisioning_response_counter = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->provide_provisioning_response_counter_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->provide_provisioning_response_counter(static_cast<int>(i)), target);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter key_status_change_counter = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_status_change_counter_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->key_status_change_counter(static_cast<int>(i)), target);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter event_callback_counter = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_callback_counter_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->event_callback_counter(static_cast<int>(i)), target);
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter get_device_unique_id_counter = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->get_device_unique_id_counter_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->get_device_unique_id_counter(static_cast<int>(i)), target);
  }

  // map<string, .android.drm_metrics.DrmFrameworkMetrics.SessionLifetime> session_lifetimes = 10;
  if (!this->session_lifetimes().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
          "android.drm_metrics.DrmFrameworkMetrics.SessionLifetimesEntry.key");
      }
    };

    if (false &&
        this->session_lifetimes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->session_lifetimes().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime >::const_iterator
          it = this->session_lifetimes().begin();
          it != this->session_lifetimes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse::Funcs::SerializeToArray(10, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime >::const_iterator
          it = this->session_lifetimes().begin();
          it != this->session_lifetimes().end(); ++it) {
        target = DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse::Funcs::SerializeToArray(10, it->first, it->second, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.drm_metrics.DrmFrameworkMetrics)
  return target;
}

size_t DrmFrameworkMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.drm_metrics.DrmFrameworkMetrics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter open_session_counter = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->open_session_counter_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->open_session_counter(static_cast<int>(i)));
    }
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter close_session_counter = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->close_session_counter_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->close_session_counter(static_cast<int>(i)));
    }
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.DistributionMetric get_key_request_time_us = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->get_key_request_time_us_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->get_key_request_time_us(static_cast<int>(i)));
    }
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.DistributionMetric provide_key_response_time_us = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->provide_key_response_time_us_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->provide_key_response_time_us(static_cast<int>(i)));
    }
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter get_provisioning_request_counter = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->get_provisioning_request_counter_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->get_provisioning_request_counter(static_cast<int>(i)));
    }
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter provide_provisioning_response_counter = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->provide_provisioning_response_counter_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->provide_provisioning_response_counter(static_cast<int>(i)));
    }
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter key_status_change_counter = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->key_status_change_counter_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->key_status_change_counter(static_cast<int>(i)));
    }
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter event_callback_counter = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->event_callback_counter_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->event_callback_counter(static_cast<int>(i)));
    }
  }

  // repeated .android.drm_metrics.DrmFrameworkMetrics.Counter get_device_unique_id_counter = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->get_device_unique_id_counter_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->get_device_unique_id_counter(static_cast<int>(i)));
    }
  }

  // map<string, .android.drm_metrics.DrmFrameworkMetrics.SessionLifetime> session_lifetimes = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->session_lifetimes_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime >::const_iterator
      it = this->session_lifetimes().begin();
      it != this->session_lifetimes().end(); ++it) {
    total_size += DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DrmFrameworkMetrics::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.drm_metrics.DrmFrameworkMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const DrmFrameworkMetrics* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DrmFrameworkMetrics>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.drm_metrics.DrmFrameworkMetrics)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.drm_metrics.DrmFrameworkMetrics)
    MergeFrom(*source);
  }
}

void DrmFrameworkMetrics::MergeFrom(const DrmFrameworkMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.drm_metrics.DrmFrameworkMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  open_session_counter_.MergeFrom(from.open_session_counter_);
  close_session_counter_.MergeFrom(from.close_session_counter_);
  get_key_request_time_us_.MergeFrom(from.get_key_request_time_us_);
  provide_key_response_time_us_.MergeFrom(from.provide_key_response_time_us_);
  get_provisioning_request_counter_.MergeFrom(from.get_provisioning_request_counter_);
  provide_provisioning_response_counter_.MergeFrom(from.provide_provisioning_response_counter_);
  key_status_change_counter_.MergeFrom(from.key_status_change_counter_);
  event_callback_counter_.MergeFrom(from.event_callback_counter_);
  get_device_unique_id_counter_.MergeFrom(from.get_device_unique_id_counter_);
  session_lifetimes_.MergeFrom(from.session_lifetimes_);
}

void DrmFrameworkMetrics::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.drm_metrics.DrmFrameworkMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DrmFrameworkMetrics::CopyFrom(const DrmFrameworkMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.drm_metrics.DrmFrameworkMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DrmFrameworkMetrics::IsInitialized() const {
  return true;
}

void DrmFrameworkMetrics::InternalSwap(DrmFrameworkMetrics* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&open_session_counter_)->InternalSwap(CastToBase(&other->open_session_counter_));
  CastToBase(&close_session_counter_)->InternalSwap(CastToBase(&other->close_session_counter_));
  CastToBase(&get_key_request_time_us_)->InternalSwap(CastToBase(&other->get_key_request_time_us_));
  CastToBase(&provide_key_response_time_us_)->InternalSwap(CastToBase(&other->provide_key_response_time_us_));
  CastToBase(&get_provisioning_request_counter_)->InternalSwap(CastToBase(&other->get_provisioning_request_counter_));
  CastToBase(&provide_provisioning_response_counter_)->InternalSwap(CastToBase(&other->provide_provisioning_response_counter_));
  CastToBase(&key_status_change_counter_)->InternalSwap(CastToBase(&other->key_status_change_counter_));
  CastToBase(&event_callback_counter_)->InternalSwap(CastToBase(&other->event_callback_counter_));
  CastToBase(&get_device_unique_id_counter_)->InternalSwap(CastToBase(&other->get_device_unique_id_counter_));
  session_lifetimes_.Swap(&other->session_lifetimes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DrmFrameworkMetrics::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace drm_metrics
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::drm_metrics::DrmFrameworkMetrics_Attributes* Arena::CreateMaybeMessage< ::android::drm_metrics::DrmFrameworkMetrics_Attributes >(Arena* arena) {
  return Arena::CreateInternal< ::android::drm_metrics::DrmFrameworkMetrics_Attributes >(arena);
}
template<> PROTOBUF_NOINLINE ::android::drm_metrics::DrmFrameworkMetrics_Counter* Arena::CreateMaybeMessage< ::android::drm_metrics::DrmFrameworkMetrics_Counter >(Arena* arena) {
  return Arena::CreateInternal< ::android::drm_metrics::DrmFrameworkMetrics_Counter >(arena);
}
template<> PROTOBUF_NOINLINE ::android::drm_metrics::DrmFrameworkMetrics_DistributionMetric* Arena::CreateMaybeMessage< ::android::drm_metrics::DrmFrameworkMetrics_DistributionMetric >(Arena* arena) {
  return Arena::CreateInternal< ::android::drm_metrics::DrmFrameworkMetrics_DistributionMetric >(arena);
}
template<> PROTOBUF_NOINLINE ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime* Arena::CreateMaybeMessage< ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime >(Arena* arena) {
  return Arena::CreateInternal< ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetime >(arena);
}
template<> PROTOBUF_NOINLINE ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse* Arena::CreateMaybeMessage< ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::android::drm_metrics::DrmFrameworkMetrics_SessionLifetimesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::android::drm_metrics::DrmFrameworkMetrics* Arena::CreateMaybeMessage< ::android::drm_metrics::DrmFrameworkMetrics >(Arena* arena) {
  return Arena::CreateInternal< ::android::drm_metrics::DrmFrameworkMetrics >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
