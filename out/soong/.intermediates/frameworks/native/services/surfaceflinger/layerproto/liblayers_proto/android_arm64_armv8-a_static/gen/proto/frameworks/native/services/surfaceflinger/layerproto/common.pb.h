// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/native/services/surfaceflinger/layerproto/common.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_frameworks_2fnative_2fservices_2fsurfaceflinger_2flayerproto_2fcommon_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_frameworks_2fnative_2fservices_2fsurfaceflinger_2flayerproto_2fcommon_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_frameworks_2fnative_2fservices_2fsurfaceflinger_2flayerproto_2fcommon_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_frameworks_2fnative_2fservices_2fsurfaceflinger_2flayerproto_2fcommon_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace android {
namespace surfaceflinger {
class RectProto;
class RectProtoDefaultTypeInternal;
extern RectProtoDefaultTypeInternal _RectProto_default_instance_;
class SizeProto;
class SizeProtoDefaultTypeInternal;
extern SizeProtoDefaultTypeInternal _SizeProto_default_instance_;
class TransformProto;
class TransformProtoDefaultTypeInternal;
extern TransformProtoDefaultTypeInternal _TransformProto_default_instance_;
}  // namespace surfaceflinger
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> ::android::surfaceflinger::RectProto* Arena::CreateMaybeMessage<::android::surfaceflinger::RectProto>(Arena*);
template<> ::android::surfaceflinger::SizeProto* Arena::CreateMaybeMessage<::android::surfaceflinger::SizeProto>(Arena*);
template<> ::android::surfaceflinger::TransformProto* Arena::CreateMaybeMessage<::android::surfaceflinger::TransformProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace android {
namespace surfaceflinger {

// ===================================================================

class RectProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.surfaceflinger.RectProto) */ {
 public:
  RectProto();
  virtual ~RectProto();

  RectProto(const RectProto& from);
  RectProto(RectProto&& from) noexcept
    : RectProto() {
    *this = ::std::move(from);
  }

  inline RectProto& operator=(const RectProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline RectProto& operator=(RectProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const RectProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RectProto* internal_default_instance() {
    return reinterpret_cast<const RectProto*>(
               &_RectProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(RectProto& a, RectProto& b) {
    a.Swap(&b);
  }
  inline void Swap(RectProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RectProto* New() const final {
    return CreateMaybeMessage<RectProto>(nullptr);
  }

  RectProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RectProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const RectProto& from);
  void MergeFrom(const RectProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RectProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.surfaceflinger.RectProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLeftFieldNumber = 1,
    kTopFieldNumber = 2,
    kRightFieldNumber = 3,
    kBottomFieldNumber = 4,
  };
  // int32 left = 1;
  void clear_left();
  ::PROTOBUF_NAMESPACE_ID::int32 left() const;
  void set_left(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 top = 2;
  void clear_top();
  ::PROTOBUF_NAMESPACE_ID::int32 top() const;
  void set_top(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 right = 3;
  void clear_right();
  ::PROTOBUF_NAMESPACE_ID::int32 right() const;
  void set_right(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 bottom = 4;
  void clear_bottom();
  ::PROTOBUF_NAMESPACE_ID::int32 bottom() const;
  void set_bottom(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.surfaceflinger.RectProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 left_;
  ::PROTOBUF_NAMESPACE_ID::int32 top_;
  ::PROTOBUF_NAMESPACE_ID::int32 right_;
  ::PROTOBUF_NAMESPACE_ID::int32 bottom_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_frameworks_2fnative_2fservices_2fsurfaceflinger_2flayerproto_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class SizeProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.surfaceflinger.SizeProto) */ {
 public:
  SizeProto();
  virtual ~SizeProto();

  SizeProto(const SizeProto& from);
  SizeProto(SizeProto&& from) noexcept
    : SizeProto() {
    *this = ::std::move(from);
  }

  inline SizeProto& operator=(const SizeProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline SizeProto& operator=(SizeProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const SizeProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SizeProto* internal_default_instance() {
    return reinterpret_cast<const SizeProto*>(
               &_SizeProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SizeProto& a, SizeProto& b) {
    a.Swap(&b);
  }
  inline void Swap(SizeProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SizeProto* New() const final {
    return CreateMaybeMessage<SizeProto>(nullptr);
  }

  SizeProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SizeProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SizeProto& from);
  void MergeFrom(const SizeProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SizeProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.surfaceflinger.SizeProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWFieldNumber = 1,
    kHFieldNumber = 2,
  };
  // int32 w = 1;
  void clear_w();
  ::PROTOBUF_NAMESPACE_ID::int32 w() const;
  void set_w(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 h = 2;
  void clear_h();
  ::PROTOBUF_NAMESPACE_ID::int32 h() const;
  void set_h(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.surfaceflinger.SizeProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 w_;
  ::PROTOBUF_NAMESPACE_ID::int32 h_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_frameworks_2fnative_2fservices_2fsurfaceflinger_2flayerproto_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class TransformProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:android.surfaceflinger.TransformProto) */ {
 public:
  TransformProto();
  virtual ~TransformProto();

  TransformProto(const TransformProto& from);
  TransformProto(TransformProto&& from) noexcept
    : TransformProto() {
    *this = ::std::move(from);
  }

  inline TransformProto& operator=(const TransformProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransformProto& operator=(TransformProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const TransformProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransformProto* internal_default_instance() {
    return reinterpret_cast<const TransformProto*>(
               &_TransformProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TransformProto& a, TransformProto& b) {
    a.Swap(&b);
  }
  inline void Swap(TransformProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TransformProto* New() const final {
    return CreateMaybeMessage<TransformProto>(nullptr);
  }

  TransformProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TransformProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const TransformProto& from);
  void MergeFrom(const TransformProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransformProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "android.surfaceflinger.TransformProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDsdxFieldNumber = 1,
    kDtdxFieldNumber = 2,
    kDsdyFieldNumber = 3,
    kDtdyFieldNumber = 4,
    kTypeFieldNumber = 5,
  };
  // float dsdx = 1;
  void clear_dsdx();
  float dsdx() const;
  void set_dsdx(float value);

  // float dtdx = 2;
  void clear_dtdx();
  float dtdx() const;
  void set_dtdx(float value);

  // float dsdy = 3;
  void clear_dsdy();
  float dsdy() const;
  void set_dsdy(float value);

  // float dtdy = 4;
  void clear_dtdy();
  float dtdy() const;
  void set_dtdy(float value);

  // int32 type = 5;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:android.surfaceflinger.TransformProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  float dsdx_;
  float dtdx_;
  float dsdy_;
  float dtdy_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_frameworks_2fnative_2fservices_2fsurfaceflinger_2flayerproto_2fcommon_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RectProto

// int32 left = 1;
inline void RectProto::clear_left() {
  left_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RectProto::left() const {
  // @@protoc_insertion_point(field_get:android.surfaceflinger.RectProto.left)
  return left_;
}
inline void RectProto::set_left(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  left_ = value;
  // @@protoc_insertion_point(field_set:android.surfaceflinger.RectProto.left)
}

// int32 top = 2;
inline void RectProto::clear_top() {
  top_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RectProto::top() const {
  // @@protoc_insertion_point(field_get:android.surfaceflinger.RectProto.top)
  return top_;
}
inline void RectProto::set_top(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  top_ = value;
  // @@protoc_insertion_point(field_set:android.surfaceflinger.RectProto.top)
}

// int32 right = 3;
inline void RectProto::clear_right() {
  right_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RectProto::right() const {
  // @@protoc_insertion_point(field_get:android.surfaceflinger.RectProto.right)
  return right_;
}
inline void RectProto::set_right(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  right_ = value;
  // @@protoc_insertion_point(field_set:android.surfaceflinger.RectProto.right)
}

// int32 bottom = 4;
inline void RectProto::clear_bottom() {
  bottom_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RectProto::bottom() const {
  // @@protoc_insertion_point(field_get:android.surfaceflinger.RectProto.bottom)
  return bottom_;
}
inline void RectProto::set_bottom(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bottom_ = value;
  // @@protoc_insertion_point(field_set:android.surfaceflinger.RectProto.bottom)
}

// -------------------------------------------------------------------

// SizeProto

// int32 w = 1;
inline void SizeProto::clear_w() {
  w_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SizeProto::w() const {
  // @@protoc_insertion_point(field_get:android.surfaceflinger.SizeProto.w)
  return w_;
}
inline void SizeProto::set_w(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:android.surfaceflinger.SizeProto.w)
}

// int32 h = 2;
inline void SizeProto::clear_h() {
  h_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SizeProto::h() const {
  // @@protoc_insertion_point(field_get:android.surfaceflinger.SizeProto.h)
  return h_;
}
inline void SizeProto::set_h(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  h_ = value;
  // @@protoc_insertion_point(field_set:android.surfaceflinger.SizeProto.h)
}

// -------------------------------------------------------------------

// TransformProto

// float dsdx = 1;
inline void TransformProto::clear_dsdx() {
  dsdx_ = 0;
}
inline float TransformProto::dsdx() const {
  // @@protoc_insertion_point(field_get:android.surfaceflinger.TransformProto.dsdx)
  return dsdx_;
}
inline void TransformProto::set_dsdx(float value) {
  
  dsdx_ = value;
  // @@protoc_insertion_point(field_set:android.surfaceflinger.TransformProto.dsdx)
}

// float dtdx = 2;
inline void TransformProto::clear_dtdx() {
  dtdx_ = 0;
}
inline float TransformProto::dtdx() const {
  // @@protoc_insertion_point(field_get:android.surfaceflinger.TransformProto.dtdx)
  return dtdx_;
}
inline void TransformProto::set_dtdx(float value) {
  
  dtdx_ = value;
  // @@protoc_insertion_point(field_set:android.surfaceflinger.TransformProto.dtdx)
}

// float dsdy = 3;
inline void TransformProto::clear_dsdy() {
  dsdy_ = 0;
}
inline float TransformProto::dsdy() const {
  // @@protoc_insertion_point(field_get:android.surfaceflinger.TransformProto.dsdy)
  return dsdy_;
}
inline void TransformProto::set_dsdy(float value) {
  
  dsdy_ = value;
  // @@protoc_insertion_point(field_set:android.surfaceflinger.TransformProto.dsdy)
}

// float dtdy = 4;
inline void TransformProto::clear_dtdy() {
  dtdy_ = 0;
}
inline float TransformProto::dtdy() const {
  // @@protoc_insertion_point(field_get:android.surfaceflinger.TransformProto.dtdy)
  return dtdy_;
}
inline void TransformProto::set_dtdy(float value) {
  
  dtdy_ = value;
  // @@protoc_insertion_point(field_set:android.surfaceflinger.TransformProto.dtdy)
}

// int32 type = 5;
inline void TransformProto::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TransformProto::type() const {
  // @@protoc_insertion_point(field_get:android.surfaceflinger.TransformProto.type)
  return type_;
}
inline void TransformProto::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:android.surfaceflinger.TransformProto.type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace surfaceflinger
}  // namespace android

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_frameworks_2fnative_2fservices_2fsurfaceflinger_2flayerproto_2fcommon_2eproto
