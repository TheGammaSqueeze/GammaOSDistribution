// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/proto_logging/stats/atom_field_options.proto

#include "frameworks/proto_logging/stats/atom_field_options.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateAtomFieldOption_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto;
namespace android {
namespace os {
namespace statsd {
class StateAtomFieldOptionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateAtomFieldOption> _instance;
} _StateAtomFieldOption_default_instance_;
}  // namespace statsd
}  // namespace os
}  // namespace android
static void InitDefaultsscc_info_StateAtomFieldOption_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::android::os::statsd::_StateAtomFieldOption_default_instance_;
    new (ptr) ::android::os::statsd::StateAtomFieldOption();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::android::os::statsd::StateAtomFieldOption::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateAtomFieldOption_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_StateAtomFieldOption_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto[1];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::android::os::statsd::StateAtomFieldOption, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::android::os::statsd::StateAtomFieldOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::android::os::statsd::StateAtomFieldOption, primary_field_),
  PROTOBUF_FIELD_OFFSET(::android::os::statsd::StateAtomFieldOption, exclusive_state_),
  PROTOBUF_FIELD_OFFSET(::android::os::statsd::StateAtomFieldOption, primary_field_first_uid_),
  PROTOBUF_FIELD_OFFSET(::android::os::statsd::StateAtomFieldOption, default_state_value_),
  PROTOBUF_FIELD_OFFSET(::android::os::statsd::StateAtomFieldOption, trigger_state_reset_value_),
  PROTOBUF_FIELD_OFFSET(::android::os::statsd::StateAtomFieldOption, nested_),
  0,
  1,
  2,
  3,
  4,
  5,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::android::os::statsd::StateAtomFieldOption)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::android::os::statsd::_StateAtomFieldOption_default_instance_),
};

const char descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n7frameworks/proto_logging/stats/atom_fi"
  "eld_options.proto\022\021android.os.statsd\032 go"
  "ogle/protobuf/descriptor.proto\"\322\001\n\024State"
  "AtomFieldOption\022\034\n\rprimary_field\030\001 \001(\010:\005"
  "false\022\036\n\017exclusive_state\030\002 \001(\010:\005false\022&\n"
  "\027primary_field_first_uid\030\003 \001(\010:\005false\022\033\n"
  "\023default_state_value\030\004 \001(\005\022!\n\031trigger_st"
  "ate_reset_value\030\005 \001(\005\022\024\n\006nested\030\006 \001(\010:\004t"
  "rue*=\n\007LogMode\022\016\n\nMODE_UNSET\020\000\022\022\n\016MODE_A"
  "UTOMATIC\020\001\022\016\n\nMODE_BYTES\020\002:d\n\022state_fiel"
  "d_option\022\035.google.protobuf.FieldOptions\030"
  "\320\206\003 \001(\0132\'.android.os.statsd.StateAtomFie"
  "ldOption:6\n\006is_uid\022\035.google.protobuf.Fie"
  "ldOptions\030\321\206\003 \001(\010:\005false:]\n\010log_mode\022\035.g"
  "oogle.protobuf.FieldOptions\030\322\206\003 \001(\0162\032.an"
  "droid.os.statsd.LogMode:\016MODE_AUTOMATIC:"
  "/\n\006module\022\035.google.protobuf.FieldOptions"
  "\030\324\206\003 \003(\t:B\n\022truncate_timestamp\022\035.google."
  "protobuf.FieldOptions\030\325\206\003 \001(\010:\005falseB$\n\016"
  "com.android.osB\020AtomFieldOptionsP\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto_sccs[1] = {
  &scc_info_StateAtomFieldOption_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto_once;
static bool descriptor_table_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto = {
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto_initialized, descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto, "frameworks/proto_logging/stats/atom_field_options.proto", 794,
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto_once, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto_sccs, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto::offsets,
  file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto, 1, file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto, file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto), true);
namespace android {
namespace os {
namespace statsd {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LogMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto[0];
}
bool LogMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void StateAtomFieldOption::InitAsDefaultInstance() {
}
class StateAtomFieldOption::_Internal {
 public:
  using HasBits = decltype(std::declval<StateAtomFieldOption>()._has_bits_);
  static void set_has_primary_field(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_exclusive_state(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_primary_field_first_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default_state_value(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_trigger_state_reset_value(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_nested(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

StateAtomFieldOption::StateAtomFieldOption()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:android.os.statsd.StateAtomFieldOption)
}
StateAtomFieldOption::StateAtomFieldOption(const StateAtomFieldOption& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&primary_field_, &from.primary_field_,
    static_cast<size_t>(reinterpret_cast<char*>(&nested_) -
    reinterpret_cast<char*>(&primary_field_)) + sizeof(nested_));
  // @@protoc_insertion_point(copy_constructor:android.os.statsd.StateAtomFieldOption)
}

void StateAtomFieldOption::SharedCtor() {
  ::memset(&primary_field_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trigger_state_reset_value_) -
      reinterpret_cast<char*>(&primary_field_)) + sizeof(trigger_state_reset_value_));
  nested_ = true;
}

StateAtomFieldOption::~StateAtomFieldOption() {
  // @@protoc_insertion_point(destructor:android.os.statsd.StateAtomFieldOption)
  SharedDtor();
}

void StateAtomFieldOption::SharedDtor() {
}

void StateAtomFieldOption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StateAtomFieldOption& StateAtomFieldOption::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StateAtomFieldOption_frameworks_2fproto_5flogging_2fstats_2fatom_5ffield_5foptions_2eproto.base);
  return *internal_default_instance();
}


void StateAtomFieldOption::Clear() {
// @@protoc_insertion_point(message_clear_start:android.os.statsd.StateAtomFieldOption)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&primary_field_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&trigger_state_reset_value_) -
        reinterpret_cast<char*>(&primary_field_)) + sizeof(trigger_state_reset_value_));
    nested_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StateAtomFieldOption::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool primary_field = 1 [default = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_primary_field(&has_bits);
          primary_field_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool exclusive_state = 2 [default = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_exclusive_state(&has_bits);
          exclusive_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool primary_field_first_uid = 3 [default = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_primary_field_first_uid(&has_bits);
          primary_field_first_uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 default_state_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_default_state_value(&has_bits);
          default_state_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 trigger_state_reset_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_trigger_state_reset_value(&has_bits);
          trigger_state_reset_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool nested = 6 [default = true];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_nested(&has_bits);
          nested_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StateAtomFieldOption::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:android.os.statsd.StateAtomFieldOption)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool primary_field = 1 [default = false];
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_primary_field(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &primary_field_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool exclusive_state = 2 [default = false];
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          _Internal::set_has_exclusive_state(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &exclusive_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool primary_field_first_uid = 3 [default = false];
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          _Internal::set_has_primary_field_first_uid(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &primary_field_first_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 default_state_value = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          _Internal::set_has_default_state_value(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &default_state_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 trigger_state_reset_value = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          _Internal::set_has_trigger_state_reset_value(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &trigger_state_reset_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool nested = 6 [default = true];
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {
          _Internal::set_has_nested(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &nested_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:android.os.statsd.StateAtomFieldOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:android.os.statsd.StateAtomFieldOption)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StateAtomFieldOption::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:android.os.statsd.StateAtomFieldOption)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool primary_field = 1 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->primary_field(), output);
  }

  // optional bool exclusive_state = 2 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->exclusive_state(), output);
  }

  // optional bool primary_field_first_uid = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->primary_field_first_uid(), output);
  }

  // optional int32 default_state_value = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->default_state_value(), output);
  }

  // optional int32 trigger_state_reset_value = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->trigger_state_reset_value(), output);
  }

  // optional bool nested = 6 [default = true];
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(6, this->nested(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:android.os.statsd.StateAtomFieldOption)
}

::PROTOBUF_NAMESPACE_ID::uint8* StateAtomFieldOption::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:android.os.statsd.StateAtomFieldOption)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool primary_field = 1 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->primary_field(), target);
  }

  // optional bool exclusive_state = 2 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->exclusive_state(), target);
  }

  // optional bool primary_field_first_uid = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->primary_field_first_uid(), target);
  }

  // optional int32 default_state_value = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->default_state_value(), target);
  }

  // optional int32 trigger_state_reset_value = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->trigger_state_reset_value(), target);
  }

  // optional bool nested = 6 [default = true];
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->nested(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:android.os.statsd.StateAtomFieldOption)
  return target;
}

size_t StateAtomFieldOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:android.os.statsd.StateAtomFieldOption)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional bool primary_field = 1 [default = false];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool exclusive_state = 2 [default = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool primary_field_first_uid = 3 [default = false];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional int32 default_state_value = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->default_state_value());
    }

    // optional int32 trigger_state_reset_value = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->trigger_state_reset_value());
    }

    // optional bool nested = 6 [default = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateAtomFieldOption::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:android.os.statsd.StateAtomFieldOption)
  GOOGLE_DCHECK_NE(&from, this);
  const StateAtomFieldOption* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StateAtomFieldOption>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:android.os.statsd.StateAtomFieldOption)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:android.os.statsd.StateAtomFieldOption)
    MergeFrom(*source);
  }
}

void StateAtomFieldOption::MergeFrom(const StateAtomFieldOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:android.os.statsd.StateAtomFieldOption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      primary_field_ = from.primary_field_;
    }
    if (cached_has_bits & 0x00000002u) {
      exclusive_state_ = from.exclusive_state_;
    }
    if (cached_has_bits & 0x00000004u) {
      primary_field_first_uid_ = from.primary_field_first_uid_;
    }
    if (cached_has_bits & 0x00000008u) {
      default_state_value_ = from.default_state_value_;
    }
    if (cached_has_bits & 0x00000010u) {
      trigger_state_reset_value_ = from.trigger_state_reset_value_;
    }
    if (cached_has_bits & 0x00000020u) {
      nested_ = from.nested_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StateAtomFieldOption::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:android.os.statsd.StateAtomFieldOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateAtomFieldOption::CopyFrom(const StateAtomFieldOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:android.os.statsd.StateAtomFieldOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateAtomFieldOption::IsInitialized() const {
  return true;
}

void StateAtomFieldOption::InternalSwap(StateAtomFieldOption* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(primary_field_, other->primary_field_);
  swap(exclusive_state_, other->exclusive_state_);
  swap(primary_field_first_uid_, other->primary_field_first_uid_);
  swap(default_state_value_, other->default_state_value_);
  swap(trigger_state_reset_value_, other->trigger_state_reset_value_);
  swap(nested_, other->nested_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StateAtomFieldOption::GetMetadata() const {
  return GetMetadataStatic();
}

::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::android::os::statsd::StateAtomFieldOption >, 11, false >
  state_field_option(kStateFieldOptionFieldNumber, *::android::os::statsd::StateAtomFieldOption::internal_default_instance());
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  is_uid(kIsUidFieldNumber, false);
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::EnumTypeTraits< ::android::os::statsd::LogMode, ::android::os::statsd::LogMode_IsValid>, 14, false >
  log_mode(kLogModeFieldNumber, static_cast< ::android::os::statsd::LogMode >(1));
const std::string module_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::RepeatedStringTypeTraits, 9, false >
  module(kModuleFieldNumber, module_default);
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  truncate_timestamp(kTruncateTimestampFieldNumber, false);

// @@protoc_insertion_point(namespace_scope)
}  // namespace statsd
}  // namespace os
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::android::os::statsd::StateAtomFieldOption* Arena::CreateMaybeMessage< ::android::os::statsd::StateAtomFieldOption >(Arena* arena) {
  return Arena::CreateInternal< ::android::os::statsd::StateAtomFieldOption >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
