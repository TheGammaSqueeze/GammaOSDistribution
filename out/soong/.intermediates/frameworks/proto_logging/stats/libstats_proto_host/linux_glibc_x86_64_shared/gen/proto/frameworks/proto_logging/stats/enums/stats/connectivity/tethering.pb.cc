// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/proto_logging/stats/enums/stats/connectivity/tethering.proto

#include "frameworks/proto_logging/stats/enums/stats/connectivity/tethering.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace android {
namespace stats {
namespace connectivity {
}  // namespace connectivity
}  // namespace stats
}  // namespace android
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nGframeworks/proto_logging/stats/enums/s"
  "tats/connectivity/tethering.proto\022\032andro"
  "id.stats.connectivity*\320\003\n\tErrorCode\022\017\n\013E"
  "C_NO_ERROR\020\000\022\024\n\020EC_UNKNOWN_IFACE\020\001\022\026\n\022EC"
  "_SERVICE_UNAVAIL\020\002\022\022\n\016EC_UNSUPPORTED\020\003\022\024"
  "\n\020EC_UNAVAIL_IFACE\020\004\022\025\n\021EC_INTERNAL_ERRO"
  "R\020\005\022\031\n\025EC_TETHER_IFACE_ERROR\020\006\022\033\n\027EC_UNT"
  "ETHER_IFACE_ERROR\020\007\022\036\n\032EC_ENABLE_FORWARD"
  "ING_ERROR\020\010\022\037\n\033EC_DISABLE_FORWARDING_ERR"
  "OR\020\t\022\026\n\022EC_IFACE_CFG_ERROR\020\n\022\032\n\026EC_PROVI"
  "SIONING_FAILED\020\013\022\027\n\023EC_DHCPSERVER_ERROR\020"
  "\014\022\032\n\026EC_ENTITLEMENT_UNKNOWN\020\r\022%\n!EC_NO_C"
  "HANGE_TETHERING_PERMISSION\020\016\022%\n!EC_NO_AC"
  "CESS_TETHERING_PERMISSION\020\017\022\023\n\017EC_UNKNOW"
  "N_TYPE\020\020*\271\001\n\016DownstreamType\022\022\n\016DS_UNSPEC"
  "IFIED\020\000\022\025\n\021DS_TETHERING_WIFI\020\001\022\024\n\020DS_TET"
  "HERING_USB\020\002\022\032\n\026DS_TETHERING_BLUETOOTH\020\003"
  "\022\031\n\025DS_TETHERING_WIFI_P2P\020\004\022\024\n\020DS_TETHER"
  "ING_NCM\020\005\022\031\n\025DS_TETHERING_ETHERNET\020\006*\216\002\n"
  "\014UpstreamType\022\016\n\nUT_UNKNOWN\020\000\022\017\n\013UT_CELL"
  "ULAR\020\001\022\013\n\007UT_WIFI\020\002\022\020\n\014UT_BLUETOOTH\020\003\022\017\n"
  "\013UT_ETHERNET\020\004\022\021\n\rUT_WIFI_AWARE\020\005\022\r\n\tUT_"
  "LOWPAN\020\006\022\023\n\017UT_CELLULAR_VPN\020\007\022\017\n\013UT_WIFI"
  "_VPN\020\010\022\024\n\020UT_BLUETOOTH_VPN\020\t\022\023\n\017UT_ETHER"
  "NET_VPN\020\n\022\030\n\024UT_WIFI_CELLULAR_VPN\020\013\022\013\n\007U"
  "T_TEST\020\014\022\023\n\017UT_DUN_CELLULAR\020\r*P\n\010UserTyp"
  "e\022\020\n\014USER_UNKNOWN\020\000\022\021\n\rUSER_SETTINGS\020\001\022\021"
  "\n\rUSER_SYSTEMUI\020\002\022\014\n\010USER_GMS\020\003B\022B\016Tethe"
  "ringProtoP\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto_once;
static bool descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto = {
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto_initialized, descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto, "frameworks/proto_logging/stats/enums/stats/connectivity/tethering.proto", 1131,
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto_once, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto_sccs, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto::offsets,
  file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto, 0, file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto, file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto), true);
namespace android {
namespace stats {
namespace connectivity {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ErrorCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto[0];
}
bool ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DownstreamType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto[1];
}
bool DownstreamType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UpstreamType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto[2];
}
bool UpstreamType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UserType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fconnectivity_2ftethering_2eproto[3];
}
bool UserType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace connectivity
}  // namespace stats
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
