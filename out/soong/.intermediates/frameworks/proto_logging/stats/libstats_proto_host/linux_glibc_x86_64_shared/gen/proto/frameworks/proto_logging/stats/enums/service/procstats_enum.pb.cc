// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/proto_logging/stats/enums/service/procstats_enum.proto

#include "frameworks/proto_logging/stats/enums/service/procstats_enum.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace android {
namespace service {
namespace procstats {
}  // namespace procstats
}  // namespace service
}  // namespace android
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nAframeworks/proto_logging/stats/enums/s"
  "ervice/procstats_enum.proto\022\031android.ser"
  "vice.procstats*R\n\013ScreenState\022\030\n\024SCREEN_"
  "STATE_UNKNOWN\020\000\022\024\n\020SCREEN_STATE_OFF\020\001\022\023\n"
  "\017SCREEN_STATE_ON\020\002*\214\001\n\013MemoryState\022\030\n\024ME"
  "MORY_STATE_UNKNOWN\020\000\022\027\n\023MEMORY_STATE_NOR"
  "MAL\020\001\022\031\n\025MEMORY_STATE_MODERATE\020\002\022\024\n\020MEMO"
  "RY_STATE_LOW\020\003\022\031\n\025MEMORY_STATE_CRITICAL\020"
  "\004*\246\004\n\014ProcessState\022\031\n\025PROCESS_STATE_UNKN"
  "OWN\020\000\022\034\n\030PROCESS_STATE_PERSISTENT\020\001\022\025\n\021P"
  "ROCESS_STATE_TOP\020\002\022\"\n\036PROCESS_STATE_BOUN"
  "D_TOP_OR_FGS\020\017\022\025\n\021PROCESS_STATE_FGS\020\020\022&\n"
  "\"PROCESS_STATE_IMPORTANT_FOREGROUND\020\003\022&\n"
  "\"PROCESS_STATE_IMPORTANT_BACKGROUND\020\004\022\030\n"
  "\024PROCESS_STATE_BACKUP\020\005\022\031\n\025PROCESS_STATE"
  "_SERVICE\020\006\022$\n PROCESS_STATE_SERVICE_REST"
  "ARTING\020\007\022\032\n\026PROCESS_STATE_RECEIVER\020\010\022\036\n\032"
  "PROCESS_STATE_HEAVY_WEIGHT\020\t\022\026\n\022PROCESS_"
  "STATE_HOME\020\n\022\037\n\033PROCESS_STATE_LAST_ACTIV"
  "ITY\020\013\022!\n\035PROCESS_STATE_CACHED_ACTIVITY\020\014"
  "\022(\n$PROCESS_STATE_CACHED_ACTIVITY_CLIENT"
  "\020\r\022\036\n\032PROCESS_STATE_CACHED_EMPTY\020\016*\370\001\n\025S"
  "erviceOperationState\022#\n\037SERVICE_OPERATIO"
  "N_STATE_UNKNOWN\020\000\022#\n\037SERVICE_OPERATION_S"
  "TATE_RUNNING\020\001\022#\n\037SERVICE_OPERATION_STAT"
  "E_STARTED\020\002\022&\n\"SERVICE_OPERATION_STATE_F"
  "OREGROUND\020\003\022!\n\035SERVICE_OPERATION_STATE_B"
  "OUND\020\004\022%\n!SERVICE_OPERATION_STATE_EXECUT"
  "ING\020\005*\202\003\n\026AggregatedProcessState\022$\n AGGR"
  "EGATED_PROCESS_STATE_UNKNOWN\020\000\022\'\n#AGGREG"
  "ATED_PROCESS_STATE_PERSISTENT\020\001\022 \n\034AGGRE"
  "GATED_PROCESS_STATE_TOP\020\002\022-\n)AGGREGATED_"
  "PROCESS_STATE_BOUND_TOP_OR_FGS\020\003\022 \n\034AGGR"
  "EGATED_PROCESS_STATE_FGS\020\004\0221\n-AGGREGATED"
  "_PROCESS_STATE_IMPORTANT_FOREGROUND\020\005\022\'\n"
  "#AGGREGATED_PROCESS_STATE_BACKGROUND\020\006\022%"
  "\n!AGGREGATED_PROCESS_STATE_RECEIVER\020\007\022#\n"
  "\037AGGREGATED_PROCESS_STATE_CACHED\020\010B\025B\021Pr"
  "ocessStatsEnumsP\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto_once;
static bool descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto = {
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto_initialized, descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto, "frameworks/proto_logging/stats/enums/service/procstats_enum.proto", 1537,
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto_once, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto_sccs, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto::offsets,
  file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto, 0, file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto, file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto), true);
namespace android {
namespace service {
namespace procstats {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ScreenState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto[0];
}
bool ScreenState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MemoryState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto[1];
}
bool MemoryState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProcessState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto[2];
}
bool ProcessState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ServiceOperationState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto[3];
}
bool ServiceOperationState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AggregatedProcessState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fservice_2fprocstats_5fenum_2eproto[4];
}
bool AggregatedProcessState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace procstats
}  // namespace service
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
