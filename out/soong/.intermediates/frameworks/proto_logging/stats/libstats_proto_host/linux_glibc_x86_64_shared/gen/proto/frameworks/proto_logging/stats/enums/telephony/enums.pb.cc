// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/proto_logging/stats/enums/telephony/enums.proto

#include "frameworks/proto_logging/stats/enums/telephony/enums.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace android {
namespace telephony {
}  // namespace telephony
}  // namespace android
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[24];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n:frameworks/proto_logging/stats/enums/t"
  "elephony/enums.proto\022\021android.telephony*"
  "R\n\016CallBearerEnum\022\027\n\023CALL_BEARER_UNKNOWN"
  "\020\000\022\022\n\016CALL_BEARER_CS\020\001\022\023\n\017CALL_BEARER_IM"
  "S\020\002*]\n\021CallDirectionEnum\022\032\n\026CALL_DIRECTI"
  "ON_UNKNOWN\020\000\022\025\n\021CALL_DIRECTION_MO\020\001\022\025\n\021C"
  "ALL_DIRECTION_MT\020\002*\362\002\n\025CallSetupDuration"
  "Enum\022\037\n\033CALL_SETUP_DURATION_UNKNOWN\020\000\022&\n"
  "\"CALL_SETUP_DURATION_EXTREMELY_FAST\020\001\022\"\n"
  "\036CALL_SETUP_DURATION_ULTRA_FAST\020\002\022!\n\035CAL"
  "L_SETUP_DURATION_VERY_FAST\020\003\022\034\n\030CALL_SET"
  "UP_DURATION_FAST\020\004\022\036\n\032CALL_SETUP_DURATIO"
  "N_NORMAL\020\005\022\034\n\030CALL_SETUP_DURATION_SLOW\020\006"
  "\022!\n\035CALL_SETUP_DURATION_VERY_SLOW\020\007\022\"\n\036C"
  "ALL_SETUP_DURATION_ULTRA_SLOW\020\010\022&\n\"CALL_"
  "SETUP_DURATION_EXTREMELY_SLOW\020\t*\276\001\n\034Data"
  "ConnectionPowerStateEnum\022#\n\037DATA_CONNECT"
  "ION_POWER_STATE_LOW\020\001\022&\n\"DATA_CONNECTION"
  "_POWER_STATE_MEDIUM\020\002\022$\n DATA_CONNECTION"
  "_POWER_STATE_HIGH\020\003\022+\n#DATA_CONNECTION_P"
  "OWER_STATE_UNKNOWN\020\377\377\377\377\007*\205\004\n\017NetworkType"
  "Enum\022\030\n\024NETWORK_TYPE_UNKNOWN\020\000\022\025\n\021NETWOR"
  "K_TYPE_GPRS\020\001\022\025\n\021NETWORK_TYPE_EDGE\020\002\022\025\n\021"
  "NETWORK_TYPE_UMTS\020\003\022\025\n\021NETWORK_TYPE_CDMA"
  "\020\004\022\027\n\023NETWORK_TYPE_EVDO_0\020\005\022\027\n\023NETWORK_T"
  "YPE_EVDO_A\020\006\022\026\n\022NETWORK_TYPE_1XRTT\020\007\022\026\n\022"
  "NETWORK_TYPE_HSDPA\020\010\022\026\n\022NETWORK_TYPE_HSU"
  "PA\020\t\022\025\n\021NETWORK_TYPE_HSPA\020\n\022\025\n\021NETWORK_T"
  "YPE_IDEN\020\013\022\027\n\023NETWORK_TYPE_EVDO_B\020\014\022\024\n\020N"
  "ETWORK_TYPE_LTE\020\r\022\026\n\022NETWORK_TYPE_EHRPD\020"
  "\016\022\026\n\022NETWORK_TYPE_HSPAP\020\017\022\024\n\020NETWORK_TYP"
  "E_GSM\020\020\022\031\n\025NETWORK_TYPE_TD_SCDMA\020\021\022\026\n\022NE"
  "TWORK_TYPE_IWLAN\020\022\022\027\n\023NETWORK_TYPE_LTE_C"
  "A\020\023\022\023\n\017NETWORK_TYPE_NR\020\024*\224\001\n\017RoamingType"
  "Enum\022\034\n\030ROAMING_TYPE_NOT_ROAMING\020\000\022\030\n\024RO"
  "AMING_TYPE_ROAMING\020\001\022!\n\035ROAMING_TYPE_ROA"
  "MING_DOMESTIC\020\002\022&\n\"ROAMING_TYPE_ROAMING_"
  "INTERNATIONAL\020\003*\246\001\n\022SignalStrengthEnum\022#"
  "\n\037SIGNAL_STRENGTH_NONE_OR_UNKNOWN\020\000\022\030\n\024S"
  "IGNAL_STRENGTH_POOR\020\001\022\034\n\030SIGNAL_STRENGTH"
  "_MODERATE\020\002\022\030\n\024SIGNAL_STRENGTH_GOOD\020\003\022\031\n"
  "\025SIGNAL_STRENGTH_GREAT\020\004*\221\001\n\020ServiceStat"
  "eEnum\022\034\n\030SERVICE_STATE_IN_SERVICE\020\000\022 \n\034S"
  "ERVICE_STATE_OUT_OF_SERVICE\020\001\022 \n\034SERVICE"
  "_STATE_EMERGENCY_ONLY\020\002\022\033\n\027SERVICE_STATE"
  "_POWER_OFF\020\003*\305\002\n\014SimStateEnum\022\025\n\021SIM_STA"
  "TE_UNKNOWN\020\000\022\024\n\020SIM_STATE_ABSENT\020\001\022\032\n\026SI"
  "M_STATE_PIN_REQUIRED\020\002\022\032\n\026SIM_STATE_PUK_"
  "REQUIRED\020\003\022\034\n\030SIM_STATE_NETWORK_LOCKED\020\004"
  "\022\023\n\017SIM_STATE_READY\020\005\022\027\n\023SIM_STATE_NOT_R"
  "EADY\020\006\022\033\n\027SIM_STATE_PERM_DISABLED\020\007\022\033\n\027S"
  "IM_STATE_CARD_IO_ERROR\020\010\022\035\n\031SIM_STATE_CA"
  "RD_RESTRICTED\020\t\022\024\n\020SIM_STATE_LOADED\020\n\022\025\n"
  "\021SIM_STATE_PRESENT\020\013*R\n\rSmsFormatEnum\022\026\n"
  "\022SMS_FORMAT_UNKNOWN\020\000\022\023\n\017SMS_FORMAT_3GPP"
  "\020\001\022\024\n\020SMS_FORMAT_3GPP2\020\002*b\n\013SmsTechEnum\022"
  "\024\n\020SMS_TECH_UNKNOWN\020\000\022\024\n\020SMS_TECH_CS_3GP"
  "P\020\001\022\025\n\021SMS_TECH_CS_3GPP2\020\002\022\020\n\014SMS_TECH_I"
  "MS\020\003*\204\001\n\013SmsTypeEnum\022\023\n\017SMS_TYPE_NORMAL\020"
  "\000\022\023\n\017SMS_TYPE_SMS_PP\020\001\022!\n\035SMS_TYPE_VOICE"
  "MAIL_INDICATION\020\002\022\021\n\rSMS_TYPE_ZERO\020\003\022\025\n\021"
  "SMS_TYPE_WAP_PUSH\020\004*t\n\024SmsIncomingErrorE"
  "num\022\017\n\013SMS_SUCCESS\020\000\022\025\n\021SMS_ERROR_GENERI"
  "C\020\001\022\027\n\023SMS_ERROR_NO_MEMORY\020\002\022\033\n\027SMS_ERRO"
  "R_NOT_SUPPORTED\020\003*\255\001\n\021SmsSendResultEnum\022"
  "\033\n\027SMS_SEND_RESULT_UNKNOWN\020\000\022\033\n\027SMS_SEND"
  "_RESULT_SUCCESS\020\001\022\031\n\025SMS_SEND_RESULT_ERR"
  "OR\020\002\022\037\n\033SMS_SEND_RESULT_ERROR_RETRY\020\003\022\"\n"
  "\036SMS_SEND_RESULT_ERROR_FALLBACK\020\004*\310\001\n\017Da"
  "taProfileEnum\022\030\n\024DATA_PROFILE_DEFAULT\020\000\022"
  "\031\n\025DATA_PROFILE_TETHERED\020\001\022\024\n\020DATA_PROFI"
  "LE_IMS\020\002\022\025\n\021DATA_PROFILE_FOTA\020\003\022\024\n\020DATA_"
  "PROFILE_CBS\020\004\022\032\n\025DATA_PROFILE_OEM_BASE\020\350"
  "\007\022!\n\024DATA_PROFILE_INVALID\020\377\377\377\377\377\377\377\377\377\001*\230\001\n"
  "\030DataDeactivateReasonEnum\022\035\n\031DEACTIVATE_"
  "REASON_UNKNOWN\020\000\022\034\n\030DEACTIVATE_REASON_NO"
  "RMAL\020\001\022\037\n\033DEACTIVATE_REASON_RADIO_OFF\020\002\022"
  "\036\n\032DEACTIVATE_REASON_HANDOVER\020\003*n\n\017ApnPr"
  "otocolEnum\022\025\n\021APN_PROTOCOL_IPV4\020\000\022\025\n\021APN"
  "_PROTOCOL_IPV6\020\001\022\027\n\023APN_PROTOCOL_IPV4V6\020"
  "\002\022\024\n\020APN_PROTOCOL_PPP\020\003*\245\001\n\033DataStallRec"
  "overyActionEnum\022&\n\"RECOVERY_ACTION_GET_D"
  "ATA_CALL_LIST\020\000\022\033\n\027RECOVERY_ACTION_CLEAN"
  "UP\020\001\022\036\n\032RECOVERY_ACTION_REREGISTER\020\002\022!\n\035"
  "RECOVERY_ACTION_RADIO_RESTART\020\003*\241\001\n\014Code"
  "cQuality\022\031\n\025CODEC_QUALITY_UNKNOWN\020\000\022\034\n\030C"
  "ODEC_QUALITY_NARROWBAND\020\001\022\032\n\026CODEC_QUALI"
  "TY_WIDEBAND\020\002\022 \n\034CODEC_QUALITY_SUPER_WID"
  "EBAND\020\003\022\032\n\026CODEC_QUALITY_FULLBAND\020\004*\260\001\n "
  "SimSpecfifcSettingsRestoreResult\022\036\n\032SIM_"
  "RESTORE_RESULT_UNKNOWN\020\000\022\036\n\032SIM_RESTORE_"
  "RESULT_SUCCESS\020\001\022!\n\035SIM_RESTORE_RESULT_N"
  "ONE_MATCH\020\002\022)\n%SIM_RESTORE_RESULT_ZERO_S"
  "IM_IN_BACKUP\020\003*\206\001\n\036SimSpecificSettingsRe"
  "storeCase\022\'\n#SIM_RESTORE_CASE_UNDEFINED_"
  "USE_CASE\020\000\022\030\n\024SIM_RESTORE_CASE_SUW\020\001\022!\n\035"
  "SIM_RESTORE_CASE_SIM_INSERTED\020\002*\230\002\n*SimS"
  "pecificSettingsRestoreMatchingCriteria\022\'"
  "\n#SIM_RESTORE_MATCHING_CRITERIA_UNSET\020\000\022"
  "&\n\"SIM_RESTORE_MATCHING_CRITERIA_NONE\020\001\022"
  "\'\n#SIM_RESTORE_MATCHING_CRITERIA_ICCID\020\002"
  "\022=\n9SIM_RESTORE_MATCHING_CRITERIA_CARRIE"
  "R_ID_AND_PHONE_NUMBER\020\003\0221\n-SIM_RESTORE_M"
  "ATCHING_CRITERIA_CARRIER_ID_ONLY\020\004*\246\006\n\rI"
  "msFeatureTag\022\037\n\033IMS_FEATURE_TAG_UNSPECIF"
  "IED\020\000\022\032\n\026IMS_FEATURE_TAG_CUSTOM\020\001\022\"\n\036IMS"
  "_FEATURE_TAG_STANDALONE_MSG\020\002\022\033\n\027IMS_FEA"
  "TURE_TAG_CHAT_IM\020\003\022 \n\034IMS_FEATURE_TAG_CH"
  "AT_SESSION\020\004\022!\n\035IMS_FEATURE_TAG_FILE_TRA"
  "NSFER\020\005\022)\n%IMS_FEATURE_TAG_FILE_TRANSFER"
  "_VIA_SMS\020\006\0222\n.IMS_FEATURE_TAG_CALL_COMPO"
  "SER_ENRICHED_CALLING\020\007\022/\n+IMS_FEATURE_TA"
  "G_CALL_COMPOSER_VIA_TELEPHONY\020\010\022\035\n\031IMS_F"
  "EATURE_TAG_POST_CALL\020\t\022\036\n\032IMS_FEATURE_TA"
  "G_SHARED_MAP\020\n\022!\n\035IMS_FEATURE_TAG_SHARED"
  "_SKETCH\020\013\022\034\n\030IMS_FEATURE_TAG_GEO_PUSH\020\014\022"
  "$\n IMS_FEATURE_TAG_GEO_PUSH_VIA_SMS\020\r\0227\n"
  "3IMS_FEATURE_TAG_CHATBOT_COMMUNICATION_U"
  "SING_SESSION\020\016\022>\n:IMS_FEATURE_TAG_CHATBO"
  "T_COMMUNICATION_USING_STANDALONE_MSG\020\017\022-"
  "\n)IMS_FEATURE_TAG_CHATBOT_VERSION_SUPPOR"
  "TED\020\020\022 \n\034IMS_FEATURE_TAG_CHATBOT_ROLE\020\021\022"
  "\031\n\025IMS_FEATURE_TAG_MMTEL\020\022\022\031\n\025IMS_FEATUR"
  "E_TAG_VIDEO\020\023\022\034\n\030IMS_FEATURE_TAG_PRESENC"
  "E\020\024*\231\003\n\024SipRequestMethodType\022\033\n\027SIP_REQU"
  "EST_UNSPECIFIED\020\000\022\026\n\022SIP_REQUEST_CUSTOM\020"
  "\001\022\026\n\022SIP_REQUEST_INVITE\020\002\022\023\n\017SIP_REQUEST"
  "_ACK\020\003\022\027\n\023SIP_REQUEST_OPTIONS\020\004\022\023\n\017SIP_R"
  "EQUEST_BYE\020\005\022\026\n\022SIP_REQUEST_CANCEL\020\006\022\030\n\024"
  "SIP_REQUEST_REGISTER\020\007\022\025\n\021SIP_REQUEST_PR"
  "ACK\020\010\022\031\n\025SIP_REQUEST_SUBSCRIBE\020\t\022\026\n\022SIP_"
  "REQUEST_NOTIFY\020\n\022\027\n\023SIP_REQUEST_PUBLISH\020"
  "\013\022\024\n\020SIP_REQUEST_INFO\020\014\022\025\n\021SIP_REQUEST_R"
  "EFER\020\r\022\027\n\023SIP_REQUEST_MESSAGE\020\016\022\026\n\022SIP_R"
  "EQUEST_UPDATE\020\017B\027B\023TelephonyProtoEnumsP\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto_once;
static bool descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto = {
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto_initialized, descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto, "frameworks/proto_logging/stats/enums/telephony/enums.proto", 5400,
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto_once, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto_sccs, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto::offsets,
  file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto, 0, file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto, file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto), true);
namespace android {
namespace telephony {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CallBearerEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[0];
}
bool CallBearerEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CallDirectionEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[1];
}
bool CallDirectionEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CallSetupDurationEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[2];
}
bool CallSetupDurationEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataConnectionPowerStateEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[3];
}
bool DataConnectionPowerStateEnum_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 2147483647:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* NetworkTypeEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[4];
}
bool NetworkTypeEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RoamingTypeEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[5];
}
bool RoamingTypeEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SignalStrengthEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[6];
}
bool SignalStrengthEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ServiceStateEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[7];
}
bool ServiceStateEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SimStateEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[8];
}
bool SimStateEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SmsFormatEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[9];
}
bool SmsFormatEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SmsTechEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[10];
}
bool SmsTechEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SmsTypeEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[11];
}
bool SmsTypeEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SmsIncomingErrorEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[12];
}
bool SmsIncomingErrorEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SmsSendResultEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[13];
}
bool SmsSendResultEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataProfileEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[14];
}
bool DataProfileEnum_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 1000:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataDeactivateReasonEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[15];
}
bool DataDeactivateReasonEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ApnProtocolEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[16];
}
bool ApnProtocolEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataStallRecoveryActionEnum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[17];
}
bool DataStallRecoveryActionEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CodecQuality_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[18];
}
bool CodecQuality_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SimSpecfifcSettingsRestoreResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[19];
}
bool SimSpecfifcSettingsRestoreResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SimSpecificSettingsRestoreCase_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[20];
}
bool SimSpecificSettingsRestoreCase_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SimSpecificSettingsRestoreMatchingCriteria_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[21];
}
bool SimSpecificSettingsRestoreMatchingCriteria_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ImsFeatureTag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[22];
}
bool ImsFeatureTag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SipRequestMethodType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2ftelephony_2fenums_2eproto[23];
}
bool SipRequestMethodType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace telephony
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
