// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/proto_logging/stats/enums/stats/location/location_enums.proto

#include "frameworks/proto_logging/stats/enums/stats/location/location_enums.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace android {
namespace stats {
namespace location {
}  // namespace location
}  // namespace stats
}  // namespace android
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nHframeworks/proto_logging/stats/enums/s"
  "tats/location/location_enums.proto\022\026andr"
  "oid.stats.location*\323\001\n\031LocationManagerSe"
  "rviceApi\022\017\n\013API_UNKNOWN\020\000\022 \n\034API_REQUEST"
  "_LOCATION_UPDATES\020\001\022&\n\"API_ADD_GNSS_MEAS"
  "UREMENTS_LISTENER\020\002\022%\n!API_REGISTER_GNSS"
  "_STATUS_CALLBACK\020\003\022\030\n\024API_REQUEST_GEOFEN"
  "CE\020\004\022\032\n\026API_SEND_EXTRA_COMMAND\020\005*0\n\nUsag"
  "eState\022\021\n\rUSAGE_STARTED\020\000\022\017\n\013USAGE_ENDED"
  "\020\001*v\n\014ProviderType\022\024\n\020PROVIDER_UNKNOWN\020\000"
  "\022\024\n\020PROVIDER_NETWORK\020\001\022\020\n\014PROVIDER_GPS\020\002"
  "\022\024\n\020PROVIDER_PASSIVE\020\003\022\022\n\016PROVIDER_FUSED"
  "\020\004*u\n\014CallbackType\022\024\n\020CALLBACK_UNKNOWN\020\000"
  "\022\033\n\027CALLBACK_NOT_APPLICABLE\020\001\022\025\n\021CALLBAC"
  "K_LISTENER\020\002\022\033\n\027CALLBACK_PENDING_INTENT\020"
  "\003*\231\001\n\026LocationRequestQuality\022\023\n\017QUALITY_"
  "UNKNOWN\020\000\022\021\n\rACCURACY_FINE\020d\022\022\n\016ACCURACY"
  "_BLOCK\020f\022\021\n\rACCURACY_CITY\020h\022\017\n\nPOWER_NON"
  "E\020\310\001\022\016\n\tPOWER_LOW\020\311\001\022\017\n\nPOWER_HIGH\020\313\001*\227\002"
  "\n\035LocationRequestIntervalBucket\022\024\n\020INTER"
  "VAL_UNKNOWN\020\000\022$\n INTERVAL_BETWEEN_0_SEC_"
  "AND_1_SEC\020\001\022$\n INTERVAL_BETWEEN_1_SEC_AN"
  "D_5_SEC\020\002\022$\n INTERVAL_BETWEEN_5_SEC_AND_"
  "1_MIN\020\003\022%\n!INTERVAL_BETWEEN_1_MIN_AND_10"
  "_MIN\020\004\022&\n\"INTERVAL_BETWEEN_10_MIN_AND_1_"
  "HOUR\020\005\022\037\n\033INTERVAL_LARGER_THAN_1_HOUR\020\006*"
  "\203\001\n\032SmallestDisplacementBucket\022\024\n\020DISTAN"
  "CE_UNKNOWN\020\000\022\021\n\rDISTANCE_ZERO\020\001\022\036\n\032DISTA"
  "NCE_BETWEEN_0_AND_100\020\002\022\034\n\030DISTANCE_LARG"
  "ER_THAN_100\020\003*\210\002\n\020ExpirationBucket\022\026\n\022EX"
  "PIRATION_UNKNOWN\020\000\022#\n\037EXPIRATION_BETWEEN"
  "_0_AND_20_SEC\020\001\022\'\n#EXPIRATION_BETWEEN_20"
  "_SEC_AND_1_MIN\020\002\022\'\n#EXPIRATION_BETWEEN_1"
  "_MIN_AND_10_MIN\020\003\022(\n$EXPIRATION_BETWEEN_"
  "10_MIN_AND_1_HOUR\020\004\022!\n\035EXPIRATION_LARGER"
  "_THAN_1_HOUR\020\005\022\030\n\024EXPIRATION_NO_EXPIRY\020\006"
  "*\200\002\n\024GeofenceRadiusBucket\022\022\n\016RADIUS_UNKN"
  "OWN\020\000\022\034\n\030RADIUS_BETWEEN_0_AND_100\020\001\022\036\n\032R"
  "ADIUS_BETWEEN_100_AND_200\020\002\022\036\n\032RADIUS_BE"
  "TWEEN_200_AND_300\020\003\022\037\n\033RADIUS_BETWEEN_30"
  "0_AND_1000\020\004\022!\n\035RADIUS_BETWEEN_1000_AND_"
  "10000\020\005\022\035\n\031RADIUS_LARGER_THAN_100000\020\006\022\023"
  "\n\017RADIUS_NEGATIVE\020\007*}\n\022ActivityImportanc"
  "e\022\026\n\022IMPORTANCE_UNKNOWN\020\000\022\022\n\016IMPORTANCE_"
  "TOP\020\001\022 \n\034IMPORTANCE_FORGROUND_SERVICE\020\002\022"
  "\031\n\025IMPORTANCE_BACKGROUND\020\003B\024B\022LocationSt"
  "atsEnums"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto_once;
static bool descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto = {
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto_initialized, descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto, "frameworks/proto_logging/stats/enums/stats/location/location_enums.proto", 1848,
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto_once, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto_sccs, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto::offsets,
  file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto, 0, file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto, file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto), true);
namespace android {
namespace stats {
namespace location {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LocationManagerServiceApi_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto[0];
}
bool LocationManagerServiceApi_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UsageState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto[1];
}
bool UsageState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProviderType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto[2];
}
bool ProviderType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CallbackType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto[3];
}
bool CallbackType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LocationRequestQuality_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto[4];
}
bool LocationRequestQuality_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 102:
    case 104:
    case 200:
    case 201:
    case 203:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LocationRequestIntervalBucket_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto[5];
}
bool LocationRequestIntervalBucket_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SmallestDisplacementBucket_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto[6];
}
bool SmallestDisplacementBucket_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ExpirationBucket_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto[7];
}
bool ExpirationBucket_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GeofenceRadiusBucket_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto[8];
}
bool GeofenceRadiusBucket_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ActivityImportance_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2flocation_2flocation_5fenums_2eproto[9];
}
bool ActivityImportance_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace location
}  // namespace stats
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
