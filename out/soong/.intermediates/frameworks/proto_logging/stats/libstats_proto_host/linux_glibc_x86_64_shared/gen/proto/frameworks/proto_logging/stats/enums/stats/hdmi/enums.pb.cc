// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/proto_logging/stats/enums/stats/hdmi/enums.proto

#include "frameworks/proto_logging/stats/enums/stats/hdmi/enums.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace android {
namespace stats {
namespace hdmi {
}  // namespace hdmi
}  // namespace stats
}  // namespace android
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n;frameworks/proto_logging/stats/enums/s"
  "tats/hdmi/enums.proto\022\022android.stats.hdm"
  "i*\342\002\n\016LogicalAddress\022$\n\027LOGICAL_ADDRESS_"
  "UNKNOWN\020\377\377\377\377\377\377\377\377\377\001\022\006\n\002TV\020\000\022\026\n\022RECORDING_"
  "DEVICE_1\020\001\022\026\n\022RECORDING_DEVICE_2\020\002\022\013\n\007TU"
  "NER_1\020\003\022\025\n\021PLAYBACK_DEVICE_1\020\004\022\020\n\014AUDIO_"
  "SYSTEM\020\005\022\013\n\007TUNER_2\020\006\022\013\n\007TUNER_3\020\007\022\025\n\021PL"
  "AYBACK_DEVICE_2\020\010\022\026\n\022RECORDING_DEVICE_3\020"
  "\t\022\013\n\007TUNER_4\020\n\022\025\n\021PLAYBACK_DEVICE_3\020\013\022\016\n"
  "\nRESERVED_1\020\014\022\016\n\nRESERVED_2\020\r\022\020\n\014SPECIFI"
  "C_USE\020\016\022\035\n\031UNREGISTERED_OR_BROADCAST\020\017*\210"
  "\001\n\020PathRelationship\022)\n%RELATIONSHIP_TO_A"
  "CTIVE_SOURCE_UNKNOWN\020\000\022\024\n\020DIFFERENT_BRAN"
  "CH\020\001\022\014\n\010ANCESTOR\020\002\022\016\n\nDESCENDANT\020\003\022\013\n\007SI"
  "BLING\020\004\022\010\n\004SAME\020\005*_\n\021SendMessageResult\022\037"
  "\n\033SEND_MESSAGE_RESULT_UNKNOWN\020\000\022\013\n\007SUCCE"
  "SS\020\n\022\010\n\004NACK\020\013\022\010\n\004BUSY\020\014\022\010\n\004FAIL\020\r*w\n\020Me"
  "ssageDirection\022\035\n\031MESSAGE_DIRECTION_UNKN"
  "OWN\020\000\022\033\n\027MESSAGE_DIRECTION_OTHER\020\001\022\014\n\010OU"
  "TGOING\020\002\022\014\n\010INCOMING\020\003\022\013\n\007TO_SELF\020\004*\354\002\n\031"
  "UserControlPressedCommand\022(\n$USER_CONTRO"
  "L_PRESSED_COMMAND_UNKNOWN\020\000\022&\n\"USER_CONT"
  "ROL_PRESSED_COMMAND_OTHER\020\001\022\n\n\006NUMBER\020\002\022"
  "\013\n\006SELECT\020\200\002\022\007\n\002UP\020\201\002\022\t\n\004DOWN\020\202\002\022\t\n\004LEFT"
  "\020\203\002\022\n\n\005RIGHT\020\204\002\022\r\n\010RIGHT_UP\020\205\002\022\017\n\nRIGHT_"
  "DOWN\020\206\002\022\014\n\007LEFT_UP\020\207\002\022\016\n\tLEFT_DOWN\020\210\002\022\t\n"
  "\004EXIT\020\215\002\022\016\n\tVOLUME_UP\020\301\002\022\020\n\013VOLUME_DOWN\020"
  "\302\002\022\020\n\013VOLUME_MUTE\020\303\002\022\n\n\005POWER\020\300\002\022\021\n\014POWE"
  "R_TOGGLE\020\353\002\022\016\n\tPOWER_OFF\020\354\002\022\r\n\010POWER_ON\020"
  "\355\002*\311\001\n\022FeatureAbortReason\022 \n\034FEATURE_ABO"
  "RT_REASON_UNKNOWN\020\000\022\027\n\023UNRECOGNIZED_OPCO"
  "DE\020\n\022\"\n\036NOT_IN_CORRECT_MODE_TO_RESPOND\020\013"
  "\022\031\n\025CANNOT_PROVIDE_SOURCE\020\014\022\023\n\017INVALID_O"
  "PERAND\020\r\022\013\n\007REFUSED\020\016\022\027\n\023UNABLE_TO_DETER"
  "MINE\020\017B\022B\016HdmiStatsEnumsP\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto_once;
static bool descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto = {
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto_initialized, descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto, "frameworks/proto_logging/stats/enums/stats/hdmi/enums.proto", 1386,
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto_once, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto_sccs, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto::offsets,
  file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto, 0, file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto, file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto), true);
namespace android {
namespace stats {
namespace hdmi {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LogicalAddress_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto[0];
}
bool LogicalAddress_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PathRelationship_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto[1];
}
bool PathRelationship_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SendMessageResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto[2];
}
bool SendMessageResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageDirection_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto[3];
}
bool MessageDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UserControlPressedCommand_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto[4];
}
bool UserControlPressedCommand_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 256:
    case 257:
    case 258:
    case 259:
    case 260:
    case 261:
    case 262:
    case 263:
    case 264:
    case 269:
    case 320:
    case 321:
    case 322:
    case 323:
    case 363:
    case 364:
    case 365:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FeatureAbortReason_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fhdmi_2fenums_2eproto[5];
}
bool FeatureAbortReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace hdmi
}  // namespace stats
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
