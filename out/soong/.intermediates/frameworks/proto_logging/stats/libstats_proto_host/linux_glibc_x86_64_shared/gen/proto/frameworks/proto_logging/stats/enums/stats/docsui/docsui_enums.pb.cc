// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/proto_logging/stats/enums/stats/docsui/docsui_enums.proto

#include "frameworks/proto_logging/stats/enums/stats/docsui/docsui_enums.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace android {
namespace stats {
namespace docsui {
}  // namespace docsui
}  // namespace stats
}  // namespace android
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[13];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nDframeworks/proto_logging/stats/enums/s"
  "tats/docsui/docsui_enums.proto\022\024android."
  "stats.docsui*|\n\014LaunchAction\022\013\n\007UNKNOWN\020"
  "\000\022\010\n\004OPEN\020\001\022\n\n\006CREATE\020\002\022\017\n\013GET_CONTENT\020\003"
  "\022\r\n\tOPEN_TREE\020\004\022\022\n\016PICK_COPY_DEST\020\005\022\n\n\006B"
  "ROWSE\020\006\022\t\n\005OTHER\020\007*\304\001\n\010MimeType\022\020\n\014MIME_"
  "UNKNOWN\020\000\022\r\n\tMIME_NONE\020\001\022\014\n\010MIME_ANY\020\002\022\024"
  "\n\020MIME_APPLICATION\020\003\022\016\n\nMIME_AUDIO\020\004\022\016\n\n"
  "MIME_IMAGE\020\005\022\020\n\014MIME_MESSAGE\020\006\022\022\n\016MIME_M"
  "ULTIPART\020\007\022\r\n\tMIME_TEXT\020\010\022\016\n\nMIME_VIDEO\020"
  "\t\022\016\n\nMIME_OTHER\020\n*\201\002\n\004Root\022\020\n\014ROOT_UNKNO"
  "WN\020\000\022\r\n\tROOT_NONE\020\001\022\034\n\030ROOT_OTHER_DOCS_P"
  "ROVIDER\020\002\022\016\n\nROOT_AUDIO\020\003\022\027\n\023ROOT_DEVICE"
  "_STORAGE\020\004\022\022\n\016ROOT_DOWNLOADS\020\005\022\r\n\tROOT_H"
  "OME\020\006\022\017\n\013ROOT_IMAGES\020\007\022\020\n\014ROOT_RECENTS\020\010"
  "\022\017\n\013ROOT_VIDEOS\020\t\022\014\n\010ROOT_MTP\020\n\022\030\n\024ROOT_"
  "THIRD_PARTY_APP\020\013\022\022\n\016ROOT_DOCUMENTS\020\014*D\n"
  "\014ContextScope\022\021\n\rSCOPE_UNKNOWN\020\000\022\017\n\013SCOP"
  "E_FILES\020\001\022\020\n\014SCOPE_PICKER\020\002*L\n\010Provider\022"
  "\024\n\020PROVIDER_UNKNOWN\020\000\022\023\n\017PROVIDER_SYSTEM"
  "\020\001\022\025\n\021PROVIDER_EXTERNAL\020\002*\227\005\n\rFileOperat"
  "ion\022\016\n\nOP_UNKNOWN\020\000\022\014\n\010OP_OTHER\020\001\022\013\n\007OP_"
  "COPY\020\002\022\032\n\026OP_COPY_INTRA_PROVIDER\020\003\022\033\n\027OP"
  "_COPY_SYSTEM_PROVIDER\020\004\022\035\n\031OP_COPY_EXTER"
  "NAL_PROVIDER\020\005\022\013\n\007OP_MOVE\020\006\022\032\n\026OP_MOVE_I"
  "NTRA_PROVIDER\020\007\022\033\n\027OP_MOVE_SYSTEM_PROVID"
  "ER\020\010\022\035\n\031OP_MOVE_EXTERNAL_PROVIDER\020\t\022\r\n\tO"
  "P_DELETE\020\n\022\r\n\tOP_RENAME\020\013\022\021\n\rOP_CREATE_D"
  "IR\020\014\022\022\n\016OP_OTHER_ERROR\020\r\022\023\n\017OP_DELETE_ER"
  "ROR\020\016\022\021\n\rOP_MOVE_ERROR\020\017\022\021\n\rOP_COPY_ERRO"
  "R\020\020\022\023\n\017OP_RENAME_ERROR\020\021\022\027\n\023OP_CREATE_DI"
  "R_ERROR\020\022\022\036\n\032OP_COMPRESS_INTRA_PROVIDER\020"
  "\023\022\037\n\033OP_COMPRESS_SYSTEM_PROVIDER\020\024\022!\n\035OP"
  "_COMPRESS_EXTERNAL_PROVIDER\020\025\022\035\n\031OP_EXTR"
  "ACT_INTRA_PROVIDER\020\026\022\036\n\032OP_EXTRACT_SYSTE"
  "M_PROVIDER\020\027\022 \n\034OP_EXTRACT_EXTERNAL_PROV"
  "IDER\020\030\022\025\n\021OP_COMPRESS_ERROR\020\031\022\024\n\020OP_EXTR"
  "ACT_ERROR\020\032*\222\002\n\020SubFileOperation\022\022\n\016SUB_"
  "OP_UNKNOWN\020\000\022\024\n\020SUB_OP_QUERY_DOC\020\001\022\026\n\022SU"
  "B_OP_QUERY_CHILD\020\002\022\024\n\020SUB_OP_OPEN_FILE\020\003"
  "\022\024\n\020SUB_OP_READ_FILE\020\004\022\025\n\021SUB_OP_CREATE_"
  "DOC\020\005\022\025\n\021SUB_OP_WRITE_FILE\020\006\022\025\n\021SUB_OP_D"
  "ELETE_DOC\020\007\022\035\n\031SUB_OP_OBTAIN_STREAM_TYPE"
  "\020\010\022\025\n\021SUB_OP_QUICK_MOVE\020\t\022\025\n\021SUB_OP_QUIC"
  "K_COPY\020\n*`\n\016CopyMoveOpMode\022\020\n\014MODE_UNKNO"
  "WN\020\000\022\021\n\rMODE_PROVIDER\020\001\022\022\n\016MODE_CONVERTE"
  "D\020\002\022\025\n\021MODE_CONVENTIONAL\020\003*\225\001\n\tAuthority"
  "\022\020\n\014AUTH_UNKNOWN\020\000\022\016\n\nAUTH_OTHER\020\001\022\016\n\nAU"
  "TH_MEDIA\020\002\022\031\n\025AUTH_STORAGE_INTERNAL\020\003\022\031\n"
  "\025AUTH_STORAGE_EXTERNAL\020\004\022\022\n\016AUTH_DOWNLOA"
  "DS\020\005\022\014\n\010AUTH_MTP\020\006*\215\006\n\nUserAction\022\022\n\016ACT"
  "ION_UNKNOWN\020\000\022\020\n\014ACTION_OTHER\020\001\022\017\n\013ACTIO"
  "N_GRID\020\002\022\017\n\013ACTION_LIST\020\003\022\024\n\020ACTION_SORT"
  "_NAME\020\004\022\024\n\020ACTION_SORT_DATE\020\005\022\024\n\020ACTION_"
  "SORT_SIZE\020\006\022\024\n\020ACTION_SORT_TYPE\020\007\022\021\n\rACT"
  "ION_SEARCH\020\010\022\024\n\020ACTION_SHOW_SIZE\020\t\022\024\n\020AC"
  "TION_HIDE_SIZE\020\n\022\023\n\017ACTION_SETTINGS\020\013\022\022\n"
  "\016ACTION_COPY_TO\020\014\022\022\n\016ACTION_MOVE_TO\020\r\022\021\n"
  "\rACTION_DELETE\020\016\022\021\n\rACTION_RENAME\020\017\022\025\n\021A"
  "CTION_CREATE_DIR\020\020\022\025\n\021ACTION_SELECT_ALL\020"
  "\021\022\020\n\014ACTION_SHARE\020\022\022\017\n\013ACTION_OPEN\020\023\022\030\n\024"
  "ACTION_SHOW_ADVANCED\020\024\022\030\n\024ACTION_HIDE_AD"
  "VANCED\020\025\022\025\n\021ACTION_NEW_WINDOW\020\026\022\032\n\026ACTIO"
  "N_PASTE_CLIPBOARD\020\027\022\031\n\025ACTION_COPY_CLIPB"
  "OARD\020\030\022\026\n\022ACTION_DRAG_N_DROP\020\031\022#\n\037ACTION"
  "_DRAG_N_DROP_MULTI_WINDOW\020\032\022\030\n\024ACTION_CU"
  "T_CLIPBOARD\020\033\022\023\n\017ACTION_COMPRESS\020\034\022\025\n\021AC"
  "TION_EXTRACT_TO\020\035\022\036\n\032ACTION_VIEW_IN_APPL"
  "ICATION\020\036\022\024\n\020ACTION_INSPECTOR\020\037\022\026\n\022ACTIO"
  "N_SEARCH_CHIP\020 \022\031\n\025ACTION_SEARCH_HISTORY"
  "\020!*\305\001\n\023InvalidScopedAccess\022\035\n\031SCOPED_DIR"
  "_ACCESS_UNKNOWN\020\000\022\'\n#SCOPED_DIR_ACCESS_I"
  "NVALID_ARGUMENTS\020\001\022\'\n#SCOPED_DIR_ACCESS_"
  "INVALID_DIRECTORY\020\002\022\033\n\027SCOPED_DIR_ACCESS"
  "_ERROR\020\003\022 \n\034SCOPED_DIR_ACCESS_DEPRECATED"
  "\020\004*\336\001\n\nSearchType\022\020\n\014TYPE_UNKNOWN\020\000\022\024\n\020T"
  "YPE_CHIP_IMAGES\020\001\022\024\n\020TYPE_CHIP_AUDIOS\020\002\022"
  "\024\n\020TYPE_CHIP_VIDEOS\020\003\022\022\n\016TYPE_CHIP_DOCS\020"
  "\004\022\027\n\023TYPE_SEARCH_HISTORY\020\005\022\026\n\022TYPE_SEARC"
  "H_STRING\020\006\022\031\n\025TYPE_CHIP_LARGE_FILES\020\007\022\034\n"
  "\030TYPE_CHIP_FROM_THIS_WEEK\020\010*b\n\nSearchMod"
  "e\022\022\n\016SEARCH_UNKNOWN\020\000\022\022\n\016SEARCH_KEYWORD\020"
  "\001\022\020\n\014SEARCH_CHIPS\020\002\022\032\n\026SEARCH_KEYWORD_N_"
  "CHIPS\020\003B\002P\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto_once;
static bool descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto = {
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto_initialized, descriptor_table_protodef_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto, "frameworks/proto_logging/stats/enums/stats/docsui/docsui_enums.proto", 3331,
  &descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto_once, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto_sccs, descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto::offsets,
  file_level_metadata_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto, 0, file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto, file_level_service_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto), true);
namespace android {
namespace stats {
namespace docsui {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LaunchAction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[0];
}
bool LaunchAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MimeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[1];
}
bool MimeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Root_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[2];
}
bool Root_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ContextScope_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[3];
}
bool ContextScope_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Provider_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[4];
}
bool Provider_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FileOperation_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[5];
}
bool FileOperation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SubFileOperation_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[6];
}
bool SubFileOperation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CopyMoveOpMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[7];
}
bool CopyMoveOpMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Authority_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[8];
}
bool Authority_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UserAction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[9];
}
bool UserAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* InvalidScopedAccess_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[10];
}
bool InvalidScopedAccess_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SearchType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[11];
}
bool SearchType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SearchMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto);
  return file_level_enum_descriptors_frameworks_2fproto_5flogging_2fstats_2fenums_2fstats_2fdocsui_2fdocsui_5fenums_2eproto[12];
}
bool SearchMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace docsui
}  // namespace stats
}  // namespace android
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
